<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="com.pennant, com.pennanttech" />

	<import resource="launch-context.xml" />
	<import resource="eod-batch-config-db.xml" />
	<import resource="eod-batch-config-beans.xml" />
	<import resource="eod-batch-config-tasklet.xml" />
	<import resource="eod-batch-config-service.xml" />
	<import resource="interfaceBatchContext.xml" />

	<!-- _____________________________________________ JOB FLOW DEFINITION _________________________________________ -->
	<!-- The job definition for the PLF End of Day -->
	<job id="plfEodJob" xmlns="http://www.springframework.org/schema/batch" incrementer="PFSJobParametersIncrementer">
		<listeners>
			<listener ref="eodJobListener" />
		</listeners>

		<step id="letterGenerationQueuing">
			<tasklet ref="letterGenerationQueueTasklet" />
			<next on="*" to="letterGenerationMaster" />
			<fail on="FAILED" />
		</step>

		<step id="letterGenerationMaster">
			<partition step="letterGeneration" partitioner="letterGeneratePartitioner">
				<handler task-executor="taskExecutor" />
			</partition>
			<next on="*" to="letterGenerationClear" />
			<fail on="FAILED" />
		</step>

		<step id="letterGenerationClear">
			<tasklet ref="letterGenerationClearTasklet" />
			<fail on="FAILED" />
			<end on="*" exit-code="COMPLETED" />
		</step>
	</job>
	<step id="microEOD" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="microEODTaskLet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<step id="oTSMaster" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="oTSTaskLet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<step id="excessKnockOff" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="excessKnockOffTasklet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<step id="letterGeneration" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="letterGenerationTasklet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<step id="assetClassification" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="assetClassificationTaskLet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<step id="effAssetClassification" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="effAssetClassificationTaskLet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<step id="provisionCalc" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="provisionClacTaskLet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor">
		<constructor-arg value="PLF_EOD_THREAD_" />
		<property name="ConcurrencyLimit" value="500" />
	</bean>

	<bean id="partitioningMaster" class="com.pennant.backend.endofday.tasklet.PartitioningMaster" />

	<bean id="assetClassificationPartition" class="com.pennanttech.pff.npa.eod.tasklet.AssetClassificationPartition" />
	<bean id="effAssetClassificationPartition"
		class="com.pennanttech.pff.npa.eod.tasklet.EffAssetClassificationPartition" />
	<bean id="provisionCalcPartition" class="com.pennanttech.pff.provision.eod.tasklet.ProvisionCalcPartition" />

	<bean id="autoWriteOffCalcPartition"
		class="com.pennanttech.pff.autowriteoff.eod.tasklet.AutoWriteOffCalcPartition" />
	<step id="autoWriteOffCalc" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="autoWriteOffClacTaskLet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>


	<step id="ledgerDownloadProcess" xmlns="http://www.springframework.org/schema/batch">
		<tasklet ref="ledgerDownloadProcessTaskLet" allow-start-if-complete="true">
			<transaction-attributes propagation="NEVER" />
		</tasklet>
	</step>

	<bean id="ledgerDownloadPartition" class="com.pennant.backend.ledger.eod.tasklet.LedgerDownloadPartition" />

	<bean id="otsPartition" class="com.pennant.backend.endofday.tasklet.OTSPartition" />

	<bean id="excessKnockOffPartition" class="com.pennanttech.pff.knockoff.eod.tasklet.ExcessKnockOffPartition" />

	<bean id="baselOneDumpService" class="com.pennanttech.external.extractions.service.BaselOneDumpService">
		<property name="extStageDao" ref="extStageDao" />
	</bean>

	<bean id="almDumpService" class="com.pennanttech.external.extractions.service.ALMDumpService">
		<property name="extStageDao" ref="extStageDao" />
	</bean>

	<bean id="baselTwoDumpService" class="com.pennanttech.external.extractions.service.BaselTwoDumpService">
		<property name="extStageDao" ref="extStageDao" />
	</bean>

	<bean id="rpmsDumpService" class="com.pennanttech.external.extractions.service.RPMSDumpService">
		<property name="extStageDao" ref="extStageDao" />
	</bean>

	<bean id="microEodExternalProcessHook"
		class="com.pennanttech.external.extractions.service.ExtExtractionDumpService">
		<property name="baselOneDumpService" ref="baselOneDumpService" />
		<property name="almDumpService" ref="almDumpService" />
		<property name="baselTwoDumpService" ref="baselTwoDumpService" />
		<property name="rpmsDumpService" ref="rpmsDumpService" />
	</bean>

	<bean id="beforeEodExternalProcessHook"
		class="com.pennanttech.external.extractions.service.BeforeEodExternalProcessService">
		<property name="extStageDao" ref="extStageDao" />
	</bean>
</beans>