<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:lang="http://www.springframework.org/schema/lang"
	xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

	<!-- beforeEOD -->
	<bean id="beforeEODTaskLet" class="com.pennant.backend.endofday.tasklet.BeforeEOD"/>

	<!-- loanCancel -->
	<bean id="loanCancelTaskLet" class="com.pennant.backend.endofday.tasklet.AutoFinanceCancellation" />

	<!-- prepareCustomerQueue -->
	<bean id="prepareCustomerQueueTaskLet" class="com.pennant.backend.endofday.tasklet.PrepareCustomerQueue" />

	<!-- FINCONGLEXTRACTION -->
	<bean id="finconGLExtractionTasklet" class="com.pennant.backend.endofday.tasklet.FinconGLExtractionTasklet" />

	<!-- UCICEXTRACTION -->
	<bean id="ucicExtractionTasklet" class="com.pennant.backend.endofday.tasklet.UCICExtractionTasklet" />

	<!-- MicroEOD -->
	<bean id="microEODTaskLet" class="com.pennant.backend.endofday.tasklet.MicroEOD" />

	<bean id="microEODMonitorTaskLet" class="com.pennant.backend.endofday.tasklet.MicroEODMonitor" />

	<bean id="snapShotPreparationTaskLet" class="com.pennant.backend.endofday.tasklet.SnapShotPreparation" />

	<!-- prepareCustomerGroupQueue -->
	<bean id="prepareCustomerGroupQueueTaskLet" class="com.pennant.backend.endofday.tasklet.PrepareCustomerGroupQueue" />

	<bean id="institutionLimitUpdateTaskLet" class="com.pennant.backend.endofday.tasklet.InstitutionLimitUpdate" />

	<bean id="limitCustomerGroupsUpdateTaskLet" class="com.pennant.backend.endofday.tasklet.LimitCustomerGroupsUpdate" />

	<bean id="retailcibilTaskLet" class="com.pennant.backend.endofday.tasklet.RetailCibil" />

	<bean id="corporatecibilTaskLet" class="com.pennant.backend.endofday.tasklet.CorporateCibil" />

	<bean id="financeHoldReleaseTasklet" class="com.pennant.backend.endofday.tasklet.FinanceHoldReleaseTasklet" />

	<bean id="datesUpdateTaskLet" class="com.pennant.backend.endofday.tasklet.DatesUpdate" parent="sequenceDao" />

	<bean id="limitsUpdateTaskLet" class="com.pennant.backend.endofday.tasklet.LimitsUpdate" />

	<!-- Start of the month Decider -->
	<bean id="startOfMonthDecider" class="com.pennant.backend.endofday.limitdecider.StartOfMonthDecider" />
	<!-- End Of Month Decider -->
	<bean id="endOfMonthDecider" class="com.pennant.backend.endofday.limitdecider.EndOfMonthDecider" />

	<bean id="oTSTaskLet" class="com.pennant.backend.endofday.tasklet.OTSTasklet" />

	<!-- To be deleted -->

	<!-- Audit Data Purging -->
	<bean id="auditDataPurgingTaskLet" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="auditDataPurgingTarget" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_NOT_SUPPORTED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="auditDataPurgingTarget" class="com.pennant.backend.endofday.tasklet.AuditDataPurging">
		<property name="dataPurgingProcess" ref="dataPurgingProcess" />
	</bean>

	<!-- Notifications -->
	<bean id="notificationTasklet" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="notificationTarget" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="notificationTarget" class="com.pennant.backend.endofday.tasklet.Notification">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- Not used -->
	<!-- Backup Data base Before Eod -->
	<bean id="backupDatabaseBeforeEodTaskLet"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="backupDatabaseTargetBeforeEod" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_NOT_SUPPORTED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="backupDatabaseTargetBeforeEod" class="com.pennant.backend.endofday.tasklet.BackupDatabaseTaskLet">
		<property name="backupDatabase" ref="backupDatabase" />
		<property name="beforeEod" value="true" />
	</bean>
	<!-- Backup Data base After Eod -->
	<bean id="backupDatabaseAfterEodTaskLet"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="backupDatabaseTargetAfterEod" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_NOT_SUPPORTED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="backupDatabaseTargetAfterEod" class="com.pennant.backend.endofday.tasklet.BackupDatabaseTaskLet">
		<property name="backupDatabase" ref="backupDatabase" />
		<property name="beforeEod" value="false" />
	</bean>
	<!-- Capitalization Postings -->
	<bean id="capitalizationPostingsTasklet" class="com.pennant.backend.endofday.tasklet.CapitalizationPostings">
		<property name="financeProfitDetailDAO" ref="profitDetailsDAO" />
		<property name="suspensePostingUtil" ref="suspensePostingUtil" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Overdue Details Daily Download -->
	<bean id="oDDetailDownloadTasklet" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="oDDetailTarget" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="oDDetailTarget" class="com.pennant.backend.endofday.tasklet.ODDetailDownload">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- Commitment Expiry Details Updation -->
	<bean id="commitmentExpiryProcessTasklet"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="commitmentExpiryProcessTarget" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="commitmentExpiryProcessTarget" class="com.pennant.backend.endofday.tasklet.CommitmentExpiryProcess">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="autoKnockOffDataBackUpTasklet"
		class="com.pennant.backend.endofday.tasklet.AutoKnockOffDataBackUpTasklet" />

	<bean id="processInActiveFinancesTaskLet" class="com.pennant.backend.endofday.tasklet.ProcessInActiveFinances" />

	<bean id="processINDASForInActiveFinancesTasklet"
		class="com.pennanttech.pff.indas.eod.tasklet.ProcessINDASForInActiveFinances">
		<property name="dataSource" ref="dataSource" />
		<property name="projectedAmortizationDAO" ref="projectedAmortizationDAO" />
		<property name="projectedAmortizationService" ref="projectedAmortizationService" />
	</bean>

	<bean id="collectionDataDownLoadTaskLet" class="com.pennant.backend.endofday.tasklet.CollectionDataDownload" />

	<bean id="collectionNotificationTaskLet" class="com.pennant.backend.endofday.tasklet.CollectionNotification" />

	<bean id="ledgerNotificationTaskLet" class="com.pennant.backend.endofday.tasklet.LedgerNotification" />

	<bean id="ledgerDownloadQueueTasklet" class="com.pennant.backend.ledger.eod.tasklet.LedgerDownloadQueue" />

	<bean id="ledgerDownloadProcessTaskLet" class="com.pennant.backend.ledger.eod.tasklet.LedgerDownloadProcess" />

	<bean id="ledgerDownloadTaskLet" class="com.pennant.backend.ledger.eod.tasklet.LedgerDownload" />

	<bean id="ledgerSaveLogTaskLet" class="com.pennant.backend.ledger.eod.tasklet.LedgerSaveLog" />


	<bean id="loadCollateralRevaluationDataTaskLet"
		class="com.pennanttech.pff.eod.collateral.reval.LoadCollateralRevaluationDataTasklet" parent="basicDao" />

	<bean id="collateralRevaluationItemReader"
		class="com.pennanttech.pff.eod.collateral.reval.CollateralRevaluationItemReader" scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="rowMapper">
			<bean class="com.pennanttech.pff.eod.collateral.reval.CollateralRevaluationRowMapper" />
		</property>
	</bean>


	<bean id="collateralRevaluationProcessor"
		class="com.pennanttech.pff.eod.collateral.reval.CollateralRevaluationProcessor" scope="step" parent="basicDao" />

	<bean id="collateralRevaluationRowMapper"
		class="com.pennanttech.pff.eod.collateral.reval.CollateralRevaluationRowMapper" scope="step" />
	<bean id="collateralRevaluationItemWriter"
		class="com.pennanttech.pff.eod.collateral.reval.CollateralRevaluationItemWriter" scope="step" parent="basicDao" />

	<bean id="gSTDownloadTaskLet" class="com.pennant.backend.endofday.tasklet.GSTDownload" />

	<bean id="manualAdvisesCancellationTaskLet"
		class="com.pennanttech.pff.manualadvise.eod.tasklet.ManualAdvisesCancellation" />

	<!-- NotifyLoanClosureDetailsToEFS -->
	<bean id="notifyLoanClosureDetailsToEFSTaskLet"
		class="com.pennant.backend.endofday.tasklet.NotifyLoanClosureDetailsToEFS" />

	<bean id="beforeAssetClassificationTasklet" class="com.pennanttech.pff.npa.eod.tasklet.BeforeAssetClassification" />
	<bean id="assetClassificationQueueTasklet" class="com.pennanttech.pff.npa.eod.tasklet.AssetClassificationQueue" />
	<bean id="assetClassificationTaskLet" class="com.pennanttech.pff.npa.eod.tasklet.AssetClassificationTaskLet" />

	<bean id="effAssetClassificationQueueTasklet"
		class="com.pennanttech.pff.npa.eod.tasklet.EffAssetClassificationQueue" />
	<bean id="effAssetClassificationTaskLet" class="com.pennanttech.pff.npa.eod.tasklet.EffAssetClassificationTaskLet" />

	<bean id="provisionCalcQueueTasklet" class="com.pennanttech.pff.provision.eod.tasklet.ProvisionCalcQueue" />
	<bean id="provisionClacTaskLet" class="com.pennanttech.pff.provision.eod.tasklet.ProvisionClacTaskLet" />

	<bean id="loadAutoKnockOffProcessTasklet"
		class="com.pennant.backend.endofday.tasklet.LoadAutoKnockOffProcessDataTasklet" parent="basicDao">
		<property name="autoKnockOffDAO" ref="autoKnockOffDAO" />
	</bean>

	<bean id="customerDataPreperationTaskLet" class="com.pennant.backend.endofday.tasklet.CustomerDataExport" />

	<bean id="masterDataPreparationTaskLet" class="com.pennant.backend.endofday.tasklet.MasterDataExport" />

	<bean id="dmsRetrieveProcessTaskLet" class="com.pennant.backend.endofday.tasklet.DMSRetrieveProcess" />

	<bean id="cashFlowPreperationTaskLet" class="com.pennant.backend.endofday.tasklet.CashFlowPreperation">
		<property name="cashFlowService" ref="cashFlowService" />
	</bean>

	<bean id="presentmentPreparationTasklet" class="com.pennant.pff.presentment.tasklet.PreparationTasklet" />

	<bean id="waiverCancellationTasklet" class="com.pennant.backend.endofday.tasklet.WaiverCancellationTasklet" />

	<bean id="oTsQueueTasklet" class="com.pennant.backend.endofday.tasklet.OTSQueue" />

	<bean id="excessKnockOffLoadingTaskLet" class="com.pennanttech.pff.knockoff.eod.tasklet.ExcessKnockOffLoading" />

	<bean id="excessKnockOffQueuingTaskLet" class="com.pennanttech.pff.knockoff.eod.tasklet.ExcessKnockOffQueuing" />

	<bean id="excessKnockOffTasklet" class="com.pennanttech.pff.knockoff.eod.tasklet.ExcessKnockOffTasklet" />

	<bean id="autoWriteOffCalcQueueTasklet" class="com.pennanttech.pff.autowriteoff.eod.tasklet.AutoWriteOffCalcQueue" />

	<bean id="autoWriteOffClacTaskLet" class="com.pennanttech.pff.autowriteoff.eod.tasklet.AutoWriteOffClacTaskLet" />
	
	<bean id="autoRefundQueuingTaskLet" class="com.pennanttech.pff.refund.eod.tasklet.AutoRefundQueueTasklet">
		<constructor-arg ref="autoRefundQueueDAO"/>
	</bean>

	<bean id="autoRefundTasklet" class="com.pennanttech.pff.refund.eod.tasklet.AutoRefundTasklet">
		<constructor-arg ref="autoRefundQueueDAO"/>
	</bean>
	
	<bean id="autoRefundPartition" class="com.pennanttech.pff.refund.eod.tasklet.AutoRefundPartitioner">
		<constructor-arg ref="autoRefundQueueDAO"/>
	</bean>
	
	<bean id="autoRefundClearTasklet" class="com.pennanttech.pff.refund.eod.tasklet.AutoRefundClearTasklet">
		<constructor-arg ref="autoRefundQueueDAO"/>
	</bean>

	<bean id="letterGeneratePartitioner" class="com.pennant.pff.letter.partitioner.LetterGeneratePartitioner">
		<constructor-arg ref="letterGenerationJobQueueDAO"/>
	</bean>
	
	<bean id="letterGenerationTasklet" class="com.pennant.pff.letter.LetterGenerationTasklet">
		<constructor-arg ref="letterGenerationJobQueueDAO"/>
	</bean>
	
	<bean id="letterGenerationClearTasklet" class="com.pennant.pff.letter.LetterGenerationClearTasklet">
		<constructor-arg ref="letterGenerationJobQueueDAO"/>
	</bean>
	
	<bean id="letterGenerationQueueTasklet" class="com.pennant.pff.letter.LetterGenerationQueueTasklet">
		<constructor-arg ref="letterGenerationJobQueueDAO"/>
	</bean>
	
</beans>