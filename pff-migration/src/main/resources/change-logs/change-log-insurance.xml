<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />


	<changeSet id="01" author="Durgaprasad G">
		<createTable tableName="InsuranceDetails">
				<column name="Id" type="bigint" />
				<column name="Reference" type="varchar(20)" />
				<column name="FinReference" type="varchar(20)" />
				<column name="StartDate" type="datetime" />
				<column name="EndDate" type="datetime" />
				<column name="Term" type="int" />
				<column name="CoverageAmount" type="decimal(18,0)" />
				<column name="PolicyNumber" type="Varchar(20)" />
				<column name="IssuanceDate" type="datetime" />
				<column name="IssuanceStatus" type="varchar(10)" />
				<column name="PartnerPremium" type="decimal(18,0)" />
				<column name="PartnerReceivedDate" type="datetime" />
				<column name="AWBNo1" type="varchar(20)" />
				<column name="AWBNo2" type="varchar(20)" />
				<column name="AWBNo3" type="varchar(20)" />
				<column name="DispatchStatus1" type="varchar(20)" />
				<column name="DispatchStatus2" type="varchar(20)" />
				<column name="DispatchStatus3" type="varchar(20)" />
				<column name="ReasonofRTO1" type="varchar(100)" />
				<column name="ReasonofRTO2" type="varchar(100)" />
				<column name="ReasonofRTO3" type="varchar(100)" />
				<column name="DispatchDateAttempt1" type="datetime" />
				<column name="DispatchDateAttempt2" type="datetime" />
				<column name="DispatchDateAttempt3" type="datetime" />
				<column name="MedicalStatus" type="boolean" defaultValue="false" />
				<column name="PendencyReasonCategory" type="varchar(20)" />
				<column name="PendencyReason" type="varchar(50)" />
				<column name="InsPendencyResReq" type="boolean" defaultValue="false" />
				<column name="FPR" type="varchar(6)" />
				<column name="PolicyStatus" type="varchar(10)" />
				<column name="FormHandoverDate" type="datetime" />
				<column name="NomineeName" type="varchar(200)" />
				<column name="NomineeRelation" type="varchar(50)" />
				<column name="VASProviderId" type="bigint" />
				<column name="ReconStatus" type="varchar(20)" />
				<column name="version" type="int" />
				<column name="lastmntby" type="bigint" />
				<column name="lastmnton" type="datetime" />
				<column name="recordstatus" type="varchar(50)" />
				<column name="rolecode" type="varchar(100)" />
				<column name="nextrolecode" type="varchar(200)" />
				<column name="taskid" type="varchar(50)" />
				<column name="nexttaskid" type="varchar(200)" />
				<column name="recordtype" type="varchar(50)" />
				<column name="workflowid" type="bigint" defaultValue="0"/>
		</createTable>
	</changeSet>
	
	<changeSet id="02" author="Durgaprasad g">
		<addPrimaryKey tableName="InsuranceDetails" columnNames="Id" constraintName="PK_InsuranceDetails_Id"/>
	</changeSet>
	
	<changeSet id="03" author="DurgaPrasad G">
	   <addUniqueConstraint tableName="InsuranceDetails" columnNames="Reference" constraintName="PK_InsuranceDetails_Reference"/>
	</changeSet>
	
	<changeSet id="04" author="Durgaprasad G">
		<createTable tableName="InsuranceDetails_DataEngine">
				<column name="Reference" type="varchar(20)" />
				<column name="FinReference" type="varchar(20)" />
				<column name="StartDate" type="datetime" />
				<column name="EndDate" type="datetime" />
				<column name="Term" type="int" />
				<column name="CoverageAmount" type="decimal(18,0)" />
				<column name="PolicyNumber" type="Varchar(20)" />
				<column name="IssuanceDate" type="datetime" />
				<column name="IssuanceStatus" type="varchar(10)" />
				<column name="PartnerPremium" type="decimal(18,0)" />
				<column name="PartnerReceivedDate" type="datetime" />
				<column name="AWBNoF" type="varchar(20)" />
				<column name="DispatchStatusF" type="varchar(20)" />
				<column name="ReasonOfRTOF" type="varchar(100)" />
				<column name="DispatchDateAttempt1" type="datetime" />
				<column name="DispatchDateAttempt2" type="datetime" />
				<column name="DispatchDateAttempt3" type="datetime" />
				<column name="MedicalStatusF" type="varchar(3)" />
				<column name="PendencyReasonCategory" type="varchar(20)" />
				<column name="PendencyReason" type="varchar(50)" />
				<column name="PendencyResReqF" type="varchar(50)"/>
				<column name="FPR" type="varchar(6)" />
				<column name="PolicyStatus" type="varchar(10)" />
				<column name="FormHandoverDate" type="datetime" />
				<column name="NomineeName" type="varchar(200)" />
				<column name="NomineeRelation" type="varchar(50)" />
		</createTable>
	</changeSet>
	
	<changeSet id="05" author="DurgaPrasad G">
		<addColumn tableName="VASRECORDING">
			<column name="Status" type="varchar(20)"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="06" author="DurgaPrasad G">
		<addColumn tableName="VASRECORDING_Temp">
			<column name="Status" type="varchar(20)"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="07" author="DurgaprasadG">
	 <createView viewName="VASRECORDING_AVIEW" replaceIfExists="true">
	 	  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting, 
          T1.PaidAmt, T1.WaivedAmt, T1.Status
          FROM   VASRecording  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
	 </createView>
	</changeSet>
	
	<changeSet id="08" author="DurgaprasadG">
	 <createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
	 	    SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting,
          T1.PaidAmt, T1.WaivedAmt, T1.Status
          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
	 </createView>
	</changeSet>
	
	<changeSet id="09" author="DurgaprasadG">
	 <createView viewName="VASRECORDING_VIEW" replaceIfExists="true">
			SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status
		          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		UNION ALL
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status
		          FROM   VASRecording  T1 LEFT OUTER JOIN
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		          WHERE     NOT EXISTS
		                    (SELECT     1  FROM          VASRecording_Temp WHERE      VasReference = T1.VasReference)
	 </createView>
	</changeSet>
	
	
	<changeSet id="10" author="Durgaprasad G" dbms="mssql">
		<createTable tableName="SeqInsuranceDetails">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
  </changeSet>
	<changeSet id="11" author="Durgaprasad G" dbms="oracle,postgresql">
		<createSequence sequenceName="SeqInsuranceDetails"/>
  </changeSet>

<changeSet id="12" author="Durgaprasad G">
		<createTable tableName="InsuranceDetails_Temp">
				<column name="Id" type="bigint" />
				<column name="Reference" type="varchar(20)" />
				<column name="FinReference" type="varchar(20)" />
				<column name="StartDate" type="datetime" />
				<column name="EndDate" type="datetime" />
				<column name="Term" type="int" />
				<column name="CoverageAmount" type="decimal(18,0)" />
				<column name="PolicyNumber" type="Varchar(20)" />
				<column name="IssuanceDate" type="datetime" />
				<column name="IssuanceStatus" type="varchar(10)" />
				<column name="PartnerPremium" type="decimal(18,0)" />
				<column name="PartnerReceivedDate" type="datetime" />
				<column name="AWBNo1" type="varchar(20)" />
				<column name="AWBNo2" type="varchar(20)" />
				<column name="AWBNo3" type="varchar(20)" />
				<column name="DispatchStatus1" type="varchar(20)" />
				<column name="DispatchStatus2" type="varchar(20)" />
				<column name="DispatchStatus3" type="varchar(20)" />
				<column name="ReasonofRTO1" type="varchar(100)" />
				<column name="ReasonofRTO2" type="varchar(100)" />
				<column name="ReasonofRTO3" type="varchar(100)" />
				<column name="DispatchDateAttempt1" type="datetime" />
				<column name="DispatchDateAttempt2" type="datetime" />
				<column name="DispatchDateAttempt3" type="datetime" />
				<column name="MedicalStatus" type="boolean" defaultValue="false" />
				<column name="PendencyReasonCategory" type="varchar(20)" />
				<column name="PendencyReason" type="varchar(50)" />
				<column name="InsPendencyResReq" type="boolean" defaultValue="false" />
				<column name="FPR" type="varchar(6)" />
				<column name="PolicyStatus" type="varchar(10)" />
				<column name="FormHandoverDate" type="datetime" />
				<column name="NomineeName" type="varchar(200)" />
				<column name="NomineeRelation" type="varchar(50)" />
				<column name="VASProviderId" type="bigint" />
				<column name="ReconStatus" type="varchar(20)" />
				<column name="version" type="int" />
				<column name="lastmntby" type="bigint" />
				<column name="lastmnton" type="datetime" />
				<column name="recordstatus" type="varchar(50)" />
				<column name="rolecode" type="varchar(100)" />
				<column name="nextrolecode" type="varchar(200)" />
				<column name="taskid" type="varchar(50)" />
				<column name="nexttaskid" type="varchar(200)" />
				<column name="recordtype" type="varchar(50)" />
				<column name="workflowid" type="bigint" defaultValue="0"/>
		</createTable>
	</changeSet>
	
	<changeSet id="13" author="Durgaprasad g">
		<addPrimaryKey tableName="InsuranceDetails_Temp" columnNames="Id" constraintName="PK_InsuranceDetails_Temp_Id"/>
	</changeSet>
	
	<changeSet id="14" author="DurgaPrasad G">
	   <addUniqueConstraint tableName="InsuranceDetails_Temp" columnNames="Reference" constraintName="PK_InsuranceDet_Temp_Reference"/>
	</changeSet>
	
	<changeSet id="15" author="DurgaPrasad G">
	    <sql>
	     UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
	     INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'INSURANCE_DETAILS_MAKER','Insurance Manual Reconciliation maker','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
	     INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'INSURANCE_DETAILS_APPROVER','Insurance Manual Reconciliation approver','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
	     UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
	    </sql>
	</changeSet>
	
	<changeSet id="18" author="Durgaprasad G">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
	
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'InsuranceDetailsDialog_Description','InsuranceDetailsDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'InsuranceDetailsDialog_EntityCode','InsuranceDetailsDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Insurance_InsuranceDetailsDialog','InsuranceDetailsDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_InsuranceDetailsDialog_btnSave','InsuranceDetailsDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_DETAILS_MAKER', 'Insurance Manual Reconciliation maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_DETAILS_APPROVER', 'Insurance Manual Reconciliation approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_DETAILS_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceDetailsDialog_Description'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_DETAILS_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceDetailsDialog_EntityCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_DETAILS_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Insurance_InsuranceDetailsDialog'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_DETAILS_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceDetailsDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_DETAILS_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceDetailsDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_DETAILS_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Insurance_InsuranceDetailsDialog'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='INSURANCE_DETAILS_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='INSURANCE_DETAILS_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='INSURANCE_DETAILS_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='INSURANCE_DETAILS_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>

	<changeSet id="19" author="Durgaprasad G">
		<addColumn tableName="InsuranceDetails_Temp">
			<column name="ManualReconRemarks" type="varchar(500)" />
			<column name="ManualReconResCategory" type="varchar(10)" />
		</addColumn>
	</changeSet>
	<changeSet id="20" author="Durgaprasad G">
		<addColumn tableName="InsuranceDetails">
			<column name="ManualReconRemarks" type="varchar(500)" />
			<column name="ManualReconResCategory" type="varchar(10)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="21" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_View" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, FM.FinType, VR.POSTINGAGAINST from InsuranceDetails_Temp T1
            	  inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			UNION ALL
			Select T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, FM.FinType, VR.POSTINGAGAINST from InsuranceDetails T1
             inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			WHERE     NOT EXISTS (SELECT 1 FROM InsuranceDetails_Temp WHERE Reference = T1.Reference)
		</createView>
	</changeSet>
	<changeSet id="22" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_AView" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, FM.FinType, VR.POSTINGAGAINST from InsuranceDetails T1
			      inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
		</createView>
	</changeSet>
	
	<changeSet id="23" author="Durgaprasad G">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
	
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Insurance_ImportInsuranceDetails','ImportInsuranceDetail',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'IMPORT_INSURANCE_DETAILS', 'Insurance Details File Import', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	  
	    INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'IMPORT_INSURANCE_DETAILS','Insurance Details File Import','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
	   
	   
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='IMPORT_INSURANCE_DETAILS') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Insurance_ImportInsuranceDetails'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='IMPORT_INSURANCE_DETAILS'), (Select  RoleID  From SecRoles Where RoleCd='IMPORT_INSURANCE_DETAILS'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	
	<changeSet id="24" author="Durgaprasad G">
		<addColumn tableName="InsuranceDetails_Temp">
			<column name="TolaranceAmount" type="decimal(18,0)" />
		</addColumn>
	</changeSet>
	<changeSet id="25" author="Durgaprasad G">
		<addColumn tableName="InsuranceDetails">
			<column name="TolaranceAmount" type="decimal(18,0)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="26" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_View" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium from InsuranceDetails_Temp T1
            	  inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			UNION ALL
			Select T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium  from InsuranceDetails T1
             inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			WHERE     NOT EXISTS (SELECT 1 FROM InsuranceDetails_Temp WHERE Reference = T1.Reference)
		</createView>
	</changeSet>
	<changeSet id="27" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_AView" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST,  VR.Fee InsurancePremium from InsuranceDetails T1
			      inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
		</createView>
	</changeSet>
	
	<changeSet id="28" author="Durgaprasad G">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
	
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Insurance_InsurancePaymentUpload','Insurance Payment Uploads',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'UPLOAD_INSURANCE_PAYMENTS', 'Insurance Payment Uploads', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	  
	    INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'UPLOAD_INSURANCE_PAYMENTS','Insurance Payment Uploads','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
	   
	   
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='UPLOAD_INSURANCE_PAYMENTS') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Insurance_InsurancePaymentUpload'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='UPLOAD_INSURANCE_PAYMENTS'), (Select  RoleID  From SecRoles Where RoleCd='UPLOAD_INSURANCE_PAYMENTS'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	
	<changeSet id="29" author="DurgaPrasad G">
		<createTable tableName="InsurancePaymentInstructions">
		    <column name="Id" type="bigint" />
			<column name="EntityCode" type="varchar(10)" />
			<column name="ProviderId" type="bigint" />
			<column name="PartnerBankId" type="bigint" />
			<column name="PaymentAmount" type="decimal(18,0)" />
			<column name="PaymentDate" type="datetime" />
			<column name="PaymentType" type="varchar(10)" />
			<column name="TransactionRef" type="varchar(50)" />
			<column name="RejectReason" type="varchar(200)" />
			<column name="Remarks" type="varchar(200)" />
			<column name="RealizationDate" type="datetime" />
			<column name="RespDate" type="datetime" />
			<column name="ApprovedDate" type="datetime" />
		    <column name="DataEngineStatusId" type="bigint" />
			<column name="NoOfInsurances" type="int" />
			<column name="NoOfPayments" type="int" />
			<column name="NoOfReceivables" type="int" />
			<column name="AdjustedReceivables" type="boolean" />
			<column name="TotalPayableAmount" type="decimal(18,0)" />
			<column name="AdjustedReceivableAmount" type="decimal(18,0)" />
		    <column name="LinkedTranId" type="bigint" />
			<column name="Status" type="varchar(20)" />
			<column name="PaymentCCy" type="varchar(5)" />
			<column name="version" type="int" />
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint" defaultValue="0" />
		</createTable>
	</changeSet>
	<changeSet id="30" author="Durgaprasad G">
		<createTable tableName="InsurancePayments_Dataengine">
				<column name="CompanyName" type="varchar(200)" />
				<column name="FinReference" type="varchar(20)" />
				<column name="Reference" type="varchar(20)" />
				<column name="PolicyNumber" type="varchar(20)" />
				<column name="PayableAmount" type="decimal(18,0)" />
		</createTable>
	</changeSet>
	<changeSet id="31" author="Durgaprasad G">
		<addColumn tableName="VASRecording">
		  <column name="EntityCode" type="varchar(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="32" author="Durgaprasad G">
		<addColumn tableName="VASRecording_Temp">
		  <column name="EntityCode" type="varchar(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="33" author="Durgaprasad G">
		<createView viewName="VASRECORDING_VIEW" replaceIfExists="true">
	  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
			          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode
			          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			UNION ALL
			SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
			          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode
			          FROM   VASRecording  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			          WHERE     NOT EXISTS
			                    (SELECT     1  FROM          VASRecording_Temp WHERE      VasReference = T1.VasReference)
	
		</createView>
	</changeSet>
	
	<changeSet id="34" author="Durgaprasad G">
		<createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
		  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode
		          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	<changeSet id="35" author="Durgaprasad G">
		<createView viewName="VASRECORDING_AVIEW" replaceIfExists="true">
		  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting, 
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode
		          FROM   VASRecording  T1 LEFT OUTER JOIN
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	
	<changeSet id="37" author="Durgaprasad G">
			<addColumn tableName="InsuranceDetails_Temp">
				<column name="LinkedTranId" type="bigint" />
			</addColumn>
	</changeSet>
	<changeSet id="38" author="Durgaprasad G">
			<addColumn tableName="InsuranceDetails">
				<column name="LinkedTranId" type="bigint" />
			</addColumn>
	</changeSet>

	<changeSet id="39" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_View" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid, T1.LinkedTranId 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium from InsuranceDetails_Temp T1
            	  inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			UNION ALL
			Select T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid,  T1.LinkedTranId
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium  from InsuranceDetails T1
             inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			WHERE     NOT EXISTS (SELECT 1 FROM InsuranceDetails_Temp WHERE Reference = T1.Reference)
		</createView>
	</changeSet>
	<changeSet id="40" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_AView" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid ,  T1.LinkedTranId
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST,  VR.Fee InsurancePremium from InsuranceDetails T1
			      inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
		</createView>
	</changeSet>
	
	<changeSet id="41" author="Durgaprasad.g">
	 <sql>
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSADJ' and amountcode = 'id_adjAmount';
		Insert into BMTAmountCodes Values ('INSADJ', 0, 'id_adjAmount','Insurance Adjustment amount.',1,1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		
		Delete from BMTAEEvents Where AEEVENTCODE = 'INSADJ';
		Insert into BMTAEEvents values ('INSADJ','Insurance Adjustments.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,1);
	 </sql>
	</changeSet>

	<changeSet id="42" author="DurgaPrasad G">
		<sql>
		<![CDATA[
			Delete  from EXTENDEDFIELDDETAIL Where MODULEID in (Select MODULEID from EXTENDEDFIELDHEADER wHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS');
			Delete from EXTENDEDFIELDHEADER wHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS';
			
			Insert into EXTENDEDFIELDHEADER (MODULEID,MODULENAME,SUBMODULENAME,TABHEADING,NUMBEROFCOLUMNS,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,EVENT,PREVALIDATIONREQ,POSTVALIDATIONREQ,POSTVALIDATION,PREVALIDATION)
			values 	((Select Max(MODULEID)+1 from EXTENDEDFIELDHEADER),'VAS','VASINS','VAS Insurence','2',37,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,0,null,null);
			
			
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'ADDRESS','MULTILINETEXT',200,0,'Address',0,'REGEX_ALPHANUM_SPACE_SPL',15,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,2,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'ADDRESSN1','MULTILINETEXT',1000,0,'Address',0,'REGEX_ALPHANUM_SPACE_SPL',26,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,3,'NOMINEEDETAILS',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'ADDRESSN2','MULTILINETEXT',1000,0,'Address',0,'REGEX_ALPHANUM_SPACE_SPL',46,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,2,'NOMINEEDETAILS2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'AGE','TEXT',50,0,'Age',0,'REGEX_ALPHANUM_SPACE_SPL',7,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,0,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'AGEN1','TEXT',20,0,'Age',0,'REGEX_ALPHANUM_SPACE_SPL',24,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS',1,0,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'AGEN2','TEXT',20,0,'Age',0,'REGEX_ALPHANUM_SPACE_SPL',44,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS2',1,0,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APOINTEE1MOBILENUM','TEXT',10,0,'Mobile Number',0,'REGEX_NUMERIC',35,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN1',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APOINTEE2MOBILENUM','TEXT',10,0,'Mobile Number',0,'REGEX_ALPHA',55,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APOINTEEN1ADDRESS','MULTILINETEXT',100,0,'Address',0,'REGEX_ALPHANUM_SPACE_SPL',913,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,3,'APPOINTEEDETAILSN1',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APOINTEEN2ADDRESS','MULTILINETEXT',1000,0,'Address',0,'REGEX_ALPHANUM_SPACE_SPL',56,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,2,'APPOINTEEDETAILSN2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APOINTEENAMEN1','TEXT',20,0,'Apointee Name1',0,'REGEX_ALPHANUM_SPACE_SPL',31,null,null,0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN1',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APOINTEENAMEN2','TEXT',100,0,'Apointee Name2',0,'REGEX_ALPHANUM_SPACE_SPL',51,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APONTEE1RELATION','EXTENDEDCOMBO',20,0,'Relation',0,null,32,'RelationshipOfficer',null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN1',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APONTEE2RELATION','EXTENDEDCOMBO',20,0,'Relation',0,null,52,'RelationshipOfficer',null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APONTEEN1AGE','TEXT',20,0,'Age',0,'REGEX_ALPHANUM_SPACE_SPL',34,null,null,0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN1',1,0,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APONTEEN2AGE','TEXT',20,0,'Age',0,'REGEX_ALPHANUM_SPACE_SPL',54,null,null,0,0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN2',1,0,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APPLICANTTYPE','STATICCOMBO',50,0,'Applicant Type',0,null,2,'APPLICANT,CO-APPLICANT',null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,
			'onChange>>  
			var aptype = zk.Widget.$(jq("$ad_APPLICANTTYPE")[0]).getValue(); 
			var applicantsValues = zk.Widget.$(jq("$ad_HIDDEN_APP_VALUES")[0]).getValue(); 
			 
			 
			var custCif = zk.Widget.$(jq("$ad_CUSTOMERCIF")[0]); 
			var custName = zk.Widget.$(jq("$ad_CUSTOMERNAME")[0]); 
			var custGender = zk.Widget.$(jq("$ad_GENDER")[0]); 
			var custDOB = zk.Widget.$(jq("$ad_DOB")[0]); 
			var custAge = zk.Widget.$(jq("$ad_AGE")[0]); 
			 
			var custCoAppCifs = zk.Widget.$(jq("$ad_CUSTCOAPPCIF")[0]); 
			 
			 if (aptype == "APPLICANT")  {  
			  var v = applicantsValues.split("|");
			  
			  custCif.setValue(v[0]);  
			  zAu.send(new zk.Event(custCif, "onChange", {"value":v[0]}), 10); 
				 
				 
			   var name = v[1]; 
			  custName.setValue(name);  
			  zAu.send(new zk.Event(custName, "onChange", {"value":v[1]}), 10); 
			    
			  custGender.setValue(v[2]);  
			  zAu.send(new zk.Event(custGender, "onChange", {"value":v[2]}), 10);  
			   
			  custDOB.setValue(v[3]);  
			  zAu.send(new zk.Event(custDOB, "onChange", {"value":v[3]}), 10); 
			   
			  custAge.setValue(v[4]);  
			  zAu.send(new zk.Event(custAge, "onChange", {"value":v[4]}), 10); 
			   
			  custCoAppCifs.setDisabled(true); 
			   
			 } else if(aptype == "CO-APPLICANT") { 
				  
			  custCoAppCifs.setDisabled(false); 
			  custCif.setValue("");  
			  zAu.send(new zk.Event(custCif, "onChange", {"value":""}), 10); 
				 
			  custName.setValue("");  
			  zAu.send(new zk.Event(custName, "onChange", {"value":""}), 10); 
			    
			  custGender.setValue("");  
			  zAu.send(new zk.Event(custGender, "onChange", {"value":""}), 10); 
			   
			  custDOB.setValue(""); 
			  zAu.send(new zk.Event(custDOB, "onChange", {"value":""}), 10); 
			  
			  custAge.setValue("");  
			  zAu.send(new zk.Event(custAge, "onChange", {"value":""}), 10); 
			 } 
			',1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APPOINTEEDETAILSN1','GROUPBOX',0,0,'Appointee Details1',0,null,30,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,null,0,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APPOINTEEDETAILSN2','GROUPBOX',0,0,'Appointee Details2',0,null,50,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,null,0,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APPOINTEEN1DOB','DATE',0,0,'DOB',0,'PAST_TODAY',33,null,'#',0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN1',1,1,0,0,'onChange>>AgeCalculation 
			 var age = zk.Widget.$(jq("$ad_APONTEEN1AGE")[0]);
			 age.setValue("fromMethod");
			 zAu.send(new zk.Event(age, "onChange", {"value":"fromMethod"}), 10);',1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'APPOINTEEN2DOB','DATE',0,0,'DOB',0,'PAST',53,null,'#',0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'APPOINTEEDETAILSN2',1,1,0,0,'onChange>>AgeCalculation 
			 var age = zk.Widget.$(jq("$ad_APONTEEN2AGE")[0]);
			 age.setValue("fromMethod");
			 zAu.send(new zk.Event(age, "onChange", {"value":"fromMethod"}), 10);',1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'BRANCHDISPATCHDATE','DATE',0,0,'Branch Dispatch date',0,'FUTURE',10,null,'#',0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'CRITICALILLNESS','BOOLEAN',0,0,'Critical Illness',0,null,11,null,'N',0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'CUSTCOAPPCIF','STATICCOMBO',100,0,'Co Applicants',0,null,4,'CIF',null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,'onChange>>  
			var coAppType = zk.Widget.$(jq("$ad_CUSTCOAPPCIF")[0]).getValue(); 
			 
			var custCif = zk.Widget.$(jq("$ad_CUSTOMERCIF")[0]); 
			var custName = zk.Widget.$(jq("$ad_CUSTOMERNAME")[0]); 
			var custGender = zk.Widget.$(jq("$ad_GENDER")[0]); 
			var custDOB = zk.Widget.$(jq("$ad_DOB")[0]); 
			var custAge = zk.Widget.$(jq("$ad_AGE")[0]); 
			
			 if (coAppType == "---Select---")  {  
			  custCif.setValue("");  
			  zAu.send(new zk.Event(custCif, "onChange", {"value":""}), 10); 
				 
			  custName.setValue("");  
			  zAu.send(new zk.Event(custName, "onChange", {"value":""}), 10); 
			    
			  custGender.setValue("");  
			  zAu.send(new zk.Event(custGender, "onChange", {"value":""}), 10); 
			   
			  custDOB.setValue(""); 
			  zAu.send(new zk.Event(custDOB, "onChange", {"value":""}), 10); 
			   
			  custAge.setValue("");  
			  zAu.send(new zk.Event(custAge, "onChange", {"value":""}), 10); 
			 } else { 
				 var coapplicantsValues = zk.Widget.$(jq("$ad_HIDDEN_CO_APP_VAL")[0]).getValue();  
				 var coAppSubVals = coapplicantsValues.split("^^");  
			     for (var i = 0; i < coAppSubVals.length ; i++) { 
					 
					var v = coAppSubVals[i].split("|"); 	 
					   
					if (coAppType == v[0])  {  
						  
						 custCif.setValue(v[0]);  
						 zAu.send(new zk.Event(custCif, "onChange", {"value":v[0]}), 10); 
				 
						 custName.setValue(v[1]);  
						 zAu.send(new zk.Event(custName, "onChange", {"value":v[1]}), 10);  
			    
						 custGender.setValue(v[2]);  
			             zAu.send(new zk.Event(custGender, "onChange", {"value":v[2]}), 10); 
			   
						 custDOB.setValue(v[3]);  
						 zAu.send(new zk.Event(custDOB, "onChange", {"value":v[3]}), 10); 
			   
						 custAge.setValue(v[4]);  
			             zAu.send(new zk.Event(custAge, "onChange", {"value":v[4]}), 10);  
				         break; 
					} 
			   } 
			 } 
			',1,null,1);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'CUSTOMERCIF','TEXT',100,0,'Customer CIF',0,'REGEX_ALPHANUM_SPACE_SPL',4,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,0,0,0,'onChange>>default;',1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'CUSTOMERNAME','TEXT',100,0,'Customer Name',0,'REGEX_ALPHANUM_SPACE_SPL',5,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,0,0,0,'onChange>>default;',1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'DECFORGOODHEALTH','BOOLEAN',0,0,'Declaration for good health',0,null,12,null,'N',0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'DOB','TEXT',50,0,'DOB',0,'REGEX_ALPHANUM_SPACE_SPL',6,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,0,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'DOBN1','DATE',0,0,'DOB',1,'PAST_TODAY',23,null,'#',0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS',1,1,0,0,'onChange>>AgeCalculation 
			 var age = zk.Widget.$(jq("$ad_AGEN1")[0]);
			 age.setValue("fromMethod");
			 zAu.send(new zk.Event(age, "onChange", {"value":"fromMethod"}), 10);',1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'DOBN2','DATE',0,0,'DOB',0,'PAST',43,null,'#',0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS2',1,1,0,0,'
			onChange>>AgeCalculation 
			 var age = zk.Widget.$(jq("$ad_AGEN2")[0]);
			 age.setValue("fromMethod");
			 zAu.send(new zk.Event(age, "onChange", {"value":"fromMethod"}), 10);',1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'EXTDETGRPBOX','GROUPBOX',0,0,'Extended Details',0,null,1,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,null,0,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'GENDER','TEXT',50,0,'Gender',0,'REGEX_ALPHANUM_SPACE_SPL',3,null,null,0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,0,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'HEIGHT','INT',8,0,'Height',0,null,13,null,'0',0,999,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'HIDDEN_APP_VALUES','MULTILINETEXT',1000,0,'Hidden Applicant Values',0,'REGEX_ALPHANUM_SPACE_SPL',900,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,1,null,1,0,0,0,null,0,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'HIDDEN_CO_APP_VAL','MULTILINETEXT',1000,0,'Hidden CoApplicant values',0,'REGEX_ALPHA_SPACE_SPL',903,null,null,0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,1,null,1,0,0,0,null,0,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'INSURANCETERMS','INT',8,0,'Insurance Terms',0,null,9,null,'0',0,999,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'MOBILENUMBERN1','TEXT',10,0,'Mobile Number',0,'REGEX_NUMERIC',25,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'MOBILENUMBERN2','TEXT',10,0,'Mobile Number',0,'REGEX_NUMERIC',45,null,null,0,0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'NOMINEEDETAILS','GROUPBOX',0,0,'Nominee Details1',0,null,20,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,null,0,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'NOMINEEDETAILS2','GROUPBOX',0,0,'Nominee Details2',0,null,40,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,null,0,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'NOMINEENAME1','TEXT',20,0,'Nominee Name1',1,'REGEX_ALPHA_SPACE_SPL',21,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'NOMINEENAME2','TEXT',100,0,'Nominee Name2',0,'REGEX_ALPHANUM_SPACE_SPL',41,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'RELATIONN1','EXTENDEDCOMBO',20,0,'Relation',1,null,22,'RelationshipOfficer',null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'RELATIONN2','EXTENDEDCOMBO',20,0,'Relation',0,null,42,'RelationshipOfficer',null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'NOMINEEDETAILS2',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'SUMASSURED','DECIMAL',18,0,'Sum Assured',1,null,8,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 'WEIGHT','INT',8,0,'Weight',0,null,14,null,'0',0,999,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,1,0,0,null,1,null,0);
			
			Update SeqEXTENDEDFIELDHEADER set SeqNo = ((Select Max(MODULEID)+1 from EXTENDEDFIELDHEADER));
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="43" author="Durgaprasad G">
		<sql>
		    <![CDATA[
			  update COLLATERALSTRUCTURE set PREVALIDATION  = REPLACE(PREVALIDATION,'errors.add','defaults.add');
			 update COLLATERALSTRUCTURE_TEMP set PREVALIDATION  = REPLACE(PREVALIDATION,'errors.add','defaults.add');
			 
			 update VASSTRUCTURE set PREVALIDATION  = REPLACE(PREVALIDATION,'errors.add','defaults.add');
			 update VASSTRUCTURE_TEMP set PREVALIDATION  = REPLACE(PREVALIDATION,'errors.add','defaults.add');
			 
			 update EXTENDEDFIELDHEADER set PREVALIDATION  = REPLACE(PREVALIDATION,'errors.add','defaults.add');
			 update EXTENDEDFIELDHEADER_TEMP set PREVALIDATION  = REPLACE(PREVALIDATION,'errors.add','defaults.add');
			]]>			
		</sql>
	</changeSet>
	
	<changeSet id="44" author="Durgaprasad G">
	  <sql>
	   <![CDATA[
			Delete From DATA_ENGINE_COLUMN Where TABLEID = (Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT'));
			Delete From DATA_ENGINE_TABLE Where CONFIGID = (Select Id from Data_Engine_Config Where Name  = 'INSURANCE_FILE_IMPORT');
			Delete From Data_Engine_Config Where Name  = 'INSURANCE_FILE_IMPORT';
			
			Insert Into Data_Engine_Config Values ((Select max(id)+1 from Data_Engine_Config),'INSURANCE_FILE_IMPORT','Insurance file import.',1,null,null,null,',',0,0,null,null,null,'C', '/opt/PFF/insurance/details','INSURANCE_','.csv',0, null,null,null,0,null,1,1);
			                                        
			Insert Into DATA_ENGINE_TABLE values ((Select max(id)+1 from DATA_ENGINE_TABLE),(Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT'),'INSURANCEDETAILS_DATAENGINE',1,'Reference',null,null,null,null,null,null,null,26,0,0);
			
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT')),'Reference',0,'N',null,null,null,null,0,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FinReference',0,'N',null,null,null,null,1,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'StartDate',0,'N',null,null,null,null,2,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'EndDate',0,'N',null,null,null,null,3,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'Term',0,'N',null,null,null,null,4,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'CoverageAmount',0,'N',null,null,null,null,5,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PolicyNumber',0,'N',null,null,null,null,6,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'IssuanceDate',0,'N',null,null,null,null,7,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'IssuanceStatus',0,'N',null,null,null,null,8,null,null,null,null,'CHECK:ISSUED,DECLINE,CANCEL,REJECTED,PENDING,DISCREPENT');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PartnerPremium',0,'N',null,null,null,null,9,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PartnerReceivedDate',0,'N',null,null,null,null,10,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt1',0,'N',null,null,null,null,11,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'AWBNoF',0,'N',null,null,null,null,12,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchStatusF',0,'N',null,null,null,null,13,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'ReasonOfRTOF',0,'N',null,null,null,null,14,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt2',0,'N',null,null,null,null,15,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt3',0,'N',null,null,null,null,16,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'MedicalStatusF',0,'N',null,null,null,null,17,null,null,null,null,'CHECK:Y,N');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyReasonCategory',0,'N',null,null,null,null,18,null,null,null,null,'CHECK:U/W MEDICAL,INCOMPLETE FORM,PREMIUM MISMATCH,CALCULATOR MISMATCH,NOMINEE MINOR,KYC REQUIRED');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyReason',0,'N',null,null,null,null,19,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyResReqF',0,'N',null,null,null,null,20,null,null,null,null,'O');---'CHECK:Y,N'
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FPR',0,'N',null,null,null,null,21,null,null,null,null,'CHECK:BFL,PARTNER');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PolicyStatus',0,'N',null,null,null,null,22,null,null,null,null,'CHECK:ACTIVE,CANCELLED,SURRENDERED,CLAIM,MATURED');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FormHandoverDate',0,'N',null,null,null,null,23,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'NomineeName',0,'N',null,null,null,null,24,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'NomineeRelation',0,'N',null,null,null,null,25,null,null,null,null,'CHECK:DAUGHTER,FATHER,WIFE,HUSBAND,SISTER,SON,MOTHER,BROTHER');
			]]>				  
	  </sql>
	</changeSet>
	<changeSet id="45" author="saikiran.v">
		<addColumn tableName="VASRECORDING">
			<column name="OLDVASREFERENCE" type="varchar(20)"/>
		</addColumn>
	</changeSet>
	<changeSet id="46" author="saikiran.v">
		<addColumn tableName="VASRECORDING_TEMP">
			<column name="OLDVASREFERENCE" type="varchar(20)"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="47" author="saikiran.v">
		<createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
			SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode ,T1.OLDVASREFERENCE
		          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	<changeSet id="48" author="saikiran.v">
		<createView viewName="VASRECORDING_AVIEW" replaceIfExists="true">
			  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting, 
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode,T1.OLDVASREFERENCE
		          FROM   VASRecording  T1 LEFT OUTER JOIN
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	<changeSet id="49" author="saikiran">
		<createView viewName="VASRECORDING_VIEW" replaceIfExists="true">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
			          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode,T1.OLDVASREFERENCE
			          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			UNION ALL
			SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
			          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode ,T1.OLDVASREFERENCE
			          FROM   VASRecording  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			          WHERE     NOT EXISTS
			                    (SELECT     1  FROM          VASRecording_Temp WHERE      VasReference = T1.VasReference)
		
		</createView>
	</changeSet>
	
	
	<changeSet id="45" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_View" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid, T1.LinkedTranId 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium, 
            VS.FREELOCKPERIOD from InsuranceDetails_Temp T1
            inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
            Inner join VASSTRUCTURE VS on VS.PRODUCTCODE = VR.PRODUCTCODE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			UNION ALL
			Select T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid,  T1.LinkedTranId
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium,
             VS.FREELOCKPERIOD  from InsuranceDetails T1
             inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
             Inner join VASSTRUCTURE VS on VS.PRODUCTCODE = VR.PRODUCTCODE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			WHERE     NOT EXISTS (SELECT 1 FROM InsuranceDetails_Temp WHERE Reference = T1.Reference)
		</createView>
	</changeSet>
	<changeSet id="46" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_AView" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid ,  T1.LinkedTranId
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST,  
			      VR.Fee InsurancePremium, VS.FREELOCKPERIOD  from InsuranceDetails T1
			      inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			       Inner join VASSTRUCTURE VS on VS.PRODUCTCODE = VR.PRODUCTCODE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
		</createView>
	</changeSet>
	
	<changeSet id="47" author="Durgaprasad G">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			  SELECT
			  FA. PAYMENTID,
			  FA.FINREFERENCE,
			  'D' CHANNEL,
			   0 PROVIDERID,
			  CASE
			    WHEN FA.PAYMENTTYPE = 'NEFT'
			    THEN 'N'
			    WHEN FA.PAYMENTTYPE = 'RTGS'
			    THEN 'R'
			    WHEN FA.PAYMENTTYPE = 'DD'
			    THEN 'D'
			    WHEN FA.PAYMENTTYPE = 'CHEQUE'
			    THEN 'C'
			    ELSE FA.PAYMENTTYPE
			  END DISBURSEMENT_TYPE,
			  FA.AMTTOBERELEASED/CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			  FA.DISBDATE,
			  FA.LLDATE,
			  FA.PAYABLELOC,
			  FA.PRINTINGLOC,
			  CU.CUSTCIF,
			  CU.CUSTSHRTNAME,
			  '' AS CUSTOMER_MOBILE,
			  CE.CUSTEMAIL CUSTOMER_EMAIL,
			  CS.CPPROVINCENAME CUSTOMER_STATE,
			  CC.PCCITYNAME CUSTOMER_CITY,
			  '' CUSTOMER_ADDRESS1,
			  '' CUSTOMER_ADDRESS2,
			  '' CUSTOMER_ADDRESS3,
			  '' CUSTOMER_ADDRESS4,
			  '' CUSTOMER_ADDRESS5,
			  BD.BANKNAME BANKNAME,
			  BB.BRANCHCODE,
			  BB.BRANCHDESC BRANCHDESC,
			  PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			  PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
			  BB.MICR MICR_CODE,
			  BB.IFSC IFSC_CODE,
			  FA.BENEFICIARYACCNO,
			  CASE
			    WHEN FA.PAYMENTTYPE = 'CHEQUE'
			    OR FA.PAYMENTTYPE   = 'DD'
			    THEN FA.LIABILITYHOLDNAME
			    ELSE FA.BENEFICIARYNAME
			  END BENEFICIARYNAME,
			  FA.PHONECOUNTRYCODE
			  ||FA.PHONEAREACODE
			  ||FA.PHONENUMBER AS BENEFICIARY_MOBILE,
			  BCE.CUSTEMAIL BENFICIRY_EMAIL,
			  BRS.CPPROVINCENAME BENFICIARY_STATE,
			  BRC.PCCITYNAME BENFICIARY_CITY,
			  '' BENFICIARY_ADDRESS1,
			  '' BENFICIARY_ADDRESS2,
			  '' BENFICIARY_ADDRESS3,
			  '' BENFICIARY_ADDRESS4,
			  '' BENFICIARY_ADDRESS5,
			  '' PAYMENT_DETAIL1,
			  '' PAYMENT_DETAIL2,
			  '' PAYMENT_DETAIL3,
			  '' PAYMENT_DETAIL4,
			  '' PAYMENT_DETAIL5,
			  '' PAYMENT_DETAIL6,
			  '' PAYMENT_DETAIL7,
			  FA.STATUS STATUS,
			  FA.DESCRIPTION REMARKS,
			  FA.PAYMENTTYPE PAYMENTTYPE,
			  FM.FINTYPE,
			  PB.PARTNERBANKID,
			  PB.PARTNERBANKCODE,
			  FA.INPUTDATE,
			  PB.ALWFILEDOWNLOAD,
			  PB.FILENAME,
			  FM.FINISACTIVE,
			  SMD.ENTITYCODE
			FROM
			  FINADVANCEPAYMENTS FA
			INNER JOIN
			  (
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN_TEMP
			    UNION ALL
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN T2
			    WHERE
			      NOT EXISTS
			      (
			        SELECT
			          1
			        FROM
			          FINANCEMAIN_TEMP T3
			        WHERE
			          T3.FINREFERENCE = T2.FINREFERENCE
			      )
			  )
			  FM
			ON
			  FM.FINREFERENCE = FA.FINREFERENCE
			INNER JOIN CUSTOMERS CU
			ON
			  CU.CUSTID = FM.CUSTID
			INNER JOIN RMTCURRENCIES CCY
			ON
			  CCY.CCYCODE = FA.DISBCCY
			INNER JOIN PARTNERBANKS PB
			ON
			  PB.PARTNERBANKID = FA.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE
			ON
			  CE.CUSTID              = CU.CUSTID
			AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES CA
			ON
			  CA.CUSTID             = CE.CUSTID
			AND CA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY CC
			ON
			  CC.PCCITY = CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS
			ON
			  CS.CPPROVINCE = CC.PCPROVINCE
			LEFT JOIN BANKBRANCHES BB
			ON
			  BB.BANKBRANCHID = FA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON
			  BD.BANKCODE = BB.BANKCODE
			LEFT JOIN
			  (
			    SELECT
			      PB.PARTNERBANKID,
			      PBD.BANKNAME,
			      PBB.BRANCHDESC,
			      PBBRC.PCCITYNAME,
			      PBBRS.CPPROVINCENAME
			    FROM PARTNERBANKS PB
			    INNER JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB.BANKBRANCHCODE
			    INNER JOIN BMTBANKDETAIL PBD ON PBD.BANKCODE = PBB.BANKCODE
			    LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
			    LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
			  )
			  PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
			LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND BR.ACCNUMBER  = FA.BENEFICIARYACCNO
			AND BR.CUSTID     = FM.CUSTID LEFT JOIN CUSTOMERS BC
			ON
			  BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE
			ON
			  BCE.CUSTID              = CU.CUSTID
			AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES BRCA
			ON
			  BRCA.CUSTID             = BR.CUSTID
			AND BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON
			  BRC.PCCITY = BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS
			ON
			  BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT
			ON
			  FM.FINTYPE=RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD
			ON
			  RFT.FINDIVISION=SMD.DIVISIONCODE
			WHERE
			  STATUS           ='APPROVED'
			AND PAYMENTID NOT IN
			  (
			    SELECT
			      DISBURSEMENT_ID
			    FROM
			      DISBURSEMENT_REQUESTS
			  )
			AND PAYMENTID NOT IN
			  (
			    SELECT
			      PAYMENTID
			    FROM
			      FINADVANCEPAYMENTS_TEMP
			  )
			UNION ALL
			SELECT
			  PI. PAYMENTINSTRUCTIONID PAYMENTID,
			  PH.FINREFERENCE,
			  PH.PAYMENTTYPE CHANNEL,
			  0 PROVIDERID,
			  CASE
			    WHEN PI.PAYMENTTYPE = 'NEFT'
			    THEN 'N'
			    WHEN PI.PAYMENTTYPE = 'RTGS'
			    THEN 'R'
			    WHEN PI.PAYMENTTYPE = 'DD'
			    THEN 'D'
			    WHEN PI.PAYMENTTYPE = 'CHEQUE'
			    THEN 'C'
			    ELSE PI.PAYMENTTYPE
			  END DISBURSEMENT_TYPE,
			  PI.PAYMENTAMOUNT/CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			  PI.POSTDATE DISBDATE,
			  PI.POSTDATE LLDATE,
			  PI.PAYABLELOC,
			  PI.PRINTINGLOC,
			  CU.CUSTCIF,
			  CU.CUSTSHRTNAME,
			  '' AS CUSTOMER_MOBILE,
			  CE.CUSTEMAIL CUSTOMER_EMAIL,
			  CS.CPPROVINCENAME CUSTOMER_STATE,
			  CC.PCCITYNAME CUSTOMER_CITY,
			  '' CUSTOMER_ADDRESS1,
			  '' CUSTOMER_ADDRESS2,
			  '' CUSTOMER_ADDRESS3,
			  '' CUSTOMER_ADDRESS4,
			  '' CUSTOMER_ADDRESS5,
			  BD.BANKNAME,
			  BB.BRANCHCODE,
			  BB.BRANCHDESC,
			  BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			  BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			  BB.MICR MICR_CODE,
			  BB.IFSC IFSC_CODE,
			  PI.ACCOUNTNO BENEFICIARYACCNO,
			  CASE
			    WHEN PI.PAYMENTTYPE = 'CHEQUE'
			    OR PI.PAYMENTTYPE   = 'DD'
			    THEN PI.FAVOURNAME
			    ELSE PI.ACCTHOLDERNAME
			  END BENEFICIARYNAME,
			  PI.PHONECOUNTRYCODE
			  ||PI.PHONENUMBER AS BENEFICIARY_MOBILE,
			  BCE.CUSTEMAIL BENFICIRY_EMAIL,
			  BRS.CPPROVINCENAME BENFICIARY_STATE,
			  BRC.PCCITYNAME BENFICIARY_CITY,
			  '' BENFICIARY_ADDRESS1,
			  '' BENFICIARY_ADDRESS2,
			  '' BENFICIARY_ADDRESS3,
			  '' BENFICIARY_ADDRESS4,
			  '' BENFICIARY_ADDRESS5,
			  '' PAYMENT_DETAIL1,
			  '' PAYMENT_DETAIL2,
			  '' PAYMENT_DETAIL3,
			  '' PAYMENT_DETAIL4,
			  '' PAYMENT_DETAIL5,
			  '' PAYMENT_DETAIL6,
			  '' PAYMENT_DETAIL7,
			  PI.STATUS STATUS,
			  PI.REMARKS REMARKS,
			  PI.PAYMENTTYPE PAYMENTTYPE,
			  FM.FINTYPE,
			  PB.PARTNERBANKID,
			  PB.PARTNERBANKCODE,
			  PI.POSTDATE INPUTDATE,
			  PB.ALWFILEDOWNLOAD,
			  PB.FILENAME,
			  FM.FINISACTIVE,
			  SMD.ENTITYCODE
			FROM
			  PAYMENTINSTRUCTIONS PI
			INNER JOIN PAYMENTHEADER PH
			ON
			  PH.PAYMENTID = PI.PAYMENTID
			INNER JOIN
			  (
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN
			    UNION ALL
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN_TEMP T2
			    WHERE
			      NOT EXISTS
			      (
			        SELECT
			          1
			        FROM
			          FINANCEMAIN_TEMP T3
			        WHERE
			          T3.FINREFERENCE = T2.FINREFERENCE
			      )
			  )
			  FM
			ON FM.FINREFERENCE = PH.FINREFERENCE 
			INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
			INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
			INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
			LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
			LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY = BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS ON BBRS.CPPROVINCE = BBRC.PCPROVINCE 
			LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID AND BR.ACCNUMBER = PI.ACCOUNTNO AND BR.CUSTID     = FM.CUSTID 
			LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID AND BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE=RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD ON RFT.FINDIVISION=SMD.DIVISIONCODE
			WHERE PI.STATUS ='APPROVED'
			AND PI.PAYMENTINSTRUCTIONID NOT IN
			  (
			    SELECT
			      DISBURSEMENT_ID
			    FROM
			      DISBURSEMENT_REQUESTS
			  )
			UNION ALL
			SELECT
			  PI.ID  			PAYMENTID,
			  ''     			FINREFERENCE,
			  'I' 				CHANNEL,
			  PI.ProviderId		PROVIDERID,
			  CASE
			    WHEN PI.PAYMENTTYPE = 'NEFT'
			    THEN 'N'
			    WHEN PI.PAYMENTTYPE = 'RTGS'
			    THEN 'R'
			    WHEN PI.PAYMENTTYPE = 'DD'
			    THEN 'D'
			    WHEN PI.PAYMENTTYPE = 'CHEQUE'
			    THEN 'C'
			    ELSE PI.PAYMENTTYPE
			  END DISBURSEMENT_TYPE,
			  PI.PAYMENTAMOUNT/CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			  PI.PAYMENTDATE DISBDATE,
			  PI.PAYMENTDATE LLDATE,
			  '' PAYABLELOC,
			  '' PRINTINGLOC,
			  '' CUSTCIF,
			  '' CUSTSHRTNAME,
			  '' CUSTOMER_MOBILE,
			  '' CUSTOMER_EMAIL,
			  '' CUSTOMER_STATE,
			  '' CUSTOMER_CITY,
			  '' CUSTOMER_ADDRESS1,
			  '' CUSTOMER_ADDRESS2,
			  '' CUSTOMER_ADDRESS3,
			  '' CUSTOMER_ADDRESS4,
			  '' CUSTOMER_ADDRESS5,
			  BD.BANKNAME,
			  BB.BRANCHCODE,
			  BB.BRANCHDESC,
			  BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			  BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			  BB.MICR MICR_CODE,
			  BB.IFSC IFSC_CODE,
			  VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
			  AVD.DEALERNAME BENEFICIARYNAME,
			  AVD.DEALERTELEPHONE BENEFICIARY_MOBILE,
			  AVD.EMAIL BENFICIRY_EMAIL,
			  BRS.CPPROVINCENAME BENFICIARY_STATE,
			  BRC.PCCITYNAME BENFICIARY_CITY,
			  AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
			  AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
			  AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
			  '' BENFICIARY_ADDRESS4,
			  '' BENFICIARY_ADDRESS5,
			  '' PAYMENT_DETAIL1,
			  '' PAYMENT_DETAIL2,
			  '' PAYMENT_DETAIL3,
			  '' PAYMENT_DETAIL4,
			  '' PAYMENT_DETAIL5,
			  '' PAYMENT_DETAIL6,
			  '' PAYMENT_DETAIL7,
			  PI.STATUS STATUS,
			  PI.REMARKS REMARKS,
			  PI.PAYMENTTYPE PAYMENTTYPE,
			  '' FINTYPE,
			  PB.PARTNERBANKID,
			  PB.PARTNERBANKCODE,
			  PI.PAYMENTDATE INPUTDATE,
			  PB.ALWFILEDOWNLOAD,
			  PB.FILENAME,
			  1  FINISACTIVE,
			  PI.ENTITYCODE
			FROM  InsurancePaymentInstructions PI
			INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
			INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
			INNER JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
			INNER JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
			
			LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY = BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS ON BBRS.CPPROVINCE = BBRC.PCPROVINCE 
			LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = AVD.DEALERCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			WHERE PI.STATUS ='APPROVED'
			AND PI.ID NOT IN
			  (
			    SELECT  DISBURSEMENT_ID
			    FROM DISBURSEMENT_REQUESTS
			  )
		</createView>
	</changeSet>
	<changeSet id="48" author="Durgaprasad G">
	 <createView viewName="DE_DISBURSE_FILE_CONTROL_VIEW" replaceIfExists="true">
		   Select  DISTINCT(ID), NAME, FILELOCATION,FILENAME, ENDTIME,STATUS, CONFIGID,  POSTEVENT,
					ALWFILEDOWNLOAD,  PARTNERBANKID, PARTNERBANKCODE, PARTNERBANKNAME, PAYMENTTYPE ,ENTITYCODE, ENTITYDESC,USRLOGIN from (
	      
				 	SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, FA.PAYMENTTYPE, E.ENTITYCODE, E.ENTITYDESC,SC.USRLOGIN
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
							INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
	     					INNER JOIN FINADVANCEPAYMENTS FA ON FA.PAYMENTID = DR.DISBURSEMENT_ID
							INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
							INNER JOIN ENTITY E ON E.ENTITYCODE=PB.ENTITY
							INNER JOIN SECUSERS SC ON SC.USRID = DS.USERID
	 		
	      			UNION ALL
	      
			  		SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, PI.PAYMENTTYPE, E.ENTITYCODE, E.ENTITYDESC,SC.USRLOGIN
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
							INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
			    		 	INNER JOIN PAYMENTINSTRUCTIONS PI ON PI.PAYMENTINSTRUCTIONID = DR.DISBURSEMENT_ID
							INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
							INNER JOIN ENTITY E ON E.ENTITYCODE=PB.ENTITY
							INNER JOIN SECUSERS SC ON SC.USRID = DS.USERID
							
					UNION ALL
	      
			  		SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, PI.PAYMENTTYPE, E.ENTITYCODE, E.ENTITYDESC,SC.USRLOGIN
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
							INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
			    		 	INNER JOIN INSURANCEPAYMENTINSTRUCTIONS PI ON PI.ID = DR.DISBURSEMENT_ID
							INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID 
							INNER JOIN ENTITY E ON E.ENTITYCODE=PB.ENTITY AND E.ENTITYCODE = PI.ENTITYCODE
							INNER JOIN SECUSERS SC ON SC.USRID = DS.USERID
	
	   				UNION ALL		 
	         
	  				SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							0, 0, NULL, NULL, NULL, NULL, NULL,NULL
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
		    		WHERE 	DS.STATUS = 'F'
		   ) T ORDER BY ID DESC
	 </createView>
	</changeSet>
	
	<changeSet id="50" author="Durgaprasad G">
		<sql>
			Update EXTENDEDFIELDDETAIL set FIELDCONSTRAINT = 'REGEX_NUMERIC' Where FIELDNAME= 'APOINTEE2MOBILENUM' and
			Moduleid = (Select Moduleid from EXTENDEDFIELDHEADER Where Modulename= 'VAS' AND SUBMODULENAME = 'VASINS');
		</sql>
	</changeSet>
	
	<changeSet id="51" author="Durgaprasad G">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);	
			
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_InsuranceMaintananceRebookingDialog_Rebooking','MENU',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_InsuranceMaintananceRebookingDialog_Maintainance','MENU',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_InsuranceMaintananceRebookingDialog_btnSave','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_AccrualTillDate','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_DmaId','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_DsaId','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_ExtendedFields','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_Fee','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_FeePaymentMode','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_FulfilOfficerId','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_PostingAgainst','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_PrimaryLinkRef','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_ProductCode','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_RecurringDate','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_ReferralId','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_ValueDate','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_VasReference','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_WaivedAmt','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
			
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_REBOOKING_MAKER', 'Insurance Rebooking maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_REBOOKING_APPROVER', 'Insurance Rebooking approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_InsuranceMaintananceRebookingDialog_Rebooking'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceMaintananceRebookingDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_AccrualTillDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_DmaId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_DsaId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_ExtendedFields'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_Fee'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_FeePaymentMode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_FulfilOfficerId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_PostingAgainst'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_PrimaryLinkRef'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_ProductCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_RecurringDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_ReferralId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_ValueDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_VasReference'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_WaivedAmt'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
					
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_InsuranceMaintananceRebookingDialog_Rebooking'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceMaintananceRebookingDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_MAINTANANCE_MAKER', 'Insurance Maintanance maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_MAINTANANCE_APPROVER', 'Insurance Maintanance approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_MAINTANANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_InsuranceMaintananceRebookingDialog_Maintainance'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_MAINTANANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceMaintananceRebookingDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_MAINTANANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_ExtendedFields'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_MAINTANANCE_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_InsuranceMaintananceRebookingDialog_Maintainance'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_MAINTANANCE_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceMaintananceRebookingDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);	
		</sql>
	</changeSet>
	
	 <changeSet id="51" author="saikiran.v">
		<addColumn tableName="VASRECORDING_TEMP">
			<column name="Remarks" type="varchar(100)" />
			<column name="Reason" type="varchar(20)" />
			<column name="CancelAmount" type="number(18,0)"
				defaultValueNumeric="0" />
			<column name="CancelAfterFLP" type="boolean"
				defaultValueBoolean="false" />
		</addColumn>
	</changeSet>
	<changeSet id="52" author="saikiran.v">
			<addColumn tableName="VASRECORDING">
				<column name="Remarks" type="varchar(100)" />
				<column name="Reason" type="varchar(20)" />
				<column name="CancelAmount" type="number(18,0)"
					defaultValueNumeric="0" />
				<column name="CancelAfterFLP" type="boolean"
					defaultValueBoolean="false" />
			</addColumn>
	</changeSet>
	<changeSet id="53" author="saikiran.v">
		<createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
			 SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode ,T1.OLDVASREFERENCE ,T1.Remarks ,T1.Reason , T1.CancelAmount , 				         	T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType 
		          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN 
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			      Left join Financemain FM On T1.PRIMARYLINKREF = FM.FinReference

		</createView>
	</changeSet>
<changeSet id="54" author="saikiran.v">
		<createView viewName="VASRECORDING_AVIEW" replaceIfExists="true">
			    SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting, 
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmount , 			         	         						T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType 
		          FROM   VASRecording  T1 LEFT OUTER JOIN
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			      Left join Financemain FM On T1.PRIMARYLINKREF = FM.FinReference

		</createView>
	</changeSet>
<changeSet id="55" author="saikiran.v">
		<createView viewName="VASRECORDING_VIEW" replaceIfExists="true">
  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
			          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmount , 			         	         						T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType 
			          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			          Left join Financemain FM On T1.PRIMARYLINKREF = FM.FinReference
			UNION ALL
			SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
			          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode ,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmount , T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType 
			          FROM   VASRecording  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			          Left join Financemain FM On T1.PRIMARYLINKREF = FM.FinReference
			 WHERE     NOT EXISTS
			                    (SELECT     1  FROM          VASRecording_Temp WHERE      VasReference = T1.VasReference)

		</createView>
	</changeSet>
<changeSet id="56" author="saikiran.v">
	    <sql>
	     UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
	     INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'INSURANCE_SURRENDER_MAKER','Insurance Surrender maker','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
	     INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'INSURANCE_SURRENDER_APPROVER','Insurance Surrender approver','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
	     UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
	    </sql>
	</changeSet>
	
<changeSet id="57" author="saikiran.v">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
	
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'InsuranceSurrenderDialog_CancelAfterFLP','InsuranceSurrenderDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'InsuranceSurrenderDialog_CancelAmount','InsuranceSurrenderDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 

		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'InsuranceSurrenderDialog_Reason','InsuranceSurrenderDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 

		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'InsuranceSurrenderDialog_Remarks','InsuranceSurrenderDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Insurance_InsuranceSurrenderDialog','InsuranceSurrenderDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 

		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_InsuranceSurrenderDialog_btnSave','InsuranceSurrenderDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_SURRENDER_MAKER', 'Insurance Surrender maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_SURRENDER_APPROVER', 'Insurance Surrender approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceSurrenderDialog_CancelAfterFLP'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceSurrenderDialog_CancelAmount'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceSurrenderDialog_Reason'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceSurrenderDialog_Remarks'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Insurance_InsuranceSurrenderDialog'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceSurrenderDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_InsuranceSurrenderDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_SURRENDER_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Insurance_InsuranceSurrenderDialog'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet> 
	
	<changeSet id="58" author="Durgaprasad.g">
	 <sql>
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'id_payAmount';
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'id_recAmount';
		
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'id_payAmount','Insurance Payment amount.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'id_recAmount','Insurance Receivable Payment.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		
		Delete from BMTAEEvents Where AEEVENTCODE = 'INSPAY';
		Insert into BMTAEEVENTS values ('INSPAY','Insurance Payment.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'1');
	 </sql>
	</changeSet>
	
	<changeSet id="59" author="Durgaprasad.g">
	 <sql>
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'CANINS' and amountcode = 'vr_cancelAmt';
		Insert into BMTAMOUNTCODES  values ('CANINS',0,'vr_cancelAmt','Insurance Surrender or Cancel amount refund.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		
		Delete from BMTAEEvents Where AEEVENTCODE = 'CANINS';
		Insert into BMTAEEVENTS values ('CANINS','Insurance Surrender or Cancel amount refund.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'1');
	 </sql>
	</changeSet>
	
	<changeSet id="60.1" author="Durgaprasad G">
		<dropView viewName="VASRECORDING_TVIEW"/>
		<dropView viewName="VASRECORDING_AVIEW"/>
		<dropView viewName="VASRECORDING_VIEW"/>
	</changeSet>
	<changeSet id="60" author="Durgaprasad G">
	 	<dropColumn tableName="VASRECORDING" columnName="CancelAmount"/>
	</changeSet>
	
	<changeSet id="61" author="Durgaprasad G">
	 	<dropColumn tableName="VASRECORDING_TEMP" columnName="CancelAmount"/>
	</changeSet>
	
	 <changeSet id="62" author="Durgaprasad G">
		<addColumn tableName="VASRECORDING">
			<column name="ServiceReqNumber" type="varchar(50)" />
			<column name="CancelAmt" type="number(18,0)" defaultValueNumeric="0" />
		</addColumn>
	</changeSet>
	
	<changeSet id="63" author="Durgaprasad G">
		<addColumn tableName="VASRECORDING_TEMP">
			<column name="ServiceReqNumber" type="varchar(50)" />
			<column name="CancelAmt" type="number(18,0)" defaultValueNumeric="0" />
		</addColumn>
	</changeSet>
	
	<changeSet id="64" author="saikiran.v">
		<createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
			      SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode ,T1.OLDVASREFERENCE ,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber, T1.CancelAfterFLP 
		          ,T2.FREELOCKPERIOD flpDays , FM.FinType 
		          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN 
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			      Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
		</createView>
	</changeSet>
	<changeSet id="65" author="saikiran.v">
			<createView viewName="VASRECORDING_AVIEW" replaceIfExists="true">
				    SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting, 
			          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , 			         	         						T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType 
			          FROM   VASRecording  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
				      Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
	
			</createView>
		</changeSet>
		<changeSet id="66" author="saikiran.v">
				<createView viewName="VASRECORDING_VIEW" replaceIfExists="true">
		  					 SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
					          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
					          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
					          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
					          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
					          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
					          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , 
					          T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType 
					          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
					          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
					          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
					          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
					          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
					          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
					          Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
					UNION ALL
					SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
					          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
					          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
					          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
					          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
					          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
					          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode ,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType 
					          FROM   VASRecording  T1 LEFT OUTER JOIN
					          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
					          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
					          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
					          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
					          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
					          Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
					 WHERE     NOT EXISTS (SELECT     1  FROM    VASRecording_Temp WHERE   VasReference = T1.VasReference)
				</createView>
			</changeSet>
			<changeSet id="67" author="Durgaprasad G">
			   <sql>
			      Delete from VASPRODUCTCATEGORY Where PRODUCTCTG = 'VASI';
			   	  Insert into VASPRODUCTCATEGORY  values ('VASI','VAS Insurance',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,1);
			   	  
			   </sql>
			</changeSet>
			
			<changeSet id="68" author="Durgaprasad G">
			  <createView viewName="DATAENGINESTATUS_IUVIEW" replaceIfExists="true">
			  		SELECT ID, FILENAME FROM data_engine_status where name='INSURANCE_FILE_IMPORT'
			  </createView>
			</changeSet>
			<changeSet id="69" author="Durgaprasad G">
			  <createView viewName="DATAENGINESTATUS_IPUVIEW" replaceIfExists="true">
			  		SELECT ID, FILENAME FROM data_engine_status where name='INSURANCE_PAYMENT_UPLOAD'
			  </createView>
			</changeSet>
		<changeSet id="68" author="saikiran.v">
				<sql>
					UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
					UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
					UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
					UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM
					SECROLEGROUPS);
					UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM
					SECGROUPRIGHTS);
			
					INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS),
					'INSURANCE_DETAIL_ENQUIRY', 'Insurance Details Enquiry.',
					0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS
					WHERE 0=0;
			
					INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0,
					'menuItem_Insurance_InsuranceEnquiry','MENU',0,1000,CURRENT_TIMESTAMP,'
					',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			
					INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from
					SecRoles),1,'INSURANCE_DETAIL_ENQUIRY','Insurance Details
					Enquiry.','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles
					WHERE 0=0;
			
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
					SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE
					GRPCODE='INSURANCE_DETAIL_ENQUIRY') ,(SELECT RIGHTID FROM SECRIGHTS
					WHERE RIGHTNAME='menuItem_Insurance_InsuranceEnquiry'), 1,
					0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
					INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From
					SecRoleGroups),(Select GrpId From SecGroups Where
					GrpCode='INSURANCE_DETAIL_ENQUIRY'), (Select RoleID From SecRoles
					Where RoleCd='INSURANCE_DETAIL_ENQUIRY'),0,1000,CURRENT_TIMESTAMP,'
					',' ',' ',' ',' ',' ',0);
			
					UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
					UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
					UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
					UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM
					SECROLEGROUPS);
					UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM
					SECGROUPRIGHTS);
				</sql>
		</changeSet> 
		<changeSet id="69" author="Durga prasad G">
			<sql>
				Delete From DATA_ENGINE_COLUMN Where TABLEID = (Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD'));
				Delete From DATA_ENGINE_TABLE Where CONFIGID = (Select Id from Data_Engine_Config Where Name  = 'INSURANCE_PAYMENT_UPLOAD');
				Delete From Data_Engine_Config Where Name  = 'INSURANCE_PAYMENT_UPLOAD';
				
				Insert Into Data_Engine_Config Values ((Select max(id)+1 from Data_Engine_Config),'INSURANCE_PAYMENT_UPLOAD','Insurance Payment Upload.',1,null,null,null,',',0,0,null,null,null,'C', '/opt/PFF/insurance/payments','INSURANCE_','.csv',0, null,null,null,0,null,1,1);
				                                        
				Insert Into DATA_ENGINE_TABLE values ((Select max(id)+1 from DATA_ENGINE_TABLE),(Select id from Data_Engine_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD'),'INSURANCEPAYMENTS_DATAENGINE',1,'InsuranceReference',null,null,null,null,null,null,null,5,0,0);
				 
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD')),'FinReference',0,'N',null,null,null,null,0,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD')),'Reference',0,'N',null,null,null,null,1,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD')),'PolicyNumber',0,'N',null,null,null,null,2,null,null,null,null,'M');
			</sql>
		</changeSet>
		
		<changeSet id="70.1" author="DurgaPrasad G">
		 <dropView viewName="de_disburse_file_control_view"/>
		</changeSet>
		<changeSet id="70" author="DurgaPrasad G">
		   <dropTable tableName="InsurancePaymentInstructions" cascadeConstraints="true"/>
		</changeSet>
		
		<changeSet id="71" author="DurgaPrasad G">
		<createTable tableName="InsurancePaymentInstructions">
		    <column name="Id" type="bigint" />
			<column name="EntityCode" type="varchar(10)" />
			<column name="ProviderId" type="bigint" />
			<column name="PartnerBankId" type="bigint" />
			<column name="PaymentAmount" type="decimal(18,0)" />
			<column name="PaymentDate" type="datetime" />
			<column name="PaymentType" type="varchar(10)" />
			<column name="TransactionRef" type="varchar(50)" />
			<column name="RejectReason" type="varchar(200)" />
			<column name="Remarks" type="varchar(200)" />
			<column name="RealizationDate" type="datetime" />
			<column name="RespDate" type="datetime" />
			<column name="ApprovedDate" type="datetime" />
		    <column name="DataEngineStatusId" type="bigint" />
			<column name="NoOfInsurances" type="int" />
			<column name="NoOfPayments" type="int" />
			<column name="NoOfReceivables" type="int" />
			<column name="AdjustedReceivable" type="boolean" />
			<column name="PayableAmount" type="decimal(18,0)" />
			<column name="ReceivableAmount" type="decimal(18,0)" />
		    <column name="LinkedTranId" type="bigint" />
			<column name="Status" type="varchar(20)" />
			<column name="PaymentCCy" type="varchar(5)" />
			<column name="version" type="int" />
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint" defaultValue="0" />
		</createTable>
	</changeSet>
	
	<changeSet id="72" author="Durgaprasad G">
	<createView viewName="InsuranceDetails_eview" replaceIfExists="true">
		Select VPT.ProductCtg, VS.Primarylinkref finReference,VS.VASREference reference, T.Policynumber, AVD.DEALERID VASPROVIDERID, AVD.DEALERNAME  VASPROVIDERDesc ,AVD.RECORDSTATUS ,AVD.RECORDTYPE, 
	  			            VPAD.PAYMENTMODE  from VASRECORDING_TEMP VS
					 LEFT JOIN (Select Reference,Policynumber, vASProviderId from INSURANCEDETAILS 
					            UNION 
	                            Select Reference,Policynumber, vASProviderId from INSURANCEDETAILS_TEMP) T 
					 ON T.Reference = VS.VASREference 
					 INNER JOIN VASSTRUCTURE VST ON VS.PRODUCTCODE = VST.PRODUCTCODE
					 INNER JOIN AMTVEHICLEDEALER AVD ON   AVD.DEALERID = VST.MANUFACTURERID
	        INNER JOIN VASPROVIDERACCDETAIL VPAD ON VPAD.PROVIDERID = AVD.DEALERID
	         INNER JOIN VasProductType  VPT ON VPT.ProductType = VST.ProductType
					 INNER JOIN  VasProductCategory  VPC ON VPT.ProductCtg = VPC.ProductCtg 
					 
					 UNION ALL
					 Select VPT.ProductCtg,VS.Primarylinkref,VS.VASREference, T.Policynumber, AVD.DEALERID, AVD.DEALERNAME  ,AVD.RECORDSTATUS ,AVD.RECORDTYPE ,
	            	VPAD.PAYMENTMODE
	            	from VASRECORDING VS
					LEFT JOIN (
					          Select Reference,Policynumber, vASProviderId from INSURANCEDETAILS 
					            UNION 
					           Select Reference,Policynumber, vASProviderId from INSURANCEDETAILS_TEMP) T 
					ON T.Reference = VS.VASREference 
					 INNER JOIN VASSTRUCTURE VST ON VS.PRODUCTCODE = VST.PRODUCTCODE
					 INNER JOIN AMTVEHICLEDEALER AVD ON   AVD.DEALERID = VST.MANUFACTURERID
	                 INNER JOIN VASPROVIDERACCDETAIL VPAD ON VPAD.PROVIDERID = AVD.DEALERID
	                  INNER JOIN VasProductType  VPT ON VPT.ProductType = VST.ProductType
					 INNER JOIN  VasProductCategory  VPC ON VPT.ProductCtg = VPC.ProductCtg 
					WHERE     NOT EXISTS (SELECT     1  FROM    VASRecording_Temp WHERE   VasReference = VS.VasReference)
	
	</createView>
	</changeSet>
	
	<changeSet id="73" author="Durga prasad G">
			<sql>
				Delete From DATA_ENGINE_COLUMN Where TABLEID = (Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD'));
				Delete From DATA_ENGINE_TABLE Where CONFIGID = (Select Id from Data_Engine_Config Where Name  = 'INSURANCE_PAYMENT_UPLOAD');
				Delete From Data_Engine_Config Where Name  = 'INSURANCE_PAYMENT_UPLOAD';
				
				Insert Into Data_Engine_Config Values ((Select max(id)+1 from Data_Engine_Config),'INSURANCE_PAYMENT_UPLOAD','Insurance Payment Upload.',1,null,null,null,',',0,0,null,null,null,'C', '/opt/PFF/insurance/payments','INSURANCE_','.csv',0, null,null,null,0,null,1,1);
				                                        
				Insert Into DATA_ENGINE_TABLE values ((Select max(id)+1 from DATA_ENGINE_TABLE),(Select id from Data_Engine_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD'),'INSURANCEPAYMENTS_DATAENGINE',1,'InsuranceReference',null,null,null,null,null,null,null,3,0,0);
				 
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD')),'FinReference',0,'N',null,null,null,null,0,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD')),'Reference',0,'N',null,null,null,null,1,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD')),'PolicyNumber',0,'N',null,null,null,null,2,null,null,null,null,'M');
			</sql>
		</changeSet>
		
		<changeSet id="74" author="Durgaprasad G">
				<sql>
				Delete from RBFIELDDETAILS Where  RBMODULE= 'SUBHEAD' AND RBEVENT = 'SUBHEAD' AND RBFLDNAME = 'ae_productCode'; 
				Insert into RBFIELDDETAILS values ('SUBHEAD','SUBHEAD','ae_productCode','Product code Account Type','nvarchar',8,'0','1','','static,global,dbvalue','');
				</sql>
		</changeSet>
		
		<changeSet id="75" author="Durgaprasad G">
			<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
				 SELECT
			  FA. PAYMENTID,
			  FA.FINREFERENCE,
			  'D' CHANNEL,
			   0 PROVIDERID,
			  CASE
			    WHEN FA.PAYMENTTYPE = 'NEFT'
			    THEN 'N'
			    WHEN FA.PAYMENTTYPE = 'RTGS'
			    THEN 'R'
			    WHEN FA.PAYMENTTYPE = 'DD'
			    THEN 'D'
			    WHEN FA.PAYMENTTYPE = 'CHEQUE'
			    THEN 'C'
			    ELSE FA.PAYMENTTYPE
			  END DISBURSEMENT_TYPE,
			  FA.AMTTOBERELEASED/CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			  FA.DISBDATE,
			  FA.LLDATE,
			  FA.PAYABLELOC,
			  FA.PRINTINGLOC,
			  CU.CUSTCIF,
			  CU.CUSTSHRTNAME,
			  '' AS CUSTOMER_MOBILE,
			  CE.CUSTEMAIL CUSTOMER_EMAIL,
			  CS.CPPROVINCENAME CUSTOMER_STATE,
			  CC.PCCITYNAME CUSTOMER_CITY,
			  '' CUSTOMER_ADDRESS1,
			  '' CUSTOMER_ADDRESS2,
			  '' CUSTOMER_ADDRESS3,
			  '' CUSTOMER_ADDRESS4,
			  '' CUSTOMER_ADDRESS5,
			  BD.BANKNAME BANKNAME,
			  BB.BRANCHCODE,
			  BB.BRANCHDESC BRANCHDESC,
			  PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			  PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
			  BB.MICR MICR_CODE,
			  BB.IFSC IFSC_CODE,
			  FA.BENEFICIARYACCNO,
			  CASE
			    WHEN FA.PAYMENTTYPE = 'CHEQUE'
			    OR FA.PAYMENTTYPE   = 'DD'
			    THEN FA.LIABILITYHOLDNAME
			    ELSE FA.BENEFICIARYNAME
			  END BENEFICIARYNAME,
			  FA.PHONECOUNTRYCODE
			  ||FA.PHONEAREACODE
			  ||FA.PHONENUMBER AS BENEFICIARY_MOBILE,
			  BCE.CUSTEMAIL BENFICIRY_EMAIL,
			  BRS.CPPROVINCENAME BENFICIARY_STATE,
			  BRC.PCCITYNAME BENFICIARY_CITY,
			  '' BENFICIARY_ADDRESS1,
			  '' BENFICIARY_ADDRESS2,
			  '' BENFICIARY_ADDRESS3,
			  '' BENFICIARY_ADDRESS4,
			  '' BENFICIARY_ADDRESS5,
			  '' PAYMENT_DETAIL1,
			  '' PAYMENT_DETAIL2,
			  '' PAYMENT_DETAIL3,
			  '' PAYMENT_DETAIL4,
			  '' PAYMENT_DETAIL5,
			  '' PAYMENT_DETAIL6,
			  '' PAYMENT_DETAIL7,
			  FA.STATUS STATUS,
			  FA.DESCRIPTION REMARKS,
			  FA.PAYMENTTYPE PAYMENTTYPE,
			  FM.FINTYPE,
			  PB.PARTNERBANKID,
			  PB.PARTNERBANKCODE,
			  FA.INPUTDATE,
			  PB.ALWFILEDOWNLOAD,
			  PB.FILENAME,
			  FM.FINISACTIVE,
			  SMD.ENTITYCODE
			FROM
			  FINADVANCEPAYMENTS FA
			INNER JOIN
			  (
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN_TEMP
			    UNION ALL
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN T2
			    WHERE
			      NOT EXISTS
			      (
			        SELECT
			          1
			        FROM
			          FINANCEMAIN_TEMP T3
			        WHERE
			          T3.FINREFERENCE = T2.FINREFERENCE
			      )
			  )
			  FM
			ON
			  FM.FINREFERENCE = FA.FINREFERENCE
			INNER JOIN CUSTOMERS CU
			ON
			  CU.CUSTID = FM.CUSTID
			INNER JOIN RMTCURRENCIES CCY
			ON
			  CCY.CCYCODE = FA.DISBCCY
			INNER JOIN PARTNERBANKS PB
			ON
			  PB.PARTNERBANKID = FA.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE
			ON
			  CE.CUSTID              = CU.CUSTID
			AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES CA
			ON
			  CA.CUSTID             = CE.CUSTID
			AND CA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY CC
			ON
			  CC.PCCITY = CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS
			ON
			  CS.CPPROVINCE = CC.PCPROVINCE
			LEFT JOIN BANKBRANCHES BB
			ON
			  BB.BANKBRANCHID = FA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON
			  BD.BANKCODE = BB.BANKCODE
			LEFT JOIN
			  (
			    SELECT
			      PB.PARTNERBANKID,
			      PBD.BANKNAME,
			      PBB.BRANCHDESC,
			      PBBRC.PCCITYNAME,
			      PBBRS.CPPROVINCENAME
			    FROM PARTNERBANKS PB
			    INNER JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB.BANKBRANCHCODE
			    INNER JOIN BMTBANKDETAIL PBD ON PBD.BANKCODE = PBB.BANKCODE
			    LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
			    LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
			  )
			  PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
			LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND BR.ACCNUMBER  = FA.BENEFICIARYACCNO
			AND BR.CUSTID     = FM.CUSTID LEFT JOIN CUSTOMERS BC
			ON
			  BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE
			ON
			  BCE.CUSTID              = CU.CUSTID
			AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES BRCA
			ON
			  BRCA.CUSTID             = BR.CUSTID
			AND BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON
			  BRC.PCCITY = BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS
			ON
			  BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT
			ON
			  FM.FINTYPE=RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD
			ON
			  RFT.FINDIVISION=SMD.DIVISIONCODE
			WHERE
			  STATUS           ='APPROVED'
			AND PAYMENTID NOT IN
			  (
			    SELECT
			      DISBURSEMENT_ID
			    FROM
			      DISBURSEMENT_REQUESTS
			  )
			AND PAYMENTID NOT IN
			  (
			    SELECT
			      PAYMENTID
			    FROM
			      FINADVANCEPAYMENTS_TEMP
			  )
			UNION ALL
			SELECT
			  PI. PAYMENTINSTRUCTIONID PAYMENTID,
			  PH.FINREFERENCE,
			  PH.PAYMENTTYPE CHANNEL,
			  0 PROVIDERID,
			  CASE
			    WHEN PI.PAYMENTTYPE = 'NEFT'
			    THEN 'N'
			    WHEN PI.PAYMENTTYPE = 'RTGS'
			    THEN 'R'
			    WHEN PI.PAYMENTTYPE = 'DD'
			    THEN 'D'
			    WHEN PI.PAYMENTTYPE = 'CHEQUE'
			    THEN 'C'
			    ELSE PI.PAYMENTTYPE
			  END DISBURSEMENT_TYPE,
			  PI.PAYMENTAMOUNT/CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			  PI.POSTDATE DISBDATE,
			  PI.POSTDATE LLDATE,
			  PI.PAYABLELOC,
			  PI.PRINTINGLOC,
			  CU.CUSTCIF,
			  CU.CUSTSHRTNAME,
			  '' AS CUSTOMER_MOBILE,
			  CE.CUSTEMAIL CUSTOMER_EMAIL,
			  CS.CPPROVINCENAME CUSTOMER_STATE,
			  CC.PCCITYNAME CUSTOMER_CITY,
			  '' CUSTOMER_ADDRESS1,
			  '' CUSTOMER_ADDRESS2,
			  '' CUSTOMER_ADDRESS3,
			  '' CUSTOMER_ADDRESS4,
			  '' CUSTOMER_ADDRESS5,
			  BD.BANKNAME,
			  BB.BRANCHCODE,
			  BB.BRANCHDESC,
			  BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			  BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			  BB.MICR MICR_CODE,
			  BB.IFSC IFSC_CODE,
			  PI.ACCOUNTNO BENEFICIARYACCNO,
			  CASE
			    WHEN PI.PAYMENTTYPE = 'CHEQUE'
			    OR PI.PAYMENTTYPE   = 'DD'
			    THEN PI.FAVOURNAME
			    ELSE PI.ACCTHOLDERNAME
			  END BENEFICIARYNAME,
			  PI.PHONECOUNTRYCODE
			  ||PI.PHONENUMBER AS BENEFICIARY_MOBILE,
			  BCE.CUSTEMAIL BENFICIRY_EMAIL,
			  BRS.CPPROVINCENAME BENFICIARY_STATE,
			  BRC.PCCITYNAME BENFICIARY_CITY,
			  '' BENFICIARY_ADDRESS1,
			  '' BENFICIARY_ADDRESS2,
			  '' BENFICIARY_ADDRESS3,
			  '' BENFICIARY_ADDRESS4,
			  '' BENFICIARY_ADDRESS5,
			  '' PAYMENT_DETAIL1,
			  '' PAYMENT_DETAIL2,
			  '' PAYMENT_DETAIL3,
			  '' PAYMENT_DETAIL4,
			  '' PAYMENT_DETAIL5,
			  '' PAYMENT_DETAIL6,
			  '' PAYMENT_DETAIL7,
			  PI.STATUS STATUS,
			  PI.REMARKS REMARKS,
			  PI.PAYMENTTYPE PAYMENTTYPE,
			  FM.FINTYPE,
			  PB.PARTNERBANKID,
			  PB.PARTNERBANKCODE,
			  PI.POSTDATE INPUTDATE,
			  PB.ALWFILEDOWNLOAD,
			  PB.FILENAME,
			  FM.FINISACTIVE,
			  SMD.ENTITYCODE
			FROM
			  PAYMENTINSTRUCTIONS PI
			INNER JOIN PAYMENTHEADER PH
			ON
			  PH.PAYMENTID = PI.PAYMENTID
			INNER JOIN
			  (
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN
			    UNION ALL
			    SELECT
			      CUSTID,
			      FINREFERENCE,
			      FINTYPE,
			      FINISACTIVE
			    FROM
			      FINANCEMAIN_TEMP T2
			    WHERE
			      NOT EXISTS
			      (
			        SELECT
			          1
			        FROM
			          FINANCEMAIN_TEMP T3
			        WHERE
			          T3.FINREFERENCE = T2.FINREFERENCE
			      )
			  )
			  FM
			ON FM.FINREFERENCE = PH.FINREFERENCE 
			INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
			INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
			INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
			LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
			LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY = BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS ON BBRS.CPPROVINCE = BBRC.PCPROVINCE 
			LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID AND BR.ACCNUMBER = PI.ACCOUNTNO AND BR.CUSTID     = FM.CUSTID 
			LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID AND BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE=RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD ON RFT.FINDIVISION=SMD.DIVISIONCODE
			WHERE PI.STATUS ='APPROVED'
			AND PI.PAYMENTINSTRUCTIONID NOT IN
			  (
			    SELECT
			      DISBURSEMENT_ID
			    FROM
			      DISBURSEMENT_REQUESTS
			  )
			UNION ALL
			SELECT
			  PI.ID  			PAYMENTID,
			  ''     			FINREFERENCE,
			  'I' 				CHANNEL,
			  PI.ProviderId		PROVIDERID,
			  CASE
			    WHEN PI.PAYMENTTYPE = 'NEFT'
			    THEN 'N'
			    WHEN PI.PAYMENTTYPE = 'RTGS'
			    THEN 'R'
			    WHEN PI.PAYMENTTYPE = 'DD'
			    THEN 'D'
			    WHEN PI.PAYMENTTYPE = 'CHEQUE'
			    THEN 'C'
			    ELSE PI.PAYMENTTYPE
			  END DISBURSEMENT_TYPE,
			  PI.PAYMENTAMOUNT/CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			  PI.PAYMENTDATE DISBDATE,
			  PI.PAYMENTDATE LLDATE,
			  '' PAYABLELOC,
			  '' PRINTINGLOC,
			  '' CUSTCIF,
			  '' CUSTSHRTNAME,
			  '' CUSTOMER_MOBILE,
			  '' CUSTOMER_EMAIL,
			  '' CUSTOMER_STATE,
			  '' CUSTOMER_CITY,
			  '' CUSTOMER_ADDRESS1,
			  '' CUSTOMER_ADDRESS2,
			  '' CUSTOMER_ADDRESS3,
			  '' CUSTOMER_ADDRESS4,
			  '' CUSTOMER_ADDRESS5,
			  BD.BANKNAME,
			  BB.BRANCHCODE,
			  BB.BRANCHDESC,
			  BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			  BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			  BB.MICR MICR_CODE,
			  BB.IFSC IFSC_CODE,
			  VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
			  AVD.DEALERNAME BENEFICIARYNAME,
			  AVD.DEALERTELEPHONE BENEFICIARY_MOBILE,
			  AVD.EMAIL BENFICIRY_EMAIL,
			  BRS.CPPROVINCENAME BENFICIARY_STATE,
			  BRC.PCCITYNAME BENFICIARY_CITY,
			  AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
			  AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
			  AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
			  '' BENFICIARY_ADDRESS4,
			  '' BENFICIARY_ADDRESS5,
			  '' PAYMENT_DETAIL1,
			  '' PAYMENT_DETAIL2,
			  '' PAYMENT_DETAIL3,
			  '' PAYMENT_DETAIL4,
			  '' PAYMENT_DETAIL5,
			  '' PAYMENT_DETAIL6,
			  '' PAYMENT_DETAIL7,
			  PI.STATUS STATUS,
			  PI.REMARKS REMARKS,
			  PI.PAYMENTTYPE PAYMENTTYPE,
			  '' FINTYPE,
			  PB.PARTNERBANKID,
			  PB.PARTNERBANKCODE,
			  PI.PAYMENTDATE INPUTDATE,
			  PB.ALWFILEDOWNLOAD,
			  PB.FILENAME,
			  1  FINISACTIVE,
			  PI.ENTITYCODE
			FROM  InsurancePaymentInstructions PI
			INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
			INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
			INNER JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
			INNER JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
			
			LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY = BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS ON BBRS.CPPROVINCE = BBRC.PCPROVINCE 
			LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = AVD.DEALERCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			WHERE PI.STATUS ='APPROVED' AND PI.PAYMENTAMOUNT > 0
			AND PI.ID NOT IN
			  (
			    SELECT  DISBURSEMENT_ID
			    FROM DISBURSEMENT_REQUESTS
			  )
			</createView>
		</changeSet>
	 <changeSet id="76" author="saikiran.v">
		<addColumn tableName="amtvehicledealer_temp">
			<column name="ShortCode" type="varchar(3)" />
		</addColumn>
		<addColumn tableName="amtvehicledealer">
			<column name="ShortCode" type="varchar(3)" />
		</addColumn>
	</changeSet>
	<changeSet id="77" author="saikiran.v">
		<sql>
				Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
			    Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
			    Insert into SecRights Values((Select MAX(RightID)+1 From SecRights), 3, 'VehicleDealerDialog_VASM_ShortCode', 'VehicleDealerDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
			    Insert Into secGrouprights values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='DEALER_MAKER'),(select RightId from secRights where RightName='VehicleDealerDialog_VASM_ShortCode'),1,0,1000,current_timestamp, 'Approved','','','','','',0);
		</sql>
	</changeSet>
	<changeSet id="78" author="saikiran.v">
		<createView viewName="AMTVEHICLEDEALER_VIEW" replaceIfExists="true">
						SELECT
					  T1.DEALERID,
					  T1.DEALERTYPE,
					  T1.DEALERNAME,
					  T1.DEALERTELEPHONE,
					  T1.DEALERFAX,
					  T1.DEALERADDRESS1,
					  T1.DEALERADDRESS2,
					  T1.DEALERADDRESS3,
					  T1.DEALERADDRESS4,
					  T1.DEALERCOUNTRY,
					  T5.COUNTRYDESC LOVDESCCOUNTRY,
					  T1.DEALERPROVINCE,
					  T4.CPPROVINCENAME LOVDESCPROVINCE,
					  T1.DEALERCITY,
					  T3.PCCITYNAME LOVDESCCITY,
					  T1.EMAIL,
					  T1.POBOX,
					  T1.ZIPCODE,
					  T1.PANNUMBER,
					  T1.TAXNUMBER,
					  T1.PRODUCTCTG,
					  T10.PRODUCTCTGDESC,
					  T1.ACTIVE,
					  T1.EMIRATES,
					  T1.COMMISIONPAIDAT,
					  T1.CALCULATIONRULE,
					  T7.RULECODEDESC CALRULEDESC,
					  T1.PAYMENTMODE,
					  T1.ACCOUNTNUMBER,
					  T1.ACCOUNTINGSETID,
					  T8.ACCOUNTSETCODE     ACCOUNTINGSETCODE,
					  T8.ACCOUNTSETCODENAME ACCOUNTINGSETDESC,
					  T9.CPPROVINCENAME     EMIRATESDESCRIPTION,
					  T1.SELLERTYPE,
					  T1.VERSION,
					  T1.LASTMNTBY,
					  T1.LASTMNTON,
					  T1.RECORDSTATUS,
					  T1.ROLECODE,
					  T1.NEXTROLECODE,
					  T1.TASKID,
					  T1.NEXTTASKID,
					  T1.RECORDTYPE,
					  T1.WORKFLOWID,
					  T1.CODE,
					  T1.shortCode
					FROM
					  AMTVEHICLEDEALER_TEMP T1
					LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.DEALERCOUNTRY    = T3.PCCOUNTRY AND T1.DEALERPROVINCE = T3.PCPROVINCE AND T1.DEALERCITY     = T3.PCCITY
					LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.DEALERCOUNTRY    = T4.CPCOUNTRY AND T1.DEALERPROVINCE = T4.CPPROVINCE
					LEFT JOIN BMTCOUNTRIES T5 ON T1.DEALERCOUNTRY = T5.COUNTRYCODE
					LEFT JOIN RULES T7 ON T1.CALCULATIONRULE = T7.RULECODE AND T7.RULEEVENT     = 'ADDDBS'
					LEFT JOIN RMTACCOUNTINGSET T8 ON T1.ACCOUNTINGSETID = T8.ACCOUNTSETID
					LEFT JOIN RMTCOUNTRYVSPROVINCE T9 ON T1.EMIRATES = T9.CPPROVINCE
					LEFT JOIN VASPRODUCTCATEGORY T10 ON T1.PRODUCTCTG = T10.PRODUCTCTG
					UNION ALL
					SELECT
					  T1.DEALERID,
					  T1.DEALERTYPE,
					  T1.DEALERNAME,
					  T1.DEALERTELEPHONE,
					  T1.DEALERFAX,
					  T1.DEALERADDRESS1,
					  T1.DEALERADDRESS2,
					  T1.DEALERADDRESS3,
					  T1.DEALERADDRESS4,
					  T1.DEALERCOUNTRY,
					  T5.COUNTRYDESC LOVDESCCOUNTRY,
					  T1.DEALERPROVINCE,
					  T4.CPPROVINCENAME LOVDESCPROVINCE,
					  T1.DEALERCITY,
					  T3.PCCITYNAME LOVDESCCITY,
					  T1.EMAIL,
					  T1.POBOX,
					  T1.ZIPCODE,
					  T1.PANNUMBER,
					  T1.TAXNUMBER,
					  T1.PRODUCTCTG,
					  T10.PRODUCTCTGDESC,
					  T1.ACTIVE,
					  T1.EMIRATES,
					  T1.COMMISIONPAIDAT,
					  T1.CALCULATIONRULE,
					  T7.RULECODEDESC CALRULEDESC,
					  T1.PAYMENTMODE,
					  T1.ACCOUNTNUMBER,
					  T1.ACCOUNTINGSETID,
					  T8.ACCOUNTSETCODE ACCOUNTINGSETCODE,
					  T8.ACCOUNTSETCODENAME ACCOUNTINGSETDESC,
					  T9.CPPROVINCENAME EMIRATESDESCRIPTION,
					  T1.SELLERTYPE,
					  T1.VERSION,
					  T1.LASTMNTBY,
					  T1.LASTMNTON,
					  T1.RECORDSTATUS,
					  T1.ROLECODE,
					  T1.NEXTROLECODE,
					  T1.TASKID,
					  T1.NEXTTASKID,
					  T1.RECORDTYPE,
					  T1.WORKFLOWID,
					  T1.CODE,
					  T1.shortCode
					FROM
					  AMTVEHICLEDEALER T1
					LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.DEALERCOUNTRY    = T3.PCCOUNTRY AND T1.DEALERPROVINCE = T3.PCPROVINCE AND T1.DEALERCITY     = T3.PCCITY
					LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.DEALERCOUNTRY    = T4.CPCOUNTRY AND T1.DEALERPROVINCE = T4.CPPROVINCE
					LEFT JOIN BMTCOUNTRIES T5 ON T1.DEALERCOUNTRY = T5.COUNTRYCODE
					LEFT JOIN RULES T7 ON T1.CALCULATIONRULE = T7.RULECODE AND T7.RULEEVENT     = 'ADDDBS'
					LEFT JOIN RMTACCOUNTINGSET T8 ON T1.ACCOUNTINGSETID = T8.ACCOUNTSETID
					LEFT JOIN RMTCOUNTRYVSPROVINCE T9 ON T1.EMIRATES = T9.CPPROVINCE
					LEFT JOIN VASPRODUCTCATEGORY T10 ON T1.PRODUCTCTG = T10.PRODUCTCTG
					WHERE
					  NOT
					  (
					    EXISTS
					    (
					      SELECT
					        1
					      FROM
					        AMTVEHICLEDEALER_TEMP
					      WHERE
					        AMTVEHICLEDEALER_TEMP.DEALERID = T1.DEALERID
					    )
					  )
		</createView>
	</changeSet>
	<changeSet id="79" author="saikiran.v">
		<createView viewName="AMTVEHICLEDEALER_AVIEW" replaceIfExists="true">
				SELECT
				  T1.DEALERID,
				  T1.DEALERTYPE,
				  T1.DEALERNAME,
				  T1.DEALERTELEPHONE,
				  T1.DEALERFAX,
				  T1.DEALERADDRESS1,
				  T1.DEALERADDRESS2,
				  T1.DEALERADDRESS3,
				  T1.DEALERADDRESS4,
				  T1.DEALERCOUNTRY,
				  T5.COUNTRYDESC LOVDESCCOUNTRY,
				  T1.DEALERPROVINCE,
				  T4.CPPROVINCENAME LOVDESCPROVINCE,
				  T1.DEALERCITY,
				  T3.PCCITYNAME LOVDESCCITY,
				  T1.EMAIL,
				  T1.POBOX,
				  T1.ZIPCODE,
				  T1.PANNUMBER,
				  T1.TAXNUMBER,
				  T1.PRODUCTCTG,
				  T10.PRODUCTCTGDESC,
				  T1.ACTIVE,
				  T1.EMIRATES,
				  T1.COMMISIONPAIDAT,
				  T1.CALCULATIONRULE,
				  T7.RULECODEDESC CALRULEDESC,
				  T1.PAYMENTMODE,
				  T1.ACCOUNTNUMBER,
				  T1.ACCOUNTINGSETID,
				  T8.ACCOUNTSETCODE ACCOUNTINGSETCODE,
				  T8.ACCOUNTSETCODENAME ACCOUNTINGSETDESC,
				  T9.CPPROVINCENAME EMIRATESDESCRIPTION,
				  T1.SELLERTYPE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T1.CODE,
				  T1.shortCode
				FROM
				  AMTVEHICLEDEALER T1
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.DEALERCOUNTRY    = T3.PCCOUNTRY AND T1.DEALERPROVINCE = T3.PCPROVINCE AND T1.DEALERCITY     = T3.PCCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.DEALERCOUNTRY    = T4.CPCOUNTRY AND T1.DEALERPROVINCE = T4.CPPROVINCE
				LEFT JOIN BMTCOUNTRIES T5 ON T1.DEALERCOUNTRY = T5.COUNTRYCODE
				LEFT JOIN RULES T7 ON T1.CALCULATIONRULE = T7.RULECODE AND T7.RULEEVENT     = 'ADDDBS'
				LEFT JOIN RMTACCOUNTINGSET T8 ON T1.ACCOUNTINGSETID = T8.ACCOUNTSETID
				LEFT JOIN RMTCOUNTRYVSPROVINCE T9 ON T1.EMIRATES = T9.CPPROVINCE
				LEFT JOIN VASPRODUCTCATEGORY T10 ON T1.PRODUCTCTG = T10.PRODUCTCTG
		</createView>
	</changeSet>
	
	
	<changeSet id="79" author="saikiran.v">
		<createView viewName="AMTVEHICLEDEALER_AVIEW" replaceIfExists="true">
				SELECT
				  T1.DEALERID,
				  T1.DEALERTYPE,
				  T1.DEALERNAME,
				  T1.DEALERTELEPHONE,
				  T1.DEALERFAX,
				  T1.DEALERADDRESS1,
				  T1.DEALERADDRESS2,
				  T1.DEALERADDRESS3,
				  T1.DEALERADDRESS4,
				  T1.DEALERCOUNTRY,
				  T5.COUNTRYDESC LOVDESCCOUNTRY,
				  T1.DEALERPROVINCE,
				  T4.CPPROVINCENAME LOVDESCPROVINCE,
				  T1.DEALERCITY,
				  T3.PCCITYNAME LOVDESCCITY,
				  T1.EMAIL,
				  T1.POBOX,
				  T1.ZIPCODE,
				  T1.PANNUMBER,
				  T1.TAXNUMBER,
				  T1.PRODUCTCTG,
				  T10.PRODUCTCTGDESC,
				  T1.ACTIVE,
				  T1.EMIRATES,
				  T1.COMMISIONPAIDAT,
				  T1.CALCULATIONRULE,
				  T7.RULECODEDESC CALRULEDESC,
				  T1.PAYMENTMODE,
				  T1.ACCOUNTNUMBER,
				  T1.ACCOUNTINGSETID,
				  T8.ACCOUNTSETCODE ACCOUNTINGSETCODE,
				  T8.ACCOUNTSETCODENAME ACCOUNTINGSETDESC,
				  T9.CPPROVINCENAME EMIRATESDESCRIPTION,
				  T1.SELLERTYPE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T1.CODE,
				  T1.shortCode
				FROM
				  AMTVEHICLEDEALER T1
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.DEALERCOUNTRY    = T3.PCCOUNTRY AND T1.DEALERPROVINCE = T3.PCPROVINCE AND T1.DEALERCITY     = T3.PCCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.DEALERCOUNTRY    = T4.CPCOUNTRY AND T1.DEALERPROVINCE = T4.CPPROVINCE
				LEFT JOIN BMTCOUNTRIES T5 ON T1.DEALERCOUNTRY = T5.COUNTRYCODE
				LEFT JOIN RULES T7 ON T1.CALCULATIONRULE = T7.RULECODE AND T7.RULEEVENT     = 'ADDDBS'
				LEFT JOIN RMTACCOUNTINGSET T8 ON T1.ACCOUNTINGSETID = T8.ACCOUNTSETID
				LEFT JOIN RMTCOUNTRYVSPROVINCE T9 ON T1.EMIRATES = T9.CPPROVINCE
				LEFT JOIN VASPRODUCTCATEGORY T10 ON T1.PRODUCTCTG = T10.PRODUCTCTG
		</createView>
	</changeSet>
	<changeSet id="76" author="Durgaprasad G">
		<addColumn tableName="INSURANCEDETAILS_DATAENGINE">
			<column name="BatchId" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="77" author="Durgaprasad G">
		<addColumn tableName="INSURANCEPAYMENTS_DATAENGINE">
			<column name="BatchId" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="78" author="Durgaprasad G">
		<createIndex tableName="INSURANCEDETAILS_DATAENGINE" indexName="IND_INSURANCEDETAILS_BATCHID">
			<column name="BatchId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="79" author="Durgaprasad G">
		<createIndex tableName="INSURANCEPAYMENTS_DATAENGINE" indexName="IND_INSURANCEPAYMENTS_BATCHID">
			<column name="BatchId" type="bigint" />
		</createIndex>
	</changeSet>
	 
	 <changeSet id="80" author="Durgaprasad G">
		 <sql>
		 	Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'BatchId',0,'N',null,null,'${FILE_ID}',null,0,null,null,null,null,'M');
		 	Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_PAYMENT_UPLOAD')),'BatchId',0,'N',null,null,'${FILE_ID}',null,0,null,null,null,null,'M');
		 </sql>
	 </changeSet>
	 
	 <changeSet id="81" author="Durgaprasad G">
	 	<sql>
			Delete From DATA_ENGINE_COLUMN Where TABLEID = (Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT'));
			Delete From DATA_ENGINE_TABLE Where CONFIGID = (Select Id from Data_Engine_Config Where Name  = 'INSURANCE_FILE_IMPORT');
			Delete From Data_Engine_Config Where Name  = 'INSURANCE_FILE_IMPORT';
			
			Insert Into Data_Engine_Config Values ((Select max(id)+1 from Data_Engine_Config),'INSURANCE_FILE_IMPORT','Insurance file import.',1,null,null,null,',',0,0,null,null,null,'C', '/opt/PFF/insurance/details','INSURANCE_','.csv',0, null,null,null,0,null,1,1);
			                                        
			Insert Into DATA_ENGINE_TABLE values ((Select max(id)+1 from DATA_ENGINE_TABLE),(Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT'),'INSURANCEDETAILS_DATAENGINE',1,'Reference',null,null,null,null,null,null,null,24,0,0);
			
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT')),'Reference',0,'N',null,null,null,null,0,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FormHandoverDate',0,'N',null,null,null,null,1,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'StartDate',0,'N',null,null,null,null,2,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'EndDate',0,'N',null,null,null,null,3,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'Term',0,'N',null,null,null,null,4,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'CoverageAmount',0,'N',null,null,null,null,5,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PolicyNumber',0,'N',null,null,null,null,6,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'IssuanceDate',0,'N',null,null,null,null,7,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'IssuanceStatus',0,'N',null,null,null,null,8,null,null,null,null,'CHECK:ISSUED,DECLINE,CANCEL,REJECTED,PENDING,DISCREPENT');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PartnerPremium',0,'N',null,null,null,null,9,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PartnerReceivedDate',0,'N',null,null,null,null,10,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt1',0,'N',null,null,null,null,11,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'AWBNoF',0,'N',null,null,null,null,12,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchStatusF',0,'N',null,null,null,null,13,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'ReasonOfRTOF',0,'N',null,null,null,null,14,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt2',0,'N',null,null,null,null,15,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt3',0,'N',null,null,null,null,16,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'MedicalStatusF',0,'N',null,null,null,null,17,null,null,null,null,'CHECK:Y,N');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyReasonCategory',0,'N',null,null,null,null,18,null,null,null,null,'CHECK:U/W MEDICAL,INCOMPLETE FORM,PREMIUM MISMATCH,CALCULATOR MISMATCH,NOMINEE MINOR,KYC REQUIRED');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyReason',0,'N',null,null,null,null,19,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyResReqF',0,'N',null,null,null,null,20,null,null,null,null,'O');---'CHECK:Y,N'
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FPR',0,'N',null,null,null,null,21,null,null,null,null,'CHECK:BFL,PARTNER');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PolicyStatus',0,'N',null,null,null,null,22,null,null,null,null,'CHECK:ACTIVE,CANCELLED,SURRENDERED,CLAIM,MATURED');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FinReference',0,'N',null,null,null,null,23,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'BatchId',0,'N',null,null,'${FILE_ID}',null,0,null,null,null,null,'M');
	 	</sql>
	 </changeSet>
	 
	 <changeSet id="82" author="Durgaprasad G">
				<sql>
				Delete from RBFIELDDETAILS Where  RBMODULE= 'SUBHEAD' AND RBEVENT = 'SUBHEAD' AND RBFLDNAME = 'ae_dealerCode'; 
				Insert into RBFIELDDETAILS values ('SUBHEAD','SUBHEAD','ae_dealerCode','Dealer code.','nvarchar',8,'0','1','','static,global,dbvalue','');
				</sql>
	</changeSet>
		
	<changeSet id="83" author="DurgaPrasad G">
		<addColumn tableName="VASRECORDING">
			<column name="ManualAdviseId" type="bigint"/>
			<column name="PaymentInsId" type="bigint"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="84" author="DurgaPrasad G">
		<addColumn tableName="VASRECORDING_Temp">
			<column name="ManualAdviseId" type="bigint"/>
			<column name="PaymentInsId" type="bigint"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="85" author="Durgaprasad G">
	<createView viewName="VASRECORDING_VIEW" replaceIfExists="true">
	   SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
					          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
					          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
					          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
					          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
					          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
					          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , 
					          T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType, T1.ManualAdviseId, T1.paymentInsId
					          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
					          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
					          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
					          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
					          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
					          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
					          Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
					UNION ALL
					SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
					          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
					          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
					          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
					          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
					          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
					          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode ,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType, T1.ManualAdviseId, T1.paymentInsId 
					          FROM   VASRecording  T1 LEFT OUTER JOIN
					          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
					          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
					          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
					          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
					          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
					          Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
					 WHERE     NOT EXISTS (SELECT     1  FROM    VASRecording_Temp WHERE   VasReference = T1.VasReference)
	 </createView>
</changeSet>

	<changeSet id="86" author="Durgaprasad G">
		<createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
		  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode ,T1.OLDVASREFERENCE ,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber, T1.CancelAfterFLP 
		          ,T2.FREELOCKPERIOD flpDays , FM.FinType , T1.ManualAdviseId, T1.paymentInsId 
		          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN 
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			      Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
		</createView>
	</changeSet>

	<changeSet id="87" author="Durgaprasad G">
		<createView viewName="VASRECORDING_AVIEW" replaceIfExists="true">
	 		  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting, 
			          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , 	T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays 
			          , FM.FinType , T1.ManualAdviseId, T1.paymentInsId 
			          FROM   VASRecording  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
				      Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
	 </createView>
	</changeSet>
	
	<changeSet id="88" author="Durgaprasad G">
		<sql>
		        Update VASRECORDING set ManualAdviseId = 0 , PaymentInsId = 0;
	        Update VASRECORDING_TEMP set ManualAdviseId = 0 , PaymentInsId = 0;
		</sql>
	</changeSet>
	
	<changeSet id="89" author="Durgaprasad G">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
	
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Item_Insurance_DetailsReport','InsuranceReports',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Item_Insurance_UploadStatusReport','InsuranceReports',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Item_Insurance_PaymentUploadStatusReport','InsuranceReports',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'INSURANCE_REPORTS', 'Insurance Reports', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REPORTS') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menu_Item_Insurance_DetailsReport'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REPORTS') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menu_Item_Insurance_UploadStatusReport'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REPORTS') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menu_Item_Insurance_PaymentUploadStatusReport'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
	    INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'INSURANCE_REPORTS','Insurance Reports','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
	     
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='INSURANCE_REPORTS'), (Select  RoleID  From SecRoles Where RoleCd='INSURANCE_REPORTS'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	<changeSet id="90" author="Durgaprasad G">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		

		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Category_Insurance_Reports','InsuranceReports',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REPORTS') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menu_Category_Insurance_Reports'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	
	<changeSet id="91" author="Durgaprasad G">
		<sql>
			delete from reportfilterfields where reportid in (select  reportid from REPORTCONFIGURATION where REPORTJASPERNAME='InsurancePaymentUploadStatus');
			delete from reportfilterfields where reportid in (select  reportid from REPORTCONFIGURATION where REPORTJASPERNAME='Insurance_Upload_Status_Report');
			Delete from REPORTCONFIGURATION where REPORTJASPERNAME='InsurancePaymentUploadStatus';
			Delete from REPORTCONFIGURATION where REPORTJASPERNAME='Insurance_Upload_Status_Report';
			
			Insert into REPORTCONFIGURATION (REPORTID,REPORTNAME,REPORTHEADING,PROMPTREQUIRED,REPORTJASPERNAME,DATASOURCENAME,SHOWTEMPLIBRARY,MENUITEMCODE,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,ALWMULTIFORMAT,WHERECONDITION) 
			values ((select max(REPORTID)+1 from REPORTCONFIGURATION),'Excel:Insurance Payment Upload Status','Insurance Payment Upload Status',
			1,'InsurancePaymentUploadStatus','dataSource',1,'menu_Item_Insurance_PaymentUploadStatusReport',2,1000,null,null,null,null,null,null,0,to_date('07-JAN-2013 00:00:00','DD-MON-RRRR HH24:MI:SS'),0,0);
			
			Insert into REPORTCONFIGURATION (REPORTID,REPORTNAME,REPORTHEADING,PROMPTREQUIRED,REPORTJASPERNAME,DATASOURCENAME,SHOWTEMPLIBRARY,MENUITEMCODE,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,ALWMULTIFORMAT,WHERECONDITION) 
			values ((select max(REPORTID)+1 from REPORTCONFIGURATION),'Excel:Insurance Upload Status Report','Insurance Upload Status Report',1,
			'Insurance_Upload_Status_Report','dataSource',1,'menu_Item_Insurance_UploadStatusReport',2,1000,null,null,null,null,null,null,0,to_date('07-JAN-2013 00:00:00','DD-MON-RRRR HH24:MI:SS'),0,0);
			
			Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,FILTERFILEDS)
			values ((select  reportid from REPORTCONFIGURATION where REPORTJASPERNAME='InsurancePaymentUploadStatus'),1,
			'FileName','LOVSEARCH','File Name','DES.id',null,'DataEngineStatusInsPayUpload','getId','getFileName',1,0,0,0,1,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,to_date('25-OCT-2012 00:00:00','DD-MON-RRRR HH24:MI:SS'),null);
			
			Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,FILTERFILEDS)
			values ((select  reportid from REPORTCONFIGURATION where REPORTJASPERNAME='Insurance_Upload_Status_Report'),1,
			'FileName','LOVSEARCH','File Name','DES.id',null,'DataEngineStatusInsUpload','getId','getFileName',1,0,0,0,1,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,to_date('25-OCT-2012 00:00:00','DD-MON-RRRR HH24:MI:SS'),null);
			
			UPDATE REPORTFILTERFIELDS SET MULTISELECTSEARCH =0 WHERE 
			reportid in (select  reportid from REPORTCONFIGURATION where REPORTJASPERNAME
			IN ('Insurance_Upload_Status_Report','InsurancePaymentUploadStatus'));
		</sql>
	</changeSet>
	
<!-- 	<changeSet id="92" author="Durgaprasad G">
		<dropUniqueConstraint tableName="VASPROVIDERACCDETAIL" constraintName="SYS_C001181885"/>
	</changeSet>
	<changeSet id="93" author="Durgaprasad G">
		<dropUniqueConstraint tableName="VASPROVIDERACCDETAIL_temp" constraintName="SYS_C001181886"/>
	</changeSet> -->
	
	<changeSet id="94" author="Durgaprasad G">
		<addUniqueConstraint tableName="VASPROVIDERACCDETAIL" columnNames="PROVIDERID,ENTITYCODE" constraintName="UK_VPAD_PID_ECODE"/>
	</changeSet>
	<changeSet id="95" author="Durgaprasad G">
		<addUniqueConstraint tableName="VASPROVIDERACCDETAIL_TEMP" columnNames="PROVIDERID,ENTITYCODE" constraintName="UK_VPAD_T_PID_ECODE"/>
	</changeSet>
	
	<changeSet id="96" author="Durgaprasad G">
		<addDefaultValue columnName="PaymentInsId" tableName="VASRECORDING_TEMP" defaultValue="0"/>
		<addDefaultValue columnName="PaymentInsId" tableName="VASRECORDING"  defaultValue="0"/>
	</changeSet>
	
	<changeSet id="97" author="Durgaprasad G">
	<sql>
			delete from REPORTFILTERFIELDS where reportid in (select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport');
			delete from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport';
				
			Insert into REPORTCONFIGURATION values ((select max(reportid)+1 from reportconfiguration),'Excel:Insurance Detail Report','Insurance Detail Report',1,'InsuranceDetailsReport','dataSource',1,'menu_Item_Insurance_DetailsReport',1,1005,null,null,null,null,null,null,0,current_timestamp,1,1);
			
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),1,'Date','DATERANGE','Date','Issuancedate',null,'---Select----',null,null,0,0,0,0,1,1,null,null,null,null,150,0,'=',3,1000,'Approved',null,null,null,null,null,0,Current_TimeStamp,null);
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),2,'Entity Code','LOVSEARCH','Entity Code','entitycode',null,'Entity','getEntityCode','getEntityDesc',0,0,0,0,2,0,null,null,null,null,150,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),3,'Company','LOVSEARCH','Company','dealerid',null,'VASVehicleDealer','getDealerId','getDealerName',0,0,0,0,3,1,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,Current_TimeStamp,null);
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),4,'VAS Product','LOVSEARCH','VAS Product','InsuranceType',null,'FinTypeVASProducts','getVasProduct','getVasProduct',0,0,0,0,4,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,Current_TimeStamp,null);
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),5,'Recon','STATICLIST','Recon','ReconStatus','getInsuranceReconStatus',null,null,null,0,0,0,0,5,0,null,null,null,null,250,0,'=',3,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),6,'Policy Status','STATICLIST','Policy Status','InsurancePartnerStatus','getInsuranceStatus',null,null,null,0,0,0,0,6,0,null,null,null,null,250,0,'=',3,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),7,'Payment Status','STATICLIST','Payment Status','paymentstatus','getInsurancePaymentStatus',null,null,null,0,0,0,0,7,0,null,null,null,null,250,0,'=',3,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			Insert into REPORTFILTERFIELDS values ((select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_Insurance_DetailsReport'),8,'Receipt Status','STATICLIST','Receipt Status','ReceiptStatus','getInsuranceReceiptStatus',null,null,null,0,0,0,0,8,0,null,null,null,null,250,0,'=',3,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
	</sql>
	</changeSet>

	 <changeSet id="98" author="Durgaprasad G">
		<sql>
			update REPORTFILTERFIELDS set mandatory=1 where reportid in
			(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_UploadStatusReport');

			update REPORTFILTERFIELDS set mandatory=1 where reportid in
			(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_PaymentUploadStatusReport');
		</sql>
	</changeSet>
	
	<changeSet id="99" author="Durgaprasad.g">
	 <sql>
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'id_totPayAmount';
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'vr_patnerPremiumAmt';
		
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'id_totPayAmount','Insurance Total Payment amount.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'vr_patnerPremiumAmt','Insurance Partner premium amount.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
	 </sql>
	</changeSet>
	
	<changeSet id="100" author="Durgaprasad G">
		<addColumn tableName="InsuranceDetails">
			<column name="PaymentLinkedTranId" type="bigint" defaultValue="0"/>
		</addColumn>
		<addColumn tableName="InsuranceDetails_Temp">
			<column name="PaymentLinkedTranId" type="bigint" defaultValue="0"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="101" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_View" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid, T1.LinkedTranId 
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium, 
            VS.FREELOCKPERIOD, T1.PaymentLinkedTranId  from InsuranceDetails_Temp T1
            inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
            Inner join VASSTRUCTURE VS on VS.PRODUCTCODE = VR.PRODUCTCODE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			UNION ALL
			Select T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid,  T1.LinkedTranId
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST, VR.Fee InsurancePremium,
             VS.FREELOCKPERIOD, T1.PaymentLinkedTranId  from InsuranceDetails T1
             inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
             Inner join VASSTRUCTURE VS on VS.PRODUCTCODE = VR.PRODUCTCODE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
			WHERE     NOT EXISTS (SELECT 1 FROM InsuranceDetails_Temp WHERE Reference = T1.Reference)
		</createView>
	</changeSet>
	<changeSet id="102" author="Durgaprasad G">
		<createView viewName="InsuranceDetails_AView" replaceIfExists="true">
			Select  T1.Id ,T1.Reference ,T1.FinReference ,T1.StartDate ,T1.EndDate ,T1.Term ,T1.CoverageAmount ,T1.PolicyNumber ,T1.IssuanceDate 
			      ,T1.IssuanceStatus ,T1.PartnerPremium ,T1.PartnerReceivedDate ,T1.AWBNo1 ,T1.AWBNo2 ,T1.AWBNo3 ,T1.DispatchStatus1 
			      ,T1.DispatchStatus2 ,T1.DispatchStatus3 ,T1.ReasonofRTO1 ,T1.ReasonofRTO2 ,T1.ReasonofRTO3 ,T1.DispatchDateAttempt1 
			      ,T1.DispatchDateAttempt2 ,T1.DispatchDateAttempt3 ,T1.MedicalStatus ,T1.PendencyReasonCategory ,T1.PendencyReason 
			      ,T1.InsPendencyResReq ,T1.FPR ,T1.PolicyStatus ,T1.FormHandoverDate ,T1.NomineeName ,T1.NomineeRelation ,T1.VASProviderId 
			      ,T1.ReconStatus ,T1.ManualReconRemarks, T1.ManualReconResCategory,T1.Version ,T1.Lastmntby ,T1.Lastmnton ,T1.Recordstatus ,T1.Rolecode ,T1.Nextrolecode ,T1.Taskid ,  T1.LinkedTranId
			      ,T1.Nexttaskid ,T1.Recordtype ,T1.Workflowid, T1.TolaranceAmount, FM.FinType, VR.POSTINGAGAINST,  
			      VR.Fee InsurancePremium, VS.FREELOCKPERIOD, T1.PaymentLinkedTranId  from InsuranceDetails T1
			      inner join VASRECORDING VR On T1.Reference = VR.VASREFERENCE
			       Inner join VASSTRUCTURE VS on VS.PRODUCTCODE = VR.PRODUCTCODE
			      Left join Financemain FM On T1.FinReference = FM.FinReference
		</createView>
	</changeSet>
	
	<changeSet id="103" author="DurgaPrasad G">
		<addColumn tableName="VASRECORDING">
			<column name="ReceivableAdviseId" type="bigint" defaultValue="0"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="104" author="DurgaPrasad G">
		<addColumn tableName="VASRECORDING_Temp">
			<column name="ReceivableAdviseId" type="bigint" defaultValue="0"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="105" author="Durgaprasad G">
	<createView viewName="VASRECORDING_VIEW" replaceIfExists="true">
	   SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
					          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
					          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
					          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
					          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
					          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
					          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , 
					          T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays , FM.FinType, T1.ManualAdviseId, T1.paymentInsId, T1.ReceivableAdviseId
					          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
					          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
					          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
					          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
					          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
					          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
					          Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
					UNION ALL
					SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
					          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
					          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
					          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
					          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
					          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting,
					          T1.PaidAmt, T1.WaivedAmt, T1.Status, T1.EntityCode ,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , T1.CancelAfterFLP  
					          ,T2.FREELOCKPERIOD flpDays , FM.FinType, T1.ManualAdviseId, T1.paymentInsId, T1.ReceivableAdviseId
					          FROM   VASRecording  T1 LEFT OUTER JOIN
					          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
					          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
					          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
					          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
					          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
					          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
					          Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
					 WHERE     NOT EXISTS (SELECT     1  FROM    VASRecording_Temp WHERE   VasReference = T1.VasReference)
	 </createView>
</changeSet>

	<changeSet id="106" author="Durgaprasad G">
		<createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
		  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
		          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
		          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
		          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
		          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
		          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting,
		          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode ,T1.OLDVASREFERENCE ,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber, T1.CancelAfterFLP 
		          ,T2.FREELOCKPERIOD flpDays , FM.FinType , T1.ManualAdviseId, T1.paymentInsId , T1.ReceivableAdviseId
		          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN 
		          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
		          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
		          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
		          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
		          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
		          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
			      Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
		</createView>
	</changeSet>

	<changeSet id="107" author="Durgaprasad G">
		<createView viewName="VASRECORDING_AVIEW" replaceIfExists="true">
	 		  SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
			          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
			          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
			          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
			          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess,T2.FeeAccounting, 
			          T1.PaidAmt, T1.WaivedAmt, T1.Status,T1.EntityCode,T1.OLDVASREFERENCE,T1.Remarks ,T1.Reason , T1.CancelAmt ,T1.ServiceReqNumber , 	T1.CancelAfterFLP ,T2.FREELOCKPERIOD flpDays 
			          , FM.FinType , T1.ManualAdviseId, T1.paymentInsId , T1.ReceivableAdviseId
			          FROM   VASRecording  T1 LEFT OUTER JOIN
			          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
			          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
			          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
			          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
			          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
			          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
				      Left join FinanceMain FM On T1.PRIMARYLINKREF = FM.FinReference
	 </createView>
	</changeSet>
	
	<changeSet id="108" author="Durgaprasad g">
	 <sql>
		update REPORTFILTERFIELDS set mandatory=1 where reportid in 
		(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_UploadStatusReport');
		
		update REPORTFILTERFIELDS set mandatory=1 where reportid in 
		(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_PaymentUploadStatusReport');
		
		
		update REPORTCONFIGURATION set wherecondition=1 where reportid in 
		(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_UploadStatusReport');
		
		update reportfilterfields set LOVTEXTFIELDMETHOD='getId' where reportid in 
		(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_UploadStatusReport');
		
		update reportfilterfields set LOVTEXTFIELDMETHOD='getId' where reportid in 
		(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_PaymentUploadStatusReport');
		
		update REPORTCONFIGURATION set wherecondition=1 where reportid in 
		(select reportid from reportconfiguration where menuitemcode='menu_Item_Insurance_PaymentUploadStatusReport');
	 </sql>
	</changeSet>
	
		
	<changeSet id="109" author="Durgaprasad.g">
	 <sql>
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'id_totPayAmount';
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'vr_patnerPremiumAmt';
		
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'id_totPayAmount','Insurance Total Payment amount.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'vr_partnerPremiumAmt','Insurance Partner premium amount.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
	 </sql>
	</changeSet>
	
		<changeSet id="110" author="Durgaprasad.g">
	 <sql>
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'id_totPayAmount';
		Delete from BMTAmountCodes where ALLOWEDEVENT= 'INSPAY' and amountcode = 'vr_patnerPremiumAmt';
		
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'id_totPayAmount','Insurance Total Payment amount.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		Insert into BMTAMOUNTCODES  values ('INSPAY',0,'id_partnerPremiumAmt','Insurance Partner premium amount.','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
	 </sql>
	</changeSet>
	
  <changeSet id="111" author="Durgaprasad G">
	 <createView viewName="DE_DISBURSE_FILE_CONTROL_VIEW" replaceIfExists="true">
		   Select  DISTINCT(ID), NAME, FILELOCATION,FILENAME, ENDTIME,STATUS, CONFIGID,  POSTEVENT,
					ALWFILEDOWNLOAD,  PARTNERBANKID, PARTNERBANKCODE, PARTNERBANKNAME, PAYMENTTYPE ,ENTITYCODE, ENTITYDESC,USRLOGIN from (
	      
				 	SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, FA.PAYMENTTYPE, E.ENTITYCODE, E.ENTITYDESC,SC.USRLOGIN
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
							INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
	     					INNER JOIN FINADVANCEPAYMENTS FA ON FA.PAYMENTID = DR.DISBURSEMENT_ID
							INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
							INNER JOIN ENTITY E ON E.ENTITYCODE=PB.ENTITY
							INNER JOIN SECUSERS SC ON SC.USRID = DS.USERID
	 		
	      			UNION ALL
	      
			  		SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, PI.PAYMENTTYPE, E.ENTITYCODE, E.ENTITYDESC,SC.USRLOGIN
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
							INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
			    		 	INNER JOIN PAYMENTINSTRUCTIONS PI ON PI.PAYMENTINSTRUCTIONID = DR.DISBURSEMENT_ID
							INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
							INNER JOIN ENTITY E ON E.ENTITYCODE=PB.ENTITY
							INNER JOIN SECUSERS SC ON SC.USRID = DS.USERID
							
					UNION ALL
	      
			  		SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, PI.PAYMENTTYPE, E.ENTITYCODE, E.ENTITYDESC,SC.USRLOGIN
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
							INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
			    		 	INNER JOIN INSURANCEPAYMENTINSTRUCTIONS PI ON PI.ID = DR.DISBURSEMENT_ID
							INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID 
							INNER JOIN ENTITY E ON E.ENTITYCODE=PB.ENTITY AND E.ENTITYCODE = PI.ENTITYCODE
							INNER JOIN SECUSERS SC ON SC.USRID = DS.USERID
	
	   				UNION ALL		 
	         
	  				SELECT 	DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS,  DC.id AS CONFIGID,  DC.POSTEVENT,
							0, 0, NULL, NULL, NULL, NULL, NULL,NULL
					FROM 	DATA_ENGINE_CONFIG DC
							INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
		    		WHERE 	DS.STATUS = 'F'
		   ) T ORDER BY ID DESC
	 </createView>
	</changeSet>
	
	<changeSet id="112" author="Durgaprasad g">
		<dropColumn tableName="InsuranceDetails_DataEngine" columnName="Term" />
	</changeSet>
	
	<changeSet id="113" author="Durgaprasad g">
		<addColumn tableName="InsuranceDetails_DataEngine">
			<column name="TermF" type="varchar(20)" />
		</addColumn>
	</changeSet>
	
	 <changeSet id="114" author="Durgaprasad G">
	 	<sql>
			Delete From DATA_ENGINE_COLUMN Where TABLEID = (Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT'));
			Delete From DATA_ENGINE_TABLE Where CONFIGID = (Select Id from Data_Engine_Config Where Name  = 'INSURANCE_FILE_IMPORT');
			Delete From Data_Engine_Config Where Name  = 'INSURANCE_FILE_IMPORT';
			
			Insert Into Data_Engine_Config Values ((Select max(id)+1 from Data_Engine_Config),'INSURANCE_FILE_IMPORT','Insurance file import.',1,null,null,null,',',0,0,null,null,null,'C', '/opt/PFF/insurance/details','INSURANCE_','.csv',0, null,null,null,0,null,1,1);
			                                        
			Insert Into DATA_ENGINE_TABLE values ((Select max(id)+1 from DATA_ENGINE_TABLE),(Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT'),'INSURANCEDETAILS_DATAENGINE',1,'Reference',null,null,null,null,null,null,null,24,0,0);
			
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'INSURANCE_FILE_IMPORT')),'Reference',0,'N',null,null,null,null,0,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FormHandoverDate',0,'N',null,null,null,null,1,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'StartDate',0,'N',null,null,null,null,2,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'EndDate',0,'N',null,null,null,null,3,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'TermF',0,'N',null,null,null,null,4,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'CoverageAmount',0,'N',null,null,null,null,5,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PolicyNumber',0,'N',null,null,null,null,6,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'IssuanceDate',0,'N',null,null,null,null,7,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'IssuanceStatus',0,'N',null,null,null,null,8,null,null,null,null,'CHECK:ISSUED,DECLINE,CANCEL,REJECTED,PENDING,DISCREPENT');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PartnerPremium',0,'N',null,null,null,null,9,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PartnerReceivedDate',0,'N',null,null,null,null,10,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt1',0,'N',null,null,null,null,11,null,null,null,'dd-MMM-yy','M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'AWBNoF',0,'N',null,null,null,null,12,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchStatusF',0,'N',null,null,null,null,13,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'ReasonOfRTOF',0,'N',null,null,null,null,14,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt2',0,'N',null,null,null,null,15,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'DispatchDateAttempt3',0,'N',null,null,null,null,16,null,null,null,'dd-MMM-yy','O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'MedicalStatusF',0,'N',null,null,null,null,17,null,null,null,null,'CHECK:Y,N');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyReasonCategory',0,'N',null,null,null,null,18,null,null,null,null,'CHECK:U/W MEDICAL,INCOMPLETE FORM,PREMIUM MISMATCH,CALCULATOR MISMATCH,NOMINEE MINOR,KYC REQUIRED');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyReason',0,'N',null,null,null,null,19,null,null,null,null,'O');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PendencyResReqF',0,'N',null,null,null,null,20,null,null,null,null,'O');---'CHECK:Y,N'
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FPR',0,'N',null,null,null,null,21,null,null,null,null,'CHECK:BFL,PARTNER');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'PolicyStatus',0,'N',null,null,null,null,22,null,null,null,null,'CHECK:ACTIVE,CANCELLED,SURRENDERED,CLAIM,MATURED');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'FinReference',0,'N',null,null,null,null,23,null,null,null,null,'M');
			Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'INSURANCE_FILE_IMPORT')),'BatchId',0,'N',null,null,'${FILE_ID}',null,0,null,null,null,null,'M');
	 	</sql>
	 </changeSet>
	
	<changeSet id="115" author="Durgaprasad G">
		<addColumn tableName="Vasstructure">
			<column name="ModeOfPayment" type="char(1)"/>		
			<column name="AllowFeeType" type="char(1)"/>		
			<column name="MedicalApplicable" type="boolean"/>		
		</addColumn>
	</changeSet>
	
	<changeSet id="116" author="Durgaprasad G">
		<addColumn tableName="Vasstructure_Temp">
			<column name="ModeOfPayment" type="char(1)"/>		
			<column name="AllowFeeType" type="char(1)"/>		
			<column name="MedicalApplicable" type="boolean"/>		
		</addColumn>
	</changeSet>
	
	<changeSet id="117" author="Durgaprasad G">
		<createView viewName="vasstructure_aview" replaceIfExists="true">
			SELECT t1.productcode,
		    t1.productdesc,
		    t1.recagainst,
		    t1.feeaccrued,
		    t1.feeaccounting,
		    t1.accrualaccounting,
		    t1.recurringtype,
		    t1.freelockperiod,
		    t1.active,
		    t1.prevalidationreq,
		    t1.postvalidationreq,
		    t1.remarks,
		    t1.producttype,
		    t1.vasfee,
		    t1.allowfeetomodify,
		    t1.manufacturerid,
		    t1.prevalidation,
		    t1.postvalidation,
		    t1.feetype,
		    t1.flpcalculatedon,
		    t1.shortcode,
		    t1.ModeOfPayment,
		    t1.AllowFeeType,
		    t1.MedicalApplicable,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.accountsetcodename AS feeaccountingname,
		    t3.accountsetcodename AS accrualaccountingname,
		    t2.accountsetcode AS feeaccountingdesc,
		    t3.accountsetcode AS accrualaccountingdesc,
		    t4.producttypedesc,
		    t5.dealername AS manufacturername,
		    t6.productctg,
		    t6.productctgdesc AS productcategory,
		    t7.feetypecode,
		    t7.feetypedesc
		   FROM vasstructure t1
		     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
		     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
		     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
		     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
		     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
		     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
		</createView>
	</changeSet>
	
	<changeSet id="119" author="Durgaprasad G">
		<createView viewName="vasstructure_view" replaceIfExists="true">
				SELECT t1.productcode,
			    t1.productdesc,
			    t1.recagainst,
			    t1.feeaccrued,
			    t1.feeaccounting,
			    t1.accrualaccounting,
			    t1.recurringtype,
			    t1.freelockperiod,
			    t1.active,
			    t1.prevalidationreq,
			    t1.postvalidationreq,
			    t1.remarks,
			    t1.producttype,
			    t1.vasfee,
			    t1.allowfeetomodify,
			    t1.manufacturerid,
			    t1.prevalidation,
			    t1.postvalidation,
			    t1.feetype,
			    t1.flpcalculatedon,
			    t1.shortcode,
			    t1.ModeOfPayment,
		        t1.AllowFeeType,
		        t1.MedicalApplicable,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.accountsetcodename AS feeaccountingname,
			    t3.accountsetcodename AS accrualaccountingname,
			    t2.accountsetcode AS feeaccountingdesc,
			    t3.accountsetcode AS accrualaccountingdesc,
			    t4.producttypedesc,
			    t5.dealername AS manufacturername,
			    t6.productctg,
			    t6.productctgdesc AS productcategory,
			    t7.feetypecode,
			    t7.feetypedesc
			   FROM vasstructure_temp t1
			     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
			     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
			     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
			     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
			     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
			     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
			UNION ALL
			 SELECT t1.productcode,
			    t1.productdesc,
			    t1.recagainst,
			    t1.feeaccrued,
			    t1.feeaccounting,
			    t1.accrualaccounting,
			    t1.recurringtype,
			    t1.freelockperiod,
			    t1.active,
			    t1.prevalidationreq,
			    t1.postvalidationreq,
			    t1.remarks,
			    t1.producttype,
			    t1.vasfee,
			    t1.allowfeetomodify,
			    t1.manufacturerid,
			    t1.prevalidation,
			    t1.postvalidation,
			    t1.feetype,
			    t1.flpcalculatedon,
			    t1.shortcode,
			    t1.ModeOfPayment,
		    	t1.AllowFeeType,
		    	t1.MedicalApplicable,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.accountsetcodename AS feeaccountingname,
			    t3.accountsetcodename AS accrualaccountingname,
			    t2.accountsetcode AS feeaccountingdesc,
			    t3.accountsetcode AS accrualaccountingdesc,
			    t4.producttypedesc,
			    t5.dealername AS manufacturername,
			    t6.productctg,
			    t6.productctgdesc AS productcategory,
			    t7.feetypecode,
			    t7.feetypedesc
			   FROM vasstructure t1
			     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
			     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
			     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
			     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
			     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
			     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM vasstructure_temp
			          WHERE vasstructure_temp.productcode = t1.productcode))
		</createView>
	</changeSet>
	
	<changeSet id="120" author="Durgaprasad G">
		<sql>
			Update Vasstructure_Temp set MedicalApplicable = 0;
			Update Vasstructure set MedicalApplicable = 0;
		</sql>
	</changeSet>
	
	<changeSet id="121" author="Durgaprasad G">
		<addColumn tableName="BatchFileHeader">
			<column name="ProcessName" type="varchar(50)"/>
		</addColumn>
  </changeSet>
  
  <changeSet id="122" author="Durgaprasad G">
	  <sql>
	  	Update BatchFileHeader set ProcessName = 'PRESENTMENT_IMPORT';
	  </sql>
  </changeSet>
  
  <changeSet id="123" author="DurgaPrasad G">
	   <createTable tableName="VASPremiumCalcDetails">
	      <column name="ProductCode" type="varchar(8)"/>
	      <column name="ManufacturerId" type="bigint"/>
	      <column name="CustomerAge" type="int"/>
	      <column name="Gender" type="char(1)"/>
	      <column name="PolicyAge" type="int"/>
	      <column name="PremiumPercentage" type="decimal(13,9)"/>
	      <column name="MinAmount" type="decimal(18,0)"/>
	      <column name="MaxAmount" type="decimal(18,0)"/>
	   </createTable>
  </changeSet>
  
  <changeSet id="124" author="Durgaprasad G">
   <createIndex tableName="VASPremiumCalcDetails" indexName="IX_VASPreCalcDet_ProductCode" >
   		<column name="ProductCode"/>
   </createIndex>
  </changeSet>
  
   <changeSet id="125" author="DurgaPrasad G">
	   <createTable tableName="VASPremiumCalcDetails_Temp">
	      <column name="ProductCode" type="varchar(8)"/>
	      <column name="ManufacturerId" type="bigint"/>
	      <column name="CustomerAge" type="int"/>
	      <column name="Gender" type="char(1)"/>
	      <column name="PolicyAge" type="int"/>
	      <column name="PremiumPercentage" type="decimal(13,9)"/>
	      <column name="MinAmount" type="decimal(18,0)"/>
	      <column name="MaxAmount" type="decimal(18,0)"/>
	   </createTable>
  </changeSet>
  
  <changeSet id="126" author="Durgaprasad G">
   <createIndex tableName="VASPremiumCalcDetails_Temp" indexName="IX_VASPreCalcDet_T_ProductCode" >
   		<column name="ProductCode"/>
   </createIndex>
  </changeSet>
  
  <changeSet id="127" author="Durgaprasad G">
	  <createView viewName="VASPremiumCalcDetails_View" replaceIfExists="true">
			Select ProductCode, ManufacturerId, CustomerAge, Gender,
			PolicyAge, PremiumPercentage, MinAmount,MaxAmount From VASPremiumCalcDetails_Temp
			UNION ALL
			Select ProductCode, ManufacturerId, CustomerAge, Gender,
			PolicyAge, PremiumPercentage, MinAmount,MaxAmount From VASPremiumCalcDetails
			WHERE NOT (EXISTS ( SELECT 1  FROM VASPremiumCalcDetails_Temp
				  WHERE VASPremiumCalcDetails_Temp.productcode = VASPremiumCalcDetails.productcode))
	  </createView>
  </changeSet>
  
  <changeSet id="133" author="Durgaprasad G">
 	<comment>Adding columns into VASRecording</comment> 
  	<addColumn tableName="VasRecording">
  		<column name="TermInsuranceLien" type="boolean" defaultValue="0"/>
  		<column name="ProviderName" type="varchar(100)"/>
  		<column name="PolicyNumber" type="varchar(50)"/>
  		<column name="MedicalApplicable" type="boolean" defaultValue="0"/>
  		<column name="MedicalStatus" type="char(1)"/>
  	</addColumn>
  </changeSet>
  
  <changeSet id="134" author="Durgaprasad G">
 	<comment>Adding columns into VASRecording</comment> 
  	<addColumn tableName="VasRecording_Temp">
  		<column name="TermInsuranceLien" type="boolean" defaultValue="0"/>
  		<column name="ProviderName" type="varchar(100)"/>
  		<column name="PolicyNumber" type="varchar(50)"/>
  		<column name="MedicalApplicable" type="boolean" defaultValue="0"/>
  		<column name="MedicalStatus" type="char(1)"/>
  	</addColumn>
  </changeSet>
  
  <changeSet id="135" author="DurgaPrasad G">
    <createView viewName="vasrecording_view" replaceIfExists="true">
	    SELECT t1.productcode,
	    t1.postingagainst,
	    t1.primarylinkref,
	    t1.vasreference,
	    t1.fee,
	    t1.renewalfee,
	    t1.feepaymentmode,
	    t1.valuedate,
	    t1.accrualtilldate,
	    t1.recurringdate,
	    t1.dsaid,
	    t1.dmaid,
	    t1.fulfilofficerid,
	    t1.referralid,
	    t1.version,
	    t1.lastmntby,
	    t1.lastmnton,
	    t1.recordstatus,
	    t1.rolecode,
	    t1.nextrolecode,
	    t1.taskid,
	    t1.nexttaskid,
	    t1.recordtype,
	    t1.workflowid,
	    t2.productdesc,
	    t3.rofficerdesc AS dsaiddesc,
	    t4.rofficerdesc AS dmaiddesc,
	    t5.rofficerdesc AS fulfilofficeriddesc,
	    t6.rofficerdesc AS referraliddesc,
	    t7.producttype,
	    t7.producttypedesc,
	    t8.productctg,
	    t8.productctgdesc,
	    t9.dealername AS manufacturerdesc,
	    t1.vasstatus,
	    t1.financeprocess,
	    t2.feeaccounting,
	    t1.paidamt,
	    t1.waivedamt,
	    t1.status,
	    t1.entitycode,
	    t1.oldvasreference,
	    t1.remarks,
	    t1.reason,
	    t1.cancelamt,
	    t1.servicereqnumber,
	    t1.cancelafterflp,
	    t2.freelockperiod AS flpdays,
	    fm.fintype,
	    t1.manualadviseid,
	    t1.paymentinsid,
	    t1.receivableadviseid,
		t1.TermInsuranceLien,
		t1.ProviderName,
		t1.PolicyNumber,
		t1.MedicalApplicable,
		t1.MedicalStatus
	   FROM vasrecording_temp t1
	     LEFT JOIN vasstructure t2 ON t1.productcode = t2.productcode
	     LEFT JOIN relationshipofficers t3 ON t1.dsaid = t3.rofficercode
	     LEFT JOIN relationshipofficers t4 ON t1.dmaid = t4.rofficercode
	     LEFT JOIN relationshipofficers t5 ON t1.fulfilofficerid = t5.rofficercode
	     LEFT JOIN relationshipofficers t6 ON t1.referralid = t6.rofficercode
	     JOIN vasproducttype t7 ON t7.producttype = t2.producttype
	     JOIN vasproductcategory t8 ON t7.productctg = t8.productctg
	     LEFT JOIN amtvehicledealer t9 ON t2.manufacturerid = t9.dealerid
	     LEFT JOIN financemain fm ON t1.primarylinkref = fm.finreference
	UNION ALL
	 SELECT t1.productcode,
	    t1.postingagainst,
	    t1.primarylinkref,
	    t1.vasreference,
	    t1.fee,
	    t1.renewalfee,
	    t1.feepaymentmode,
	    t1.valuedate,
	    t1.accrualtilldate,
	    t1.recurringdate,
	    t1.dsaid,
	    t1.dmaid,
	    t1.fulfilofficerid,
	    t1.referralid,
	    t1.version,
	    t1.lastmntby,
	    t1.lastmnton,
	    t1.recordstatus,
	    t1.rolecode,
	    t1.nextrolecode,
	    t1.taskid,
	    t1.nexttaskid,
	    t1.recordtype,
	    t1.workflowid,
	    t2.productdesc,
	    t3.rofficerdesc AS dsaiddesc,
	    t4.rofficerdesc AS dmaiddesc,
	    t5.rofficerdesc AS fulfilofficeriddesc,
	    t6.rofficerdesc AS referraliddesc,
	    t7.producttype,
	    t7.producttypedesc,
	    t8.productctg,
	    t8.productctgdesc,
	    t9.dealername AS manufacturerdesc,
	    t1.vasstatus,
	    t1.financeprocess,
	    t2.feeaccounting,
	    t1.paidamt,
	    t1.waivedamt,
	    t1.status,
	    t1.entitycode,
	    t1.oldvasreference,
	    t1.remarks,
	    t1.reason,
	    t1.cancelamt,
	    t1.servicereqnumber,
	    t1.cancelafterflp,
	    t2.freelockperiod AS flpdays,
	    fm.fintype,
	    t1.manualadviseid,
	    t1.paymentinsid,
	    t1.receivableadviseid,
	    t1.TermInsuranceLien,
		t1.ProviderName,
		t1.PolicyNumber,
		t1.MedicalApplicable,
		t1.MedicalStatus
	   FROM vasrecording t1
	     LEFT JOIN vasstructure t2 ON t1.productcode = t2.productcode
	     LEFT JOIN relationshipofficers t3 ON t1.dsaid = t3.rofficercode
	     LEFT JOIN relationshipofficers t4 ON t1.dmaid = t4.rofficercode
	     LEFT JOIN relationshipofficers t5 ON t1.fulfilofficerid = t5.rofficercode
	     LEFT JOIN relationshipofficers t6 ON t1.referralid = t6.rofficercode
	     JOIN vasproducttype t7 ON t7.producttype = t2.producttype
	     JOIN vasproductcategory t8 ON t7.productctg = t8.productctg
	     LEFT JOIN amtvehicledealer t9 ON t2.manufacturerid = t9.dealerid
	     LEFT JOIN financemain fm ON t1.primarylinkref = fm.finreference
	  WHERE NOT (EXISTS ( SELECT 1
	           FROM vasrecording_temp
	          WHERE vasrecording_temp.vasreference = t1.vasreference))
    </createView>
  </changeSet>
  <changeSet id="136" author="Durgaprasad G">
	  <createView viewName="vasrecording_tview" replaceIfExists="true">
		  	SELECT t1.productcode,
		    t1.postingagainst,
		    t1.primarylinkref,
		    t1.vasreference,
		    t1.fee,
		    t1.renewalfee,
		    t1.feepaymentmode,
		    t1.valuedate,
		    t1.accrualtilldate,
		    t1.recurringdate,
		    t1.dsaid,
		    t1.dmaid,
		    t1.fulfilofficerid,
		    t1.referralid,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.productdesc,
		    t3.rofficerdesc AS dsaiddesc,
		    t4.rofficerdesc AS dmaiddesc,
		    t5.rofficerdesc AS fulfilofficeriddesc,
		    t6.rofficerdesc AS referraliddesc,
		    t7.producttype,
		    t7.producttypedesc,
		    t8.productctg,
		    t8.productctgdesc,
		    t9.dealername AS manufacturerdesc,
		    t1.vasstatus,
		    t1.financeprocess,
		    t2.feeaccounting,
		    t1.paidamt,
		    t1.waivedamt,
		    t1.status,
		    t1.entitycode,
		    t1.oldvasreference,
		    t1.remarks,
		    t1.reason,
		    t1.cancelamt,
		    t1.servicereqnumber,
		    t1.cancelafterflp,
		    t2.freelockperiod AS flpdays,
		    fm.fintype,
		    t1.manualadviseid,
		    t1.paymentinsid,
		    t1.receivableadviseid,
			t1.TermInsuranceLien,
			t1.ProviderName,
			t1.PolicyNumber,
			t1.MedicalApplicable,
			t1.MedicalStatus
		   FROM vasrecording_temp t1
		     LEFT JOIN vasstructure t2 ON t1.productcode = t2.productcode
		     LEFT JOIN relationshipofficers t3 ON t1.dsaid = t3.rofficercode
		     LEFT JOIN relationshipofficers t4 ON t1.dmaid = t4.rofficercode
		     LEFT JOIN relationshipofficers t5 ON t1.fulfilofficerid = t5.rofficercode
		     LEFT JOIN relationshipofficers t6 ON t1.referralid = t6.rofficercode
		     JOIN vasproducttype t7 ON t7.producttype = t2.producttype
		     JOIN vasproductcategory t8 ON t7.productctg = t8.productctg
		     LEFT JOIN amtvehicledealer t9 ON t2.manufacturerid = t9.dealerid
		     LEFT JOIN financemain fm ON t1.primarylinkref = fm.finreference
	   </createView>
  </changeSet>
  
  <changeSet id="137" author="Durgaprasad G">
  	<createView viewName="vasrecording_aview" replaceIfExists="true">
		  	SELECT t1.productcode,
		    t1.postingagainst,
		    t1.primarylinkref,
		    t1.vasreference,
		    t1.fee,
		    t1.renewalfee,
		    t1.feepaymentmode,
		    t1.valuedate,
		    t1.accrualtilldate,
		    t1.recurringdate,
		    t1.dsaid,
		    t1.dmaid,
		    t1.fulfilofficerid,
		    t1.referralid,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.productdesc,
		    t3.rofficerdesc AS dsaiddesc,
		    t4.rofficerdesc AS dmaiddesc,
		    t5.rofficerdesc AS fulfilofficeriddesc,
		    t6.rofficerdesc AS referraliddesc,
		    t7.producttype,
		    t7.producttypedesc,
		    t8.productctg,
		    t8.productctgdesc,
		    t9.dealername AS manufacturerdesc,
		    t1.vasstatus,
		    t1.financeprocess,
		    t2.feeaccounting,
		    t1.paidamt,
		    t1.waivedamt,
		    t1.status,
		    t1.entitycode,
		    t1.oldvasreference,
		    t1.remarks,
		    t1.reason,
		    t1.cancelamt,
		    t1.servicereqnumber,
		    t1.cancelafterflp,
		    t2.freelockperiod AS flpdays,
		    fm.fintype,
		    t1.manualadviseid,
		    t1.paymentinsid,
		    t1.receivableadviseid,
		    t1.TermInsuranceLien,
			t1.ProviderName,
			t1.PolicyNumber,
			t1.MedicalApplicable,
			t1.MedicalStatus
		   FROM vasrecording t1
		     LEFT JOIN vasstructure t2 ON t1.productcode = t2.productcode
		     LEFT JOIN relationshipofficers t3 ON t1.dsaid = t3.rofficercode
		     LEFT JOIN relationshipofficers t4 ON t1.dmaid = t4.rofficercode
		     LEFT JOIN relationshipofficers t5 ON t1.fulfilofficerid = t5.rofficercode
		     LEFT JOIN relationshipofficers t6 ON t1.referralid = t6.rofficercode
		     JOIN vasproducttype t7 ON t7.producttype = t2.producttype
		     JOIN vasproductcategory t8 ON t7.productctg = t8.productctg
		     LEFT JOIN amtvehicledealer t9 ON t2.manufacturerid = t9.dealerid
		     LEFT JOIN financemain fm ON t1.primarylinkref = fm.finreference
  	</createView>
  </changeSet>
    <changeSet id="140" author="DurgaPrasad G">
	   <createTable tableName="VASPremiumCalcDet_DataEngine">
	  	  <column name="BatchId" type="bigint" defaultValue="0" />
	      <column name="ManufacturerName" type="varchar(100)"/>
	      <column name="CustomerAgeF" type="varchar(10)"/>
	      <column name="Gender" type="char(1)"/>
	      <column name="PolicyAgeF" type="varchar(10)"/>
	      <column name="PremiumPercentageF" type="varchar(100)"/>
	      <column name="MinAmountF" type="varchar(100)"/>
	      <column name="MaxAmountF" type="varchar(100)"/>
	   </createTable>
  </changeSet>
  <changeSet id="141" author="DurgaPrasad G">
	<addColumn tableName="VASPremiumCalcDetails">
		<column name="BatchId" type="bigint" defaultValue="0" />
	</addColumn>
  </changeSet>
	<changeSet id="142" author="DurgaPrasad G">
		<addColumn tableName="VASPremiumCalcDetails_Temp">
			<column name="BatchId" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

 <changeSet id="143" author="Durgaprasad G">
	  <createView viewName="VASPremiumCalcDetails_View" replaceIfExists="true">
			Select BatchId, ProductCode, ManufacturerId, CustomerAge, Gender,
			PolicyAge, PremiumPercentage, MinAmount,MaxAmount From VASPremiumCalcDetails_Temp
			UNION ALL
			Select BatchId,ProductCode, ManufacturerId, CustomerAge, Gender,
			PolicyAge, PremiumPercentage, MinAmount,MaxAmount From VASPremiumCalcDetails
			WHERE NOT (EXISTS ( SELECT 1  FROM VASPremiumCalcDetails_Temp
				  WHERE VASPremiumCalcDetails_Temp.productcode = VASPremiumCalcDetails.productcode))
	  </createView>
  </changeSet>
  
  <changeSet  id="144" author="Durgaprasad G" >
	  <sql>
		  Delete from SMTParameters Where sysparmcode = 'VAS_MEDICAL_STATUS_CALCULATION_YES_NO'; 
	      Insert into SMTParameters values('VAS_MEDICAL_STATUS_CALCULATION_YES_NO','VAS Medical status calculation Required or not.', 'String',1,'Y','1000',0,null,null,'VAS Medical status calculation Required or not.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null, null,null,null,0); 
		  
		  Delete from SMTParameters Where sysparmcode = 'VAS_MEDICAL_STATUS_CALCULATION'; 
	      Insert into SMTParameters values('VAS_MEDICAL_STATUS_CALCULATION','VAS Medical status calculation values.', 'String',1,'5000000,55,MLAP,ASL,ADSL,Livestock','1000',0,null,null,'VAS Medical status calculation values.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null, null,null,null,0); 
	 </sql>
   </changeSet>
   
   <changeSet id="145" author="Durgaprasad G">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
	
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'VASRecordingDialog_TermInsuranceLien','VASRecordingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'VASRecordingDialog_ProviderName','VASRecordingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'VASRecordingDialog_PolicyNumber','VASRecordingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'VASRecordingDialog_MedicalStatus','VASRecordingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'VASRecordingDialog_MedicalApplicable','VASRecordingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_TermInsuranceLien'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_ProviderName'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_PolicyNumber'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_MedicalStatus'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_MedicalApplicable'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	
	 <changeSet id="146" author="Durgaprasad G">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_TermInsuranceLien'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_ProviderName'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_PolicyNumber'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_MedicalStatus'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_MedicalApplicable'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		</sql>
	</changeSet>
   
	<changeSet id="147" author="Durga prasad G">
			<sql>
				Delete From DATA_ENGINE_COLUMN Where TABLEID = (Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD'));
				Delete From DATA_ENGINE_TABLE Where CONFIGID = (Select Id from Data_Engine_Config Where Name  = 'VAS_PREMIUM_CALCULATION_UPLOAD');
				Delete From Data_Engine_Config Where Name  = 'VAS_PREMIUM_CALCULATION_UPLOAD';
				
				Insert Into Data_Engine_Config Values ((Select max(id)+1 from Data_Engine_Config),'VAS_PREMIUM_CALCULATION_UPLOAD','VAS Premium calculation upload.',12,'Sheet1',null,null,null,0,1,null,null,null,'C', '/opt/PFF/insurance/premiumcalculation','INSURANCE_','.xlsx',0, null,null,null,0,null,1,1);
				                                        
				Insert Into DATA_ENGINE_TABLE values ((Select max(id)+1 from DATA_ENGINE_TABLE),(Select id from Data_Engine_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD'),'VASPremiumCalcDet_DataEngine',1,'CustomerAgeF',null,null,null,null,null,null,null,6,0,0);
				 
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'BatchId',0,'N',null,null,'${FILE_ID}',null,0,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'ManufacturerName',0,'N',null,null,null,null,0,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'CustomerAgeF',0,'N',null,null,null,null,1,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'Gender',0,'N',null,null,null,null,2,null,null,null,null,'CHECK:M,F,O');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'PolicyAgeF',0,'N',null,null,null,null,3,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'PremiumPercentageF',0,'N',null,null,null,null,4,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'MinAmountF',0,'N',null,null,null,null,5,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'MaxAmountF',0,'N',null,null,null,null,6,null,null,null,null,'M');

			</sql>
		</changeSet> 
		
		<changeSet id="148" author="Durgaprasad G">
		<sql>
		     Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 
			'LOANTYPE','TEXT',50,0,'Loan Type',0,'REGEX_ALPHANUM_SPACE_SPL',17,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',1,0,0,0,null,1,null,0);

			Insert into EXTENDEDFIELDDETAIL (MODULEID,FIELDNAME,FIELDTYPE,FIELDLENGTH,FIELDPREC,FIELDLABEL,FIELDMANDATORY,FIELDCONSTRAINT,FIELDSEQORDER,FIELDLIST,FIELDDEFAULTVALUE,FIELDMINVALUE,FIELDMAXVALUE,FIELDUNIQUE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,MULTILINE,PARENTTAG,INPUTELEMENT,EDITABLE,EXTENDEDTYPE,ALLOWINRULE,SCRIPTLET,VISIBLE,FILTERS,VALFROMSCRIPT) values ((Select MODULEID  from EXTENDEDFIELDHEADER WHERE MODULENAME = 'VAS' AND SUBMODULENAME = 'VASINS'), 
			'CALCULATEPREMIUM','BUTTON',0,0,'Premium Calculation',0,null,1,null,null,0,0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0,'EXTDETGRPBOX',0,1,0,0,null,1,null,0);
		</sql>
		</changeSet>
		
		<changeSet id="149" author="Durgaprasad G">
			<sql>
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);	
				
				Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_TermInsuranceLien','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
				Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_ProviderName','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
				Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_PolicyNumber','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
				Insert into SECRIGHTS  values ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'InsuranceMaintananceRebookingDialog_MedicalStatus','InsuranceMaintananceRebookingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,' ',' ',null,0);
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_TermInsuranceLien'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_ProviderName'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_PolicyNumber'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='INSURANCE_REBOOKING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='InsuranceMaintananceRebookingDialog_MedicalStatus'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);	
			</sql>
	</changeSet>
	
	<changeSet id="150" author="Durgaprasad G">
		<createView viewName="vasstructure_aview" replaceIfExists="true">
			SELECT t1.productcode,
		    t1.productdesc,
		    t1.recagainst,
		    t1.feeaccrued,
		    t1.feeaccounting,
		    t1.accrualaccounting,
		    t1.recurringtype,
		    t1.freelockperiod,
		    t1.active,
		    t1.prevalidationreq,
		    t1.postvalidationreq,
		    t1.remarks,
		    t1.producttype,
		    t1.vasfee,
		    t1.allowfeetomodify,
		    t1.manufacturerid,
		    t1.prevalidation,
		    t1.postvalidation,
		    t1.feetype,
		    t1.flpcalculatedon,
		    t1.shortcode,
		    t1.ModeOfPayment,
		    t1.AllowFeeType,
		    t1.MedicalApplicable,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.accountsetcodename AS feeaccountingname,
		    t3.accountsetcodename AS accrualaccountingname,
		    t2.accountsetcode AS feeaccountingdesc,
		    t3.accountsetcode AS accrualaccountingdesc,
		    t4.producttypedesc,
		    t5.dealername AS manufacturername,
		    t6.productctg,
		    t6.productctgdesc AS productcategory,
		    t7.feetypecode,
		    t7.feetypedesc,
            t9.filename
		   FROM vasstructure t1
		     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
		     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
		     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
		     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
		     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
		     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
             Left Join VASPremiumCalcDetails t8 ON T8.productcode = t1.productcode
             left join data_engine_status t9 ON T9.id = T8.batchid
		</createView>
	</changeSet>
	
	<changeSet id="151" author="Durgaprasad G">
		<createView viewName="vasstructure_view" replaceIfExists="true">
				SELECT t1.productcode,
			    t1.productdesc,
			    t1.recagainst,
			    t1.feeaccrued,
			    t1.feeaccounting,
			    t1.accrualaccounting,
			    t1.recurringtype,
			    t1.freelockperiod,
			    t1.active,
			    t1.prevalidationreq,
			    t1.postvalidationreq,
			    t1.remarks,
			    t1.producttype,
			    t1.vasfee,
			    t1.allowfeetomodify,
			    t1.manufacturerid,
			    t1.prevalidation,
			    t1.postvalidation,
			    t1.feetype,
			    t1.flpcalculatedon,
			    t1.shortcode,
			    t1.ModeOfPayment,
		        t1.AllowFeeType,
		        t1.MedicalApplicable,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.accountsetcodename AS feeaccountingname,
			    t3.accountsetcodename AS accrualaccountingname,
			    t2.accountsetcode AS feeaccountingdesc,
			    t3.accountsetcode AS accrualaccountingdesc,
			    t4.producttypedesc,
			    t5.dealername AS manufacturername,
			    t6.productctg,
			    t6.productctgdesc AS productcategory,
			    t7.feetypecode,
			    t7.feetypedesc,
			    t9.filename
			   FROM vasstructure_temp t1
			     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
			     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
			     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
			     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
			     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
			     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
			     Left Join VASPremiumCalcDetails_Temp t8 ON T8.productcode = t1.productcode
             	 left join data_engine_status t9 ON T9.id = T8.batchid
			UNION ALL
			 SELECT t1.productcode,
			    t1.productdesc,
			    t1.recagainst,
			    t1.feeaccrued,
			    t1.feeaccounting,
			    t1.accrualaccounting,
			    t1.recurringtype,
			    t1.freelockperiod,
			    t1.active,
			    t1.prevalidationreq,
			    t1.postvalidationreq,
			    t1.remarks,
			    t1.producttype,
			    t1.vasfee,
			    t1.allowfeetomodify,
			    t1.manufacturerid,
			    t1.prevalidation,
			    t1.postvalidation,
			    t1.feetype,
			    t1.flpcalculatedon,
			    t1.shortcode,
			    t1.ModeOfPayment,
		    	t1.AllowFeeType,
		    	t1.MedicalApplicable,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.accountsetcodename AS feeaccountingname,
			    t3.accountsetcodename AS accrualaccountingname,
			    t2.accountsetcode AS feeaccountingdesc,
			    t3.accountsetcode AS accrualaccountingdesc,
			    t4.producttypedesc,
			    t5.dealername AS manufacturername,
			    t6.productctg,
			    t6.productctgdesc AS productcategory,
			    t7.feetypecode,
			    t7.feetypedesc,
			    t9.filename
			   FROM vasstructure t1
			     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
			     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
			     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
			     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
			     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
			     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
			     Left Join VASPremiumCalcDetails_Temp t8 ON T8.productcode = t1.productcode
             	 left join data_engine_status t9 ON T9.id = T8.batchid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM vasstructure_temp
			          WHERE vasstructure_temp.productcode = t1.productcode))
		</createView>
	</changeSet>
	
	<changeSet id="152" author="Durgaprasad G">
		<addColumn tableName="Vasstructure">
			 <column name="BatchId" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>
	
	<changeSet id="153" author="Durgaprasad G">
		<addColumn tableName="Vasstructure_Temp">
			 <column name="BatchId" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>
	
	<changeSet id="154" author="Durgaprasad G">
		<createView viewName="vasstructure_aview" replaceIfExists="true">
			SELECT t1.productcode,
		    t1.productdesc,
		    t1.recagainst,
		    t1.feeaccrued,
		    t1.feeaccounting,
		    t1.accrualaccounting,
		    t1.recurringtype,
		    t1.freelockperiod,
		    t1.active,
		    t1.prevalidationreq,
		    t1.postvalidationreq,
		    t1.remarks,
		    t1.producttype,
		    t1.vasfee,
		    t1.allowfeetomodify,
		    t1.manufacturerid,
		    t1.prevalidation,
		    t1.postvalidation,
		    t1.feetype,
		    t1.flpcalculatedon,
		    t1.shortcode,
		    t1.ModeOfPayment,
		    t1.AllowFeeType,
		    t1.MedicalApplicable,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.accountsetcodename AS feeaccountingname,
		    t3.accountsetcodename AS accrualaccountingname,
		    t2.accountsetcode AS feeaccountingdesc,
		    t3.accountsetcode AS accrualaccountingdesc,
		    t4.producttypedesc,
		    t5.dealername AS manufacturername,
		    t6.productctg,
		    t6.productctgdesc AS productcategory,
		    t7.feetypecode,
		    t7.feetypedesc,
            t8.filename,
             t1.batchId
		   FROM vasstructure t1
		     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
		     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
		     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
		     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
		     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
		     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
             left join data_engine_status t8 ON T8.id = t1.batchid
		</createView>
	</changeSet>
	
	<changeSet id="155" author="Durgaprasad G">
		<createView viewName="vasstructure_view" replaceIfExists="true">
				SELECT t1.productcode,
			    t1.productdesc,
			    t1.recagainst,
			    t1.feeaccrued,
			    t1.feeaccounting,
			    t1.accrualaccounting,
			    t1.recurringtype,
			    t1.freelockperiod,
			    t1.active,
			    t1.prevalidationreq,
			    t1.postvalidationreq,
			    t1.remarks,
			    t1.producttype,
			    t1.vasfee,
			    t1.allowfeetomodify,
			    t1.manufacturerid,
			    t1.prevalidation,
			    t1.postvalidation,
			    t1.feetype,
			    t1.flpcalculatedon,
			    t1.shortcode,
			    t1.ModeOfPayment,
		        t1.AllowFeeType,
		        t1.MedicalApplicable,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.accountsetcodename AS feeaccountingname,
			    t3.accountsetcodename AS accrualaccountingname,
			    t2.accountsetcode AS feeaccountingdesc,
			    t3.accountsetcode AS accrualaccountingdesc,
			    t4.producttypedesc,
			    t5.dealername AS manufacturername,
			    t6.productctg,
			    t6.productctgdesc AS productcategory,
			    t7.feetypecode,
			    t7.feetypedesc,
			    t8.filename,
			    t1.batchId
			   FROM vasstructure_temp t1
			     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
			     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
			     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
			     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
			     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
			     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
             	 left join data_engine_status t8 ON T8.id = t1.batchid
			UNION ALL
			 SELECT t1.productcode,
			    t1.productdesc,
			    t1.recagainst,
			    t1.feeaccrued,
			    t1.feeaccounting,
			    t1.accrualaccounting,
			    t1.recurringtype,
			    t1.freelockperiod,
			    t1.active,
			    t1.prevalidationreq,
			    t1.postvalidationreq,
			    t1.remarks,
			    t1.producttype,
			    t1.vasfee,
			    t1.allowfeetomodify,
			    t1.manufacturerid,
			    t1.prevalidation,
			    t1.postvalidation,
			    t1.feetype,
			    t1.flpcalculatedon,
			    t1.shortcode,
			    t1.ModeOfPayment,
		    	t1.AllowFeeType,
		    	t1.MedicalApplicable,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.accountsetcodename AS feeaccountingname,
			    t3.accountsetcodename AS accrualaccountingname,
			    t2.accountsetcode AS feeaccountingdesc,
			    t3.accountsetcode AS accrualaccountingdesc,
			    t4.producttypedesc,
			    t5.dealername AS manufacturername,
			    t6.productctg,
			    t6.productctgdesc AS productcategory,
			    t7.feetypecode,
			    t7.feetypedesc,
			    t8.filename, 
			    t1.batchId
			   FROM vasstructure t1
			     LEFT JOIN rmtaccountingset t2 ON t1.feeaccounting = t2.accountsetid
			     LEFT JOIN rmtaccountingset t3 ON t1.accrualaccounting = t3.accountsetid
			     JOIN vasproducttype t4 ON t1.producttype = t4.producttype
			     JOIN vasproductcategory t6 ON t6.productctg = t4.productctg
			     JOIN amtvehicledealer t5 ON t1.manufacturerid = t5.dealerid
			     LEFT JOIN feetypes t7 ON t1.feetype = t7.feetypeid
             	 left join data_engine_status t8 ON T8.id = t1.batchid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM vasstructure_temp
			          WHERE vasstructure_temp.productcode = t1.productcode))
		</createView>
	</changeSet>
	
	<changeSet id="156" author="DurgaPrasad G">
		<addColumn tableName="VASPremiumCalcDet_DataEngine">
			<column name="LoanAgeF" type="varchar(10)"/>
		</addColumn>	
  	</changeSet>
  	
	 <changeSet id="157" author="DurgaPrasad G">
		<addColumn tableName="VASPremiumCalcDetails">
			 <column name="LoanAge" type="int"/>
		</addColumn>	
	 </changeSet>
	 
	 <changeSet id="158" author="Durga prasad G">
			<sql>
				Delete From DATA_ENGINE_COLUMN Where TABLEID = (Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD'));
				Delete From DATA_ENGINE_TABLE Where CONFIGID = (Select Id from Data_Engine_Config Where Name  = 'VAS_PREMIUM_CALCULATION_UPLOAD');
				Delete From Data_Engine_Config Where Name  = 'VAS_PREMIUM_CALCULATION_UPLOAD';
				
				Insert Into Data_Engine_Config Values ((Select max(id)+1 from Data_Engine_Config),'VAS_PREMIUM_CALCULATION_UPLOAD','VAS Premium calculation upload.',12,'Sheet1',null,null,null,0,1,null,null,null,'C', '/opt/PFF/insurance/premiumcalculation','INSURANCE_','.xlsx',0, null,null,null,0,null,1,1);
				                                        
				Insert Into DATA_ENGINE_TABLE values ((Select max(id)+1 from DATA_ENGINE_TABLE),(Select id from Data_Engine_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD'),'VASPremiumCalcDet_DataEngine',1,'CustomerAgeF',null,null,null,null,null,null,null,6,0,0);
				 
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'BatchId',0,'N',null,null,'${FILE_ID}',null,0,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select id from Data_Engine_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'ManufacturerName',0,'N',null,null,null,null,0,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'CustomerAgeF',0,'N',null,null,null,null,1,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'Gender',0,'N',null,null,null,null,2,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'PolicyAgeF',0,'N',null,null,null,null,3,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'PremiumPercentageF',0,'N',null,null,null,null,4,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'MinAmountF',0,'N',null,null,null,null,5,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'MaxAmountF',0,'N',null,null,null,null,6,null,null,null,null,'M');
				Insert into DATA_ENGINE_COLUMN Values ((Select max(id)+1 from DATA_ENGINE_COLUMN),(Select Id from DATA_ENGINE_TABLE Where CONFIGID = (Select Id from DATA_ENGINE_Config Where Name = 'VAS_PREMIUM_CALCULATION_UPLOAD')),'LoanAgeF',0,'N',null,null,null,null,7,null,null,null,null,'O');
			</sql>
		</changeSet> 
		
		<changeSet id="159" author="DurgaPrasad G">
		<addColumn tableName="VASPremiumCalcDetails_Temp">
			 <column name="LoanAge" type="int"/>
		</addColumn>	
	 </changeSet>
	 
	  <changeSet id="160" author="Durgaprasad G">
	  <createView viewName="VASPremiumCalcDetails_View" replaceIfExists="true">
			Select BatchId, ProductCode, ManufacturerId, CustomerAge, Gender,
			PolicyAge, PremiumPercentage, MinAmount, MaxAmount, LoanAge From VASPremiumCalcDetails_Temp
			UNION ALL
			Select BatchId,ProductCode, ManufacturerId, CustomerAge, Gender,
			PolicyAge, PremiumPercentage, MinAmount, MaxAmount, LoanAge From VASPremiumCalcDetails
			WHERE NOT (EXISTS ( SELECT 1  FROM VASPremiumCalcDetails_Temp
				  WHERE VASPremiumCalcDetails_Temp.productcode = VASPremiumCalcDetails.productcode))
	  </createView>
  </changeSet>
  
  <changeSet id="161" author="DurgaPrasad G">
 	 <addDefaultValue columnName="LoanAge" tableName="VASPremiumCalcDetails"  defaultValue="0"/>
  	 <addDefaultValue columnName="LoanAge" tableName="VASPremiumCalcDetails_Temp" defaultValue="0"/>
  </changeSet>
  
  <changeSet id="162" author="DurgaPrasad G">
  	<sql>
		Update vaspremiumcalcdetails set loanage = 0;
		Update vaspremiumcalcdetails_temp set loanage = 0;
  	</sql>
  </changeSet>
  
</databaseChangeLog>
