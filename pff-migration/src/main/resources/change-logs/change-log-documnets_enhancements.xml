<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="01" author="Durgaprasad G">
	  <comment> Creating the new table for document types category </comment>
		<createTable tableName="DocumentCategory">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="Pk_DocumentCategory_id" />
			</column>
			<column name="Code" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Description" type="varchar(100)">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet id="02" author="Durgaprasad G">
	<sql>
		<![CDATA[
			Insert Into DocumentCategory values (1,'CUSTOMER','Customer Documents');
			Insert Into DocumentCategory values (2,'FINANCE','Finance Documents');
			Insert Into DocumentCategory values (3,'COLLATERAL','Collateral Documents');
			Insert Into DocumentCategory values (4,'VERIFICATION_TV','Technical Verification Documents');
			Insert Into DocumentCategory values (5,'VERIFICATION_FI','Field Investigation Documents');
			Insert Into DocumentCategory values (6,'VERIFICATION_RCU','RCU Verification Documents');
			Insert Into DocumentCategory values (7,'VERIFICATION_LV','Legal Verification Documents');
		]]>
	</sql>
	</changeSet>
	<changeSet id="3.0" author="Durgaprasad G">
		<addColumn tableName="BMTDOCUMENTTYPES">
			<column name="CategoryId" type="bigint"/>
			<column name="PDD" type="boolean" defaultValue="0"/>
			<column name="OTC" type="boolean" defaultValue="0"/>
			<column name="LVReq" type="boolean" defaultValue="0"/>
			<column name="RCUReq" type="boolean" defaultValue="0"/>
		</addColumn>
	</changeSet>
	<changeSet id="3.1" author="Durgaprasad G">
		<addColumn tableName="BMTDOCUMENTTYPES_TEMP">
			<column name="CategoryId" type="bigint"/>
			<column name="PDD" type="boolean" defaultValue="0"/>
			<column name="OTC" type="boolean" defaultValue="0"/>
			<column name="LVReq" type="boolean" defaultValue="0"/>
			<column name="RCUReq" type="boolean" defaultValue="0"/>
		</addColumn>
	</changeSet>
	<changeSet id="3.2" author="Durgaprasad G">
		<addForeignKeyConstraint constraintName="FK_BMTDOCTYPES_CategoryId" referencedTableName="DocumentCategory" baseColumnNames="CategoryId" baseTableName="BMTDOCUMENTTYPES" referencedColumnNames="Id"/>
	</changeSet>
	
	<changeSet id="4.0" author="Durgaprasad G">
		<sql>
		<![CDATA[
			Update BMTDOCUMENTTYPES Set CategoryId =(Select Id from DocumentCategory Where Code = 'CUSTOMER') Where dociscustdoc = 1;
			Update BMTDOCUMENTTYPES_TEMP Set CategoryId =(Select Id from DocumentCategory Where Code = 'CUSTOMER') Where dociscustdoc = 1;
		]]>
	</sql>
	</changeSet>
	<changeSet id="5.1" author="Durgaprasad G">
		<createView viewName="bmtdocumenttypes_view" replaceIfExists="true">
				SELECT doctemp.doctypecode,
			    doctemp.doctypedesc,
			    doctemp.docismandatory,
			    doctemp.doctypeisactive,
			    doctemp.version,
			    doctemp.lastmntby,
			    doctemp.lastmnton,
			    doctemp.recordstatus,
			    doctemp.rolecode,
			    doctemp.nextrolecode,
			    doctemp.taskid,
			    doctemp.nexttaskid,
			    doctemp.recordtype,
			    doctemp.workflowid,
			    doctemp.docexpdateismand,
			    doctemp.docissuedatemand,
			    doctemp.docidnummand,
			    doctemp.docissuedauthoritymand,
			    doctemp.docispdfextrequired,
			    doctemp.docispasswordprotected,
			    doctemp.pdfmappingref,
			    doctemp.categoryId,
				doctemp.PDD,
				doctemp.OTC,
				doctemp.LVReq,
				doctemp.RCUReq,
				doctemp.dociscustdoc,
				dc.Code AS lovDescCategoryCode
			   FROM bmtdocumenttypes_temp doctemp 
			   Left Join DocumentCategory dc ON dc.Id = doctemp.categoryId
			UNION ALL
			 SELECT doc.doctypecode,
			    doc.doctypedesc,
			    doc.docismandatory,
			    doc.doctypeisactive,
			    doc.version,
			    doc.lastmntby,
			    doc.lastmnton,
			    doc.recordstatus,
			    doc.rolecode,
			    doc.nextrolecode,
			    doc.taskid,
			    doc.nexttaskid,
			    doc.recordtype,
			    doc.workflowid,
			    doc.docexpdateismand,
			    doc.docissuedatemand,
			    doc.docidnummand,
			    doc.docissuedauthoritymand,
			    doc.docispdfextrequired,
			    doc.docispasswordprotected,
			    doc.pdfmappingref,
			    doc.categoryId,
				doc.PDD,
				doc.OTC,
				doc.LVReq,
				doc.RCUReq,
				doc.dociscustdoc,
				dc.Code AS lovDescCategoryCode
			    FROM bmtdocumenttypes doc
			    Left Join DocumentCategory dc ON dc.Id = doc.categoryId
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM bmtdocumenttypes_temp
			          WHERE bmtdocumenttypes_temp.doctypecode = doc.doctypecode));
		</createView>
	</changeSet>
	<changeSet id="5.2" author="Durgaprasad G">
		<createView viewName="bmtdocumenttypes_aview" replaceIfExists="true">
		  SELECT doc.doctypecode,
			    doc.doctypedesc,
			    doc.docismandatory,
			    doc.doctypeisactive,
			    doc.version,
			    doc.lastmntby,
			    doc.lastmnton,
			    doc.recordstatus,
			    doc.rolecode,
			    doc.nextrolecode,
			    doc.taskid,
			    doc.nexttaskid,
			    doc.recordtype,
			    doc.workflowid,
			    doc.docexpdateismand,
			    doc.docissuedatemand,
			    doc.docidnummand,
			    doc.docissuedauthoritymand,
			    doc.docispdfextrequired,
			    doc.docispasswordprotected,
			    doc.pdfmappingref,
			    doc.categoryId,
				doc.PDD,
				doc.OTC,
				doc.LVReq,
				doc.RCUReq,
				doc.dociscustdoc,
				dc.Code AS lovDescCategoryCode
			   FROM bmtdocumenttypes doc
			   Left Join DocumentCategory dc ON dc.Id = doc.categoryId
		</createView>
	</changeSet>
	<changeSet id="6.0" author="Durgaprasad G">
		<sql>
			<![CDATA[
				UPDATE seqSecgrouprights SET SEQNO= (SELECT MAX(grprightid) FROM Secgrouprights);
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				
				Insert into SecRights(RightID,RightType,RightName,page,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId) Values ((Select MAX(RightID)+1 From SecRights), 3, 'DocumentTypeDialog_pddDoc', 'DocumentTypeDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				Insert into SecRights(RightID,RightType,RightName,page,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId) Values ((Select MAX(RightID)+1 From SecRights), 3, 'DocumentTypeDialog_otcDoc', 'DocumentTypeDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				Insert into SecRights(RightID,RightType,RightName,page,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId) Values ((Select MAX(RightID)+1 From SecRights), 3, 'DocumentTypeDialog_lvReq', 'DocumentTypeDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				Insert into SecRights(RightID,RightType,RightName,page,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId) Values ((Select MAX(RightID)+1 From SecRights), 3, 'DocumentTypeDialog_rcuReq', 'DocumentTypeDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
			
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='DOCUMENTTYPE_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_pddDoc'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='CL_ORIGINATION_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_pddDoc'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='DOCUMENTTYPE_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_otcDoc'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='CL_ORIGINATION_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_otcDoc'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='DOCUMENTTYPE_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_lvReq'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='CL_ORIGINATION_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_lvReq'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='DOCUMENTTYPE_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_rcuReq'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				Insert Into secGrouprights(GrpRightID,GrpID,RightID,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId,AccessType) values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='CL_ORIGINATION_MAKER'),
				(select RightId from secRights where RightName='DocumentTypeDialog_rcuReq'),0,1000,current_timestamp, 'Approved','','','','','',0,1);
				
				UPDATE seqSecgrouprights SET SEQNO= (SELECT MAX(grprightid) FROM Secgrouprights);
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			]]>	
		</sql>
	</changeSet>
	
	<changeSet id="7.1" author="Durgaprasad G">
		<createView viewName="bmtdocumenttypes_view" replaceIfExists="true">
			SELECT doctemp.doctypecode,
			    doctemp.doctypedesc,
			    doctemp.docismandatory,
			    doctemp.doctypeisactive,
			    doctemp.version,
			    doctemp.lastmntby,
			    doctemp.lastmnton,
			    doctemp.recordstatus,
			    doctemp.rolecode,
			    doctemp.nextrolecode,
			    doctemp.taskid,
			    doctemp.nexttaskid,
			    doctemp.recordtype,
			    doctemp.workflowid,
			    doctemp.docexpdateismand,
			    doctemp.docissuedatemand,
			    doctemp.docidnummand,
			    doctemp.docissuedauthoritymand,
			    doctemp.docispdfextrequired,
			    doctemp.docispasswordprotected,
			    doctemp.pdfmappingref,
			    doctemp.categoryId,
				doctemp.PDD,
				doctemp.OTC,
				doctemp.LVReq,
				doctemp.RCUReq,
				doctemp.dociscustdoc,
				dc.Code AS categoryCode,
				dc.Description AS categoryDesc
			   FROM bmtdocumenttypes_temp doctemp 
			   Left Join DocumentCategory dc ON dc.Id = doctemp.categoryId
			UNION ALL
			 SELECT doc.doctypecode,
			    doc.doctypedesc,
			    doc.docismandatory,
			    doc.doctypeisactive,
			    doc.version,
			    doc.lastmntby,
			    doc.lastmnton,
			    doc.recordstatus,
			    doc.rolecode,
			    doc.nextrolecode,
			    doc.taskid,
			    doc.nexttaskid,
			    doc.recordtype,
			    doc.workflowid,
			    doc.docexpdateismand,
			    doc.docissuedatemand,
			    doc.docidnummand,
			    doc.docissuedauthoritymand,
			    doc.docispdfextrequired,
			    doc.docispasswordprotected,
			    doc.pdfmappingref,
			    doc.categoryId,
				doc.PDD,
				doc.OTC,
				doc.LVReq,
				doc.RCUReq,
				doc.dociscustdoc,
				dc.Code AS categoryCode,
				dc.Description AS categoryDesc
			    FROM bmtdocumenttypes doc
			    Left Join DocumentCategory dc ON dc.Id = doc.categoryId
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM bmtdocumenttypes_temp
			          WHERE bmtdocumenttypes_temp.doctypecode = doc.doctypecode));
		</createView>
	</changeSet>
	<changeSet id="7.2" author="Durgaprasad G">
		<createView viewName="bmtdocumenttypes_aview" replaceIfExists="true">
		   SELECT doc.doctypecode,
			    doc.doctypedesc,
			    doc.docismandatory,
			    doc.doctypeisactive,
			    doc.version,
			    doc.lastmntby,
			    doc.lastmnton,
			    doc.recordstatus,
			    doc.rolecode,
			    doc.nextrolecode,
			    doc.taskid,
			    doc.nexttaskid,
			    doc.recordtype,
			    doc.workflowid,
			    doc.docexpdateismand,
			    doc.docissuedatemand,
			    doc.docidnummand,
			    doc.docissuedauthoritymand,
			    doc.docispdfextrequired,
			    doc.docispasswordprotected,
			    doc.pdfmappingref,
			    doc.categoryId,
				doc.PDD,
				doc.OTC,
				doc.LVReq,
				doc.RCUReq,
				doc.dociscustdoc,
				dc.Code AS categoryCode,
				dc.Description AS categoryDesc
			   FROM bmtdocumenttypes doc
			   Left Join DocumentCategory dc ON dc.Id = doc.categoryId
		</createView>
	</changeSet>
	<changeSet id="7.3" author="Durgaprasad G">
		<createView viewName="bmtdocumenttypes_view" replaceIfExists="true">
			SELECT doctemp.doctypecode,
			    doctemp.doctypedesc,
			    doctemp.docismandatory,
			    doctemp.doctypeisactive,
			    doctemp.version,
			    doctemp.lastmntby,
			    doctemp.lastmnton,
			    doctemp.recordstatus,
			    doctemp.rolecode,
			    doctemp.nextrolecode,
			    doctemp.taskid,
			    doctemp.nexttaskid,
			    doctemp.recordtype,
			    doctemp.workflowid,
			    doctemp.docexpdateismand,
			    doctemp.docissuedatemand,
			    doctemp.docidnummand,
			    doctemp.docissuedauthoritymand,
			    doctemp.docispdfextrequired,
			    doctemp.docispasswordprotected,
			    doctemp.pdfmappingref,
			    doctemp.categoryId,
				doctemp.PDD,
				doctemp.OTC,
				doctemp.LVReq,
				doctemp.RCUReq,
				dc.Code AS categoryCode,
				dc.Description AS categoryDesc
			   FROM bmtdocumenttypes_temp doctemp 
			   Left Join DocumentCategory dc ON dc.Id = doctemp.categoryId
			UNION ALL
			 SELECT doc.doctypecode,
			    doc.doctypedesc,
			    doc.docismandatory,
			    doc.doctypeisactive,
			    doc.version,
			    doc.lastmntby,
			    doc.lastmnton,
			    doc.recordstatus,
			    doc.rolecode,
			    doc.nextrolecode,
			    doc.taskid,
			    doc.nexttaskid,
			    doc.recordtype,
			    doc.workflowid,
			    doc.docexpdateismand,
			    doc.docissuedatemand,
			    doc.docidnummand,
			    doc.docissuedauthoritymand,
			    doc.docispdfextrequired,
			    doc.docispasswordprotected,
			    doc.pdfmappingref,
			    doc.categoryId,
				doc.PDD,
				doc.OTC,
				doc.LVReq,
				doc.RCUReq,
				dc.Code AS categoryCode,
				dc.Description AS categoryDesc
			    FROM bmtdocumenttypes doc
			    Left Join DocumentCategory dc ON dc.Id = doc.categoryId
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM bmtdocumenttypes_temp
			          WHERE bmtdocumenttypes_temp.doctypecode = doc.doctypecode));
		</createView>
	</changeSet>
	<changeSet id="7.4" author="Durgaprasad G">
		<createView viewName="bmtdocumenttypes_aview" replaceIfExists="true">
		   SELECT doc.doctypecode,
			    doc.doctypedesc,
			    doc.docismandatory,
			    doc.doctypeisactive,
			    doc.version,
			    doc.lastmntby,
			    doc.lastmnton,
			    doc.recordstatus,
			    doc.rolecode,
			    doc.nextrolecode,
			    doc.taskid,
			    doc.nexttaskid,
			    doc.recordtype,
			    doc.workflowid,
			    doc.docexpdateismand,
			    doc.docissuedatemand,
			    doc.docidnummand,
			    doc.docissuedauthoritymand,
			    doc.docispdfextrequired,
			    doc.docispasswordprotected,
			    doc.pdfmappingref,
			    doc.categoryId,
				doc.PDD,
				doc.OTC,
				doc.LVReq,
				doc.RCUReq,
				dc.Code AS categoryCode,
				dc.Description AS categoryDesc
			   FROM bmtdocumenttypes doc
			   Left Join DocumentCategory dc ON dc.Id = doc.categoryId
		</createView>
	</changeSet>

	<changeSet id="8.0" author="Durgaprasad G">
		<sql>
		<![CDATA[
			Update BMTDOCUMENTTYPES Set CategoryId =(Select Id from DocumentCategory Where Code = 'FINANCE') Where dociscustdoc <> 1;
			Update BMTDOCUMENTTYPES_TEMP Set CategoryId =(Select Id from DocumentCategory Where Code = 'FINANCE') Where dociscustdoc <> 1;
		]]>
	</sql>
	</changeSet>
	
	<changeSet id="9.0" author="Durgaprasad G">
		<dropColumn tableName="bmtdocumenttypes_temp" columnName="dociscustdoc"/>
		<dropColumn tableName="bmtdocumenttypes" columnName="dociscustdoc"/>
	</changeSet>
	
	<changeSet id="10.0" author="Durgaprasad G">
		<createView viewName="fincovenanttype_aview" replaceIfExists="true">
			SELECT t1.finreference,
		    t1.covenanttype,
		    t1.description,
		    t1.mandrole,
		    t1.alwwaiver,
		    t1.alwpostpone,
		    t1.postponedays,
		    t3.doctypedesc AS covenanttypedesc,
			t5.Code AS categoryCode,
		    t4.roledesc AS mandroledesc,
		    t1.receivabledate,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid
		   FROM fincovenanttype t1
		     JOIN financemain t2 ON t2.finreference = t1.finreference
		     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
			 Left Join DocumentCategory t5 ON t5.Id = t3.categoryId
		     JOIN secroles t4 ON t4.rolecd = t1.mandrole;
		</createView>
	</changeSet>
	
	<changeSet id="10.1" author="Durgaprasad G">
		<createView viewName="fincovenanttype_eaview" replaceIfExists="true">
			SELECT t.finreference,
		    t.custid,
		    t.covenanttype,
		    t.description,
		    t.mandrole,
		    t.alwwaiver,
		    t.alwpostpone,
		    t.postponedays,
		    t.covenanttypedesc,
		    t.categoryCode,
		    t.receivabledate,
		    t.version,
		    t.lastmntby,
		    t.lastmnton,
		    t.recordstatus,
		    t.rolecode,
		    t.nextrolecode,
		    t.taskid,
		    t.nexttaskid,
		    t.recordtype,
		    t.workflowid,
		        CASE
		            WHEN t.docreceiveddate IS NULL THEN cd.lastmnton
		            ELSE t.docreceiveddate
		        END AS docreceiveddate
		   FROM ( SELECT t1.finreference,
		            t4.custid,
		            t1.covenanttype,
		            t1.description,
		            t1.mandrole,
		            t1.alwwaiver,
		            t1.alwpostpone,
		            t1.postponedays,
		            t3.doctypedesc AS covenanttypedesc,
		            t5.Code AS categoryCode,
		            t1.receivabledate,
		            t1.version,
		            t1.lastmntby,
		            t1.lastmnton,
		            t1.recordstatus,
		            t1.rolecode,
		            t1.nextrolecode,
		            t1.taskid,
		            t1.nexttaskid,
		            t1.recordtype,
		            t1.workflowid,
		            t7.docreceiveddate
		           FROM fincovenanttype t1
		             JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
					  Left Join DocumentCategory t5 ON t5.Id = t3.categoryId
		             JOIN financemain t4 ON t4.finreference = t1.finreference
		             LEFT JOIN documentdetails t7 ON t7.referenceid = t1.finreference AND t1.covenanttype = t7.doccategory) t
					LEFT JOIN customerdocuments cd ON cd.custid = t.custid AND t.covenanttype = cd.custdoccategory;
		</createView>
	</changeSet>
	
	<changeSet id="10.2" author="Durgaprasad G">
		<createView viewName="fincovenanttype_eview" replaceIfExists="true">
			 SELECT t.finreference,
		    t.custid,
		    t.covenanttype,
		    t.description,
		    t.mandrole,
		    t.alwwaiver,
		    t.alwpostpone,
		    t.postponedays,
		    t.covenanttypedesc,
		    t.categoryCode,
		    t.receivabledate,
		    t.version,
		    t.lastmntby,
		    t.lastmnton,
		    t.recordstatus,
		    t.rolecode,
		    t.nextrolecode,
		    t.taskid,
		    t.nexttaskid,
		    t.recordtype,
		    t.workflowid,
		        CASE
		            WHEN t.docreceiveddate IS NULL THEN cd.lastmnton
		            ELSE t.docreceiveddate
		        END AS docreceiveddate
		   FROM ( SELECT t1.finreference,
		            t4.custid,
		            t1.covenanttype,
		            t1.description,
		            t1.mandrole,
		            t1.alwwaiver,
		            t1.alwpostpone,
		            t1.postponedays,
		            t3.doctypedesc AS covenanttypedesc,
		            t5.Code AS categoryCode,
		            t1.receivabledate,
		            t1.version,
		            t1.lastmntby,
		            t1.lastmnton,
		            t1.recordstatus,
		            t1.rolecode,
		            t1.nextrolecode,
		            t1.taskid,
		            t1.nexttaskid,
		            t1.recordtype,
		            t1.workflowid,
		            t7.docreceiveddate
		           FROM fincovenanttype_temp t1
		             JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
					   Left Join DocumentCategory t5 ON t5.Id = t3.categoryId
		             JOIN financemain t4 ON t4.finreference = t1.finreference
		             LEFT JOIN documentdetails t7 ON t7.referenceid = t1.finreference AND t1.covenanttype = t7.doccategory
		        UNION ALL
		         SELECT t1.finreference,
		            t4.custid,
		            t1.covenanttype,
		            t1.description,
		            t1.mandrole,
		            t1.alwwaiver,
		            t1.alwpostpone,
		            t1.postponedays,
		            t3.doctypedesc AS covenanttypedesc,
		            t5.Code AS categoryCode,
		            t1.receivabledate,
		            t1.version,
		            t1.lastmntby,
		            t1.lastmnton,
		            t1.recordstatus,
		            t1.rolecode,
		            t1.nextrolecode,
		            t1.taskid,
		            t1.nexttaskid,
		            t1.recordtype,
		            t1.workflowid,
		            t7.docreceiveddate
		           FROM fincovenanttype t1
		             JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
					  Left Join DocumentCategory t5 ON t5.Id = t3.categoryId
		             JOIN financemain t4 ON t4.finreference = t1.finreference
		             LEFT JOIN documentdetails t7 ON t7.referenceid = t1.finreference AND t1.covenanttype = t7.doccategory
		          WHERE NOT (EXISTS ( SELECT 1
		                   FROM fincovenanttype_temp
		                  WHERE fincovenanttype_temp.finreference = t1.finreference AND fincovenanttype_temp.covenanttype = t1.covenanttype))) t
		     LEFT JOIN customerdocuments cd ON cd.custid = t.custid AND t.covenanttype = cd.custdoccategory;
      </createView>
	</changeSet>
	
	<changeSet id="10.3" author="Durgaprasad G">
		<createView viewName="fincovenanttype_tview" replaceIfExists="true">
			 SELECT t1.finreference,
		    t1.covenanttype,
		    t1.description,
		    t1.mandrole,
		    t1.alwwaiver,
		    t1.alwpostpone,
		    t1.postponedays,
		    t3.doctypedesc AS covenanttypedesc,
		    t5.Code AS categoryCode,
		    t4.roledesc AS mandroledesc,
		    t1.receivabledate,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid
		   FROM fincovenanttype_temp t1
		     JOIN financemain_temp t2 ON t2.finreference = t1.finreference
		     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
			 Left Join DocumentCategory t5 ON t5.Id = t3.categoryId
		     JOIN secroles t4 ON t4.rolecd = t1.mandrole;
     </createView>
	</changeSet>
	
	<changeSet id="10.4" author="Durgaprasad G">
		<createView viewName="fincovenanttype_view" replaceIfExists="true">
		SELECT t1.finreference,
	    t1.covenanttype,
	    t1.description,
	    t1.mandrole,
	    t1.alwwaiver,
	    t1.alwpostpone,
	    t1.postponedays,
	    t3.doctypedesc AS covenanttypedesc,
	    t5.Code AS categoryCode,
	    t4.roledesc AS mandroledesc,
	    t1.receivabledate,
	    t1.version,
	    t1.lastmntby,
	    t1.lastmnton,
	    t1.recordstatus,
	    t1.rolecode,
	    t1.nextrolecode,
	    t1.taskid,
	    t1.nexttaskid,
	    t1.recordtype,
	    t1.workflowid
	   FROM fincovenanttype_temp t1
	     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
		 Left Join DocumentCategory t5 ON t5.Id = t3.categoryId
	     LEFT JOIN secroles t4 ON t4.rolecd = t1.mandrole
	UNION ALL
	 SELECT t1.finreference,
	    t1.covenanttype,
	    t1.description,
	    t1.mandrole,
	    t1.alwwaiver,
	    t1.alwpostpone,
	    t1.postponedays,
	    t3.doctypedesc AS covenanttypedesc,
	    t5.Code AS categoryCode,
	    t4.roledesc AS mandroledesc,
	    t1.receivabledate,
	    t1.version,
	    t1.lastmntby,
	    t1.lastmnton,
	    t1.recordstatus,
	    t1.rolecode,
	    t1.nextrolecode,
	    t1.taskid,
	    t1.nexttaskid,
	    t1.recordtype,
	    t1.workflowid
	   FROM fincovenanttype t1
	     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
		  Left Join DocumentCategory t5 ON t5.Id = t3.categoryId
	     LEFT JOIN secroles t4 ON t4.rolecd = t1.mandrole
	  WHERE NOT (EXISTS ( SELECT 1
	           FROM fincovenanttype_temp
	          WHERE fincovenanttype_temp.finreference = t1.finreference AND fincovenanttype_temp.covenanttype = t1.covenanttype));
	 </createView>
	</changeSet>
	
	<changeSet id="10.5" author="Durgaprasad G">
		<createView viewName="rmtchecklistdetails_aview" replaceIfExists="true">
			SELECT t1.checklistid,
		    t1.ansseqno,
		    t1.ansdesc,
		    t1.remarksallow,
		    t1.remarksmand,
		    t1.docrequired,
		    t1.doctype,
		    t1.anscond,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.doctypedesc AS lovdescdoccategory,
		    t3.Code AS categoryCode
		   FROM rmtchecklistdetails t1
		     LEFT JOIN bmtdocumenttypes t2 ON t1.doctype = t2.doctypecode
			 Left Join DocumentCategory t3 ON t3.Id = t2.categoryId
	 	 </createView>
	</changeSet>
	
	<changeSet id="10.6" author="Durgaprasad.g">
		<createView viewName="rmtchecklistdetails_view" replaceIfExists="true">
				SELECT t1.checklistid,
		    t1.ansseqno,
		    t1.ansdesc,
		    t1.remarksallow,
		    t1.remarksmand,
		    t1.docrequired,
		    t1.doctype,
		    t1.anscond,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.doctypedesc AS lovdescdoccategory,
		    t3.Code AS categoryCode
		   FROM rmtchecklistdetails_temp t1
		   LEFT JOIN bmtdocumenttypes t2 ON t1.doctype = t2.doctypecode
		   Left Join DocumentCategory t3 ON t3.Id = t2.categoryId
		UNION ALL
		 SELECT t1.checklistid,
		    t1.ansseqno,
		    t1.ansdesc,
		    t1.remarksallow,
		    t1.remarksmand,
		    t1.docrequired,
		    t1.doctype,
		    t1.anscond,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.doctypedesc AS lovdescdoccategory,
		    t3.Code AS categoryCode
		   FROM rmtchecklistdetails t1
		   LEFT JOIN bmtdocumenttypes t2 ON t1.doctype = t2.doctypecode
		   Left Join DocumentCategory t3 ON t3.Id = t2.categoryId
		   WHERE NOT (EXISTS ( SELECT 1
		           FROM rmtchecklistdetails_temp
		          WHERE rmtchecklistdetails_temp.checklistid = t1.checklistid AND rmtchecklistdetails_temp.ansseqno = t1.ansseqno));
		
		</createView>
	</changeSet>
</databaseChangeLog>

