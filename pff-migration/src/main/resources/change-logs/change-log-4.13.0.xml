<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />


	 <changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true"
		dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>
	 
	 <changeSet id="1" author="Vinay">
		<sql>
			update FinanceDeviations set Module = 'ELIGIBILITY' where Module = 'EILIBILITY';
			update FinanceDeviations_Temp set Module = 'ELIGIBILITY' where Module = 'EILIBILITY';
		</sql>
	</changeSet>
	
	<changeSet id="2" author="Kesav">
		<comment>lovdescfindivision column added</comment>
		<createView viewName="finreceiptheader_fview" replaceIfExists="true">
			SELECT t1.receiptid, t1.receiptdate, t1.receipttype, t1.recagainst, t1.reference, t1.receiptpurpose, t1.receiptmode, t1.excessadjustto, t1.allocationtype, t1.receiptamount, t1.effectschdmethod, 
			 t1.receiptmodestatus, t1.version, t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.fintype, t2.finbranch, 
			 t3.custcif, t3.custshrtname, t2.finccy, t1.realizationdate, t1.cancelreason, t4.fintypedesc, t6.branchdesc AS finbranchdesc, t5.ccydesc AS finccydesc, t7.rejectdesc AS cancelreasondesc, 
			 t2.finisactive, t2.schedulemethod, t2.profitdaysbasis AS pftdaysbasis, t1.waviedamt, t3.custid, t1.totfeeamount, t1.bouncedate, t1.remarks, t1.rcdmaintainsts, t1.depositprocess, t1.depositbranch, 
			 t1.lpiamount, t1.lppamount, t1.gstlpiamount, t1.gstlppamount, t1.instructionuid, t4.findivision lovdescfindivision
			 FROM finreceiptheader_temp t1  
			 JOIN financemain_temp t2 ON t1.reference = t2.finreference 
			 JOIN customers t3 ON t2.custid = t3.custid 
			 JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype 
			 JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode 
			 JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode 
			 LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode		
		</createView>
	</changeSet>
	
	<changeSet id="3" author="Kesav">
		<comment>lovdescfindivision column added</comment>
		<createView viewName="finreceiptheader_feview" replaceIfExists="true">
			SELECT t1.receiptid, t1.receiptdate, t1.receipttype, t1.recagainst, t1.reference, t1.receiptpurpose, t1.receiptmode, t1.excessadjustto, t1.allocationtype, t1.receiptamount, t1.effectschdmethod, 
			 t1.receiptmodestatus, t1.version, t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.fintype, t2.finbranch, 
			 t3.custcif, t3.custshrtname, t2.finccy, t1.realizationdate, t1.cancelreason, t4.fintypedesc, t6.branchdesc AS finbranchdesc, t5.ccydesc AS finccydesc, t7.rejectdesc AS cancelreasondesc, 
			 t2.finisactive, t2.schedulemethod, t2.profitdaysbasis AS pftdaysbasis, t1.waviedamt, t3.custid, t1.totfeeamount, t1.bouncedate, t1.remarks, t1.rcdmaintainsts, t1.depositprocess, 
			 t1.depositbranch, t1.lpiamount, t1.lppamount, t1.gstlpiamount, t1.gstlppamount, t1.instructionuid, t4.findivision lovdescfindivision
			FROM finreceiptheader_temp t1  
			JOIN financemain_temp t2 ON t1.reference = t2.finreference  
			JOIN customers t3 ON t2.custid = t3.custid  
			JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype 
			JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode 
			JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode
			LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode
			
			UNION ALL
			
			SELECT t1.receiptid, t1.receiptdate, t1.receipttype, t1.recagainst, t1.reference, t1.receiptpurpose, t1.receiptmode, t1.excessadjustto, t1.allocationtype, t1.receiptamount, t1.effectschdmethod, 
			t1.receiptmodestatus, t1.version, t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.fintype, t2.finbranch, 
			t3.custcif, t3.custshrtname, t2.finccy, t1.realizationdate, t1.cancelreason, t4.fintypedesc, t6.branchdesc AS finbranchdesc, t5.ccydesc AS finccydesc, t7.rejectdesc AS cancelreasondesc, 
			t2.finisactive, t2.schedulemethod, t2.profitdaysbasis AS pftdaysbasis, t1.waviedamt, t3.custid, t1.totfeeamount, t1.bouncedate, t1.remarks, t1.rcdmaintainsts, t1.depositprocess, 
			t1.depositbranch, t1.lpiamount, t1.lppamount, t1.gstlpiamount, t1.gstlppamount, t1.instructionuid, t4.findivision lovdescfindivision
			FROM finreceiptheader t1
			JOIN (SELECT financemain_temp.finreference, financemain_temp.finbranch, financemain_temp.fintype, financemain_temp.finccy, financemain_temp.schedulemethod, financemain_temp.profitdaysbasis, 
							financemain_temp.finisactive, financemain_temp.custid 
				   FROM 	financemain_temp
				   UNION    
				   SELECT 	financemain.finreference, financemain.finbranch, financemain.fintype, financemain.finccy, financemain.schedulemethod, financemain.profitdaysbasis, financemain.finisactive,
							financemain.custid
				   FROM financemain) t2 ON t1.reference = t2.finreference  
				   JOIN customers t3 ON t2.custid = t3.custid  
				   JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype  
				   JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode  
				   JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode  
				   LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode
			 WHERE NOT (EXISTS ( SELECT 1 FROM finreceiptheader_temp WHERE finreceiptheader_temp.receiptid = t1.receiptid))		
		</createView>
	</changeSet>
	
	<changeSet id="4" author="aditya.a">
	<sql>
		<![CDATA[
			update RMTFinanceTypes set TaxNoMand = 0 where TaxNoMand is null;
			update RMTFinanceTypes_temp set TaxNoMand = 0 where TaxNoMand is null;
		]]>
	</sql>
   </changeSet>
   <changeSet id="4.1" author="aditya.a">
	<addNotNullConstraint tableName="RMTFinanceTypes" columnName="TaxNoMand"/>
	<addNotNullConstraint tableName="RMTFinanceTypes_temp" columnName="TaxNoMand"/>
   </changeSet>

   <changeSet id="5.3" author="vijaykumar.L">
		<modifyDataType tableName="QUERYDETAIL" columnName="ASSIGNEDROLE"
			newDataType="varchar(100)" />
		<modifyDataType tableName="QUERYDETAIL_TEMP" columnName="ASSIGNEDROLE"
			newDataType="varchar(100)" />	
	</changeSet>

	
	<changeSet id="5.2_pre" author="vijaykumar.L" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'querydetail');
					select deps_save_and_drop_dependencies ('plf', 'querydetail_temp');
			]]>
		</sql>
	</changeSet>
	<changeSet id="5.2" author="vijaykumar.L" dbms="postgresql">
		<sql>
			alter table QUERYDETAIL alter column ASSIGNEDROLE TYPE varchar(100);
			alter table QUERYDETAIL_TEMP alter column ASSIGNEDROLE TYPE varchar(100);
		</sql>
	</changeSet>
	<changeSet id="5.2_post" author="vijaykumar.L" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'querydetail');
					select deps_restore_dependencies ('plf', 'querydetail_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="6" author="Kranthi">
		<comment>New column added for Template Fields</comment>
		<addColumn tableName="Templatefields">
			<column name="Event" type="varchar(50)" />
		</addColumn>
	</changeSet>
   
   	<changeSet id="7" author="Kranthi">
		<comment>New column added for Template Fields, Data updations</comment>
		<sql>
			update templatefields set Event = 'Origination' where Module = 'FIN';
			update templatefields set Event = Module where Module != 'FIN';
		</sql>
	</changeSet>
	
	<changeSet id="8" author="Kranthi">
		<comment>New column added for Template Details, EXISTING DATA SHOULD BE VERIFY BASED ON CLIENT TO CLIENT</comment>
		<addColumn tableName="Templates">
			<column name="Event" type="varchar(50)" />
		</addColumn>
		<addColumn tableName="Templates_Temp">
			<column name="Event" type="varchar(50)" />
		</addColumn>
	</changeSet> 
	
	<changeSet id="9" author="Kranthi">
		<comment>New column added for Template Details</comment>
		<createView viewName="templates_view" replaceIfExists="true">
			 SELECT t1.templateid,
				    t1.templatecode,
				    t1.module,
				    t1.Event,
				    t1.templatedesc,
				    t1.smstemplate,
				    t1.smscontent,
				    t1.emailtemplate,
				    t1.emailcontent,
				    t1.emailformat,
				    t1.emailsubject,
				    t1.active,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.emailsendto,
				    t1.templatefor,
				    t1.turnaroundtime,
				    t1.repeat
				   FROM templates_temp t1
				UNION ALL
				 SELECT t1.templateid,
				    t1.templatecode,
				    t1.module,
				    t1.Event,
				    t1.templatedesc,
				    t1.smstemplate,
				    t1.smscontent,
				    t1.emailtemplate,
				    t1.emailcontent,
				    t1.emailformat,
				    t1.emailsubject,
				    t1.active,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.emailsendto,
				    t1.templatefor,
				    t1.turnaroundtime,
				    t1.repeat
				   FROM templates t1
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM templates_temp
				          WHERE templates_temp.templateid = t1.templateid))
		</createView>
	</changeSet>
	<changeSet id="10" author="Kranthi">
		<comment>New column added for Template Details</comment>
		<createView viewName="templates_aview" replaceIfExists="true">
			SELECT t1.templateid,
				    t1.templatecode,
				    t1.module,
				    t1.Event,
				    t1.templatedesc,
				    t1.smstemplate,
				    t1.smscontent,
				    t1.emailtemplate,
				    t1.emailcontent,
				    t1.emailformat,
				    t1.emailsubject,
				    t1.active,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.emailsendto,
				    t1.templatefor,
				    t1.turnaroundtime,
				    t1.repeat
				   FROM templates t1
		</createView>
	</changeSet>
	
	<changeSet id="11" author="Kranthi">
		<comment>New column added for Notifications, EXISTING DATA SHOULD BE VERIFY BASED ON CLIENT TO CLIENT</comment>
		<addColumn tableName="Notifications">
			<column name="RuleEvent" type="varchar(50)" />
		</addColumn>
		<addColumn tableName="Notifications_Temp">
			<column name="RuleEvent" type="varchar(50)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="12" author="Kranthi">
		<comment>New column added for Template Details</comment>
		<createView viewName="notifications_view" replaceIfExists="true">
			 SELECT t1.ruleid,
				    t1.rulecode,
				    t1.rulemodule,
				    t1.ruleEvent,
				    t1.rulecodedesc,
				    t1.templatetype,
				    t1.ruletemplate,
				    t1.actualblocktemplate,
				    t1.rulereciepent,
				    t1.actualblockreciepent,
				    t1.ruleattachment,
				    t1.actualblockatachment,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.templatetypefields,
				    t1.rulereciepentfields,
				    t1.ruleattachmentfields
				   FROM notifications_temp t1
				UNION ALL
				 SELECT t1.ruleid,
				    t1.rulecode,
				    t1.rulemodule,
				    t1.ruleEvent,
				    t1.rulecodedesc,
				    t1.templatetype,
				    t1.ruletemplate,
				    t1.actualblocktemplate,
				    t1.rulereciepent,
				    t1.actualblockreciepent,
				    t1.ruleattachment,
				    t1.actualblockatachment,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.templatetypefields,
				    t1.rulereciepentfields,
				    t1.ruleattachmentfields
				   FROM notifications t1
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM notifications_temp
				          WHERE rulecode = t1.rulecode))
		</createView>
	</changeSet>
	<changeSet id="13" author="Kranthi">
		<comment>New column added for Template Details</comment>
		<createView viewName="notifications_aview" replaceIfExists="true">
			 SELECT ruleid,
				    rulecode,
				    rulemodule,
				    ruleEvent,
				    rulecodedesc,
				    templatetype,
				    ruletemplate,
				    actualblocktemplate,
				    rulereciepent,
				    actualblockreciepent,
				    ruleattachment,
				    actualblockatachment,
				    version,
				    lastmntby,
				    lastmnton,
				    recordstatus,
				    rolecode,
				    nextrolecode,
				    taskid,
				    nexttaskid,
				    recordtype,
				    workflowid,
				    templatetypefields,
				    rulereciepentfields,
				    ruleattachmentfields
				   FROM notifications
		</createView>
	</changeSet>
		
	<changeSet id="14" author="Kranthi">
		<dropPrimaryKey tableName="TemplateFields" constraintName="pk_templatefields" />
	</changeSet>
	<changeSet id="15" author="Kranthi">
		<addPrimaryKey tableName="TemplateFields" constraintName="pk_templatefields"
			columnNames="module, field, event" />
	</changeSet>
	
	<changeSet id="16" author="Kranthi">
		<sql>
						
			DELETE FROM TemplateFields WHERE Module = 'FIN';
			
			INSERT INTO TemplateFields VALUES(	'FIN','custRO1','Source','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custShrtName','Customer Name','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrCountry','custAddrCountry','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finAmount','Finance Amount','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','nextRepayDate','NextRepayDate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','numberOfTerms','numberOfTerms','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','repayProfitRate','repayProfitRate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finRepaymentAmount','finRepaymentAmount','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','repayFrq','RepayFrq','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finStartDate','FinStartDate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrStreet','custAddrStreet','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrCity','custAddrCity','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrProvince','custAddrProvince','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrHNbr','custAddrHNbr','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrLine1','custAddrLine1','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrLine2','custAddrLine2','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','firstRepay','FirstRepay','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','curReducingRate','CurReducingRate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrFlatNo','custAddrFlatNo','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finReference','Loan Reference Number','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custCoreBank','Cust Core Bank ID','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finCurrAssetValue','FinCurrent Asset Value','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finAssetValue','Fin Asset Value','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','repaymentFrequency','Repayment Frequency','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','firstDueDate','First Due Date Frequency','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','maturityDate','Maturity Date','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','graceBaseRate','Grace BaseRate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','graceSpecialRate','Grace SpecialRate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','repayBaseRate','Repay BaseRate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','repaySpecialRate','Repay SpecialRate','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','repayMargin','Repay Margin','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranch','Fin Branch','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finCcy','FinCcy','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finDivision','FinDivision','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','accountsOfficerDesc','Accounts Officer Desc','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','dsaCode','DSA Code','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','dsaDesc','DSA Desc','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','DMACodeDesc','DMA CodeDesc','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','totalProfit','Total Profit','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','lastRepay','Last Repay','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrDistrict','custAddrDistrict','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custAddrPincode','custAddrPincode','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custMobileNumber','Customer Mobile Number','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custEmailId','Customer Email Id','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custFlatNbr','CustFlatNbr','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custPOBox','CustPOBox','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrFlatNo','Loan branch Address Flat','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrStreet','Loan branch Address Street','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrCountry','Loan branch Address Country','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrCity','Loan branch Address City','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrProvince','Loan branch Address State','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrDistrict','Loan branch Address District','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrPincode','Loan branch Address Pincode','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchPhone','Loan branch Address Phone','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrLine1','Loan branch Address Line1','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrLine2','Loan branch Address Line2','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrHNbr','Loan branch Address House','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custCIF','Customer CIF','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','appDate','Application Date','A','Origination'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userName','User Name','A','Origination'	);
			
			INSERT INTO TemplateFields VALUES(	'FIN','bounceReason','Bounce Reason','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','cancellationReason','Cancellation Reason','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrLine1','User branch Address Line1','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrLine2','User branch Address Line2','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrHNbr','User branch Address House','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrFlatNo','User branch Address Flat','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrStreet','User branch Address Street','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrCountry','User branch Address Country','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrProvince','User branch Address State','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrFlatNo','Loan branch Address Flat','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrStreet','Loan branch Address Street','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrCountry','Loan branch Address Country','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrCity','Loan branch Address City','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrProvince','Loan branch Address State','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrDistrict','Loan branch Address District','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrPincode','Loan branch Address Pincode','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchPhone','Loan branch Address Phone','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custShrtName','Customer Name','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','bounceDate','Bounce Date','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrCity','User branch Address City','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','valueDate','Receipt Value Date','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranch','Fin Branch','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finCcy','FinCcy','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','receiptAmount','Receipt Amount','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrDistrict','User branch Address District','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrPincode','User branch Address Pincode','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchPhone','User branch Address Phone','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrLine1','Loan branch Address Line1','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrLine2','Loan branch Address Line2','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrHNbr','Loan branch Address House','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','amount','Receipt Mode Amount','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custCIF','Customer CIF','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','appDate','Application Date','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userName','User Name','A','Receipts'	);
			INSERT INTO TemplateFields VALUES(	'FIN','receiptPurpose','Receipt Purpose','A','Receipts'	);
			
			INSERT INTO TemplateFields VALUES(	'FIN','custShrtName','Customer Name','A','AddDisbursement'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranch','Fin Branch','A','AddDisbursement'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finCcy','FinCcy','A','AddDisbursement'	);
			INSERT INTO TemplateFields VALUES(	'FIN','amount','Current Disbursement Amount','A','AddDisbursement'	);
			INSERT INTO TemplateFields VALUES(	'FIN','valueDate','Current Disbursement Date','A','AddDisbursement'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custCIF','Customer CIF','A','AddDisbursement'	);
			INSERT INTO TemplateFields VALUES(	'FIN','appDate','Application Date','A','AddDisbursement'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userName','User Name','A','AddDisbursement'	);
		</sql>
	</changeSet>
	
	
	
	<changeSet id="17" author="Kranthi">
		<comment>Insert Receipt Event Template Fields</comment>
		<sql>

			DELETE FROM TemplateFields WHERE Event = 'Receipts';
		
			INSERT INTO TemplateFields VALUES(	'FIN','bounceReason','Bounce Reason','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','cancellationReason','Cancellation Reason','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrLine1','User branch Address Line1','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrLine2','User branch Address Line2','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrHNbr','User branch Address House','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrFlatNo','User branch Address Flat','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrStreet','User branch Address Street','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrCountry','User branch Address Country','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrProvince','User branch Address State','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrFlatNo','Loan branch Address Flat','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrStreet','Loan branch Address Street','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrCountry','Loan branch Address Country','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrCity','Loan branch Address City','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrProvince','Loan branch Address State','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrDistrict','Loan branch Address District','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrPincode','Loan branch Address Pincode','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchPhone','Loan branch Address Phone','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custShrtName','Customer Name','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','bounceDate','Bounce Date','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrCity','User branch Address City','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','valueDate','Receipt Value Date','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranch','Fin Branch','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finCcy','FinCcy','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','receiptAmount','Receipt Amount','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrDistrict','User branch Address District','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchAddrPincode','User branch Address Pincode','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userBranchPhone','User branch Address Phone','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrLine1','Loan branch Address Line1','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrLine2','Loan branch Address Line2','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','finBranchAddrHNbr','Loan branch Address House','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','amount','Receipt Mode Amount','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','custCIF','Customer CIF','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','appDate','Application Date','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','userName','User Name','A','Receipt'	);
			INSERT INTO TemplateFields VALUES(	'FIN','receiptPurpose','Receipt Purpose','A','Receipt'	);

		</sql>
	</changeSet>
	
	 <changeSet id="18" author="Swami.v">
	 	<createView viewName="finreceiptheader_view" replaceIfExists="true">
	 		 SELECT t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc AS finbranchdesc,
    t5.ccydesc AS finccydesc,
    t7.rejectdesc AS cancelreasondesc,
    t2.finisactive,
    t1.waviedamt,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.instructionuid,
    t3.custcrcpr,
    t8.phonenumber
   FROM finreceiptheader_temp t1
     JOIN financemain t2 ON t1.reference = t2.finreference
     JOIN customers t3 ON t2.custid = t3.custid
     JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
     JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode
     JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode
     LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode
     LEFT JOIN customerphonenumbers t8 ON t3.custid = t8.phonecustid  and t8.phonetypepriority='5'
UNION ALL
 SELECT t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc AS finbranchdesc,
    t5.ccydesc AS finccydesc,
    t7.rejectdesc AS cancelreasondesc,
    t2.finisactive,
    t1.waviedamt,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.instructionuid,
    t3.custcrcpr,
    t8.phonenumber
   FROM finreceiptheader t1
     JOIN financemain t2 ON t1.reference = t2.finreference
     JOIN customers t3 ON t2.custid = t3.custid
     JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
     JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode
     JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode
     LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode
     LEFT JOIN customerphonenumbers t8 ON t3.custid = t8.phonecustid  and t8.phonetypepriority='5'
  WHERE NOT (EXISTS ( SELECT 1
           FROM finreceiptheader_temp
          WHERE finreceiptheader_temp.receiptid = t1.receiptid))
	 	</createView>
	 </changeSet>
	 
   <changeSet id="21" author="Swami.v">
  		<sql>
  			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		    INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FinanceMainDialog_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Finance_FinanceMain'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		    UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
	    </sql>
	</changeSet>
		
	<changeSet id="18" author="aditya.a">
	<sql>
		<![CDATA[
		INSERT INTO SMTPARAMETERS VALUES ('EARLYPAY_FY_STARTMONTH', 'Partial Settlement Financial Year Start Month', 'int', 1, '3', 2, 0, NULL, NULL,'Partial Settlement Financial Year Start Month', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
        INSERT INTO SMTPARAMETERS VALUES ('ALWD_EARLYPAY_PERC_BYYEAR', 'Maximum Partial Settlement Percent Allowed', 'int', 1, '25', 3, 0, NULL, NULL,'Maximum Partial Settlement Percent Allowed', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
		]]>
	</sql>
    </changeSet>
	
	<changeSet id="19" author="aditya.a">
	<sql>
		<![CDATA[
		Insert into ERRORDETAILS values ('RU0046','EN','E','Not allowed to do Partial Settlement, Because Customer already paid upto max allowed Part payment amount.',null,'Approved',null,null,null,null,null,0,null,1000,0);
        Insert into ERRORDETAILS values ('RU0047','EN','E','Maximum allowed partial settlement amount should not exceed value : {0}',null,'Approved',null,null,null,null,null,0,null,1000,0);
		]]>
	</sql>
    </changeSet>
    
    <changeSet id="22.0_Pre" author="vijaya.a" dbms="postgresql">
		<sql>
			select deps_save_and_drop_dependencies('plf','bmtrejectcodes');
			select deps_save_and_drop_dependencies('plf','bmtrejectcodes_temp');
		</sql>
	</changeSet>
	<changeSet id="22" author="vijaya.a">
		<modifyDataType tableName="BMTRejectCodes" columnName="REJECTDESC"
			newDataType="varchar(500)" />
	</changeSet>
	<changeSet id="22.1" author="vijaya.a">
		<modifyDataType tableName="BMTRejectCodes_Temp"
			columnName="REJECTDESC" newDataType="varchar(500)" />
	</changeSet>
	<changeSet id="22_Post" author="vijaya.a" dbms="postgresql">
		<sql>
			select deps_restore_dependencies('plf','bmtrejectcodes');
			select deps_restore_dependencies('plf','bmtrejectcodes_temp');
		</sql>
	</changeSet>
	
	<changeSet id="23" author="murthy.y">
		<sql>
			<![CDATA[
				insert into SMTparameters (SysParmCode, SysParmDesc, SysParmType, SysParmMaint, SysParmValue, SysParmLength, SysParmDec, SysParmList, SysParmValdMod, SysParmDescription, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId)
				values('ALLOW_ORGANISATIONAL_STRUCTURE', 'Allow Organization Structure.', 'String', 1, 'Y', 1, 0, NULL, NULL, 'Allow Organization Structure.', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>
	
<changeSet id="24" author="aditya.a">
	<addColumn tableName="mandate_requests">
		<column name="Partner_Bank" type= "varchar(200)"/>
		<column name="Registered_Date" type= "datetime"/>
	</addColumn>
</changeSet>

<changeSet id="25" author="aditya.a">
	<addColumn tableName="mandate_response">
		<column name="Partner_Bank" type= "varchar(200)"/>
		<column name="Registered_Date" type= "datetime"/>		
	</addColumn>
</changeSet>

<changeSet id="26" author="aditya.a">
	<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
	SELECT M.MANDATEID, 
			BD.BANKSHORTCODE BANKCODE,
			BD.BANKNAME,
			case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
      		case when LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
			CUST.CUSTCIF,
			CUST.CUSTSHRTNAME,
			FT.FINTYPEDESC FINTYPE ,
			FIN.FINREFERENCE ,
			COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount 
													FROM FINSCHEDULEDETAILS FSD 
													INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE =FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID 
													GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
			COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID = M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
			  CASE M.OPENMANDATE
			    WHEN 1
			    THEN 'New Open ECS'
			    ELSE 'No Open ECS'
			  END OPENMANDATE,
			M.ACCNUMBER,
			CASE WHEN M.ACCTYPE = '10' then 'Savings Account' WHEN M.ACCTYPE = '11' then 'Current Account' WHEN M.ACCTYPE = '11' then 'Cash Credit Account' ELSE  M.ACCTYPE END ACCTYPE,
			M.ACCHOLDERNAME,
			BB.MICR,
			BB.IFSC,
			BB.ADDOFBRANCH,
			(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
			(select MAX(SCHDATE) from FINSCHEDULEDETAILS where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) EMIENDDATE,
			 COALESCE (M.MAXLIMIT/CCYMINORCCYUNITS, 0) MAXLIMIT, 
     		 COALESCE((SELECT SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)
     		 GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
         (select max(numberofterms) from Financemain where FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) numberofterms,
              M.periodicity,
			  M.STARTDATE,
			  M.EXPIRYDATE,
			  FIN.APPLICATIONNO,
			  M.MANDATETYPE,
			  M.STATUS,
			  M.INPUTDATE,
			  M.RECORDSTATUS,
			  M.RECORDTYPE,
        	  M.MANDATECCY,
			  COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,M.EntityCode,
              CP.PHONENUMBER,
			  CE.CUSTEMAIL,
              PB.PARTNERBANKNAME,
              M.LASTMNTON
			FROM MANDATES M
			INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
			INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE 
			INNER JOIN CUSTOMERS CUST   ON CUST.CUSTID = M.CUSTID
			INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH
            INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = M.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
			LEFT OUTER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
			LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
			LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH 
			LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE =FT.FINTYPE 
			WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN  (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC' OR status = 'NEW'))
	</createView>
</changeSet>
	
</databaseChangeLog>