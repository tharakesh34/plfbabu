<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="add.schema" value=" " dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />

<changeSet id="01" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinanceMain_View" replaceIfExists="true">	
	SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, T1.FinType, 
                      T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, T1.FinStartDate, 
                      T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  T15.CustCIF lovDescCustCIF, 
                     T7.FinTypeDesc lovDescFinTypeName, T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId, T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.DepreciationFrq, T1.FinCommitmentRef, T1.FinCurrAssetValue, T1.FinContractDate, T1.NextDepDate, 
                      T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,    
                        T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, 
                      T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, 
                      T1.EffectiveRateOfReturn, T1.DownPayBank, T1.DownPaySupl, T7.FinDivision LovDescFinDivisionName, T1.GraceTerms, 
                      T14.FacilityType, T15.CustShrtName lovDescCustShrtName, T16.BranchDesc lovDescFinBranchName,
                      T1.TotalGrossGrcPft, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps, 
                     T1.LinkedFinRef, T7. Product LovDescFinProduct, 
                      T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate,  T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
                      T1.RpyAdvMargin, T1.RpyAdvPftRate,T1.SupplementRent, T1.IncreasedCost, 
                     T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb
FROM          WIFFinanceMain_Temp T1 LEFT OUTER JOIN
                       WIFIndicativeTermDetail_Temp T14 ON T14.FinReference = T1.FinReference LEFT OUTER JOIN
                       Customers T15 ON T15.CustID = T1.CustID INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                       RMTBranches T16 ON T1.FinBranch = T16.BranchCode 
UNION ALL


SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, T1.FinType, 
                      T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, T1.FinStartDate, 
                      T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  T15.CustCIF lovDescCustCIF, 
                     T7.FinTypeDesc lovDescFinTypeName,T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId, T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.DepreciationFrq, T1.FinCommitmentRef, T1.FinCurrAssetValue, T1.FinContractDate, T1.NextDepDate, 
                      T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,    
                        T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, 
                      T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, 
                      T1.EffectiveRateOfReturn, T1.DownPayBank, T1.DownPaySupl, T7.FinDivision LovDescFinDivisionName, T1.GraceTerms, 
                      T14.FacilityType, T15.CustShrtName lovDescCustShrtName, T16.BranchDesc lovDescFinBranchName,
                      T1.TotalGrossGrcPft, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps, 
                     T1.LinkedFinRef, T7. Product LovDescFinProduct, 
                      T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
                      T1.RpyAdvMargin, T1.RpyAdvPftRate,T1.SupplementRent, T1.IncreasedCost, 
                       T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb
FROM          WIFFinanceMain T1 LEFT OUTER JOIN
                       WIFIndicativeTermDetail_Temp T14 ON T14.FinReference = T1.FinReference LEFT OUTER JOIN
                       Customers T15 ON T15.CustID = T1.CustID INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                       RMTBranches T16 ON T1.FinBranch = T16.BranchCode 
                      WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          WIFFinanceMain_Temp
                            WHERE      (FinReference = T1.FinReference)))
	</createView>
</changeSet>
<changeSet id="02" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinanceMain_AView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  
                     T7.FinTypeDesc lovDescFinTypeName, T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId,  T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.NextDepDate, T1.LastDepDate, T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.DownPayBank, T1.DownPaySupl, T1.GraceTerms, T1.GrcProfitDaysBasis, 
                      T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps,  T1.LinkedFinRef, T7.Product LovDescFinProduct, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, 
                      T1.RpyMaxRate,T1.ManualSchedule, T1.TakeOverFinance, 
                      T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T1.SupplementRent, T1.IncreasedCost, T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb
FROM          WIFFinanceMain T1 INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType
	
	</createView>
</changeSet>
<changeSet id="06" author="Prasad" dbms="postgresql">
	<dropView viewName="FinanceCreationAccess_View"/>
	<dropView viewName="LMTFinanceWorkFlowDef_AView"/>
	<dropView viewName="RMTFinanceTypes_AView"/>
	<createView viewName="RMTFinanceTypes_AView" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
				           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
						   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension,  T1.EqualRepayment, T1.FinRateType,
						   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
				           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
						   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
						   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
						   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
						   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
						   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
						   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
						   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
				           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
						   T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
						   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
				           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
				           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
				           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
				           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,
						   T1.FinCommitmentOvrride, T1.FinCollateralOvrride, 
				           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
						   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
						   T49.AcTypeDesc lovDescFinSuspAcTypeName,T1.Product, T1.StartDate, T1.EndDate,
						   T1.AllowDownpayPgm, T1.Remarks, 
						   T1.AlwEarlyPayMethods,T1.PastduePftCalMthd,T1.PastduePftMargin, 
						   T1.AlwAdvanceRent, T1.GrcAdvBaseRate, 
				           T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate,  
				           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
						   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
						   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
						   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
						   T1.RateChgAnyDay, T1.FinRepayPftOnFrq,
						    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
							T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, 
							T1.AlwdRpyMethods, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwReage,
							T1.AlwUnPlanEmiHoliday,T1.AlwMaxDisbCheckReq, T2.FinTypeDesc lovDescPromoFinTypeDesc, T3.ProductDesc lovDescProductCodeDesc,T3.ProductCategory 
				FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
				           RMTFinanceTypes T2 ON T1.Product = T2.FinType LEFT OUTER JOIN
				           BMTProduct T3 ON T1.FinCategory = T3.ProductCode LEFT OUTER JOIN
				           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
				           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
				           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
				           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
				           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
				           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
				           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
				           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
				           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
				           Rules T68 ON T1.RpyPricingMethod = T68.RuleId
	
	</createView>
	<createView viewName="FinanceCreationAccess_View" replaceIfExists="true">
		SELECT     T7.UsrID, COUNT(T2.FinType) FinTypeCount
			FROM          RMTFinanceTypes_AView T2 INNER JOIN
                LMTFinanceWorkFlowDef T3 ON T2.FinType = T3.FinType INNER JOIN
                WorkFlowDetails T4 ON T3.WorkFlowType = T4.WorkFlowType AND T4.WorkFlowActive = 1 INNER JOIN
                SecRoles T5 ON T4.FirstTaskOwner = T5.RoleCd INNER JOIN
                SecOperationRoles T6 ON T6.RoleID = T5.RoleID INNER JOIN
                SecUserOperations T8 on T8.OprID=T6.OprID INNER JOIN
                SecUsers T7 ON T7.UsrID = T8.UsrID
            group by T7.UsrID	
	</createView>
	<createView viewName="LMTFinanceWorkFlowDef_AView" replaceIfExists="true">		
	SELECT T1.FinType , T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName  ,
		T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc,
          T1.FinType lovDescPromotionCode  ,
          T2.FinTypeDesc lovDescPromotionName  ,
          T4.FacilityDesc lovDescFacilityTypeName  ,
          T1.ScreenCode ,
          T1.WorkFlowType ,
          T3.WorkFlowDesc lovDescWorkFlowTypeName  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T3.WorkFlowRoles LovDescWorkFlowRolesName  ,
          T2.FinCategory LovdescProductCodeName  ,
          T2.FinDivision lovDescFinDivisionName  ,
          T3.FirstTaskOwner LovDescFirstTaskOwner  ,
          T1.ModuleName ,
         COALESCE(T2.FinIsActive, T6.Active,T7.Active,T8.Active ) FinIsActive, 
          COALESCE(T2.Product, '') LovDescProductName  ,
          T2.lovDescPromoFinTypeDesc ,
          T2.FinAssetType ,
          T2.StartDate ,
          T2.EndDate ,
          T1.FinEvent,
          T5.ProductCategory
     FROM LMTFinanceWorkFlowDef T1
            LEFT JOIN RMTFinanceTypes_AView T2   ON T1.FinType = T2.FinType
            INNER JOIN WorkFlowDetails T3   ON T1.WorkFlowType = T3.WorkFlowType AND T3.WorkFlowActive = 1
            LEFT JOIN CAFFacilityTypes T4   ON T1.FinType = T4.FacilityType 
            LEFT JOin BMTProduct T5 ON T2.FinCategory = T5.ProductCode
            LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
			LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
			LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
	</createView>

</changeSet>
<changeSet id="07" author="Prasad" dbms="postgresql">
	<createView viewName="RMTFinanceTypes_View" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					   T1.AllowDownpayPgm, T54.FinTypeDesc lovDescPromoFinTypeDesc, 
			          T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					  T1.AlwAdvanceRent, T1.GrcAdvBaseRate,T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory , T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday
			FROM       RMTFinanceTypes_Temp T1 LEFT OUTER JOIN
			           RMTFinanceTypes T54 ON T1.Product = T54.FinType LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId 
			UNION ALL
			SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName, 
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired, T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					  T1.AllowDownpayPgm, T54.FinTypeDesc lovDescPromoFinTypeDesc, T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					   T1.AlwAdvanceRent, T1.GrcAdvBaseRate,  T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory ,T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday
			FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
			           RMTFinanceTypes T54 ON T1.Product = T54.FinType LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId 
			WHERE     (NOT EXISTS
			                          (SELECT     1 Expr1
			                            FROM          RMTFinanceTypes_Temp
			                            WHERE      (FinType = T1.FinType)))
	
	</createView>
</changeSet>


<changeSet id="05" author="Prasad" dbms="postgresql">
	<createView viewName="RMTFinanceTypes_ORGView" replaceIfExists="true">
		SELECT		T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, 
					T1.FinContingentAcType, T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, 
					T1.FinIsAlwMD, T1.FinSchdMthd, T1.FInIsAlwGrace, T1.EqualRepayment, T1.FinRateType, 
					T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, 
					T1.FinIsIntCpz, T1.FinCpzFrq, T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, 
					T1.FinGrcSplRate, T1.FinGrcIntRate, T1.FInGrcMinRate, T1.FinGrcMaxRate, T1.FinGrcDftIntFrq, 
					T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, T1.FinGrcRvwFrq, T1.FinMinTerm, 
					T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwDifferment, 
					T1.FinMaxDifferment, T1.FinIsActive, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, 
					T1.AlwdStepPolicies, T1.DftStepPolicy, T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,
					T1.FinAlwRateChangeAnyDate,  T1.FinIsIntCpzAtGrcEnd, T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment, 
					T1.PlanDeferCount, T1.PftPayAcType, T1.FinIsOpenPftPayAcc, T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, 
					T1.FinGrcMargin, T1.FinMargin, T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, 
					T1.FinDepreciationFrq, T1.FinBankContingentAcType, T1.FinProvisionAcType, T1.AllowRIAInvestment, 
					T1.OverrideLimit, T1.LimitRequired, T1.FinCommitmentOvrride, T1.FinCollateralOvrride, 
					T1.FinRepayPftOnFrq, T1.FinPftUnChanged, T1.ApplyODPenalty, T1.ODIncGrcDays, T1.ODChargeType, 
					T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc, T1.ODAllowWaiver, T1.ODMaxWaiverPerc, 
					T1.FinDivision, T3.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType, T1.Product, 
					T1.StartDate, T1.EndDate, T1.AllowDownpayPgm, T2.FinTypeDesc lovDescPromoFinTypeDesc, T1.Remarks, 
					T4.PolicyDesc lovDescDftStepPolicyName, T1.PastduePftCalMthd,  T1.AlwAdvanceRent, 
					T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, 
					T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule, T1.AlwMultiPartyDisb, 
					T1.collateralType, T1.TDSApplicable, T5.RuleCode DownPayRuleDesc, T1.ApplyGrcPricing, 
					T1.ApplyRpyPricing, T6.RuleCode GrcPricingMethodDesc, T7.RuleCode RpyPricingMethodDesc, 
					T1.DroplineOD, T1.DroppingMethod, T1.RateChgAnyDay, T4.StepType DftStepPolicyType, 
					T1.ManualSchedule,T8.ProductCategory, T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , 
					T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax ,T1.PlanEMIHLockPeriod , 
					T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, 
					T1.AlwdRpyMethods, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, 
					T1.QuickDisb,T1.AlwReage,T1.AlwUnPlanEmiHoliday,T1.AlwMaxDisbCheckReq
					FROM			RMTFinanceTypes T1 LEFT OUTER JOIN
									RMTFinanceTypes T2 ON T1.Product = T2.FinType INNER JOIN
									SMTDivisionDetail T3 ON T1.FinDivision = T3.DivisionCode LEFT OUTER JOIN
					                StepPolicyHeader T4 ON T1.DftStepPolicy = T4.PolicyCode LEFT OUTER JOIN
					                Rules T5 ON T1.DownPayRule = T5.RuleId LEFT OUTER JOIN
					                Rules T6 ON T1.GrcPricingMethod = T6.RuleId LEFT OUTER JOIN
					                Rules T7 ON T1.RpyPricingMethod = T7.RuleId INNER JOIN
									BMTProduct T8 ON T1.FinCategory = T8.ProductCode
	
	</createView>
</changeSet>

<changeSet id="08" author="Prasad" dbms="postgresql">
	<createView viewName="PayOrderIssueHeader_View" replaceIfExists="true">
		SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb,T2.LoanApproved,T2.FinIsActive
FROM        PayOrderIssueHeader_Temp   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,0 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  
 union all
 SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb,T2.LoanApproved,T2.FinIsActive
FROM        PayOrderIssueHeader  T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,0 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  
 WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          PayOrderIssueHeader_Temp
                            WHERE      FinReference = T1.FinReference)
	
	</createView>
</changeSet>
<changeSet id="09" author="Prasad" dbms="postgresql">
	<createView viewName="PayOrderIssueHeader_AView" replaceIfExists="true">
		SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID, 
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb,T2.LoanApproved
FROM        PayOrderIssueHeader   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID
	
	</createView>
</changeSet>
<changeSet id="10" author="Prasad" dbms="postgresql">
	<createView viewName="LMTFinanceWorkFlowDef_View" replaceIfExists="true">
		SELECT   T1.FinType,T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName , T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc,
				T4.FacilityDesc lovDescFacilityTypeName ,
						 T1.ScreenCode, T1.WorkFlowType ,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName, 
                 COALESCE(T2.FinIsActive , T6.Active,T7.Active,T8.Active  ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory
				FROM     LMTFinanceWorkFlowDef_Temp T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType 
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						 LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode 
				UNION ALL
				SELECT   T1.FinType, T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName, T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc, T4.FacilityDesc lovDescFacilityTypeName,
						 T1.ScreenCode, T1.WorkFlowType,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName,
                COALESCE(T2.FinIsActive , T6.Active,T7.Active,T8.Active  ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory
				FROM     LMTFinanceWorkFlowDef  T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType 
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						  LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
				WHERE    (NOT EXISTS
				                          (SELECT     1 Expr1
				                            FROM          LMTFinanceWorkFlowDef_Temp
				                            WHERE      (FinType = T1.FinType AND FinEvent = T1.FinEvent AND ModuleName = T1.ModuleName)))
	
	</createView>
</changeSet>
<changeSet id="11" author="Prasad" dbms="postgresql">
	<createView viewName="lmtfinanceworkflowdef_ftview" replaceIfExists="true">
		SELECT T1.FinType, T2.FinTypeDesc lovDescFinTypeName, T1.ScreenCode,
            T1.WorkFlowType, T5.ProductCategory, T2.FinIsActive, T1.FinEvent,
            T3.FirstTaskOwner LovDescFirstTaskOwner, T2.FinCategory LovdescProductCodeName,
            T1.ModuleName
		    FROM LMTFinanceWorkFlowDef T1
            INNER JOIN RMTFinanceTypes T2   ON T1.FinType = T2.FinType 
            INNER JOIN WorkFlowDetails T3   ON T1.WorkFlowType = T3.WorkFlowType AND T3.WorkFlowActive = 1
            INNER JOin BMTProduct T5 ON T2.FinCategory = T5.ProductCode
	
	</createView>
</changeSet>
<changeSet id="12" author="Prasad" dbms="postgresql">
	<createView viewName="LMTFinanceWorkFlowDef_PTView" replaceIfExists="true">
		
	SELECT    T1.FinType lovDescPromotionCode  ,
          T2.FinTypeDesc lovDescPromotionName  ,
          T1.ScreenCode ,
          T1.WorkFlowType ,
          T2.FinCategory LovdescProductCodeName  ,
          T3.FirstTaskOwner LovDescFirstTaskOwner  ,
          T1.ModuleName ,
          T2.FinIsActive ,
          COALESCE(T2.Product, '') LovDescProductName  ,
          T2.StartDate ,
          T2.EndDate ,
          T1.FinEvent,
          T5.ProductCategory
     FROM LMTFinanceWorkFlowDef T1
            INNER JOIN RMTFinanceTypes T2   ON T1.FinType = T2.FinType AND T2.Product !=''
            INNER JOIN WorkFlowDetails T3   ON T1.WorkFlowType = T3.WorkFlowType AND T3.WorkFlowActive = 1
            INNER JOin BMTProduct T5 ON T2.FinCategory = T5.ProductCode
	</createView>
</changeSet>
<changeSet id="13" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinanceMain_SView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.FinAmount, T1.FinCcy, T5.ProductCategory lovDescProductCodeName,
		T1.FinType,T1.CustID,T4.FirstTaskOwner LovDescFirstTaskOwner ,T1.LastMntOn,T1.FinStartDate
		FROM          WIFFinanceMain T1                        
		            INNER JOIN RMTFinanceTypes T2   ON T1.FinType = T2.FinType AND T2.FinIsActive=1
		            LEFT JOIN LMTFinanceWorkFlowDef T3 ON T2.FinType = T3.FinType AND T3.FinEvent = 'Origination' 
		            INNER JOIN WorkFlowDetails T4   ON T3.WorkFlowType = T4.WorkFlowType AND T4.WorkFlowActive = 1
		            INNER JOin BMTProduct T5 ON T2.FinCategory = T5.ProductCode
	
	</createView>
</changeSet>
<changeSet id="14" author="Prasad" dbms="postgresql">
	<createView viewName="CustomerFinances_IView" replaceIfExists="true">
		
	SELECT     T1.CustID CustomerNo, T1.FinReference FinanceRef, T1.FinStartDate StartDate, T1.MaturityDate, T1.RepayAccountId RepaymentAccount, 
                      T1.TotalProfit ProfitAmount, T1.TotalRepayAmt TotalAmount, T1.FinAmount FinanceAmount, T1.NextRepayDate DueDate, 
                      T1.NumberOfTerms TotalInstallments, T1.FinType FinanceType, T3.CustShrtName CustomerName, T1.RepayProfitRate ProfitRate, 
                      T1.RepayMargin MarginRate, T1.RepayBaseRate BaseRate, T2.BranchDesc Branch,  T4.FinCategory ProductType, 
                      T5.NSchdPft + T5.NSchdPri InstallmentAmount, T5.NSchdPft + T5.NSchdPri + T5.NSchdPftDue + T5.NSchdPriDue OutstandingAmount, 
                      T5.Unearned UnearnedProfit, T5.NOInst - T5.NOPaidInst RemainingInstallments, T5.ODDays DaysPtDue, 
                      T1.FinAmount - T1.FinRepaymentAmount OutstandingBalance, T6.CustStsCode FinanceStatus
FROM          FinanceMain T1  INNER JOIN
                       RMTBranches T2 ON T1.FinBranch = T2.BranchCode INNER JOIN
                       Customers T3 ON T1.CustID = T3.CustID INNER JOIN
                       RMTFinanceTypes T4 ON T1.FinType = T4.FinType INNER JOIN
                       FinPftDetails T5 ON T1.FinReference = T5.FinReference INNER JOIN
                       BMTCustStatusCodes T6 ON T1.FinStatus = T6.CustStsCode
	</createView>
</changeSet>


<changeSet id="16" author="Prasad" dbms="postgresql">
<dropView viewName="FinDetailsbyReference_IView" />
<dropView viewName="financemain_aview" />

	<createView viewName="financemain_aview" replaceIfExists="true">
		SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment  lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T7.FinTypeDesc  lovDescFinTypeName, T7.FinMaxAmount  lovDescFinMaxAmt, T7.FinMinAmount  lovDescFinMinAmount, 
                      T1.MinDownpayPerc, T7.FinIsAlwDifferment  lovDescFinAlwDeferment, T7.FinIsDwPayRequired  lovDescDwnPayReq, 
                      T7.FinMaxDifferment  lovDescFinMaxDifferment,T12.BranchDesc  lovDescFinBranchName, T1.LastRepayDate, T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, 
                       T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef, T1.DepreciationFrq, T1.FinContractDate, 
                      T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,   T17.AcrTillLBD  lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, 
                      T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose, 
                     T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.bankName, T1.iban, T1.accountType, T1.DdaReferenceNo, 
                      T7.FinScheduleOn  LovDescFinScheduleOn, T1.CustDSR,
                      T1.JointAccount, T1.JointCustId, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, T1.SecurityCollateral, 
                       T1.Approved,   T1.Discrepancy, T1.LimitApproved, T1.InvestmentRef, T1.GraceTerms, 
                      T7.FinDivision  lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps,  T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc  LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                    T1.SupplementRent, T1.IncreasedCost, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId,T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T29.AgreeName,T29.MMAReference LovDescMMAReference,
					  T1.DSACode,T30.ROfficerDesc DSACodeDesc,T1.TDSApplicable,  T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes  T7 ON T1.FinType = T7.FinType  LEFT OUTER JOIN
                      RMTBranches  T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FinPftDetails  T17 ON T17.FinReference = T1.FinReference LEFT OUTER JOIN
                      StepPolicyHeader  T24 ON T1.StepPolicy = T24.PolicyCode  LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN 
					  RMTGENDEPARTMENTS T28 ON T1.ACCOUNTSOFFICER = T28.GENDEPARTMENT LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGENDEPARTMENTS T35 ON T1.SalesDepartment = T35.GENDEPARTMENT  INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode
	
	</createView>
	<createView viewName="FinDetailsbyReference_IView" replaceIfExists="true">
		SELECT T1.CustID CustomerNo, T1.FinReference FinanceRef, T1.FinType FinanceType,
	   T1.FinStartDate StartDate, T1.NumberOfTerms TotalInstallments, T1.FinAmount FinanceAmount, T1.NextRepayDate DueDate,
		T9.CustShrtName CustomerName, T1.FinContractDate ContractDate, T1.DownPayment DownPaymentAmount, 
		T1.RepayFrq RepaymentFrequency, T1.RepayProfitRate ProfitRate, T1.RepayAccountId RepaymentAccount, 
		T1.RepayMargin MarginRate,
		T2.BranchCode  Branch, T1.FinCcy Currency,T4.FinCategory ProductType,
		(T5.NOInst-T5.NOPaidInst) RemainingInstallments,(T5.NSchdPft+T5.NSchdPri) InstallmentAmount,
		(T5.ODPrincipal+T5.ODProfit) PastDueAmount,
		(T5.TotalPftPaid+T5.TotalPriPaid) RepaidAmount, T5.LastRpySchDate LastInstallmentDate, 
		T5.LastRepayAmt LastInstallmentAmount,
		(T5.NSchdPft+T5.NSchdPri+T5.NSchdPftDue+T5.NSchdPriDue) OutstandingAmount,  T5.ODDays DaysPastDue,
		T6.CustStsDescription FinanceStatus,T7.DisbAmount DisbursedAmount,
	    COALESCE(T8.BRRate,0) BaseRate, (COALESCE(T8.BRRate,0) + T1.RepayMargin) AllInRate
FROM FinanceMain_AView T1 INNER JOIN 
	 Customers T9 ON T9.CustId = T1.CustId INNER JOIN 
	 RMTBranches T2 ON T1.FinBranch = T2.BranchCode INNER JOIN 
	 RMTFinanceTypes T4 ON T1.FinType = T4.FinType INNER JOIN 
	 FinPftDetails T5 ON T1.FinReference = T5.FinReference INNER JOIN
	 BMTCustStatusCodes T6 ON T1.FinStatus = T6.CustStsCode INNER JOIN
	 FinDisbursementDetails T7 ON T1.FinReference = T7.FinReference LEFT JOIN
	 RMTBaseRates T8 ON T1.RepayBaseRate = T8.BRType
	
	</createView>
</changeSet>
<changeSet id="17" author="Prasad" dbms="postgresql">
	<createView viewName="fincontributordetail_aview" replaceIfExists="true">
		SELECT      FinContributorDetail.FinReference,  FinContributorDetail.ContributorBaseNo,  FinContributorDetail.ContributorName, 
                       FinContributorDetail.ContributorInvest,  FinContributorDetail.InvestAccount,  FinContributorDetail.InvestDate, 
                       FinContributorDetail.TotalInvestPerc,  FinContributorDetail.MudaribPerc,  FinContributorDetail.Version,  FinContributorDetail.LastMntBy, 
                       FinContributorDetail.LastMntOn,  FinContributorDetail.RecordStatus,  FinContributorDetail.RoleCode, 
                       FinContributorDetail.NextRoleCode,  FinContributorDetail.TaskId,  FinContributorDetail.NextTaskId,  FinContributorDetail.RecordType, 
                       FinContributorDetail.WorkflowId,  FinContributorDetail.CustID,  Customers.CustCIF lovDescContributorCIF, 
                        FinContributorDetail.RecordDate
FROM          FinContributorDetail INNER JOIN
                       Customers ON  FinContributorDetail.CustID =  Customers.CustID
	
	</createView>
</changeSet>
<changeSet id="18" author="Prasad" dbms="postgresql">
	<createView viewName="fincontributordetail_view" replaceIfExists="true">
		
	 SELECT     FinContributorDetail_Temp.FinReference, FinContributorDetail_Temp.ContributorBaseNo, FinContributorDetail_Temp.CustID, 
                      FinContributorDetail_Temp.ContributorName, FinContributorDetail_Temp.ContributorInvest, FinContributorDetail_Temp.InvestAccount, 
                      FinContributorDetail_Temp.InvestDate, FinContributorDetail_Temp.TotalInvestPerc, FinContributorDetail_Temp.MudaribPerc, 
                      FinContributorDetail_Temp.Version, FinContributorDetail_Temp.LastMntBy, FinContributorDetail_Temp.LastMntOn, 
                      FinContributorDetail_Temp.RecordStatus, FinContributorDetail_Temp.RoleCode, FinContributorDetail_Temp.NextRoleCode, 
                      FinContributorDetail_Temp.TaskId, FinContributorDetail_Temp.NextTaskId, FinContributorDetail_Temp.RecordType, 
                      FinContributorDetail_Temp.WorkflowId,  Customers.CustCIF lovDescContributorCIF, 
                        FinContributorDetail_Temp.RecordDate
FROM          FinContributorDetail_Temp INNER JOIN
                       Customers ON  FinContributorDetail_Temp.CustID =  Customers.CustID
UNION ALL
SELECT     FinContributorDetail.FinReference, FinContributorDetail.ContributorBaseNo, FinContributorDetail.CustID, FinContributorDetail.ContributorName, 
                      FinContributorDetail.ContributorInvest, FinContributorDetail.InvestAccount, FinContributorDetail.InvestDate, FinContributorDetail.TotalInvestPerc, 
                      FinContributorDetail.MudaribPerc, FinContributorDetail.Version, FinContributorDetail.LastMntBy, FinContributorDetail.LastMntOn, 
                      FinContributorDetail.RecordStatus, FinContributorDetail.RoleCode, FinContributorDetail.NextRoleCode, FinContributorDetail.TaskId, 
                      FinContributorDetail.NextTaskId, FinContributorDetail.RecordType, FinContributorDetail.WorkflowId,  Customers.CustCIF lovDescContributorCIF, 
                      FinContributorDetail.RecordDate
FROM          FinContributorDetail INNER JOIN
                       Customers ON  FinContributorDetail.CustID =  Customers.CustID 
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinContributorDetail_TEMP
                            WHERE      FinReference = FinContributorDetail.FinReference AND ContributorBaseNo = FinContributorDetail.ContributorBaseNo)
	</createView>
</changeSet>
<changeSet id="19" author="Prasad" dbms="postgresql">
	<createView viewName="fincontributordetail_tview" replaceIfExists="true">
		SELECT     FinContributorDetail_Temp.FinReference, FinContributorDetail_Temp.ContributorBaseNo, FinContributorDetail_Temp.CustID, 
                      FinContributorDetail_Temp.ContributorName, FinContributorDetail_Temp.ContributorInvest, FinContributorDetail_Temp.InvestAccount, 
                      FinContributorDetail_Temp.InvestDate, FinContributorDetail_Temp.TotalInvestPerc, FinContributorDetail_Temp.MudaribPerc, 
                      FinContributorDetail_Temp.Version, FinContributorDetail_Temp.LastMntBy, FinContributorDetail_Temp.LastMntOn, 
                      FinContributorDetail_Temp.RecordStatus, FinContributorDetail_Temp.RoleCode, FinContributorDetail_Temp.NextRoleCode, 
                      FinContributorDetail_Temp.TaskId, FinContributorDetail_Temp.NextTaskId, FinContributorDetail_Temp.RecordType, 
                      FinContributorDetail_Temp.WorkflowId,  Customers.CustCIF lovDescContributorCIF, 
                       FinContributorDetail_Temp.RecordDate
FROM          FinContributorDetail_Temp INNER JOIN
                       Customers ON  FinContributorDetail_Temp.CustID =  Customers.CustID
	
	</createView>
</changeSet>
<changeSet id="20" author="Prasad" dbms="postgresql">
	<createView viewName="FinanceMain_View" replaceIfExists="true">
		SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR, 
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain_Temp T1   INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
			 
	UNION ALL
			SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR,  
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment  INNER JOIN 
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
						WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          FinanceMain_Temp
                            WHERE      (FINREFERENCE = T1.FINREFERENCE)))
	
	</createView>
</changeSet>
<changeSet id="21" author="Prasad" dbms="postgresql">
	<createView viewName="financemain_tview" replaceIfExists="true">
		SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount,  T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.FinTypeDesc lovDescFinTypeName, T2.FinMaxAmount lovDescFinMaxAmt, T2.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T4.BranchDesc lovDescFinBranchName, T1.LastRepayDate,  T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate,  T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,  
                      T1.TotalRepayAmt,T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                       T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose,T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T1.CustDSR,
                      T1.JointAccount, T1.JointCustId, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,   T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T2.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T5.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                     T1.DeviationApproval,T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T1.SupplementRent, T1.IncreasedCost, T1.CreditInsAmt, T1.RolloverFrq, 
                      T1.NextRolloverDate,  T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc, T6.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T7.ROfficerDesc DSACodeDesc,
					  T1.TDSApplicable, T3.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T8.ROfficerDesc ReferralIdDesc, T1.DmaCode , T9.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T10.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
			FROM         FinanceMain_Temp T1 INNER JOIN
                      RMTFinanceTypes T2 ON T1.FinType = T2.FinType  INNER JOIN
                      BMTProduct T3 ON T2.FinCategory = T3.ProductCode INNER JOIN
                      RMTBranches T4 ON T1.FinBranch = T4.BranchCode LEFT OUTER JOIN
                      StepPolicyHeader T5 ON T1.StepPolicy = T5.PolicyCode LEFT OUTER JOIN
                      RMTGenDepartments T6 ON T1.AccountsOfficer = T6.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T7 ON T1.DSACode = T7.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T8 ON T1.ReferralId = T8.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T9 ON T1.DmaCode = T9.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T10 ON T1.SalesDepartment = T10.GenDepartment
	
	</createView>
</changeSet>
<changeSet id="22" author="Prasad" dbms="postgresql">
	<createView viewName="financemaintenance_view" replaceIfExists="true">
		SELECT      T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt, T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision, T1.RepayRateBasis,
                   T1.ManualSchedule , T1.TakeOverFinance , T1.NextRolloverDate,
                   COALESCE(T5.RoleDesc, ${add.schema}FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		   T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF, T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
              T1.planEMIHAlw   
            FROM           FinanceMain_Temp T1 INNER JOIN
			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode

 UNION ALL
SELECT      T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt,T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,  
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision,  T1.RepayRateBasis ,
                   T1.ManualSchedule , T1.TakeOverFinance  , T1.NextRolloverDate,
                    COALESCE(T5.RoleDesc, ${add.schema}FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		    T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF,  T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
		    T1.planEMIHAlw
            FROM           FinanceMain T1 INNER JOIN
	    			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           FinanceMain_Temp
                            WHERE      (FinReference = T1.FinReference)))
	
	</createView>
</changeSet>
<changeSet id="23" author="Prasad" dbms="postgresql">
	<createView viewName="financemaintenance_aview" replaceIfExists="true">
		sELECT T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive,  T1.Blacklisted, T1.FeeChargeAmt, T1.InsuranceAmt,T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate, 
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.MigratedFinance, T1.RcdMaintainSts,T1.ClosingStatus, T1.RepayRateBasis,
                  T1.ManualSchedule , T1.TakeOverFinance , T1.NextRolloverDate, T1.DownPayment,
		  T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF,T1.planEMIHAlw   
            FROM           FinanceMain T1 INNER JOIN
	    			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
	
	</createView>
</changeSet>
<changeSet id="24" author="Prasad" dbms="postgresql">
	<createView viewName="finoverdueenquiry_view" replaceIfExists="true">
		SELECT     T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, 
                      T1.GrcPeriodEndDate, T1.MaturityDate, T1.FinRepaymentAmount, T1.FinIsActive, T1.AllowGrcPeriod,T1.DownPayment, 
                      T1.MigratedFinance,T1.LastRepayDate, T1.LastRepayPftDate,
                      T5.FinTypeDesc LovDescFinTypeName, T6.CustCIF LovDescCustCIF, T6.CustShrtName LovDescCustShrtName, T7.BranchDesc LovDescFinBranchName, 
                      T1.Blacklisted, T5.FinScheduleOn LovDescFinScheduleOn, T1.FeeChargeAmt, T1.ClosingStatus, T8.CustTypeCtg, 
                      T1.GraceTerms, T5.FinDivision lovDescFinDivision, T5.FinCategory lovDescProductCodeName, 
                      T1.AlwMultiDisb, T5.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments,
                     (T1.FinAmount-T1.DownPayment+ T1.FeeChargeAmt -  T1.FinRepaymentAmount) CurFinAmount,
                     (T1.FinAmount- T1.DownPayment+ T1.FeeChargeAmt) FinancingAmount, T1.FinStatus 
FROM          FinanceMain T1  INNER JOIN
                       RMTFinanceTypes T5 ON T1.FinType = T5.FinType INNER JOIN
                       Customers T6 ON T1.CustID = T6.CustID INNER JOIN
                       RMTBranches T7 ON T1.FinBranch = T7.BranchCode INNER JOIN
                       RMTCustTypes T8 ON T6.CustTypeCode = T8.CustTypeCode
                      Where FinReference in (Select FinReference From FinODDetails)
	
	</createView>
</changeSet>
<changeSet id="25" author="Prasad" dbms="postgresql">
	<createView viewName="FinODCRecoveryEnquiry_View" replaceIfExists="true">
		SELECT     T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, 
                      T1.GrcPeriodEndDate, T1.MaturityDate, T1.FinRepaymentAmount, T1.FinIsActive, T1.AllowGrcPeriod,T1.DownPayment, 
                      T1.MigratedFinance,T1.LastRepayDate, T1.LastRepayPftDate, 
                      T5.FinTypeDesc LovDescFinTypeName, T6.CustCIF LovDescCustCIF, T6.CustShrtName LovDescCustShrtName, T7.BranchDesc LovDescFinBranchName, 
                      T1.Blacklisted, T5.FinScheduleOn LovDescFinScheduleOn, T1.FeeChargeAmt, T1.ClosingStatus, T8.CustTypeCtg, 
                      T1.GraceTerms, T5.FinDivision lovDescFinDivision, T5.FinCategory lovDescProductCodeName, 
                      T5.FinIsAlwMD lovDescFinIsAlwMD, T5.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments,
                     (T1.FinAmount-T1.DownPayment+ T1.FeeChargeAmt -  T1.FinRepaymentAmount) CurFinAmount,
                     (T1.FinAmount- T1.DownPayment+ T1.FeeChargeAmt) FinancingAmount, T1.FinStatus 
FROM          FinanceMain T1 INNER JOIN
                       RMTFinanceTypes T5 ON T1.FinType = T5.FinType INNER JOIN
                       Customers T6 ON T1.CustID = T6.CustID INNER JOIN
                       RMTBranches T7 ON T1.FinBranch = T7.BranchCode INNER JOIN
                       RMTCustTypes T8 ON T6.CustTypeCode = T8.CustTypeCode
                      Where FinReference in (Select FinReference From FinODCRecovery)
	
	</createView>
</changeSet>
<changeSet id="26" author="Prasad" dbms="postgresql">
	<createView viewName="FinanceEnquiry_View" replaceIfExists="true">
		
	SELECT     T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.FinStartDate, T1.CalTerms NumberOfTerms, T1.CustID, T1.FinAmount, 
                      T1.GrcPeriodEndDate, T1.MaturityDate, T1.FinRepaymentAmount, T1.FinIsActive, T1.AllowGrcPeriod,T1.DownPayment, 
                      T1.MigratedFinance,T1.LastRepayDate, T1.LastRepayPftDate,T1.InsuranceAmt,
                      T5.FinTypeDesc LovDescFinTypeName, T6.CustCIF LovDescCustCIF, T6.CustShrtName LovDescCustShrtName, T7.BranchDesc LovDescFinBranchName, 
                      T1.Blacklisted, T5.FinScheduleOn LovDescFinScheduleOn, T1.FeeChargeAmt, T1.ClosingStatus, T8.CustTypeCtg, 
                      T1.GraceTerms, T5.FinDivision lovDescFinDivision, T5.FinCategory lovDescProductCodeName, 
                      T1.AlwMultiDisb , T5.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments,
                       (T1.FinAmount-T1.DownPayment+ T1.FeeChargeAmt+T1.InsuranceAmt) FinancingAmount,
                      (T1.FinAmount-T1.DownPayment- T1.FinRepaymentAmount+ T1.FeeChargeAmt+T1.InsuranceAmt) CurFinAmount,
                      T1.FinStatus ,T1.MandateID,T1.FinRepayMethod 
FROM          FinanceMain T1 INNER JOIN
                       RMTFinanceTypes T5 ON T1.FinType = T5.FinType INNER JOIN
                       Customers T6 ON T1.CustID = T6.CustID INNER JOIN
                       RMTBranches T7 ON T1.FinBranch = T7.BranchCode INNER JOIN
                       RMTCustTypes T8 ON T6.CustTypeCode = T8.CustTypeCode
	</createView>
</changeSet>
<changeSet id="27" author="Prasad" dbms="postgresql">
	<createView viewName="FINANCEENQUIRY_TVIEW" replaceIfExists="true">
		
	SELECT     T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.FinStartDate, T1.CalTerms NumberOfTerms, T1.CustID, T1.FinAmount, 
                      T1.GrcPeriodEndDate, T1.MaturityDate, T1.FinRepaymentAmount, T1.FinIsActive, T1.AllowGrcPeriod,T1.DownPayment, 
                      T1.MigratedFinance,T1.LastRepayDate, T1.LastRepayPftDate,
                      T5.FinTypeDesc LovDescFinTypeName, T6.CustCIF LovDescCustCIF, T6.CustShrtName LovDescCustShrtName, T7.BranchDesc LovDescFinBranchName, 
                      T1.Blacklisted, T5.FinScheduleOn LovDescFinScheduleOn, T1.FeeChargeAmt, T1.ClosingStatus, T8.CustTypeCtg, 
                      T1.GraceTerms, T5.FinDivision lovDescFinDivision, T5.FinCategory lovDescProductCodeName, 
                      T1.AlwMultiDisb, T5.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments,
                      T1.FinStatus ,T1.MandateID,T1.FinRepayMethod
FROM          FinanceMain_Temp T1 INNER JOIN
                       RMTFinanceTypes T5 ON T1.FinType = T5.FinType INNER JOIN
                       Customers T6 ON T1.CustID = T6.CustID INNER JOIN
                       RMTBranches T7 ON T1.FinBranch = T7.BranchCode INNER JOIN
                       RMTCustTypes T8 ON T6.CustTypeCode = T8.CustTypeCode
	</createView>
</changeSet>
<changeSet id="28" author="Prasad" dbms="postgresql">
	<createView viewName="RMTFinanceTypes_AEView" replaceIfExists="true">
		SELECT     T1.FinType,  '' FinDeffreq, T1.FinAcType, T1.FinCcy, T1.FinIsOpenNewFinAc, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,
           T1.FinContingentAcType, T1.FinProvisionAcType, T1.FinSuspAcType, T1.FinCategory
                
FROM         RMTFinanceTypes T1
	
	</createView>
</changeSet>
<changeSet id="29" author="Prasad" dbms="postgresql">
	<createView viewName="BulkProcessDetails_View" replaceIfExists="true">
		
	SELECT     T1.BulkProcessId, T1.FinReference, F.FinType FinType, F.FinCCY FinCcy, T1.OldProfitRate, T1.NewProfitRate, T1.DeferedSchdDate, 
           F.CustID CustID, F.FinBranch FinBranch, T1.ProfitChange, T1.AlwProcess, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.ReCalStartDate, T1.ReCalEndDate,T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.CustShrtName CustName,T3.IntRateBasisDesc ProfitDayBasisDesc,
                      T4.SchdMethodDesc SchdMethodDesc

FROM	 BulkProcessDetails_Temp T1 INNER JOIN 
Financemain F ON F.FinReference = T1.FinReference  INNER JOIN 
	 Customers T2 ON T2.CustID = F.CustID
	 INNER JOIN BMTIntRateBasisCodes T3 ON T3.IntRateBasisCode = F.ProfitDaysBasis
	 INNER JOIN BMTSchdMethod T4 ON T4.SchdMethod = F.ScheduleMethod
UNION ALL
SELECT     T1.BulkProcessId, T1.FinReference, F.FinType FinType, F.FinCCY FinCcy, T1.OldProfitRate, T1.NewProfitRate, T1.DeferedSchdDate, 
           F.CustID CustID, F.FinBranch FinBranch, T1.ProfitChange, T1.AlwProcess, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.ReCalStartDate, T1.ReCalEndDate,T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.CustShrtName CustName,T3.IntRateBasisDesc ProfitDayBasisDesc,
                      T4.SchdMethodDesc SchdMethodDesc
FROM	 BulkProcessDetails T1 INNER JOIN 
Financemain F ON F.FinReference = T1.FinReference  INNER JOIN 
	 Customers T2 ON T2.CustID = F.CustID
	 INNER JOIN BMTIntRateBasisCodes T3 ON T3.IntRateBasisCode = F.ProfitDaysBasis
	 INNER JOIN BMTSchdMethod T4 ON T4.SchdMethod = F.ScheduleMethod
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BulkProcessDetails_Temp
                            WHERE      BulkProcessId = T1.BulkProcessId)
	</createView>
</changeSet>
<changeSet id="30" author="Prasad" dbms="postgresql">
	<createView viewName="BulkProcessDetails_AView" replaceIfExists="true">
		 SELECT     T1.BulkProcessId, T1.FinReference, F.FinType FinType, F.FinCCY FinCcy, T1.OldProfitRate, T1.NewProfitRate, T1.DeferedSchdDate, 
           F.CustID CustID, F.FinBranch FinBranch, T1.ProfitChange, T1.AlwProcess, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.ReCalStartDate, T1.ReCalEndDate,T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.CustShrtName CustName,T3.IntRateBasisDesc ProfitDayBasisDesc,
                      T4.SchdMethodDesc SchdMethodDesc

FROM	BulkProcessDetails T1 INNER JOIN 
Financemain F ON F.FinReference = T1.FinReference  INNER JOIN 
	 Customers T2 ON T2.CustID = F.CustID
	 INNER JOIN BMTIntRateBasisCodes T3 ON T3.IntRateBasisCode = F.ProfitDaysBasis
	 INNER JOIN BMTSchdMethod T4 ON T4.SchdMethod = F.ScheduleMethod
	
	</createView>
</changeSet>
<changeSet id="31" author="Prasad" dbms="postgresql">
	<createView viewName="BulkRateChangeDetails_AView" replaceIfExists="true">
		SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, 
			T1.OldProfit, T1.NewProfit, T1.AllowRateChange,	T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
			T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.Status, T1.ErrorMsg,
			T2.CcyEditField lovDescFinFormatter
			
FROM        BulkRateChangeDetails T1 INNER JOIN  
			RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode
	
	</createView>
</changeSet>
<changeSet id="32" author="Prasad" dbms="postgresql">
	<createView viewName="BulkRateChangeDetails_View" replaceIfExists="true">
		sELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, T1.OldProfit, T1.NewProfit, T1.AllowRateChange,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
			T2.CcyEditField lovDescFinFormatter

	FROM        BulkRateChangeDetails_Temp T1 INNER JOIN  
			RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode
	UNION ALL

	SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, T1.OldProfit, T1.NewProfit, T1.AllowRateChange,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
			T2.CcyEditField lovDescFinFormatter
			
	FROM        BulkRateChangeDetails T1 INNER JOIN  
			RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode
			
	WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BulkRateChangeDetails_Temp
                            WHERE      BulkRateChangeRef = T1.BulkRateChangeRef)
	
	</createView>
</changeSet>
<changeSet id="34" author="Prasad" dbms="postgresql">
	<createView viewName="BulkRateChange_SView" replaceIfExists="true">
		
	SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, 
			T1.OldProfit, T1.NewProfit, T1.AllowRateChange, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
			T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.Status, T1.ErrorMsg, 
			T2.FinType, T3.SchDate FromDate, T4.CcyEditField lovDescFinFormatter
			
FROM        BulkRateChangeDetails T1 INNER JOIN 
			FinanceMain T2 ON T1.FinReference = T2.FinReference INNER JOIN 
			FinScheduleDetails T3 ON T3.FinReference = T1.FinReference INNER JOIN  
			RMTCurrencies T4 ON T1.FinCcy = T4.CcyCode
	</createView>
</changeSet>
<changeSet id="35" author="Prasad" dbms="postgresql">
	<createView viewName="FinanceEligibilityDetail_View" replaceIfExists="true">
		SELECT     T1.FinReference, T1.ElgRuleCode, T1.RuleResultType, T1.RuleResult, T1.CanOverride, T1.OverridePerc, T1.UserOverride, T2.RuleCode LovDescElgRuleCode, 
                      T2.RuleCodeDesc LovDescElgRuleCodeDesc
FROM          FinanceEligibilityDetail T1 INNER JOIN
                       Rules T2 ON T1.ElgRuleCode = T2.RuleId

	
	</createView>
</changeSet>
<changeSet id="36" author="Prasad" dbms="postgresql">
	<createView viewName="FinCreditRevSubCategory_View" replaceIfExists="true">
		
	SELECT		T1.SubCategoryCode, T1.SubCategorySeque, T1.CategoryId, T1.SubCategoryDesc, T1.SubCategoryItemType, T1.ItemsToCal, T1.ItemRule, T1.isCreditCCY, T1.mainSubCategoryCode, T1.CalcSeque, T1.format, T1.percentCategory, T1.grand		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	FinCreditRevSubCategory_TEMP T1
UNION ALL
SELECT		T1.SubCategoryCode, T1.SubCategorySeque, T1.CategoryId, T1.SubCategoryDesc, T1.SubCategoryItemType, T1.ItemsToCal, T1.ItemRule, T1.isCreditCCY, T1.mainSubCategoryCode, T1.CalcSeque, T1.format, T1.percentCategory, T1.grand		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	FinCreditRevSubCategory T1
WHERE     NOT EXISTS (SELECT 1 FROM FinCreditRevSubCategory_TEMP WHERE SubCategoryCode = T1.SubCategoryCode)
	</createView>
</changeSet>
<changeSet id="37" author="Prasad" dbms="postgresql">
	<createView viewName="FinFeeCharges_View" replaceIfExists="true">
		SELECT FinReference , SchDate ,FeeCode ,FeeCodeDesc , FeeOrder ,  FeeAmount , WaiverAmount ,
          PaidAmount ,SeqNo , AllowWaiver , WaiverPerc ,ExcludeFromRpt ,CalFeeModify ,CalFeeAmount, 
          FeeToFinance, FinEvent, FeeMethod, ScheduleTerms
     FROM FinFeeCharges_Temp;
	
	</createView>
</changeSet>
<changeSet id="38" author="Prasad" dbms="postgresql">
	<createView viewName="FinFeeCharges_TView" replaceIfExists="true">
		SELECT FinReference , SchDate ,FeeCode ,FeeCodeDesc , FeeOrder , FeeAmount , WaiverAmount ,
          PaidAmount ,SeqNo , AllowWaiver , WaiverPerc ,ExcludeFromRpt ,CalFeeModify ,CalFeeAmount, 
          FeeToFinance, FinEvent, FeeMethod, ScheduleTerms
     FROM FinFeeCharges_Temp
	
	</createView>
</changeSet>
<changeSet id="39" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinFeeCharges_View" replaceIfExists="true">
		SELECT FinReference , SchDate ,FeeCode ,FeeCodeDesc , FeeOrder ,  FeeAmount , WaiverAmount ,
          PaidAmount ,SeqNo , AllowWaiver , WaiverPerc ,CalFeeModify ,CalFeeAmount, 
          FeeToFinance, FinEvent, FeeMethod, ScheduleTerms
     FROM WIFFinFeeCharges
	
	</createView>
</changeSet>
<changeSet id="40" author="Prasad" dbms="postgresql">
	 <createView replaceIfExists="true" viewName="RPT_EMRAgingODGeographDtl_View">Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
			Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry 
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustResdCountry ,T4.CountryDesc


UNION ALL

Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustResdCountry ,T4.CountryDesc</createView>
</changeSet>
<changeSet id="41" author="Prasad" dbms="postgresql">
	<createView viewName="RPT_EMRCounterPartyODDtl_View" replaceIfExists="true">
		Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
			Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode 
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustTypeCode ,T4.CustTypeDesc


UNION ALL

Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustTypeCode ,T4.CustTypeDesc
	
	</createView>
</changeSet>
<changeSet id="42" author="Prasad" dbms="postgresql">
	<createView viewName="RPT_EMRAssetAgingODDtl_View" replaceIfExists="true">
		Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By FinAcType,AcTypeDesc


UNION ALL

Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By FinAcType,AcTypeDesc
	
	</createView>
</changeSet>
<changeSet id="43" author="Prasad" dbms="postgresql">
	<createView viewName="LimitStructureDetails_AView" replaceIfExists="true">
		 SELECT     T1.LimitStructureDetailsID,T1.LimitStructureCode, T5.StructureName, T1.GroupCode, T3.GroupName, T1.LimitLine, T4.RuleCodeDesc LimitLineDesc,T1.Revolving,T1.LimitCategory, T1.ItemPriority ,T1.LimitCheck, 
                      T1.ItemSeq,T1.ItemLevel,T1.Editable, T1.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, 
                      T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId
FROM          LimitStructureDetails T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
                       LimitStructure_Temp T5 ON T1.LimitStructureCode = T5.StructureCode LEFT OUTER JOIN
                       Rules T4 ON T1.LimitLine = T4.Rulecode and  RuleModule='LMTLINE' LEFT OUTER JOIN
                       LimitGroup T3 ON T1.GroupCode = T3.GroupCode
	
	</createView>
</changeSet>

<changeSet id="44" author="Prasad" dbms="postgresql">
	<createView viewName="LimitDetails_AView" replaceIfExists="true">
		SELECT     T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode, T3.GroupName,T5.LimitLine, T4.RuleCodeDesc LimitLineDesc, 
           COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving,T1.ExpiryDate, T1.LimitSanctioned,  
                      T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq, T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId
FROM          LimitDetails T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                       LimitStructureDetails T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
                       LimitGroup T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
                       Rules T4 ON T5.LimitLine = T4.RuleCode and RuleEvent=T5.LimitCategory and RuleModule='LMTLINE'
	
	</createView>
</changeSet>
<changeSet id="45" author="Prasad" dbms="postgresql">
	<createView viewName="LimitStructureDetails_View" replaceIfExists="true">
		SELECT     T1.LimitStructureDetailsID,T1.LimitStructureCode, T5.StructureName, T1.GroupCode, T3.GroupName, T1.LimitLine, T4.RuleCodeDesc LimitLineDesc,T1.Revolving, T1.LimitCategory, T1.ItemPriority ,T1.LimitCheck,  T1.ItemSeq, T1.ItemLevel,T1.Editable, T1.DisplayStyle, T1.Version,
                       T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM          LimitStructureDetails_Temp T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
                       LimitStructure_Temp T5 ON T1.LimitStructureCode = T5.StructureCode LEFT OUTER JOIN
                      Rules T4 ON T1.LimitLine = T4.Rulecode and RuleModule='LMTLINE' LEFT OUTER JOIN
                       LimitGroup T3 ON T1.GroupCode = T3.GroupCode 
UNION ALL
SELECT     T1.LimitStructureDetailsID,T1.LimitStructureCode, T5.StructureName, T1.GroupCode, T3.GroupName, T1.LimitLine, T4.RuleCodeDesc LimitLineDesc,T1.Revolving,T1.LimitCategory, T1.ItemPriority ,T1.LimitCheck,  T1.ItemSeq, T1.ItemLevel,T1.Editable, T1.DisplayStyle, T1.Version,
                       T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM          LimitStructureDetails T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                       LimitStructure T5 ON T1.LimitStructureCode = T5.StructureCode LEFT OUTER JOIN
                       Rules T4 ON T1.LimitLine = T4.Rulecode and RuleModule='LMTLINE' LEFT OUTER JOIN
                       LimitGroup T3 ON T1.GroupCode = T3.GroupCode
WHERE     NOT EXISTS (SELECT  1 FROM LimitStructureDetails_Temp WHERE LimitStructureDetailsID= T1.LimitStructureDetailsID)
	
	</createView>
</changeSet>
<changeSet id="47" author="Prasad" dbms="postgresql">
<dropView viewName="LimitLines_View"/>
<dropView viewName="LimitDetails_View"/>
	<createView viewName="LimitDetails_View" replaceIfExists="true">
		SELECT     T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode,  T3.GroupName, T5.LimitLine, T4.RuleCodeDesc LimitLineDesc,COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving ,T1.ExpiryDate, T1.LimitSanctioned,  
                      T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq, T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId
FROM          LimitDetails_Temp T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                       LimitStructureDetails T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
                       LimitGroup T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
                       Rules T4 ON T5.LimitLine = T4.RuleCode and RuleEvent=T5.LimitCategory and RuleModule='LMTLINE'
UNION ALL
SELECT      T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode,  T3.GroupName, T5.LimitLine, T4.RuleCodeDesc LimitLineDesc,COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving,T1.ExpiryDate, T1.LimitSanctioned,  
                      T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq, T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId
FROM          LimitDetails T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                       LimitStructureDetails T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
                       LimitGroup T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
                       Rules T4 ON T5.LimitLine = T4.RuleCode and RuleEvent=T5.LimitCategory and RuleModule='LMTLINE'
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          LimitDetails_Temp
                            WHERE      DetailId = T1.DetailId)
	
	</createView>
	<createView viewName="LimitLines_View" replaceIfExists="true">
		Select T.DetailId, T.LimitHeaderId, T1.RuleCode,T1.RuleValue,T1.CustomerId,T1.CustomerGroup,T.LimitLine,R.SqlRule,R.RuleCodeDesc  LimitLineDesc,T.GroupCode, T.
LimitStructureDetailsID,T.LimitChkMethod, T.ExpiryDate, T.LimitSanctioned,  T.ReservedLimit, T.UtilisedLimit,T.LimitCheck,coalesce(T.Revolving,0)Revolving ,T1.LimitCcy  Currency,T.Version , T.
CreatedBy,T.CreatedOn,T.LastMntBy, T.LastMntOn, T.RecordStatus, T.RoleCode, T.NextRoleCode, T.TaskId, T.NextTaskId, T.RecordType, T.WorkflowId from 
LimitDetails_View  T INNER JOIN
LimitHeader  T1 ON T1.HeaderId=T.LimitHeaderId  Left Outer Join 
Rules R ON T.LimitLine= R.RuleCode where  T1.Active=1
	
	</createView>
</changeSet>


<changeSet id="48" author="Prasad" dbms="postgresql">
	<createView viewName="LimitDetails_TView" replaceIfExists="true">
		SELECT      T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode,  T3.GroupName, T5.LimitLine, T4.RuleCodeDesc LimitLineDesc,
		COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving,T1.ExpiryDate, T1.LimitSanctioned,  
                      T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq,T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId
FROM          LimitDetails_Temp T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                       LimitStructureDetails T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
                       LimitGroup T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
                       Rules T4 ON T5.LimitLine = T4.RuleCode and RuleEvent=T5.LimitCategory and RuleModule='LMTLINE'
	
	</createView>
</changeSet>
<changeSet id="49" author="Prasad" dbms="postgresql">
	<createView viewName="LimitStructureDetails_TView" replaceIfExists="true">
		SELECT     T1.LimitStructureDetailsID,T1.LimitStructureCode, T5.StructureName, T1.GroupCode, T3.GroupName, T1.LimitLine, T4.RuleCodeDesc LimitLineDesc,T1.Revolving, T1.LimitCategory, T1.ItemPriority ,T1.LimitCheck, 
                      T1.ItemSeq, T1.ItemLevel,T1.Editable, T1.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, 
                      T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId
FROM          LimitStructureDetails_Temp T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
                       LimitStructure_Temp T5 ON T1.LimitStructureCode = T5.StructureCode LEFT OUTER JOIN
                       Rules T4 ON T1.LimitLine = T4.Rulecode  and RuleModule='LMTLINE' LEFT OUTER JOIN
                       LimitGroup T3 ON T1.GroupCode = T3.GroupCode
	
	</createView>
</changeSet>
<changeSet id="50" author="Prasad" dbms="postgresql">
	<createView viewName="RPT_Txndone_Settled_View" replaceIfExists="true">
		SELECT  T2.CustCIF,T2.CustShrtName,SUM(NoInst)TransDone,SUM(NOPaidInst) TransSettled,
			SUM(${add.schema}UDF_ConvertCurrency(TotalPriSchd+TotalPftSchd,T1.FinCCY,'INR')) ConExchgTransAmt,
			SUM(${add.schema}UDF_ConvertCurrency(TotalPriPaid+TotalPftPaid,T1.FinCCY,'INR')) ConExchgTransAmtSettled,
			T1.FinIsActive
	FROM    FinPftDetails T1  INNER JOIN
		    Customers T2 ON T2.CustCIF = T1.CustCIF
    Where   (T1.ClosingStatus!='C' or T1.ClosingStatus is  null)
	GROUP BY T2.CustCIF,T2.CustShrtName,T1.FinIsActive
	
	</createView>
</changeSet>
<changeSet id="51" author="Prasad" dbms="postgresql">
	<createView viewName="RPT_InvstbySharehld_Joint_View" replaceIfExists="true">
		 SELECT  T1.FinType,FinTypeDesc,T3.DivisionCodeDesc FINDivision,FINDivision DivisionCode,
			SUM(${add.schema}UDF_ConvertCurrency(TotalPriSchd,T1.FinCCY,'INR')) FinAmountinBHD,
			 T1.FinIsActive
	FROM    FinPftDetails T1 INNER JOIN
			RMTFinanceTypes T2 ON T2.FinType=T1.FinType Inner JOIN
			SMTDivisionDetail T3 ON T3.DivisionCode=T2.FINDivision
	Where   (T1.ClosingStatus !='C' or T1.ClosingStatus is null)
	GROUP BY  T1.FinType,FinTypeDesc,T2.FinDivision,T3.DivisionCodeDesc,T1.FinIsActive
	
	</createView>
</changeSet>
<changeSet id="52" author="Prasad" dbms="postgresql">
	<createView viewName="Rpt_ManualPaymentsDue_View" replaceIfExists="true">
		select  branchdesc FinBranch,FinBranch BranchCode, T1.CustCIF,T4.CustShrtName, T.FinReference, T1.FinCcy,DefSchdDate,CcyEditField,
		T1.FinIsActive,T5.FinDivision,CCYISRECEPROCAL,CCYSPOTRATE,CCYMINORCCYUNITS,
			(select  CcySpotRate TargetCcySpotRate from RMTCurrencies where CcyCode in
			(Select SysParmValue from SMTparameters where SysParmcode='APP_DFT_CURR'))TARGETCCYSPOTRATE,
			ProfitSchd,SchdPftPaid,PrincipalSchd,SchdPriPaid,
			(select cast(SysParmValue as date) from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE')BussDate
	from     FinScheduleDetails T  INNER JOIN 
	         FinPftDetails T1  ON T.FinReference = T1.FinReference inner join
			 RMTCurrencies C  on C.ccyCode=T1.FinCcy INNER JOIN 
			 RMTBranches T2  ON T2.BranchCode=FinBranch INNER JOIN 
			 Customers T4  ON T4.CustId = T1.CustId Inner jOin
			 RMTFinanceTypes T5 ON T5.FinType = T1.FinType
	where   DefSchdDate &lt; (select cast(SysParmValue as date)  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE')
			AND RepayOnSchDate = 1 AND 
			((ProfitSchd - SchdPftPaid) &gt; 0 OR (PrincipalSchd - SchdPriPaid) &gt; 0 )
			AND T1.CustCIF != substring(RepayAccountId,5,6) 
			AND  (T1.ClosingStatus !='C' or T1.ClosingStatus is null)
	
	</createView>
</changeSet>
<changeSet id="53" author="Prasad" dbms="postgresql">
	<createView viewName="FINLIABILITYREQ_VIEW" replaceIfExists="true">
		 SELECT		T1.FinReference, T1.InitiatedBy, T1.FinEvent,T1.InsPaidStatus,T1.InsClaimAmount,T1.InsClaimReason, T2.FinType, T4.CustCIF, T2.FinBranch, T2.FinStartDate, T2.NumberOfTerms, T2.MaturityDate, T2.FinCcy, T2.FinAmount,
            T4.CustShrtName , T5.BranchDesc , T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T6.FinDivision lovDescFinDivision
FROM    	FinLiabilityReq_Temp T1 INNER JOIN
               FinanceMain T2 ON T1.FinReference = T2.FinReference INNER JOIN
                       Customers T4 ON T2.CustID = T4.CustID    INNER JOIN
                      RMTBranches T5 ON T2.FinBranch = T5.BranchCode  INNER JOIN
                      RMTFinanceTypes T6 ON T2.FinType = T6.FinType 
UNION ALL
SELECT		T1.FinReference, T1.InitiatedBy, T1.FinEvent,T1.InsPaidStatus,T1.InsClaimAmount,T1.InsClaimReason, T2.FinType, T4.CustCIF, T2.FinBranch, T2.FinStartDate, T2.NumberOfTerms, T2.MaturityDate, T2.FinCcy, T2.FinAmount, 
            T4.CustShrtName , T5.BranchDesc , T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T6.FinDivision lovDescFinDivision
FROM    	FinLiabilityReq T1 INNER JOIN
               FinanceMain T2 ON T1.FinReference = T2.FinReference INNER JOIN
                       Customers T4 ON T2.CustID = T4.CustID    INNER JOIN
                      RMTBranches T5 ON T2.FinBranch = T5.BranchCode   INNER JOIN
                      RMTFinanceTypes T6 ON T2.FinType = T6.FinType     

WHERE     NOT EXISTS (SELECT 1 FROM FinLiabilityReq_TEMP WHERE FinReference = T1.FinReference AND FinEvent = T1.FinEvent)
	
	</createView>
</changeSet>
<changeSet id="54" author="Prasad" dbms="postgresql">
	<createView viewName="FinScheduleDetails_TView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

				FROM         FinScheduleDetails_Temp  T1
	</createView>
</changeSet>
<changeSet id="55" author="Prasad" dbms="postgresql">
	<createView viewName="FinScheduleDetails_View" replaceIfExists="true">
		 SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails_Temp  T1
UNION ALL
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails  T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference)
	
	</createView>
</changeSet>
<changeSet id="56" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinScheduleDetails_TView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate,  
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate
	FROM         WIFFinScheduleDetails_Temp T1
	
	</createView>
</changeSet>
<changeSet id="57" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinScheduleDetails_View" replaceIfExists="true">
		 SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

	FROM         WIFFinScheduleDetails_Temp T1
	UNION ALL
			SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

	FROM         WIFFinScheduleDetails T1
	WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          WIFFinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference)
	
	</createView>
</changeSet>

<changeSet id="65" author="Prasad" dbms="postgresql">
<dropView viewName="Investment_Deal_TView" />
<dropView viewName="InvestmentFinHeader_View" />

	<createView viewName="InvestmentFinHeader_View" replaceIfExists="true">
		SELECT     T1.InvestmentRef, T1.TotPrincipalAmt, T1.finCcy, T1.ProfitDaysBasis, T1.StartDate, T1.MaturityDate, T1.PrincipalInvested, T1.PrincipalMaturity, T1.PrincipalDueToInvest, 
                      T1.AvgPftRate, T1.ApprovalRequired, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId
FROM          InvestmentFinHeader_Temp T1 
UNION ALL
SELECT     T1.InvestmentRef, T1.TotPrincipalAmt, T1.finCcy, T1.ProfitDaysBasis, T1.StartDate, T1.MaturityDate, T1.PrincipalInvested, T1.PrincipalMaturity, T1.PrincipalDueToInvest, 
                      T1.AvgPftRate, T1.ApprovalRequired, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId
FROM          InvestmentFinHeader T1 
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           InvestmentFinHeader_Temp
                            WHERE      (InvestmentRef = T1.InvestmentRef)))
	
	</createView>
	<createView viewName="Investment_Deal_TView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.InvestmentRef, T1.FinType, T3.FinTypeDesc lovDescFinTypeName, T1.FinCcy,  
                     T1.FinAmount, T1.TotalProfit, T1.TotalRepayAmt, T1.FinStartDate, T1.MaturityDate, T1.LastRepayDate, T1.LastRepayPftDate, 
                      T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.RecordStatus, T1.RecordType, T1.RoleCode, T1.NextRoleCode, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.TaskId, T1.NextTaskId, T1.WorkflowId, T2.CustID, T2.CustCIF lovDescCustCif, T2.CustShrtName lovDescCustShrtName, 
                      T3.FinCategory lovDescProductCodeName,T1.RepayProfitRate, T1.FinBranch, T7.BranchDesc lovDescFinBranchName, 
                      T1.ScheduleMethod, T10.SchdMethodDesc lovDescScheduleMethodName, T1.ProfitDaysBasis, 
                      T9.IntRateBasisCode LovDescProfitDaysBasisName, T1.DisbAccountId, T1.RepayAccountId
FROM          FinanceMain_Temp T1 INNER JOIN
                       Customers T2 ON T1.CustID = T2.CustID INNER JOIN
                       RMTFinanceTypes T3 ON T3.FinType = T1.FinType INNER JOIN
                       InvestmentFinHeader_View T6 ON T6.InvestmentRef = T1.InvestmentRef INNER JOIN
                       RMTBranches T7 ON T7.BranchCode = T1.FinBranch INNER JOIN
                       BMTIntRateBasisCodes T9 ON T9.IntRateBasisCode = T1.ProfitDaysBasis INNER JOIN
                       BMTSchdMethod T10 ON T1.ScheduleMethod = T10.SchdMethod
	
	</createView>
</changeSet>
<changeSet id="66" author="Prasad" dbms="postgresql">
	<createView viewName="FCMTCommodityInventory_View" replaceIfExists="true">
		SELECT     T1.CommodityInvId, T1.BrokerCode, T1.HoldCertificateNo, T1.CommodityCode, T1.PurchaseDate, T1.FinalSettlementDate, T1.PurchaseAmount, 
                      T1.Units, T1.UnitPrice, T1.Quantity, T1.Location, T1.BulkPurchase, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.CustShrtName BrokerShrtName,T2.BrokerCustID,T2.AccountNumber,  
                      COALESCE(T4.RoleDesc, FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T2.FeeOnUnsold,T1.CommodityCcy,T6.FieldCodeValue LocationCode,T6.ValueDesc LocationDesc,
                       T7.CommodityName lovDescCommodityDesc
FROM         FCMTCommodityInventory_Temp T1 INNER JOIN
                      FCMTBrokerDetail T2 ON T1.BrokerCode = T2.BrokerCode INNER JOIN
                      Customers T3 ON T2.brokerCustid = t3.custid LEFT OUTER JOIN
					  SecRoles T4 ON T1.NextRoleCode = T4.RoleCd  LEFT OUTER JOIN
					  RMTLovFieldDetail T6 on cast(T1.Location as numeric)=cast(T6.FieldCodeId as numeric) INNER JOIN
					  FCMTCommodityDetail T7 on T1.CommodityCode=T7.CommodityCode
UNION ALL
SELECT     T1.CommodityInvId, T1.BrokerCode, T1.HoldCertificateNo, T1.CommodityCode, T1.PurchaseDate, T1.FinalSettlementDate, T1.PurchaseAmount, 
                      T1.Units, T1.UnitPrice, T1.Quantity, T1.Location, T1.BulkPurchase, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.CustShrtName BrokerShrtName,T2.BrokerCustID,T2.AccountNumber, 
                      COALESCE(T4.RoleDesc, FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T2.FeeOnUnsold,T1.CommodityCcy,T6.FieldCodeValue LocationCode,T6.ValueDesc LocationDesc,
                      T7.CommodityName lovDescCommodityDesc
FROM         FCMTCommodityInventory T1 INNER JOIN
                      FCMTBrokerDetail T2 ON T1.BrokerCode = T2.BrokerCode INNER JOIN
                      Customers T3 ON T2.brokerCustid = t3.custid LEFT OUTER JOIN
					  SecRoles T4 ON T1.NextRoleCode = T4.RoleCd LEFT OUTER JOIN
					  RMTLovFieldDetail T6  on cast(T1.Location as numeric)=cast(T6.FieldCodeId as numeric) INNER JOIN
					  FCMTCommodityDetail T7 on T1.CommodityCode=T7.CommodityCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FCMTCommodityInventory_TEMP
                            WHERE      CommodityInvId = T1.CommodityInvId)
	
	</createView>
</changeSet>
<changeSet id="67" author="Prasad" dbms="postgresql">
	<createView viewName="FCMTCommodityInventory_TView" replaceIfExists="true">
		SELECT     T1.CommodityInvId, T1.BrokerCode, T1.HoldCertificateNo, T1.CommodityCode, T1.PurchaseDate, T1.FinalSettlementDate, T1.PurchaseAmount, 
                      T1.Units, T1.UnitPrice, T1.Quantity, T1.Location, T1.BulkPurchase, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.CustShrtName BrokerShrtName,T2.BrokerCustID,T2.AccountNumber,  
                      COALESCE(T4.RoleDesc, ${add.schema}FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T2.FeeOnUnsold,T1.CommodityCcy,T6.FieldCodeValue LocationCode,T6.ValueDesc LocationDesc,
                       T7.CommodityName lovDescCommodityDesc
FROM         FCMTCommodityInventory_Temp T1 INNER JOIN
                      FCMTBrokerDetail T2 ON T1.BrokerCode = T2.BrokerCode INNER JOIN
                      Customers T3 ON T2.brokerCustid = t3.custid LEFT OUTER  JOIN
					  SecRoles T4 ON T1.NextRoleCode = T4.RoleCd LEFT OUTER JOIN
					  RMTLovFieldDetail T6 on cast(T1.Location as numeric)=cast(T6.FieldCodeId as numeric) INNER JOIN
					  FCMTCommodityDetail T7 on T1.CommodityCode=T7.CommodityCode
	
	</createView>
</changeSet>
<changeSet id="68" author="Prasad" dbms="postgresql">
	<createView viewName="FCMTCommodityInventory_AView" replaceIfExists="true">
		SELECT     T1.CommodityInvId, T1.BrokerCode, T1.HoldCertificateNo, T1.CommodityCode, T1.PurchaseDate, T1.FinalSettlementDate, T1.PurchaseAmount, 
                      T1.Units, T1.UnitPrice, T1.Quantity, T1.Location, T1.BulkPurchase, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.CustShrtName BrokerShrtName,T2.BrokerCustID,T2.AccountNumber, 
                      COALESCE(T4.RoleDesc, ${add.schema}FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T2.FeeOnUnsold,T1.CommodityCcy,T6.FieldCodeValue LocationCode,T6.ValueDesc LocationDesc,
                       T7.CommodityName lovDescCommodityDesc
FROM         FCMTCommodityInventory T1 INNER JOIN
                      FCMTBrokerDetail T2 ON T1.BrokerCode = T2.BrokerCode INNER JOIN
                      Customers T3 ON T2.brokerCustid = t3.custid LEFT OUTER  JOIN
					  SecRoles T4 ON T1.NextRoleCode = T4.RoleCd LEFT OUTER JOIN
					  RMTLovFieldDetail T6 on cast(T1.Location as numeric)=cast(T6.FieldCodeId as numeric) INNER JOIN
					  FCMTCommodityDetail T7 on T1.CommodityCode=T7.CommodityCode
	
	</createView>
</changeSet>
<changeSet id="69" author="Prasad" dbms="postgresql">
	<createView viewName="CustomerIncomes_View" replaceIfExists="true">
		SELECT     T1.CustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.CustIncomeType, T2.IncomeTypeDesc lovDescCustIncomeTypeName, 
                      T1.CustIncome, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T1.IncomeExpense, T1.Margin, T1.Category, T4.CustBaseCcy ToCcy,
                      T3.CategoryDesc lovDescCategoryName, T1.JointCust
FROM          CustomerIncomes_Temp T1 INNER JOIN
                       BMTIncomeTypes T2 ON T1.CustIncomeType = T2.IncomeTypeCode AND T1.IncomeExpense = T2.IncomeExpense AND T1.Category = T2.Category INNER JOIN
                       Customers_Temp T4 ON T1.CustID = T4.CustID INNER JOIN
                       BMTIncomeCategory T3 ON T1.Category = T3.IncomeCategory
UNION ALL
SELECT     T1.CustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.CustIncomeType, T2.IncomeTypeDesc lovDescCustIncomeTypeName, 
                      T1.CustIncome, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                       T1.IncomeExpense, T1.Margin, T1.Category,  T4.CustBaseCcy ToCcy,
                      T3.CategoryDesc lovDescCategoryName, T1.JointCust
FROM          CustomerIncomes T1 INNER JOIN
                       BMTIncomeTypes T2 ON T1.CustIncomeType = T2.IncomeTypeCode AND T1.IncomeExpense = T2.IncomeExpense AND T1.Category = T2.Category INNER JOIN
                       Customers T4 ON T1.CustID = T4.CustID INNER JOIN
                       BMTIncomeCategory T3 ON T1.Category = T3.IncomeCategory
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           CustomerIncomes_Temp
                            WHERE      (CustID = T1.CustID) AND (CustIncomeType = T1.CustIncomeType) AND (IncomeExpense = T1.IncomeExpense) AND (Category = T1.Category)))

	
	</createView>
</changeSet>
<changeSet id="70" author="Prasad" dbms="postgresql">
	<createView viewName="CustomerNotes_View" replaceIfExists="true">
		SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustNotesType, T2.CustNotesTypeDesc lovDescCustNotesTypeName, 
                      T1.CustNotesTitle, T1.CustNotes, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T3.RecordType lovDescCustRecordType
FROM          CustomerNotes_Temp T1 INNER JOIN
                       BMTCustNotesTypes T2 ON T1.CustNotesType = T2.CustNotesTypeCode INNER JOIN
                       Customers_View T3 ON T1.CustID = T3.CustID
UNION ALL
SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustNotesType, T2.CustNotesTypeDesc lovDescCustNotesTypeName, 
                      T1.CustNotesTitle, T1.CustNotes, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T3.RecordType lovDescCustRecordType
FROM          CustomerNotes T1 INNER JOIN
                       BMTCustNotesTypes T2 ON T1.CustNotesType = T2.CustNotesTypeCode INNER JOIN
                       Customers_View T3 ON T1.CustID = T3.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerNotes_Temp
                            WHERE      CustID = T1.CustID AND CustNotesType = T1.CustNotesType AND CustNotesTitle = T1.CustNotesTitle)
	
	</createView>
</changeSet>
<changeSet id="71" author="Prasad" dbms="postgresql">
	<createView viewName="CustomerNotes_AView" replaceIfExists="true">
		SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustNotesType, T2.CustNotesTypeDesc lovDescCustNotesTypeName, 
                      T1.CustNotesTitle, T1.CustNotes, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T3.RecordType lovDescCustRecordType
FROM          CustomerNotes T1 INNER JOIN
                       BMTCustNotesTypes T2 ON T1.CustNotesType = T2.CustNotesTypeCode INNER JOIN
                       Customers_View T3 ON T1.CustID = T3.CustID
	
	</createView>
</changeSet>
<changeSet id="72" author="Prasad" dbms="postgresql">
	<createView viewName="CustomerPhoneNumbers_View" replaceIfExists="true">
		 SELECT     T1.PhoneCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
                      T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName, 
                      T4.RecordType lovDescCustRecordType
FROM         CustomerPhoneNumbers_TEMP T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode INNER JOIN
                      Customers_View T4 ON T1.PhoneCustID = T4.CustID
UNION ALL
SELECT     T1.PhoneCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
                      T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName, 
                      T4.RecordType lovDescCustRecordType
FROM         CustomerPhoneNumbers T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode INNER JOIN
                      Customers_View T4 ON T1.PhoneCustID = T4.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerPhoneNumbers_TEMP
                            WHERE      PhoneCustID = T1.PhoneCustID AND PhoneTypeCode = T1.PhoneTypeCode)
	
	</createView>
</changeSet>
<changeSet id="73" author="Prasad" dbms="postgresql">
	<createView viewName="CustomerPhoneNumbers_AView" replaceIfExists="true">
		SELECT     T1.PhoneCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
           T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
           T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName, 
           T4.RecordType lovDescCustRecordType
FROM         CustomerPhoneNumbers T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode INNER JOIN
                      Customers_View T4 ON T1.PhoneCustID = T4.CustID
	
	</createView>
</changeSet>
<changeSet id="74" author="Prasad" dbms="postgresql">
	<createView viewName="CustomersPRelations_View" replaceIfExists="true">
		SELECT     T1.PRCustID, T6.CustCIF lovDescCustCIF, T6.CustShrtName lovDescCustShrtName, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, 
                      T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, T1.Version, T1.PRMail, T1.PRPhone, T1.PRAddrZIP, T1.PRAddrCountry, 
                      T1.PRAddrProvince, T1.PRAddrCity, T1.PRAddrPOBox, T1.PRAddrLine2, T1.PRAddrLine1, T1.PRAddrStreet, T1.PRAddrFNbr, T1.PRAddrHNbr, T1.PRDOB, 
                      T1.PRLNameLclLng, T1.PRMNameLclLng, T1.PRFNameLclLng, T1.PRSName, T1.PRLName, T1.PRMName, T1.PRFName, T1.PRisGuardian, T1.PRRelationCustID, 
                      T1.PRRelationCode, T1.PRCustPRSNo, T2.PRelationDesc lovDescPRRelationCodeName, T3.PCCityName lovDescPRAddrCityName, 
                      T4.CPProvinceName lovDescPRAddrProvinceName, T5.CountryDesc lovDescPRAddrCountryName, T6.RecordType lovDescCustRecordType
FROM         CustomersPRelations_Temp T1 LEFT OUTER JOIN
                      BMTPRelationCodes T2 ON T1.PRRelationCode = T2.PRelationCode LEFT OUTER JOIN
                      RMTProvinceVsCity T3 ON T1.PRAddrCountry = T3.PCCountry AND T1.PRAddrProvince = T3.PCProvince AND T1.PRAddrCity = T3.PCCity LEFT OUTER JOIN
                      RMTCountryVsProvince T4 ON T1.PRAddrCountry = T4.CPCountry AND T1.PRAddrProvince = T4.CPProvince LEFT OUTER JOIN
                      BMTCountries T5 ON T1.PRAddrCountry = T5.CountryCode LEFT OUTER JOIN
                      Customers_View T6 ON T1.PRCustID = T6.CustID
UNION ALL
SELECT     T1.PRCustID, T6.CustCIF lovDescCustCIF, T6.CustShrtName lovDescCustShrtName, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, 
                      T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, T1.Version, T1.PRMail, T1.PRPhone, T1.PRAddrZIP, T1.PRAddrCountry, 
                      T1.PRAddrProvince, T1.PRAddrCity, T1.PRAddrPOBox, T1.PRAddrLine2, T1.PRAddrLine1, T1.PRAddrStreet, T1.PRAddrFNbr, T1.PRAddrHNbr, T1.PRDOB, 
                      T1.PRLNameLclLng, T1.PRMNameLclLng, T1.PRFNameLclLng, T1.PRSName, T1.PRLName, T1.PRMName, T1.PRFName, T1.PRisGuardian, T1.PRRelationCustID, 
                      T1.PRRelationCode, T1.PRCustPRSNo, T2.PRelationDesc lovDescPRRelationCodeName, T3.PCCityName lovDescPRAddrCityName, 
                      T4.CPProvinceName lovDescPRAddrProvinceName, T5.CountryDesc lovDescPRAddrCountryName, T6.RecordType lovDescCustRecordType
FROM         CustomersPRelations T1 INNER JOIN
                      BMTPRelationCodes T2 ON T1.PRRelationCode = T2.PRelationCode LEFT JOIN
                      RMTProvinceVsCity T3 ON T1.PRAddrCountry = T3.PCCountry AND T1.PRAddrProvince = T3.PCProvince AND T1.PRAddrCity = T3.PCCity INNER JOIN
                      RMTCountryVsProvince T4 ON T1.PRAddrCountry = T4.CPCountry AND T1.PRAddrProvince = T4.CPProvince INNER JOIN
                      BMTCountries T5 ON T1.PRAddrCountry = T5.CountryCode LEFT OUTER JOIN
                      Customers_View T6 ON T1.PRCustID = T6.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomersPRelations_Temp
                            WHERE      PRCustID = T1.PRCustID AND PRCustPRSNo = T1.PRCustPRSNo)
	
	</createView>
</changeSet>
<changeSet id="75" author="Prasad" dbms="postgresql">
	<createView viewName="FCMTBrokerDetail_View" replaceIfExists="true">
		SELECT T1.BrokerCode ,
          T1.BrokerCustID ,
          Customers.CustCIF lovDescBrokerCIF  ,
          T1.BrokerFrom ,
          T1.BrokerAddrHNbr ,
          T1.BrokerAddrFlatNbr ,
          T1.BrokerAddrStreet ,
          T1.BrokerAddrLane1 ,
          T1.BrokerAddrLane2 ,
          T1.BrokerAddrPOBox ,
          T1.BrokerAddrProvince ,
          T1.BrokerAddrCity ,
          T1.BrokerAddrZIP ,
          T1.BrokerAddrPhone ,
          T1.BrokerAddrFax ,
          T1.BrokerEmail ,
          T1.AgreementRef ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T3.PCCityName lovDescBrokerAddrCityName  ,
          T4.CPProvinceName lovDescBrokerAddrProvinceName  ,
          T5.CountryDesc lovDescBrokerAddrCountryName  ,
          T1.BrokerAddrCountry ,
          T2.CustShrtName lovDescBrokerShortName  ,
          T1.FeeOnUnsold ,
          T1.AccountNumber ,
          T1.COMMISSIONRATE 
     FROM FCMTBrokerDetail_Temp T1
           LEFT JOIN RMTProvinceVsCity T3   ON T1.BrokerAddrCountry = T3.PCCountry
            AND T1.BrokerAddrProvince = T3.PCProvince
            AND T1.BrokerAddrCity = T3.PCCity
           LEFT JOIN RMTCountryVsProvince T4   ON T1.BrokerAddrCountry = T4.CPCountry
            AND T1.BrokerAddrProvince = T4.CPProvince
            LEFT JOIN BMTCountries T5   ON T1.BrokerAddrCountry = T5.CountryCode
           LEFT JOIN Customers_AView T2   ON T1.BrokerCustID = T2.CustID
           LEFT JOIN Customers    ON T1.BrokerCustID = Customers.CustID
   UNION ALL 
   SELECT T1.BrokerCode ,
          T1.BrokerCustID ,
          Customers.CustCIF lovDescBrokerCIF  ,
          T1.BrokerFrom ,
          T1.BrokerAddrHNbr ,
          T1.BrokerAddrFlatNbr ,
          T1.BrokerAddrStreet ,
          T1.BrokerAddrLane1 ,
          T1.BrokerAddrLane2 ,
          T1.BrokerAddrPOBox ,
          T1.BrokerAddrProvince ,
          T1.BrokerAddrCity ,
          T1.BrokerAddrZIP ,
          T1.BrokerAddrPhone ,
          T1.BrokerAddrFax ,
          T1.BrokerEmail ,
          T1.AgreementRef ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T3.PCCityName lovDescBrokerAddrCityName  ,
          T4.CPProvinceName lovDescBrokerAddrProvinceName  ,
          T5.CountryDesc lovDescBrokerAddrCountryName  ,
          T1.BrokerAddrCountry ,
          T2.CustShrtName lovDescBrokerShortName  ,
          T1.FeeOnUnsold ,
          T1.AccountNumber ,
          T1.COMMISSIONRATE 
     FROM FCMTBrokerDetail T1
          LEFT JOIN RMTProvinceVsCity T3   ON T1.BrokerAddrCountry = T3.PCCountry
            AND T1.BrokerAddrProvince = T3.PCProvince
            AND T1.BrokerAddrCity = T3.PCCity
           LEFT JOIN RMTCountryVsProvince T4   ON T1.BrokerAddrCountry = T4.CPCountry
            AND T1.BrokerAddrProvince = T4.CPProvince
           LEFT JOIN BMTCountries T5   ON T1.BrokerAddrCountry = T5.CountryCode
           LEFT JOIN Customers_AView T2   ON T1.BrokerCustID = T2.CustID
           LEFT JOIN Customers    ON T1.BrokerCustID = Customers.CustID
     WHERE NOT EXISTS ( SELECT 1 
                        FROM FCMTBrokerDetail_Temp 
                          WHERE BrokerCode = T1.BrokerCode )
	
	</createView>
</changeSet>
<changeSet id="76" author="Prasad" dbms="postgresql">
	<createView viewName="CustomerIncomes_AView" replaceIfExists="true">
		 SELECT     T1.CustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.CustIncomeType, T2.IncomeTypeDesc lovDescCustIncomeTypeName, 
                      T1.CustIncome, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T4.RecordType lovDescCustRecordType, T1.IncomeExpense, T1.Margin, T1.Category, T4.CustBaseCcy ToCcy,
                      T3.CategoryDesc lovDescCategoryName, T1.JointCust
FROM          CustomerIncomes T1 INNER JOIN
                       BMTIncomeTypes T2 ON T1.CustIncomeType = T2.IncomeTypeCode AND T1.IncomeExpense = T2.IncomeExpense AND T1.Category = T2.Category INNER JOIN
                       Customers T4 ON T1.CustID = T4.CustID INNER JOIN
                       BMTIncomeCategory T3 ON T1.Category = T3.IncomeCategory
	
	</createView>
</changeSet>
<changeSet id="77" author="Prasad" dbms="postgresql">
	<createView viewName="LimitHeader_View" replaceIfExists="true">
		SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue,T8.QueryDesc , T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId, T4.CustCIF,
T4.CustShrtName, 
                      T4.CustFName CustFName, T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,
T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName,T6.ShowLimitsIn, T1.LimitSetupRemarks,T1.Rebuild,T1.Active, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.
LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader_Temp T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                       CustomerGroups T3 ON cast(T1.CustomerGroup as numeric) = cast(T3.CustGrpID as numeric) LEFT OUTER JOIN
                       Customers_AView T4 ON cast(T1.CustomerId as numeric) = cast(T4.CustID as numeric)  LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode 

UNION ALL 
SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup, T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId,T4.CustCIF, 
T4.CustShrtName, 
                      T4.CustFName CustFName,T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName,  T1.LimitCcy,T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName, T6.ShowLimitsIn,T1.LimitSetupRemarks,T1.Rebuild,T1.Active,T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.
LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                        CustomerGroups T3 ON cast(T1.CustomerGroup as numeric) = cast(T3.CustGrpID as numeric) LEFT OUTER JOIN
                       Customers_AView T4 ON cast(T1.CustomerId as numeric) = cast(T4.CustID as numeric) LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode

WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          LimitHeader_Temp
                            WHERE      HeaderId = T1.HeaderId)
	
	</createView>
</changeSet>
<changeSet id="78" author="Prasad" dbms="postgresql">
	<createView viewName="LimitHeader_TView" replaceIfExists="true">
		SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId,T4.CustCIF, 
T4.CustShrtName, 
                      T4.CustFName CustFName, T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName, T6.ShowLimitsIn,T1.LimitSetupRemarks,T1.Rebuild,T1.Active,  T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1
.LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader_Temp T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                       CustomerGroups T3 ON cast(T1.CustomerGroup as numeric) = cast(T3.CustGrpID as numeric) LEFT OUTER JOIN
                       Customers_AView T4 ON cast(T1.CustomerId as numeric) = cast(T4.CustID as numeric) LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode
	
	</createView>
</changeSet>
<changeSet id="79" author="Prasad" dbms="postgresql">
	<createView viewName="LimitHeader_AView" replaceIfExists="true">
		SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, 
T1.CustomerId,T4.CustCIF, 
T4.CustShrtName, 
                      T4.CustFName CustFName,T4.CustMName CustMName, T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName,T6.ShowLimitsIn, T1.LimitSetupRemarks, T1.Rebuild,T1.Active, T1.Version, 
T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                        CustomerGroups T3 ON cast(T1.CustomerGroup as numeric) = cast(T3.CustGrpID as numeric) LEFT OUTER JOIN
                       Customers_AView T4 ON cast(T1.CustomerId as numeric) = cast(T4.CustID as numeric) LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode
	
	</createView>
</changeSet>
<changeSet id="80" author="Prasad" dbms="postgresql">
	<createView viewName="FCMTBrokerDetail_AView" replaceIfExists="true">
		SELECT T1.BrokerCode ,
          T1.BrokerCustID ,
          Customers.CustCIF lovDescBrokerCIF  ,
          T1.BrokerFrom ,
          T1.BrokerAddrHNbr ,
          T1.BrokerAddrFlatNbr ,
          T1.BrokerAddrStreet ,
          T1.BrokerAddrLane1 ,
          T1.BrokerAddrLane2 ,
          T1.BrokerAddrPOBox ,
          T1.BrokerAddrProvince ,
          T1.BrokerAddrCity ,
          T1.BrokerAddrZIP ,
          T1.BrokerAddrPhone ,
          T1.BrokerAddrFax ,
          T1.BrokerEmail ,
          T1.AgreementRef ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T3.PCCityName lovDescBrokerAddrCityName  ,
          T4.CPProvinceName lovDescBrokerAddrProvinceName  ,
          T5.CountryDesc lovDescBrokerAddrCountryName  ,
          T1.BrokerAddrCountry ,
          T2.CustShrtName lovDescBrokerShortName  ,
          T1.FeeOnUnsold ,
          T1.AccountNumber ,
          T1.COMMISSIONRATE 
     FROM FCMTBrokerDetail T1
           LEFT JOIN RMTProvinceVsCity T3 ON T1.BrokerAddrCountry = T3.PCCountry
            AND T1.BrokerAddrProvince = T3.PCProvince
            AND T1.BrokerAddrCity = T3.PCCity
           LEFT JOIN RMTCountryVsProvince T4 ON T1.BrokerAddrCountry = T4.CPCountry
            AND T1.BrokerAddrProvince = T4.CPProvince
            LEFT JOIN BMTCountries T5 ON T1.BrokerAddrCountry = T5.CountryCode
            LEFT JOIN Customers_AView T2 ON T1.BrokerCustID = T2.CustID
            LEFT JOIN Customers ON T1.BrokerCustID = Customers.CustID
	
	</createView>
</changeSet>
<changeSet id="81" author="Prasad" dbms="postgresql">
	<createView viewName="LimitHeader_AView" replaceIfExists="true">
		SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, 
T1.CustomerId,T4.CustCIF, 
T4.CustShrtName, 
                      T4.CustFName CustFName,T4.CustMName CustMName, T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName,T6.ShowLimitsIn, T1.LimitSetupRemarks, T1.Rebuild,T1.Active, T1.Version, 
T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                        CustomerGroups T3 ON cast(T1.CustomerGroup as numeric) = cast(T3.CustGrpID as numeric) LEFT OUTER JOIN
                       Customers_AView T4 ON cast(T1.CustomerId as numeric) = cast(T4.CustID as numeric) LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode
	
	</createView>
</changeSet>
<changeSet id="82" author="Prasad" dbms="postgresql">
	<createView viewName="LimitHeader_TView" replaceIfExists="true">
		SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId,T4.CustCIF, 
T4.CustShrtName, 
                      T4.CustFName CustFName, T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName, T6.ShowLimitsIn,T1.LimitSetupRemarks,T1.Rebuild,T1.Active,  T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1
.LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader_Temp T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                        CustomerGroups T3 ON cast(T1.CustomerGroup as numeric) = cast(T3.CustGrpID as numeric) LEFT OUTER JOIN
                       Customers_AView T4 ON cast(T1.CustomerId as numeric) = cast(T4.CustID as numeric) LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode
	
	</createView>
</changeSet>
<changeSet id="83" author="Prasad" dbms="postgresql">
	<createView viewName="LimitHeader_View" replaceIfExists="true">
		SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue,T8.QueryDesc , T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId, T4.CustCIF,
T4.CustShrtName, 
                      T4.CustFName CustFName, T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,
T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName,T6.ShowLimitsIn, T1.LimitSetupRemarks,T1.Rebuild,T1.Active, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.
LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader_Temp T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                        CustomerGroups T3 ON cast(T1.CustomerGroup as numeric) = cast(T3.CustGrpID as numeric) LEFT OUTER JOIN
                       Customers_AView T4 ON cast(T1.CustomerId as numeric) = cast(T4.CustID as numeric) LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode 
	
	</createView>
</changeSet>
<changeSet id="84" author="Prasad" dbms="postgresql">
	<createView viewName="CustAlertsOD_View" replaceIfExists="true">
		Select FM.CustID, C.CustCIF, C.CustFName || C.CustMName || C.CustLName CustShrtName, FinCurODDays, FinCuRODAmt, 
		FM.Finreference, FM.FinBranch, FM.FinCcy, FM.FinPurpose  from (
		Select FinReference, Max(OD.FinCurODDays)FinCurODDays, SUM(OD.FinCuRODAmt)FinCuRODAmt
		From FinODDetails OD where FinCurODAmt > 0 Group by FinReference)T
		Inner join FinanceMain FM on T.FinReference = FM.FinReference
		Inner join Customers C on C.CustID = FM.CustID
	
	</createView>
</changeSet>
<changeSet id="85" author="Prasad" dbms="postgresql">
	<createView viewName="FinScheduleDetails_TView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

				FROM         FinScheduleDetails_Temp  T1
	
	</createView>
</changeSet>
<changeSet id="86" author="Prasad" dbms="postgresql">
	<createView viewName="FinScheduleDetails_View" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails_Temp  T1
UNION ALL
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails  T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference)
	
	</createView>
</changeSet>
<changeSet id="87" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinScheduleDetails_View" replaceIfExists="true">
		 SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

	FROM         WIFFinScheduleDetails_Temp T1
	UNION ALL
			SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

	FROM         WIFFinScheduleDetails T1
	WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          WIFFinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference)
	
	</createView>
</changeSet>
<changeSet id="88" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinScheduleDetails_TView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate,  
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate
	FROM         WIFFinScheduleDetails_Temp T1
	
	</createView>
</changeSet>
<changeSet id="89" author="Prasad" dbms="postgresql">
	<createView viewName="FinScheduleDetails_AView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails  T1
	
	</createView>
</changeSet>
<changeSet id="90" author="Prasad" dbms="postgresql">
	<createView viewName="LMTFinanceWorkFlowDef_AView" replaceIfExists="true">
		SELECT T1.FinType , T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName  ,
		T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc,
          T1.FinType lovDescPromotionCode  ,
          T2.FinTypeDesc lovDescPromotionName  ,
          T4.FacilityDesc lovDescFacilityTypeName  ,
          T1.ScreenCode ,
          T1.WorkFlowType ,
          T3.WorkFlowDesc lovDescWorkFlowTypeName  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T3.WorkFlowRoles LovDescWorkFlowRolesName  ,
          T2.FinCategory LovdescProductCodeName  ,
          T2.FinDivision lovDescFinDivisionName  ,
          T3.FirstTaskOwner LovDescFirstTaskOwner  ,
          T1.ModuleName ,
         COALESCE(T2.FinIsActive , T6.Active,T7.Active,T8.Active) FinIsActive, 
          COALESCE(T2.Product, '') LovDescProductName  ,
          T2.lovDescPromoFinTypeDesc ,
          T2.FinAssetType ,
          T2.StartDate ,
          T2.EndDate ,
          T1.FinEvent,
          T5.ProductCategory
     FROM LMTFinanceWorkFlowDef T1
            LEFT JOIN RMTFinanceTypes_AView T2   ON T1.FinType = T2.FinType
            INNER JOIN WorkFlowDetails T3   ON T1.WorkFlowType = T3.WorkFlowType AND T3.WorkFlowActive = 1
            LEFT JOIN CAFFacilityTypes T4   ON T1.FinType = T4.FacilityType 
            LEFT JOin BMTProduct T5 ON T2.FinCategory = T5.ProductCode
            LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
			LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
			LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
	
	</createView>
</changeSet>
<changeSet id="91" author="Prasad" dbms="postgresql">
	<createView viewName="FinanceMain_View" replaceIfExists="true">
		SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR, 
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain_Temp T1   INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
			 
	UNION ALL
			SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR,  
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment  INNER JOIN 
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
						WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          FinanceMain_Temp
                            WHERE      (FINREFERENCE = T1.FINREFERENCE)))
	
	</createView>
</changeSet>

<changeSet id="93" author="Prasad" dbms="postgresql">
<dropView viewName="findetailsbyreference_iview"/>
<dropView viewName="FinanceMain_AView"/>
	<createView viewName="FinanceMain_AView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment  lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T7.FinTypeDesc  lovDescFinTypeName, T7.FinMaxAmount  lovDescFinMaxAmt, T7.FinMinAmount  lovDescFinMinAmount, 
                      T1.MinDownpayPerc, T7.FinIsAlwDifferment  lovDescFinAlwDeferment, T7.FinIsDwPayRequired  lovDescDwnPayReq, 
                      T7.FinMaxDifferment  lovDescFinMaxDifferment,T12.BranchDesc  lovDescFinBranchName, T1.LastRepayDate, T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, 
                       T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef, T1.DepreciationFrq, T1.FinContractDate, 
                      T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,   T17.AcrTillLBD  lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, 
                      T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose, 
                     T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.bankName, T1.iban, T1.accountType, T1.DdaReferenceNo, 
                      T7.FinScheduleOn  LovDescFinScheduleOn, T1.CustDSR,
                      T1.JointAccount, T1.JointCustId, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, T1.SecurityCollateral, 
                       T1.Approved,   T1.Discrepancy, T1.LimitApproved, T1.InvestmentRef, T1.GraceTerms, 
                      T7.FinDivision  lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps,  T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc  LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                    T1.SupplementRent, T1.IncreasedCost, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId,T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T29.AgreeName,T29.MMAReference LovDescMMAReference,
					  T1.DSACode,T30.ROfficerDesc DSACodeDesc,T1.TDSApplicable,  T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes  T7 ON T1.FinType = T7.FinType  LEFT OUTER JOIN
                      RMTBranches  T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FinPftDetails  T17 ON T17.FinReference = T1.FinReference LEFT OUTER JOIN
                      StepPolicyHeader  T24 ON T1.StepPolicy = T24.PolicyCode  LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN 
					  RMTGENDEPARTMENTS T28 ON T1.ACCOUNTSOFFICER = T28.GENDEPARTMENT LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGENDEPARTMENTS T35 ON T1.SalesDepartment = T35.GENDEPARTMENT  INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode
	
	</createView>
	<createView viewName="findetailsbyreference_iview" replaceIfExists="true">
		SELECT T1.CustID CustomerNo, T1.FinReference FinanceRef, T1.FinType FinanceType,
	   T1.FinStartDate StartDate, T1.NumberOfTerms TotalInstallments, T1.FinAmount FinanceAmount, T1.NextRepayDate DueDate,
		T9.CustShrtName CustomerName, T1.FinContractDate ContractDate, T1.DownPayment DownPaymentAmount, 
		T1.RepayFrq RepaymentFrequency, T1.RepayProfitRate ProfitRate, T1.RepayAccountId RepaymentAccount, 
		T1.RepayMargin MarginRate,
		T2.BranchCode  Branch, T1.FinCcy Currency,T4.FinCategory ProductType,
		(T5.NOInst-T5.NOPaidInst) RemainingInstallments,(T5.NSchdPft+T5.NSchdPri) InstallmentAmount,
		(T5.ODPrincipal+T5.ODProfit) PastDueAmount,
		(T5.TotalPftPaid+T5.TotalPriPaid) RepaidAmount, T5.LastRpySchDate LastInstallmentDate, 
		T5.LastRepayAmt LastInstallmentAmount,
		(T5.NSchdPft+T5.NSchdPri+T5.NSchdPftDue+T5.NSchdPriDue) OutstandingAmount,  T5.ODDays DaysPastDue,
		T6.CustStsDescription FinanceStatus,T7.DisbAmount DisbursedAmount,
	    COALESCE(T8.BRRate,0) BaseRate, (COALESCE(T8.BRRate,0) + T1.RepayMargin) AllInRate
FROM FinanceMain_AView T1 INNER JOIN 
	 Customers T9 ON T9.CustId = T1.CustId INNER JOIN 
	 RMTBranches T2 ON T1.FinBranch = T2.BranchCode INNER JOIN 
	 RMTFinanceTypes T4 ON T1.FinType = T4.FinType INNER JOIN 
	 FinPftDetails T5 ON T1.FinReference = T5.FinReference INNER JOIN
	 BMTCustStatusCodes T6 ON T1.FinStatus = T6.CustStsCode INNER JOIN
	 FinDisbursementDetails T7 ON T1.FinReference = T7.FinReference LEFT JOIN
	 RMTBaseRates T8 ON T1.RepayBaseRate = T8.BRType
	
	</createView>
</changeSet>
<changeSet id="94" author="Prasad" dbms="postgresql">
	<createView viewName="FinFeeDetail_View" replaceIfExists="true">
		 SELECT 	T1.FeeID, T1.FinReference, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeSeq, T1.FeeOrder, 
					T1.CalculatedAmount, T1.ActualAmount, T1.WaivedAmount, T1.PaidAmount,
					T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, 
					T1.CalculateOn,
					T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
					T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.FeeTypeCode, T2.FeeTypeDesc
					
		FROM        FinFeeDetail_Temp T1 INNER JOIN 
					FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
		UNION ALL
		SELECT      T1.FeeID, T1.FinReference, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeSeq, T1.FeeOrder, T1.CalculatedAmount, T1.ActualAmount, 
					T1.WaivedAmount, T1.PaidAmount,
					T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, T1.CalculateOn,
					T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
					T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.FeeTypeCode, T2.FeeTypeDesc
		FROM        FinFeeDetail T1 INNER JOIN 
					FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
		WHERE     	NOT EXISTS
                          (SELECT     1
                            FROM          FinFeeDetail_Temp
                            WHERE      FeeID = T1.FeeID)
	
	</createView>
</changeSet>
<changeSet id="95" author="Prasad" dbms="postgresql">
	<createView viewName="FinFeeDetail_TView" replaceIfExists="true">
		SELECT  T1.FeeID, T1.FinReference, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeSeq, T1.FeeOrder, T1.CalculatedAmount, T1.ActualAmount, T1.WaivedAmount, T1.PaidAmount,
					T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, T1.CalculateOn,
					T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
					T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.FeeTypeCode, T2.FeeTypeDesc
			FROM    FinFeeDetail_Temp T1 INNER JOIN 
					FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
	
	</createView>
</changeSet>
<changeSet id="96" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinFeeDetail_View" replaceIfExists="true">
		 SELECT  T1.FeeID, T1.FinReference, T1.FeeSeq, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.CalculatedAmount, T1.ActualAmount, T1.WaivedAmount, T1.PaidAmount,
           		T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, T1.CalculateOn,
		  		T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
		   		T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   		T2.FeeTypeCode, T2.FeeTypeDesc
		FROM    WIFFinFeeDetail_Temp T1 INNER JOIN 
           		FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
		UNION ALL
		SELECT  T1.FeeID, T1.FinReference, T1.FeeSeq, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.CalculatedAmount, T1.ActualAmount, T1.WaivedAmount, T1.PaidAmount,
          		T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, T1.CalculateOn,
		   		T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
		   		T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   		T2.FeeTypeCode, T2.FeeTypeDesc
		FROM      WIFFinFeeDetail T1 INNER JOIN 
           		FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
		WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          WIFFinFeeDetail_Temp
                            WHERE      FinReference = T1.FinReference AND OriginationFee = T1.OriginationFee
							AND FinEvent = T1.FinEvent AND FeeTypeID = T1.FeeTypeID)
	
	</createView>
</changeSet>
<changeSet id="97" author="Prasad" dbms="postgresql">
	<createView viewName="FinFeeScheduleDetail_View" replaceIfExists="true">
		SELECT     T1.FeeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount,T2.FinReference, T2.FeeTypeID, T2.FinEvent
			FROM       FinFeeScheduleDetail_Temp T1
			Inner Join FinFeeDetail T2 On T1.FeeID = T2.FeeID 
			UNION ALL
			SELECT     T1.FeeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount, T2.FinReference, T2.FeeTypeID, T2.FinEvent
			FROM       FinFeeScheduleDetail T1
			Inner Join FinFeeDetail T2 On T1.FeeID = T2.FeeID 
			WHERE     NOT EXISTS(SELECT 1 FROM FinFeeScheduleDetail_Temp WHERE FeeID = T1.FeeID AND SchDate = T1.SchDate)
	
	</createView>
</changeSet>
<changeSet id="98" author="Prasad" dbms="postgresql">
	<createView viewName="FinFeeScheduleDetail_TView" replaceIfExists="true">
		SELECT     T1.FeeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount, T2.FinReference, T2.FeeTypeID, T2.FinEvent
			FROM       FinFeeScheduleDetail_Temp T1
			Inner Join FinFeeDetail_Temp T2 On T1.FeeID = T2.FeeID
	
	</createView>
</changeSet>
<changeSet id="99" author="Prasad" dbms="postgresql">
	<createView viewName="WIFFinFeeScheduleDetail_View" replaceIfExists="true">
		SELECT     T1.FeeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount
		FROM       WIFFinFeeScheduleDetail_Temp T1
		UNION ALL
		SELECT    T1.FeeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount
		FROM       WIFFinFeeScheduleDetail T1
		WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          WIFFinFeeScheduleDetail_Temp
                            WHERE      FeeID = T1.FeeID
							AND SchDate = T1.SchDate)
	</createView>
</changeSet>
<changeSet id="100" author="Prasad" dbms="postgresql">
	<createView viewName="BMTBankDetail_View" replaceIfExists="true">
		SELECT BankCode, BankName, Active	
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
			RecordType, WorkflowId,AccNoLength
				FROM    	BMTBankDetail_TEMP
				UNION ALL
				SELECT	BankCode, BankName, Active				
							, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
							RecordType, WorkflowId,AccNoLength
				FROM    	BMTBankDetail
				WHERE     NOT EXISTS (SELECT 1 FROM BMTBankDetail_TEMP WHERE BankCode = BMTBankDetail.BankCode)
	
	</createView>
</changeSet>
<changeSet id="101" author="Prasad" dbms="postgresql">
	<createView viewName="BMTBankDetail_AView" replaceIfExists="true">
		SELECT BankCode, BankName, Active	
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
			RecordType, WorkflowId,AccNoLength
				FROM    	BMTBankDetail
	
	</createView>
</changeSet>
<changeSet id="102" author="Prasad" dbms="postgresql">
	<createView viewName="RMTFinanceTypes_View" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					   T1.AllowDownpayPgm, T54.FinTypeDesc lovDescPromoFinTypeDesc, 
			          T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					  T1.AlwAdvanceRent, T1.GrcAdvBaseRate,T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory , T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday
			FROM       RMTFinanceTypes_Temp T1 LEFT OUTER JOIN
			           RMTFinanceTypes T54 ON T1.Product = T54.FinType LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId 
			UNION ALL
			SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName, 
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired, T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					  T1.AllowDownpayPgm, T54.FinTypeDesc lovDescPromoFinTypeDesc, T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					   T1.AlwAdvanceRent, T1.GrcAdvBaseRate,  T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory ,T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday
			FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
			           RMTFinanceTypes T54 ON T1.Product = T54.FinType LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId 
			WHERE     (NOT EXISTS
			                          (SELECT     1 Expr1
			                            FROM          RMTFinanceTypes_Temp
			                            WHERE      (FinType = T1.FinType)))
	
	</createView>
</changeSet>


<changeSet id="58" author="Prasad" dbms="postgresql">
	<createView viewName="FinScheduleDetails_AView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails  T1
	
	</createView>
</changeSet>
<changeSet id="59" author="Prasad" dbms="postgresql">
	<createView viewName="BulkDeferement_View" replaceIfExists="true">
		 Select T1.ClosingStatus, T1.FinReference, T1.FinType FinType, T1.FinCcy FinCcy, T1.CustID CustID, T3.FinDivision LovDescFinDivision, 
T1.FinBranch FinBranch, T3.FinCategory ProductCode, T2.SchDate DeferedSchdDate , T4.CustCIF,T4.CustShrtName CustName,BMT.IntRateBasisDesc ProfitDayBasisDesc,
BMTSchd.SchdMethodDesc SchdMethodDesc
From FinanceMain T1 
INNER JOIN FinScheduleDetails T2 ON T1.FinReference = T2.FinReference
INNER JOIN RMTFinanceTypes T3 ON T1.FinType = T3.FinType
INNER JOIN Customers T4 ON T1.CustId = T4.CustId
INNER JOIN BMTIntRateBasisCodes BMT ON BMT.IntRateBasisCode = T1.ProfitDaysBasis
INNER JOIN BMTSchdMethod BMTSchd ON BMTSchd.SchdMethod = T1.ScheduleMethod
WHERE (T1.Defferments - T1.AllowedDefRpyChange  > 0)
  AND T1.MaturityDate != T2.SchDate  AND T1.FinIsActive = 1 AND T2.RepayAmount > 0  
  AND coalesce(T1.ClosingStatus,'') NOT IN('C','W') AND (T2.SchdPftPaid + T2.SchdPriPaid) = 0
	
	</createView>
</changeSet>
<changeSet id="60" author="Prasad" dbms="postgresql">
	<createView viewName="FinODCRecovery_View" replaceIfExists="true">
	 SELECT   T1.FinReference, T1.FinODSchdDate, T1.FinODFor, T1.MovementDate, T1.SeqNo, T1.ODDays, T1.FinCurODAmt, T1.FinCurODPri, T1.FinCurODPft, 
                      T1.PenaltyType, T1.PenaltyCalOn, T1.PenaltyAmtPerc, T1.Penalty, T1.MaxWaiver, T1.WaivedAmt, T1.PenaltyPaid, T1.PenaltyBal, T1.RcdCanDel, 
                      T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName
                      , T2.FinStartDate lovDescFinStartDate, T2.MaturityDate lovDescMaturityDate, T2.FinAmount lovDescFinAmount
                      , T2.FinAmount-T2.FinRepaymentAmount lovDescCurFinAmt,T2.FinCcy
					  , (Select SUM(PrincipalSchd) From FinScheduleDetails where SchDate &lt;= T1.FinODSchdDate AND FinReference=T1.FinReference) LovDescCurSchPriDue
					  , (Select SUM(ProfitSchd) from FinScheduleDetails where SchDate &lt;= T1.FinODSchdDate AND FinReference=T1.FinReference) LovDescCurSchPftDue
					  , (Select SUM(Penalty) From FinODCRecovery Where FinReference=T1.FinReference) LovDescTotOvrDueChrg
					  , (Select SUM(WaivedAmt) From FinODCRecovery WHERE FinReference=T1.FinReference) LovDescTotOvrDueChrgWaived
					  , (Select SUM(PenaltyPaid) From FinODCRecovery WHERE FinReference=T1.FinReference) LovDescTotOvrDueChrgPaid
FROM          FinODCRecovery T1 INNER JOIN
                       FinanceMain T2 ON T1.FinReference = T2.FinReference INNER JOIN
                       Customers T4 on T4.CustID=T2.CustID	
	
	</createView>
</changeSet>

<changeSet id="61" author="Prasad" dbms="postgresql">
	<createView viewName="IjarahFinance_View" replaceIfExists="true">
		 SELECT F.FinReference , F.FinType , F.FinCcy , F.ScheduleMethod , 
	 		 	 F.ProfitDaysBasis , C.CustCIF  CustCIF , F.FinBranch , FT.FinCategory ProductCode ,SchDate
				FROM Financemain  F INNER JOIN RMTFinanceTypes FT ON F.FinType = FT.FinType
				INNER JOIN Customers C ON C.CustID = F.CustID
					 INNER JOIN FinScheduleDetails S ON F.Finreference = S.Finreference
				WHERE (ProfitSchd - SchdPftPaid &gt; 0 OR PrincipalSchd- SchdPriPaid &gt; 0 )
					   And Ft.Fincategory = 'IJARAH' AND (BaseRate is not null)
	
	</createView>
</changeSet>
<changeSet id="62" author="Prasad" dbms="postgresql">
	<createView viewName="BulkDefermentFinance_View" replaceIfExists="true">
		SELECT F.FinReference , F.FinType , F.FinCcy ,
	   C.CustCIF CustCIF ,C.CustShrtName CustName, F.FinBranch FinBranch,
	   FT.FinCategory ProductCode ,S.SchDate EventFromDate, 
	   BMT.IntRateBasisDesc ProfitDayBasisDesc,
	   BMTSchd.SchdMethodDesc SchdMethodDesc
FROM Financemain F INNER JOIN RMTFinanceTypes FT ON F.FinType = FT.FinType
INNER JOIN Customers C ON C.CustID = F.CustID
	 INNER JOIN FinScheduleDetails S ON F.Finreference = S.Finreference
	 INNER JOIN BMTIntRateBasisCodes BMT ON BMT.IntRateBasisCode = F.ProfitDaysBasis
	 INNER JOIN BMTSchdMethod BMTSchd ON BMTSchd.SchdMethod = F.ScheduleMethod
WHERE (ProfitSchd - SchdPftPaid &gt; 0 OR PrincipalSchd - SchdPriPaid &gt; 0 ) and F.Finreference IN (
	   SELECT FinDefermentHeader.FinReference FROM
	   (SELECT FinReference,Count(FinReference) cnt FROM FinDefermentHeader GROUP BY FinReference) FinDefermentHeader
	    INNER JOIN Financemain A on A.FinReference = FinDefermentHeader.FinReference WHERE cnt &lt; defferments)
	
	</createView>
</changeSet>
<changeSet id="63" author="Prasad" dbms="postgresql">
	<createView viewName="FinScheduleDetails_IView" replaceIfExists="true">
		
	SELECT RepayAccountId, FinType, FinReference, SchDate, FinCcy, RepayAmount  FROM
		(SELECT ROW_NUMBER() OVER (PARTITION BY T1.FinReference ORDER BY T1.SchDate) ROW_NUM, 
		T2.RepayAccountId, T2.FinType, T2.FinReference, T1.SchDate, T2.FinCcy, T1.RepayAmount  
		     FROM FinScheduleDetails T1
		            JOIN FinanceMain T2
		             ON T1.FinReference = T2.FinReference
		             WHERE T1.ProfitSchd - T1.SchdPftPaid +  T1.PrincipalSchd - T1.SchdPriPaid  != 0
		             AND T1.SchDate &gt; (select cast(SysParmValue as date)  from SMTparameters where SysParmCode = 'APP_DATE')
		) Temp where Temp.ROW_NUM=1
	</createView>
</changeSet>
<changeSet id="64" author="Prasad" dbms="postgresql">
	<createView viewName="Investment_Deal_TView" replaceIfExists="true">
		SELECT     T1.FinReference, T1.InvestmentRef, T1.FinType, T3.FinTypeDesc lovDescFinTypeName, T1.FinCcy,  
                     T1.FinAmount, T1.TotalProfit, T1.TotalRepayAmt, T1.FinStartDate, T1.MaturityDate, T1.LastRepayDate, T1.LastRepayPftDate, 
                      T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.RecordStatus, T1.RecordType, T1.RoleCode, T1.NextRoleCode, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.TaskId, T1.NextTaskId, T1.WorkflowId, T2.CustID, T2.CustCIF lovDescCustCif, T2.CustShrtName lovDescCustShrtName, 
                      T3.FinCategory lovDescProductCodeName,T1.RepayProfitRate, T1.FinBranch, T7.BranchDesc lovDescFinBranchName, 
                      T1.ScheduleMethod, T10.SchdMethodDesc lovDescScheduleMethodName, T1.ProfitDaysBasis, 
                      T9.IntRateBasisCode LovDescProfitDaysBasisName, T1.DisbAccountId, T1.RepayAccountId
FROM          FinanceMain_Temp T1 INNER JOIN
                       Customers T2 ON T1.CustID = T2.CustID INNER JOIN
                       RMTFinanceTypes T3 ON T3.FinType = T1.FinType INNER JOIN
                       InvestmentFinHeader_View T6 ON T6.InvestmentRef = T1.InvestmentRef INNER JOIN
                       RMTBranches T7 ON T7.BranchCode = T1.FinBranch INNER JOIN
                       BMTIntRateBasisCodes T9 ON T9.IntRateBasisCode = T1.ProfitDaysBasis INNER JOIN
                       BMTSchdMethod T10 ON T1.ScheduleMethod = T10.SchdMethod
	
	</createView>
</changeSet>
	
</databaseChangeLog>
