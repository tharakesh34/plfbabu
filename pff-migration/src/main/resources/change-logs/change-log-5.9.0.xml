<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1_pre" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="01" author="saisandeep.b">
		<comment>CustID added</comment>
		<createView viewName="FINANCEMAIN_LVIEW" replaceIfExists="true">
			<![CDATA[
			    SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.FINTYPE,
				    T1.FINCCY,
				    T1.FINAMOUNT,
				    T1.DOWNPAYMENT,
				    T1.FEECHARGEAMT,
				    T1.SCHEDULEMETHOD,
				    T1.NUMBEROFTERMS,
				    T1.RECORDSTATUS,
				    T1.RECORDTYPE,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.FINBRANCH,
				    T1.FINCONTRACTDATE,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T1.WORKFLOWID,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.FINPREAPPROVEDREF,
				    T1.RCDMAINTAINSTS,
				    T1.INSURANCEAMT,
				    T1.FINCURRASSETVALUE,
				    T1.CALTERMS,
				    T1.DEVIATIONAPPROVAL,
				    T1.FINPURPOSE,
				    T1.INITIATEDATE,
				    T1.FINASSETVALUE,
				    T2.CUSTID,
				    T2.CUSTCIF LOVDESCCUSTCIF,
				    T2.CUSTSHRTNAME LOVDESCCUSTSHRTNAME,
				    T2.CUSTPASSPORTNO LOVDESCCUSTPASSPORTNO,
				    T2.CUSTDOB LOVDESCCUSTDOB,
				    T2.CUSTCRCPR LOVDESCCUSTCRCPR,
				    T2.PHONENUMBER,
				    T3.FINCATEGORY LOVDESCPRODUCTCODENAME,
				    T3.FINDIVISION LOVDESCFINDIVISION,
				    T3.PRODUCT LOVDESCFINPRODUCT,
				    T3.FINTYPEDESC LOVDESCFINTYPENAME,
				    COALESCE(T4.ROLEDESC, ${add.schema}FN_GET_ROLEDESC(T1.NEXTROLECODE)) LOVDESCREQUESTSTAGE,
				    T1.SAMPLINGREQUIRED,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.GRACETERMS,
				    T1.PRODUCTCATEGORY,
				    T1.VERSION
				    FROM FINANCEMAIN_TEMP T1
				    JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				    JOIN RMTFINANCETYPES T3 ON T3.FINTYPE = T1.FINTYPE
				    LEFT JOIN SECROLES T4 ON T1.NEXTROLECODE = T4.ROLECD
					]]>
		</createView>
	</changeSet>

	<changeSet id="1_post" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="02" author="saisandeep.b">
		<sql>
			<![CDATA[
				Delete from BMTAMOUNTCODES where AllowedEvent = 'FEEPAY' and AmountCode = 'ae_toExcessAmt';
	 			INSERT INTO BMTAMOUNTCODES  VALUES ('FEEPAY', 0, 'ae_toExcessAmt', 'To Excess Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="03" author="saisandeep.b">
		<sql>
			<![CDATA[
				Update SeqSecRights Set SeqNo= (Select MAX(RIGHTID) + 1 from SecRights_View);
				Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights_View);
				
				INSERT INTO SECRIGHTS VALUES ((Select max(RightID)+1 from SECRIGHTS),3,'FeeReceiptDialog_AllocatePaid','FeeReceiptDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);			
				INSERT INTO SecGroupRights( GrpRightID, GrpID, RightID, AccessType, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId ) Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FEERECEIPT_MAKER') , (select RightID from SecRights where RightName ='FeeReceiptDialog_AllocatePaid') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				
				Update SeqSecRights Set SeqNo= (Select MAX(RIGHTID) + 1 from SecRights_View);
				Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights_View);
			]]>
		</sql>
	</changeSet>

	<changeSet id="04" author="saisandeep.b">
		<sql>
			<![CDATA[
				Delete from ERRORDETAILS where code ='IMD001';
				Insert into ERRORDETAILS values ('IMD001', 'EN', 'E', 'Loan Cannot Be Proceed Further,  Due To In Progress Receipts In Upfront.', null, 'Approved', null, null, null, null, null, 0, null, 1000, 0);
		
				Delete from ERRORDETAILS where code ='IMD002';
				Insert into ERRORDETAILS values ('IMD002', 'EN', 'E', 'Unable to process the request due to In-Progress Receipts In {0} .', null, 'Approved', null, null, null, null, null, 0, null, 1000, 0);

				Delete from ERRORDETAILS where code ='IMD003';
				Insert into ERRORDETAILS values ('IMD003', 'EN', 'E', 'For the {0} paidAmount should be less than/equal to remaining amount {1} .', null, 'Approved', null, null, null, null, null, 0, null, 1000, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="05" author="saisandeep.b">
		<comment>Change mapping of Receipt Header and details to temp</comment>
		<createView viewName="FINFEERECEIPTS_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.Id,
					T1.FEEID,
					T1.RECEIPTID,
					T1.PAIDAMOUNT,
					T1.Version,
					T1.LastMntBy,
					T1.LastMntOn,
					T1.RecordStatus,
					T1.RoleCode,
					T1.NextRoleCode,
					T1.TaskId,
					T1.NextTaskId,
					T1.RecordType,
					T1.WorkflowId,
					T2.AMOUNT ReceiptAmount,
					T2.TRANSACTIONREF,
					T2.FAVOURNUMBER,
					T3.FEETYPEID,
					T3.VASREFERENCE ,
					T4.FeeTypeCode,
					T4.FeeTypeDesc,
					T5.RECEIPTMODE ReceiptType
					FROM FinFeeReceipts_Temp T1
					INNER JOIN FINRECEIPTDETAIL_Temp T2 ON T1.ReceiptID = T2.RECEIPTID
					INNER JOIN FinFeeDetail_View T3 ON T1.FeeId = T3.FEEID
					LEFT JOIN FeeTypes T4 ON T3.FeeTypeId = T4.FeeTypeId
					INNER JOIN FINRECEIPTHEADER_Temp T5 ON T1.RECEIPTID = T5.RECEIPTID
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="06" author="saisandeep.b">
		<comment>Change mapping of Receipt Header and details to MAIN</comment>
		<createView viewName="FINFEERECEIPTS_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.Id,
					T1.FEEID,
					T1.RECEIPTID,
					T1.PAIDAMOUNT,
					T1.Version ,
					T1.LastMntBy,
					T1.LastMntOn,
					T1.RecordStatus,
					T1.RoleCode,
					T1.NextRoleCode,
					T1.TaskId,
					T1.NextTaskId,
					T1.RecordType,
					T1.WorkflowId,
					T2.AMOUNT ReceiptAmount,
					T2.TRANSACTIONREF,
					T2.FAVOURNUMBER,
					T3.FEETYPEID,
					T3.VASREFERENCE ,
					T4.FeeTypeCode,
					T4.FeeTypeDesc,
					T5.RECEIPTMODE ReceiptType,
					T3.finreference
					FROM FinFeeReceipts T1
					INNER JOIN FINRECEIPTDETAIL T2 ON T1.ReceiptID = T2.RECEIPTID
					INNER JOIN FinFeeDetail_View T3 ON T1.FeeId = T3.FEEID
					LEFT JOIN FeeTypes T4 ON T3.FeeTypeId = T4.FeeTypeId
					INNER JOIN FINRECEIPTHEADER T5 ON T1.RECEIPTID = T5.RECEIPTID	
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="07" author="saisandeep.b">
		<comment>Change mapping of FinFeeDetail table to view </comment>
		<createView viewName="FINFEERECEIPTS_VIEW" replaceIfExists="true">
		   <![CDATA[
			SELECT T1.Id,
			T1.FEEID,
			T1.RECEIPTID,
			T1.PAIDAMOUNT,
			T1.Version ,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId,
			T2.AMOUNT ReceiptAmount,
			T2.TRANSACTIONREF,
			T2.FAVOURNUMBER,
			T3.FEETYPEID,
			T3.VASREFERENCE ,
			T4.FeeTypeCode,
			T4.FeeTypeDesc,
			T3.finreference,
			T5.RECEIPTMODE ReceiptType
			FROM FinFeeReceipts_Temp T1
			INNER JOIN FINRECEIPTDETAIL T2 ON T1.ReceiptID = T2.RECEIPTID
			INNER JOIN FinFeeDetail_view T3 ON T1.FeeId = T3.FEEID
			LEFT JOIN FeeTypes T4 ON T3.FeeTypeId = T4.FeeTypeId
			INNER JOIN FINRECEIPTHEADER T5 ON T1.RECEIPTID = T5.RECEIPTID

			UNION ALL

			SELECT T1.Id,
			T1.FEEID,
			T1.RECEIPTID,
			T1.PAIDAMOUNT,
			T1.Version ,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId,
			T2.AMOUNT ReceiptAmount,
			T2.TRANSACTIONREF,
			T2.FAVOURNUMBER,
			T3.FEETYPEID,
			T3.VASREFERENCE,
			T4.FeeTypeCode,
			T4.FeeTypeDesc,
			T3.finreference,
			T5.RECEIPTMODE ReceiptType
			FROM FinFeeReceipts T1
			INNER JOIN FINRECEIPTDETAIL T2 ON T1.ReceiptID = T2.RECEIPTID
			INNER JOIN FinFeeDetail_view T3 ON T1.FeeId = T3.FEEID
			LEFT JOIN FeeTypes T4 ON T3.FeeTypeId = T4.FeeTypeId
			INNER JOIN FINRECEIPTHEADER T5 ON T1.RECEIPTID = T5.RECEIPTID
			WHERE (NOT EXISTS(SELECT 1 FROM FinFeeReceipts_Temp WHERE (Id = T1.Id)))
			]]>
		</createView>
	</changeSet>

	<changeSet id="08" author="saisandeep.b">
		<comment>FinFeeRefund Security Operations</comment>
		<sql>
			<![CDATA[
				Update SeqSecRights Set SeqNo= (Select MAX(RIGHTID) + 1 from SecRights_View);
				Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights_View);
				
				INSERT INTO SECRIGHTS VALUES ((Select Max(RightID)+1 From SECRIGHTS), 3, 'ReceiptCancellationDialog_bounceCode', 'ReceiptCancellationDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
				INSERT INTO SECRIGHTS VALUES ((Select Max(RightID)+1 From SECRIGHTS), 3, 'ReceiptCancellationDialog_bounceRemarks', 'ReceiptCancellationDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
				
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='RECEIPTCANCEL_MAKER') , (select RightID from SecRights where RightName ='ReceiptCancellationDialog_bounceCode') , 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved' , '' , '' , '' , '' , '' , 0 ) ;
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='RECEIPTCANCEL_MAKER') , (select RightID from SecRights where RightName ='ReceiptCancellationDialog_bounceRemarks') , 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved' , '' , '' , '' , '' , '' , 0 ) ;
				
				Update SeqSecRights Set SeqNo= (Select MAX(RIGHTID) + 1 from SecRights_View);
				Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights_View);
			]]>
		</sql>
	</changeSet>

	<changeSet id="09" author="saisandeep.b">
		<comment>FinFeeRefund Security Operations</comment>
		<sql>
			<![CDATA[
				Update SeqSecRights Set SeqNo= (Select MAX(RIGHTID) + 1 from SecRights_View);
				Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups_View);
				Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights_View); 
				
				INSERT INTO SecGroups Values ( ( select max(Grpid)+1 from SecGroups ),'FinFeeRefund_MAKER' ,'FinFeeRefund MAKER DESC' ,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				INSERT INTO SecGroups Values ( ( select max(Grpid)+1 from SecGroups ),'FinFeeRefund_Approver' ,'FinFeeRefund APPROVER DESC' ,1,1000,CURRENT_TIMESTAMP,'' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				
				INSERT INTO SECRIGHTS VALUES ((Select Max(RightID)+1 From SECRIGHTS),0,'menuItem_FinanceManagement_FinFeeRefunds','MENU',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='menuItem_FinanceManagement_FinFeeRefunds') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_Approver') , (select RightID from SecRights where RightName ='menuItem_FinanceManagement_FinFeeRefunds') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				
				INSERT INTO SECRIGHTS VALUES ((Select Max(RightID)+1 From SECRIGHTS),2,'button_FeeReceiptList_NewFeeReceipt','FinFeeRefundList',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='button_FeeReceiptList_NewFeeReceipt') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				
				INSERT INTO SECRIGHTS  VALUES ((Select Max(RightID)+1 From SECRIGHTS),2,'button_FinFeeRefundDialog_btnNew','FinFeeRefundDialog',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SECRIGHTS  VALUES ((Select Max(RightID)+1 From SECRIGHTS),2,'button_FinFeeRefundDialog_btnEdit','FinFeeRefundDialog',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SECRIGHTS  VALUES ((Select Max(RightID)+1 From SECRIGHTS),2,'button_FinFeeRefundDialog_btnDelete','FinFeeRefundDialog',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SECRIGHTS  VALUES ((Select Max(RightID)+1 From SECRIGHTS),2,'button_FinFeeRefundDialog_btnSave','FinFeeRefundDialog',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SECRIGHTS  VALUES ((Select Max(RightID)+1 From SECRIGHTS),3,'FinFeeRefundDialog_Refund','FinFeeRefundDialog',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnNew') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnEdit') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnDelete') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnSave') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='FinFeeRefundDialog_Refund') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_Approver') , (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnSave') ,1,1,1000,CURRENT_TIMESTAMP,'Approved' ,'' ,'' ,'' ,'' ,'' ,0 ) ;
				
				Update SeqSecRights Set SeqNo= (Select MAX(RIGHTID) + 1 from SecRights_View);
				Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups_View);
				Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights_View);
			]]>
		</sql>
	</changeSet>

	<changeSet id="10" author="saisandeep.b">
		<createTable tableName="FinFeeRefundHeader">
			<column name="HeaderId" type="bigint">
				<constraints primaryKey="true" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="LinkedTranId" type="bigint" />
			<column name="version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="10.1" author="saisandeep.b" dbms="mssql">
		<sql>
		<![CDATA[
			alter table FinFeeRefundHeader add constraint df_FINFEEREF_version default 0 for Version;
			alter table	FinFeeRefundHeader add constraint df_FINFEEREF_workflowId default 0 for WorkflowId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="10.2" author="saisandeep.b" dbms="postgresql, oracle">
		<comment>adding default constraint</comment>
		<addDefaultValue columnName="Version" tableName="FinFeeRefundHeader" defaultValue="0" />
		<addDefaultValue columnName="WorkflowId" tableName="FinFeeRefundHeader" defaultValue="0" />
	</changeSet>

	<changeSet id="11" author="saisandeep.b">
		<createTable tableName="FinFeeRefundHeader_TEMP">
			<column name="HeaderId" type="bigint">
				<constraints primaryKey="true" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="LinkedTranId" type="bigint" />
			<column name="version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="11.1" author="saisandeep.b" dbms="mssql">
		<sql>
		<![CDATA[
			alter table FinFeeRefundHeader_TEMP add constraint df_FINFEEREFT_version default 0 for Version;
			alter table	FinFeeRefundHeader_TEMP add constraint df_FINFEEREFT_workflowId default 0 for WorkflowId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="11.2" author="saisandeep.b" dbms="postgresql, oracle">
		<comment>adding default constraint</comment>
		<addDefaultValue columnName="Version" tableName="FinFeeRefundHeader_TEMP" defaultValue="0" />
		<addDefaultValue columnName="WorkflowId" tableName="FinFeeRefundHeader_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="12.1" author="saisandeep.b">
		<comment>Sequence For FinFeeRefundHeader</comment>
		<createSequence sequenceName="SeqFinFeeRefundHeader" incrementBy="1" startValue="1" minValue="1"
			maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="13" author="saisandeep.b">
		<createTable tableName="FinFeeRefundDetails">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" />
			</column>
			<column name="HeaderId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FeeId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="refundAmount" type="bigint" />
			<column name="refundAmtGST" type="bigint" />
			<column name="refundAmtOriginal" type="bigint" />
			<column name="version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="13.1" author="saisandeep.b" dbms="mssql">
		<sql>
		<![CDATA[
			alter table FinFeeRefundDetails add constraint df_FINFEEREFDTLS_version default 0 for Version;
			alter table	FinFeeRefundDetails add constraint df_FINFEEREFDTLS_workflowId default 0 for WorkflowId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="13.2" author="saisandeep.b" dbms="postgresql, oracle">
		<comment>adding default constraint</comment>
		<addDefaultValue columnName="Version" tableName="FinFeeRefundDetails" defaultValue="0" />
		<addDefaultValue columnName="WorkflowId" tableName="FinFeeRefundDetails" defaultValue="0" />
	</changeSet>

	<changeSet id="13.3" author="saisandeep.b">
		<addForeignKeyConstraint constraintName="FK_FinFeeRefundDetails" baseTableName="FinFeeRefundDetails"
			baseColumnNames="HeaderId" referencedColumnNames="HeaderId" referencedTableName="FinFeeRefundHeader" />
	</changeSet>

	<changeSet id="14" author="saisandeep.b">
		<createTable tableName="FinFeeRefundDetails_Temp">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" />
			</column>
			<column name="HeaderId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FeeId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="refundAmount" type="bigint" />
			<column name="refundAmtGST" type="bigint" />
			<column name="refundAmtOriginal" type="bigint" />
			<column name="version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="14.1" author="saisandeep.b" dbms="mssql">
		<sql>
		<![CDATA[
			alter table FinFeeRefundDetails_Temp add constraint df_FINFEEREFDTLST_version default 0 for Version;
			alter table	FinFeeRefundDetails_Temp add constraint df_FINFEEREFDTLST_workflowId default 0 for WorkflowId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="14.2" author="saisandeep.b" dbms="postgresql, oracle">
		<comment>adding default constraint</comment>
		<addDefaultValue columnName="Version" tableName="FinFeeRefundDetails_Temp" defaultValue="0" />
		<addDefaultValue columnName="WorkflowId" tableName="FinFeeRefundDetails_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="14.3" author="saisandeep.b">
		<addForeignKeyConstraint constraintName="FK_FinFeeRefundDetails_Temp" baseTableName="FinFeeRefundDetails_Temp"
			baseColumnNames="HeaderId" referencedColumnNames="HeaderId" referencedTableName="FinFeeRefundHeader_TEMP" />
	</changeSet>

	<changeSet id="15.1" author="saisandeep.b">
		<comment>Sequence For FinFeeRefundDetails</comment>
		<createSequence sequenceName="SeqFinFeeRefundDetails" incrementBy="1" startValue="1" minValue="1"
			maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="16" author="saisandeep.b">
		<createView viewName="FinFeeRefundHeader_View" replaceIfExists="true">
		<![CDATA[
			SELECT T1.HeaderID,
			T1.FinReference,
			T1.LinkedTranId,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId,
			T2.Fintype,
			T2.FinBranch,
			T2.CustID,
			T2.FinCcy,
			T3.CustCIF LovDescCustCIF,
			T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc,
			T5.branchdesc
			FROM FinFeeRefundHeader_TEMP T1
			LEFT JOIN FinanceMain_view T2 ON T2.FinReference =T1.FinReference
			LEFT JOIN Customers T3 ON T3.CustID=T2.CustID
			LEFT JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode

			UNION ALL

			SELECT T1.HeaderID,
			T1.FinReference,
			T1.LinkedTranId,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId,
			T2.Fintype,
			T2.FinBranch,
			T2.CustID,
			T2.FinCcy,
			T3.CustCIF LovDescCustCIF,
			T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc,
			T5.branchdesc
			FROM FinFeeRefundHeader T1
			LEFT JOIN FinanceMain_view T2 ON T2.FinReference =T1.FinReference
			LEFT JOIN Customers T3 ON T3.CustID=T2.CustID
			LEFT JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			WHERE NOT EXISTS(SELECT 1 FROM FinFeeRefundHeader_TEMP WHERE HeaderID =T1.HeaderID)
			]]>
		</createView>
	</changeSet>

	<changeSet id="17" author="saisandeep.b">
		<createView viewName="FinFeeRefundHeader_TView" replaceIfExists="true">
		<![CDATA[
			SELECT T1.HeaderID,
			T1.FinReference,
			T1.LinkedTranId,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId,
			T2.Fintype,
			T2.FinBranch,
			T2.CustID,
			T2.FinCcy,
			T3.CustCIF LovDescCustCIF,
			T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc,
			T5.branchdesc
			FROM FinFeeRefundHeader_TEMP T1
			LEFT JOIN FinanceMain_view T2 ON T2.FinReference =T1.FinReference
			LEFT JOIN Customers T3 ON T3.CustID=T2.CustID
			LEFT JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			]]>
		</createView>
	</changeSet>

	<changeSet id="18" author="saisandeep.b">
		<createView viewName="FinFeeRefundHeader_AView" replaceIfExists="true">
		<![CDATA[
			SELECT T1.HeaderID,
			T1.FinReference,
			T1.LinkedTranId,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId,
			T2.Fintype,
			T2.FinBranch,
			T2.CustID,
			T2.FinCcy,
			T3.CustCIF LovDescCustCIF,
			T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc,
			T5.branchdesc
			FROM FinFeeRefundHeader T1
			LEFT JOIN FinanceMain_view T2 ON T2.FinReference =T1.FinReference
			LEFT JOIN Customers T3 ON T3.CustID=T2.CustID
			LEFT JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			]]>
		</createView>
	</changeSet>

	<changeSet id="19" author="saisandeep.b">
		<createView viewName="FinFeeRefundDetails_View" replaceIfExists="true">
		<![CDATA[
			SELECT T1.Id,
			T1.HeaderId,
			T1.FeeId,
			T1.refundAmount,
			T1.refundAmtGST,
			T1.refundAmtOriginal,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId
			FROM FinFeeRefundDetails_temp T1

			UNION ALL

			SELECT T1.Id,
			T1.HeaderId,
			T1.FeeId,
			T1.refundAmount,
			T1.refundAmtGST,
			T1.refundAmtOriginal,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId
			FROM FinFeeRefundDetails T1
			WHERE NOT EXISTS(SELECT 1 FROM FinFeeRefundDetails_temp WHERE Id =T1.Id)
			]]>
		</createView>
	</changeSet>

	<changeSet id="20" author="saisandeep.b">
		<createView viewName="FinFeeRefundDetails_TView" replaceIfExists="true">
		<![CDATA[
			SELECT T1.Id,
			T1.HeaderId,
			T1.FeeId,
			T1.refundAmount,
			T1.refundAmtGST,
			T1.refundAmtOriginal,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId
			FROM FinFeeRefundDetails_temp T1
			]]>
		</createView>
	</changeSet>

	<changeSet id="21" author="saisandeep.b">
		<createView viewName="FinFeeRefundDetails_AView" replaceIfExists="true">
		<![CDATA[
			SELECT T1.Id,
			T1.HeaderId,
			T1.FeeId,
			T1.refundAmount,
			T1.refundAmtGST,
			T1.refundAmtOriginal,
			T1.Version,
			T1.LastMntBy,
			T1.LastMntOn,
			T1.RecordStatus,
			T1.RoleCode,
			T1.NextRoleCode,
			T1.TaskId,
			T1.NextTaskId,
			T1.RecordType,
			T1.WorkflowId
			FROM FinFeeRefundDetails T1
			]]>
		</createView>
	</changeSet>

	<changeSet id="22" author="saisandeep.b">
		<sql>
			<![CDATA[
				INSERT INTO BMTAEEVENTS(AEEventCode, AEEventCodeDesc, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, Active)
				VALUES ('FEREFUND', 'Accounting on Fee Refund', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);
				 
				INSERT INTO BMTAMOUNTCODES (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId)
				VALUES ('FEREFUND', 0, 'ae_toExcessAmt', 'To Excess Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="23" author="saisandeep.b">
		<sql>
			<![CDATA[
				UPDATE SeqSecRoles SET SeqNo = (Select MAX(RoleID) + 1 from SecRoles_View);
				
				INSERT INTO SecRoles  VALUES ((select max(RoleID)+1 from SecRoles), 1, 'FINFEEREFUND_MAKER', 'Maker for Fee Refund', '', 1, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
				INSERT INTO SecRoles  VALUES ((select max(RoleID)+1 from SecRoles), 1, 'FINFEEREFUND_APPROVER', 'Approver for Fee Refund', '', 1, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
				
				UPDATE SeqSecRoles SET SeqNo = (Select MAX(RoleID) + 1 from SecRoles_View);
			]]>
		</sql>
	</changeSet>

	<changeSet id="24" author="saisandeep.b">
		<sql>
			<![CDATA[
				UPDATE SeqSecRoleGroups SET SeqNo = (Select MAX(RoleID) + 1 from SecRoleGroups_View);
				
				INSERT INTO SecRoleGroups VALUES((Select MAX(RoleGrpID)+1 From SecRoleGroups), (Select GrpId  From SecGroups Where GrpCode='FinFeeRefund_MAKER'),  (Select  RoleID  From SecRoles Where RoleCd='FINFEEREFUND_MAKER'), 0, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);			UPDATE SeqSecRoles SET SeqNo = (Select MAX(RoleID) + 1 from SecRoles_View);
				INSERT INTO SecRoleGroups VALUES((Select MAX(RoleGrpID)+1 From SecRoleGroups), (Select GrpId  From SecGroups Where GrpCode='FinFeeRefund_Approver'),  (Select  RoleID  From SecRoles Where RoleCd='FINFEEREFUND_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
				
				UPDATE SeqSecRoleGroups SET SeqNo = (Select MAX(RoleID) + 1 from SecRoleGroups_View);
			]]>
		</sql>
	</changeSet>

	<changeSet id="25" author="saisandeep.b">
		<sql>
			<![CDATA[
				Delete From SecGroupRights where GrpID In (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') And RightID = (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnNew');
				Delete From SecGroupRights where GrpID In (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') And RightID = (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnEdit');
				Delete From SecGroupRights where GrpID In (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') And RightID = (select RightID from SecRights where RightName ='button_FinFeeRefundDialog_btnDelete');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="26" author="saisandeep.b">
		<sql>
			<![CDATA[
				INSERT INTO SECRIGHTS VALUES ((Select Max(RightID)+1 From SECRIGHTS), 0, 'menuItem_Enquiry_FinFeeRefundEnquiry', 'MENU', 0, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
				
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_MAKER') , (select RightID from SecRights where RightName ='menuItem_Enquiry_FinFeeRefundEnquiry') , 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved' , '' , '' , '' , '' , '' , 0 ) ;
				INSERT INTO SecGroupRights Values (  (select max(GrpRightID) + 1 from SecGroupRights) , (select GrpID from SECGROUPS where GrpCode ='FinFeeRefund_Approver') , (select RightID from SecRights where RightName ='menuItem_Enquiry_FinFeeRefundEnquiry') , 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved' , '' , '' , '' , '' , '' , 0 ) ;
				
				Update SeqSecRights Set SeqNo= (Select MAX(RIGHTID) + 1 from SecRights_View);
				Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights_View);
			]]>
		</sql>
	</changeSet>

	<changeSet id="27" author="saisandeep.b">
		<comment>Added PAYMENTTYPE switch case for cash</comment>
		<createView viewName="FINRECEIPTHEADER_FDVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					CASE
						WHEN T1.RECAGAINST = 'C'
						THEN T10.CUSTCIF
						ELSE T1.REFERENCE
						END REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC  FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					(
					CASE
						WHEN T8.PAYMENTTYPE IN ('CHEQUE', 'DD')
						THEN T8.FAVOURNUMBER
						WHEN T8.PAYMENTTYPE IN ('CASH')
						THEN T8.PAYMENTREF
						ELSE T8.TRANSACTIONREF
					END) TRANSACTIONREF,
					T1.CASHIERBRANCH,
					T2.NEXTREPAYRVWDATE,
					T1.INITIATEDATE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T10.CUSTCIF CUSTOMERCIF,
					T10.CUSTSHRTNAME CUSTOMERNAME,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T11.DIVISIONCODEDESC FINDIVISIONDESC,
					T12.BRANCHDESC POSTBRANCHDESC,
					T13.BRANCHDESC CASHIERBRANCHDESC,
					T11.ENTITYCODE,
					T1.INSTRUCTIONUID,
					T1.ACTFINRECEIPT
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN FINRECEIPTDETAIL_TEMP T8 ON T1.RECEIPTID = T8.RECEIPTID
					AND T1.RECEIPTMODE = T8.PAYMENTTYPE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN CUSTOMERS T10 ON CAST(T10.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					LEFT JOIN SMTDIVISIONDETAIL T11 ON T1.FINDIVISION = T11.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.POSTBRANCH = T12.BRANCHCODE
					LEFT JOIN RMTBRANCHES T13 ON T1.CASHIERBRANCH = T13.BRANCHCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="28" author="saisandeep.b">
		<comment>Added PAYMENTTYPE switch case for cash</comment>
		<createView viewName="FinReceiptHeader_FEDView" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					CASE
						WHEN T1.RECAGAINST = 'C'
						THEN T13.CUSTCIF
						ELSE T1.REFERENCE
					END  REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC  FINBRANCHDESC,
					T5.CCYDESC     FINCCYDESC,
					T7.REJECTDESC  CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0)  FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS  PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0)  CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					(
					CASE
						WHEN T8.PAYMENTTYPE IN ('CHEQUE', 'DD')
						THEN T8.FAVOURNUMBER
						WHEN T8.PAYMENTTYPE IN ('CASH')
						THEN T8.PAYMENTREF
						ELSE T8.TRANSACTIONREF
					END) TRANSACTIONREF,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC  FINDIVISIONDESC,
					T11.BRANCHDESC        POSTBRANCHDESC,
					T12.BRANCHDESC        CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE         COLLECTIONAGENTCODE,
					T9.DESCRIPTION  COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF       CUSTOMERCIF,
					T13.CUSTSHRTNAME  CUSTOMERNAME
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN FINRECEIPTDETAIL T8 ON T1.RECEIPTID    = T8.RECEIPTID
					AND T1.RECEIPTMODE = T8.PAYMENTTYPE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID as VARCHAR(20)) = T1.REFERENCE
				  
				UNION ALL
				
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					CASE
						WHEN T1.RECAGAINST = 'C'
						THEN T13.CUSTCIF
						ELSE T1.REFERENCE
					END  REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0)  FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS  PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0)  CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					(CASE
						WHEN T8.PAYMENTTYPE IN ('CHEQUE', 'DD')
						THEN T8.FAVOURNUMBER
						WHEN T8.PAYMENTTYPE IN ('CASH')
						THEN T8.PAYMENTREF
						ELSE T8.TRANSACTIONREF
					END) TRANSACTIONREF,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC  FINDIVISIONDESC,
					T11.BRANCHDESC        POSTBRANCHDESC,
					T12.BRANCHDESC        CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE         COLLECTIONAGENTCODE,
					T9.DESCRIPTION  COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF       CUSTOMERCIF,
					T13.CUSTSHRTNAME  CUSTOMERNAME
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN FINRECEIPTDETAIL T8 ON T1.RECEIPTID    = T8.RECEIPTID
					AND T1.RECEIPTMODE = T8.PAYMENTTYPE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID as VARCHAR(20)) = T1.REFERENCE
					WHERE NOT (EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP
					WHERE FINRECEIPTHEADER_TEMP.RECEIPTID = T1.RECEIPTID))
			]]>
		</createView>
	</changeSet>

	<changeSet id="29" author="saisandeep.b">
		<sql>
			<![CDATA[
				Delete from BMTAMOUNTCODES where AllowedEvent = 'FEEPAY' and AmountCode = 'ae_paidVasFee';
			 	INSERT INTO BMTAMOUNTCODES  VALUES ('FEEPAY', 0, 'ae_paidVasFee', 'To Excess Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
			 	
				Delete from BMTAMOUNTCODES where AllowedEvent = 'FEREFUND' and AmountCode = 'ae_refundVasFee';
			 	INSERT INTO BMTAMOUNTCODES  VALUES ('FEREFUND', 0, 'ae_refundVasFee', 'To Excess Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
	 		]]>
		</sql>
	</changeSet>

	<changeSet id="30" author="saisandeep.b">
		<comment>View to fetch cancel or rejected finances</comment>
		<createView viewName="FeeRefundFinanceMain_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FM.FinReference,
					FM.Fintype,
					FM.FinCcy,
					FM.FinBranch,
					FM.ClosingStatus
					FROM FinanceMain FM
					WHERE ClosingStatus ='C'
				  
				UNION ALL
				  
				SELECT RF.FinReference,
					RF.Fintype,
					RF.FinCcy,
					RF.FinBranch,
					RF.ClosingStatus
					FROM RejectFinanceMain RF
					WHERE NOT EXISTS
					(SELECT 1
					FROM FinanceMain
					WHERE FinReference = RF.FinReference
					AND ClosingStatus  ='C'
					)
					AND FinReference IN
					(SELECT REFERENCE
					FROM FinReceiptHeader
					WHERE ReceiptPurpose ='FEEPAYMENT'
					AND ReceiptModeStatus !='C'
					)
			]]>
		</createView>
	</changeSet>

	<changeSet id="31" author="saisandeep.b">
		<sql>
			<![CDATA[
				INSERT INTO CATEGORYWISEEVENTS (aeeventcode, categorycode, active, mandatory, seqorder) VALUES ('FEREFUND', 'F', 1, 0, (Select Max(seqorder)+1 From CATEGORYWISEEVENTS));
	 		]]>
		</sql>
	</changeSet>

	<changeSet id="32" author="saisandeep.b">
		<comment>ST#55 and TK#135 bankbranchid column added to capture bank branch details in IMD for CHEQUE and DD</comment>
		<addColumn tableName="FinReceiptDetail">
			<column name="bankbranchid" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="33" author="saisandeep.b" dbms="mssql">
		<comment>ST#55 and TK#135 bankbranchid column added to capture bank branch details in IMD for CHEQUE and DD</comment>
		<sql>
			<![CDATA[
				ALTER TABLE FinReceiptDetail ADD CONSTRAINT DF_FRD_bankbranchid DEFAULT 0 FOR bankbranchid;
			]]>
		</sql>
	</changeSet>

	<changeSet id="33" author="saisandeep.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="bankbranchid" tableName="FinReceiptDetail" defaultValue="0" />
	</changeSet>

	<changeSet id="34" author="saisandeep.b">
		<comment>ST#55 and TK#135 bankbranchid column added to capture bank branch details in IMD for CHEQUE and DD</comment>
		<addColumn tableName="FinReceiptDetail_temp">
			<column name="bankbranchid" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="35" author="saisandeep.b" dbms="mssql">
		<comment>ST#55 and TK#135 bankbranchid column added to capture bank branch details in IMD for CHEQUE and DD</comment>
		<sql>
			<![CDATA[
				ALTER TABLE FinReceiptDetail_temp ADD CONSTRAINT DF_FRD_Temp_bankbranchid DEFAULT 0 FOR bankbranchid;
			]]>
		</sql>
	</changeSet>

	<changeSet id="35" author="saisandeep.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="bankbranchid" tableName="FinReceiptDetail_temp" defaultValue="0" />
	</changeSet>

	<changeSet id="36_pre" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptdetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="36" author="saisandeep.b">
		<comment>ST#55 and TK#135 bankbranchid,ifsc,branchdesc columns added for IMD</comment>
		<createView viewName="finreceiptdetail_tview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.receiptid,
					t1.receiptseqid,
					t1.receipttype,
					t1.paymentto,
					t1.paymenttype,
					t1.payagainstid,
					t1.amount,
					t1.favournumber,
					t1.valuedate,
					t1.bankcode,
					t1.favourname,
					t1.depositdate,
					t1.depositno,
					t1.paymentref,
					t1.transactionref,
					t1.chequeacno,
					t1.fundingac,
					t1.receiveddate,
					t1.status,
					t2.bankname AS bankcodedesc,
					t3.partnerbankcode AS fundingaccode,
					t3.partnerbankname AS fundingacdesc,
					t1.payorder,
					t1.logkey,
					t3.accountno AS partnerbankac,
					t3.actype AS partnerbankactype,
					t5.feetypecode,
					t1.bankbranchid,
					t6.ifsc,
					t6.branchdesc
				   FROM finreceiptdetail_temp t1
				   LEFT JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
				   LEFT JOIN partnerbanks t3 ON t1.fundingac = t3.partnerbankid
				   LEFT JOIN manualadvise t4 ON t1.payagainstid = t4.adviseid AND t1.paymenttype = 'PAYABLE'
				   LEFT JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
				   LEFT JOIN bankbranches t6 ON t1.bankbranchid = t6.bankbranchid
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="36_post" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptdetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="37_pre" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="37" author="saisandeep.b">
		<comment>ST#55 and TK#135 bankbranchid,ifsc,branchdesc columns added for IMD</comment>
		<createView viewName="finreceiptdetail_aview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.receiptid,
					t1.receiptseqid,
					t1.receipttype,
					t1.paymentto,
					t1.paymenttype,
					t1.payagainstid,
					t1.amount,
					t1.favournumber,
					t1.valuedate,
					t1.bankcode,
					t1.favourname,
					t1.depositdate,
					t1.depositno,
					t1.paymentref,
					t1.transactionref,
					t1.chequeacno,
					t1.fundingac,
					t1.receiveddate,
					t1.status,
					t2.bankname AS bankcodedesc,
					t3.partnerbankcode AS fundingaccode,
					t3.partnerbankname AS fundingacdesc,
					t1.payorder,
					t1.logkey,
					t3.accountno AS partnerbankac,
					t3.actype AS partnerbankactype,
					t5.feetypecode,
					t5.feetypedesc,
					t1.bankbranchid,
					t6.ifsc,
					t6.branchdesc
			   	 FROM finreceiptdetail t1
				 LEFT JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
				 LEFT JOIN partnerbanks t3 ON t1.fundingac = t3.partnerbankid
				 LEFT JOIN manualadvise t4 ON t1.payagainstid = t4.adviseid AND t1.paymenttype = 'PAYABLE'
				 LEFT JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
				 LEFT JOIN bankbranches t6 ON t1.bankbranchid = t6.bankbranchid
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="37_post" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="38_pre" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="38" author="saisandeep.b">
		<comment>ST#55 and TK#135 bankbranchid,ifsc,branchdesc columns added for IMD</comment>
		<createView viewName="finreceiptdetail_view" replaceIfExists="true">
			<![CDATA[

				SELECT t4.custcif,
					t1.reference,
					t3.fintype,
					t1.receiptid,
					t1.receiptdate,
					t1.receiptamount,
					t2.depositdate,
					t2.bankcode,
						CASE
							WHEN t1.receiptpurpose = 'EarlyPayment' THEN 'Partial Payment'
							ELSE t1.receiptpurpose
						END AS receiptpurpose,
					t1.receiptmode,
					t1.bouncedate AS canceldate,
					t2.valuedate,
					t2.payagainstid,
					t1.bouncedate,
					t1.realizationdate,
					t1.cancelreason,
					t3.closingstatus,
					t3.finbranch,
					t3.fincurrassetvalue,
					t3.productcategory,
					t6.partnerbankcode,
					t2.transactionref,
					t2.fundingac,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t5.roledesc AS lovdescrequeststage,
					t2.paymenttype,
					t6.actype AS partnerbankactype,
					t6.accountno AS partnerbankac,
					t7.bankname AS bankcodedesc,
					t6.partnerbankname AS fundingacdesc,
					t6.partnerbankcode AS fundingaccode,
					t2.logkey,
					t2.payorder,
					t2.status,
					t2.receiveddate,
					t2.chequeacno,
					t2.paymentref,
					t2.depositno,
					t2.favourname,
					t2.favournumber,
					t2.amount,
					t2.paymentto,
					t2.receipttype,
					t2.receiptseqid,
					t2.bankbranchid,
					t8.ifsc,
					t8.branchdesc
				   FROM finreceiptheader_temp t1
					 LEFT JOIN finreceiptdetail_temp t2 ON t1.receiptid = t2.receiptid
					 LEFT JOIN financemain t3 ON t1.reference = t3.finreference
					 LEFT JOIN customers t4 ON t3.custid = t4.custid
					 LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
					 LEFT JOIN partnerbanks t6 ON t6.partnerbankid = t2.fundingac
					 LEFT JOIN bmtbankdetail t7 ON t2.bankcode = t7.bankcode
					 LEFT JOIN bankbranches t8 ON t2.bankbranchid = t8.bankbranchid
				UNION ALL
				 SELECT t4.custcif,
					t1.reference,
					t3.fintype,
					t1.receiptid,
					t1.receiptdate,
					t1.receiptamount,
					t2.depositdate,
					t2.bankcode,
						CASE
							WHEN t1.receiptpurpose = 'EarlyPayment' THEN 'Partial Payment'
							ELSE t1.receiptpurpose
						END AS receiptpurpose,
					t1.receiptmode,
					t1.bouncedate AS canceldate,
					t2.valuedate,
					t2.payagainstid,
					t1.bouncedate,
					t1.realizationdate,
					t1.cancelreason,
					t3.closingstatus,
					t3.finbranch,
					t3.fincurrassetvalue,
					t3.productcategory,
					t6.partnerbankcode,
					t2.transactionref,
					t2.fundingac,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t5.roledesc AS lovdescrequeststage,
					t2.paymenttype,
					t6.actype AS partnerbankactype,
					t6.accountno AS partnerbankac,
					t7.bankname AS bankcodedesc,
					t6.partnerbankname AS fundingacdesc,
					t6.partnerbankcode AS fundingaccode,
					t2.logkey,
					t2.payorder,
					t2.status,
					t2.receiveddate,
					t2.chequeacno,
					t2.paymentref,
					t2.depositno,
					t2.favourname,
					t2.favournumber,
					t2.amount,
					t2.paymentto,
					t2.receipttype,
					t2.receiptseqid,
					t2.bankbranchid,
					t8.ifsc,
					t8.branchdesc
				   FROM finreceiptheader t1
					 LEFT JOIN finreceiptdetail t2 ON t1.receiptid = t2.receiptid
					 LEFT JOIN financemain t3 ON t1.reference = t3.finreference
					 LEFT JOIN customers t4 ON t3.custid = t4.custid
					 LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
					 LEFT JOIN partnerbanks t6 ON t6.partnerbankid = t2.fundingac
					 LEFT JOIN bmtbankdetail t7 ON t2.bankcode = t7.bankcode
					 LEFT JOIN bankbranches t8 ON t2.bankbranchid = t8.bankbranchid
				  WHERE NOT (EXISTS ( SELECT 1
						   FROM finreceiptheader_temp
						  WHERE finreceiptheader_temp.receiptid = t1.receiptid))
			]]>
		</createView>
	</changeSet>

	<changeSet id="38_post" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptdetail_view');
			]]>
		</sql>
	</changeSet>

	<!-- ST#931 - Pin Code Changes change logs start -->
	<changeSet id="ST#931.1" author="Gopalaswamy.M">
		<addColumn tableName="RMTBRANCHES">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.2" author="Gopalaswamy.M">
		<addColumn tableName="RMTBRANCHES_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.3" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_RMTBRANCHES_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="RMTBRANCHES" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.4" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_RMTBRANCHES_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="RMTBRANCHES_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.5" author="Gopalaswamy.M">
		<createIndex tableName="RMTBRANCHES" indexName="IDX_RMTBRANCHES_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.6" author="Gopalaswamy.M">
		<createIndex tableName="RMTBRANCHES_TEMP" indexName="IDX_RMTBRANCHES_T_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.7_MIG" author="Gopalaswamy.M" dbms="postgresql, mssql">
		<sql>
			<![CDATA[
				Update RMTBRANCHES set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = RMTBRANCHES.PinCode;
				Update RMTBRANCHES_TEMP set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = RMTBRANCHES_TEMP.PinCode;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.7_MIG" author="Gopalaswamy.M" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO RMTBRANCHES B
				USING PinCodes PC ON (PC.PinCode = B.PinCode)
				WHEN MATCHED THEN UPDATE SET B.PinCodeId = PC.PinCodeId;
				
				MERGE INTO RMTBRANCHES_TEMP B
				USING PinCodes PC ON (PC.PinCode = B.PinCode)
				WHEN MATCHED THEN UPDATE SET B.PinCodeId = PC.PinCodeId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.8_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rmtbranches_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.8" author="Gopalaswamy.M">
		<createView viewName="RMTBRANCHES_AVIEW" replaceIfExists="true">
		  <![CDATA[
			 SELECT T1.BRANCHCODE,
			    T1.BRANCHDESC,
			    T1.BRANCHADDRLINE1,
			    T1.BRANCHADDRLINE2,
			    T1.BRANCHPOBOX,
			    T1.BRANCHCITY,
			    T4.PCCITYNAME LOVDESCBRANCHCITYNAME,
			    T1.BRANCHPROVINCE,
			    T3.CPPROVINCENAME LOVDESCBRANCHPROVINCENAME,
			    T1.BRANCHCOUNTRY,
			    T2.COUNTRYDESC LOVDESCBRANCHCOUNTRYNAME,
			    T1.BRANCHFAX,
			    T1.BRANCHTEL,
			    T1.BRANCHSWIFTBANKCDE,
			    T1.BRANCHSWIFTCOUNTRY,
			    T1.BRANCHSWIFTLOCCODE,
			    T1.BRANCHSWIFTBRNCDE,
			    T1.BRANCHSORTCODE,
			    T1.BRANCHISACTIVE,
			    T1.NEWBRANCHCODE,
			    T6.BRANCHDESC NEWBRANCHDESC,
			    T1.VERSION,
			    T1.LASTMNTBY,
			    T1.LASTMNTON,
			    T1.RECORDSTATUS,
			    T1.ROLECODE,
			    T1.NEXTROLECODE,
			    T1.TASKID,
			    T1.NEXTTASKID,
			    T1.RECORDTYPE,
			    T1.WORKFLOWID,
			    T1.MINIBRANCH,
			    T1.BRANCHTYPE,
			    T1.PARENTBRANCH,
			    T1.PINCODE,
			    T1.REGION,
			    T1.BANKREFNO,
			    T1.BRANCHADDRHNBR,
			    T1.BRANCHFLATNBR,
			    T1.BRANCHADDRSTREET,
			    T7.BRANCHDESC PARENTBRANCHDESC,
			    T5.COUNTRYDESC LOVDESCBRANCHSWIFTCOUNTRYNAME,
			    T8.AREANAME PINAREADESC,
			    T1.ENTITY,
			    T10.ENTITYDESC,
			    T1.CLUSTERID,
			    T9.CODE CLUSTERCODE,
			    T9.NAME CLUSTERNAME,
			    T1.PINCODEID
		   FROM RMTBRANCHES T1
		     LEFT JOIN BMTCOUNTRIES T2 ON T1.BRANCHCOUNTRY = T2.COUNTRYCODE
		     LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.BRANCHCOUNTRY = T3.CPCOUNTRY AND T1.BRANCHPROVINCE = T3.CPPROVINCE
		     LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.BRANCHCOUNTRY = T4.PCCOUNTRY AND T1.BRANCHPROVINCE = T4.PCPROVINCE AND T1.BRANCHCITY = T4.PCCITY
		     LEFT JOIN BMTCOUNTRIES T5 ON T1.BRANCHSWIFTCOUNTRY = T5.COUNTRYCODE
		     LEFT JOIN RMTBRANCHES T6 ON T1.NEWBRANCHCODE = T6.BRANCHCODE
		     LEFT JOIN RMTBRANCHES T7 ON T1.PARENTBRANCH = T6.BRANCHCODE
		     LEFT JOIN PINCODES T8 ON T8.PINCODEID = T1.PINCODEID
		     LEFT JOIN CLUSTERS T9 ON T9.ID = T1.CLUSTERID
		     LEFT JOIN ENTITY T10 ON T10.ENTITYCODE = T1.ENTITY
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.8_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rmtbranches_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.9_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rmtbranches_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.9" author="Gopalaswamy.M">
		<createView viewName="RMTBRANCHES_VIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.BRANCHCODE,
				    T1.BRANCHDESC,
				    T1.BRANCHADDRLINE1,
				    T1.BRANCHADDRLINE2,
				    T1.BRANCHPOBOX,
				    T1.BRANCHCITY,
				    T4.PCCITYNAME LOVDESCBRANCHCITYNAME,
					T1.BRANCHPROVINCE,
				    T3.CPPROVINCENAME LOVDESCBRANCHPROVINCENAME,
				    T1.BRANCHCOUNTRY,
				    T2.COUNTRYDESC LOVDESCBRANCHCOUNTRYNAME,
				    T1.BRANCHFAX,
				    T1.BRANCHTEL,
				    T1.BRANCHSWIFTBANKCDE,
				    T1.BRANCHSWIFTCOUNTRY,
				    T1.BRANCHSWIFTLOCCODE,
				    T1.BRANCHSWIFTBRNCDE,
				    T1.BRANCHSORTCODE,
				    T1.BRANCHISACTIVE,
				    T1.NEWBRANCHCODE,
				    T6.BRANCHDESC NEWBRANCHDESC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.MINIBRANCH,
				    T1.BRANCHTYPE,
				    T1.PARENTBRANCH,
				    T1.PINCODE,
				    T1.REGION,
				    T1.BANKREFNO,
				    T1.BRANCHADDRHNBR,
				    T1.BRANCHFLATNBR,
				    T1.BRANCHADDRSTREET,
				    T7.BRANCHDESC PARENTBRANCHDESC,
				    T5.COUNTRYDESC LOVDESCBRANCHSWIFTCOUNTRYNAME,
				    T8.AREANAME PINAREADESC,
				    T1.ENTITY,
				    T10.ENTITYDESC,
				    T1.CLUSTERID,
				    T9.CODE CLUSTERCODE,
				    T9.NAME CLUSTERNAME,
					T8.PINCODEID
				   	 FROM RMTBRANCHES_TEMP T1
				     LEFT JOIN BMTCOUNTRIES T2 ON T1.BRANCHCOUNTRY = T2.COUNTRYCODE
				     LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.BRANCHCOUNTRY = T3.CPCOUNTRY AND T1.BRANCHPROVINCE = T3.CPPROVINCE
				     LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.BRANCHCOUNTRY = T4.PCCOUNTRY AND T1.BRANCHPROVINCE = T4.PCPROVINCE AND T1.BRANCHCITY = T4.PCCITY
				     LEFT JOIN BMTCOUNTRIES T5 ON T1.BRANCHSWIFTCOUNTRY = T5.COUNTRYCODE
				     LEFT JOIN RMTBRANCHES T6 ON T1.NEWBRANCHCODE = T6.BRANCHCODE
				     LEFT JOIN RMTBRANCHES T7 ON T1.PARENTBRANCH = T6.BRANCHCODE
				     LEFT JOIN PINCODES T8 ON T8.PINCODEID = T1.PINCODEID
				     LEFT JOIN CLUSTERS T9 ON T9.ID = T1.CLUSTERID
				     LEFT JOIN ENTITY T10 ON T10.ENTITYCODE = T1.ENTITY
					UNION ALL
				SELECT T1.BRANCHCODE,
				    T1.BRANCHDESC,
				    T1.BRANCHADDRLINE1,
				    T1.BRANCHADDRLINE2,
				    T1.BRANCHPOBOX,
				    T1.BRANCHCITY,
				    T4.PCCITYNAME LOVDESCBRANCHCITYNAME,
				    T1.BRANCHPROVINCE,
				    T3.CPPROVINCENAME LOVDESCBRANCHPROVINCENAME,
				    T1.BRANCHCOUNTRY,
				    T2.COUNTRYDESC LOVDESCBRANCHCOUNTRYNAME,
				    T1.BRANCHFAX,
				    T1.BRANCHTEL,
				    T1.BRANCHSWIFTBANKCDE,
				    T1.BRANCHSWIFTCOUNTRY,
				    T1.BRANCHSWIFTLOCCODE,
				    T1.BRANCHSWIFTBRNCDE,
				    T1.BRANCHSORTCODE,
				    T1.BRANCHISACTIVE,
				    T1.NEWBRANCHCODE,
				    T6.BRANCHDESC NEWBRANCHDESC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.MINIBRANCH,
				    T1.BRANCHTYPE,
				    T1.PARENTBRANCH,
				    T1.PINCODE,
				    T1.REGION,
				    T1.BANKREFNO,
				    T1.BRANCHADDRHNBR,
				    T1.BRANCHFLATNBR,
				    T1.BRANCHADDRSTREET,
				    T7.BRANCHDESC PARENTBRANCHDESC,
				    T5.COUNTRYDESC LOVDESCBRANCHSWIFTCOUNTRYNAME,
				    T8.AREANAME PINAREADESC,
				    T1.ENTITY,
				    T10.ENTITYDESC,
				    T1.CLUSTERID,
				    T9.CODE CLUSTERCODE,
				    T9.NAME CLUSTERNAME,
					T8.PINCODEID
				  FROM RMTBRANCHES T1
				  LEFT JOIN BMTCOUNTRIES T2 ON T1.BRANCHCOUNTRY = T2.COUNTRYCODE
				  LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.BRANCHCOUNTRY = T3.CPCOUNTRY AND T1.BRANCHPROVINCE = T3.CPPROVINCE
				  LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.BRANCHCOUNTRY = T4.PCCOUNTRY AND T1.BRANCHPROVINCE = T4.PCPROVINCE AND T1.BRANCHCITY = T4.PCCITY
				  LEFT JOIN BMTCOUNTRIES T5 ON T1.BRANCHSWIFTCOUNTRY = T5.COUNTRYCODE
				  LEFT JOIN RMTBRANCHES T6 ON T1.NEWBRANCHCODE = T6.BRANCHCODE
				  LEFT JOIN RMTBRANCHES T7 ON T1.PARENTBRANCH = T6.BRANCHCODE
				  LEFT JOIN PINCODES T8 ON T8.PINCODEID = T1.PINCODEID
				  LEFT JOIN CLUSTERS T9 ON T9.ID = T1.CLUSTERID
				  LEFT JOIN ENTITY T10 ON T10.ENTITYCODE = T1.ENTITY
				 WHERE NOT (EXISTS ( SELECT 1 FROM RMTBRANCHES_TEMP WHERE RMTBRANCHES_TEMP.BRANCHCODE = T1.BRANCHCODE))
          ]]>
	</createView>
	</changeSet>

	<changeSet id="ST#931.9_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rmtbranches_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.10" author="Gopalaswamy.M">
		<addColumn tableName="ENTITY">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.11" author="Gopalaswamy.M">
		<addColumn tableName="ENTITY_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.12" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_ENTITY_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="ENTITY" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.13" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_ENTITY_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="ENTITY_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.14" author="Gopalaswamy.M">
		<createIndex tableName="ENTITY" indexName="IDX_ENTITY_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.15" author="Gopalaswamy.M">
		<createIndex tableName="ENTITY_TEMP" indexName="IDX_ENTITY_T_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.16_MIG" author="Gopalaswamy.M" dbms="postgresql, mssql">
		<sql>
			<![CDATA[
				Update ENTITY set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = ENTITY.PinCode;
				Update ENTITY_TEMP set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = ENTITY_TEMP.PinCode;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.16_MIG" author="Gopalaswamy.M" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO ENTITY E
				USING PinCodes PC ON (PC.PinCode = E.PinCode)
				WHEN MATCHED THEN UPDATE SET E.PinCodeId = PC.PinCodeId;
				MERGE INTO ENTITY_TEMP E
				USING PinCodes PC ON (PC.PinCode = E.PinCode)
				WHEN MATCHED THEN UPDATE SET E.PinCodeId = PC.PinCodeId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.17_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'entity_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.17" author="Gopalaswamy.M">
		<createView viewName="ENTITY_AVIEW" replaceIfExists="true">
			<![CDATA[
			  SELECT T1.ENTITYCODE,
			    T1.ENTITYDESC,
			    T1.PANNUMBER,
			    T1.ENTITYADDRLINE1,
			    T1.ENTITYADDRLINE2,
			    T1.ENTITYADDRHNBR,
			    T1.ENTITYFLATNBR,
			    T1.ENTITYADDRSTREET,
			    T1.ENTITYPOBOX,
			    T1.COUNTRY,
			    T1.STATECODE,
			    T1.CITYCODE,
			    T1.PINCODE,
			    T1.ACTIVE,
			    T1.VERSION,
			    T1.LASTMNTBY,
			    T1.LASTMNTON,
			    T1.RECORDSTATUS,
			    T1.ROLECODE,
			    T1.NEXTROLECODE,
			    T1.TASKID,
			    T1.NEXTTASKID,
			    T1.RECORDTYPE,
			    T1.WORKFLOWID,
			    T2.COUNTRYDESC COUNTRYNAME,
			    T3.CPPROVINCENAME PROVINCENAME,
			    T4.PCCITYNAME CITYNAME,
			    T5.AREANAME PINCODENAME,
			    T1.CINNUMBER,
			    T1.GSTINAVAILABLE,
			    T1.PINCODEID
			   FROM ENTITY T1
			     LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
			     LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.STATECODE = T3.CPPROVINCE AND T1.COUNTRY = T3.CPCOUNTRY
			     LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.CITYCODE = T4.PCCITY AND T1.STATECODE = T4.PCPROVINCE AND T1.COUNTRY = T4.PCCOUNTRY
			     LEFT JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID AND T1.CITYCODE = T5.CITY
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.17_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'entity_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.18_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'entity_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.18" author="Gopalaswamy.M">
		<createView viewName="ENTITY_VIEW" replaceIfExists="true">
			<![CDATA[
		  		SELECT T1.ENTITYCODE,
			    	T1.ENTITYDESC,
			    	T1.PANNUMBER,
			    	T1.ENTITYADDRLINE1,
			    	T1.ENTITYADDRLINE2,
			    	T1.ENTITYADDRHNBR,
				    T1.ENTITYFLATNBR,
				    T1.ENTITYADDRSTREET,
				    T1.ENTITYPOBOX,
				    T1.COUNTRY,
				    T1.STATECODE,
				    T1.CITYCODE,
				    T1.PINCODE,
				    T1.ACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.COUNTRYDESC COUNTRYNAME,
				    T3.CPPROVINCENAME PROVINCENAME,
				    T4.PCCITYNAME CITYNAME,
				    T5.AREANAME PINCODENAME,
				    T1.CINNUMBER,
				    T1.GSTINAVAILABLE,
				    T1.PINCODEID
			   FROM ENTITY_TEMP T1
			     LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
			     LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.STATECODE = T3.CPPROVINCE AND T1.COUNTRY = T3.CPCOUNTRY
			     LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.CITYCODE = T4.PCCITY AND T1.STATECODE = T4.PCPROVINCE AND T1.COUNTRY = T4.PCCOUNTRY
			     LEFT JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID AND T1.CITYCODE = T5.CITY
				UNION ALL
		 		SELECT T1.ENTITYCODE,
				    T1.ENTITYDESC,
				    T1.PANNUMBER,
				    T1.ENTITYADDRLINE1,
				    T1.ENTITYADDRLINE2,
				    T1.ENTITYADDRHNBR,
				    T1.ENTITYFLATNBR,
				    T1.ENTITYADDRSTREET,
				    T1.ENTITYPOBOX,
				    T1.COUNTRY,
				    T1.STATECODE,
				    T1.CITYCODE,
				    T1.PINCODE,
				    T1.ACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.COUNTRYDESC COUNTRYNAME,
				    T3.CPPROVINCENAME PROVINCENAME,
				    T4.PCCITYNAME CITYNAME,
				    T5.AREANAME PINCODENAME,
				    T1.CINNUMBER,
				    T1.GSTINAVAILABLE,
				    T1.PINCODEID
			   FROM ENTITY T1
			     LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
			     LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.STATECODE = T3.CPPROVINCE AND T1.COUNTRY = T3.CPCOUNTRY
			     LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.CITYCODE = T4.PCCITY AND T1.STATECODE = T4.PCPROVINCE AND T1.COUNTRY = T4.PCCOUNTRY
			     LEFT JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID AND T1.CITYCODE= T5.CITY
			  WHERE NOT (EXISTS ( SELECT 1 FROM ENTITY_TEMP WHERE ENTITY_TEMP.ENTITYCODE = T1.ENTITYCODE))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.18_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'entity_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.19" author="Gopalaswamy.M">
		<addColumn tableName="TAXDETAIL">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.20" author="Gopalaswamy.M">
		<addColumn tableName="TAXDETAIL_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.21" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_TAXDETAIL_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="TAXDETAIL" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.22" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_TAXDETAIL_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="TAXDETAIL_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.23" author="Gopalaswamy.M">
		<createIndex tableName="TAXDETAIL" indexName="IDX_TAXDETAIL_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.24" author="Gopalaswamy.M">
		<createIndex tableName="TAXDETAIL_TEMP" indexName="IDX_TAXDETAIL_T_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.25_MIG" author="Gopalaswamy.M" dbms="postgresql, mssql">
		<sql>
			<![CDATA[
				Update TAXDETAIL set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = TAXDETAIL.PinCode;
				Update TAXDETAIL_TEMP set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = TAXDETAIL_TEMP.PinCode;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.25_MIG" author="Gopalaswamy.M" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO TAXDETAIL TD
				USING PinCodes PC ON (PC.PinCode = TD.PinCode)
				WHEN MATCHED THEN UPDATE SET TD.PinCodeId = PC.PinCodeId;
				MERGE INTO TAXDETAIL_TEMP TD
				USING PinCodes PC ON (PC.PinCode = TD.PinCode)
				WHEN MATCHED THEN UPDATE SET TD.PinCodeId = PC.PinCodeId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.26_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'taxdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.26" author="Gopalaswamy.M">
		<createView viewName="TAXDETAIL_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ID,
					T1.COUNTRY,
					T2.COUNTRYDESC COUNTRYNAME,
					T1.STATECODE,
					T3.CPPROVINCENAME PROVINCENAME,
					T1.ENTITYCODE,
					T4.ENTITYDESC,
					T1.TAXCODE,
					T1.ADDRESSLINE1,
					T1.ADDRESSLINE2,
					T1.ADDRESSLINE3,
					T1.ADDRESSLINE4,
					T1.PINCODE,
					T1.CITYCODE,
					T6.PCCITYNAME CITYNAME,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.HSNNUMBER,
					T1.NATURESERVICE,
					T4.GSTINAVAILABLE,
					T1.PINCODEID,
					T5.AREANAME
				   FROM TAXDETAIL T1
					 JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
					 JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.STATECODE = T3.CPPROVINCE 
					 JOIN ENTITY T4 ON T1.ENTITYCODE = T4.ENTITYCODE 
					 JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID 
					 JOIN RMTPROVINCEVSCITY T6 ON T1.CITYCODE = T6.PCCITY 
			]]>
	</createView>
	</changeSet>

	<changeSet id="ST#931.26_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'taxdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.27_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'taxdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.27" author="Gopalaswamy.M">
		<createView viewName="TAXDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ID,
					T1.COUNTRY,
					T2.COUNTRYDESC COUNTRYNAME,
					T1.STATECODE,
					T3.CPPROVINCENAME PROVINCENAME,
					T1.ENTITYCODE,
					T4.ENTITYDESC,
					T1.TAXCODE,
					T1.ADDRESSLINE1,
					T1.ADDRESSLINE2,
					T1.ADDRESSLINE3,
					T1.ADDRESSLINE4,
					T1.PINCODE,
					T1.CITYCODE,
					T6.PCCITYNAME CITYNAME,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.HSNNUMBER,
					T1.NATURESERVICE,
					T4.GSTINAVAILABLE,
					T1.PINCODEID,
					T5.AREANAME
				   FROM TAXDETAIL_TEMP T1
					 JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
					 JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.STATECODE = T3.CPPROVINCE 
					 JOIN ENTITY T4 ON T1.ENTITYCODE = T4.ENTITYCODE 
					 JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID 
					 JOIN RMTPROVINCEVSCITY T6 ON T1.CITYCODE= T6.PCCITY 
				 UNION ALL
				SELECT T1.ID,
					T1.COUNTRY,
					T2.COUNTRYDESC COUNTRYNAME,
					T1.STATECODE,
					T3.CPPROVINCENAME PROVINCENAME,
					T1.ENTITYCODE,
					T4.ENTITYDESC,
					T1.TAXCODE,
					T1.ADDRESSLINE1,
					T1.ADDRESSLINE2,
					T1.ADDRESSLINE3,
					T1.ADDRESSLINE4,
					T1.PINCODE,
					T1.CITYCODE,
					T6.PCCITYNAME CITYNAME,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.HSNNUMBER,
					T1.NATURESERVICE,
					T4.GSTINAVAILABLE,
					T1.PINCODEID,
					T5.AREANAME
				   FROM TAXDETAIL T1
					 JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
					 JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.STATECODE = T3.CPPROVINCE 
					 JOIN ENTITY T4 ON T1.ENTITYCODE = T4.ENTITYCODE 
					 JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID 
					 JOIN RMTPROVINCEVSCITY T6 ON T1.CITYCODE = T6.PCCITY 
				  WHERE NOT (EXISTS ( SELECT 1 FROM TAXDETAIL_TEMP WHERE TAXDETAIL_TEMP.ID = T1.ID))
			]]>
	</createView>
	</changeSet>

	<changeSet id="ST#931.27_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'taxdetail_view');
			]]>
		</sql>
	</changeSet>

	<!-- customeraddresses -->

	<changeSet id="ST#931.28" author="Gopalaswamy.M">
		<addColumn tableName="CUSTOMERADDRESSES">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.29" author="Gopalaswamy.M">
		<addColumn tableName="CUSTOMERADDRESSES_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.30" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_CUSTOMERADDRESSES_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="CUSTOMERADDRESSES" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.31" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_CUSTOMERADDRESSES_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="CUSTOMERADDRESSES_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.32" author="Gopalaswamy.M">
		<createIndex tableName="CUSTOMERADDRESSES" indexName="IDX_CUSTOMERADDRESSES_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.33" author="Gopalaswamy.M">
		<createIndex tableName="CUSTOMERADDRESSES_TEMP" indexName="IDX_CUSTOMERADDRESSES_T_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.34_MIG" author="Gopalaswamy.M" dbms="postgresql, mssql">
		<sql>
			<![CDATA[
				Update CUSTOMERADDRESSES set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = CUSTOMERADDRESSES.CUSTADDRZIP;
				Update CUSTOMERADDRESSES_TEMP set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = CUSTOMERADDRESSES_TEMP.CUSTADDRZIP;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.34_MIG" author="Gopalaswamy.M" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO CUSTOMERADDRESSES CA
				USING PinCodes PC ON (PC.PinCode = CA.CUSTADDRZIP)
				WHEN MATCHED THEN UPDATE SET CA.PinCodeId = PC.PinCodeId;
				MERGE INTO CUSTOMERADDRESSES_TEMP CA
				USING PinCodes PC ON (PC.PinCode = CA.CUSTADDRZIP)
				WHEN MATCHED THEN UPDATE SET CA.PinCodeId = PC.PinCodeId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.35_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customeraddresses_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.35" author="Gopalaswamy.M">
		<createView viewName="CUSTOMERADDRESSES_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.CUSTADDRESSID,
					T1.CUSTID,
					T1.CUSTADDRTYPE,
					T2.ADDRTYPEDESC  LOVDESCCUSTADDRTYPENAME,
					T1.CUSTADDRHNBR,
					T1.CUSTFLATNBR,
					T1.CUSTADDRSTREET,
					T1.CUSTADDRLINE1,
					T1.CUSTADDRLINE2,
					T1.CUSTADDRLINE3,
					T1.CUSTADDRLINE4,
					T1.CUSTDISTRICT,
					T1.CUSTPOBOX,
					T1.CUSTADDRCITY,
					T1.TYPEOFRESIDENCE,
					T3.PCCITYNAME LOVDESCCUSTADDRCITYNAME,
					T1.CUSTADDRPROVINCE,
					T4.CPPROVINCENAME LOVDESCCUSTADDRPROVINCENAME,
					T1.CUSTADDRCOUNTRY,
					T5.COUNTRYDESC LOVDESCCUSTADDRCOUNTRYNAME,
					T1.CUSTADDRZIP,
					T1.CUSTADDRPHONE,
					T1.CUSTADDRFROM,
					T1.CUSTADDRPRIORITY,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T6.AREANAME LOVDESCCUSTADDRZIP,
					T1.PINCODEID
					FROM CUSTOMERADDRESSES T1
					LEFT JOIN BMTADDRESSTYPES T2 ON T1.CUSTADDRTYPE = T2.ADDRTYPECODE
					LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.CUSTADDRCOUNTRY = T3.PCCOUNTRY AND T1.CUSTADDRPROVINCE = T3.PCPROVINCE AND T1.CUSTADDRCITY = T3.PCCITY
					LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.CUSTADDRCOUNTRY = T4.CPCOUNTRY AND T1.CUSTADDRPROVINCE = T4.CPPROVINCE
					LEFT JOIN BMTCOUNTRIES T5 ON T1.CUSTADDRCOUNTRY = T5.COUNTRYCODE
					LEFT JOIN PINCODES T6 ON T1.PINCODEID = T6.PINCODEID
			]]>
	</createView>
	</changeSet>

	<changeSet id="ST#931.35_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customeraddresses_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.36_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customeraddresses_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.36" author="Gopalaswamy.M">
		<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.CUSTADDRESSID,
					T1.CUSTID,
					T1.CUSTADDRTYPE,
					T2.ADDRTYPEDESC LOVDESCCUSTADDRTYPENAME,
					T1.CUSTADDRHNBR,
					T1.CUSTFLATNBR,
					T1.CUSTADDRSTREET,
					T1.CUSTADDRLINE1,
					T1.CUSTADDRLINE2,
					T1.CUSTADDRLINE3,
					T1.CUSTADDRLINE4,
					T1.CUSTDISTRICT,
					T1.CUSTPOBOX,
					T1.CUSTADDRCITY,
					T1.TYPEOFRESIDENCE,
					T3.PCCITYNAME LOVDESCCUSTADDRCITYNAME,
					T1.CUSTADDRPROVINCE,
					T4.CPPROVINCENAME LOVDESCCUSTADDRPROVINCENAME,
					T1.CUSTADDRCOUNTRY,
					T5.COUNTRYDESC LOVDESCCUSTADDRCOUNTRYNAME,
					T1.CUSTADDRZIP,
					T1.CUSTADDRPHONE,
					T1.CUSTADDRFROM,
					T1.CUSTADDRPRIORITY,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T6.AREANAME LOVDESCCUSTADDRZIP,
					T1.PINCODEID
				   FROM CUSTOMERADDRESSES_TEMP T1
				   LEFT JOIN BMTADDRESSTYPES T2 ON T1.CUSTADDRTYPE = T2.ADDRTYPECODE
				   LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.CUSTADDRCOUNTRY = T3.PCCOUNTRY AND T1.CUSTADDRPROVINCE = T3.PCPROVINCE AND T1.CUSTADDRCITY = T3.PCCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.CUSTADDRCOUNTRY = T4.CPCOUNTRY AND T1.CUSTADDRPROVINCE = T4.CPPROVINCE
				   LEFT JOIN BMTCOUNTRIES T5 ON T1.CUSTADDRCOUNTRY = T5.COUNTRYCODE
				   LEFT JOIN PINCODES T6 ON T1.PINCODEID = T6.PINCODEID
				 UNION ALL
				SELECT T1.CUSTADDRESSID,
					T1.CUSTID,
					T1.CUSTADDRTYPE,
					T2.ADDRTYPEDESC LOVDESCCUSTADDRTYPENAME,
					T1.CUSTADDRHNBR,
					T1.CUSTFLATNBR,
					T1.CUSTADDRSTREET,
					T1.CUSTADDRLINE1,
					T1.CUSTADDRLINE2,
					T1.CUSTADDRLINE3,
					T1.CUSTADDRLINE4,
					T1.CUSTDISTRICT,
					T1.CUSTPOBOX,
					T1.CUSTADDRCITY,
					T1.TYPEOFRESIDENCE,
					T3.PCCITYNAME LOVDESCCUSTADDRCITYNAME,
					T1.CUSTADDRPROVINCE,
					T4.CPPROVINCENAME LOVDESCCUSTADDRPROVINCENAME,
					T1.CUSTADDRCOUNTRY,
					T5.COUNTRYDESC LOVDESCCUSTADDRCOUNTRYNAME,
					T1.CUSTADDRZIP,
					T1.CUSTADDRPHONE,
					T1.CUSTADDRFROM,
					T1.CUSTADDRPRIORITY,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T6.AREANAME LOVDESCCUSTADDRZIP,
					T1.PINCODEID
				   FROM CUSTOMERADDRESSES T1
				   LEFT JOIN BMTADDRESSTYPES T2 ON T1.CUSTADDRTYPE = T2.ADDRTYPECODE
				   LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.CUSTADDRCOUNTRY = T3.PCCOUNTRY AND T1.CUSTADDRPROVINCE = T3.PCPROVINCE AND T1.CUSTADDRCITY = T3.PCCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.CUSTADDRCOUNTRY = T4.CPCOUNTRY AND T1.CUSTADDRPROVINCE = T4.CPPROVINCE
				   LEFT JOIN BMTCOUNTRIES T5 ON T1.CUSTADDRCOUNTRY = T5.COUNTRYCODE
				   LEFT JOIN PINCODES T6 ON T1.PINCODEID = T6.PINCODEID
				   WHERE NOT (EXISTS ( SELECT 1
				   FROM CUSTOMERADDRESSES_TEMP
				   WHERE CUSTOMERADDRESSES_TEMP.CUSTID = T1.CUSTID AND CUSTOMERADDRESSES_TEMP.CUSTADDRTYPE = T1.CUSTADDRTYPE))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.36_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customeraddresses_view');
			]]>
		</sql>
	</changeSet>

	<!-- buildercompany -->

	<changeSet id="ST#931.37" author="Gopalaswamy.M">
		<addColumn tableName="BUILDERCOMPANY">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.38" author="Gopalaswamy.M">
		<addColumn tableName="BUILDERCOMPANY_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.39" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_BUILDERCOMPANY_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="BUILDERCOMPANY" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.40" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_BUILDERCOMPANY_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="BUILDERCOMPANY_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.41" author="Gopalaswamy.M">
		<createIndex tableName="BUILDERCOMPANY" indexName="IDX_BUILDERCOMPANY_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.42" author="Gopalaswamy.M">
		<createIndex tableName="BUILDERCOMPANY_TEMP" indexName="IDX_BUILDERCOMPANY_T_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.43_MIG" author="Gopalaswamy.M" dbms="postgresql, mssql">
		<sql>
			<![CDATA[
				Update BUILDERCOMPANY set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = BUILDERCOMPANY.code;
				Update BUILDERCOMPANY_TEMP set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = BUILDERCOMPANY_TEMP.code;
	  		]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.43_MIG" author="Gopalaswamy.M" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO BUILDERCOMPANY BC
				USING PinCodes PC ON (PC.PinCode = BC.code)
				WHEN MATCHED THEN UPDATE SET BC.PinCodeId = PC.PinCodeId;
				MERGE INTO BUILDERCOMPANY_TEMP BC
				USING PinCodes PC ON (PC.PinCode = BC.code)
				WHEN MATCHED THEN UPDATE SET BC.PinCodeId = PC.PinCodeId;
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#931.44_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'buildercompany_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.44" author="Gopalaswamy.M">
		<createView viewName="BUILDERCOMPANY_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.ID,
				    T1.NAME,
				    T1.SEGMENTATION,
				    T1.GROUPID,
				    T2.VALUEDESC SEGMENTATIONNAME,
				    T2.FIELDCODE,
				    T3.NAME GROUPIDNAME,
				    T1.APFTYPE,
				    T1.PEDEVID,
				    T1.ENTITYTYPE,
				    T1.EMAILID,
				    T1.CITYTYPE,
				    T1.ADDRESS1,
				    T1.ADDRESS2,
				    T1.ADDRESS3,
				    T1.CITY,
				    T1.CODE,
				    T1.DEVAVAILABLITY,
				    T1.MAGNITUDE,
				    T1.ABSAVAILABLITY,
				    T1.TOTALPROJ,
				    T1.APPROVED,
				    T1.REMARKS,
				    T1.PANDETAILS,
				    T1.BENFNAME,
				    T1.ACCOUNTNO,
				    T7.BANKCODE,
				    T9.BANKNAME,
				    T1.BANKBRANCHID,
				    T7.IFSC,
				    T1.LIMITONAMT,
				    T1.LIMITONUNITS,
				    T1.CURRENTEXPUNI,
				    T1.CURRENTEXPAMT,
				    T1.DATEOFINCOP,
				    T1.NOOFPROJ,
				    T1.ASSHLPLAYERS,
				    T1.ONGOINGPROJ,
				    T1.EXPINBUSINESS,
				    T1.RECOMMENDATION,
				    T1.MAGINTUDEINLACS,
				    T1.NOOFPROJCONS,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T4.CUSTSHRTNAME LOVDESCCIFNAME,
				    T4.CUSTCIF,
				    T1.CUSTID,
				    T5.PCCITYNAME CITYNAME,
				    T6.PINCODE CODENAME,
				    T6.AREANAME,
				    T7.BRANCHDESC BRANDESC,
				    T8.CUSTTYPECTG ENTYDESC,
				    T1.ACTIVE,
					T1.PINCODEID
				   	FROM BUILDERCOMPANY T1
				     JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE = 'SEGMENT'
				     LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
				     LEFT JOIN CUSTOMERS T4 ON T1.CUSTID = T4.CUSTID
				     LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY = T5.PCCITY
				     LEFT JOIN PINCODES T6 ON T1.PINCODEID = T6.PINCODEID
				     LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
				     LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE = T8.CUSTTYPECODE
				     LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
			]]>
	   </createView>
	</changeSet>
	<changeSet id="ST#931.44_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'buildercompany_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#931.45_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'buildercompany_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#931.45" author="Gopalaswamy.M">
		<createView viewName="BUILDERCOMPANY_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ID,
					T1.NAME,
					T1.SEGMENTATION,
					T1.GROUPID,
					T2.VALUEDESC SEGMENTATIONNAME,
					T2.FIELDCODE,
					T3.NAME GROUPIDNAME,
					T1.APFTYPE,
					T1.PEDEVID,
					T1.ENTITYTYPE,
					T1.EMAILID,
					T1.CITYTYPE,
					T1.ADDRESS1,
					T1.ADDRESS2,
					T1.ADDRESS3,
					T1.CITY,
					T1.CODE,
					T1.DEVAVAILABLITY,
					T1.MAGNITUDE,
					T1.ABSAVAILABLITY,
					T1.TOTALPROJ,
					T1.APPROVED,
					T1.REMARKS,
					T1.PANDETAILS,
					T1.BENFNAME,
					T1.ACCOUNTNO,
					T7.BANKCODE,
					T9.BANKNAME,
					T1.BANKBRANCHID,
					T7.IFSC,
					T1.LIMITONAMT,
					T1.LIMITONUNITS,
					T1.CURRENTEXPUNI,
					T1.CURRENTEXPAMT,
					T1.DATEOFINCOP,
					T1.NOOFPROJ,
					T1.ASSHLPLAYERS,
					T1.ONGOINGPROJ,
					T1.EXPINBUSINESS,
					T1.RECOMMENDATION,
					T1.MAGINTUDEINLACS,
					T1.NOOFPROJCONS,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T4.CUSTSHRTNAME LOVDESCCIFNAME,
					T4.CUSTCIF,
					T4.CUSTID,
					T5.PCCITYNAME CITYNAME,
					T6.PINCODE CODENAME,
					T6.AREANAME,
					T7.BRANCHDESC BRANDESC,
					T8.CUSTTYPECTG ENTYDESC,
					T1.PINCODEID
				   FROM BUILDERCOMPANY_TEMP T1
					 JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE = 'SEGMENT'
					 LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
					 LEFT JOIN CUSTOMERS T4 ON T1.CUSTID = T4.CUSTID
					 LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY = T5.PCCITY
					 LEFT JOIN PINCODES T6 ON T1.PINCODEID = T6.PINCODEID
					 LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
					 LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE = T8.CUSTTYPECODE
					 LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.45_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'buildercompany_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.46_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'buildercompany_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.46" author="Gopalaswamy.M">
		<createView viewName="BUILDERCOMPANY_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ID,
				T1.NAME,
				T1.SEGMENTATION,
				T1.GROUPID,
				T2.VALUEDESC SEGMENTATIONNAME,
				T2.FIELDCODE,
				T3.NAME GROUPIDNAME,
				T1.APFTYPE,
				T1.PEDEVID,
				T1.ENTITYTYPE,
				T1.EMAILID,
				T1.CITYTYPE,
				T1.ADDRESS1,
				T1.ADDRESS2,
				T1.ADDRESS3,
				T1.CITY,
				T1.CODE,
				T1.DEVAVAILABLITY,
				T1.MAGNITUDE,
				T1.ABSAVAILABLITY,
				T1.TOTALPROJ,
				T1.APPROVED,
				T1.REMARKS,
				T1.PANDETAILS,
				T1.BENFNAME,
				T1.ACCOUNTNO,
				T7.BANKCODE,
				T9.BANKNAME,
				T1.BANKBRANCHID,
				T7.IFSC,
				T1.LIMITONAMT,
				T1.LIMITONUNITS,
				T1.CURRENTEXPUNI,
				T1.CURRENTEXPAMT,
				T1.DATEOFINCOP,
				T1.NOOFPROJ,
				T1.ASSHLPLAYERS,
				T1.ONGOINGPROJ,
				T1.EXPINBUSINESS,
				T1.RECOMMENDATION,
				T1.MAGINTUDEINLACS,
				T1.NOOFPROJCONS,
				T1.VERSION,
				T1.LASTMNTBY,
				T1.LASTMNTON,
				T1.RECORDSTATUS,
				T1.ROLECODE,
				T1.NEXTROLECODE,
				T1.TASKID,
				T1.NEXTTASKID,
				T1.RECORDTYPE,
				T1.WORKFLOWID,
				T5.PCCITYNAME CITYNAME,
				T6.PINCODE CODENAME,
				T6.AREANAME,
				T7.BRANCHDESC BRANDESC,
				T8.CUSTTYPECTG ENTYDESC,
				T1.ACTIVE,
				T10.CUSTSHRTNAME LOVDESCCIFNAME,
				T10.CUSTCIF,
				T1.CUSTID,
				T1.PINCODEID
			   FROM BUILDERCOMPANY_TEMP T1
			   JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE = 'SEGMENT'
			   LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
			   LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY = T5.PCCITY
			   LEFT JOIN PINCODES T6 ON T1.PINCODEID = T6.PINCODEID
			   LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
			   LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE = T8.CUSTTYPECODE
			   LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
			   LEFT JOIN CUSTOMERS T10 ON T1.CUSTID = T10.CUSTID
			 UNION ALL
			SELECT T1.ID,
				T1.NAME,
				T1.SEGMENTATION,
				T1.GROUPID,
				T2.VALUEDESC SEGMENTATIONNAME,
				T2.FIELDCODE,
				T3.NAME GROUPIDNAME,
				T1.APFTYPE,
				T1.PEDEVID,
				T1.ENTITYTYPE,
				T1.EMAILID,
				T1.CITYTYPE,
				T1.ADDRESS1,
				T1.ADDRESS2,
				T1.ADDRESS3,
				T1.CITY,
				T1.CODE,
				T1.DEVAVAILABLITY,
				T1.MAGNITUDE,
				T1.ABSAVAILABLITY,
				T1.TOTALPROJ,
				T1.APPROVED,
				T1.REMARKS,
				T1.PANDETAILS,
				T1.BENFNAME,
				T1.ACCOUNTNO,
				T7.BANKCODE,
				T9.BANKNAME,
				T1.BANKBRANCHID,
				T7.IFSC,
				T1.LIMITONAMT,
				T1.LIMITONUNITS,
				T1.CURRENTEXPUNI,
				T1.CURRENTEXPAMT,
				T1.DATEOFINCOP,
				T1.NOOFPROJ,
				T1.ASSHLPLAYERS,
				T1.ONGOINGPROJ,
				T1.EXPINBUSINESS,
				T1.RECOMMENDATION,
				T1.MAGINTUDEINLACS,
				T1.NOOFPROJCONS,
				T1.VERSION,
				T1.LASTMNTBY,
				T1.LASTMNTON,
				T1.RECORDSTATUS,
				T1.ROLECODE,
				T1.NEXTROLECODE,
				T1.TASKID,
				T1.NEXTTASKID,
				T1.RECORDTYPE,
				T1.WORKFLOWID,
				T5.PCCITYNAME CITYNAME,
				T6.PINCODE CODENAME,
				T6.AREANAME,
				T7.BRANCHDESC BRANDESC,
				T8.CUSTTYPECTG ENTYDESC,
				T1.ACTIVE,
				T10.CUSTSHRTNAME LOVDESCCIFNAME,
				T10.CUSTCIF,
				T1.CUSTID,
				T1.PINCODEID
			   FROM BUILDERCOMPANY T1
			   JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE = 'SEGMENT'
			   LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
			   LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY = T5.PCCITY
			   LEFT JOIN PINCODES T6 ON T1.PINCODEID = T6.PINCODEID
			   LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
			   LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE = T8.CUSTTYPECODE
			   LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
			   LEFT JOIN CUSTOMERS T10 ON T1.CUSTID = T10.CUSTID
			   WHERE NOT (EXISTS ( SELECT 1 FROM BUILDERCOMPANY_TEMP  WHERE BUILDERCOMPANY_TEMP.ID = T1.ID))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.46_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'buildercompany_view');
			]]>
		</sql>
	</changeSet>

	<!-- AMTVehicleDealer -->

	<changeSet id="ST#931.47" author="Gopalaswamy.M">
		<addColumn tableName="AMTVEHICLEDEALER">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.48" author="Gopalaswamy.M">
		<addColumn tableName="AMTVEHICLEDEALER_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.49" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_AMTVEHICLEDEALER_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="AMTVEHICLEDEALER" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.50" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_AMTVEHICLEDEALER_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="AMTVEHICLEDEALER_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.51" author="Gopalaswamy.M">
		<createIndex tableName="AMTVEHICLEDEALER" indexName="IDX_AMTVEHICLEDEALER_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.52" author="Gopalaswamy.M">
		<createIndex tableName="AMTVEHICLEDEALER_TEMP" indexName="IDX_AMTVEHICLEDEALER_T_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>
	<changeSet id="ST#931.53_MIG" author="Gopalaswamy.M" dbms="postgresql, mssql">
		<sql>
			<![CDATA[
				Update AMTVEHICLEDEALER set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = AMTVEHICLEDEALER.ZipCode;
				Update AMTVEHICLEDEALER_TEMP set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = AMTVEHICLEDEALER_TEMP.ZipCode;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.53_MIG" author="Gopalaswamy.M" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO AMTVEHICLEDEALER AV
				USING PinCodes PC ON (PC.PinCode = AV.ZipCode)
				WHEN MATCHED THEN UPDATE SET AV.PinCodeId = PC.PinCodeId;
				MERGE INTO AMTVEHICLEDEALER_TEMP AVT
				USING PinCodes PC ON (PC.PinCode = AVT.ZipCode)
				WHEN MATCHED THEN UPDATE SET AVT.PinCodeId = PC.PinCodeId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.54_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'amtvehicledealer_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.54" author="Gopalaswamy.M">
		<createView viewName="AMTVEHICLEDEALER_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.DEALERID,
					T1.DEALERTYPE,
					T1.DEALERNAME,
					T1.DEALERTELEPHONE,
					T1.DEALERFAX,
					T1.DEALERADDRESS1,
					T1.DEALERADDRESS2,
					T1.DEALERADDRESS3,
					T1.DEALERADDRESS4,
					T1.DEALERCOUNTRY,
					T5.COUNTRYDESC LOVDESCCOUNTRY,
					T1.DEALERPROVINCE,
					T4.CPPROVINCENAME LOVDESCPROVINCE,
					T1.DEALERCITY,
					T3.PCCITYNAME LOVDESCCITY,
					T1.EMAIL,
					T1.POBOX,
					T1.ZIPCODE,
					T1.ACTIVE,
					T1.EMIRATES,
					T1.COMMISIONPAIDAT,
					T1.CALCULATIONRULE,
					T7.RULECODEDESC CALRULEDESC,
					T1.PAYMENTMODE,
					T1.ACCOUNTNUMBER,
					T1.ACCOUNTINGSETID,
					T8.ACCOUNTSETCODE ACCOUNTINGSETCODE,
					T8.ACCOUNTSETCODENAME ACCOUNTINGSETDESC,
					T9.CPPROVINCENAME EMIRATESDESCRIPTION,
					T1.SELLERTYPE,
					T1.PANNUMBER,
					T1.UIDNUMBER,
					T1.TAXNUMBER,
					T1.ACCOUNTNO,
					T1.ACCOUNTTYPE,
					T1.FROMPROVINCE,
					T10.CPPROVINCENAME FROMPROVINCENAME,
					T1.TOPROVINCE,
					T11.CPPROVINCENAME TOPROVINCENAME,
					T1.BANKBRANCHID,
					T12.BRANCHCODE BANKBRANCHCODE,
					T12.BRANCHDESC BANKBRANCHCODENAME,
					T12.IFSC BRANCHIFSCCODE,
					T12.MICR BRANCHMICRCODE,
					T12.CITY BRANCHCITY,
					T13.BANKNAME,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.CODE,
					T1.PRODUCTCTG,
					T14.PRODUCTCTGDESC,
					T1.SHORTCODE,
					T1.BRANCHCODE,
					T1.PINCODEID,
					T15.AreaName
				   FROM AMTVEHICLEDEALER T1
				   LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.DEALERCOUNTRY = T3.PCCOUNTRY AND T1.DEALERPROVINCE = T3.PCPROVINCE AND T1.DEALERCITY = T3.PCCITY AND T1.DEALERCITY = T3.PCCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.DEALERCOUNTRY = T4.CPCOUNTRY AND T1.DEALERPROVINCE = T4.CPPROVINCE
				   LEFT JOIN BMTCOUNTRIES T5 ON T1.DEALERCOUNTRY = T5.COUNTRYCODE
				   LEFT JOIN RULES T7 ON T1.CALCULATIONRULE = T7.RULECODE AND T7.RULEEVENT = 'ADDDBS'
				   LEFT JOIN RMTACCOUNTINGSET T8 ON T1.ACCOUNTINGSETID = T8.ACCOUNTSETID
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T9 ON T1.EMIRATES = T9.CPPROVINCE
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T10 ON T1.FROMPROVINCE = T10.CPPROVINCE
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T11 ON T1.TOPROVINCE = T11.CPPROVINCE
				   LEFT JOIN BANKBRANCHES T12 ON T1.BANKBRANCHID = T12.BANKBRANCHID
				   LEFT JOIN BMTBANKDETAIL T13 ON T12.BANKCODE = T13.BANKCODE
				   LEFT JOIN VASPRODUCTCATEGORY T14 ON T1.PRODUCTCTG = T14.PRODUCTCTG
				   LEFT JOIN PINCODES T15 ON T1.PINCODEID = T15.PINCODEID
			]]>
	</createView>
	</changeSet>

	<changeSet id="ST#931.54_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'amtvehicledealer_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.55_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'amtvehicledealer_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.55" author="Gopalaswamy.M">
		<createView viewName="AMTVEHICLEDEALER_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.DEALERID,
					T1.DEALERTYPE,
					T1.DEALERNAME,
					T1.DEALERTELEPHONE,
					T1.DEALERFAX,
					T1.DEALERADDRESS1,
					T1.DEALERADDRESS2,
					T1.DEALERADDRESS3,
					T1.DEALERADDRESS4,
					T1.DEALERCOUNTRY,
					T5.COUNTRYDESC LOVDESCCOUNTRY,
					T1.DEALERPROVINCE,
					T4.CPPROVINCENAME LOVDESCPROVINCE,
					T1.DEALERCITY,
					T3.PCCITYNAME LOVDESCCITY,
					T1.EMAIL,
					T1.POBOX,
					T1.ZIPCODE,
					T1.ACTIVE,
					T1.EMIRATES,
					T1.COMMISIONPAIDAT,
					T1.CALCULATIONRULE,
					T7.RULECODEDESC CALRULEDESC,
					T1.PAYMENTMODE,
					T1.ACCOUNTNUMBER,
					T1.ACCOUNTINGSETID,
					T8.ACCOUNTSETCODE ACCOUNTINGSETCODE,
					T8.ACCOUNTSETCODENAME ACCOUNTINGSETDESC,
					T9.CPPROVINCENAME EMIRATESDESCRIPTION,
					T1.SELLERTYPE,
					T1.PANNUMBER,
					T1.UIDNUMBER,
					T1.TAXNUMBER,
					T1.ACCOUNTNO,
					T1.ACCOUNTTYPE,
					T1.FROMPROVINCE,
					T10.CPPROVINCENAME FROMPROVINCENAME,
					T1.TOPROVINCE,
					T11.CPPROVINCENAME TOPROVINCENAME,
					T1.BANKBRANCHID,
					T12.BRANCHCODE BANKBRANCHCODE,
					T12.BRANCHDESC BANKBRANCHCODENAME,
					T12.IFSC BRANCHIFSCCODE,
					T12.MICR BRANCHMICRCODE,
					T12.CITY BRANCHCITY,
					T13.BANKNAME,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.CODE,
					T1.PRODUCTCTG,
					T14.PRODUCTCTGDESC,
					T1.SHORTCODE,
					T1.BRANCHCODE,
					T1.PINCODEID,
					T15.AreaName
					FROM AMTVEHICLEDEALER_TEMP T1
				    LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.DEALERCOUNTRY = T3.PCCOUNTRY AND T1.DEALERPROVINCE = T3.PCPROVINCE AND T1.DEALERCITY = T3.PCCITY
				    LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.DEALERCOUNTRY = T4.CPCOUNTRY AND T1.DEALERPROVINCE = T4.CPPROVINCE
				    LEFT JOIN BMTCOUNTRIES T5 ON T1.DEALERCOUNTRY = T5.COUNTRYCODE
				    LEFT JOIN RULES T7 ON T1.CALCULATIONRULE = T7.RULECODE AND T7.RULEEVENT = 'ADDDBS'
				    LEFT JOIN RMTACCOUNTINGSET T8 ON T1.ACCOUNTINGSETID = T8.ACCOUNTSETID
				    LEFT JOIN RMTCOUNTRYVSPROVINCE T9 ON T1.EMIRATES = T9.CPPROVINCE
				    LEFT JOIN RMTCOUNTRYVSPROVINCE T10 ON T1.FROMPROVINCE = T10.CPPROVINCE
				    LEFT JOIN RMTCOUNTRYVSPROVINCE T11 ON T1.TOPROVINCE = T11.CPPROVINCE
				    LEFT JOIN BANKBRANCHES T12 ON T1.BANKBRANCHID = T12.BANKBRANCHID
				    LEFT JOIN BMTBANKDETAIL T13 ON T12.BANKCODE = T13.BANKCODE
				    LEFT JOIN VASPRODUCTCATEGORY T14 ON T1.PRODUCTCTG = T14.PRODUCTCTG
				    LEFT JOIN PINCODES T15 ON T1.PINCODEID = T15.PINCODEID
				  UNION ALL
				SELECT T1.DEALERID,
					T1.DEALERTYPE,
					T1.DEALERNAME,
					T1.DEALERTELEPHONE,
					T1.DEALERFAX,
					T1.DEALERADDRESS1,
					T1.DEALERADDRESS2,
					T1.DEALERADDRESS3,
					T1.DEALERADDRESS4,
					T1.DEALERCOUNTRY,
					T5.COUNTRYDESC LOVDESCCOUNTRY,
					T1.DEALERPROVINCE,
					T4.CPPROVINCENAME LOVDESCPROVINCE,
					T1.DEALERCITY,
					T3.PCCITYNAME LOVDESCCITY,
					T1.EMAIL,
					T1.POBOX,
					T1.ZIPCODE,
					T1.ACTIVE,
					T1.EMIRATES,
					T1.COMMISIONPAIDAT,
					T1.CALCULATIONRULE,
					T7.RULECODEDESC CALRULEDESC,
					T1.PAYMENTMODE,
					T1.ACCOUNTNUMBER,
					T1.ACCOUNTINGSETID,
					T8.ACCOUNTSETCODE ACCOUNTINGSETCODE,
					T8.ACCOUNTSETCODENAME ACCOUNTINGSETDESC,
					T9.CPPROVINCENAME EMIRATESDESCRIPTION,
					T1.SELLERTYPE,
					T1.PANNUMBER,
					T1.UIDNUMBER,
					T1.TAXNUMBER,
					T1.ACCOUNTNO,
					T1.ACCOUNTTYPE,
					T1.FROMPROVINCE,
					T10.CPPROVINCENAME FROMPROVINCENAME,
					T1.TOPROVINCE,
					T11.CPPROVINCENAME TOPROVINCENAME,
					T1.BANKBRANCHID,
					T12.BRANCHCODE BANKBRANCHCODE,
					T12.BRANCHDESC BANKBRANCHCODENAME,
					T12.IFSC BRANCHIFSCCODE,
					T12.MICR BRANCHMICRCODE,
					T12.CITY BRANCHCITY,
					T13.BANKNAME,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.CODE,
					T1.PRODUCTCTG,
					T14.PRODUCTCTGDESC,
					T1.SHORTCODE,
					T1.BRANCHCODE,
					T1.PINCODEID,
					T15.AreaName
				   FROM AMTVEHICLEDEALER T1
				   LEFT JOIN RMTPROVINCEVSCITY T3 ON T1.DEALERCOUNTRY = T3.PCCOUNTRY AND T1.DEALERPROVINCE = T3.PCPROVINCE AND T1.DEALERCITY = T3.PCCITY AND T1.DEALERCITY = T3.PCCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T4 ON T1.DEALERCOUNTRY = T4.CPCOUNTRY AND T1.DEALERPROVINCE = T4.CPPROVINCE
				   LEFT JOIN BMTCOUNTRIES T5 ON T1.DEALERCOUNTRY = T5.COUNTRYCODE
				   LEFT JOIN RULES T7 ON T1.CALCULATIONRULE = T7.RULECODE AND T7.RULEEVENT = 'ADDDBS'
				   LEFT JOIN RMTACCOUNTINGSET T8 ON T1.ACCOUNTINGSETID = T8.ACCOUNTSETID
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T9 ON T1.EMIRATES = T9.CPPROVINCE
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T10 ON T1.FROMPROVINCE = T10.CPPROVINCE
				   LEFT JOIN RMTCOUNTRYVSPROVINCE T11 ON T1.TOPROVINCE = T11.CPPROVINCE
				   LEFT JOIN BANKBRANCHES T12 ON T1.BANKBRANCHID = T12.BANKBRANCHID
				   LEFT JOIN BMTBANKDETAIL T13 ON T12.BANKCODE = T13.BANKCODE
				   LEFT JOIN VASPRODUCTCATEGORY T14 ON T1.PRODUCTCTG = T14.PRODUCTCTG
				   LEFT JOIN PINCODES T15 ON T1.PINCODEID = T15.PINCODEID
				   WHERE NOT (EXISTS ( SELECT 1
				   FROM AMTVEHICLEDEALER_TEMP
				   WHERE AMTVEHICLEDEALER_TEMP.DEALERID = T1.DEALERID))
			]]>
	    </createView>
	</changeSet>

	<changeSet id="ST#931.55_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'amtvehicledealer_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.56" author="Gopalaswamy.M">
		<addColumn tableName="FinTaxDetail">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.57" author="Gopalaswamy.M">
		<addColumn tableName="FinTaxDetail_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#931.58" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_FinTaxDetail_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="FinTaxDetail" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.59" author="Gopalaswamy.M">
		<addForeignKeyConstraint constraintName="FK_FinTaxDetail_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="FinTaxDetail_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="ST#931.60" author="Gopalaswamy.M">
		<createIndex tableName="FinTaxDetail" indexName="IDX_FinTaxDetail_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.61" author="Gopalaswamy.M">
		<createIndex tableName="FinTaxDetail_TEMP" indexName="IDX_FinTaxDetail_T_PID">
			<column name="PinCodeId" type="bigint" />
		</createIndex>
	</changeSet>

	<changeSet id="ST#931.62_MIG" author="Gopalaswamy.M" dbms="postgresql, mssql">
		<sql>
			<![CDATA[
				Update FinTaxDetail set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = FinTaxDetail.PinCode;
				Update FinTaxDetail_TEMP set PinCodeId = p.PinCodeId from PinCodes p where p.PinCode = FinTaxDetail_TEMP.PinCode;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.62_MIG" author="Gopalaswamy.M" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO FinTaxDetail FT
				USING PinCodes PC ON (PC.PinCode = FT.PinCode)
				WHEN MATCHED THEN UPDATE SET FT.PinCodeId = PC.PinCodeId;
				
				MERGE INTO FinTaxDetail_TEMP FT
				USING PinCodes PC ON (PC.PinCode = FT.PinCode)
				WHEN MATCHED THEN UPDATE SET FT.PinCodeId = PC.PinCodeId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.63_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintaxdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.63" author="Gopalaswamy.M">
		<createView viewName="FINTAXDETAIL_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.FINREFERENCE,
				    T1.APPLICABLEFOR,
				    T1.TAXCUSTID,
				    T1.TAXEXEMPTED,
				    T1.TAXNUMBER,
				    T1.ADDRLINE1,
				    T1.ADDRLINE2,
				    T1.ADDRLINE3,
				    T1.ADDRLINE4,
				    T1.COUNTRY,
				    T1.PROVINCE,
				    T1.CITY,
				    T1.PINCODE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.COUNTRYDESC COUNTRYNAME,
				    T3.CPPROVINCENAME PROVINCENAME,
				    T4.PCCITYNAME CITYNAME,
				    T5.AREANAME PINCODENAME,
				    T6.CUSTCIF,
				    T6.CUSTSHRTNAME,
				    T1.SEZCERTIFICATENO,
				    T1.SEZVALUEDATE,
				    T1.ADDRESSDETAIL,
				    T1.PINCODEID
				    FROM FINTAXDETAIL T1
				    LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
				    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.PROVINCE = T3.CPPROVINCE AND T1.COUNTRY = T3.CPCOUNTRY
				    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.CITY = T4.PCCITY AND T1.PROVINCE = T4.PCPROVINCE AND T1.COUNTRY = T4.PCCOUNTRY
				    LEFT JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID AND T1.CITY = T5.CITY
				    JOIN CUSTOMERS T6 ON T1.TAXCUSTID = T6.CUSTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.63_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintaxdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.64_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintaxdetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.64" author="Gopalaswamy.M">
		<createView viewName="FINTAXDETAIL_TVIEW" replaceIfExists="true">
			<![CDATA[
				   SELECT T1.FINREFERENCE,
					    T1.APPLICABLEFOR,
					    T1.TAXCUSTID,
					    T1.TAXEXEMPTED,
					    T1.TAXNUMBER,
					    T1.ADDRLINE1,
					    T1.ADDRLINE2,
					    T1.ADDRLINE3,
					    T1.ADDRLINE4,
					    T1.COUNTRY,
					    T1.PROVINCE,
					    T1.CITY,
					    T1.PINCODE,
					    T1.VERSION,
					    T1.LASTMNTBY,
					    T1.LASTMNTON,
					    T1.RECORDSTATUS,
					    T1.ROLECODE,
					    T1.NEXTROLECODE,
					    T1.TASKID,
					    T1.NEXTTASKID,
					    T1.RECORDTYPE,
					    T1.WORKFLOWID,
					    T2.COUNTRYDESC COUNTRYNAME,
					    T3.CPPROVINCENAME PROVINCENAME,
					    T4.PCCITYNAME CITYNAME,
					    T5.AREANAME PINCODENAME,
					    T6.CUSTCIF,
					    T6.CUSTSHRTNAME,
					    T1.SEZCERTIFICATENO,
					    T1.SEZVALUEDATE,
					    T1.ADDRESSDETAIL,
					    T1.PINCODEID
					   	FROM FINTAXDETAIL_TEMP T1
					    LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
					    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.PROVINCE = T3.CPPROVINCE AND T1.COUNTRY = T3.CPCOUNTRY
					    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.CITY = T4.PCCITY AND T1.PROVINCE = T4.PCPROVINCE AND T1.COUNTRY = T4.PCCOUNTRY
					    LEFT JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID AND T1.CITY = T5.CITY
					    JOIN CUSTOMERS T6 ON T1.TAXCUSTID = T6.CUSTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#931.64_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintaxdetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.65_pre" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintaxdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#931.65" author="Gopalaswamy.M">
		<createView viewName="FINTAXDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.FINREFERENCE,
				    T1.APPLICABLEFOR,
				    T1.TAXCUSTID,
				    T1.TAXEXEMPTED,
				    T1.TAXNUMBER,
				    T1.ADDRLINE1,
				    T1.ADDRLINE2,
				    T1.ADDRLINE3,
				    T1.ADDRLINE4,
				    T1.COUNTRY,
				    T1.PROVINCE,
				    T1.CITY,
				    T1.PINCODE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.COUNTRYDESC COUNTRYNAME,
				    T3.CPPROVINCENAME PROVINCENAME,
				    T4.PCCITYNAME CITYNAME,
				    T5.AREANAME PINCODENAME,
				    T6.CUSTCIF,
				    T6.CUSTSHRTNAME,
				    T1.SEZCERTIFICATENO,
				    T1.SEZVALUEDATE,
					T1.ADDRESSDETAIL,
				    T1.PINCODEID
				  	FROM FINTAXDETAIL_TEMP T1
				  	LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY  = T2.COUNTRYCODE
				  	LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.PROVINCE = T3.CPPROVINCE AND T1.COUNTRY  = T3.CPCOUNTRY
				    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.CITY = T4.PCCITY AND T1.PROVINCE = T4.PCPROVINCE AND T1.COUNTRY  = T4.PCCOUNTRY
				    LEFT JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID AND T1.CITY = T5.CITY
				    JOIN CUSTOMERS T6 ON T1.TAXCUSTID = T6.CUSTID
				UNION ALL
			 SELECT T1.FINREFERENCE,
				    T1.APPLICABLEFOR,
				    T1.TAXCUSTID,
				    T1.TAXEXEMPTED,
				    T1.TAXNUMBER,
				    T1.ADDRLINE1,
				    T1.ADDRLINE2,
				    T1.ADDRLINE3,
				    T1.ADDRLINE4,
				    T1.COUNTRY,
				    T1.PROVINCE,
				    T1.CITY,
				    T1.PINCODE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.COUNTRYDESC COUNTRYNAME,
				    T3.CPPROVINCENAME PROVINCENAME,
				    T4.PCCITYNAME CITYNAME,
				    T5.AREANAME PINCODENAME,
				    T6.CUSTCIF,
				    T6.CUSTSHRTNAME,
				    T1.SEZCERTIFICATENO,
				    T1.SEZVALUEDATE,
					T1.ADDRESSDETAIL,
				    T1.PINCODEID
				    FROM FINTAXDETAIL T1
				    LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY  = T2.COUNTRYCODE
				    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.PROVINCE = T3.CPPROVINCE AND T1.COUNTRY  = T3.CPCOUNTRY
				    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.CITY = T4.PCCITY AND T1.PROVINCE = T4.PCPROVINCE AND T1.COUNTRY  = T4.PCCOUNTRY
				    LEFT JOIN PINCODES T5 ON T1.PINCODEID = T5.PINCODEID AND T1.CITY = T5.CITY
				    JOIN CUSTOMERS T6 ON T1.TAXCUSTID = T6.CUSTID
				    WHERE NOT (EXISTS ( SELECT 1 FROM FINTAXDETAIL_TEMP WHERE FINTAXDETAIL_TEMP.FINREFERENCE = T1.FINREFERENCE))
			]]>
	    </createView>
	</changeSet>

	<changeSet id="ST#931.65_post" author="Gopalaswamy.M" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintaxdetail_view');
			]]>
		</sql>
	</changeSet>

	<!-- ST#931 - Pin Code Changes change logs end -->

	<!-- Payment Instructions change log start -->
	<changeSet id="40_pre" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemainmaintenance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="40" author="saisandeep.b">
		<createView viewName="FinanceMainMaintenance_View" replaceIfExists="true">
			<![CDATA[
				SELECT T1.Finreference,
   			 	 	   T1.FinType,
  			 	 	   T1.FINCCY,
               		   T1.CalRoundingMode,
               		   T1.RoundingTarget,
               		   T1.FinBranch,
               		   T1.CustId,
               		   T1.FINSTARTDATE,
                       T1.MATURITYDATE,
                       T1.ClosingStatus
			       FROM FinanceMain_Temp T1
				   UNION ALL
				   SELECT T1.Finreference,
   					   T1.FinType,
   			  		   T1.FINCCY,
              		   T1.CalRoundingMode,
             		   T1.RoundingTarget,
                       T1.FinBranch,
                       T1.CustId,
                       T1.FINSTARTDATE,
                       T1.MATURITYDATE,
                       T1.ClosingStatus
                FROM FinanceMain T1
            	WHERE NOT EXISTS(SELECT 1 FROM FinanceMain_TEMP WHERE finreference = T1.finreference)
            ]]>
		</createView>
	</changeSet>

	<changeSet id="40_post" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemainmaintenance_view');
			]]>
		</sql>
	</changeSet>

	<!-- Payment Instructions change log end -->

	<!-- GST Invoice Report change log start -->
	<changeSet id="41_pre" author="saisandeep.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'gst_financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="41" author="saisandeep.b">
		<createView viewName="GST_FINANCEMAIN_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT DISTINCT T1.FINREFERENCE,
				   T1.FINTYPE
				FROM FINANCEMAIN T1
				JOIN GST_INVOICE_TXN T2 ON T2.LOANACCOUNTNO = T1.FINREFERENCE
				UNION ALL
				SELECT DISTINCT T1.FINREFERENCE,
   				   T1.FINTYPE
   				FROM REJECTFINANCEMAIN T1
   				JOIN GST_INVOICE_TXN T2 ON T2.LOANACCOUNTNO =T1.FINREFERENCE
            ]]>
		</createView>
	</changeSet>

	<changeSet id="41_post" author="saisandeep.b" dbms="postgresql">
		<sql> 
			<![CDATA[
				select deps_restore_dependencies ('plf', 'gst_financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="42" author="saisandeep.b">
		<comment>View to fetch cancel or rejected finances</comment>
		<createView viewName="FeeRefundFinanceMain_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FM.FinReference,
					FM.Fintype,
					FM.FinCcy,
					FM.FinBranch,
					FM.ClosingStatus
					FROM FinanceMain FM
					WHERE ClosingStatus ='C'
				  
				UNION ALL
				  
				SELECT RF.FinReference,
					RF.Fintype,
					RF.FinCcy,
					RF.FinBranch,
					RF.ClosingStatus
					FROM RejectFinanceMain RF
					WHERE NOT EXISTS
					(SELECT 1
					FROM FinanceMain
					WHERE FinReference = RF.FinReference
					AND ClosingStatus  ='C'
					)
					AND FinReference IN
					(SELECT REFERENCE
					FROM FinReceiptHeader
					WHERE ReceiptPurpose ='FEEPAYMENT'
					AND ReceiptModeStatus !='C'
					)
			]]>
		</createView>
	</changeSet>

	<changeSet id="43" author="saisandeep.b">
		<comment>Added PAYMENTTYPE switch case for cash</comment>
		<createView viewName="FinReceiptHeader_FEDView" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					CASE
						WHEN T1.RECAGAINST = 'C'
						THEN T13.CUSTCIF
						ELSE T1.REFERENCE
					END  REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC  FINBRANCHDESC,
					T5.CCYDESC     FINCCYDESC,
					T7.REJECTDESC  CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0)  FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS  PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0)  CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					(
					CASE
						WHEN T8.PAYMENTTYPE IN ('CHEQUE', 'DD')
						THEN T8.FAVOURNUMBER
						WHEN T8.PAYMENTTYPE IN ('CASH')
						THEN T8.PAYMENTREF
						ELSE T8.TRANSACTIONREF
					END) TRANSACTIONREF,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC  FINDIVISIONDESC,
					T11.BRANCHDESC        POSTBRANCHDESC,
					T12.BRANCHDESC        CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE         COLLECTIONAGENTCODE,
					T9.DESCRIPTION  COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF       CUSTOMERCIF,
					T13.CUSTSHRTNAME  CUSTOMERNAME
					FROM FINRECEIPTHEADER_TEMP T1
					INNER JOIN (select
							CUSTID,
							FINREFERENCE,
							FINTYPE,
							FINBRANCH,
							FINCCY,
							COALESCE(FINISACTIVE, 0)  FINISACTIVE,
							SCHEDULEMETHOD,
							PROFITDAYSBASIS,
							PRODUCTCATEGORY,
							PROMOTIONCODE,
							NEXTREPAYRVWDATE
							from FINANCEMAIN_TEMP fm
							union all
							select
							CUSTID,
							FINREFERENCE,
							FINTYPE,
							FINBRANCH,
							FINCCY,
							COALESCE(FINISACTIVE, 0)  FINISACTIVE,
							SCHEDULEMETHOD,
							PROFITDAYSBASIS,
							PRODUCTCATEGORY,
							PROMOTIONCODE,
							NEXTREPAYRVWDATE
							from FINANCEMAIN fm
							WHERE NOT (EXISTS
					(SELECT 1 FROM FINANCEMAIN_TEMP
					WHERE FINANCEMAIN_TEMP.FinReference = fm.FinReference))) T2 ON T1.REFERENCE = T2.FINREFERENCE
					INNER JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					INNER JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					INNER JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					INNER JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					INNER JOIN FINRECEIPTDETAIL T8 ON T1.RECEIPTID = T8.RECEIPTID AND T1.RECEIPTMODE = T8.PAYMENTTYPE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID as VARCHAR(20)) = T1.REFERENCE
				  
				UNION ALL
				
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					CASE
						WHEN T1.RECAGAINST = 'C'
						THEN T13.CUSTCIF
						ELSE T1.REFERENCE
					END  REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0)  FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS  PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0)  CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					(CASE
						WHEN T8.PAYMENTTYPE IN ('CHEQUE', 'DD')
						THEN T8.FAVOURNUMBER
						WHEN T8.PAYMENTTYPE IN ('CASH')
						THEN T8.PAYMENTREF
						ELSE T8.TRANSACTIONREF
					END) TRANSACTIONREF,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC  FINDIVISIONDESC,
					T11.BRANCHDESC        POSTBRANCHDESC,
					T12.BRANCHDESC        CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE         COLLECTIONAGENTCODE,
					T9.DESCRIPTION  COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF       CUSTOMERCIF,
					T13.CUSTSHRTNAME  CUSTOMERNAME
					FROM FINRECEIPTHEADER T1
					INNER JOIN (select
							CUSTID,
							FINREFERENCE,
							FINTYPE,
							FINBRANCH,
							FINCCY,
							COALESCE(FINISACTIVE, 0)  FINISACTIVE,
							SCHEDULEMETHOD,
							PROFITDAYSBASIS,
							PRODUCTCATEGORY,
							PROMOTIONCODE,
							NEXTREPAYRVWDATE
							from FINANCEMAIN_TEMP fm
							union all
							select
							CUSTID,
							FINREFERENCE,
							FINTYPE,
							FINBRANCH,
							FINCCY,
							COALESCE(FINISACTIVE, 0)  FINISACTIVE,
							SCHEDULEMETHOD,
							PROFITDAYSBASIS,
							PRODUCTCATEGORY,
							PROMOTIONCODE,
							NEXTREPAYRVWDATE
							from FINANCEMAIN fm
							WHERE NOT (EXISTS
					(SELECT 1 FROM FINANCEMAIN_TEMP
					WHERE FINANCEMAIN_TEMP.FinReference = fm.FinReference))) T2 ON T1.REFERENCE = T2.FINREFERENCE
					INNER JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					INNER JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					INNER JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					INNER JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					INNER JOIN FINRECEIPTDETAIL T8 ON T1.RECEIPTID = T8.RECEIPTID AND T1.RECEIPTMODE = T8.PAYMENTTYPE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID as VARCHAR(20)) = T1.REFERENCE
					WHERE NOT (EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP
					WHERE FINRECEIPTHEADER_TEMP.RECEIPTID = T1.RECEIPTID))
			]]>
		</createView>
	</changeSet>

	<changeSet id="45" author="saisandeep.b">
		<comment>View to fetch cancel or rejected finances</comment>
		<createView viewName="FeeRefundFinanceMain_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT Distinct FM.FINREFERENCE,
  					FM.FINTYPE,
  					FM.FINCCY,
  					FM.FINBRANCH,
  					FM.CLOSINGSTATUS
  					FROM FINANCEMAIN FM
  				INNER JOIN FINRECEIPTHEADER FR ON FR.REFERENCE = FM.FINREFERENCE AND FR.RECEIPTPURPOSE  = 'FEEPAYMENT'
               	AND (SELECT SUM(FD.PaidAmount) from FINFEEDETAIL FD Where FD.FINREFERENCE = FM.FINREFERENCE) > 0
  				WHERE FM.CLOSINGSTATUS  = 'C'
  				
				UNION ALL
				
				SELECT Distinct FM.FINREFERENCE,
  					FM.FINTYPE,
  					FM.FINCCY,
  					FM.FINBRANCH,
  					FM.CLOSINGSTATUS
  					FROM REJECTFINANCEMAIN FM
  				INNER JOIN FINRECEIPTHEADER FR ON FM.FINREFERENCE = FR.REFERENCE AND FR.RECEIPTPURPOSE  = 'FEEPAYMENT'
  				WHERE FR.RECEIPTMODESTATUS != 'C'
  				AND NOT (EXISTS
  				(SELECT 1
  				FROM FINANCEMAIN
 			    WHERE FINANCEMAIN.FINREFERENCE = FM.FINREFERENCE
  				AND FINANCEMAIN.CLOSINGSTATUS  = 'C'
  				))
			]]>
		</createView>
	</changeSet>

	<!-- ST#540 - NPA & Provision Change Sets Start -->

	<changeSet id="ST#540.1" author="Vijayakumar.k">
		<comment>NPA Tagging SMT Parameters</comment>
		<sql>
			<![CDATA[
				delete from SMTParameters where	sysparmcode='NPA_TAGGING';
				Insert into SMTParameters values ('NPA_TAGGING', 'NPA Tagging At Loan(L) or Customer(C) Level.','String','1','L',1,0,null,null,'NPA Tagging At Loan(L) or Customer(C) Level.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>


	<changeSet id="ST#540.2" author="Durga Prasad G">
		<comment>NPA REPAY HIERACHY</comment>
		<sql>
			<![CDATA[
				delete from SMTParameters where	sysparmcode='RPYHCY_ON_NPA';
				Insert into SMTParameters values ('RPYHCY_ON_NPA','REPAY HIERACHY ON NPA','String','1','PICF',4,0,null,null,'REPAY HIERACHY ON NPA.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.3" author="Durga Prasad G">
		<comment>NPA PROVISION_BOOKS</comment>
		<sql>
			<![CDATA[
				delete from SMTParameters where	sysparmcode='PROVISION_BOOKS';
				Insert into SMTParameters values ('PROVISION_BOOKS', 'Provision Books of Accounting.(Regulatory(REG),Internal(INT))','String','1','REG',3,0,null,null,'Provision Books of Accounting.(Regulatory(REG),Internal(INT)).',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.4" author="Durga Prasad G">
		<comment>NPA REQUIRED OR NOT</comment>
		<sql>
			<![CDATA[
				delete from SMTParameters where	sysparmcode='NPA_PROVISION_REQUIRED';
				Insert into SMTParameters values ('NPA_PROVISION_REQUIRED', 'NPA Provision Required Or Not(Y/N).','String','1','N',1,0,null,null,'NPA Provision Required Or Not(Y/N).',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.5" author="DurgaPrasad.G">
		<comment>Provision Reversal PostDate(Y-Start Of Month,N-End Of Month)</comment>
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='PROVISION_EFF_POSTDATE';
				INSERT INTO SMTPARAMETERS VALUES ('PROVISION_EFF_POSTDATE', 'Provision Reversal PostDate(Y-Start Of Month,N-End Of Month).', 'String', 1, 'Y', 1, 0, NULL, NULL,'Provision Reversal PostDate(Y-Start Of Month,N-End Of Month).', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>


	<changeSet id="ST#540.6" author="Arun.d">
		<createTable tableName="NPA_TEMPLATE_TYPES">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="PK_NPA_TEMPLATE_TYPES_ID" />
			</column>
			<column name="Code" type="varchar(8)">
				<constraints unique="true" nullable="false" uniqueConstraintName="UK_NPA_TEMPLATE_TYPES_NPA_CODE" />
			</column>
			<column name="Description" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean" defaultValue="true">
			</column>
		</createTable>
	</changeSet>

	<changeSet id="ST#540.7" author="Arun.d">
		<insert tableName="NPA_TEMPLATE_TYPES">
			<column name="Id">1</column>
			<column name="Code">REG</column>
			<column name="Description">Regulatory body.</column>
			<column name="Active">1</column>
		</insert>
	</changeSet>

	<changeSet id="ST#540.8" author="Arun.d">
		<insert tableName="NPA_TEMPLATE_TYPES">
			<column name="Id">2</column>
			<column name="Code">INT</column>
			<column name="Description">Internal</column>
			<column name="Active">1</column>
		</insert>
	</changeSet>

	<changeSet id="ST#540.9" author="Tejaswi.b">
		<createTable tableName="ASSET_CLSSFICATN_HEADER">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="PK_AST_CLSFN_HEADER_ID" />
			</column>
			<column name="Code" type="varchar(8)">
				<constraints unique="true" nullable="false" uniqueConstraintName="UK_AST_CLSFN_HEADER_CODE" />
			</column>
			<column name="Description" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="StageOrder" type="int" >
				<constraints unique="true" nullable="false" uniqueConstraintName="UK_AST_CLSFN_HEADER_STGORDR" />
			</column>
			<column name="Active" type="boolean" />
			<column name="Version" type="int"  />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="ST#540.10" author="Tejaswi.b">
		<createTable tableName="ASSET_CLSSFICATN_HEADER_TEMP">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="PK_AST_CLSFN_HEADER_ID_T" />
			</column>
			<column name="Code" type="varchar(8)">
				<constraints unique="true" nullable="false" uniqueConstraintName="UK_AST_CLSFN_HEADER_CODE_T" />
			</column>
			<column name="Description" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="StageOrder" type="int" >
				<constraints unique="true" nullable="false" uniqueConstraintName="UK_AST_CLSFN_HEADER_STGORDR_T" />
			</column>
			<column name="Active" type="boolean"  />
			<column name="Version" type="int"  />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	
	<changeSet id="ST#540.10.1" author="Tejaswi.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="StageOrder" tableName="ASSET_CLSSFICATN_HEADER" defaultValue="0" />
		<addDefaultValue columnName="Active" tableName="ASSET_CLSSFICATN_HEADER" defaultValue="0" />
		<addDefaultValue columnName="Version" tableName="ASSET_CLSSFICATN_HEADER" defaultValue="0" />
		<addDefaultValue columnName="StageOrder" tableName="ASSET_CLSSFICATN_HEADER_TEMP" defaultValue="0" />
		<addDefaultValue columnName="Active" tableName="ASSET_CLSSFICATN_HEADER_TEMP" defaultValue="0" />
		<addDefaultValue columnName="Version" tableName="ASSET_CLSSFICATN_HEADER_TEMP" defaultValue="0" />
	</changeSet>
	
	<changeSet id="ST#540.10.1" author="Tejaswi.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE ASSET_CLSSFICATN_HEADER ADD CONSTRAINT DF_ASSET_CLSSFICATN_HDR_SO DEFAULT 0 FOR StageOrder;
				ALTER TABLE ASSET_CLSSFICATN_HEADER ADD CONSTRAINT DF_ASSET_CLSSFICATN_HDR_ACT DEFAULT 0 FOR Active;
				ALTER TABLE ASSET_CLSSFICATN_HEADER ADD CONSTRAINT DF_ASSET_CLSSFICATN_HDR_VRS DEFAULT 0 FOR Version;
				ALTER TABLE ASSET_CLSSFICATN_HEADER_TEMP ADD CONSTRAINT DF_ASSET_CLSSFICATN_HDR_T_SO DEFAULT 0 FOR StageOrder;
				ALTER TABLE ASSET_CLSSFICATN_HEADER_TEMP ADD CONSTRAINT DF_ASSET_CLSSFICATN_HDR_T_ACT DEFAULT 0 FOR Active;
				ALTER TABLE ASSET_CLSSFICATN_HEADER_TEMP ADD CONSTRAINT DF_ASSET_CLSSFICATN_HDR_T_VRS DEFAULT 0 FOR Version;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.11" author="Tejaswi.b">
		<createTable tableName="ASSET_CLSSFICATN_DETAILS">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" nullable="false" primaryKeyName="PK_AST_CLSFN_DETAILS_ID" />
			</column>
			<column name="HeaderId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinType" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="ST#540.12" author="Tejaswi.b">
		<createTable tableName="ASSET_CLSSFICATN_DETAILS_TEMP">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" nullable="false" primaryKeyName="PK_AST_CLSFN_DETAILS_ID_T" />
			</column>
			<column name="HeaderId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinType" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int"  />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="ST#540.12.1" author="Tejaswi.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="Version" tableName="ASSET_CLSSFICATN_DETAILS" defaultValue="0" />
		<addDefaultValue columnName="Version" tableName="ASSET_CLSSFICATN_DETAILS_TEMP" defaultValue="0" />
		
	</changeSet>
	
	<changeSet id="ST#540.12.1" author="Tejaswi.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE ASSET_CLSSFICATN_DETAILS ADD CONSTRAINT DF_ASSET_CLSSFICATN_DTLS_VRS DEFAULT 0 FOR Version;
				ALTER TABLE ASSET_CLSSFICATN_DETAILS_TEMP ADD CONSTRAINT DF_ASSET_CLSSFICATN_DTLS_T_VRS DEFAULT 0 FOR Version;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.13" author="Tejaswi.b">
		<addForeignKeyConstraint constraintName="FK_AST_CLSFNS_DETAIL_HEADERID" referencedTableName="ASSET_CLSSFICATN_HEADER"
			baseColumnNames="HeaderId" baseTableName="ASSET_CLSSFICATN_DETAILS" referencedColumnNames="Id" />
	</changeSet>

	<changeSet id="ST#540.14" author="Tejaswi.b">
		<createSequence sequenceName="SEQ_ASSET_CLSSFICATN_HEADER" />
	</changeSet>

	<changeSet id="ST#540.15" author="Tejaswi.b">
		<createSequence sequenceName="SEQ_ASSET_CLSSFICATN_DETAILS" />
	</changeSet>

	<changeSet id="ST#540.16" author="Tejaswi.b">
		<createView replaceIfExists="true" viewName="ASSET_CLSSFICATN_HEADER_AVIEW">
			<![CDATA[
					SELECT    T1.Id, 
						T1.Code, 
						T1.Description,
						T1.StageOrder,
						T1.Active, 
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId
					FROM ASSET_CLSSFICATN_HEADER T1
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.17" author="Tejaswi.b">
		<createView replaceIfExists="true" viewName="ASSET_CLSSFICATN_HEADER_VIEW">
			<![CDATA[
				SELECT    T1.Id,
					T1.Code, 
					T1.Description,
					T1.StageOrder,
					T1.Active, 
					T1.Version, 
					T1.LastMntBy, 
					T1.LastMntOn, 
					T1.RecordStatus, 
					T1.RoleCode, 
					T1.NextRoleCode, 
					T1.TaskId, 
					T1.NextTaskId, 
					T1.RecordType, 
					T1.WorkflowId
          		FROM   ASSET_CLSSFICATN_HEADER_TEMP T1 
				UNION ALL
				SELECT   T1.Id,
					T1.Code, 
					T1.Description,
					T1.StageOrder,
					T1.Active, 
					T1.Version, 
					T1.LastMntBy, 
					T1.LastMntOn, 
					T1.RecordStatus, 
					T1.RoleCode, 
					T1.NextRoleCode, 
					T1.TaskId, 
					T1.NextTaskId, 
					T1.RecordType, 
					T1.WorkflowId
         	 FROM   ASSET_CLSSFICATN_HEADER T1
        	 WHERE     NOT EXISTS
          	 (SELECT 1 FROM ASSET_CLSSFICATN_HEADER_TEMP WHERE   ASSET_CLSSFICATN_HEADER_TEMP.Code = T1.Code)
          ]]>
       </createView>
	</changeSet>

	<changeSet id="ST#540.18" author="Tejaswi.b">
		<createView replaceIfExists="true" viewName="ASSET_CLSSFICATN_DETAILS_AVIEW">
			<![CDATA[
					SELECT    T1.Id, 
						T1.HeaderId, 
						T1.FinType,
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId
					FROM ASSET_CLSSFICATN_DETAILS T1
					JOIN rmtfinancetypes t7 ON T1.FinType = t7.FinType
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.19" author="Tejaswi.b">
		<createView replaceIfExists="true" viewName="ASSET_CLSSFICATN_DETAILS_VIEW">
			<![CDATA[
				SELECT    T1.Id,
					T1.HeaderId, 
					T1.FinType, 
					T1.Version, 
					T1.LastMntBy, 
					T1.LastMntOn, 
					T1.RecordStatus, 
					T1.RoleCode, 
					T1.NextRoleCode, 
					T1.TaskId, 
					T1.NextTaskId, 
					T1.RecordType, 
					T1.WorkflowId
          		FROM   ASSET_CLSSFICATN_DETAILS_TEMP T1 
         		JOIN rmtfinancetypes t7 ON T1.FinType = t7.FinType
				UNION ALL
				SELECT   T1.Id,
					T1.HeaderId, 
					T1.FinType, 
					T1.Version, 
					T1.LastMntBy, 
					T1.LastMntOn, 
					T1.RecordStatus, 
					T1.RoleCode, 
					T1.NextRoleCode, 
					T1.TaskId, 
					T1.NextTaskId, 
					T1.RecordType, 
					T1.WorkflowId
         	 FROM   ASSET_CLSSFICATN_DETAILS T1
			JOIN rmtfinancetypes t7 ON t1.FinType = t7.FinType
        	WHERE     NOT EXISTS
          	(SELECT 1 FROM ASSET_CLSSFICATN_DETAILS_TEMP WHERE   
          	ASSET_CLSSFICATN_DETAILS_TEMP.HeaderId = T1.HeaderId AND
          	ASSET_CLSSFICATN_DETAILS_TEMP.Id = T1.Id)
          ]]>
       </createView>
	</changeSet>

	<changeSet id="ST#540.20" author="Tejaswi.b">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
				
				Delete from secGroupRights Where GrpID in  (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_VIEW');
				Delete from secGroupRights Where GrpID in  (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER');
				Delete from secGroupRights Where GrpID in  (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_APPROVER');

				Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
				Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'ASSETCLASSIFICATIONHEADER_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
				
				Delete from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_VIEW'; 
				Delete from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER';
				Delete from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_APPROVER';
				
				Delete from Secrights Where Rightname = 'menuItem_ApplicationMaster_AssetClassificationHeader';
				Delete from Secrights Where Rightname = 'menuItem_ApplicationMaster_AssetClassificationHeaderEnquiry';
				
				Delete from Secrights Where Rightname = 'button_AssetClassificationHeaderList_PrintList';
				Delete from Secrights Where Rightname = 'button_AssetClassificationHeaderList_NewAssetClassificationHeader';
				Delete from Secrights Where Rightname = 'button_AssetClassificationHeaderDialog_btnNew';
				Delete from Secrights Where Rightname = 'button_AssetClassificationHeaderDialog_btnEdit';
				Delete from Secrights Where Rightname = 'button_AssetClassificationHeaderDialog_btnDelete';
				Delete from Secrights Where Rightname = 'button_AssetClassificationHeaderDialog_btnSave';
				Delete from Secrights Where Rightname = 'button_AssetClassificationHeaderDialog_TemplateId';
				
				Delete from Secrights Where Rightname = 'AssetClassificationHeaderDialog_Code';
				Delete from Secrights Where Rightname = 'AssetClassificationHeaderDialog_Description';
				Delete from Secrights Where Rightname = 'AssetClassificationHeaderDialog_StageOrder';
				Delete from Secrights Where Rightname = 'AssetClassificationHeaderDialog_Active';
				Delete from Secrights Where Rightname = 'AssetClassificationHeaderDialog_TemplateId';
				
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0,'menuItem_ApplicationMaster_AssetClassificationHeader','MENU',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0,'menuItem_ApplicationMaster_AssetClassificationHeaderEnquiry','MENU',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_AssetClassificationHeaderList_PrintList','AssetClassificationHeaderList',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_AssetClassificationHeaderList_NewAssetClassificationHeader','AssetClassificationHeaderList',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_AssetClassificationHeaderDialog_btnNew','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_AssetClassificationHeaderDialog_btnEdit','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_AssetClassificationHeaderDialog_btnDelete','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_AssetClassificationHeaderDialog_btnSave','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_AssetClassificationHeaderDialog_FinType','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'AssetClassificationHeaderDialog_Code','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'AssetClassificationHeaderDialog_Description','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'AssetClassificationHeaderDialog_StageOrder','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'AssetClassificationHeaderDialog_Active','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'AssetClassificationHeaderDialog_FinType','AssetClassificationHeaderDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;


				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'ASSETCLASSIFICATIONHEADER_VIEW','Allow to view AssetClassificationHeader', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'ASSETCLASSIFICATIONHEADER_MAKER','WF Maker for AssetClassificationHeader', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'ASSETCLASSIFICATIONHEADER_APPROVER','WF Approver for AssetClassificationHeader', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;


				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_VIEW'), (Select RightID from SecRights where RightName = 'menuItem_ApplicationMaster_AssetClassificationHeaderEnquiry'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_VIEW'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderList_PrintList'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_ApplicationMaster_AssetClassificationHeader'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderList_PrintList'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderDialog_FinType'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'AssetClassificationHeaderDialog_Code'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'AssetClassificationHeaderDialog_Description'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'AssetClassificationHeaderDialog_StageOrder'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'AssetClassificationHeaderDialog_FinType'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightID from SecRights where RightName = 'AssetClassificationHeaderDialog_Active'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_ApplicationMaster_AssetClassificationHeader'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_APPROVER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderList_PrintList'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_APPROVER'), (Select RightID from SecRights where RightName = 'button_AssetClassificationHeaderDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;

				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='ASSETCLASSIFICATIONHEADER_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ; 
				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='ASSETCLASSIFICATIONHEADER_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ; 


				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId)  from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId)  from SecRoleGroups);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.21" author="Vijayakumar.k">
		<createTable tableName="NPA_PROVISION_HEADER">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="PK_NPA_PROVISION_HEADER_ID" />
			</column>

			<column name="Entity" type="varchar(8)">
				<constraints nullable="false" />
			</column>

			<column name="FinType" type="varchar(8)">
				<constraints unique="true" nullable="false" uniqueConstraintName="UK_NPA_PRVSN_HEADER_FINTYPE" />
			</column>
			<column name="Active" type="boolean"  />
			<column name="Version" type="int"  />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="ST#540.22" author="Vijayakumar.k">
		<createTable tableName="NPA_PROVISION_HEADER_TEMP">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="PK_NPA_PROVISION_HEADER_ID_T" />
			</column>

			<column name="Entity" type="varchar(8)">
				<constraints nullable="false" />
			</column>

			<column name="FinType" type="varchar(8)">
				<constraints unique="true" nullable="false" uniqueConstraintName="UK_NPA_PRVSN_HEADER_FINTYPE_T" />
			</column>
			<column name="Active" type="boolean"  />
			<column name="Version" type="int"  />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="ST#540.22.1" author="Tejaswi.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="Active" tableName="NPA_PROVISION_HEADER" defaultValue="1" />
		<addDefaultValue columnName="Version" tableName="NPA_PROVISION_HEADER" defaultValue="0" />
		<addDefaultValue columnName="Active" tableName="NPA_PROVISION_HEADER_TEMP" defaultValue="1" />	
		<addDefaultValue columnName="Version" tableName="NPA_PROVISION_HEADER_TEMP" defaultValue="0" />	
	</changeSet>
	
	<changeSet id="ST#540.22.1" author="Tejaswi.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE NPA_PROVISION_HEADER ADD CONSTRAINT DF_NPA_PROVISION_HEADER_ACT DEFAULT 1 FOR Active;
				ALTER TABLE NPA_PROVISION_HEADER ADD CONSTRAINT DF_NPA_PROVISION_HEADER_VRS DEFAULT 0 FOR Version;
				ALTER TABLE NPA_PROVISION_HEADER_TEMP ADD CONSTRAINT DF_NPA_PROVISION_HEADER_T_ACT DEFAULT 1 FOR Active;
				ALTER TABLE NPA_PROVISION_HEADER_TEMP ADD CONSTRAINT DF_NPA_PROVISION_HEADER_T_VRS DEFAULT 0 FOR Version;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.23" author="Vijayakumar.k">
		<createView replaceIfExists="true" viewName="NPA_PROVISION_HEADER_AVIEW">
				<![CDATA[
					SELECT    T1.Id, 
						T1.Entity, 
						T1.FinType,
						T3.EntityDesc as EntityName,
						T2.FintypeDesc as FintypeName, 
						T1.Active,
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId
						FROM NPA_PROVISION_HEADER T1
						JOIN rmtfinancetypes T2 ON T1.FinType = T2.FinType 
						JOIN entity T3 ON T3.EntityCode = T1.entity
				]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.24" author="Vijayakumar.k">
		<createView replaceIfExists="true" viewName="NPA_PROVISION_HEADER_VIEW">
				<![CDATA[
					SELECT    T1.Id, 
						T1.Entity, 
						T1.FinType,
						T3.EntityDesc as EntityName,
						T2.FintypeDesc as FintypeName, 
						T1.Active,
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId
						FROM NPA_PROVISION_HEADER_Temp T1
						JOIN rmtfinancetypes t2 ON T1.FinType = t2.FinType 
						JOIN entity t3 ON T3.EntityCode = t1.entity 
					UNION ALL
					SELECT    T1.Id, 
						T1.Entity, 
						T1.FinType,
						T3.EntityDesc as EntityName,
						T2.FintypeDesc as FintypeName , 
						T1.Active,						
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId
					FROM NPA_PROVISION_HEADER T1
					JOIN rmtfinancetypes t2 ON T2.FinType = t1.FinType 
					JOIN entity t3 ON T3.entitycode = t1.entity 
					WHERE     NOT EXISTS
					(SELECT 1 FROM NPA_PROVISION_HEADER_Temp WHERE   NPA_PROVISION_HEADER_Temp.Entity = T1.Entity and NPA_PROVISION_HEADER_Temp.FinType = T1.FinType )
				]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.25" author="Vijayakumar.k">
		<createTable tableName="NPA_PROVISION_DETAILS">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="PK_NPA_PROVISION_DTLS_ID" />
			</column>

			<column name="HeaderId" type="bigint">
				<constraints nullable="false" />
			</column>

			<column name="AssetClassificationId" type="bigint">
				<constraints nullable="false" />
			</column>

			<column name="NpaActive" type="boolean" >
				<constraints nullable="false" />
			</column>

			<column name="DPDdays" type="int" >
				<constraints nullable="false" />
			</column>

			<column name="NPARepayApprtnmnt" type="char(1)">
				<constraints nullable="false" />
			</column>

			<column name="IntSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="IntUnSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="RegSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="RegUnSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="Version" type="int"  />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="ST#540.26" author="Vijayakumar.k">
		<createTable tableName="NPA_PROVISION_DETAILS_Temp">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" primaryKeyName="PK_NPA_PROVISION_DTLS_ID_T" />
			</column>

			<column name="HeaderId" type="bigint">
				<constraints nullable="false" />
			</column>

			<column name="AssetClassificationId" type="bigint">
				<constraints nullable="false" />
			</column>

			<column name="NpaActive" type="boolean" >
				<constraints nullable="false" />
			</column>

			<column name="DPDdays" type="int" >
				<constraints nullable="false" />
			</column>

			<column name="NPARepayApprtnmnt" type="char(1)">
				<constraints nullable="false" />
			</column>

			<column name="IntSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="IntUnSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="RegSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="RegUnSecPerc" type="decimal(5,2)" >
				<constraints nullable="false" />
			</column>

			<column name="Version" type="int"  />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="ST#540.26.1" author="Tejaswi.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="NpaActive" tableName="NPA_PROVISION_DETAILS" defaultValue="0" />
		<addDefaultValue columnName="DPDdays" tableName="NPA_PROVISION_DETAILS" defaultValue="0" />
		<addDefaultValue columnName="IntSecPerc" tableName="NPA_PROVISION_DETAILS" defaultValue="0" />
		<addDefaultValue columnName="IntUnSecPerc" tableName="NPA_PROVISION_DETAILS" defaultValue="0" />
		<addDefaultValue columnName="RegSecPerc" tableName="NPA_PROVISION_DETAILS" defaultValue="0" />
		<addDefaultValue columnName="RegUnSecPerc" tableName="NPA_PROVISION_DETAILS" defaultValue="0" />	
		<addDefaultValue columnName="Version" tableName="NPA_PROVISION_DETAILS" defaultValue="0" />

		<addDefaultValue columnName="NpaActive" tableName="NPA_PROVISION_DETAILS_Temp" defaultValue="0" />
		<addDefaultValue columnName="DPDdays" tableName="NPA_PROVISION_DETAILS_Temp" defaultValue="0" />
		<addDefaultValue columnName="IntSecPerc" tableName="NPA_PROVISION_DETAILS_Temp" defaultValue="0" />
		<addDefaultValue columnName="IntUnSecPerc" tableName="NPA_PROVISION_DETAILS_Temp" defaultValue="0" />
		<addDefaultValue columnName="RegSecPerc" tableName="NPA_PROVISION_DETAILS_Temp" defaultValue="0" />
		<addDefaultValue columnName="RegUnSecPerc" tableName="NPA_PROVISION_DETAILS_Temp" defaultValue="0" />	
		<addDefaultValue columnName="Version" tableName="NPA_PROVISION_DETAILS_Temp" defaultValue="0" />			
	</changeSet>
	
	<changeSet id="ST#540.26.1" author="Tejaswi.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE NPA_PROVISION_DETAILS ADD CONSTRAINT DF_NPA_PROVISION_DTL_NACT DEFAULT 0 FOR NpaActive;
				ALTER TABLE NPA_PROVISION_DETAILS ADD CONSTRAINT DF_NPA_PROVISION_DTL_DPDAYS DEFAULT 0 FOR DPDdays;
				ALTER TABLE NPA_PROVISION_DETAILS ADD CONSTRAINT DF_NPA_PROVISION_DTL_ISP DEFAULT 0 FOR IntSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS ADD CONSTRAINT DF_NPA_PROVISION_DTL_IUSP DEFAULT 0 FOR IntUnSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS ADD CONSTRAINT DF_NPA_PROVISION_DTL_RSP DEFAULT 0 FOR RegSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS ADD CONSTRAINT DF_NPA_PROVISION_DTL_RSUP DEFAULT 0 FOR RegUnSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS ADD CONSTRAINT DF_NPA_PROVISION_DTL_VRS DEFAULT 0 FOR Version;
				
				ALTER TABLE NPA_PROVISION_DETAILS_Temp ADD CONSTRAINT DF_NPA_PROVISION_DTL_T_NACT DEFAULT 0 FOR NpaActive;
				ALTER TABLE NPA_PROVISION_DETAILS_Temp ADD CONSTRAINT DF_NPA_PROVISION_DTL_T_DPDAYS DEFAULT 0 FOR DPDdays;
				ALTER TABLE NPA_PROVISION_DETAILS_Temp ADD CONSTRAINT DF_NPA_PROVISION_DTL_T_ISP DEFAULT 0 FOR IntSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS_Temp ADD CONSTRAINT DF_NPA_PROVISION_DTL_T_IUSP DEFAULT 0 FOR IntUnSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS_Temp ADD CONSTRAINT DF_NPA_PROVISION_DTL_T_RSP DEFAULT 0 FOR RegSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS_Temp ADD CONSTRAINT DF_NPA_PROVISION_DTL_T_RSUP DEFAULT 0 FOR RegUnSecPerc;
				ALTER TABLE NPA_PROVISION_DETAILS_Temp ADD CONSTRAINT DF_NPA_PROVISION_DTL_T_VRS DEFAULT 0 FOR Version;
				
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.27" author="Vijayakumar.k">
		<createView replaceIfExists="true" viewName="NPA_PROVISION_DETAILS_AVIEW">
				<![CDATA[
					SELECT    T1.Id, 
						T1.HeaderId, 
						T1.AssetClassificationId,
						T1.NpaActive,
						T1.DPDdays,
						T1.NPARepayApprtnmnt,
						T1.IntSecPerc,
						T1.IntUnSecPerc,
						T1.RegSecPerc,
						T1.RegUnSecPerc,
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId,
                        T3.Id AssetHeaderId,
                        T3.Code as AssetCode,
                        T3.StageOrder as AssetStageOrder
					FROM NPA_PROVISION_DETAILS T1 
					JOIN NPA_PROVISION_HEADER t2 ON T2.id = t1.HeaderId
					JOIN ASSET_CLSSFICATN_HEADER t3 ON T3.Id = t1.AssetClassificationId
				]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.28" author="Vijayakumar.k">
		<createView replaceIfExists="true" viewName="NPA_PROVISION_DETAILS_VIEW">
				<![CDATA[
					SELECT    T1.Id, 
						T1.HeaderId, 
						T1.AssetClassificationId,
						T1.NpaActive,
						T1.DPDdays,
						T1.NPARepayApprtnmnt,
						T1.IntSecPerc,
						T1.IntUnSecPerc,
						T1.RegSecPerc,
						T1.RegUnSecPerc,
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId,
                        T3.Code as AssetCode,
                        T3.StageOrder as AssetStageOrder
					FROM NPA_PROVISION_DETAILS_Temp T1
					JOIN NPA_PROVISION_HEADER_temp t2 ON T1.HeaderId = t2.Id
					JOIN ASSET_CLSSFICATN_HEADER t3 ON T1.AssetClassificationId = t3.id
					UNION ALL
					SELECT    T1.Id, 
						T1.HeaderId, 
						T1.AssetClassificationId,
						T1.NpaActive,
						T1.DPDdays,
						T1.NPARepayApprtnmnt,
						T1.IntSecPerc,
						T1.IntUnSecPerc,
						T1.RegSecPerc,
						T1.RegUnSecPerc,
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId,
                        T3.Code as AssetCode,
                        T3.StageOrder as AssetStageOrder
					FROM NPA_PROVISION_DETAILS T1
					JOIN NPA_PROVISION_HEADER t2 ON T1.HeaderId = t2.Id
					JOIN ASSET_CLSSFICATN_HEADER t3 ON T1.AssetClassificationId = t3.id
					WHERE     NOT EXISTS
					(SELECT 1 FROM NPA_PROVISION_DETAILS_Temp WHERE   NPA_PROVISION_DETAILS_Temp.id = T1.id and  NPA_PROVISION_DETAILS_Temp.headerId= t1.headerId )
				]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.29" author="Vijayakumar.k">
		<addForeignKeyConstraint constraintName="FK_NPA_PROVISION_DETAILS_HDRID" referencedTableName="NPA_PROVISION_HEADER"
			baseColumnNames="HeaderId" baseTableName="NPA_PROVISION_DETAILS" referencedColumnNames="Id" />
	</changeSet>

	<changeSet id="ST#540.30" author="Vijayakumar.k">
		<addForeignKeyConstraint constraintName="FK_NPA_PRVSN_DTLS_AST_CLSFN_ID" referencedTableName="ASSET_CLSSFICATN_HEADER"
			baseColumnNames="AssetClassificationId" baseTableName="NPA_PROVISION_DETAILS" referencedColumnNames="Id" />
	</changeSet>

	<changeSet id="ST#540.31" author="Vijayakumar.k">
		<createSequence sequenceName="SeqNPA_PROVISION_HEADER" />
	</changeSet>

	<changeSet id="ST#540.32" author="Vijayakumar.k">
		<createSequence sequenceName="SeqNPA_PROVISION_DETAILS" />
	</changeSet>

	<changeSet id="ST#540.33" author="Vijayakumar.K">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId) from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);

				Insert into SecRights values((Select max(RightId) + 1 from SecRights), 0, 'menuItem_ApplicationMaster_NPAProvisionHeader', 'MENU', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecRights values((Select max(RightId) + 1 from SecRights), 2, 'button_NPAProvisionHeaderDialog_btnEdit', 'NPAProvisionHeaderDialog', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecRights values((Select max(RightId) + 1 from SecRights), 2, 'button_NPAProvisionHeaderDialog_btnDelete', 'NPAProvisionHeaderDialog', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecRights values((Select max(RightId) + 1 from SecRights), 2, 'button_NPAProvisionHeaderDialog_btnSave', 'NPAProvisionHeaderDialog', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				INSERT INTO SecRights Values((select max(RightId) + 1 from SecRights), 2, 'button_NPAProvisionHeaderList_PrintList','NPAProvisionHeaderList',0,1000,current_timestamp,'Approved','','',' ',' ',' ',0);
				INSERT INTO SecRights Values((select max(RightId) + 1 from SecRights), 2, 'button_NPAProvisionHeaderList_NewNPAProvisionHeader','NPAProvisionHeaderList',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				INSERT INTO SecRights Values((select max(RightId) + 1 from SecRights), 2, 'button_NPAProvisionHeaderDialog_btnNew','NPAProvisionHeaderDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				Insert into SecRights values((Select max(RightId) + 1 from SecRights), 3, 'NPAProvisionHeaderDialog_Entity', 'NPAProvisionHeaderDialog', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecRights values((Select max(RightId) + 1 from SecRights), 3, 'NPAProvisionHeaderDialog_FinType', 'NPAProvisionHeaderDialog', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecRights values((Select max(RightId) + 1 from SecRights), 3, 'NPAProvisionHeaderDialog_DetailsList', 'NPAProvisionHeaderDialog', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);

				Insert into SecGroups values((Select max(GrpId) + 1 from SecGroups), 'NPAProvisionHeaderDialog_Maker', 'WF Maker for NPAProvisionHeader', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecGroups values((Select max(GrpId) + 1 from SecGroups), 'NPAProvisionHeaderDialog_Approver', 'WF Approver for NPAProvisionHeader', 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);

				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'menuItem_ApplicationMaster_NPAProvisionHeader'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'button_NPAProvisionHeaderDialog_btnEdit'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'button_NPAProvisionHeaderDialog_btnDelete'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'button_NPAProvisionHeaderDialog_btnSave'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);

				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'NPAProvisionHeaderDialog_Entity'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'NPAProvisionHeaderDialog_FinType'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);

				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightID from SecRights where RightName ='button_NPAProvisionHeaderList_PrintList'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightID from SecRights where RightName ='button_NPAProvisionHeaderList_NewNPAProvisionHeader'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightID from SecRights where RightName ='button_NPAProvisionHeaderDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Approver'), (Select RightID from SecRights where RightName = 'button_NPAProvisionHeaderList_PrintList'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'NPAProvisionHeaderDialog_DetailsList'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);

				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Approver'), (Select RightId from SecRights where RightName = 'menuItem_ApplicationMaster_NPAProvisionHeader'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Approver'), (Select RightId from SecRights where RightName = 'button_NPAProvisionHeaderDialog_btnSave'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);

				Insert into SecRoleGroups values((Select max(RoleGrpId) + 1 from SecRoleGroups), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RoleID from SecRoles where RoleCd = 'MSTGRP1_MAKER'), 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				Insert into SecRoleGroups values((Select max(RoleGrpId) + 1 from SecRoleGroups), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Approver'), (Select RoleID from SecRoles where RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);

				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId) from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#540.34" author="Tejaswi.b">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
				
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0,'menuItem_ApplicationMaster_ManualProvisioning','MENU',0,1000,current_timestamp,'Approved','',' ','',' ',' ',0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_ManualProvisioningList_PrintList','ManualProvisioningList',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_ManualProvisioningDialog_btnDelete','ManualProvisioningDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_ManualProvisioningDialog_btnSave','ManualProvisioningDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'ManualProvisioningDialog_NewRBIStage','ManualProvisioningDialog',0,1000,current_timestamp,'Approved','','',' ',' ',' ',0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'ManualProvisioningDialog_NewInternalStage','ManualProvisioningDialog',0,1000,current_timestamp,'Approved','','',' ',' ',' ',0);

				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'MANUALPROVISIONING_MAKER','WF Maker for ManualProvisioning', 1, 1000, CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0) ;
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'MANUALPROVISIONING_APPROVER','WF Approver for ManualProvisioning', 1, 1000, CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0) ;		
		
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_ApplicationMaster_ManualProvisioning'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningList_PrintList'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'ManualProvisioningDialog_NewRBIStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'ManualProvisioningDialog_NewInternalStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_ApplicationMaster_ManualProvisioning'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_APPROVER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningList_PrintList'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_APPROVER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='MANUALPROVISIONING_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='MANUALPROVISIONING_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 


				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId)  from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId)  from SecRoleGroups);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.35" author="Tejaswi.b">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
				
				Delete from secGroupRights Where GrpID in  (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER');
				Delete from secGroupRights Where GrpID in  (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_APPROVER');

				Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'MANUALPROVISIONING_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
				Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'MANUALPROVISIONING_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
				
				Delete from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER';
				Delete from SecGroups where GrpCode = 'MANUALPROVISIONING_APPROVER';
				
				Delete from Secrights Where Rightname = 'menuItem_ApplicationMaster_ManualProvisioning';
				
				Delete from Secrights Where Rightname = 'button_ManualProvisioningList_PrintList';
				Delete from Secrights Where Rightname = 'button_ManualProvisioningDialog_btnDelete';
				Delete from Secrights Where Rightname = 'button_ManualProvisioningDialog_btnSave';
				
				Delete from Secrights Where Rightname = 'ManualProvisioningDialog_NewRBIStage';
				Delete from Secrights Where Rightname = 'ManualProvisioningDialog_NewInternalStage';
				
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0,'menuItem_ApplicationMaster_ManualProvisioning','MENU',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_ManualProvisioningDialog_btnDelete','ManualProvisioningDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2,'button_ManualProvisioningDialog_btnSave','ManualProvisioningDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'ManualProvisioningDialog_NewRBIStage','ManualProvisioningDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'ManualProvisioningDialog_NewInternalStage','ManualProvisioningDialog',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0) ;

				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'MANUALPROVISIONING_MAKER','WF Maker for ManualProvisioning', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'MANUALPROVISIONING_APPROVER','WF Approver for ManualProvisioning', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;		
		
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_ApplicationMaster_ManualProvisioning'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'ManualProvisioningDialog_NewRBIStage'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_MAKER'), (Select RightID from SecRights where RightName = 'ManualProvisioningDialog_NewInternalStage'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_ApplicationMaster_ManualProvisioning'), 1, 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ;
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'MANUALPROVISIONING_APPROVER'), (Select RightID from SecRights where RightName = 'button_ManualProvisioningDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0) ;

				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='MANUALPROVISIONING_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ; 
				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='MANUALPROVISIONING_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,'Approved', '', '', '', '', '', 0) ; 


				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId)  from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId)  from SecRoleGroups);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.36.1" author="Tejaswi.b">
		<addColumn tableName="FinProvisions">
			<column name="AssetCode" type="varchar(8)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.36.2" author="Tejaswi.b">
		<addColumn tableName="FinProvisions">
			<column name="AssetStageOrdr" type="int" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.36.3" author="Tejaswi.b">
		<addColumn tableName="FinProvisions">
			<column name="NPA" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.36.4" author="Tejaswi.b">
		<addColumn tableName="FinProvisions">
			<column name="ManualProvision" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.36.5" author="Tejaswi.b">
		<addColumn tableName="FinProvisions">
			<column name="ProvLinkedTranId" type="bigint" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.36.6" author="Tejaswi.b">
		<addColumn tableName="FinProvisions">
			<column name="ProvChgLinkedTranId" type="bigint" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.37.1" author="Tejaswi.b">
		<addColumn tableName="FinProvisions_Temp">
			<column name="AssetCode" type="varchar(8)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.37.2" author="Tejaswi.b">
		<addColumn tableName="FinProvisions_Temp">
			<column name="AssetStageOrdr" type="int" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.37.3" author="Tejaswi.b">
		<addColumn tableName="FinProvisions_Temp">
			<column name="NPA" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.37.4" author="Tejaswi.b">
		<addColumn tableName="FinProvisions_Temp">
			<column name="ManualProvision" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.37.5" author="Tejaswi.b">
		<addColumn tableName="FinProvisions_Temp">
			<column name="ProvLinkedTranId" type="bigint" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.37.6" author="Tejaswi.b">
		<addColumn tableName="FinProvisions_Temp">
			<column name="ProvChgLinkedTranId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#540.38" author="Tejaswi.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="assetStageOrdr" tableName="FinProvisions_Temp" defaultValue="0" />
		<addDefaultValue columnName="assetStageOrdr" tableName="finprovisions" defaultValue="0" />
		<addDefaultValue columnName="NPA" tableName="FinProvisions_Temp" defaultValue="0" />
		<addDefaultValue columnName="NPA" tableName="finprovisions" defaultValue="0" />
		<addDefaultValue columnName="manualProvision" tableName="FinProvisions_Temp" defaultValue="0" />
		<addDefaultValue columnName="manualProvision" tableName="finprovisions" defaultValue="0" />
		<addDefaultValue columnName="provLinkedTranId" tableName="FinProvisions_Temp" defaultValue="0" />
		<addDefaultValue columnName="provLinkedTranId" tableName="finprovisions" defaultValue="0" />
		<addDefaultValue columnName="provChgLinkedTranId" tableName="FinProvisions_Temp" defaultValue="0" />
		<addDefaultValue columnName="provChgLinkedTranId" tableName="finprovisions" defaultValue="0" />
	</changeSet>
	
	<changeSet id="ST#540.38" author="Tejaswi.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE finprovisions ADD CONSTRAINT DF_FinProvisions_ASO DEFAULT 0 FOR assetStageOrdr;
				ALTER TABLE finprovisions ADD CONSTRAINT DF_FinProvisions_NPA DEFAULT 0 FOR NPA;
				ALTER TABLE finprovisions ADD CONSTRAINT DF_FinProvisions_MNP DEFAULT 0 FOR manualProvision;
				ALTER TABLE finprovisions ADD CONSTRAINT DF_FinProvisions_PLT DEFAULT 0 FOR provLinkedTranId;
				ALTER TABLE finprovisions ADD CONSTRAINT DF_FinProvisions_PCLT DEFAULT 0 FOR provChgLinkedTranId;
				ALTER TABLE FinProvisions_Temp ADD CONSTRAINT DF_FinProvisions_T_ASO  DEFAULT 0 FOR assetStageOrdr;
				ALTER TABLE FinProvisions_Temp ADD CONSTRAINT DF_FinProvisions_T_NPA  DEFAULT 0 FOR NPA;
				ALTER TABLE FinProvisions_Temp ADD CONSTRAINT DF_FinProvisions_T_MNP  DEFAULT 0 FOR manualProvision;
				ALTER TABLE FinProvisions_Temp ADD CONSTRAINT DF_FinProvisions_T_PLT  DEFAULT 0 FOR provLinkedTranId;
				ALTER TABLE FinProvisions_Temp ADD CONSTRAINT DF_FinProvisions_T_PCLT DEFAULT 0 FOR provChgLinkedTranId;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.39" author="Tejaswi.b">
		<sql>
			<![CDATA[
				Update finprovisions set assetStageOrdr = 0;
				Update FinProvisions_Temp set assetStageOrdr = 0;
				Update finprovisions set NPA = 0;
				Update FinProvisions_Temp set NPA = 0;
				Update finprovisions set manualProvision = 0;
				Update FinProvisions_Temp set manualProvision = 0;
				Update finprovisions set provLinkedTranId = 0;
				Update FinProvisions_Temp set provLinkedTranId = 0;
				Update finprovisions set provChgLinkedTranId = 0;
				Update FinProvisions_Temp set provChgLinkedTranId = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.40_pre" author="Tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finprovisions_aview');
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.40" author="Tejaswi.b">
		<createView viewName="FinProvisions_AView" replaceIfExists="true">
			<![CDATA[
				 SELECT t1.finreference,
	    			t1.finbranch,
	   				t1.fintype,
	    			t1.custid,
	    			t1.provisioncaldate,
	    			t1.provisionedamt,
	    			t1.provisionamtcal,
	    			t1.provisiondue,
	    			t1.nonformulaprov,
	    			t1.usenfprov,
	    			t1.principaldue,
	    			t1.profitdue,
	    			t1.autoreleasenfp,
	    			t1.duefromdate,
	    			t1.lastfullypaiddate,
	    			t4.custcif AS lovdesccustcif,
	    			t4.custshrtname AS lovdesccustshrtname,
	    			t2.finccy,
	    			t1.version,
	    			t1.lastmnton,
	    			t1.lastmntby,
	    			t1.recordstatus,
	    			t1.rolecode,
	    			t1.nextrolecode,
	    			t1.taskid,
	    			t1.nexttaskid,
	    			t1.recordtype,
	    			t1.workflowid,
					t1.duedays,
	    			t1.assetcode,
	    			t1.assetstageordr,
	    			t1.npa,
	    			t1.manualProvision,
	    			t1.provLinkedtranid,
	    			t1.provChgLinkedTranId,
	    			t1.priBal,
	    			t1.prvovisionRate
	   		FROM FinProvisions t1
	     	JOIN FinanceMain t2 ON t1.finreference = t2.finreference
	     	LEFT JOIN Customers t4 ON t1.custid = t4.custid
     	  ]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.40_post" author="Tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finprovisions_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.41_pre" author="Tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finprovisions_view');
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.41" author="Tejaswi.b">
		<createView viewName="FinProvisions_View" replaceIfExists="true">
			<![CDATA[
				 SELECT t1.finreference,
	    			t1.finbranch,
	    			t1.fintype,
	    			t1.custid,
	    			t1.provisioncaldate,
	    			t1.provisionedamt,
	    			t1.provisionamtcal,
	    			t1.provisiondue,
	    			t1.nonformulaprov,
	    			t1.usenfprov,
	    			t1.principaldue,
	    			t1.profitdue,
	    			t1.autoreleasenfp,
	    			t1.duefromdate,
	    			t1.lastfullypaiddate,
	    			t4.custcif AS lovdesccustcif,
	    			t4.custshrtname AS lovdesccustshrtname,
	    			t2.finccy,
	    			t1.version,
	    			t1.lastmnton,
	    			t1.lastmntby,
	    			t1.recordstatus,
	    			t1.rolecode,
	    			t1.nextrolecode,
	    			t1.taskid,
	    			t1.nexttaskid,
	    			t1.recordtype,
	    			t1.workflowid,
	    			t5.findivision AS lovdescfindivision,
					t1.duedays,
	    			t1.assetcode,
	    			t1.assetstageordr,
	    			t1.npa,
	    			t1.manualProvision,
	    			t1.provLinkedtranid,
	    			t1.provChgLinkedTranId,
	    			t1.priBal,
	    			t1.prvovisionRate
	   			FROM FinProvisions_Temp t1
	     		JOIN FinanceMain t2 ON t1.finreference= t2.finreference
	     		LEFT JOIN Customers t4 ON t1.custid = t4.custid
	     		JOIN RMTFinanceTypes t5 ON t2.fintype = t5.fintype
				UNION ALL
	 			SELECT t1.finreference,
	    			t1.finbranch,
	    			t1.fintype,
	    			t1.custid,
	    			t1.provisioncaldate,
	    			t1.provisionedamt,
	   	 			t1.provisionamtcal,
	    			t1.provisiondue,
	    			t1.nonformulaprov,
	    			t1.usenfprov,
	    			t1.principaldue,
	    			t1.profitdue,
	    			t1.autoreleasenfp,
	    			t1.duefromdate,
	    			t1.lastfullypaiddate,
	    			t4.custcif AS lovdesccustcif,
	    			t4.custshrtname AS lovdesccustshrtname,
	    			t2.finccy,
	    			t1.version,
	    			t1.lastmnton,
	    			t1.lastmntby,
	    			t1.recordstatus,
	    			t1.rolecode,
	    			t1.nextrolecode,
	    			t1.taskid,
	    			t1.nexttaskid,
	    			t1.recordtype,
	    			t1.workflowid,
	    			t5.findivision AS lovdescfindivision,
					t1.duedays,
	    			t1.assetcode,
	    			t1.assetstageordr,
	    			t1.npa,
	    			t1.manualProvision,
	    			t1.provLinkedtranid,
	    			t1.provChgLinkedTranId,
	    			t1.priBal,
	    			t1.prvovisionRate
	   			FROM FinProvisions t1
	     		JOIN FinanceMain t2 ON t1.finreference= t2.finreference
	     		LEFT JOIN Customers t4 ON t1.custid = t4.custid
	     		JOIN RMTFinanceTypes t5 ON t2.fintype= t5.fintype
	  			WHERE NOT (EXISTS ( SELECT 1
	           	FROM FinProvisions_Temp
	          	WHERE FinProvisions_Temp.finreference= t1.finreference))
	          ]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.41_post" author="Tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finprovisions_view');
			]]>
		</sql>
	</changeSet>

		<changeSet id="ST#540.42.1" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="AssetCode" type="varchar(8)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.42.2" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="AssetStageOrdr" type="int" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.42.3" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="NPA" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.42.4" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="ManualProvision" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.42.5" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="ProvChgLinkedTranId" type="bigint" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.42.6" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="PrvovisionRate" type="decimal(13,9)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.42.7" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="DueDays" type="int" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.42.8" author="Tejaswi.b">
		<addColumn tableName="FinProvmovements">
			<column name="PriBal" type="decimal(18)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#540.43" author="Tejaswi.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="assetStageOrdr" tableName="FinProvmovements" defaultValue="0" />
		<addDefaultValue columnName="NPA" tableName="FinProvmovements" defaultValue="0" />
		<addDefaultValue columnName="manualProvision" tableName="FinProvmovements" defaultValue="0" />
		<addDefaultValue columnName="provChgLinkedTranId" tableName="FinProvmovements" defaultValue="0" />
		<addDefaultValue columnName="PrvovisionRate" tableName="FinProvmovements" defaultValue="0.00" />
		<addDefaultValue columnName="DueDays" tableName="FinProvmovements" defaultValue="0" />
		<addDefaultValue columnName="PriBal" tableName="FinProvmovements" defaultValue="0" />
	</changeSet>
	
	
	<changeSet id="ST#540.43" author="Tejaswi.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FinProvmovements ADD CONSTRAINT DF_FinProvmovements_ASO DEFAULT 0 FOR assetStageOrdr;
				ALTER TABLE FinProvmovements ADD CONSTRAINT DF_FinProvmovements_NPA DEFAULT 0 FOR NPA;
				ALTER TABLE FinProvmovements ADD CONSTRAINT DF_FinProvmovements_MNP DEFAULT 0 FOR manualProvision;
				ALTER TABLE FinProvmovements ADD CONSTRAINT DF_FinProvmovements_PCLT DEFAULT 0 FOR provChgLinkedTranId;
				ALTER TABLE FinProvmovements ADD CONSTRAINT DF_FinProvmovements_PSR DEFAULT 0 FOR PrvovisionRate;
				ALTER TABLE FinProvmovements ADD CONSTRAINT DF_FinProvmovements_DD DEFAULT 0 FOR DueDays;
				ALTER TABLE FinProvmovements ADD CONSTRAINT DF_FinProvmovements_PB DEFAULT 0 FOR PriBal;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.44" author="Tejaswi.b">
		<sql>
			<![CDATA[
				Update FinProvmovements set assetStageOrdr = 0;
				Update FinProvmovements set NPA = 0;
				Update FinProvmovements set manualProvision = 0;
				Update FinProvmovements set provChgLinkedTranId = 0;
				Update FinProvmovements set PrvovisionRate = 0.00;
				Update FinProvmovements set DueDays = 0;
				Update FinProvmovements set PriBal = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.45_pre" author="Tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finprovmovements_aview');
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.45" author="Tejaswi.b">
		<createView viewName="FinProvmovements_AView" replaceIfExists="true">
			<![CDATA[
				 SELECT finreference,
    				provmovementdate,
    				provmovementseq,
    				provcaldate,
    				provisionedamt,
    				provisionamtcal,
    				provisiondue,
    				provisionpoststs,
    				nonformulaprov,
    				usenfprov,
    				autoreleasenfp,
    				principaldue,
    				profitdue,
    				duefromdate,
    				lastfullypaiddate,
    				linkedtranid,
    				assetcode,
	    			assetstageordr,
	    			npa,
	    			manualProvision,
	    			provChgLinkedTranId,
	    			prvovisionRate,
	    			duedays,
	    			PriBal
   				FROM FinProvmovements
     	  ]]>
		</createView>
	</changeSet>

	<changeSet id="ST#540.45_post" author="Tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finprovmovements_aview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="ST#540.46" author="Durgaprasad G">
		<sql>
		  <![CDATA[
				 update  SMTPARAMETERS set SYSPARMVALUE = 'N' Where SYSPARMCODE = 'ALW_DIFF_RPYHCY_NPA';
		  	]]>
		</sql>
	</changeSet>


	<changeSet id="ST#540.47" author="Vijayakumar.K">
		<sql>
			 <![CDATA[
				UPDATE SeqSecRights SET SEQNO= (SELECT MAX(RightId) FROM SecRights);
				UPDATE SeqSecGroupRights SET SEQNO = (SELECT MAX(GrpRightId) FROM SecGroupRights);
				
				INSERT into SecRights Values ((select max(RightId)+1 from SecRights),0,'menuItem_ApplicationMaster_NPAProvisionHeaderEnquiry','MENU',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0);
				
				INSERT into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Maker'), (Select RightId from SecRights where RightName = 'menuItem_ApplicationMaster_NPAProvisionHeaderEnquiry'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				INSERT into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'NPAProvisionHeaderDialog_Approver'), (Select RightId from SecRights where RightName = 'menuItem_ApplicationMaster_NPAProvisionHeaderEnquiry'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				
				INSERT into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_MAKER'), (Select RightId from SecRights where RightName = 'menuItem_ApplicationMaster_AssetClassificationHeaderEnquiry'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				INSERT into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'ASSETCLASSIFICATIONHEADER_Approver'), (Select RightId from SecRights where RightName = 'menuItem_ApplicationMaster_AssetClassificationHeaderEnquiry'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				
				UPDATE SeqSecRights SET SEQNO= (SELECT MAX(RightId) FROM SecRights);
				UPDATE SeqSecGroupRights SET SEQNO = (SELECT MAX(GrpRightId) FROM SecGroupRights);
			 ]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.48" author="Vijayakumar.K">
		<sql>
		 <![CDATA[
			Insert into REPORTLIST
			(CODE,MODULE,FIELDLABELS,FIELDVALUES,FIELDTYPE,ADDFIELDS,REPORTFILENAME,REPORTHEADING,MODULETYPE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,FORMATREQ)
			values
			('NPAProvisionHeader','NPAProvisionHeader','listheader_NPAProvisionHeaderList_Entity.label,listheader_NPAProvisionHeaderList_FinType.label,label.RecordStatus,label.RecordType',
			'entity,finType,RECORDSTATUS,RECORDTYPE','String,String,String,String',null,'ReportList04',
			'NPAProvision Details','Enquiry',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0);
	
			Insert into REPORTLIST
			(CODE,MODULE,FIELDLABELS,FIELDVALUES,FIELDTYPE,ADDFIELDS,REPORTFILENAME,REPORTHEADING,MODULETYPE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,FORMATREQ)
			values
			('Provision','Provision','listheader_CIFNo.label,listheader_CustName.label,listheader_FinReference.label,listheader_FinType.label,listheader_ManualProvisioning.label,listheader_AssetStage.label,label.RecordStatus,label.RecordType',
			'lovDescCustCIF,lovDescCustShrtName,finReference,finType,manualProvision,assetCode,RECORDSTATUS,RECORDTYPE',
			'long,String,String,String,boolean,String,String,String',null,'ReportList08',
			'Manual Provision Details','Enquiry',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0);
	
			Insert into REPORTLIST
			(CODE,MODULE,FIELDLABELS,FIELDVALUES,FIELDTYPE,ADDFIELDS,REPORTFILENAME,REPORTHEADING,MODULETYPE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,FORMATREQ)
			values
			('AssetClassificationHeader','AssetClassificationHeader','listheader_Code.label,listheader_Description.label,listheader_StageOrder.label,listheader_Active.label,label.RecordStatus,label.RecordType',
			'code,description,stageOrder,active,RECORDSTATUS,RECORDTYPE',
			'String,String,long,boolean,String,String',null,'ReportList06',
			'Asset Classification Details','Enquiry',0,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.49" author="Durgaprasad G">
		<dropPrimaryKey tableName="FinProvMovements" constraintName="pk_finprovmovements" />
	</changeSet>

	<changeSet id="ST#540.50" author="Durgaprasad G">
		<sql>
		   <![CDATA[
				Delete 	from BMTAEEVENTS where aeeventcode='PROVSN'; 
				INSERT INTO BMTAEEVENTS(aeeventcode, aeeventcodedesc, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, active)
				VALUES ('PROVSN', 'NPA Provision', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);
					
				Delete 	from BMTAMOUNTCODES where ALLOWEDEVENT='PROVSN'; 
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PROVSN',0,'ae_provAmt','NPA Provision amount.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PROVSN',0,'ae_provDue','NPA Provision due.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				
				Delete 	from BMTAEEVENTS where aeeventcode='PRVSN_MN'; 
				INSERT INTO BMTAEEVENTS(aeeventcode, aeeventcodedesc, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, active)
				VALUES ('PRVSN_MN', 'NPA Provision Reversals', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);
					
				Delete 	from BMTAMOUNTCODES where ALLOWEDEVENT='PRVSN_MN'; 
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PRVSN_MN',0,'ae_provAmt','NPA Provision amount.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PRVSN_MN',0,'ae_provDue','NPA Provision due.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				
				Delete 	from BMTAEEVENTS where aeeventcode='PROVCHG'; 
				INSERT INTO BMTAEEVENTS(aeeventcode, aeeventcodedesc, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, active)
				VALUES ('PROVCHG', 'NPA Provision change', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);
					
			
				Delete 	from BMTAMOUNTCODES where ALLOWEDEVENT='PROVCHG'; 
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PROVCHG',0,'ae_provAmt','Provision amount.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PROVCHG',0,'ae_pftSB','Till date Scheduled Profit Balance.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PROVCHG',0,'ae_priSB','Till date Scheduled Principal Balance.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PROVCHG',0,'ae_pri','Total Principal Scheduled.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PROVCHG',0,'ae_priS','Till date Scheduled Principal.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			
				Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'AMZ' and AMOUNTCODE = 'ae_amzS';
			    Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'AMZ' and AMOUNTCODE = 'ae_accrueS';
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('AMZ',0,'ae_amzS','Amortized interest in suspended period.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('AMZ',0,'ae_accrueS','Accrued interest in suspense.',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			
				Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'REPAY' and AMOUNTCODE = 'ae_rpPftPr';
				Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'REPAY' and AMOUNTCODE = 'ae_rpTotPr';
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('REPAY',0,'ae_rpPftPr','Total Repay Interest now (P).',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('REPAY',0,'ae_rpTotPr','Total Repay now (P+I).',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				
				Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'INSTDATE' and AMOUNTCODE = 'ae_instpftPr';
				Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'INSTDATE' and AMOUNTCODE = 'ae_instpriPr';
				Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'INSTDATE' and AMOUNTCODE = 'ae_dAmzPr';
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('INSTDATE',0,'ae_instpftPr','Installment Interest',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('INSTDATE',0,'ae_instpriPr','Installment Princiapl',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('INSTDATE',0,'ae_dAmzPr','Amortized Interest From previous Amz Date',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
				
				Delete from CategoryWiseEvents Where AEEVENTCODE= 'PROVSN' and  CATEGORYCODE= 'F';
				Delete from CategoryWiseEvents Where AEEVENTCODE= 'PRVSN_MN' and  CATEGORYCODE= 'F';
				Delete from CategoryWiseEvents Where AEEVENTCODE= 'PROVCHG' and  CATEGORYCODE= 'F';
				
				INSERT INTO CategoryWiseEvents VALUES('PROVSN','F',1,0,(Select max(seqorder)+1 from CategoryWiseEvents Where CATEGORYCODE= 'F'));
				INSERT INTO CategoryWiseEvents VALUES('PRVSN_MN','F',1,0,(Select max(seqorder)+1 from CategoryWiseEvents Where CATEGORYCODE= 'F'));
				INSERT INTO CategoryWiseEvents VALUES('PROVCHG','F',1,0,(Select max(seqorder)+1 from CategoryWiseEvents Where CATEGORYCODE= 'F'));
		   ]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.51" author="Vijayakumar.K">
		<sql>
				 <![CDATA[
					UPDATE SeqSecRights SET SEQNO= (SELECT MAX(RightId) FROM SecRights);
					UPDATE SeqSecGroupRights SET SEQNO = (SELECT MAX(GrpRightId) FROM SecGroupRights);
					
					INSERT into SecRights Values ((select max(RightId)+1 from SecRights),0,'menuItem_NPAProvisionReport','MENU',0,1000,current_timestamp,'Approved', '', '', '', '', '', 0);
					INSERT into SecGroupRights values((Select max(GrpRightId) + 1 from SecGroupRights), (Select GrpId from SecGroups where GrpCode = 'REPORTS_ADMIN'), (Select RightId from SecRights where RightName = 'menuItem_NPAProvisionReport'), 1, 0, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
					
					UPDATE SeqSecRights SET SEQNO= (SELECT MAX(RightId) FROM SecRights);
					UPDATE SeqSecGroupRights SET SEQNO = (SELECT MAX(GrpRightId) FROM SecGroupRights);
				]]>
		</sql>
	</changeSet>

	<changeSet id="ST#540.52" author="Durga Prasad G">
		<comment>NPA REQUIRED OR NOT Moved to ImplementationConstants</comment>
		<sql>
			<![CDATA[
				delete from SMTParameters where	sysparmcode='NPA_PROVISION_REQUIRED';
			]]>
		</sql>
	</changeSet>

	<!-- ST#540 - NPA & Provision Change Sets End -->


</databaseChangeLog>