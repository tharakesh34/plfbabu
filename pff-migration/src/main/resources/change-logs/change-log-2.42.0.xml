<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />

<changeSet id="01" author="Madhubabu">
		<sql>
		update ErrorDetails set ErrorMessage='Select either planned emi holiday (OR) Multiple disbursement' where ErrorCode='30574';
		update ErrorDetails set ErrorMessage='Select either planned emi holiday (OR) Stepping loan' where ErrorCode='30573';
		</sql>
	</changeSet>
	<changeSet id="02" author="Surekha" dbms="mssql">
	<sql>
	ALTER TABLE DATA_ENGINE_TABLE ALTER COLUMN  STATUSUPDATE varchar(1000);
	</sql>
	</changeSet>
	
	<changeSet id="02" author="Surekha" dbms="oracle">
	<sql>
	ALTER TABLE DATA_ENGINE_TABLE modify  STATUSUPDATE varchar(1000);
	</sql>
	</changeSet>
	
	<changeSet id="2" author="Kesav">
		<createView viewName="PromotionFees_AView" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
		</createView>
	</changeSet>
	
	<changeSet id="3" author="Kesav">
		<createView viewName="PromotionFees_TView" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees_Temp T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
		</createView>
	</changeSet>
	
	<changeSet id="4" author="Kesav">
		<createView viewName="PromotionFees_View" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees_Temp T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
			
			UNION ALL

			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
			
			WHERE     	NOT EXISTS (SELECT 1 FROM PromotionFees_Temp
                        WHERE FeeID = T1.FeeID AND  PromotionCode = T1.PromotionCode AND FinEvent = T1.FinEvent 
								AND FeeTypeID = T1.FeeTypeID AND OriginationFee = T1.OriginationFee)
		</createView>
	</changeSet>
	
	<changeSet id="6" author="Kesav">
		<sql>
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONFEES_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
			Delete from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONFEES_MAKER','WF Maker for Promotion Fees', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnDelete');
			Delete from SecRights where RightName = 'button_PromotionFeesDialog_btnDelete';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionFeesDialog_btnDelete', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONFEES_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnSave');
			Delete from SecRights where RightName = 'button_PromotionFeesDialog_btnSave';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionFeesDialog_btnSave', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnNew');
			Delete from SecRights where RightName = 'button_PromotionFeesDialog_btnNew';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionFeesDialog_btnNew', 'PromotionList', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_PromotionCode');
			Delete from SecRights where RightName = 'PromotionFeesDialog_PromotionCode';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_PromotionCode', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_PromotionCode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeTypeID');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FeeTypeID';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FeeTypeID', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeTypeID'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FinEvent');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FinEvent';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FinEvent', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FinEvent'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeOrder');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FeeOrder';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FeeOrder', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeOrder'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeScheduleMethod');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FeeScheduleMethod';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FeeScheduleMethod', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeScheduleMethod'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculationType');
			Delete from SecRights where RightName = 'PromotionFeesDialog_CalculationType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_CalculationType', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculationType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_RuleCode');
			Delete from SecRights where RightName = 'PromotionFeesDialog_RuleCode';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_RuleCode', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_RuleCode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Amount');
			Delete from SecRights where RightName = 'PromotionFeesDialog_Amount';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_Amount', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Amount'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Percentage');
			Delete from SecRights where RightName = 'PromotionFeesDialog_Percentage';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_Percentage', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Percentage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculateOn');
			Delete from SecRights where RightName = 'PromotionFeesDialog_CalculateOn';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_CalculateOn', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculateOn'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwDeviation');
			Delete from SecRights where RightName = 'PromotionFeesDialog_AlwDeviation';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_AlwDeviation', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwDeviation'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_MaxWaiverPerc');
			Delete from SecRights where RightName = 'PromotionFeesDialog_MaxWaiverPerc';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_MaxWaiverPerc', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_MaxWaiverPerc'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFee');
			Delete from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFee';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_AlwModifyFee', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFee'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFeeSchdMthd');
			Delete from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFeeSchdMthd';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_AlwModifyFeeSchdMthd', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFeeSchdMthd'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Active');
			Delete from SecRights where RightName = 'PromotionFeesDialog_Active';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_Active', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Active'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_APPROVER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONFEES_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
			Delete from SecGroups where GrpCode = 'PROMOTIONFEES_APPROVER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONFEES_APPROVER','WF Approver for Promotion Fees', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_APPROVER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONFEES_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>
	<changeSet id="5" author="Madhubabu">
		<sql>
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			delete from secgrouprights where rightid = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_LiabilityRequest') and grpid = (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_MAKER');
			delete from secgrouprights where rightid = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_LiabilityRequest') and grpid = (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_APPROVER');
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_CancelDisbursment'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_CancelDisbursment'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	
	<changeSet id="7" author="Kesav">
		<sql>
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
			Delete from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONINSURANCES_MAKER','WF Maker for Promotion Insurances', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnDelete');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnDelete';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnDelete', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnSave', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_InsuranceType');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_InsuranceType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_InsuranceType', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_InsuranceType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_PaymentType');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_PaymentType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_PaymentType', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_PaymentType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalType');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_CalType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_CalType', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_AmountRule');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_AmountRule';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_AmountRule', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_AmountRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_ConstAmt');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_ConstAmt';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_ConstAmt', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_ConstAmt'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalculateOn');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_CalculateOn';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_CalculateOn', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalculateOn'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Percentage');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_Percentage';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_Percentage', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Percentage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Mandatory');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_Mandatory';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_Mandatory', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Mandatory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_APPROVER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
			Delete from SecGroups where GrpCode = 'PROMOTIONINSURANCES_APPROVER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONINSURANCES_APPROVER','WF Approver for Promotion Insurances', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_APPROVER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>
	
	<changeSet id="8" author="Kesav">
		<sql>
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnNew');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnNew';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnNew', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnEdit');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnEdit';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnEdit', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

		</sql>
	</changeSet>
	
	<changeSet id = "9" author = "Kesav">
		<createView viewName = "PromotionInsurances_AView" replaceIfExists = "true">
			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 
		</createView>
	</changeSet>
	
	<changeSet id = "10" author = "Kesav">
		<createView viewName = "PromotionInsurances_TView" replaceIfExists = "true">
			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances_Temp T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 
		</createView>
	</changeSet>
		
	<changeSet id = "11" author = "Kesav">
		<createView viewName = "PromotionInsurances_View" replaceIfExists = "true">
			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances_Temp T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 

			UNION ALL

			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 

			WHERE   NOT EXISTS (SELECT 1 FROM PromotionInsurances_Temp 
					WHERE InsuranceID = T1.InsuranceID AND InsuranceType = T1.InsuranceType)
		</createView>
	</changeSet>
	
	<changeSet author="Kesav" id="12">
		<modifyDataType tableName="PromotionInsurances" columnName="CalType" newDataType="char(1)"/>
	</changeSet>
	
	<changeSet author="Kesav" id="13">
		<modifyDataType tableName="PromotionInsurances_Temp" columnName="CalType" newDataType="char(1)"/>
	</changeSet>
	
	<changeSet author="Prasad" id="13" dbms="postgresql">
	<sql>
		drop view promotioninsurances_view;
		drop view promotioninsurances_aview;
		drop view promotioninsurances_tview ;
		
	update PromotionInsurances set CalType = 0 where CalType is null;
		alter table PromotionInsurances alter column CalType DROP DEFAULT;
		alter table PromotionInsurances alter column CalType type smallint using CalType::smallint ;
		
					
		update PromotionInsurances_Temp set CalType = 0 where CalType is null;
		alter table PromotionInsurances_Temp alter column CalType DROP DEFAULT;
		alter table PromotionInsurances_Temp alter column CalType type smallint using CalType::smallint ;
		
		create view promotioninsurances_view as 
		SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances_Temp T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 

			UNION ALL

			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 

			WHERE   NOT EXISTS (SELECT 1 FROM PromotionInsurances_Temp 
					WHERE InsuranceID = T1.InsuranceID AND InsuranceType = T1.InsuranceType);
					
				create view promotioninsurances_aview as 	
					SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode;
						
			create view PromotionInsurances_TView as
			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances_Temp T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode;
		
		</sql>
	</changeSet>
	
	<changeSet author="Madhubabu" id="14">
	<sql>
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		
		INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COLLATERALASSIGN_NEW','New button grp to assingn collateral', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDialog_btnNew'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'COLLATERALASSIGN_NEW'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
		INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'COLLATERALASSIGN_NEW'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'OPERATIONS_OFFICER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
	</sql>
	</changeSet>
	<changeSet author="Madhubabu" id="15">
	<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS Values((Select max(RightID) + 1 from SecRights), 2, 'button_CollateralAssignmentDialog_btnNewAsset', 'CollateralAssignmentDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDialog_btnNewAsset'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_WRM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDialog_btnNewAsset'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	</sql>
	</changeSet>
	<changeSet author="Madhubabu" id="16">
	<sql>
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnNew'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnEdit'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnDelete'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CollateralAssignmentDetailDialog_CollateralRef'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CollateralAssignmentDetailDialog_AssignValuePerc'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
	</sql>
	</changeSet>
	<changeSet id="17" author="Srikanth">
		<addColumn tableName="WIFFinanceMain_Temp">
			<column name="FinRepayMethod" type="varchar(8)" />
		</addColumn>
	</changeSet>
	<changeSet id="18" author="Srikanth">
		<addColumn tableName="WIFFinanceMain">
			<column name="FinRepayMethod" type="varchar(8)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="19" author="Siva">
		<sql>
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		
		-- Security Groups Creation
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FIN_REAGINGH_MAKER', 'Allowed for Re-Aging Holidays Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FIN_REAGINGH_APPROVER', 'Allowed for Re-Aging Holidays Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			
		-- Security Role Groups
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FIN_REAGINGH_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_OFFICER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FIN_REAGINGH_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_MANAGER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
		--Sec rights
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_FinanceMainDialog_btnReAgeHolidays','FinanceMainDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinanceManagement_ReAgeHolidays','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		-- Security Group Rights
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnReAgeHolidays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReAgeHolidays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReAgeHolidays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
	<changeSet id="20" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[
			alter table FinTypeFees disable constraint FK_FinTypeFees_FeeTypeID;
			alter table FinTypeFees_Temp disable constraint FK_FinTypeFees_Temp_FeeTypeID;
			
			create table sai_temp as select * from FinTypeFees;
			delete from FinTypeFees;
			commit;
			
			alter table FinTypeFees modify (OriginationFee number(1));
			alter table FinTypeFees modify (Active number(1));

			insert into FinTypeFees select * from sai_temp;
			commit;
			drop table sai_temp;
			
			create table sai_temp as select * from FinTypeFees_Temp;
			delete from FinTypeFees_Temp;
			commit;
			
			alter table FinTypeFees_Temp modify (OriginationFee number(1));
			alter table FinTypeFees_Temp modify (Active number(1));

			insert into FinTypeFees_Temp select * from sai_temp;
			commit;
			drop table sai_temp;
				alter table FinTypeFees enable constraint FK_FinTypeFees_FeeTypeID;
			alter table FinTypeFees_Temp enable constraint FK_FinTypeFees_Temp_FeeTypeID;
		]]>
		</sql>
	</changeSet>
	<changeSet id="20" author="Prasad" dbms="mssql">
		<sql>
		<![CDATA[
			alter table FinTypeFees drop constraint PK_FINTYPEFEES;
			alter table FinTypeFees drop constraint FK_FinTypeFees_FeeTypeID;
			alter table FinTypeFees drop constraint DF_FinTypeFees_Version;
			
			alter table FinTypeFees_Temp drop constraint PK_FINTYPEFEES_TEMP;
			alter table FinTypeFees_Temp drop constraint FK_FinTypeFees_Temp_FeeTypeID;
			alter table FinTypeFees_Temp drop constraint DF_FinTypeFees_Temp_Version;
			
			alter table FinTypeFees alter column OriginationFee bit not null;
			alter table FinTypeFees alter column Active bit;
			alter table FinTypeFees_Temp alter column OriginationFee bit not null;
			alter table FinTypeFees_Temp alter column Active bit;
				
			alter table FinTypeFees add constraint PK_FINTYPEFEES primary key clustered (FinType,OriginationFee,FinEvent,FeeTypeID);
			alter table FinTypeFees_Temp add constraint PK_FINTYPEFEES_TEMP primary key clustered (FinType,OriginationFee,FinEvent,FeeTypeID);
			alter table FinTypeFees add constraint FK_FinTypeFees_FeeTypeID foreign key (FeeTypeID) references FeeTypes (FeeTypeID);
			alter table FinTypeFees_Temp add constraint FK_FinTypeFees_Temp_FeeTypeID foreign key (FeeTypeID) references FeeTypes (FeeTypeID);
			alter table FinTypeFees add constraint DF_FinTypeFees_Version default ((0)) for Version;
			alter table FinTypeFees_Temp add constraint DF_FinTypeFees_Temp_Version default ((0)) for Version;
		]]>
		</sql>
	</changeSet>
	<changeSet id="20" author="Prasad" dbms="postgresql">
		<sql>
		<![CDATA[
		 drop view FinTypeFees_View;
		    drop view FinTypeFees_AView;
			update FinTypeFees set OriginationFee = 0 where OriginationFee is null;
			alter table FinTypeFees alter column OriginationFee type smallint using OriginationFee::smallint ;
			alter table FinTypeFees alter column OriginationFee SET NOT NULL;
			update FinTypeFees set Active = 0 where Active is null;
			alter table FinTypeFees alter column Active type smallint using Active::smallint ;
			
			update FinTypeFees_Temp set OriginationFee = 0 where OriginationFee is null;
			alter table FinTypeFees_Temp alter column OriginationFee type smallint using OriginationFee::smallint ;
			alter table FinTypeFees_Temp alter column OriginationFee SET NOT NULL;
			update FinTypeFees_Temp set Active = 0 where Active is null;
			alter table FinTypeFees_Temp alter column Active type smallint using Active::smallint ;
            
            Create view FinTypeFees_AView as
            SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees T1 INNER JOIN 
			           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent;
			           
			           CREATE VIEW FinTypeFees_View AS SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
			           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
					   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees_Temp T1 INNER JOIN 
			           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
			UNION ALL
			SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
			           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
					   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees T1 INNER JOIN 
			           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
			WHERE     NOT EXISTS
			                          (SELECT     1
			                            FROM          FinTypeFees_Temp
			                            WHERE      FinType = T1.FinType AND FinEvent = T1.FinEvent AND 
										FeeTypeID = T1.FeeTypeID AND OriginationFee = T1.OriginationFee);
		]]>
		</sql>
	</changeSet>
	
	<changeSet id="21" author="Madhubabu">
	<sql>
	 update ReportList set FieldLabels='label_CustTypeCode,label_CustTypeDesc,label_CustomerTypeDialog_CustTypeIsActive.value,label_RecordStatus,label_RecordType' ,moduletype='System Masters' where Code='CustomerType'
	</sql>
	</changeSet>
	<changeSet id="22" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[			
			create table sai_temp as select * from Task_Log;
			delete from Task_Log;
			commit;
			
			alter table Task_Log modify (Processed number(1));
					
			insert into Task_Log select * from sai_temp;
			commit;
			drop table sai_temp;		
		]]>
		</sql>
	</changeSet>
	<changeSet id="22" author="Prasad" dbms="mssql">
		<sql>
		<![CDATA[			
			alter table Task_Log alter column Processed bit not null;			
		]]>
		</sql>
	</changeSet>
	<changeSet id="22" author="Prasad" dbms="postgresql">
		<sql>
		<![CDATA[			
			update Task_Log set Processed = 0 where Processed is null;
			alter table Task_Log alter column Processed type smallint using Processed::smallint ;
			alter table Task_Log alter column Processed SET NOT NULL;			
		]]>
		</sql>
	</changeSet>
	<changeSet id="23" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[			
			alter table FinanceMain modify QuickDisb default null;
			
			update FinanceMain set QuickDisb = 0 where QuickDisb is null;
			
			create table sai_temp as select * from FinanceMain;
			
						
			update FinanceMain set QuickDisb = null;
			
			alter table FinanceMain modify QuickDisb number(1);
			
			update FinanceMain m set (m.QuickDisb) = (select t.QuickDisb from sai_temp t where t.FINREFERENCE = m.FINREFERENCE) where exists (select 1 from sai_temp t where t.FINREFERENCE = m.FINREFERENCE);
			
			alter table FinanceMain modify QuickDisb number(1) not null;
			
			drop table sai_temp;
		]]>
		</sql>
	</changeSet>
	<changeSet id="23" author="Prasad" dbms="mssql">
		<sql>
		<![CDATA[	
		alter table FinanceMain	 drop constraint DF_FinanceMain_QuickDisb;
			alter table FinanceMain alter column QuickDisb bit not null;		
			alter table FinanceMain add constraint DF_FinanceMain_QuickDisb default ((0)) for QuickDisb;
			alter table FinanceMain_temp	 drop constraint DF_FinanceMain_Temp_QuickDisb;	
				alter table FinanceMain_temp alter column QuickDisb bit not null;	
				alter table FinanceMain_temp add constraint DF_FinanceMain_Temp_QuickDisb default ((0)) for QuickDisb;
		]]>
		</sql>
	</changeSet>
	<changeSet id="23" author="Prasad" dbms="postgresql">
		<sql>
		<![CDATA[			
			drop View FinDetailsbyReference_IView;
           drop View financemain_aview;
           drop view financemain_view;
           drop view PayOrderIssueHeader_AView;
           drop view payorderissueheader_view;
           drop view financemain_tview;

update FinanceMain set QuickDisb = 0 where QuickDisb is null;
alter table FinanceMain alter column QuickDisb DROP DEFAULT;
			alter table FinanceMain alter column QuickDisb type smallint using QuickDisb::smallint ;
			alter table FinanceMain alter column QuickDisb SET NOT NULL;
 update FinanceMain_temp set QuickDisb = 0 where QuickDisb is null;
alter table FinanceMain_temp alter column QuickDisb DROP DEFAULT;
			alter table FinanceMain_temp alter column QuickDisb type smallint using QuickDisb::smallint ;
			alter table FinanceMain_temp alter column QuickDisb SET NOT NULL;  
	Create or replace view financemain_aview AS
		SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment  lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T7.FinTypeDesc  lovDescFinTypeName, T7.FinMaxAmount  lovDescFinMaxAmt, T7.FinMinAmount  lovDescFinMinAmount, 
                      T1.MinDownpayPerc, T7.FinIsAlwDifferment  lovDescFinAlwDeferment, T7.FinIsDwPayRequired  lovDescDwnPayReq, 
                      T7.FinMaxDifferment  lovDescFinMaxDifferment,T12.BranchDesc  lovDescFinBranchName, T1.LastRepayDate, T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, 
                       T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef, T1.DepreciationFrq, T1.FinContractDate, 
                      T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,   T17.AcrTillLBD  lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, 
                      T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose, 
                     T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.bankName, T1.iban, T1.accountType, T1.DdaReferenceNo, 
                      T7.FinScheduleOn  LovDescFinScheduleOn, T1.CustDSR,
                      T1.JointAccount, T1.JointCustId, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, T1.SecurityCollateral, 
                       T1.Approved,   T1.Discrepancy, T1.LimitApproved, T1.InvestmentRef, T1.GraceTerms, 
                      T7.FinDivision  lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps,  T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc  LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                    T1.SupplementRent, T1.IncreasedCost, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId,T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T29.AgreeName,T29.MMAReference LovDescMMAReference,
					  T1.DSACode,T30.ROfficerDesc DSACodeDesc,T1.TDSApplicable,  T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes  T7 ON T1.FinType = T7.FinType  LEFT OUTER JOIN
                      RMTBranches  T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FinPftDetails  T17 ON T17.FinReference = T1.FinReference LEFT OUTER JOIN
                      StepPolicyHeader  T24 ON T1.StepPolicy = T24.PolicyCode  LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN 
					  RMTGENDEPARTMENTS T28 ON T1.ACCOUNTSOFFICER = T28.GENDEPARTMENT LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGENDEPARTMENTS T35 ON T1.SalesDepartment = T35.GENDEPARTMENT  INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode;
                      
     Create or replace view FinDetailsbyReference_IView AS                 
		SELECT T1.CustID CustomerNo, T1.FinReference FinanceRef, T1.FinType FinanceType,
	   T1.FinStartDate StartDate, T1.NumberOfTerms TotalInstallments, T1.FinAmount FinanceAmount, T1.NextRepayDate DueDate,
		T9.CustShrtName CustomerName, T1.FinContractDate ContractDate, T1.DownPayment DownPaymentAmount, 
		T1.RepayFrq RepaymentFrequency, T1.RepayProfitRate ProfitRate, T1.RepayAccountId RepaymentAccount, 
		T1.RepayMargin MarginRate,
		T2.BranchCode  Branch, T1.FinCcy Currency,T4.FinCategory ProductType,
		(T5.NOInst-T5.NOPaidInst) RemainingInstallments,(T5.NSchdPft+T5.NSchdPri) InstallmentAmount,
		(T5.ODPrincipal+T5.ODProfit) PastDueAmount,
		(T5.TotalPftPaid+T5.TotalPriPaid) RepaidAmount, T5.LastRpySchDate LastInstallmentDate, 
		T5.LastRepayAmt LastInstallmentAmount,
		(T5.NSchdPft+T5.NSchdPri+T5.NSchdPftDue+T5.NSchdPriDue) OutstandingAmount,  T5.ODDays DaysPastDue,
		T6.CustStsDescription FinanceStatus,T7.DisbAmount DisbursedAmount,
	    COALESCE(T8.BRRate,0) BaseRate, (COALESCE(T8.BRRate,0) + T1.RepayMargin) AllInRate
FROM FinanceMain_AView T1 INNER JOIN 
	 Customers T9 ON T9.CustId = T1.CustId INNER JOIN 
	 RMTBranches T2 ON T1.FinBranch = T2.BranchCode INNER JOIN 
	 RMTFinanceTypes T4 ON T1.FinType = T4.FinType INNER JOIN 
	 FinPftDetails T5 ON T1.FinReference = T5.FinReference INNER JOIN
	 BMTCustStatusCodes T6 ON T1.FinStatus = T6.CustStsCode INNER JOIN
	 FinDisbursementDetails T7 ON T1.FinReference = T7.FinReference LEFT JOIN
	 RMTBaseRates T8 ON T1.RepayBaseRate = T8.BRType;
     
     
     create or replace view FinanceMain_View as
		SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR, 
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain_Temp T1   INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
			 
	UNION ALL
			SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR,  
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment  INNER JOIN 
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
						WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          FinanceMain_Temp
                            WHERE      (FINREFERENCE = T1.FINREFERENCE)));
                            
                            
                            

Create or replace view  PayOrderIssueHeader_AView AS
		SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID, 
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb,T2.LoanApproved
FROM        PayOrderIssueHeader   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID;
            
            
            
   Create or replace view  PayOrderIssueHeader_View as
		SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb,T2.LoanApproved,T2.FinIsActive
FROM        PayOrderIssueHeader_Temp   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,0 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  
 union all
 SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb,T2.LoanApproved,T2.FinIsActive
FROM        PayOrderIssueHeader  T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,1 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,0 LoanApproved,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb,
				FinisActive
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  
 WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          PayOrderIssueHeader_Temp
                            WHERE      FinReference = T1.FinReference);
                            
                            
                            
     Create or replace view financemain_tview as 
		SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount,  T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.FinTypeDesc lovDescFinTypeName, T2.FinMaxAmount lovDescFinMaxAmt, T2.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T4.BranchDesc lovDescFinBranchName, T1.LastRepayDate,  T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate,  T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,  
                      T1.TotalRepayAmt,T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                       T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose,T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T1.CustDSR,
                      T1.JointAccount, T1.JointCustId, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,   T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T2.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T5.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                     T1.DeviationApproval,T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T1.SupplementRent, T1.IncreasedCost, T1.CreditInsAmt, T1.RolloverFrq, 
                      T1.NextRolloverDate,  T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc, T6.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T7.ROfficerDesc DSACodeDesc,
					  T1.TDSApplicable, T3.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T8.ROfficerDesc ReferralIdDesc, T1.DmaCode , T9.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T10.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH
			FROM         FinanceMain_Temp T1 INNER JOIN
                      RMTFinanceTypes T2 ON T1.FinType = T2.FinType  INNER JOIN
                      BMTProduct T3 ON T2.FinCategory = T3.ProductCode INNER JOIN
                      RMTBranches T4 ON T1.FinBranch = T4.BranchCode LEFT OUTER JOIN
                      StepPolicyHeader T5 ON T1.StepPolicy = T5.PolicyCode LEFT OUTER JOIN
                      RMTGenDepartments T6 ON T1.AccountsOfficer = T6.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T7 ON T1.DSACode = T7.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T8 ON T1.ReferralId = T8.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T9 ON T1.DmaCode = T9.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T10 ON T1.SalesDepartment = T10.GenDepartment;		
		]]>
		</sql>
	</changeSet>
	<changeSet id="24" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[			
			alter table FinanceMain_Temp modify QuickDisb default null;
			
			update FinanceMain_Temp set QuickDisb = 0 where QuickDisb is null;
			
			create table sai_temp as select * from FinanceMain_Temp;
			
						
			update FinanceMain_Temp set QuickDisb = null;
			
			alter table FinanceMain_Temp modify QuickDisb number(1);
			
			update FinanceMain_Temp m set (m.QuickDisb) = (select t.QuickDisb from sai_temp t where t.FINREFERENCE = m.FINREFERENCE) where exists (select 1 from sai_temp t where t.FINREFERENCE = m.FINREFERENCE);
			
			alter table FinanceMain_Temp modify QuickDisb number(1) not null;
			
			drop table sai_temp;
		]]>
		</sql>
	</changeSet>
	<changeSet id="25" author="Siva" dbms="mssql">
		<sql>
		DELETE FROM SecGroupRights WHERE GrpID = (Select GrpID From SecGroups where GrpCode = 'FIN_CHANGEGESTATION_MAKER')
			AND RightID = (Select RightID From SecRights Where RightName = 'FinanceMainDialog_nextGrcPftDate');

		DELETE FROM SecGroupRights WHERE GrpID = (Select GrpID From SecGroups where GrpCode = 'FIN_CHANGEGESTATION_MAKER')
			AND RightID = (Select RightID From SecRights Where RightName = 'FinanceMainDialog_nextGrcPftRvwDate');
		
		DELETE FROM SecGroupRights WHERE GrpID = (Select GrpID From SecGroups where GrpCode = 'FIN_CHANGEGESTATION_MAKER')
			AND RightID = (Select RightID From SecRights Where RightName = 'FinanceMainDialog_nextGrcCpzDate');
		</sql>
	</changeSet>
	
	<changeSet id="26" author="Madhubabu">
	<sql>
			update reportlist set  ReportHeading='Customer Groups' where Module='CustomerGroup' and Code='CustomerGroup';
			update reportlist set  ReportHeading='Mandate',Module='Customers',ModuleType='Customers' where Code='Mandate';
	</sql>
	</changeSet>
	
	<changeSet id="27" author="madhubabu">
	<sql>
	update ReportList set FormatReq=0 where Code='WIF';
	update reportlist set FieldLabels='listheader_CustCIF.label,listheader_CustShrtName.label,listheader_CustCoreBank.label,listheader_CustDftBranch.label,listheader_CustCtgCode.label,listheader_CustTypeCode.label' where Code='Customer';
	</sql>
	
	</changeSet>
	
	<changeSet id="28" author="Srikanth">
		<sql>
		Delete from ErrorDetails where ErrorCode in('90261','90262');
		INSERT INTO ErrorDetails VALUES('90261','EN','E','{0} date should be a valid repayment date.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		INSERT INTO ErrorDetails VALUES('90262','EN','E','Schedules with Profit balance greater than 0, should not be selected for Recal To Date.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		Update ErrorDetails set ErrorMessage ='{0} should be greater than or equal to fromDate {1} and less than maurityDate {2}.' where ErrorCode = '91102';
		Update ErrorDetails set ErrorMessage ='RecalToDate {0} should be greater than or equal to RecalFromDate {1}.' where ErrorCode = '91109';
			</sql>
	</changeSet>
	</databaseChangeLog>
