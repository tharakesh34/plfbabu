<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />

<changeSet id="01" author="Madhubabu">
		<sql>
		update ErrorDetails set ErrorMessage='Select either planned emi holiday (OR) Multiple disbursement' where ErrorCode='30574';
		update ErrorDetails set ErrorMessage='Select either planned emi holiday (OR) Stepping loan' where ErrorCode='30573';
		</sql>
	</changeSet>
	<changeSet id="02" author="Surekha" dbms="mssql">
	<sql>
	ALTER TABLE DATA_ENGINE_TABLE ALTER COLUMN  STATUSUPDATE varchar(1000);
	</sql>
	</changeSet>
	
	<changeSet id="02" author="Surekha" dbms="oracle">
	<sql>
	ALTER TABLE DATA_ENGINE_TABLE modify  STATUSUPDATE varchar(1000);
	</sql>
	</changeSet>
	
	<changeSet id="2" author="Kesav">
		<createView viewName="PromotionFees_AView" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
		</createView>
	</changeSet>
	
	<changeSet id="3" author="Kesav">
		<createView viewName="PromotionFees_TView" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees_Temp T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
		</createView>
	</changeSet>
	
	<changeSet id="4" author="Kesav">
		<createView viewName="PromotionFees_View" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees_Temp T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
			
			UNION ALL

			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
			
			WHERE     	NOT EXISTS (SELECT 1 FROM PromotionFees_Temp
                        WHERE FeeID = T1.FeeID AND  PromotionCode = T1.PromotionCode AND FinEvent = T1.FinEvent 
								AND FeeTypeID = T1.FeeTypeID AND OriginationFee = T1.OriginationFee)
		</createView>
	</changeSet>
	
	<changeSet id="6" author="Kesav">
		<sql>
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONFEES_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
			Delete from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONFEES_MAKER','WF Maker for Promotion Fees', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnDelete');
			Delete from SecRights where RightName = 'button_PromotionFeesDialog_btnDelete';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionFeesDialog_btnDelete', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONFEES_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnSave');
			Delete from SecRights where RightName = 'button_PromotionFeesDialog_btnSave';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionFeesDialog_btnSave', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnNew');
			Delete from SecRights where RightName = 'button_PromotionFeesDialog_btnNew';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionFeesDialog_btnNew', 'PromotionList', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_PromotionCode');
			Delete from SecRights where RightName = 'PromotionFeesDialog_PromotionCode';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_PromotionCode', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_PromotionCode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeTypeID');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FeeTypeID';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FeeTypeID', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeTypeID'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FinEvent');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FinEvent';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FinEvent', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FinEvent'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeOrder');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FeeOrder';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FeeOrder', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeOrder'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeScheduleMethod');
			Delete from SecRights where RightName = 'PromotionFeesDialog_FeeScheduleMethod';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_FeeScheduleMethod', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_FeeScheduleMethod'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculationType');
			Delete from SecRights where RightName = 'PromotionFeesDialog_CalculationType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_CalculationType', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculationType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_RuleCode');
			Delete from SecRights where RightName = 'PromotionFeesDialog_RuleCode';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_RuleCode', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_RuleCode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Amount');
			Delete from SecRights where RightName = 'PromotionFeesDialog_Amount';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_Amount', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Amount'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Percentage');
			Delete from SecRights where RightName = 'PromotionFeesDialog_Percentage';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_Percentage', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Percentage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculateOn');
			Delete from SecRights where RightName = 'PromotionFeesDialog_CalculateOn';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_CalculateOn', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_CalculateOn'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwDeviation');
			Delete from SecRights where RightName = 'PromotionFeesDialog_AlwDeviation';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_AlwDeviation', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwDeviation'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_MaxWaiverPerc');
			Delete from SecRights where RightName = 'PromotionFeesDialog_MaxWaiverPerc';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_MaxWaiverPerc', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_MaxWaiverPerc'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFee');
			Delete from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFee';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_AlwModifyFee', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFee'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFeeSchdMthd');
			Delete from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFeeSchdMthd';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_AlwModifyFeeSchdMthd', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_AlwModifyFeeSchdMthd'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Active');
			Delete from SecRights where RightName = 'PromotionFeesDialog_Active';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionFeesDialog_Active', 'PromotionFeesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionFeesDialog_Active'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_APPROVER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONFEES_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
			Delete from SecGroups where GrpCode = 'PROMOTIONFEES_APPROVER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONFEES_APPROVER','WF Approver for Promotion Fees', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONFEES_APPROVER'), (Select RightID from SecRights where RightName = 'button_PromotionFeesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONFEES_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>
	<changeSet id="5" author="Madhubabu">
		<sql>
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			delete from secgrouprights where rightid = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_LiabilityRequest') and grpid = (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_MAKER');
			delete from secgrouprights where rightid = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_LiabilityRequest') and grpid = (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_APPROVER');
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_CancelDisbursment'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_CANCELDISB_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_CancelDisbursment'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	
	<changeSet id="7" author="Kesav">
		<sql>
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
			Delete from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONINSURANCES_MAKER','WF Maker for Promotion Insurances', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnDelete');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnDelete';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnDelete', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnSave', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_InsuranceType');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_InsuranceType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_InsuranceType', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_InsuranceType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_PaymentType');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_PaymentType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_PaymentType', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_PaymentType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalType');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_CalType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_CalType', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_AmountRule');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_AmountRule';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_AmountRule', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_AmountRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_ConstAmt');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_ConstAmt';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_ConstAmt', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_ConstAmt'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalculateOn');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_CalculateOn';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_CalculateOn', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_CalculateOn'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Percentage');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_Percentage';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_Percentage', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Percentage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Mandatory');
			Delete from SecRights where RightName = 'PromotionInsurancesDialog_Mandatory';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'PromotionInsurancesDialog_Mandatory', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'PromotionInsurancesDialog_Mandatory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_APPROVER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
			Delete from SecGroups where GrpCode = 'PROMOTIONINSURANCES_APPROVER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONINSURANCES_APPROVER','WF Approver for Promotion Insurances', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_APPROVER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONINSURANCES_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>
	
	<changeSet id="8" author="Kesav">
		<sql>
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnNew');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnNew';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnNew', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnEdit');
			Delete from SecRights where RightName = 'button_PromotionInsurancesDialog_btnEdit';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_PromotionInsurancesDialog_btnEdit', 'PromotionInsurancesDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONINSURANCES_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionInsurancesDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

		</sql>
	</changeSet>
	
	<changeSet id = "9" author = "Kesav">
		<createView viewName = "PromotionInsurances_AView" replaceIfExists = "true">
			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 
		</createView>
	</changeSet>
	
	<changeSet id = "10" author = "Kesav">
		<createView viewName = "PromotionInsurances_TView" replaceIfExists = "true">
			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances_Temp T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 
		</createView>
	</changeSet>
		
	<changeSet id = "11" author = "Kesav">
		<createView viewName = "PromotionInsurances_View" replaceIfExists = "true">
			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances_Temp T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 

			UNION ALL

			SELECT 		T1.InsuranceID , T1.PromotionCode , T1.FinType , T1.InsuranceType , T1.Mandatory , T1.DftPayType , T1.CalType , T1.AmountRule , 
						T1.ConstAmt , T1.Percentage , T1.CalculateOn , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
						T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,
						T2.InsuranceTypeDesc,
						T3.RuleCodeDesc
			FROM 		PromotionInsurances T1 INNER JOIN
						InsuranceType T2 ON T2.InsuranceType = T1.InsuranceType LEFT OUTER JOIN
						Rules T3 ON T1.AmountRule = T3.RuleCode 

			WHERE   NOT EXISTS (SELECT 1 FROM PromotionInsurances_Temp 
					WHERE InsuranceID = T1.InsuranceID AND InsuranceType = T1.InsuranceType)
		</createView>
	</changeSet>
	
	<changeSet author="Kesav" id="12">
		<modifyDataType tableName="PromotionInsurances" columnName="CalType" newDataType="char(1)"/>
	</changeSet>
	
	<changeSet author="Kesav" id="13">
		<modifyDataType tableName="PromotionInsurances_Temp" columnName="CalType" newDataType="char(1)"/>
	</changeSet>
	
	<changeSet author="Madhubabu" id="14">
	<sql>
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		
		INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COLLATERALASSIGN_NEW','New button grp to assingn collateral', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDialog_btnNew'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'COLLATERALASSIGN_NEW'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
		INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'COLLATERALASSIGN_NEW'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'OPERATIONS_OFFICER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
	</sql>
	</changeSet>
	<changeSet author="Madhubabu" id="15">
	<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS Values((Select max(RightID) + 1 from SecRights), 2, 'button_CollateralAssignmentDialog_btnNewAsset', 'CollateralAssignmentDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDialog_btnNewAsset'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_WRM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDialog_btnNewAsset'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	</sql>
	</changeSet>
	<changeSet author="Madhubabu" id="16">
	<sql>
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnNew'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnEdit'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnDelete'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_CollateralAssignmentDetailDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CollateralAssignmentDetailDialog_CollateralRef'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='COLLATERALASSIGN_NEW') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CollateralAssignmentDetailDialog_AssignValuePerc'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
	</sql>
	</changeSet>
	<changeSet id="17" author="Srikanth">
		<addColumn tableName="WIFFinanceMain_Temp">
			<column name="FinRepayMethod" type="varchar(8)" />
		</addColumn>
	</changeSet>
	<changeSet id="18" author="Srikanth">
		<addColumn tableName="WIFFinanceMain">
			<column name="FinRepayMethod" type="varchar(8)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="19" author="Siva">
		<sql>
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		
		-- Security Groups Creation
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FIN_REAGINGH_MAKER', 'Allowed for Re-Aging Holidays Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FIN_REAGINGH_APPROVER', 'Allowed for Re-Aging Holidays Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			
		-- Security Role Groups
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FIN_REAGINGH_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_OFFICER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FIN_REAGINGH_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_MANAGER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
		--Sec rights
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_FinanceMainDialog_btnReAgeHolidays','FinanceMainDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinanceManagement_ReAgeHolidays','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		-- Security Group Rights
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnReAgeHolidays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReAgeHolidays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReAgeHolidays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_REAGINGH_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
	<changeSet id="20" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[
			alter table FinTypeFees disable constraint FK_FinTypeFees_FeeTypeID;
			alter table FinTypeFees_Temp disable constraint FK_FinTypeFees_Temp_FeeTypeID;
			
			create table sai_temp as select * from FinTypeFees;
			delete from FinTypeFees;
			commit;
			
			alter table FinTypeFees modify (OriginationFee number(1));
			alter table FinTypeFees modify (Active number(1));

			insert into FinTypeFees select * from sai_temp;
			commit;
			drop table sai_temp;
			
			create table sai_temp as select * from FinTypeFees_Temp;
			delete from FinTypeFees_Temp;
			commit;
			
			alter table FinTypeFees_Temp modify (OriginationFee number(1));
			alter table FinTypeFees_Temp modify (Active number(1));

			insert into FinTypeFees_Temp select * from sai_temp;
			commit;
			drop table sai_temp;
				alter table FinTypeFees enable constraint FK_FinTypeFees_FeeTypeID;
			alter table FinTypeFees_Temp enable constraint FK_FinTypeFees_Temp_FeeTypeID;
		]]>
		</sql>
	</changeSet>
	<changeSet id="20" author="Prasad" dbms="mssql">
		<sql>
		<![CDATA[
			alter table FinTypeFees drop constraint PK_FINTYPEFEES;
			alter table FinTypeFees drop constraint FK_FinTypeFees_FeeTypeID;
			alter table FinTypeFees drop constraint DF_FinTypeFees_Version;
			
			alter table FinTypeFees_Temp drop constraint PK_FINTYPEFEES_TEMP;
			alter table FinTypeFees_Temp drop constraint FK_FinTypeFees_Temp_FeeTypeID;
			alter table FinTypeFees_Temp drop constraint DF_FinTypeFees_Temp_Version;
			
			alter table FinTypeFees alter column OriginationFee bit not null;
			alter table FinTypeFees alter column Active bit;
			alter table FinTypeFees_Temp alter column OriginationFee bit not null;
			alter table FinTypeFees_Temp alter column Active bit;
				
			alter table FinTypeFees add constraint PK_FINTYPEFEES primary key clustered (FinType,OriginationFee,FinEvent,FeeTypeID);
			alter table FinTypeFees_Temp add constraint PK_FINTYPEFEES_TEMP primary key clustered (FinType,OriginationFee,FinEvent,FeeTypeID);
			alter table FinTypeFees add constraint FK_FinTypeFees_FeeTypeID foreign key (FeeTypeID) references FeeTypes (FeeTypeID);
			alter table FinTypeFees_Temp add constraint FK_FinTypeFees_Temp_FeeTypeID foreign key (FeeTypeID) references FeeTypes (FeeTypeID);
			alter table FinTypeFees add constraint DF_FinTypeFees_Version default ((0)) for Version;
			alter table FinTypeFees_Temp add constraint DF_FinTypeFees_Temp_Version default ((0)) for Version;
		]]>
		</sql>
	</changeSet>
	<changeSet id="20" author="Prasad" dbms="postgresql">
		<sql>
		<![CDATA[
		 drop view FinTypeFees_View;
		    drop view FinTypeFees_AView;
			update FinTypeFees set OriginationFee = 0 where OriginationFee is null;
			alter table FinTypeFees alter column OriginationFee type smallint using OriginationFee::smallint ;
			alter table FinTypeFees alter column OriginationFee SET NOT NULL;
			update FinTypeFees set Active = 0 where Active is null;
			alter table FinTypeFees alter column Active type smallint using Active::smallint ;
			
			update FinTypeFees_Temp set OriginationFee = 0 where OriginationFee is null;
			alter table FinTypeFees_Temp alter column OriginationFee type smallint using OriginationFee::smallint ;
			alter table FinTypeFees_Temp alter column OriginationFee SET NOT NULL;
			update FinTypeFees_Temp set Active = 0 where Active is null;
			alter table FinTypeFees_Temp alter column Active type smallint using Active::smallint ;
            
            Create view FinTypeFees_AView as
            SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees T1 INNER JOIN 
			           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent;
			           
			           CREATE VIEW FinTypeFees_View AS SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
			           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
					   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees_Temp T1 INNER JOIN 
			           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
			UNION ALL
			SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
			           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
					   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees T1 INNER JOIN 
			           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
			WHERE     NOT EXISTS
			                          (SELECT     1
			                            FROM          FinTypeFees_Temp
			                            WHERE      FinType = T1.FinType AND FinEvent = T1.FinEvent AND 
										FeeTypeID = T1.FeeTypeID AND OriginationFee = T1.OriginationFee);
		]]>
		</sql>
	</changeSet>
</databaseChangeLog>
