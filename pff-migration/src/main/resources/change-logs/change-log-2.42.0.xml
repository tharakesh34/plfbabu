<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />

<changeSet id="01" author="Madhubabu">
		<sql>
		update ErrorDetails set ErrorMessage='Select either planned emi holiday (OR) Multiple disbursement' where ErrorCode='30574';
		update ErrorDetails set ErrorMessage='Select either planned emi holiday (OR) Stepping loan' where ErrorCode='30573';
		</sql>
	</changeSet>
	<changeSet id="02" author="Surekha">
	<sql>
	ALTER TABLE DATA_ENGINE_TABLE ALTER COLUMN  STATUSUPDATE varchar(1000);
	</sql>
	</changeSet>
	
	<changeSet id="2" author="Kesav">
		<createView viewName="PromotionFees_AView" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
		</createView>
	</changeSet>
	
	<changeSet id="3" author="Kesav">
		<createView viewName="PromotionFees_TView" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees_Temp T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
		</createView>
	</changeSet>
	
	<changeSet id="4" author="Kesav">
		<createView viewName="PromotionFees_View" replaceIfExists="true">
			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees_Temp T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
			
			UNION ALL

			SELECT 		T1.FeeID, T1.PromotionCode, T1.FeeTypeID, T1.FinEvent, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode,
						T1.Amount, T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd,
						T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
						T1.RecordType, T1.WorkflowId, T1.OriginationFee,
						T2.FeeTypeCode, T2.FeeTypeDesc,
						T3.AEEventCodeDesc FinEventDesc,
						T4.RuleCodeDesc RuleDesc
			FROM 		PromotionFees T1 INNER JOIN 
						FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID INNER JOIN
						BMTAEEvents T3 ON T1.FinEvent = T3.AEEventCode LEFT OUTER JOIN
						Rules T4 ON T1.RuleCode = T4.RuleCode AND T4.RuleModule='FEES' AND T1.FinEvent = T4.RuleEvent
			
			WHERE     	NOT EXISTS (SELECT 1 FROM PromotionFees_Temp
                        WHERE FeeID = T1.FeeID AND  PromotionCode = T1.PromotionCode AND FinEvent = T1.FinEvent 
								AND FeeTypeID = T1.FeeTypeID AND OriginationFee = T1.OriginationFee)
		</createView>
	</changeSet>
	
</databaseChangeLog>
