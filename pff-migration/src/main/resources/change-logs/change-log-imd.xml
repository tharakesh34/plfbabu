<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	

	

<changeSet id="7" author="bharat">
	<addColumn tableName="FINRECEIPTHEADER">
		<column name="EXTREFERENCE" type="VARCHAR(20)" >
		<constraints nullable="true"/>
		</column>
		<column name="MODULE" type="VARCHAR(20)" >
		<constraints nullable="true"/>
		</column>
	</addColumn>
	
</changeSet>

<changeSet id="8" author="bharat">
	<dropNotNullConstraint tableName="FINRECEIPTHEADER" columnName="REFERENCE"/>
	<dropNotNullConstraint tableName="FINRECEIPTHEADER_TEMP" columnName="REFERENCE"/>
</changeSet>

	
	
	
	<changeSet id="10" author="bharat">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
		<column name="EXTREFERENCE" type="VARCHAR(20)" >
		<constraints nullable="true"/>
		</column>
		<column name="MODULE" type="VARCHAR(20)" >
		<constraints nullable="true"/>
		</column>
	</addColumn>
	</changeSet>
	
	

	
	<changeSet id="12" author="bharat">
		<addColumn tableName="FINFEEDETAIL">
		<column name="TRANSACTIONID" type="VARCHAR(20)" >
		<constraints nullable="true"/>
		</column>
	</addColumn>
	<addColumn tableName="FINFEEDETAIL_TEMP">
		<column name="TRANSACTIONID" type="VARCHAR(20)" >
		<constraints nullable="true"/>
		</column>
	</addColumn>
	</changeSet>
	
	<changeSet id="13" author="bharat">
	<dropNotNullConstraint tableName="FINFEEDETAIL" columnName="FINREFERENCE"/>
	<dropNotNullConstraint tableName="FINFEEDETAIL_TEMP" columnName="finREFERENCE"/>
</changeSet> 

<changeSet id="14" author="bharat">
	<createView viewName="FINFEEDETAIL_VIEW" replaceIfExists="true">
			 SELECT t1.feeid,
    t1.finreference,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeseq,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.status,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.feeamz,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.transactionid,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc
   FROM finfeedetail_temp t1
     LEFT JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
UNION ALL
 SELECT t1.feeid,
    t1.finreference,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeseq,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.status,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.feeamz,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.transactionid,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc
   FROM finfeedetail t1
     LEFT JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
  WHERE NOT (EXISTS ( SELECT 1
           FROM finfeedetail_temp
          WHERE finfeedetail_temp.feeid = t1.feeid))
		</createView>
</changeSet> 
	
	

<changeSet id="25" author="bharat">
<addColumn tableName="fintypefees">
			<column name="ALWPREINCOMIZATION" type="boolean" defaultValue="0" />
	</addColumn>
	<addColumn tableName="fintypefees_temp">
			<column name="ALWPREINCOMIZATION" type="boolean" defaultValue="0" />
	</addColumn>
</changeSet> 

<changeSet id="26" author="bharat">
	<createView viewName="fintypefees_view" replaceIfExists="true">
	
 SELECT t1.fintype,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.feeschedulemethod,
    t1.calculationtype,
    t1.rulecode,
    t1.amount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.moduleid,
    t1.alwpreincomization,
    t2.feetypecode,
    t2.feetypedesc,
    t2.taxapplicable,
    t2.taxcomponent,
    t3.rulecodedesc AS ruledesc
   FROM fintypefees_temp t1
     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
     LEFT JOIN rules t3 ON t1.rulecode = t3.rulecode AND t3.rulemodule = 'FEES'::citext AND t1.finevent = t3.ruleevent
UNION ALL
 SELECT t1.fintype,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.feeschedulemethod,
    t1.calculationtype,
    t1.rulecode,
    t1.amount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.moduleid,
    t1.alwpreincomization,
    t2.feetypecode,
    t2.feetypedesc,
    t2.taxapplicable,
    t2.taxcomponent,
    t3.rulecodedesc AS ruledesc
   FROM fintypefees t1
     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
     LEFT JOIN rules t3 ON t1.rulecode = t3.rulecode AND t3.rulemodule = 'FEES'::citext AND t1.finevent = t3.ruleevent
  WHERE NOT (EXISTS ( SELECT 1
           FROM fintypefees_temp
          WHERE fintypefees_temp.fintype = t1.fintype AND fintypefees_temp.finevent = t1.finevent AND fintypefees_temp.feetypeid = t1.feetypeid AND fintypefees_temp.originationfee = t1.originationfee))
</createView>
</changeSet>



<changeSet id="27" author="bharat">
	<createView viewName="fintypefees_aview" replaceIfExists="true">
	
  SELECT t1.fintype,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.feeschedulemethod,
    t1.calculationtype,
    t1.rulecode,
    t1.amount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.moduleid,
    t1.alwpreincomization,
    t2.feetypecode,
    t2.feetypedesc,
    t2.taxapplicable,
    t2.taxcomponent,
    t3.rulecodedesc AS ruledesc
   FROM fintypefees t1
     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
     LEFT JOIN rules t3 ON t1.rulecode = t3.rulecode AND t3.rulemodule = 'FEES'::citext AND t1.finevent = t3.ruleevent
</createView>
</changeSet>


</databaseChangeLog>