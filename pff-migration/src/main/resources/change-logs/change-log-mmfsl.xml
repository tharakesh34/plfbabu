<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1" author="vijaya.a" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQCD_MANUFACTURERS" />
	</changeSet>

	<changeSet id="1.1" author="vijaya.a" dbms="mssql">
		<createTable tableName="SEQCD_MANUFACTURERS">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="1.2" author="vijaya.a">
		<createTable tableName="CD_Manufacturers">
			<column name="ManufacturerId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_MANUFACTURER_ID" />
			</column>
			<column name="Name" type="varchar(100)">
			</column>
			<column name="Description" type="varchar(100)">
			</column>
			<column name="Channel" type="varchar(20)">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="1.3" author="vijaya.a">
		<createTable tableName="CD_Manufacturers_Temp">
			<column name="ManufacturerId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_MANUFACTURER_TEMP_ID" />
			</column>
			<column name="Name" type="varchar(100)">
			</column>
			<column name="Description" type="varchar(100)">
			</column>
			<column name="Channel" type="varchar(20)">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="1.4" author="vijaya.a">
		<createView viewName="CD_Manufacturers_VIEW" replaceIfExists="true">
			  SELECT t1.manufacturerId,
    			t1.name,
   				t1.description,
    			t1.channel,
          		t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Manufacturers_Temp t1
			UNION ALL
 			SELECT t1.manufacturerId,
    			t1.name,
   				t1.description,
    			t1.channel,
         		t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   				FROM CD_Manufacturers t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_Manufacturers_Temp
            WHERE CD_Manufacturers_Temp.manufacturerId = t1.manufacturerId))
		</createView>
	</changeSet>

	<changeSet id="1.5" author="vijaya.a">
		<createView viewName="CD_Manufacturers_AVIEW" replaceIfExists="true">
			  SELECT t1.manufacturerId,
    			t1.name,
   				t1.description,
    			t1.channel,     
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM CD_Manufacturers t1
		</createView>
	</changeSet>

	<changeSet id="1.6" author="vijaya.a">
		<createView viewName="CD_Manufacturers_TVIEW" replaceIfExists="true">
			  SELECT t1.manufacturerId,
    			t1.name,
   				t1.description,
    			t1.channel,     
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM CD_Manufacturers_Temp t1
		</createView>
	</changeSet>

	<changeSet id="2" author="vijaya.a" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQCD_PRODUCTS" />
	</changeSet>

	<changeSet id="2.1" author="vijaya.a" dbms="mssql">
		<createTable tableName="SEQCD_PRODUCTS">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="2.2" author="vijaya.a">
		<createTable tableName="CD_Products">
			<column name="ProductId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_PRODUCT_ID" />
			</column>
			<column name="ModelId" type="varchar(8)">
			</column>
			<column name="ModelDescription" type="varchar(20)">
			</column>
			<column name="ManufacturerId" type="varchar(50)">
			</column>
			<column name="AssetDescription" type="Varchar(20)">
			</column>
			<column name="MinAmount" type="decimal(18,0)">
			</column>
			<column name="MaxAmount" type="decimal(18,0)">
			</column>
			<column name="ModelStatus" type="Varchar(20)">
			</column>
			<column name="Channel" type="Varchar(20)">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="2.3" author="vijaya.a">
		<createTable tableName="CD_Products_Temp">
			<column name="ProductId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_PRODUCT_Temp_ID" />
			</column>
			<column name="ModelId" type="varchar(8)">
			</column>
			<column name="ModelDescription" type="varchar(20)">
			</column>
			<column name="ManufacturerId" type="varchar(50)">
			</column>
			<column name="AssetDescription" type="Varchar(20)">
			</column>
			<column name="MinAmount" type="decimal(18,0)">
			</column>
			<column name="MaxAmount" type="decimal(18,0)">
			</column>
			<column name="ModelStatus" type="Varchar(20)">
			</column>
			<column name="Channel" type="Varchar(20)">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="2.5" author="vijaya.a">
		<createView viewName="CD_Products_VIEW" replaceIfExists="true">
			  SELECT t1.productId,
    			t1.modelId,
   				t1.modelDescription,
    			t1.manufacturerId,     
    			t1.assetDescription,
    			t1.minAmount,
    			t1.maxAmount,
    			t1.modelStatus,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Products_Temp t1
			UNION ALL
 			SELECT t1.productId,
    			t1.modelId,
   				t1.modelDescription,
    			t1.manufacturerId,     
    			t1.assetDescription,
    			t1.minAmount,
    			t1.maxAmount,
    			t1.modelStatus,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   				FROM CD_Products t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_Products_Temp
            WHERE CD_Products_Temp.productId = t1.productId))
		</createView>
	</changeSet>

	<changeSet id="2.6" author="vijaya.a">
		<createView viewName="CD_Products_AVIEW" replaceIfExists="true">
			  SELECT t1.productId,
    			t1.modelId,
   				t1.modelDescription,
    			t1.manufacturerId,     
    			t1.assetDescription,
    			t1.minAmount,
    			t1.maxAmount,
    			t1.modelStatus,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM CD_Products t1
		</createView>
	</changeSet>

	<changeSet id="2.7" author="vijaya.a">
		<createView viewName="CD_Products_TVIEW" replaceIfExists="true">
			  SELECT t1.productId,
    			t1.modelId,
   				t1.modelDescription,
    			t1.manufacturerId,     
    			t1.assetDescription,
    			t1.minAmount,
    			t1.maxAmount,
    			t1.modelStatus,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM CD_Products_Temp t1
		</createView>
	</changeSet>

	<changeSet id="3" author="vijaya.a" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQCD_MERCHANTS" />
	</changeSet>

	<changeSet id="3.1" author="vijaya.a" dbms="mssql">
		<createTable tableName="SEQCD_MERCHANTS">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="3.2" author="vijaya.a">
		<createTable tableName="CD_Merchants">
			<column name="MerchantId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_MERCHANT_ID" />
			</column>
			<column name="MerchantName" type="varchar(50)">
			</column>
			<column name="StoreId" type="int">
			</column>
			<column name="StoreName" type="varchar(50)">
			</column>
			<column name="StoreAddressLine1" type="varchar(200)">
			</column>
			<column name="StoreAddressLine2" type="varchar(100)">
			</column>
			<column name="StoreAddressLine3" type="varchar(100)">
			</column>
			<column name="StoreCity" type="varchar(50)">
			</column>
			<column name="StoreState" type="varchar(8)">
			</column>
			<column name="StoreCountry" type="varchar(50)">
			</column>
			<column name="CountryName" type="varchar(50)">
			</column>
			<column name="StateName" type="varchar(50)">
			</column>
			<column name="cityName" type="varchar(50)">
			</column>
			<column name="POSID" type="int">
			</column>
			<column name="AvgTranPerMnth" type="decimal(18,0)">
			</column>
			<column name="AvgTranAmtPerMnth" type="decimal(18,0)">
			</column>
			<column name="TranAmtPerTran" type="decimal(18,0)">
			</column>
			<column name="TranAmtPerDay" type="decimal(18,0)">
			</column>
			<column name="AllowRefund" type="boolean">
			</column>
			<column name="PeakTransPerDay" type="decimal(18,0)">
			</column>
			<column name="Channel" type="varchar(20)">
			</column>
			<column name="Active" type="bit">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="3.3" author="vijaya.a">
		<createTable tableName="CD_Merchants_Temp">
			<column name="MerchantId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_MERCHANT_TEMP_ID" />
			</column>
			<column name="MerchantName" type="varchar(50)">
			</column>
			<column name="StoreId" type="int">
			</column>
			<column name="StoreName" type="varchar(50)">
			</column>
			<column name="StoreAddressLine1" type="varchar(200)">
			</column>
			<column name="StoreAddressLine2" type="varchar(100)">
			</column>
			<column name="StoreAddressLine3" type="varchar(100)">
			</column>
			<column name="StoreCity" type="varchar(50)">
			</column>
			<column name="StoreState" type="varchar(8)">
			</column>
			<column name="StoreCountry" type="varchar(50)">
			</column>
			<column name="CountryName" type="varchar(50)">
			</column>
			<column name="StateName" type="varchar(50)">
			</column>
			<column name="cityName" type="varchar(50)">
			</column>
			<column name="POSID" type="int">
			</column>
			<column name="AvgTranPerMnth" type="decimal(18,0)">
			</column>
			<column name="AvgTranAmtPerMnth" type="decimal(18,0)">
			</column>
			<column name="TranAmtPerTran" type="decimal(18,0)">
			</column>
			<column name="TranAmtPerDay" type="decimal(18,0)">
			</column>
			<column name="AllowRefund" type="bit">
			</column>
			<column name="PeakTransPerDay" type="decimal(18,0)">
			</column>
			<column name="Channel" type="varchar(20)">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="3.3_post" author="vijaya.a">
		<addUniqueConstraint tableName="CD_MERCHANTS" columnNames="StoreId"
			constraintName="UK_CD_MERCHANTS_STOREID" />
		<addUniqueConstraint tableName="CD_MERCHANTS_TEMP" columnNames="StoreId"
			constraintName="UK_CD_MERCHANTS_TEMP_STOREID" />
	</changeSet>

	<changeSet id="3.4" author="vijaya.a">
		<createView viewName="CD_Merchants_VIEW" replaceIfExists="true">
			  SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
         		t1.storeCountry,
         		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants_Temp t1
			UNION ALL
 			SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
    			t1.storeCountry,
         		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_Merchants_Temp
            WHERE CD_Merchants_Temp.merchantId = t1.merchantId))
		</createView>
	</changeSet>

	<changeSet id="3.5" author="vijaya.a">
		<createView viewName="CD_Merchants_AVIEW" replaceIfExists="true">
			  SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
    			t1.storeCountry,
         		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants t1
		</createView>
	</changeSet>

	<changeSet id="3.6" author="vijaya.a">
		<createView viewName="CD_Merchants_TVIEW" replaceIfExists="true">
			  SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
    			t1.storeCountry,
          		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants_Temp t1
		</createView>
	</changeSet>

	<changeSet id="4" author="vijaya.a">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_MANUFACTURERS_VIEW', 'Role for manufacturer enquiry', NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_MANUFACTURERS_MAKER', 'Role for manufacturer maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_MANUFACTURERS_APPROVER', 'Role for manufacturer approver', NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0) ;
								
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_MANUFACTURERS_VIEW', 'Group for manufacturer enquiry', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_MANUFACTURERS_MAKER', 'Group for manufacturer maker', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_MANUFACTURERS_APPROVER', 'Group for manufacturer approver', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_CDManufacturers','MENU', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDManufacturersList_PrintList','CDManufacturersList', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDManufacturersList_NewManufacturer','CDManufacturersList', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDManufacturersDialogue_btnNew','CDManufacturersDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDManufacturersDialogue_btnEdit','CDManufacturersDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDManufacturersDialogue_btnDelete','CDManufacturersDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDManufacturersDialogue_btnSave','CDManufacturersDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_Name', 'CDManufacturersDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_Description','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_Channel','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_Active','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_VIEW'), (Select RightID from SecRights where RightName = 'button_CDManufacturersList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_CDManufacturers'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersList_NewManufacturer'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersDialogue_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersDialogue_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersDialogue_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_Name'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_Description'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_Channel'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_CDManufacturers'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_APPROVER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_APPROVER'), (Select RightID from SecRights where RightName = 'button_CDManufacturersDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_MANUFACTURERS_VIEW'),(select RoleID from secRoles where RoleCd='CD_MANUFACTURERS_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_MANUFACTURERS_MAKER'),(select RoleID from secRoles where RoleCd='CD_MANUFACTURERS_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_MANUFACTURERS_APPROVER'),(select RoleID from secRoles where RoleCd='CD_MANUFACTURERS_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="5" author="vijaya.a">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_PRODUCT_VIEW', 'Role for product enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_PRODUCT_MAKER', 'Role for product maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_PRODUCT_APPROVER', 'Role for product approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
								
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_PRODUCT_VIEW', 'Group for product enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_PRODUCT_MAKER', 'Group for product maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_PRODUCT_APPROVER', 'Group for product approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Product','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductList_PrintList','ProductList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductList_NewProduct','ProductList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductDialogue_btnNew','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductDialogue_btnEdit','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductDialogue_btnDelete','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductDialogue_btnSave','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_ModuleId','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_Description','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_Name','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_AssetDescription','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_MinimumAmount','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_MaximumAmount','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_ModelStatus','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_Channel','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductDialogue_Active','ProductDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_VIEW'), (Select RightID from SecRights where RightName = 'button_ProductList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_Product'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductList_NewProduct'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductDialogue_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductDialogue_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductDialogue_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_ModuleId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_Description'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_Name'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_AssetDescription'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_MinimumAmount'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_MaximumAmount'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_ModelStatus'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_Channel'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_MAKER'), (Select RightID from SecRights where RightName = 'ProductDialogue_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_Product'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_APPROVER'), (Select RightID from SecRights where RightName = 'button_ProductList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_PRODUCT_APPROVER'), (Select RightID from SecRights where RightName = 'button_ProductDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_PRODUCT_VIEW'),(select RoleID from secRoles where RoleCd='CD_PRODUCT_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_PRODUCT_MAKER'),(select RoleID from secRoles where RoleCd='CD_PRODUCT_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_PRODUCT_APPROVER'),(select RoleID from secRoles where RoleCd='CD_PRODUCT_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="6" author="Nageswar.p">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_MERCHANT_VIEW', 'Role for merchant enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_MERCHANT_MAKER', 'Role for merchant maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_MERCHANT_APPROVER', 'Role for merchant approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
								
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_MERCHANT_VIEW', 'Group for merchant enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_MERCHANT_MAKER', 'Group for merchant maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_MERCHANT_APPROVER', 'Group for merchant approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Merchant','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_MerchantList_PrintList','MerchantList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_MerchantList_NewProduct','MerchantList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_MerchantDialogue_btnNew','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_MerchantDialogue_btnEdit','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_MerchantDialogue_btnDelete','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_MerchantDialogue_btnSave','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_Name','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_StoreId','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_StoreName','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_AddressLine1','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_AddressLine2','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_AddressLine3','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_City','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_State','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_Pincode','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_Active','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_TransactionsPerMonth','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_AmountPerMonth','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_LimitPerTransaction','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_LimitPerDay','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_TransactionPerDay','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_RefundAllowed','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_Channel','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_VIEW'), (Select RightID from SecRights where RightName = 'button_MerchantList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_Merchant'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'button_MerchantList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'button_MerchantList_NewProduct'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'button_MerchantDialogue_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'button_MerchantDialogue_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'button_MerchantDialogue_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'button_MerchantDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_Name'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_StoreId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_StoreName'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_AddressLine1'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_AddressLine2'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_AddressLine3'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_City'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_State'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_Pincode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_TransactionsPerMonth'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_AmountPerMonth'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_LimitPerTransaction'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_LimitPerDay'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_TransactionPerDay'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_RefundAllowed'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_Channel'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_Merchant'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_APPROVER'), (Select RightID from SecRights where RightName = 'button_MerchantList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_APPROVER'), (Select RightID from SecRights where RightName = 'button_MerchantDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_MERCHANT_VIEW'),(select RoleID from secRoles where RoleCd='CD_MERCHANT_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_MERCHANT_MAKER'),(select RoleID from secRoles where RoleCd='CD_MERCHANT_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_MERCHANT_APPROVER'),(select RoleID from secRoles where RoleCd='CD_MERCHANT_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="6.1" author="Nageswar.p">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'DEALERMAPPING_VIEW', 'Role for DealerMapping enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'DEALERMAPPING_MAKER', 'Role for DealerMapping maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'DEALERMAPPING_APPROVER', 'Role for DealerMapping approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
							
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'DEALERMAPPING_VIEW', 'Group for DealerMapping enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'DEALERMAPPING_MAKER', 'Group for DealerMapping maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'DEALERMAPPING_APPROVER', 'Group for DealerMapping approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_DealerMapping','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingList_PrintList','DealerMappingList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingList_NewProduct','DealerMappingList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingDialog_btnNew','DealerMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingDialog_btnEdit','DealerMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingDialog_btnDelete','DealerMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingDialog_btnSave','DealerMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'DealerMappingDialog_MerchantName','DealerMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'DealerMappingDialog_StoreName','DealerMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'DealerMappingDialog_Active','DealerMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_VIEW'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_DealerMapping'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_NewProduct'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingDialog_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingDialog_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingDialog_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'DealerMappingDialog_MerchantName'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'DealerMappingDialog_StoreName'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'DealerMappingDialog_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_DealerMapping'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'button_DealerMappingDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='DEALERMAPPING_VIEW'),(select RoleID from secRoles where RoleCd='DEALERMAPPING_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='DEALERMAPPING_MAKER'),(select RoleID from secRoles where RoleCd='DEALERMAPPING_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='DEALERMAPPING_APPROVER'),(select RoleID from secRoles where RoleCd='DEALERMAPPING_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="7" author="Nageswar.p" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQCD_DEALERMAPPING" />
	</changeSet>

	<changeSet id="7.1" author="Nageswar.p" dbms="mssql">
		<createTable tableName="SEQCD_DEALERMAPPING">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="7.2" author="Nageswar.p">
		<createTable tableName="CD_DealerMapping">
			<column name="DealerMapId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_DEALERMAP_ID" />
			</column>
			<column name="MerchantId" type="int">
			</column>
			<column name="StoreId" type="int">
			</column>
			<column name="DealerCode" type="int">
			</column>
			<column name="Active" type="boolean" />
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="7.3" author="Nageswar.p">
		<createTable tableName="CD_DealerMapping_Temp">
			<column name="DealerMapId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_DEALERMAP_T_ID" />
			</column>
			<column name="MerchantId" type="int">
			</column>
			<column name="StoreId" type="int">
			</column>
			<column name="DealerCode" type="int">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="7.4" author="Nageswar.p">
		<createView viewName="CD_DealerMapping_VIEW" replaceIfExists="true">
			  SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			   FROM CD_DealerMapping_Temp t1
			UNION ALL
 			SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,    
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping t1
  			WHERE NOT (EXISTS (SELECT 1
            FROM CD_DealerMapping_Temp 
            WHERE CD_DealerMapping_Temp.dealerMapId = t1.dealerMapId))
		</createView>
	</changeSet>

	<changeSet id="7.5" author="Nageswar.p">
		<createView viewName="CD_DealerMapping_AVIEW" replaceIfExists="true">
			  SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,   
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping t1
		</createView>
	</changeSet>

	<changeSet id="7.6" author="Nageswar.p">
		<createView viewName="CD_DealerMapping_TVIEW" replaceIfExists="true">
			  SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping_Temp t1
		</createView>
	</changeSet>

	<changeSet id="7.7" author="Nageswar.p">
		<sql>
		<![CDATA[
		INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingList_DealerMappingSearchDialog','DealerMappingList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
		INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerMappingList_NewDealerMapping','DealerMappingList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
		
		INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_VIEW'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_DealerMappingSearchDialog'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
		INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_DealerMappingSearchDialog'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
		INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_DealerMappingSearchDialog'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
		INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerMappingList_NewDealerMapping'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);	
		]]>
		</sql>
	</changeSet>

	<changeSet id="8" author="Shahbaj.b" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQCD_DEALERGROUP" />
	</changeSet>

	<changeSet id="8.1" author="Shahbaj.b" dbms="oracle">
		<createTable tableName="SEQCD_DEALERGROUP">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="8.2" author="Shahbaj.b">
		<createTable tableName="CD_DealerGroup">
			<column name="DealerGroupId" type="int">
				<constraints nullable="false" />
			</column>
			<column name="DealerCode" type="varchar(8)">
			</column>
			<column name="DealerCategoryId" type="int">
			</column>
			<column name="Channel" type="varchar(8)">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="8.3" author="Shahbaj.b">
		<createTable tableName="CD_DealerGroup_Temp">
			<column name="DealerGroupId" type="int">
				<constraints nullable="false" />
			</column>
			<column name="DealerCode" type="varchar(8)">
			</column>
			<column name="DealerCategoryId" type="int">
			</column>
			<column name="Channel" type="varchar(8)">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="8.4" author="Shahbaj.b">
		<createView viewName="CD_DealerGroup_VIEW" replaceIfExists="true">
			  SELECT t1.dealerGroupId,
    			t1.dealercode,
   				t1.dealercategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerGroup_Temp t1
			UNION ALL
 			SELECT t1.dealerGroupId,
    			t1.dealercode,
   				t1.dealercategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerGroup t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_DealerGroup_Temp
            WHERE CD_DealerGroup_Temp.dealerGroupId = t1.dealerGroupId))
		</createView>
	</changeSet>

	<changeSet id="8.5" author="Shahbaj.b">
		<createView viewName="CD_DealerGroup_AVIEW" replaceIfExists="true">
			  SELECT t1.dealerGroupId,
    			t1.dealercode,
   				t1.dealercategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerGroup t1
		</createView>
	</changeSet>

	<changeSet id="8.6" author="Shahbaj.b">
		<createView viewName="CD_DealerGroup_TVIEW" replaceIfExists="true">
			 SELECT t1.dealerGroupId,
    			t1.dealercode,
   				t1.dealercategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerGroup_Temp t1
		</createView>
	</changeSet>

	<changeSet id="8.7" author="Shahbaj.b">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'DEALERGROUP_VIEW', 'Role for Dealer Group enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'DEALERGROUP_MAKER', 'Role for Dealer Group maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'DEALERGROUP_APPROVER', 'Role for Dealer Group approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
							
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'DEALERGROUP_VIEW', 'Group for Dealer Group enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'DEALERGROUP_MAKER', 'Group for Dealer Group maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'DEALERGROUP_APPROVER', 'Group for Dealer Group approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_DealerGroup','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerGroupList_PrintList','DealerGroupList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerGroupList_NewDealerGroup','DealerGroupList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerGroupDialog_btnNew','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerGroupDialog_btnEdit','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerGroupDialog_btnDelete','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_DealerGroupDialog_btnSave','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'DealerGroupDialog_DealerCode','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'DealerGroupDialog_DealerCategoryId','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'DealerGroupDialog_Channel','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'DealerGroupDialog_Active','DealerGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_VIEW'), (Select RightID from SecRights where RightName = 'button_DealerGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_DealerGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerGroupList_NewDealerGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerGroupDialog_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerGroupDialog_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerGroupDialog_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_DealerGroupDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'DealerGroupDialog_DealerCode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'DealerGroupDialog_DealerCategoryId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'DealerGroupDialog_Channel'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'DealerGroupDialog_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_DealerGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_DealerGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'DEALERGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_DealerGroupDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='DEALERGROUP_VIEW'),(select RoleID from secRoles where RoleCd='DEALERGROUP_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='DEALERGROUP_MAKER'),(select RoleID from secRoles where RoleCd='DEALERGROUP_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='DEALERGROUP_APPROVER'),(select RoleID from secRoles where RoleCd='DEALERGROUP_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="10" author="Nageswar.p">
		<createSequence sequenceName="SEQCD_DEALERMAPPING_Code" incrementBy="1" maxValue="999999999999999"
			startValue="1" />
	</changeSet>

	<changeSet id="9" author="Shahbaj.b" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQPRODUCTGROUP" />
	</changeSet>

	<changeSet id="9.1" author="Shahbaj.b" dbms="mssql">
		<createTable tableName="SEQPRODUCTGROUP">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="9.2" author="Shahbaj.b">
		<createTable tableName="ProductGroup">
			<column name="ProductGroupId" type="int">
				<constraints nullable="false" />
			</column>
			<column name="ModelId" type="varchar(8)">
			</column>
			<column name="ProductCategoryId" type="int">
			</column>
			<column name="Channel" type="int">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="9.3" author="Shahbaj.b">
		<createTable tableName="ProductGroup_Temp">
			<column name="ProductGroupId" type="int">
				<constraints nullable="false" />
			</column>
			<column name="ModelId" type="varchar(8)">
			</column>
			<column name="ProductCategoryId" type="int">
			</column>
			<column name="Channel" type="int">
			</column>
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="9.4" author="Shahbaj.b">
		<createView viewName="ProductGroup_VIEW" replaceIfExists="true">
			 SELECT t1.productGroupId,
    			t1.modelId,
   				t1.productcategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM ProductGroup_Temp t1
			UNION ALL
 			SELECT t1.productGroupId,
    			t1.modelId,
   				t1.productcategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM ProductGroup t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM ProductGroup_Temp
            WHERE ProductGroup_Temp.productGroupId = t1.productGroupId))
		</createView>
	</changeSet>

	<changeSet id="9.5" author="Shahbaj.b">
		<createView viewName="ProductGroup_AVIEW" replaceIfExists="true">
			  SELECT t1.productGroupId,
    			t1.modelId,
   				t1.productcategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM ProductGroup t1
		</createView>
	</changeSet>

	<changeSet id="9.6" author="Shahbaj.b">
		<createView viewName="ProductGroup_TVIEW" replaceIfExists="true">
			 SELECT t1.productGroupId,
    			t1.modelId,
   				t1.productcategoryid,
    			t1.channel,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM ProductGroup_Temp t1
		</createView>
	</changeSet>

	<changeSet id="9.7" author="Shahbaj.b">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'PRODUCTGROUP_VIEW', 'Role for Product Group enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'PRODUCTGROUP_MAKER', 'Role for Product Group maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'PRODUCTGROUP_APPROVER', 'Role for Product Group approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
							
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PRODUCTGROUP_VIEW', 'Group for Product Group enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PRODUCTGROUP_MAKER', 'Group for Product Group maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PRODUCTGROUP_APPROVER', 'Group for Product Group approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menu_Item_ProductGroup','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductGroupList_PrintList','ProductGroupList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductGroupList_NewProductGroup','ProductGroupList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductGroupDialog_btnNew','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductGroupDialog_btnEdit','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductGroupDialog_btnDelete','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_ProductGroupDialog_btnSave','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductGroupDialog_ModelCode','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductGroupDialog_ProductCategoryId','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductGroupDialog_Channel','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'ProductGroupDialog_Active','ProductGroupDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_VIEW'), (Select RightID from SecRights where RightName = 'button_ProductGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'menu_Item_ProductGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductGroupList_NewProductGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductGroupDialog_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductGroupDialog_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductGroupDialog_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_ProductGroupDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'ProductGroupDialog_ModelCode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'ProductGroupDialog_ProductCategoryId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'ProductGroupDialog_Channel'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'ProductGroupDialog_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'menu_Item_ProductGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_ProductGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PRODUCTGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_ProductGroupDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='PRODUCTGROUP_VIEW'),(select RoleID from secRoles where RoleCd='PRODUCTGROUP_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='PRODUCTGROUP_MAKER'),(select RoleID from secRoles where RoleCd='PRODUCTGROUP_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='PRODUCTGROUP_APPROVER'),(select RoleID from secRoles where RoleCd='PRODUCTGROUP_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="10" author="vijaya.a" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQCD_Scheme_DealerGroup" />
	</changeSet>

	<changeSet id="10.1" author="vijaya.a" dbms="mssql">
		<createTable tableName="SEQCD_Scheme_DealerGroup">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="10.2" author="vijaya.a">
		<createTable tableName="CD_Scheme_DealerGroup">
			<column name="SchemeDealerGroupId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_SchemeDealerGroupId_ID" />
			</column>
			<column name="PromotionId" type="varchar(20)">
			</column>
			<column name="DealerGroupCode" type="int">
			</column>
			<column name="Active" type="bit">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="10.3" author="vijaya.a">
		<createTable tableName="CD_Scheme_DealerGroup_Temp">
			<column name="SchemeDealerGroupId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_SchemeDlrGrpId_TEMP_ID" />
			</column>
			<column name="PromotionId" type="varchar(20)">
			</column>
			<column name="DealerGroupCode" type="int">
			</column>
			<column name="Active" type="bit">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="10.3_post" author="vijaya.a">
		<addUniqueConstraint tableName="CD_SCHEME_DEALERGROUP_TEMP" columnNames="DealerGroupCode"
			constraintName="UK_CDSCHM_DLRGRP_TEMP_CODE" />
		<addUniqueConstraint tableName="CD_SCHEME_DEALERGROUP" columnNames="DealerGroupCode"
			constraintName="UK_CD_SCHEME_DEALERGROUP_CODE" />
	</changeSet>

	<changeSet id="10.4" author="vijaya.a">
		<createView viewName="CD_Scheme_DealerGroup_VIEW" replaceIfExists="true">
			SELECT t1.schemeDealerGroupId, 
				t1.promotionId,
				t1.dealerGroupCode,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_DealerGroup_Temp t1
			UNION ALL
 			SELECT t1.schemeDealerGroupId, 
				t1.promotionId,
    			t1.dealerGroupCode,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_DealerGroup t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_Scheme_DealerGroup_Temp
            WHERE CD_Scheme_DealerGroup_Temp.promotionId = t1.promotionId))
		</createView>
	</changeSet>

	<changeSet id="10.5" author="vijaya.a">
		<createView viewName="CD_Scheme_DealerGroup_AVIEW" replaceIfExists="true">
			SELECT t1.schemeDealerGroupId, 
				t1.promotionId,
    			t1.dealerGroupCode,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_DealerGroup t1
		</createView>
	</changeSet>

	<changeSet id="10.6" author="vijaya.a">
		<createView viewName="CD_Scheme_DealerGroup_TVIEW" replaceIfExists="true">
			  SELECT t1.schemeDealerGroupId, 
				t1.promotionId,
    			t1.dealerGroupCode,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_DealerGroup_Temp t1
		</createView>
	</changeSet>

	<changeSet id="10.7" author="vijaya.a">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_SCHEME_DEALERGROUP_VIEW', 'Role for scheme dealer group enquiry', NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_SCHEME_DEALERGROUP_MAKER', 'Role for scheme dealer group maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_SCHEME_DEALERGROUP_APPROVER', 'Role for scheme dealer group approver', NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0) ;
								
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_DEALERGROUP_VIEW', 'Group for manufacturer enquiry', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_DEALERGROUP_MAKER', 'Group for manufacturer maker', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_DEALERGROUP_APPROVER', 'Group for manufacturer approver', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_CDSchemeDealerGroup','MENU', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeDealerGroupList_PrintList','CDSchemeDealerGroupList', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeDealerGroupList_NewSchemeDealerGroup','CDSchemeDealerGroupList', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeDealerGroupDialogue_btnNew','CDSchemeDealerGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeDealerGroupDialogue_btnEdit','CDSchemeDealerGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeDealerGroupDialogue_btnDelete','CDSchemeDealerGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeDealerGroupDialogue_btnSave','CDSchemeDealerGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDSchemeDealerGroupDialogue_SchemeId', 'CDSchemeDealerGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDSchemeDealerGroupDialogue_DealerGroupCode','CDSchemeDealerGroupDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDSchemeDealerGroupDialogue_Active','CDSchemeDealerGroupDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_VIEW'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_CDSchemeDealerGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupList_NewSchemeDealerGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'CDSchemeDealerGroupDialogue_SchemeId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'CDSchemeDealerGroupDialogue_DealerGroupCode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'CDSchemeDealerGroupDialogue_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupDialogue_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupDialogue_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupDialogue_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_CDSchemeDealerGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_DEALERGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_CDSchemeDealerGroupDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_SCHEME_DEALERGROUP_VIEW'),(select RoleID from secRoles where RoleCd='CD_SCHEME_DEALERGROUP_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_SCHEME_DEALERGROUP_MAKER'),(select RoleID from secRoles where RoleCd='CD_SCHEME_DEALERGROUP_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_SCHEME_DEALERGROUP_APPROVER'),(select RoleID from secRoles where RoleCd='CD_SCHEME_DEALERGROUP_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="10.1" author="Nageswar.p">
		<createView viewName="CD_DealerMapping_VIEW" replaceIfExists="true">
 			SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,
          		t2.merchantName,
          		t2.storeName As storeName,
          		t2.storeCity As storeCity,
          		t2.STOREADDRESSLINE1 As storeAddress,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping_Temp t1 
         	left outer  Join Cd_Merchants t2 on t1.storeId = t2.storeId
			UNION ALL
 			SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,  
          		t2.merchantName,
          		t2.storeName As storeName,
          		t2.storeCity As storeCity,
          		t2.STOREADDRESSLINE1 As storeAddress,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping t1 
        	left outer Join Cd_Merchants t2 on  t1.storeId = t2.storeId
  			WHERE NOT (EXISTS (SELECT 1
            FROM CD_DealerMapping_Temp  
            WHERE CD_DealerMapping_Temp.dealerMapId = t1.dealerMapId))
		</createView>
	</changeSet>

	<changeSet id="11" author="vijaya.a" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQCD_Scheme_ProductGroup" />
	</changeSet>

	<changeSet id="11.1" author="vijaya.a" dbms="mssql">
		<createTable tableName="SEQCD_Scheme_ProductGroup">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="11.2" author="vijaya.a">
		<createTable tableName="CD_Scheme_ProductGroup">
			<column name="SchemeProductGroupId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_SCHM_PRODUCTGROUPID_ID" />
			</column>
			<column name="PromotionId" type="varchar(20)">
			</column>
			<column name="ProductGroupCode" type="int">
			</column>
			<column name="POSVendor" type="bit">
			</column>
			<column name="Active" type="bit">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="11.3" author="vijaya.a">
		<createTable tableName="CD_Scheme_ProductGroup_Temp">
			<column name="SchemeProductGroupId" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_CD_SCHM_PRDCTGRPID_Temp_ID" />
			</column>
			<column name="PromotionId" type="varchar(20)">
			</column>
			<column name="ProductGroupCode" type="int">
			</column>
			<column name="POSVendor" type="bit">
			</column>
			<column name="Active" type="bit">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="11.3_post" author="vijaya.a">
		<addUniqueConstraint tableName="CD_SCHEME_PRODUCTGROUP_TEMP" columnNames="ProductGroupCode"
			constraintName="UK_CDSCHM_PRDCTGRP_TEMP_CODE" />
		<addUniqueConstraint tableName="CD_SCHEME_PRODUCTGROUP" columnNames="ProductGroupCode"
			constraintName="UK_CD_SCHEME_PRDCTGRP_CODE" />
	</changeSet>


	<changeSet id="11.4" author="vijaya.a">
		<createView viewName="CD_Scheme_ProductGroup_VIEW" replaceIfExists="true">
			SELECT t1.schemeProductGroupId,
				t1.promotionId,
    			t1.productGroupCode,
    			t1.pOSVendor,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_ProductGroup_Temp t1
			UNION ALL
 			SELECT t1.schemeProductGroupId,
				t1.promotionId,
    			t1.productGroupCode,
    			t1.pOSVendor,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_ProductGroup t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_Scheme_ProductGroup_Temp
            WHERE CD_Scheme_ProductGroup_Temp.schemeProductGroupId = t1.schemeProductGroupId))
		</createView>
	</changeSet>

	<changeSet id="11.5" author="vijaya.a">
		<createView viewName="CD_Scheme_ProductGroup_AVIEW" replaceIfExists="true">
			SELECT t1.schemeProductGroupId,
				t1.promotionId,
    			t1.productGroupCode,
    			t1.pOSVendor,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_ProductGroup t1
		</createView>
	</changeSet>

	<changeSet id="11.6" author="vijaya.a">
		<createView viewName="CD_Scheme_ProductGroup_TVIEW" replaceIfExists="true">
			  SELECT t1.schemeProductGroupId,
				t1.promotionId,
    			t1.productGroupCode,
    			t1.pOSVendor,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_ProductGroup_Temp t1
		</createView>
	</changeSet>

	<changeSet id="11.7" author="vijaya.a">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_SCHEME_PRODUCTGROUP_VIEW', 'Role for scheme product group enquiry', NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_SCHEME_PRODUCTGROUP_MAKER', 'Role for scheme product group maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'CD_SCHEME_PRODUCTGROUP_APPROVER', 'Role for scheme product group approver', NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0) ;
								
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_PRODUCTGROUP_VIEW', 'Group for scheme product group enquiry', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_PRODUCTGROUP_MAKER', 'Group for scheme product group maker', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_PRODUCTGROUP_APPROVER', 'Group for scheme product group approver', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_CDSchemeProductGroup','MENU', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeProductGroupList_PrintList','CDSchemeProductGroupList', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeProductGroupList_NewSchemeProductGroup','CDSchemeProductGroupList', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeProductGroupDialogue_btnNew','CDSchemeProductGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeProductGroupDialogue_btnEdit','CDSchemeProductGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeProductGroupDialogue_btnDelete','CDSchemeProductGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CDSchemeProductGroupDialogue_btnSave','CDSchemeProductGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDSchemeProductGroupDialogue_SchemeId', 'CDSchemeProductGroupDialogue', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDSchemeProductGroupDialogue_ProductGroupCode','CDSchemeProductGroupDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDSchemeProductGroupDialogue_POSVendor','CDSchemeProductGroupDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDSchemeProductGroupDialogue_Active','CDSchemeProductGroupDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_VIEW'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_CDSchemeProductGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupList_NewSchemeProductGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'CDSchemeProductGroupDialogue_SchemeId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'CDSchemeProductGroupDialogue_ProductGroupCode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'CDSchemeProductGroupDialogue_POSVendor'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'CDSchemeProductGroupDialogue_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupDialogue_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupDialogue_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupDialogue_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_MAKER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_CDSchemeProductGroup'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_PRODUCTGROUP_APPROVER'), (Select RightID from SecRights where RightName = 'button_CDSchemeProductGroupDialogue_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_SCHEME_PRODUCTGROUP_VIEW'),(select RoleID from secRoles where RoleCd='CD_SCHEME_PRODUCTGROUP_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_SCHEME_PRODUCTGROUP_MAKER'),(select RoleID from secRoles where RoleCd='CD_SCHEME_PRODUCTGROUP_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='CD_SCHEME_PRODUCTGROUP_APPROVER'),(select RoleID from secRoles where RoleCd='CD_SCHEME_PRODUCTGROUP_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="11" author="Nageswar.p" dbms="postgresql, oracle">
		<createSequence sequenceName="SEQTRANSACTIONMAPPING" />
	</changeSet>

	<changeSet id="11.1" author="Nageswar.p" dbms="mssql">
		<createTable tableName="SEQTRANSACTIONMAPPING">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="11.2.1" author="Nageswar.p">
		<createTable tableName="TransactionMapping">
			<column name="Id" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="TransactionMapping_PK_ID" />
			</column>
			<column name="POSId" type="int">
				<constraints nullable="false" />
			</column>
			<column name="DealerCode" type="int">
				<constraints nullable="false" />
			</column>
			<column name="DealerName" type="varchar2(100)">
			</column>
			<column name="MID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="TID" type="number(6)" />
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="11.3.1" author="Nageswar.p">
		<createTable tableName="TransactionMapping_Temp">
			<column name="Id" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="TransactionMapping_Temp_PK_ID" />
			</column>
			<column name="POSId" type="int">
				<constraints nullable="false" />
			</column>
			<column name="DealerCode" type="int">
				<constraints nullable="false" />
			</column>
			<column name="DealerName" type="varchar2(100)">
			</column>
			<column name="MID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="TID" type="number(6)" />
			<column name="Active" type="boolean">
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="11.4" author="Nageswar.p">
		<createView viewName="TransactionMapping_VIEW" replaceIfExists="true">
			 SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping_Temp t1
			UNION ALL
 			SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM TransactionMapping_Temp
            WHERE TransactionMapping_Temp.Id = t1.Id))
		</createView>
	</changeSet>

	<changeSet id="11.5" author="Nageswar.b">
		<createView viewName="TransactionMapping_AVIEW" replaceIfExists="true">
			  SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping t1
		</createView>
	</changeSet>

	<changeSet id="11.6" author="Nageswar.p">
		<createView viewName="TransactionMapping_TVIEW" replaceIfExists="true">
			 SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping_Temp t1
		</createView>
	</changeSet>
	<changeSet id="11.7" author="Nageswar.p">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'TRANSACTIONMAPPING_VIEW', 'Role for Transaction Mapping enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'TRANSACTIONMAPPING_MAKER', 'Role for Transaction Mapping maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'TRANSACTIONMAPPING_APPROVER', 'Role for Transaction Mapping approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
							
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'TRANSACTIONMAPPING_VIEW', 'Group for Transaction Mapping enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'TRANSACTIONMAPPING_MAKER', 'Group for Transaction Mapping maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'TRANSACTIONMAPPING_APPROVER', 'Group for Transaction Mapping approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menu_Item_TransactionMapping','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_TransactionMappingList_PrintList','TransactionMappingList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_TransactionMappingList_NewTransactionMapping','TransactionMappingList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_TransactionMappingDialog_btnNew','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_TransactionMappingDialog_btnEdit','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_TransactionMappingDialog_btnDelete','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_TransactionMappingDialog_btnSave','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMapping_DealerCode','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_POSId','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_DealerName','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_MID','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_TID','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_Active','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_VIEW'), (Select RightID from SecRights where RightName = 'button_TransactionMappingList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'menu_Item_TransactionMapping'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingList_NewTransactionMapping'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingDialog_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingDialog_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingDialog_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMapping_DealerCode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_POSId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_DealerName'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_MID'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_TID'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'menu_Item_TransactionMapping'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'button_TransactionMappingDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='TRANSACTIONMAPPING_VIEW'),(select RoleID from secRoles where RoleCd='TRANSACTIONMAPPING_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='TRANSACTIONMAPPING_MAKER'),(select RoleID from secRoles where RoleCd='TRANSACTIONMAPPING_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='TRANSACTIONMAPPING_APPROVER'),(select RoleID from secRoles where RoleCd='TRANSACTIONMAPPING_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="11.8" author="Nageswar.p">
		<sql>
			<![CDATA[ 
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_DealerCode',
				'TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where
				 GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_DealerCode'), 
				 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="12" author="Vijaya.a">
		<sql>
			<![CDATA[ 
				alter table ProductGroup modify (channel Varchar(20));
				alter table ProductGroup_Temp modify (channel Varchar(20));
				alter table DealerGroupId modify (channel Varchar(20));
				alter table DealerGroupId_Temp modify (channel Varchar(20));
			]]>
		</sql>
	</changeSet>

	<changeSet id="13" author="vijaya.a">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='SETTLEMENT_REQUEST_UPLOAD');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='SETTLEMENT_REQUEST_UPLOAD');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='SETTLEMENT_REQUEST_UPLOAD';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'SETTLEMENT_REQUEST_UPLOAD'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'SETTLEMENT_REQUEST_UPLOAD');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'SETTLEMENT_REQUEST_UPLOAD';

				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'SETTLEMENT_REQUEST_UPLOAD', 'Settlement process upload', 12, 'SettlementProcess', NULL, NULL, NULL , 0, 0, NULL, 'SettlementRef, CustomerRef, EMIOffer, SubPayByManfacturer, SubvensionAmount, CustName, CustMobile, CustAddress, CustEmail, StoreName, StoreAddress, StoreCity, StoreState, Issuer, Category, Description, Serial, Manufacturer, TransactionAmount, Acquirer, ManufactureId, TerminalId, SettlementBatch, BankInvoice, AuthCode, HostReference, TransactionDateTime, SettlementDateTime, BillingInvoice, TransactionStatus, Reason, ProductCategory, ProductSubCategory1, ProductSubCategory2, ModelName, MaxValueOfProduct, MerchantName', '', 'A', '/opt/PFF/SettlementProcess', 'Settlement_', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD'), 'SETTLEMENT_UPLOAD',  0, 'EMIId', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'SettlementRef', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');
  				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'CustomerRef', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'EMIOffer', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'SubPayByManfacturer', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'SubvensionAmount', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'CustName', 0, 'N', NULL, NULL, NULL, NULL, 5, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'CustMobile', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'CustAddress', 0, 'N', NULL, NULL, NULL, NULL, 7, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'CustEmail', 0, 'N', NULL, NULL, NULL, NULL, 8, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'StoreName', 0, 'N', NULL, NULL, NULL, NULL, 9, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'StoreAddress', 0, 'N', NULL, NULL, NULL, NULL, 10, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'StoreCity', 0, 'N', NULL, NULL, NULL, NULL, 11, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'StoreState', 0, 'N', NULL, NULL, NULL, NULL, 12, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'Issuer', 0, 'N', NULL, NULL, NULL, NULL, 13, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'Category', 0, 'N', NULL, NULL, NULL, NULL, 14, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'Description', 0, 'N', NULL, NULL, NULL, NULL, 15, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'Serial', 0, 'N', NULL, NULL, NULL, NULL, 16, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'Manufacturer', 0, 'N', NULL, NULL, NULL, NULL, 17, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'TransactionAmount', 0, 'N', NULL, NULL, NULL, NULL, 18, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'Acquirer', 0, 'N', NULL, NULL, NULL, NULL, 19, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'ManufactureId', 0, 'N', NULL, NULL, NULL, NULL, 20, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'TerminalId', 0, 'N', NULL, NULL, NULL, NULL, 21, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'SettlementBatch', 0, 'N', NULL, NULL, NULL, NULL, 22, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'BankInvoice', 0, 'N', NULL, NULL, NULL, NULL, 23, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'AuthCode', 0, 'N', NULL, NULL, NULL, NULL, 24, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'HostReference', 0, 'N', NULL, NULL, NULL, NULL, 25, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'TransactionDateTime', 0, 'N', NULL, NULL, NULL, NULL, 26, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'SettlementDateTime', 0, 'N', NULL, NULL, NULL, NULL, 27, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'BillingInvoice', 0, 'N', NULL, NULL, NULL, NULL, 28, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'TransactionStatus', 0, 'N', NULL, NULL, NULL, NULL, 29, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'Reason', 0, 'N', NULL, NULL, NULL, NULL, 30, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'ProductCategory', 0, 'N', NULL, NULL, NULL, NULL, 31, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'ProductSubCategory1', 0, 'N', NULL, NULL, NULL, NULL, 32, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'ProductSubCategory2', 0, 'N', NULL, NULL, NULL, NULL, 33, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'ModelName', 0, 'N', NULL, NULL, NULL, NULL, 34, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'MaxValueOfProduct', 0, 'N', NULL, NULL, NULL, NULL, 35, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_UPLOAD' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_UPLOAD')), 'MerchantName', 0, 'N', NULL, NULL, NULL, NULL, 36, NULL, NULL, NULL, NULL, 'O');
				
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="14" author="vijaya.a">
		<createTable tableName="Settlement_Request">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" primaryKey="true" primaryKeyName="pk_settlement_request" />
			</column>
			<column name="RequestBatchId" type="bigint" />
			<column name="SettlementRef" type="varchar(50)">
				<constraints nullable="false" unique="true" uniqueConstraintName="uk_settlement_request_ref" />
			</column>
			<column name="CustomerRef" type="varchar(50)" />
			<column name="EMIOffer" type="varchar(50)" />
			<column name="SubPayByManfacturer" type="decimal(5, 2)" />
			<column name="SubvensionAmount" type="decimal(18, 0)" />
			<column name="CustName" type="varchar(100)" />
			<column name="CustAddress" type="varchar(100)" />
			<column name="CustMobile" type="varchar(20)" />
			<column name="CustEmail" type="varchar(50)" />
			<column name="StoreName" type="varchar(100)" />
			<column name="StoreAddress" type="varchar(100)" />
			<column name="StoreCountry" type="varchar(50)" />
			<column name="StoreState" type="varchar(50)" />
			<column name="StoreCity" type="varchar(50)" />
			<column name="Issuer" type="varchar(50)" />
			<column name="Category" type="varchar(50)" />
			<column name="Description" type="varchar(200)" />
			<column name="Serial" type="varchar(100)" />
			<column name="Manufacturer" type="varchar(50)" />
			<column name="TransactionAmount" type="decimal(18, 0)" />
			<column name="Acquirer" type="varchar(100)" />
			<column name="ManuFactureId" type="bigint" />
			<column name="TerminalId" type="varchar(20)" />
			<column name="SettlementBatch" type="varchar(50)" />
			<column name="BankInvoice" type="varchar(50)" />
			<column name="AuthCode" type="varchar(10)" />
			<column name="HostReference" type="varchar(20)" />
			<column name="TransactionDateTime" type="datetime" />
			<column name="SettlementDateTime" type="datetime" />
			<column name="BillingInvoice" type="varchar(50)" />
			<column name="TransactionStatus" type="varchar(50)" />
			<column name="Reason" type="varchar(50)" />
			<column name="ProductCategory" type="varchar2(100)" />
			<column name="ProductSubCategory1" type="varchar(100)" />
			<column name="ProductSubCategory2" type="varchar(100)" />
			<column name="ModelName" type="varchar2(50)" />
			<column name="MaxValueOfProduct" type="decimal(18,0)" />
			<column name="MerchantName" type="varchar(50)" />
		</createTable>
	</changeSet>

	<changeSet id="15" author="vijaya.a">
		<createView viewName="SETTLEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT DISTINCT(DS.ID), 
				DC.NAME, 
			  	DC.UPLOADPATH FILELOCATION, 
			  	DS.FILENAME, 
			  	DS.ENDTIME, 
			  	DS.STATUS, 
			  	DC.Id As ConfigId,
			  	DC.PostEvent,
				SR.HOSTREFERENCE, 
				SR.CUSTOMERREF, 
				SR.TRANSACTIONAMOUNT,
				SR.TRANSACTIONDATETIME, 
				SR.MERCHANTNAME, 
				SR.TERMINALID, 
				SR.MANUFACTUREID,
				SR.REQUESTBATCHID, 
				SR.ID As SettlementId
			FROM DATA_ENGINE_CONFIG DC
			INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
			INNER JOIN SETTLEMENT_REQUEST SR ON SR.REQUESTBATCHID=DS.ID
		</createView>
	</changeSet>

	<changeSet id="16" author="vijaya.a">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='SETTLEMENT_REQUEST_DOWNLOAD');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='SETTLEMENT_REQUEST_DOWNLOAD');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='SETTLEMENT_REQUEST_DOWNLOAD';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'SETTLEMENT_REQUEST_DOWNLOAD'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'SETTLEMENT_REQUEST_DOWNLOAD');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'SETTLEMENT_REQUEST_DOWNLOAD';
			
				Insert into  DATA_ENGINE_CONFIG  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_CONFIG),'SETTLEMENT_REQUEST_DOWNLOAD','Settlement Process Download',3,null,null,null,',',0,0, null, 'ROW:{HOSTREFERENCE,CUSTOMERREF,TRANSACTIONAMOUNT,TRANSACTIONDATETIME,MERCHANTNAME,TERMINALID,MANUFACTUREID}',null,'A','/opt/PFF/SettlementProcess','${SETTLEMENT_PROCESS}','.xlsx','7',to_date('28-06-19','DD-MM-RR'),'${ddmm},.${SEQ_DATE_FILE}',null,'0','MOVE_TO_S3_BUCKET,COPY_TO_SFTP',1,1);
				Insert into  DATA_ENGINE_TABLE values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_TABLE),(Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD'),'SETTLEMENT_REQUEST',0,'ID','REQUESTBATCHID IN (:REQUESTBATCHID)','',null,null,null,null,null,0,0,0);
				
				Insert into  DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_COLUMN), (Select Id FROM  DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_REQUEST' and CONFIGID = (Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD')), 'HOSTREFERENCE', 0,'N',null,'',  null,null,'0',null,null,null,null,'O');
				Insert into  DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_COLUMN), (Select Id FROM  DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_REQUEST' and CONFIGID = (Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD')),  'CUSTOMERREF', 0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into  DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_COLUMN), (Select Id FROM  DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_REQUEST' and CONFIGID = (Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD')),  'TRANSACTIONAMOUNT', 0,'N',null,'',  null,null,'0',null,null,null,null,'O');
				Insert into  DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_COLUMN), (Select Id FROM  DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_REQUEST' and CONFIGID = (Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD')), 'TRANSACTIONDATETIME', 0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into  DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_COLUMN), (Select Id FROM  DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_REQUEST' and CONFIGID = (Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD')),  'MERCHANTNAME', 0,'N',null,'',  null,null,'0',null,null,null,null,'O');
				Insert into  DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_COLUMN), (Select Id FROM  DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_REQUEST' and CONFIGID = (Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD')), 'TERMINALID', 0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into  DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM  DATA_ENGINE_COLUMN), (Select Id FROM  DATA_ENGINE_TABLE WHERE Name = 'SETTLEMENT_REQUEST' and CONFIGID = (Select Id FROM  DATA_ENGINE_CONFIG WHERE Name = 'SETTLEMENT_REQUEST_DOWNLOAD')), 'MANUFACTUREID', 0,'N',null,'',  null,null,'0',null,null,null,null,'O');
			]]>
		</sql>
	</changeSet>

	<changeSet id="17" author="vijaya.a">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SETTLEMENTPROCESS_UPLOAD_VIEW', 'Group for settlement process upload enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SETTLEMENTPROCESS_UPLOAD_MAKER', 'Group for settlement process upload maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SETTLEMENTPROCESS_UPLOAD_APPROVER', 'Group for settlement process upload approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Settlement_Process_Upload','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SETTLEMENTPROCESS_UPLOAD_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_Settlement_Process_Upload'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SETTLEMENTPROCESS_UPLOAD_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_Settlement_Process_Upload'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="18" author="vijaya.a">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SETTLEMENTPROCESS_DOWNLOAD_VIEW', 'Group for settlement process upload enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SETTLEMENTPROCESS_DOWNLOAD_MAKER', 'Group for settlement process upload maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SETTLEMENTPROCESS_DOWNLOAD_APPROVER', 'Group for settlement process upload approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Settlement_Process_Download','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SETTLEMENTPROCESS_DOWNLOAD_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_Settlement_Process_Download'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SETTLEMENTPROCESS_DOWNLOAD_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_Settlement_Process_Download'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="19" author="vijaya.a">
		<sql>
			<![CDATA[
				Update DATA_ENGINE_CONFIG set UploadLocation = 'C' Where name = 'SETTLEMENT_REQUEST_UPLOAD';
			]]>
		</sql>
	</changeSet>

	<changeSet id="20" author="vijaya.a">
		<sql>
			<![CDATA[
				Update SMTPARAMETERS set SYSPARMVALUE='Y' Where SYSPARMCODE='HOLD_DISB_INST_POST';
			]]>
		</sql>
	</changeSet>

	<changeSet id="22" author="vijaya.a">
		<sql>
			<![CDATA[
				Update DATA_ENGINE_CONFIG set SKIPHEADERROW = 1 Where Name = 'SETTLEMENT_REQUEST_UPLOAD';
			]]>
		</sql>
	</changeSet>

	<changeSet id="23" author="vijaya.a">
		<addColumn tableName="CD_Merchants_Temp">
			<column name="Pincode" type="varchar(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="24" author="vijaya.a">
		<addColumn tableName="CD_Merchants">
			<column name="Pincode" type="varchar(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="25" author="vijaya.a">
		<addColumn tableName="TransactionMapping_Temp">
			<column name="MobileNumber1" type="varchar(20)" />
		</addColumn>
		<addColumn tableName="TransactionMapping_Temp">
			<column name="MobileNumber2" type="varchar(20)" />
		</addColumn>
		<addColumn tableName="TransactionMapping_Temp">
			<column name="MobileNumber3" type="varchar(20)" />
		</addColumn>
	</changeSet>

	<changeSet id="26" author="vijaya.a">
		<addColumn tableName="TransactionMapping">
			<column name="MobileNumber1" type="varchar(20)" />
		</addColumn>
		<addColumn tableName="TransactionMapping">
			<column name="MobileNumber2" type="varchar(20)" />
		</addColumn>
		<addColumn tableName="TransactionMapping">
			<column name="MobileNumber3" type="varchar(20)" />
		</addColumn>
	</changeSet>

	<changeSet id="27" author="vijaya.a">
		<sql>
			<![CDATA[
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_POSId','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_POSId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="28" author="vijaya.a">
		<sql>
			<![CDATA[
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_MobileNumber1','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_MobileNumber1'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);

				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_MobileNumber2','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_MobileNumber2'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);

				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'TransactionMappingDialog_MobileNumber3','TransactionMappingDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'TRANSACTIONMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'TransactionMappingDialog_MobileNumber3'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="29" author="vijaya.a">
		<createView viewName="TransactionMapping_VIEW" replaceIfExists="true">
			 SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.MobileNumber1,
    			t1.MobileNumber2,
    			t1.MobileNumber3,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping_Temp t1
			UNION ALL
 			SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.MobileNumber1,
    			t1.MobileNumber2,
    			t1.MobileNumber3,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM TransactionMapping_Temp
            WHERE TransactionMapping_Temp.Id = t1.Id))
		</createView>
	</changeSet>

	<changeSet id="30" author="vijaya.a">
		<createView viewName="TransactionMapping_AVIEW" replaceIfExists="true">
			  SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.MobileNumber1,
    			t1.MobileNumber2,
    			t1.MobileNumber3,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping t1
		</createView>
	</changeSet>

	<changeSet id="31" author="vijaya.a">
		<createView viewName="TransactionMapping_TVIEW" replaceIfExists="true">
			 SELECT t1.Id,
    			t1.POSId,
   				t1.DealerCode,
    			t1.DealerName,
    			t1.MID,
    			t1.TID,
    			t1.MobileNumber1,
    			t1.MobileNumber2,
    			t1.MobileNumber3,
    			t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM TransactionMapping_Temp t1
		</createView>
	</changeSet>

	<changeSet id="32" author="vijaya.a">
		<createView viewName="CD_Merchants_VIEW" replaceIfExists="true">
			  SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
         		t1.storeCountry,
         		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.Pincode,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants_Temp t1
			UNION ALL
 			SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
    			t1.storeCountry,
         		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.Pincode,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_Merchants_Temp
            WHERE CD_Merchants_Temp.merchantId = t1.merchantId))
		</createView>
	</changeSet>

	<changeSet id="33" author="vijaya.a">
		<createView viewName="CD_Merchants_AVIEW" replaceIfExists="true">
			  SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
    			t1.storeCountry,
         		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.Pincode,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants t1
		</createView>
	</changeSet>

	<changeSet id="34" author="vijaya.a">
		<createView viewName="CD_Merchants_TVIEW" replaceIfExists="true">
			  SELECT t1.merchantId,
    			t1.merchantName,
   				t1.storeId,
    			t1.storeName,     
    			t1.storeAddressLine1,
    			t1.storeAddressLine2,
    			t1.storeAddressLine3,
    			t1.storeCity,
    			t1.storeState,
    			t1.storeCountry,
          		t1.cityName,
          		t1.stateName,
          		t1.countryName,
    			t1.pOSID,
    			t1.avgTranPerMnth,
    			t1.avgTranAmtPerMnth,
    			t1.tranAmtPerTran,
    			t1.tranAmtPerDay,
    			t1.allowRefund,
    			t1.peakTransPerDay,
    			t1.channel,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Merchants_Temp t1
		</createView>
	</changeSet>

	<changeSet id="35" author="Pruthvi" dbms="oracle">
		<sql>
		<![CDATA[
		INSERT INTO rmtaccountingset  VALUES (1124, 'AMZ', 'MMFLAMZ', 'MMFL Accrual', 0, 0, 2, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0,'','','');
		INSERT INTO rmtaccountingset  VALUES (1121, 'ADDDBSP', 'MMFLDBSP', 'MMFL Loan Booking', 0, 0, 8, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0,'','','');
		INSERT INTO rmtaccountingset  VALUES (1125, 'REPAY', 'MMFLRPY', 'MMFL Repayment', 0, 0, 3, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0,'','','');
		]]>
		</sql>
	</changeSet>

	<changeSet id="36" author="Pruthvi" dbms="oracle">
		<sql>
		<![CDATA[
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLAMZ'), 10, 'Interest Accrual A/c.', 'D', 0, 'INTRE', '', '', 'GLCREATE', '010', '510', 'Result=ae_dAmz;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLAMZ'), 20, 'Interest Income', 'C', 0, 'INTIN', '', '', 'GLCREATE', '510', '010', 'Result=ae_dAmz;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLAMZ'), 30, 'Gap Interest Receivable', 'D', 0, 'GAPINTRE', '', 'BUILD', 'GLCODE', '010', '510', 'Result=ae_dGapAmz;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLAMZ'), 40, 'Gap Interest Income', 'C', 0, 'GAPINTIN', '', 'BUILD', 'GLCODE', '510', '010', 'Result=ae_dGapAmz;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 10, 'Loan & Advances', 'D', 0, 'LOAN', '', 'BUILD', 'GLCODE', '010', '510', 'Result=ae_disburse;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 20, 'Net Disbursement to Settlement', 'C', 0, 'SUDISB', '', 'BUILD', 'GLCODE', '510', '010', 'Result=ae_disburse-MMFLDBD_N - MMFLPROC_N; ', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 30, 'Processing Fee Excluding GST', 'C', 0, 'PROIN', '', 'BUILD', 'GLCODE', '510', '010', 'Result=MMFLPROC_N - MMFLPROC_CGST_N - MMFLPROC_SGST_N - MMFLPROC_UGST_N - MMFLPROC_IGST_N;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 40, 'DBD Excluding GST', 'C', 0, 'DBDIN', '', 'BUILD', 'GLCODE', '510', '010', 'Result=MMFLDBD_N - MMFLDBD_CGST_N - MMFLDBD_SGST_N - MMFLDBD_UGST_N- MMFLDBD_IGST_N;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 50, 'Net CGST', 'C', 0, 'CGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=MMFLDBD_CGST_N + MMFLPROC_CGST_N;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 60, 'Net SGST', 'C', 0, 'SGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=MMFLDBD_SGST_N + MMFLPROC_SGST_N;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 70, 'Net UGST', 'C', 0, 'UGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=MMFLDBD_UGST_N + MMFLPROC_UGST_N;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 80, 'Net IGST', 'C', 0, 'IGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=MMFLDBD_IGST_N + MMFLPROC_IGST_N;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 90, 'Downpayment', 'D', 0, 'SUDISB', '', 'BUILD', 'GLCODE', '010', '510', 'Result=ae_downpay;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 100, 'Downpayment', 'C', 0, 'LOAN', '', 'BUILD', 'GLCODE', '510', '010', 'Result=ae_downpay;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 110, 'Subvention Receivable', 'D', 0, 'SVRCVBL', '', 'BUILD', 'GLCODE', '010', '510', 'Result=ae_svAmount;', NULL, '', 'D', 0, 0, 3, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLDBSP'), 120, 'Subvention Income', 'C', 0, 'SVIN', '', 'BUILD', 'GLCODE', '510', '010', 'Result=ae_svAmount;', NULL, '', 'D', 0, 0, 3, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 1, 'Bank/Cash', 'D', 0, 'BANK', '', 'BUILD', 'GLCREATE', '010', '510', 'Result=PB_ReceiptAmount;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 3, 'Excess & Control A/c', 'D', 0, 'XCESS', '', 'BUILD', 'GLCREATE', '010', '510', 'Result=EX_ReceiptAmount;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 5, 'Advance from customer', 'D', 0, 'ADVCUST', '', 'BUILD', 'GLCREATE', '010', '510', 'Result=EA_ReceiptAmount;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 8, 'EMI Receivable A/c', 'C', 0, 'EMIRE', '', 'BUILD', 'GLCREATE', '510', '010', 'Result=ae_rpTot;', NULL, '', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 12, 'Advance from customer', 'C', 0, 'EMIRE', '', 'BUILD', 'GLCREATE', '510', '010', 'Result=ae_toEmiAdvance;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 14, 'Excess & Control A/c', 'C', 0, 'XCESS', '', 'BUILD', 'GLCREATE', '510', '010', 'Result=ae_toExcessAmt;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 16, 'LPP Charge', 'C', 0, 'LPPIN', '', 'BUILD', 'GLCREATE', '510', '010', 'Result=ae_lppPaid;', NULL, '', NULL, 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, NULL, 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 20, 'Bounce Charge Income', 'C', 0, 'BOUIN', '', 'BUILD', 'GLCODE', '510', '010', 'Result=bounceChargePaid-bounceCharge_CGST_P-bounceCharge_SGST_P-bounceCharge_IGST_P-bounceCharge_UGST_P;', NULL, 'bounceCharge', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 21, 'CGST On Bounce Charge', 'C', 0, 'CGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=bounceCharge_CGST_P;', NULL, 'bounceCharge', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 22, 'SGST On Bounce Charge', 'C', 0, 'SGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=bounceCharge_SGST_P;', NULL, 'bounceCharge', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 23, 'UGST on Bounce Charges', 'C', 0, 'UGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=bounceCharge_UGST_P;', NULL, 'bounceCharge', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
		INSERT INTO rmttransactionentry (accountsetid, transorder, transdesc, debitcredit, shadowposting, accounttype, accountbranch, account, accountsubheadrule, transcationcode, rvstransactioncode, amountrule, ruledecider, feecode, chargetype, entrybyinvestment, opennewfinac, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, posttosys, derivedtranorder) VALUES ((select accountsetid from rmtaccountingset where accountsetcode='MMFLRPY'), 24, 'IGST on Bounce Charges', 'C', 0, 'IGST', '', 'BUILD', 'GLCODE', '510', '010', 'Result=bounceCharge_IGST_P;', NULL, 'bounceCharge', 'D', 0, 0, 1, 0, current_timestamp, 'Approved', '', '', '', '', '', 0, 'E', 0);
	]]>
		</sql>
	</changeSet>

	<changeSet id="37" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				create table offlineusrmessagesbackup_1 as 
				select * from offlineusrmessagesbackup;
			]]>
		</sql>
	</changeSet>

	<changeSet id="38" author="naga.g" dbms="oracle">
		<dropTable tableName="offlineusrmessagesbackup" />
	</changeSet>

	<changeSet id="39" author="naga.g" dbms="oracle">
		<createTable tableName="offlineusrmessagesbackup">
			<column name="id" type="NUMBER(10,0)" autoIncrement="true">
				<constraints nullable="false" primaryKey="true" primaryKeyName="offlineusrmessagesbackup_pkey" />
			</column>
			<column name="tousrid" type="VARCHAR2(15)">
				<constraints nullable="false" />
			</column>
			<column name="fromusrid" type="VARCHAR2(15)">
				<constraints nullable="false" />
			</column>
			<column name="sendtime" type="datetime " />
			<column name="message" type="VARCHAR2(2000)">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="40" author="naga.g" dbms="oracle">
		<createIndex tableName="OFFLINEUSRMESSAGESBACKUP" indexName="IX_OLUMB_TOUSRID">
			<column name="TOUSRID" type="varchar(50)" />
		</createIndex>
	</changeSet>

	<changeSet id="44" author="naga.g" dbms="oracle">
		<createView viewName="SCHEMEMASTER_VIEW" replaceIfExists="true">
		    select pm.promotioncode,pm.promotiondesc,pm.TENOR,CONCAT(to_char(pm.ACTUALINTERESTRATE,'99.99'), '%') ACTUALINTERESTRATE ,pm.ADVEMITERMS,pm.STARTDATE,pm.enddate,
            pm.FINMINAMOUNT/100 FINMINAMOUNT,pm.FINMAXAMOUNT/100 FINMAXAMOUNT ,pm.remarks,pm.ACTIVE,pm.SPECIALSCHEME,CASE  when fp1.Amount>0 then fp1.Amount/100 Else fp1.percentage  END ProseeFee, 
            CASE  when fp2.Amount>0 then fp2.Amount Else  fp2.percentage END DBDFEE ,pm.LASTMNTON
            from promotions pm 
            left join fintypefees_aview fp1 on pm.promotionCode = fp1.finType and fp1.moduleid=2 and fp1.FeeTypeID = 134 
            left join fintypefees_aview fp2 on pm.promotionCode = fp2.finType and fp2.moduleid=2 and fp2.FeeTypeID = 133;
		</createView>
	</changeSet>
	<changeSet id="45.0" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
			    update  DATA_ENGINE_TABLE set FILTER='LASTMNTON > :LAST_MNT_ON' where name in ('CD_SCHEME_DEALERGROUP','CD_SCHEME_PRODUCTGROUP','SCHEMEMASTER_VIEW')
			]]>
		</sql>
	</changeSet>

	<changeSet id="46" author="vijaya.a">
		<sql>
			<![CDATA[
					Insert into REPORTCONFIGURATION values ((select max(reportid)+1 from reportconfiguration),'Excel:IND AS Report','IND AS Report',1,'IndASReport','dataSource',1,'menu_Item_IndASReport',1,1000,null,null,null,null,null,null,0,current_timestamp,0,0,1);
					Insert into REPORTFILTERFIELDS  values ((select reportid from reportconfiguration where menuitemcode='menu_Item_IndASReport'),1,'Entity','LOVSEARCH','Entity','sd.ENTITYCODE',null,'ENTITY','getEntityCode','getEntityDesc',0,0,0,0,1,1,null,null,null,null,150,0,'=',4,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
					Insert into REPORTFILTERFIELDS  values ((select reportid from reportconfiguration where menuitemcode='menu_Item_IndASReport'),2,'FinReference','LOVSEARCH','Loan Reference','ir.finreference',null,'FinanceMain','getFinReference','getFinReference',1,0,0,0,2,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
					Insert into REPORTFILTERFIELDS  values ((select reportid from reportconfiguration where menuitemcode='menu_Item_IndASReport'),3,'FinType','LOVSEARCH','Loan Type','fm.fintype',null,'FinanceType','getFinType','getFinTypeDesc',1,0,0,0,3,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			]]>
		</sql>
	</changeSet>

	<changeSet id="47" author="Vijaya.a">
		<sql>
			<![CDATA[ 
				alter table CD_MERCHANTS modify (STOREID NUMBER(20));
				alter table TransactionMapping modify (MID NUMBER(20));
				alter table CD_MERCHANTS_Temp modify (STOREID NUMBER(20));
				alter table TransactionMapping_Temp modify (MID NUMBER(20));
				alter table CD_DealerMapping_Temp modify (STOREID NUMBER(20));
				alter table CD_DealerMapping modify (STOREID NUMBER(20));
			]]>
		</sql>
	</changeSet>

	<changeSet id="48" author="vijaya.a">
		<createView viewName="SETTLEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT DISTINCT(SR.REQUESTBATCHID), 
        		DC.ID, 
				DC.NAME, 
			  	DC.UPLOADPATH FILELOCATION, 
			  	DS.FILENAME, 
			  	DS.ENDTIME, 
			  	DS.STATUS, 
			  	DC.Id As ConfigId,
			  	DC.PostEvent,
				'' As HOSTREFERENCE , 
				SR.CUSTOMERREF, 
				SR.TRANSACTIONAMOUNT,
				SR.TRANSACTIONDATETIME, 
				SR.MERCHANTNAME, 
				SR.TERMINALID, 
				SR.MANUFACTUREID
			FROM DATA_ENGINE_CONFIG DC
			INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
			INNER JOIN SETTLEMENT_REQUEST SR ON SR.REQUESTBATCHID=DS.ID
		</createView>
	</changeSet>
	<changeSet id="49" author="prabhakar.g">
		<sql>
		<![CDATA[
			update SMTPARAMETERS set SYSPARMVALUE = 'Y' where sysparmcode = 'ALLOW_LIMIT_NOTIFICATION'
			]]>
		</sql>
	</changeSet>

	<changeSet id="52" author="naga.g">
		<sql>
			<![CDATA[
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
            UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
 
            delete from secrights where rightname='CustomerDialog_coreBankID';

            insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CustomerDialog_coreBankID','CustomerDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
            insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CUSTOMER_DDE_MAKER'), (select RightID from SecRights WHERE RightName='CustomerDialog_coreBankID'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
            insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='BFSD_ORIGINATION_MAKER'), (select RightID from SecRights WHERE RightName='CustomerDialog_coreBankID'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 ); 
            insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CENTRALIZED_GROUP_MAKER'), (select RightID from SecRights WHERE RightName='CustomerDialog_coreBankID'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );		 
            insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_WRM'), (select RightID from SecRights WHERE RightName='CustomerDialog_coreBankID'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );		 

            UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
            UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			
			]]>
		</sql>
	</changeSet>
	<changeSet id="53" author="naga.g">
		<createView viewName="SETTLEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT DISTINCT(SR.REQUESTBATCHID), 
        		DC.ID, 
				DC.NAME, 
			  	DC.UPLOADPATH FILELOCATION, 
			  	DS.FILENAME, 
			  	DS.ENDTIME, 
			  	DS.STATUS, 
			  	DC.Id As ConfigId,
			  	DC.PostEvent,
				'' As HOSTREFERENCE , 
				SR.TRANSACTIONAMOUNT,
				SR.TRANSACTIONDATETIME, 
				SR.MERCHANTNAME, 
				SR.TERMINALID, 
				SR.MANUFACTUREID
			FROM DATA_ENGINE_CONFIG DC
			INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
			INNER JOIN SETTLEMENT_REQUEST SR ON SR.REQUESTBATCHID=DS.ID
		</createView>
	</changeSet>

	<changeSet id="54" author="Dheerendra">
		<createTable tableName="IDB_INTERFACES_LOG">
			<column name="INTERFACE_NAME" type="VARCHAR(100)" />
			<column name="REF_NUM" type="VARCHAR(100)" />
			<column name="START_DATE" type="VARCHAR(30)" />
			<column name="END_DATE" type="VARCHAR(30)" />
			<column name="RECORDS_PROCESSED" type="BIGINT" />
			<column name="STATUS" type="VARCHAR(10)" />
			<column name="STATUS_DESC" type="VARCHAR(100)" />
			<column name="INTERFACE_INFO" type="VARCHAR(100)" />
		</createTable>
	</changeSet>

	<changeSet id="55" author="Dheerendra">
		<createSequence sequenceName="SEQ_EXTERANAL_IDBINTERFACE" />
	</changeSet>

	<changeSet id="56" author="naga.g">
		<sql>
			<![CDATA[
			   update data_engine_table set FILTER ='PROCESS_ID IN (:PROCESS_ID)' where configid in (select ID from data_engine_config where name='MANDATES_EXPORT' );
			]]>
		</sql>
	</changeSet>

	<changeSet id="57" author="Durga Prasad G">
		<sql>
			update data_engine_table set FILTER ='PROCESS_ID IN
			(:PROCESS_ID)' where configid in (select ID from
			data_engine_config
			where name='MANDATES_EXPORT');
		</sql>
	</changeSet>

	<changeSet id="58" author="Durga Prasad G">
		<sql>
			Delete from BMTAMOUNTCODES Where ALLOWEDEVENT = 'REPAY' and
			AMOUNTCODE ='EX_ReceiptAmount';

			Insert into
			BMTAMOUNTCODES
			(ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID)
			values
			('REPAY',0,'EX_ReceiptAmount','Total Receipt Amount from
			Excess','1',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		</sql>
	</changeSet>
	<changeSet id="59" author="naga.g">
		<createView viewName="FINODPENALTYRATES_VIEW" replaceIfExists="true">
			 SELECT finreference,
			    fineffectdate,
			    applyodpenalty,
			    odincgrcdays,
			    odchargetype,
			    odgracedays,
			    odchargecalon,
			    odchargeamtorperc,
			    odallowwaiver,
			    odmaxwaiverperc,
			    odrulecode,
			    ODMinCapAmount
			  FROM finodpenaltyrates_temp
			  UNION
			  SELECT finreference,
			    fineffectdate,
			    applyodpenalty,
			    odincgrcdays,
			    odchargetype,
			    odgracedays,
			    odchargecalon,
			    odchargeamtorperc,
			    odallowwaiver,
			    odmaxwaiverperc,
			    odrulecode,
			    ODMinCapAmount
			  FROM finodpenaltyrates
			  WHERE NOT (EXISTS
			    ( SELECT 1 FROM finodpenaltyrates_temp WHERE finodpenaltyrates_temp.finreference = finodpenaltyrates.finreference
			    ))
		</createView>
	</changeSet>
	<changeSet id="60" author="naga.g">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE';
				
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_RESPONSE', 'Presentment Default Response file.', 12, 'Presentment', NULL, NULL, NULL , 0, 1, NULL, 'Corporate User No, Corporate Name, UMRN, Customer to be debited, Customer IFSC, Customer Debit AC, Transaction ID/REF, Amount (Rs), Date of Txn, File No, Status Description, Reason Description', '', 'C', '/opt/PFF/presentment/response', 'Presentment_', '.xlsx', 0, current_timestamp, NULL, NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE'), 'PRESENTMENT_FILEIMPORT',  0, 'BatchId', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'INSTALMENTNO', 1, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AMOUNTCLEARED', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CLEARINGDATE', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, 'dd-MM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BRANCHCODE', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BFLREFERENCENO', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AGREEMENTNO', 0, 'N', NULL, NULL, NULL, NULL, 8, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, 9, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'REASONCODE', 0, 'N', NULL, NULL, NULL, NULL, 10, NULL, NULL, NULL, NULL, 'O');
		
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>
	<changeSet id="61" author="naga.g">
		<createView viewName="SCHEMEMASTER_VIEW" replaceIfExists="true">
		    select pm.promotioncode,pm.promotiondesc,pm.TENOR,CONCAT(to_char(pm.ACTUALINTERESTRATE,'99.99'), '%') ACTUALINTERESTRATE,pm.ADVEMITERMS,pm.STARTDATE,pm.enddate,pm.FINMINAMOUNT/100 FINMINAMOUNT,
			pm.FINMAXAMOUNT/100 FINMAXAMOUNT , pm.remarks, to_char('0') Active,pm.SPECIALSCHEME,CASE when fp1.Amount is null then 0 when fp1.Amount>0 then fp1.Amount/100  when fp1.percentage is null then 0   else fp1.percentage   END ProseeFee,CONCAT(to_char(CASE when fp2.Amount is null then 0 when fp2.Amount>0 then fp2.Amount Else fp2.percentage  END,'09.99'),'%') AS DBDFEE ,to_char('1') IS_PF_SCHEME,to_char('A') Action,pm.LASTMNTON from promotions pm 
			left join fintypefees_aview fp1 on pm.promotionCode = fp1.finType and fp1.moduleid=2 and fp1.FeeTypeID in(select feetypeid from feetypes where feetypecode in ('MMFLPROC'))
			left join fintypefees_aview fp2 on pm.promotionCode = fp2.finType and fp2.moduleid=2 and fp2.FeeTypeID in(select feetypeid from feetypes where feetypecode in ('MMFLDBD'))
		</createView>
	</changeSet>
	<changeSet id="62" author="naga.g">
		<createView viewName="SETTLEMENT_REQ_DOWNLOAD_VIEW" replaceIfExists="true">
		     select t1.requestbatchid,t1.hostreference,t1.customerref,t1.transactionamount/100 as transactionamount ,t1.transactiondatetime,t1.merchantname,t1.terminalid,t1.manufactureid FROM settlement_request t1
		</createView>
	</changeSet>
	<changeSet id="63" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_table set name='SETTLEMENT_REQ_DOWNLOAD_VIEW' where configid in ( select  id from data_engine_config where name='SETTLEMENT_REQUEST_DOWNLOAD');
			]]>
		</sql>
	</changeSet>

	<changeSet id="64.1" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
					delete from DATA_ENGINE_Column where tableid in (select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER'));

					update data_engine_config set header='ROW:{SCHEME_ID,SCHEME_DESCRIPTION,TENURE,ROI,ADVANCE_EMI,DBD,SCHEME_START_DATE,SCHEME_END_DATE,MIN_AMOUNT,MAX_AMOUNT,PROCESSING_FEE,PORTAL_DESCRIPTION,ACTION,STATUS,SPECIAL_SCHEME_FLAG,IS_PF_SCHEME}' where name='ME_SCHEMEMASTER';

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'PROMOTIONCODE',0,'N',null,null,null,null,'1',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'PROMOTIONDESC',0,'N',null,null,null,null,'2',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'TENOR',0,'N',null,null,null,null,'3',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ACTUALINTERESTRATE',0,'N',null,null,null,null,'4',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ADVEMITERMS',0,'N',null,null,null,null,'5',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'DBDFEE',0,'N',null,null,null,null,'6',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'STARTDATE',0,'N',null,null,null,null,'7',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ENDDATE',0,'N',null,null,null,null,'8',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'FINMINAMOUNT',0,'N',null,null,null,null,'9',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'FINMAXAMOUNT',0,'N',null,null,null,null,'10',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'PROSEEFEE',0,'N',null,null,null,null,'11',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'REMARKS',0,'N',null,null,null,null,'12',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ACTION',0,'N',null,null,null,null,'13',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ACTIVE',0,'N',null,null,null,null,'14',null,null,null,null,'O');
			  
					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'SPECIALSCHEME',0,'N',null,null,null,null,'15',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'IS_PF_SCHEME',0,'N',null,null,null,null,'16',null,null,null,null,'O');
                    
                    update data_engine_column set FORMAT='DATE:dd-MM-yyyy' where name in ('STARTDATE','ENDDATE') and tableid in (select id from DATA_ENGINE_TABLE  where  configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')) ;
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="65" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
					update data_engine_column set STARTINDEX='1' where name='PROMOTIONID' and tableid in (select id from data_engine_table where name='CD_SCHEME_PRODUCTGROUP');
					update data_engine_column set STARTINDEX='2' where name='PRODUCTGROUPCODE' and tableid in (select id from data_engine_table where name='CD_SCHEME_PRODUCTGROUP');
					update data_engine_column set STARTINDEX='3' where name='POSVENDOR' and tableid in (select id from data_engine_table where name='CD_SCHEME_PRODUCTGROUP');
					update data_engine_column set STARTINDEX='4' where name='ACTIVE' and tableid in (select id from data_engine_table where name='CD_SCHEME_PRODUCTGROUP');
					update data_engine_config set header='ROW:{SCHEME_ID,PRODUCT_GROUP_CODE,ACTION,STATUS}' where name='ME_SCHEMEPRODUCTGROUP';
			]]>
		</sql>
	</changeSet>

	<changeSet id="66" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
					update data_engine_column set STARTINDEX='1' where name='promotionId' and tableid in (select id from data_engine_table where name='CD_SCHEME_DEALERGROUP');
					update data_engine_column set STARTINDEX='2' where name='DEALERGROUPCODE' and tableid in (select id from data_engine_table where name='CD_SCHEME_DEALERGROUP');
					update data_engine_column set STARTINDEX='3' where name='ACTIVE' and tableid in (select id from data_engine_table where name='CD_SCHEME_DEALERGROUP');
					update data_engine_config set header='ROW:{SCHEME_ID,DEALERGROUPCODE,STATUS}' where name='ME_SCHEME_DEALERGROUP';
			]]>
		</sql>
	</changeSet>
	<changeSet id="67" author="naga.g">
		<createView viewName="SCHEMEMASTER_VIEW" replaceIfExists="true">
		   select pm.promotioncode, pm.promotiondesc, pm.TENOR, CONCAT(to_char(pm.ACTUALINTERESTRATE,'99.99'), '%') ACTUALINTERESTRATE, pm.ADVEMITERMS, CONCAT(to_char(CASE when fp2.Amount is null then 0 when fp2.Amount>0 then fp2.Amount/100 Else fp2.percentage  END,'09.99'),'%') AS DBDFEE, pm.STARTDATE, pm.enddate, pm.FINMINAMOUNT/100 FINMINAMOUNT,pm.FINMAXAMOUNT/100 FINMAXAMOUNT , 
           CASE when fp1.Amount is null then 0 when fp1.Amount>0 then fp1.Amount/100  when fp1.percentage is null then 0   else fp1.percentage   END ProseeFee,pm.remarks,to_char('A') Action,to_char('0') Active,pm.SPECIALSCHEME,to_char('1') IS_PF_SCHEME,pm.LASTMNTON from promotions pm 
           left join fintypefees_aview fp1 on pm.promotionCode = fp1.finType and fp1.moduleid=2 and fp1.FeeTypeID in(select feetypeid from feetypes where feetypecode in ('MMFLPROC'))
           left join fintypefees_aview fp2 on pm.promotionCode = fp2.finType and fp2.moduleid=2 and fp2.FeeTypeID in(select feetypeid from feetypes where feetypecode in ('MMFLDBD'))
		</createView>
	</changeSet>

	<changeSet id="68" author="Durga Prasad G">
		<sql>
			Delete from CategoryWiseEvents Where AEEVENTCODE= 'PAYMTINS';

			INSERT INTO CategoryWiseEvents
			VALUES('PAYMTINS','F',1,0,(Select
			max(seqorder)+1 from CategoryWiseEvents Where
			CATEGORYCODE= 'F'));
			INSERT INTO
			CategoryWiseEvents VALUES('PAYMTINS','O',1,0,(Select
			max(seqorder)+1 from CategoryWiseEvents Where
			CATEGORYCODE=
			'O'));
			INSERT INTO CategoryWiseEvents VALUES('PAYMTINS','C',1,0,(Select
			max(seqorder)+1 from CategoryWiseEvents Where
			CATEGORYCODE= 'C'));
		</sql>
	</changeSet>

	<changeSet id="69" author="Durga Prasad G">
		<sql>
			Delete from CategoryWiseEvents Where AEEVENTCODE= 'MANFEE';

			INSERT INTO CategoryWiseEvents
			VALUES('MANFEE','F',1,0,(Select
			max(seqorder)+1 from CategoryWiseEvents Where CATEGORYCODE=
			'F'));
			INSERT INTO
			CategoryWiseEvents VALUES('MANFEE','O',1,0,(Select
			max(seqorder)+1 from CategoryWiseEvents Where
			CATEGORYCODE= 'O'));
			INSERT INTO CategoryWiseEvents VALUES('MANFEE','C',1,0,(Select
			max(seqorder)+1 from
			CategoryWiseEvents Where
			CATEGORYCODE= 'C'));
		</sql>
	</changeSet>
	<changeSet id="70" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
			   update  BMTAEEvents set ACTIVE=1 where AEEVENTCODE='MANFEE';
		    ]]>
		</sql>
	</changeSet>
	<changeSet id="71" author="obireddy.y">
		<sql>
			<![CDATA[
				delete from OGL_CONFIG;
			
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','17803','DGC – Journal Voucher','DGC','C','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','13565','DGC – Journal Voucher','DGC','C','89','DISBURSEMENT');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','17275','DGB - Billing Journal Voucher','DGB','B','23','M M SUBVENTION');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','37025','DGB - Billing Journal Voucher','DGB','B','23','M M SUBVENTION');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','17804','DGC – Journal Voucher','DGC','C','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','45010','DGC – Journal Voucher','DGC','C','73','Loan Amount');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','17802','DGC – Journal Voucher','DGC','C','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','17801','DGC – Journal Voucher','DGC','C','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','37020','DGC – Journal Voucher','DGC','C','22','DEALER SUBVENTION');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('ADDDBSP','75502','DGC – Journal Voucher','DGC','C','M062','Processing Fees');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('AMZ','18045','DGM - Memorandum Journal Voucher','DGM','M','M063','Accrued Interest Not Paid');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('AMZ','75501','DGM - Memorandum Journal Voucher','DGM','M','105','INTEREST INCOME - LOAN');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('DISBINS','31576','AZD - Axis Bank Disbursement Voucher','AZD','P','M055','GL Bank Payment');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('DISBINS','13565','AZD - Axis Bank Disbursement Voucher','AZD','P','M046','Loan Amount Disbursed');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','75501','AZC - Axis Bank Collection Voucher','AZC','R','105','INTEREST INCOME - LOAN');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','45010','AZC - Axis Bank Collection Voucher','AZC','R','73','Loan Amount');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','13565','DGM - Memorandum Journal Voucher','DGM','M','2','ADVANCE EMI');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','25215','AZC - Axis Bank Collection Voucher','AZC','R','103','LOAN RECEIVABLE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','31576','AZC - Axis Bank Collection Voucher','AZC','R','M055','GL Bank Payment');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','31577','AZC - Axis Bank Collection Voucher','AZC','R','M056','GL Bank Receipt');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','75504','AZC - Axis Bank Collection Voucher','AZC','R','M101','Charges Income');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','17801','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','17802','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','17803','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','17804','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('EARLYSTL','75506','AZC - Axis Bank Collection Voucher','AZC','R','M101','Charges Income');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('INSTDATE','45010','DGB - Billing Journal Voucher','DGB','B','73','Loan Amount');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('INSTDATE','18045','DGB - Billing Journal Voucher','DGB','B','M063','Accrued Interest Not Paid');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('INSTDATE','75501','DGB - Billing Journal Voucher','DGB','B','75','INTEREST INCOME - LOAN');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('INSTDATE','25215','DGB - Billing Journal Voucher','DGB','B','103','LOAN RECEIVABLE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('RECEIPT','31578','AZS - Axis Bank Subvention voucher','AZS','R','23','M M SUBVENTION');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('RECEIPT','37025','AZS - Axis Bank Subvention voucher','AZS','R','23','M M SUBVENTION');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','17804','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','75506','AZC - Axis Bank Collection Voucher','AZC','R','M101','Charges Income');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','25215','AZC - Axis Bank Collection Voucher','AZC','R','103','LOAN RECEIVABLE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','15620','AZC - Axis Bank Collection Voucher','AZC','R','2','ADVANCE EMI');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','75501','AZC - Axis Bank Collection Voucher','AZC','R','12','Repayment');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','45010','AZC - Axis Bank Collection Voucher','AZC','R','73','Loan Amount');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','13565','AZC - Axis Bank Collection Voucher','AZC','R','2','ADVANCE EMI');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','31577','AZC - Axis Bank Collection Voucher','AZC','R','M056','GL Bank Receipt');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','31576','AZC - Axis Bank Collection Voucher','AZC','R','M055','GL Bank Payment');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','17275','AZD - Axis Bank Disbursement Voucher','AZD','P','RD','REFUND');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','17802','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','75504','AZC - Axis Bank Collection Voucher','AZC','R','M101','Charges Income');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','17801','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('REPAY','17803','AZC - Axis Bank Collection Voucher','AZC','R','259','GST');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) 
				values ('EARLYSTL','15620','AZC - Axis Bank Collection Voucher','AZC','R','2','ADVANCE EMI');
			]]>
		</sql>
	</changeSet>

	<changeSet id="72" author="obireddy.y">
		<createTable tableName="TCCODEVOUCHERSEQ">
			<column name="TCCODE" type="varchar(20)" />
			<column name="VOCHERSEQ" type="NUMBER(10,0)" />
		</createTable>
	</changeSet>

	<changeSet id="73" author="obireddy.y">
		<dropSequence sequenceName="SEQOGLIITREF" />
	</changeSet>
	<changeSet id="74" author="obireddy.y">
		<dropSequence sequenceName="SEQOGLHEADERKEY" />
	</changeSet>
	<changeSet id="75" author="obireddy.y">
		<dropSequence sequenceName="SEQ_EXTERANAL_IDBINTERFACE" />
	</changeSet>

	<changeSet id="76" author="obireddy.y">
		<createSequence sequenceName="SEQOGLIITREF" minValue="1" startValue="1" maxValue="99999999999999"
			incrementBy="1" cycle="true" ordered="true" />
	</changeSet>
	<changeSet id="77" author="obireddy.y">
		<createSequence sequenceName="SEQOGLHEADERKEY" minValue="1" startValue="1" maxValue="99999999999999"
			incrementBy="1" cycle="true" ordered="true" />
	</changeSet>
	<changeSet id="78" author="obireddy.y">
		<createSequence sequenceName="SEQ_EXTERANAL_IDBINTERFACE" minValue="1" startValue="1"
			maxValue="99999999999999" incrementBy="1" cycle="true" ordered="true" />
	</changeSet>
	<changeSet id="79" author="dheerendra.d">
		<createTable tableName="FI_FIN_DTLS_CD">
			<column name="IIT_REFERENCE" type="NUMBER">
				<constraints nullable="false" />
			</column>
			<column name="HEADER_KEY" type="NUMBER">
				<constraints nullable="false" />
			</column>
			<column name="TC" type="VARCHAR(10)">
				<constraints nullable="false" />
			</column>
			<column name="VOUCHER_NUMBER" type="VARCHAR(12)">
				<constraints nullable="false" />
			</column>
			<column name="VOUCHER_DATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="REF_TYPE" type="VARCHAR(10)">
				<constraints nullable="false" />
			</column>
			<column name="REF_NUMBER" type="VARCHAR(15)">
				<constraints nullable="false" />
			</column>
			<column name="VALUE_DATE" type="datetime" />
			<column name="INSTRUMENT_TYPE" type="VARCHAR(1)" />
			<column name="INSTRUMENT_NUMBER" type="VARCHAR(10)" />
			<column name="INSTRUMENT_DATE" type="datetime" />
			<column name="DRAWEE_BANK_CODE" type="NUMBER" />
			<column name="DRAWEE_BRANCH_CODE" type="NUMBER" />
			<column name="MANUAL_DOC_TYPE" type="VARCHAR(10)" />
			<column name="MANUAL_DOC_CONTROL_NUMBER" type="VARCHAR(10)" />
			<column name="MANUAL_DOC_DATE" type="datetime" />
			<column name="PAY_IN_SLIP_NUMBER" type="VARCHAR(20)" />
			<column name="PAY_IN_SLIP_DATE" type="datetime" />
			<column name="OCCURRENCE" type="NUMBER(8)">
				<constraints nullable="false" />
			</column>
			<column name="NARRATION" type="VARCHAR(100)" />
			<column name="DBCR_INDICATOR" type="VARCHAR(1)">
				<constraints nullable="false" />
			</column>
			<column name="GLCODE" type="VARCHAR(20)">
				<constraints nullable="false" />
			</column>
			<column name="SUBLEDGER_CODE" type="VARCHAR(20)" />
			<column name="TRANSACTION_AMOUNT" type="NUMBER(16,2)">
				<constraints nullable="false" />
			</column>
			<column name="SERVICE_TAX" type="NUMBER(16,2)" />
			<column name="CHQ_RTN_REVERSAL_INDICATOR" type="VARCHAR(1)" />
			<column name="EMPLOYEE_CODE" type="VARCHAR(15)" />
			<column name="CHEQUE_PRINTED" type="NUMBER(2)" />
			<column name="USER_NAME" type="VARCHAR(20)">
				<constraints nullable="false" />
			</column>
			<column name="ENTRY_DATE_OF_TRANSACTION" type="datetime" />
			<column name="REALISATION_DATE" type="datetime" />
			<column name="BRANCH_CODE" type="VARCHAR(15)">
				<constraints nullable="false" />
			</column>
			<column name="REVERSAL_CODE_CRA" type="NUMBER" />
			<column name="REVERSAL_OLD_VOUCHER_NO" type="VARCHAR(20)" />
			<column name="TRANSACTION_NATURE_CODE" type="VARCHAR(5)">
				<constraints nullable="false" />
			</column>
			<column name="SECTOR_CODE" type="VARCHAR(5)" />
			<column name="PORTFOLIO" type="VARCHAR(5)" />
			<column name="PRODUCT_CODE" type="VARCHAR(5)" />
			<column name="PRIMARY_DEALER_ASSET_CODE" type="NUMBER" />
			<column name="GROUP_CODE" type="VARCHAR(15)" />
			<column name="FUTURE2" type="VARCHAR(5)" />
			<column name="VOUCHER_NARRATION" type="VARCHAR(1250)" />
			<column name="CHEQUE_OR_DD_INDICATOR" type="VARCHAR(1)" />
			<column name="BATCH_NUMBER" type="VARCHAR(5)">
				<constraints nullable="false" />
			</column>
			<column name="ERROR_FLAG" type="VARCHAR(1)" />
			<column name="ERROR_CODE" type="VARCHAR(5)" />
			<column name="TRANSFER_FLAG" type="VARCHAR(1)" />
			<column name="TRANSFER_DATE" type="datetime" />
			<column name="TRANSFERRED_BY" type="VARCHAR(15)" />
			<column name="PROVISION_ACTUAL_ENTRY" type="VARCHAR(1)">
				<constraints nullable="false" />
			</column>
			<column name="ENTITY_TYPE" type="VARCHAR(10)" />
			<column name="ENTITY_CODE" type="VARCHAR(15)" />
			<column name="ERROR_MESSAGE" type="VARCHAR(1000)" />
			<column name="ENTITY_DESC" type="VARCHAR(610)" />
			<column name="DRAWEE_BANK_NAME" type="VARCHAR(100)" />
			<column name="DRAWEE_BRANCH_NAME" type="VARCHAR(100)" />
			<column name="DEPARTMENT_CODE" type="VARCHAR(5)" />
			<column name="DEPARTMENT_NAME" type="VARCHAR(50)" />
			<column name="EMPLOYEE_NAME" type="VARCHAR(610)" />
			<column name="BRANCH_NAME" type="VARCHAR(100)" />
			<column name="REVERSAL_CODE_CRA_REASON" type="VARCHAR(100)" />
			<column name="TRANSACTION_NATURE_NAME" type="VARCHAR(200)" />
			<column name="SECTOR_DESC" type="VARCHAR(100)" />
			<column name="PRODUCT_NAME" type="VARCHAR(100)" />
			<column name="PRIMARY_DEALER_ASSET_DESC" type="VARCHAR(100)" />
			<column name="GROUP_NAME" type="VARCHAR(610)" />
			<column name="REGION_CODE" type="NUMBER" />
			<column name="REGION_NAME" type="VARCHAR(100)" />
			<column name="CONTROLLING_BRANCH" type="NUMBER" />
			<column name="CONTROLLING_BRANCH_NAME" type="VARCHAR(100)" />
			<column name="STATE_CODE" type="NUMBER" />
			<column name="STATE_NAME" type="VARCHAR(100)" />
			<column name="VOUCHER_COUNT" type="NUMBER(10)" />
			<column name="VOUCHER_DEBIT" type="NUMBER(16,2)" />
			<column name="VOUCHER_CREDIT" type="NUMBER(16,2)" />
			<column name="FAVOURING_NAME" type="VARCHAR(120)" />
			<column name="OLDTRANID" type="NUMBER(19,0)" />
			<column name="TRANSORDERID" type="NUMBER(19,0)" />
			<column name="LINKEDTRANID" type="NUMBER(19,0)" />
		</createTable>
	</changeSet>
	<changeSet id="80" author="naga.g" dbms="oracle">
		<addColumn tableName="CD_SCHEME_DEALERGROUP">
			<column name="ACTION" type="NUMBER(1,0)" defaultValue="0" />
		</addColumn>
	</changeSet>
	<changeSet id="81" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				delete from data_engine_column where tableid in ( select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEDEALERGROUP'));
				Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),( select id from data_engine_table where name='CD_SCHEME_DEALERGROUP' ),'promotionId',0,'N',null,null,null,null,'1',null,null,null,null,'O');
				Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),( select id from data_engine_table where name='CD_SCHEME_DEALERGROUP' ) ,'DEALERGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');
				Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),( select id from data_engine_table where name='CD_SCHEME_DEALERGROUP' ),'ACTION',0,'N',null,'1',null,null,'3',null,null,null,null,'O');
				Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),( select id from data_engine_table where name='CD_SCHEME_DEALERGROUP' ),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	
			    update  data_engine_config set HEADER='ROW:{SCHEME_ID,DEALERGROUPCODE,ACTION,STATUS}' where id in  (select id from data_engine_config where  name='ME_SCHEMEDEALERGROUP');
			]]>
		</sql>
	</changeSet>
	<changeSet id="82" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
					delete from DATA_ENGINE_Column where tableid in (select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER'));

					update data_engine_config set header='ROW:{SCHEME_ID,SCHEME_DESCRIPTION,TENURE,ROI,ADVANCE_EMI,DBD,SCHEME_START_DATE,SCHEME_END_DATE,MAX_AMOUNT,MIN_AMOUNT,PROCESSING_FEE,PORTAL_DESCRIPTION,ACTION,STATUS,SPECIAL_SCHEME_FLAG,IS_PF_SCHEME}' where name='ME_SCHEMEMASTER';

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'PROMOTIONCODE',0,'N',null,null,null,null,'1',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'PROMOTIONDESC',0,'N',null,null,null,null,'2',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'TENOR',0,'N',null,null,null,null,'3',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ACTUALINTERESTRATE',0,'N',null,null,null,null,'4',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ADVEMITERMS',0,'N',null,null,null,null,'5',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'DBDFEE',0,'N',null,null,null,null,'6',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'STARTDATE',0,'N',null,null,null,null,'7',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ENDDATE',0,'N',null,null,null,null,'8',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'FINMAXAMOUNT',0,'N',null,null,null,null,'9',null,null,null,null,'O');
					
					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'FINMINAMOUNT',0,'N',null,null,null,null,'10',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'PROSEEFEE',0,'N',null,null,null,null,'11',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'REMARKS',0,'N',null,null,null,null,'12',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ACTION',0,'N',null,null,null,null,'13',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'ACTIVE',0,'N',null,null,null,null,'14',null,null,null,null,'O');
			  
					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'SPECIALSCHEME',0,'N',null,null,null,null,'15',null,null,null,null,'O');

					Insert into data_engine_column (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((select max(id)+1 from data_engine_column),(select id from DATA_ENGINE_TABLE  where configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')),'IS_PF_SCHEME',0,'N',null,null,null,null,'16',null,null,null,null,'O');
                    
                    update data_engine_column set FORMAT='DATE:dd-MM-yyyy' where name in ('STARTDATE','ENDDATE') and tableid in (select id from DATA_ENGINE_TABLE  where  configid in(select id from DATA_ENGINE_CONFIG where name='ME_SCHEMEMASTER')) ;
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="83" author="obireddy.y">
		<sql>
            <![CDATA[
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('PAYMTINS','15620','AZC - Axis Bank Collection Voucher','AZC','R','2','ADVANCE EMI');       
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('PAYMTINS','31577','AZC - Axis Bank Collection Voucher','AZC','R','M056','GL Bank Payment');
             ]]>
		</sql>
	</changeSet>
	<changeSet id="84" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
					 DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP'));
			
					 DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEPRODUCTGROUP');
			
					 DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEPRODUCTGROUP';       
			       
                     INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT max(id)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEPRODUCTGROUP','scheme product group extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,PRODUCT_GROUP_CODE,ACTION,STATUS}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SPM_','.xlsx',4,current_timestamp,'${SEQ_FILE},_${yyyyMMddHHmmss}',null,'0',null,0,1);

					 INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP'),'CD_SCHEME_PRODUCTGROUP',0,'PROMOTIONID','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);
			       
			         INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'PROMOTIONID',0,'N',null,null,null,null,'1',null,null,null,null,'O');

					 INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'PRODUCTGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');

					 INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'POSVENDOR',0,'N',null,'1',null,null,'3',null,null,null,null,'O');

                     INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	
			
				     UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				     UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				     UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
                    
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="85" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
			
			   DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'));
			
               DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEDEALERGROUP');
			
			   DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEDEALERGROUP';

			   INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEDEALERGROUP','Scheme DEALERGROUP extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,DEALERGROUPCODE,ACTION,STATUS}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SDM_','.xlsx',4,current_timestamp,'${SEQ_FILE},_${yyyyMMddHHmmss}',null,'0',null,0,1);

			   INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'),'CD_SCHEME_DEALERGROUP',0,'PROMOTIONID','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);


			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'PROMOTIONID',0,'N',null,null,null,null,'1',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')) ,'DEALERGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTION',0,'N',null,'1',null,null,'3',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	


			   
			   UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
			   UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
			   UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="86" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
			
			    DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'));
			
                DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEMASTER');
			
                DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEMASTER';
                
                
                INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEMASTER','Scheme Master extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,SCHEME_DESCRIPTION,TENURE,ROI,ADVANCE_EMI,DBD,SCHEME_START_DATE,SCHEME_END_DATE,MAX_AMOUNT,MIN_AMOUNT,PROCESSING_FEE,PORTAL_DESCRIPTION,ACTION,STATUS,SPECIAL_SCHEME_FLAG,IS_PF_SCHEME}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SM_','.xlsx',40,current_timestamp,'${SEQ_FILE},_${yyyyMMddHHmmss}',null,'0',null,0,1);

				INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'),'SCHEMEMASTER_VIEW',0,'PROMOTIONCODE','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);
                
                
                INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONCODE',0,'N',null,null,null,null,'1',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONDESC',0,'N',null,null,null,null,'2',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'TENOR',0,'N',null,null,null,null,'3',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTUALINTERESTRATE',0,'N',null,null,null,null,'4',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ADVEMITERMS',0,'N',null,null,null,null,'5',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'DBDFEE',0,'N',null,null,null,null,'6',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'STARTDATE',0,'N',null,null,null,null,'7',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ENDDATE',0,'N',null,null,null,null,'8',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMAXAMOUNT',0,'N',null,null,null,null,'9',null,null,null,null,'O');
					
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMINAMOUNT',0,'N',null,null,null,null,'10',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROSEEFEE',0,'N',null,null,null,null,'11',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'REMARKS',0,'N',null,null,null,null,'12',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTION',0,'N',null,null,null,null,'13',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTIVE',0,'N',null,null,null,null,'14',null,null,null,null,'O');
  
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'SPECIALSCHEME',0,'N',null,null,null,null,'15',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'IS_PF_SCHEME',0,'N',null,null,null,null,'16',null,null,null,null,'O');
			    
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);				
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="87" author="naga.g" dbms="oracle">
		<sql>
			 <![CDATA[
			
			    DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'));
			
                DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEMASTER');
			
                DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEMASTER';
                
                
                INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEMASTER','Scheme Master extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,SCHEME_DESCRIPTION,TENURE,ROI,ADVANCE_EMI,DBD,SCHEME_START_DATE,SCHEME_END_DATE,MAX_AMOUNT,MIN_AMOUNT,PROCESSING_FEE,PORTAL_DESCRIPTION,ACTION,STATUS,SPECIAL_SCHEME_FLAG,IS_PF_SCHEME}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SM_','.xlsx',40,current_timestamp,'${SEQ_FILE},_${yyyyMMddHHmmss}',null,'0',null,0,1);

				INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'),'SCHEMEMASTER_VIEW',0,'PROMOTIONCODE','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);
                
                
                INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONCODE',0,'N',null,null,null,null,'1',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONDESC',0,'N',null,null,null,null,'2',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'TENOR',0,'N',null,null,null,null,'3',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTUALINTERESTRATE',0,'N',null,null,null,null,'4',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ADVEMITERMS',0,'N',null,null,null,null,'5',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'DBDFEE',0,'N',null,null,null,null,'6',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'STARTDATE',0,'N',null,null,null,null,'7',null,null,null,'DATE:dd-MM-yyyy','O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ENDDATE',0,'N',null,null,null,null,'8',null,null,null,'DATE:dd-MM-yyyy','O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMAXAMOUNT',0,'N',null,null,null,null,'9',null,null,null,null,'O');
					
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMINAMOUNT',0,'N',null,null,null,null,'10',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROSEEFEE',0,'N',null,null,null,null,'11',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'REMARKS',0,'N',null,null,null,null,'12',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTION',0,'N',null,null,null,null,'13',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTIVE',0,'N',null,null,null,null,'14',null,null,null,null,'O');
  
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'SPECIALSCHEME',0,'N',null,null,null,null,'15',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'IS_PF_SCHEME',0,'N',null,null,null,null,'16',null,null,null,null,'O');
			    
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);				
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="88" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
			
			   DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'));
			
               DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEDEALERGROUP');
			
			   DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEDEALERGROUP';

			   INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEDEALERGROUP','Scheme DEALERGROUP extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,DEALER_GROUP_CODE,ACTION,STATUS}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SDM_','.xlsx',4,current_timestamp,'${SEQ_FILE},_${yyyyMMddHHmmss}',null,'0',null,0,1);

			   INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'),'CD_SCHEME_DEALERGROUP',0,'PROMOTIONID','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);


			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'PROMOTIONID',0,'N',null,null,null,null,'1',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')) ,'DEALERGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTION',0,'N',null,'1',null,null,'3',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	


			   
			   UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
			   UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
			   UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="89" author="obireddy.y" dbms="oracle">
		<createTable tableName="GST_OFAS_TRAN_DTLS_CD">
			<column name="TC" type="VARCHAR(10)" />
			<column name="DOC_NO" type="VARCHAR(15)" />
			<column name="SOURCE_STATE" type="VARCHAR(15)" />
			<column name="ENTITY_TYPE" type="VARCHAR(50)" />
			<column name="ENTITY_REGN_TYPE" type="VARCHAR(1)" />
			<column name="ENTITY_CODE" type="VARCHAR(15)" />
			<column name="ENTITY_NAME" type="VARCHAR(150)" />
			<column name="CONSUMPTION_STATE" type="VARCHAR(15)" />
			<column name="GSTIN_NO" type="VARCHAR(20)" />
			<column name="INVOICE_NUMBER" type="VARCHAR(25)" />
			<column name="INVOICE_DATE" type="datetime" />
			<column name="HSN_SAC_CODE" type="VARCHAR(25)" />
			<column name="INVOCE_AMT" type="NUMBER(15,2)" />
			<column name="IGST_AMT" type="NUMBER(15,2)" />
			<column name="CGST_AMT" type="NUMBER(15,2)" />
			<column name="SGST_AMT" type="NUMBER(15,2)" />
			<column name="UGST_AMT" type="NUMBER(15,2)" />
			<column name="OCC_NUMBER" type="NUMBER" />
			<column name="REQUEST_NO" type="NUMBER" />
			<column name="REQUEST_TYPE" type="VARCHAR(25)" />
			<column name="REC_STATUS" type="VARCHAR(1)" />
			<column name="NET_INVOICE_AMT" type="NUMBER(15,2)" />
			<column name="REF_TC" type="VARCHAR(5)" />
			<column name="REF_DOC_NO" type="VARCHAR(15)" />
			<column name="TDS_DOC_NO" type="VARCHAR(15)" />
			<column name="EMPCODE" type="VARCHAR(15)" />
			<column name="DIV" type="VARCHAR(5)" />
			<column name="SUN_IGST_AMT" type="NUMBER(15,2)" />
			<column name="SUN_CGST_AMT" type="NUMBER(15,2)" />
			<column name="SUN_SGST_AMT" type="NUMBER(15,2)" />
			<column name="SUN_UGST_AMT" type="NUMBER(15,2)" />
			<column name="CGST_GLCODE" type="VARCHAR(25)" />
			<column name="SGST_GLCODE" type="VARCHAR(25)" />
			<column name="IGST_GLCODE" type="VARCHAR(25)" />
			<column name="UGST_GLCODE" type="VARCHAR(25)" />
			<column name="BRANCH" type="VARCHAR(3)" />
			<column name="ENTITY_GLCODE" type="VARCHAR(5)" />
			<column name="INCLUSIVE" type="VARCHAR(1)" />
			<column name="ITC" type="VARCHAR(1)" />
			<column name="GST_RCM_GL_CODE" type="VARCHAR(5)" />
			<column name="TRANS_NAT" type="VARCHAR(5)" />
			<column name="ENTITY_SUBCODE" type="VARCHAR(15)" />
			<column name="TDS_IND" type="VARCHAR(1)" />
			<column name="TDS_AMT" type="NUMBER(15,2)" />
			<column name="TRAN_FLG" type="VARCHAR(1)" />
			<column name="TRAN_GL17809_FLG" type="VARCHAR(1)" />
			<column name="DOC_DT" type="datetime" />
			<column name="HEADER_KEY" type="NUMBER" />
			<column name="DBCR" type="VARCHAR(1)" />
			<column name="GST_AMT" type="NUMBER(15,2)" />
			<column name="SOURCE_TC" type="VARCHAR(3)" />
			<column name="SOURCE_DOCNO" type="VARCHAR(15)" />
			<column name="REF_NO" type="VARCHAR(15)" />
			<column name="GST_INVOICE_TYPE" type="VARCHAR(5)" />
			<column name="PAYMENT_STATUS" type="VARCHAR(50)" />
			<column name="KERALA_CESS_AMT" type="NUMBER(15,2)" />
		</createTable>
	</changeSet>
	<changeSet id="90" author="Dheerendra">
		<modifyDataType tableName="GST_OFAS_TRAN_DTLS_CD" columnName="SOURCE_TC" newDataType="nvarchar(10)" />
	</changeSet>

	<changeSet id="91" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
					 DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP'));
			
					 DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEPRODUCTGROUP');
			
					 DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEPRODUCTGROUP';       
			       
                     INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT max(id)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEPRODUCTGROUP','scheme product group extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,PRODUCT_GROUP_CODE,ACTION,STATUS}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SPM_','.xlsx',4,current_timestamp,'${ddMMyyyyHHmmss}',null,'0',null,0,1);

					 INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP'),'CD_SCHEME_PRODUCTGROUP',0,'PROMOTIONID','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);
			       
			         INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'PROMOTIONID',0,'N',null,null,null,null,'1',null,null,null,null,'O');

					 INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'PRODUCTGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');

					 INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'POSVENDOR',0,'N',null,'1',null,null,'3',null,null,null,null,'O');

                     INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	
			
				     UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				     UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				     UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
                    
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="92" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
			
			   DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'));
			
               DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEDEALERGROUP');
			
			   DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEDEALERGROUP';

			   INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEDEALERGROUP','Scheme DEALERGROUP extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,DEALER_GROUP_CODE,ACTION,STATUS}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SDM_','.xlsx',4,current_timestamp,'${ddMMyyyyHHmmss}',null,'0',null,0,1);

			   INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'),'CD_SCHEME_DEALERGROUP',0,'PROMOTIONID','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);


			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'PROMOTIONID',0,'N',null,null,null,null,'1',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')) ,'DEALERGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTION',0,'N',null,'1',null,null,'3',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	


			   
			   UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
			   UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
			   UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
		 	]]>
		</sql>
	</changeSet>



	<changeSet id="93" author="naga.g" dbms="oracle">
		<sql>
			 <![CDATA[
			
			    DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'));
			
                DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEMASTER');
			
                DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEMASTER';
                
                
                INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEMASTER','Scheme Master extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,SCHEME_DESCRIPTION,TENURE,ROI,ADVANCE_EMI,DBD,SCHEME_START_DATE,SCHEME_END_DATE,MAX_AMOUNT,MIN_AMOUNT,PROCESSING_FEE,PORTAL_DESCRIPTION,ACTION,STATUS,SPECIAL_SCHEME_FLAG,IS_PF_SCHEME}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SM_','.xlsx',40,current_timestamp,'${ddMMyyyyHHmmss}',null,'0',null,0,1);

				INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'),'SCHEMEMASTER_VIEW',0,'PROMOTIONCODE','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);
                
                
                INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONCODE',0,'N',null,null,null,null,'1',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONDESC',0,'N',null,null,null,null,'2',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'TENOR',0,'N',null,null,null,null,'3',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTUALINTERESTRATE',0,'N',null,null,null,null,'4',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ADVEMITERMS',0,'N',null,null,null,null,'5',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'DBDFEE',0,'N',null,null,null,null,'6',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'STARTDATE',0,'N',null,null,null,null,'7',null,null,null,'DATE:dd-MM-yyyy','O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ENDDATE',0,'N',null,null,null,null,'8',null,null,null,'DATE:dd-MM-yyyy','O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMAXAMOUNT',0,'N',null,null,null,null,'9',null,null,null,null,'O');
					
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMINAMOUNT',0,'N',null,null,null,null,'10',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROSEEFEE',0,'N',null,null,null,null,'11',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'REMARKS',0,'N',null,null,null,null,'12',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTION',0,'N',null,null,null,null,'13',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTIVE',0,'N',null,null,null,null,'14',null,null,null,null,'O');
  
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'SPECIALSCHEME',0,'N',null,null,null,null,'15',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'IS_PF_SCHEME',0,'N',null,null,null,null,'16',null,null,null,null,'O');
			    
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);				
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="94" author="naga.g">
		<createView viewName="SCHEMEMASTER_VIEW" replaceIfExists="true">
		  select pm.promotioncode, pm.promotiondesc, pm.TENOR, CONCAT(to_char(pm.ACTUALINTERESTRATE,'09.99'), '%') ACTUALINTERESTRATE, pm.ADVEMITERMS, CONCAT(to_char(CASE when fp2.Amount is null then 0 when fp2.Amount>0 then fp2.Amount/100 Else fp2.percentage  END,'09.99'),'%') AS DBDFEE, pm.STARTDATE, pm.enddate, pm.FINMINAMOUNT/100 FINMINAMOUNT,pm.FINMAXAMOUNT/100 FINMAXAMOUNT , 
           CASE when fp1.Amount is null then 0 when fp1.Amount>0 then fp1.Amount/100  when fp1.percentage is null then 0   else fp1.percentage   END ProseeFee,SUBSTR(pm.remarks,1,20) remarks ,to_char('A') Action,to_char('0') Active,pm.SPECIALSCHEME,to_char('1') IS_PF_SCHEME,pm.LASTMNTON from promotions pm 
           left join fintypefees_aview fp1 on pm.promotionCode = fp1.finType and fp1.moduleid=2 and fp1.FeeTypeID in(select feetypeid from feetypes where feetypecode in ('MMFLPROC'))
           left join fintypefees_aview fp2 on pm.promotionCode = fp2.finType and fp2.moduleid=2 and fp2.FeeTypeID in(select feetypeid from feetypes where feetypecode in ('MMFLDBD'))
		</createView>
	</changeSet>
	<changeSet id="95" author="naga.g">
		<createView viewName="SETTLEMENT_REQUEST_VIEW" replaceIfExists="true">
		 SELECT DISTINCT(SR.REQUESTBATCHID),DC.ID,DC.NAME,DC.UPLOADPATH FILELOCATION,DS.FILENAME,DS.ENDTIME,DS.STATUS,DC.Id As ConfigId,DC.PostEvent,'' As HOSTREFERENCE ,'' AS TRANSACTIONAMOUNT,SR.MERCHANTNAME,SR.TERMINALID,SR.MANUFACTUREID FROM DATA_ENGINE_CONFIG DC INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME INNER JOIN SETTLEMENT_REQUEST SR ON SR.REQUESTBATCHID=DS.ID
		</createView>
	</changeSet>
	<changeSet id="96" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
					 DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP'));
			
					 DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEPRODUCTGROUP');
			
					 DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEPRODUCTGROUP';       
			       
                     INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT max(id)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEPRODUCTGROUP','scheme product group extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,PRODUCT_GROUP_CODE,ACTION,STATUS}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SPM_','.xlsx',4,current_timestamp,'${ddMMYYYYHHmmss}',null,'0',null,0,1);

					 INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP'),'CD_SCHEME_PRODUCTGROUP',0,'PROMOTIONID','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);
			       
			         INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'PROMOTIONID',0,'N',null,null,null,null,'1',null,null,null,null,'O');

					 INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'PRODUCTGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');

					 INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'POSVENDOR',0,'N',null,'1',null,null,'3',null,null,null,null,'O');

                     INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEPRODUCTGROUP')),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	
			
				     UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				     UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				     UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
                    
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="97" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
			
			   DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'));
			
               DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEDEALERGROUP');
			
			   DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEDEALERGROUP';

			   INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEDEALERGROUP','Scheme DEALERGROUP extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,DEALER_GROUP_CODE,ACTION,STATUS}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SDM_','.xlsx',4,current_timestamp,'${ddMMYYYYHHmmss}',null,'0',null,0,1);

			   INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP'),'CD_SCHEME_DEALERGROUP',0,'PROMOTIONID','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);


			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'PROMOTIONID',0,'N',null,null,null,null,'1',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')) ,'DEALERGROUPCODE',0,'N',null,null,null,null,'2',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTION',0,'N',null,'1',null,null,'3',null,null,null,null,'O');

			   INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEDEALERGROUP')),'ACTIVE',0,'N',null,null,null,null,'4',null,null,null,null,'O');	


			   
			   UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
			   UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
			   UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
		 	]]>
		</sql>
	</changeSet>



	<changeSet id="98" author="naga.g" dbms="oracle">
		<sql>
			 <![CDATA[
			
			    DELETE FROM DATA_ENGINE_COLUMN WHERE tableid in (SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'));
			
                DELETE FROM DATA_ENGINE_TABLE  WHERE configid in (SELECT id FROM DATA_ENGINE_CONFIG WHERE name = 'ME_SCHEMEMASTER');
			
                DELETE FROM DATA_ENGINE_CONFIG  WHERE name = 'ME_SCHEMEMASTER';
                
                
                INSERT INTO DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_CONFIG),'ME_SCHEMEMASTER','Scheme Master extract',3,null,'"',null,'~',0,0, null,'ROW:{SCHEME_ID,SCHEME_DESCRIPTION,TENURE,ROI,ADVANCE_EMI,DBD,SCHEME_START_DATE,SCHEME_END_DATE,MAX_AMOUNT,MIN_AMOUNT,PROCESSING_FEE,PORTAL_DESCRIPTION,ACTION,STATUS,SPECIAL_SCHEME_FLAG,IS_PF_SCHEME}', null,'A','/opt/Mahindra_8088/PFF/BASE/master_extract','SM_','.xlsx',40,current_timestamp,'${ddMMYYYYHHmmss}',null,'0',null,0,1);

				INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_TABLE),(SELECT id  FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER'),'SCHEMEMASTER_VIEW',0,'PROMOTIONCODE','LASTMNTON > :LAST_MNT_ON',null,null,null,null,null,null,0,0,0);
                
                
                INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONCODE',0,'N',null,null,null,null,'1',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROMOTIONDESC',0,'N',null,null,null,null,'2',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'TENOR',0,'N',null,null,null,null,'3',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTUALINTERESTRATE',0,'N',null,null,null,null,'4',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ADVEMITERMS',0,'N',null,null,null,null,'5',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'DBDFEE',0,'N',null,null,null,null,'6',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'STARTDATE',0,'N',null,null,null,null,'7',null,null,null,'DATE:dd-MM-yyyy','O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ENDDATE',0,'N',null,null,null,null,'8',null,null,null,'DATE:dd-MM-yyyy','O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMAXAMOUNT',0,'N',null,null,null,null,'9',null,null,null,null,'O');
					
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'FINMINAMOUNT',0,'N',null,null,null,null,'10',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'PROSEEFEE',0,'N',null,null,null,null,'11',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'REMARKS',0,'N',null,null,null,null,'12',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTION',0,'N',null,null,null,null,'13',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'ACTIVE',0,'N',null,null,null,null,'14',null,null,null,null,'O');
  
				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'SPECIALSCHEME',0,'N',null,null,null,null,'15',null,null,null,null,'O');

				INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT MAX(ID)+1 FROM DATA_ENGINE_COLUMN),(SELECT id FROM DATA_ENGINE_TABLE  WHERE configid in(SELECT id FROM DATA_ENGINE_CONFIG WHERE name='ME_SCHEMEMASTER')),'IS_PF_SCHEME',0,'N',null,null,null,null,'16',null,null,null,null,'O');
			    
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);				
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="99" author="naga.g">
		<createView viewName="SETTLEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT DISTINCT(SR.REQUESTBATCHID),DC.ID,DC.NAME,DC.UPLOADPATH FILELOCATION,DS.FILENAME,DS.ENDTIME,DS.STATUS,DC.Id As ConfigId,DC.PostEvent,'' As HOSTREFERENCE ,'' AS TRANSACTIONAMOUNT,SR.TRANSACTIONDATETIME,SR.MERCHANTNAME,SR.TERMINALID,SR.MANUFACTUREID FROM DATA_ENGINE_CONFIG DC INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME INNER JOIN SETTLEMENT_REQUEST SR ON SR.REQUESTBATCHID=DS.ID
		</createView>
	</changeSet>
	<changeSet id="100" author="obireddy.y">
		<sql>
            <![CDATA[
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TRN_NATURE_CODE,TRN_NATURE_NAME,TXN_TYPE) values ('MANFEE','17801','AZC - Axis Bank Collection Voucher','AZC','259','GST','R');
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TRN_NATURE_CODE,TRN_NATURE_NAME,TXN_TYPE) values ('MANFEE','17802','AZC - Axis Bank Collection Voucher','AZC','259','GST','R');
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TRN_NATURE_CODE,TRN_NATURE_NAME,TXN_TYPE) values ('MANFEE','17803','AZC - Axis Bank Collection Voucher','AZC','259','GST','R');
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TRN_NATURE_CODE,TRN_NATURE_NAME,TXN_TYPE) values ('MANFEE','17804','AZC - Axis Bank Collection Voucher','AZC','259','GST','R');
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TRN_NATURE_CODE,TRN_NATURE_NAME,TXN_TYPE) values ('MANFEE','31577','AZC - Axis Bank Collection Voucher','AZC','M056','GL Bank Receipt','R');
                Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TRN_NATURE_CODE,TRN_NATURE_NAME,TXN_TYPE) values ('MANFEE','75504','AZC - Axis Bank Collection Voucher','AZC','M101','Charges Income','R');
             ]]>
		</sql>
	</changeSet>

	<changeSet id="101" author="obireddy.y">
		<sql>
            <![CDATA[
    			update reportfilterfields set fielddbname='ENTITYCODE' where reportid in (select reportid from reportconfiguration where MENUITEMCODE='menu_Item_IndASReport') and fieldid=1;
				update reportfilterfields set fielddbname='finreference' where reportid in (select reportid from reportconfiguration where MENUITEMCODE='menu_Item_IndASReport') and fieldid=2;
				update reportfilterfields set fielddbname='fintype' where reportid in (select reportid from reportconfiguration where MENUITEMCODE='menu_Item_IndASReport') and fieldid=3;
				update reportconfiguration set wherecondition=1 where MENUITEMCODE='menu_Item_IndASReport';
    		]]>
		</sql>
	</changeSet>

	<changeSet id="102" author="naga.g" dbms="oracle">
		<sql>
         <![CDATA[
                  DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT');
 				  DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT';
			
 				  DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT'));
 				  DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT');
 				  DELETE FROM DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT';
			
			
		
				 Insert into DATA_ENGINE_CONFIG (ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) values((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'MANDATES_EXPORT','Mandates export',3,'Mandates',NULL, NULL, NULL,0,0, NULL,'ROW:{Unique Identification Number,Utility Code,Sponsor Bank,Client Name,Applicant Name,Bank Account Holder Name,Bank Name,Branch Name,Bank Account Number,MICR,IFSC,Account type,Start Date,End Date,No. of Installments,Amount (Rs.),Loan A/c no,Active status,UMRN,Frequency,Scheme}', NULL,'A','/opt/pennant/PFF/MMFSL/Axis/mandates/request','MMFSL_MANDATEREQ_','.xlsx',170,current_timestamp,'${SEQ_FILE},_${ddMMYYYYHHmmss}',NULL,'0',NULL,1,1);

				 Insert into DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE),(Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT'),'MANDATE_REQUESTS',0,'ID','PROCESS_ID IN (:PROCESS_ID)','UPDATE MANDATE_REQUESTS SET BATCH_ID = :FILEID,STATUS = ''AC'' WHERE PROCESS_ID = :PROCESS_ID QUERY:UPDATE MANDATES SET STATUS =  ''AC''  WHERE MANDATEID IN (SELECT MANDATEID FROM MANDATE_REQUESTS WHERE PROCESS_ID = :PROCESS_ID AND STATUS = ''AC'')',NULL,NULL,NULL,NULL,NULL,0,0,0);


				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'MANDATEID',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'MANDATE_REG_NO',1,'N',null,'NACH00000000008301',null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'Sponsor_Bank',1,'N',null,'UTIB0000248',null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'Client_Name',1,'N',null,'MMFSL Financial Services Limited',null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'CUSTOMER_NAME',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'ACCT_HOLDER_NAME',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'BANK_NAME',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'BRANCH_NAME',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'ACCT_NUMBER',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'MICR_CODE',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'IFSC_CODE',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'ACCT_TYPE',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'START_DATE',0,'N',null,null,null,null,'0',null,null,null,'DATE:dd-MM-yyyy','O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'END_DATE',0,'N',null,null,null,null,'0',null,null,null,'DATE:dd-MM-yyyy','O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'NUMBER_OF_TERMS',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'UPPER_LIMIT',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'FINREFERENCE',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'REMARKS',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'REMARKS',0,'N',null,null,null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'FREQUENCY',0,'N',null,null,null,null,'0',null,null,null,null,'0');
				Insert into DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),'REMARKS',0,'N',null,null,null,null,'0',null,null,null,null,'0');


				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
         ]]>
		</sql>
	</changeSet>
	<changeSet id="103" author="naga.g" dbms="oracle">
		<sql>
         <![CDATA[
                  DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT');
				  DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT';

				  DELETE from DATA_ENGINE_COLUMN  where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_IMPORT'));
				  DELETE from DATA_ENGINE_TABLE   where configid = (select id from DATA_ENGINE_CONFIG where name = 'MANDATES_IMPORT');
				  DELETE from DATA_ENGINE_CONFIG  where name = 'MANDATES_IMPORT';

				  INSERT INTO DATA_ENGINE_CONFIG(ID,NAME,DESCRIPTION,PARSER,WORKSHEET,TEXTQUALIFIER,ROWDELIMITER,COLUMNDELIMITER,STARTINGROW,SKIPHEADERROW,FIELDNAMES,HEADER,TRAILER,UPLOADLOCATION,UPLOADPATH,FILEPREFIXNAME,FILEEXTENSION,FILESEQUENCENO,LASTPROCESSEDON,FILENAMEFORMAT,CRONEXPRESSION,NOTIFICATIONSTATUSEMAIL,POSTEVENT,BACKUPFILE,ACTIVE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'MANDATES_IMPORT','Mandate Response file',12,'Sheet1',null,null,null,0,1, null,null,null,'C','/opt/pennant/PFF/MMFSL/Axis/mandates/response','MMFSL_MANDATERES_','.xlsx',0,current_timestamp,null,null,'0',null,1,1);

				  INSERT INTO DATA_ENGINE_TABLE (ID,CONFIGID,NAME,OPERATION,KEYFIELDS,FILTER,STATUSUPDATE,SKIPROWS,IDENTIFIER,DESCRIPTION,STARTINDEX,ENDINDEX,RECORDLENGTH,MULTIROW,HEADERTABLE) values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE),(Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT'),'MANDATE_RESPONSE',1,'ID',null,null,null,null,null,null,null,0,0,0);
			
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'MANDATE_REG_NO',0,'N',null,null,null,null,'0',null,null,null,null,'M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'MANDATEID',0,'N',null,null,null,null,'32',null,null,null,null,'M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'STATUS',0,'N',null,null,null,null,'1',null,null,null,null,'M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'REMARKS',0,'N',null,null,null,null,'2',null,null,null,null,'O');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'FINREFERENCE',0,'N',null,null,null,null,'3',null,null,null,null,'O');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'ACCT_NUMBER',0,'N',null,null,null,null,'5',null,null,null,null,'M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'INITIATE_DBUSINESS_DATE',0,'N',null,null,null,null,'14',null,null,null,'dd-MM-yyyy','M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'SPONSOR_CHECKER_APPROVALDATE',0,'N',null,null,null,null,'15',null,null,null,'dd-MM-yyyy','M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'CREATION_DATE',0,'N',null,null,null,null,'16',null,null,null,'dd-MM-yyyy','M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'ACCEPTANCE_DATE',0,'N',null,null,null,null,'17',null,null,null,'dd-MM-yyyy','M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'LOT',0,'N',null,null,null,null,'20',null,null,null,null,'M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'INWARD_DATE',0,'N',null,null,null,null,'30',null,null,null,'dd-MM-yyyy','M');
				  INSERT INTO DATA_ENGINE_COLUMN (ID,TABLEID,NAME,SKIP,SEQTYPE,SEQOBJECT,DEFAULTVALUE,DERIVEDFROM,REFERENCECOLUMN,STARTINDEX,ENDINDEX,RULEFORVALUE,QUERYFORVALUE,FORMAT,CONSTRAINTTYPE) VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')),'RESP_BATCH_ID',0,'N',null,null,'${FILE_ID}',null,'33',null,null,null,null,'M');
         ]]>
		</sql>
	</changeSet>

	<changeSet id="104" author="obireddy.y">
		<sql>
            <![CDATA[
                delete from MASTER_DEF where MASTER_TYPE='GST_FEETYPE' and KEY_TYPE='MMFLPROC';
				Insert into MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) values ('GST_FEETYPE','MMFLPROC','PROIN');
             ]]>
		</sql>
	</changeSet>

	<changeSet id="105" author="Durga Prasad G">
		<sql>
            <![CDATA[
				 Update Secgroups set rolecode = null, nextrolecode = null , TASKID = null , NEXTTASKID = null , RECORDTYPE = null 
				Where grpcode = 'FIN_WRITEOFF_MAKER';
				
				Update Secgroups set rolecode = null, nextrolecode = null , TASKID = null , NEXTTASKID = null , RECORDTYPE = null 
				Where grpcode = 'FIN_WRITEOFF_APPROVER';
             ]]>
		</sql>
	</changeSet>

	<changeSet id="106" author="naga.g" dbms="oracle">
		<sql>
            <![CDATA[
				DELETE REPORTFILTERFIELDS WHERE REPORTID IN (select REPORTID FROM REPORTCONFIGURATION where menuitemcode='menu_Item_WriteoffReport') ;
				DELETE REPORTCONFIGURATION WHERE menuitemcode='menu_Item_WriteoffReport';

				Insert into REPORTCONFIGURATION (REPORTID,REPORTNAME,REPORTHEADING,PROMPTREQUIRED,REPORTJASPERNAME,DATASOURCENAME,SHOWTEMPLIBRARY,MENUITEMCODE,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,ALWMULTIFORMAT,WHERECONDITION,SCHEDULEREQ) values ((SELECT MAX(REPORTID)+1 FROM REPORTCONFIGURATION),'Excel:Write-Off Details','Write-Off Details',1,'writeoff','dataSource',1,'menu_Item_WriteoffReport',2,1005,null,null,null,null,null,null,0,current_timestamp,0,1,0);

				Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,FILTERFILEDS) values ((Select REPORTID FROM REPORTCONFIGURATION where menuitemcode='menu_Item_WriteoffReport'),1,'BranchCode','LOVSEARCH','Branch','FinBranch',null,'Branch','getBranchCode','getBranchDesc',1,0,0,0,1,0,null,null,null,null,250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
				Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,FILTERFILEDS) values ((Select REPORTID FROM REPORTCONFIGURATION where menuitemcode='menu_Item_WriteoffReport'),2,'FinType','LOVSEARCH','Loan Type','fintype',null,'FinanceType','getFinType','getFinTypeDesc',1,0,0,0,2,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
				Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,FILTERFILEDS) values ((Select REPORTID FROM REPORTCONFIGURATION where menuitemcode='menu_Item_WriteoffReport'),3,'CustCIF','LOVSEARCH','Customer Number','custcif',null,'Customer','getCustCIF','getCustShrtName',1,0,0,0,3,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
				Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,FILTERFILEDS) values ((Select REPORTID FROM REPORTCONFIGURATION where menuitemcode='menu_Item_WriteoffReport'),4,'FinReference','LOVSEARCH','Loan Reference','Finreference',null,'FinanceMain','getFinReference','getFinReference',0,0,0,0,4,0,null,null,null,null,250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
             ]]>
		</sql>
	</changeSet>

	<changeSet id="107" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
	              ALTER TABLE CD_MERCHANTS DROP CONSTRAINT UK_CD_MERCHANTS_STOREID;
	              ALTER TABLE CD_MERCHANTS_TEMP DROP CONSTRAINT UK_CD_MERCHANTS_TEMP_STOREID;
	              
	              ALTER TABLE CD_MERCHANTS ADD CONSTRAINT UK_CD_MERCHANTS_STOREID_POSID UNIQUE (STOREID, POSID);
	  			  ALTER TABLE CD_MERCHANTS_TEMP ADD CONSTRAINT UK_CD_MERCHANTSTEMP_STOREPOSID UNIQUE (STOREID, POSID); 			
			]]>
		</sql>
	</changeSet>

	<changeSet id="108" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				update Sys_Notifications  set TRIGGERQUERY='select * from FINSCHEDULEDETAILS schd  inner join FinanceMain fm on fm.FinReference = schd.FinReference 
				left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails Where CUSTID = fm.custid ) 
				inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) 
				where SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'')+3 From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALRT_DUDATE_BFR3';
			]]>
		</sql>
	</changeSet>

	<changeSet id="109" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				update Sys_Notifications  set TRIGGERQUERY='select count(fm.FinReference) from FINSCHEDULEDETAILS schd  inner join FinanceMain fm on fm.FinReference = schd.FinReference 
				left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails Where CUSTID = fm.custid ) 
				inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) 
				where SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'') From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALERT_DUEDATE';
			]]>
		</sql>
	</changeSet>

	<changeSet id="110" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				update Sys_Notifications  set TRIGGERQUERY='select count(distinct (fm.FinReference)) from FinanceMain fm inner join FINSCHEDULEDETAILS schd ON schd.FinReference = fm.FinReference
				inner join FINODDETAILS FOD on FOD.FINREFERENCE = fm.FinReference 
				left join (select FinReference, SUM(AdviseAmount - PaidAmount - WaivedAmount) as CHARGES from ManualAdvise where AdviseType = 2 group by FinReference) ma on ma.FinReference = FOD.FinReference
				left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails Where CUSTID = fm.custid ) 
				inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid )  where fm.FinIsActive = 1 and RepayAmount > 0 and SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'') - 1 From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALRT_AFT_DAY1';
			]]>
		</sql>
	</changeSet>

	<changeSet id="111" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				 update Sys_Notifications  set TRIGGERQUERY='select count(distinct (fm.FinReference)) from FinanceMain fm inner join FINSCHEDULEDETAILS schd ON schd.FinReference = fm.FinReference inner join FINODDETAILS FOD on FOD.FINREFERENCE = fm.FinReference 
				 left join (select FinReference, SUM(AdviseAmount - PaidAmount - WaivedAmount) as CHARGES from ManualAdvise where AdviseType = 2 group by FinReference) ma on ma.FinReference = FOD.FinReference
				 left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails Where CUSTID = fm.custid ) 
				 inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) 
	   			 where fm.FinIsActive = 1 and RepayAmount > 0 and SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'') - 3 From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALRT_AFT_DAY3';
			]]>
		</sql>
	</changeSet>
	<changeSet id="112" author="sudheer.t">
		<dropUniqueConstraint tableName="CD_SCHEME_DEALERGROUP"
			constraintName="UK_CD_SCHEME_DEALERGROUP_CODE" />
		<dropUniqueConstraint tableName="CD_SCHEME_DEALERGROUP_TEMP"
			constraintName="UK_CDSCHM_DLRGRP_TEMP_CODE" />
	</changeSet>

	<changeSet id="113" author="sudheer.t">
		<addUniqueConstraint columnNames="PromotionId,DealerGroupCode"
			constraintName="UK_CDSCHM_DLRGRP_PROMID_CODE" tableName="CD_SCHEME_DEALERGROUP" />
		<addUniqueConstraint columnNames="PromotionId,DealerGroupCode"
			constraintName="UK_CDSCHM_DLRGRP_PROMID_T_CODE" tableName="CD_SCHEME_DEALERGROUP_TEMP" />
	</changeSet>

	<changeSet id="114" author="yelladas.n">
		<dropUniqueConstraint tableName="CD_SCHEME_PRODUCTGROUP"
			constraintName="UK_CD_SCHEME_PRDCTGRP_CODE" />
		<dropUniqueConstraint tableName="CD_SCHEME_PRODUCTGROUP_TEMP"
			constraintName="UK_CDSCHM_PRDCTGRP_TEMP_CODE" />
	</changeSet>

	<changeSet id="115" author="yelladas.n">
		<addUniqueConstraint columnNames="PromotionId,PRODUCTGROUPCODE"
			constraintName="UK_CDSCHM_PRDGRP_PROMID_CODE" tableName="CD_SCHEME_PRODUCTGROUP" />
		<addUniqueConstraint columnNames="PromotionId,PRODUCTGROUPCODE"
			constraintName="UK_CDSCHM_PRDGRP_PROMID_T_CODE" tableName="CD_SCHEME_PRODUCTGROUP_Temp" />
	</changeSet>

	<changeSet id="116" author="yelladas.n" dbms="oracle">
		<sql>
			<![CDATA[
					CREATE TABLE LOAN_CD_ORG_ED_BK_03 AS SELECT * FROM LOAN_CD_ORG_ED;
					CREATE TABLE LOAN_CD_ORG_ED_BK_T_03 AS SELECT * FROM LOAN_CD_ORG_ED_TEMP;
					
					Update EXTENDEDFIELDDETAIL set FIELDTYPE= 'TEXT' , fieldlength = 8 Where MODULEID = (Select Moduleid from EXTENDEDFIELDHEADER Where MODULENAME = 'LOAN' and SUBMODULENAME= 'CD' and EVENT= 'Origination')  and FIELDNAME= 'TID';
					
					update LOAN_CD_ORG_ED set TID = '';
					update LOAN_CD_ORG_ED_TEMP set TID = '';
					
					Alter table LOAN_CD_ORG_ED MODIFY TID varchar(8);
					Alter table LOAN_CD_ORG_ED_TEMP MODIFY TID varchar(8);
			]]>
		</sql>
	</changeSet>

	<changeSet id="117" author="sudheer.t">
		<createView viewName="CD_Scheme_DealerGroup_VIEW" replaceIfExists="true">
			SELECT t1.schemeDealerGroupId, 
				t1.promotionId,
				t1.dealerGroupCode,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_DealerGroup_Temp t1
			UNION ALL
 			SELECT t1.schemeDealerGroupId, 
				t1.promotionId,
    			t1.dealerGroupCode,
   				t1.active,     
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_Scheme_DealerGroup t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_Scheme_DealerGroup_Temp
            WHERE CD_Scheme_DealerGroup_Temp.schemeDealerGroupId = t1.schemeDealerGroupId))
		</createView>
	</changeSet>
	<changeSet id="118" author="Durgaprasad G" dbms="oracle">
		<addColumn tableName="CD_DEALERMAPPING_TEMP">
			<column name="POSID" type="NUMBER(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="119" author="Durgaprasad G" dbms="oracle">
		<addColumn tableName="CD_DEALERMAPPING">
			<column name="POSID" type="NUMBER(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="120" author="naga.g">
		<sql>
			<![CDATA[
				UPDATE CD_DEALERMAPPING Set POSID = 0  where POSID is null;
				UPDATE CD_DEALERMAPPING_TEMP Set POSID = 0 where POSID is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="121" author="naga.g" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE CD_DEALERMAPPING ADD CONSTRAINT DF_DEALERMAPPING_POSID DEFAULT 0 FOR POSID;
				ALTER TABLE CD_DEALERMAPPING_TEMP ADD CONSTRAINT DF_DEALERMAPPING_T_POSID DEFAULT 0 FOR POSID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="122" author="naga.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="POSID" tableName="CD_DEALERMAPPING" defaultValue="0" />
		<addDefaultValue columnName="POSID" tableName="CD_DEALERMAPPING_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="123" author="naga.g">
		<createView viewName="CD_DEALERMAPPING_VIEW" replaceIfExists="true">
		     SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,
          		t2.merchantName,
          		t2.storeName As storeName,
          		t2.storeCity As storeCity,
          		t2.STOREADDRESSLINE1 As storeAddress,
                t2.posid,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping_Temp t1 
         	left outer  Join Cd_Merchants t2 on t1.storeId = t2.storeId  and t1.posid = t2.posid
			UNION ALL
 			SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,  
          		t2.merchantName,
          		t2.storeName As storeName,
          		t2.storeCity As storeCity,
          		t2.STOREADDRESSLINE1 As storeAddress,
                t2.posid,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping t1 
        	left outer Join Cd_Merchants t2 on  t1.storeId = t2.storeId  and t1.posid = t2.posid
  			WHERE NOT (EXISTS (SELECT 1
            FROM CD_DealerMapping_Temp  
            WHERE CD_DealerMapping_Temp.dealerMapId = t1.dealerMapId))
		</createView>
	</changeSet>

	<changeSet id="124" author="naga.g">
		<createView viewName="CD_DEALERMAPPING_AVIEW" replaceIfExists="true">
			SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.posid,
    			t1.active,   
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping t1
		</createView>
	</changeSet>

	<changeSet id="125" author="naga.g">
		<createView viewName="CD_DEALERMAPPING_TVIEW" replaceIfExists="true">
			SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.posid,
    			t1.active,   
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping_Temp t1
		</createView>
	</changeSet>

	<changeSet id="126" author="naga.g">
		<createView viewName="CD_DEALERMAPPING_VIEW" replaceIfExists="true">
		      SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,
          		t2.merchantName,
          		t2.storeName As storeName,
          		t2.storeCity As storeCity,
          		t2.STOREADDRESSLINE1 As storeAddress,
                (CASE 
						when t2.posid  is null then 0
						else t2.posid  end) AS posid ,
               
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping_Temp t1 
         	left outer  Join Cd_Merchants t2 on t1.storeId = t2.storeId  and t1.posid = t2.posid
			UNION ALL
 			SELECT t1.dealerMapId,
    			t1.MerchantId,
   				t1.storeId,
    			t1.dealerCode,
    			t1.active,  
          		t2.merchantName,
          		t2.storeName As storeName,
          		t2.storeCity As storeCity,
          		t2.STOREADDRESSLINE1 As storeAddress,
                 (CASE 
						when t2.posid  is null then 0
						else t2.posid  end) AS posid ,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM CD_DealerMapping t1 
        	left outer Join Cd_Merchants t2 on  t1.storeId = t2.storeId  and t1.posid = t2.posid
  			WHERE NOT (EXISTS (SELECT 1
            FROM CD_DealerMapping_Temp  
            WHERE CD_DealerMapping_Temp.dealerMapId = t1.dealerMapId))
		</createView>
	</changeSet>
	<changeSet id="127" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				update Sys_Notifications  set TRIGGERQUERY='select count(fm.FinReference) from FINSCHEDULEDETAILS schd  inner join FinanceMain fm on fm.FinReference = schd.FinReference 
				left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails Where CUSTID = fm.custid ) 
				inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) 
				where SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'')+3 From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALRT_DUDATE_BFR3';
			]]>
		</sql>
	</changeSet>

	<changeSet id="128" author="Srikanth M">
		<sql>
			<![CDATA[
			    UPDATE SMTPARAMETERS SET SYSPARMVALUE='Y' WHERE SYSPARMCODE='ALLOW_MANUAL_ADV_DUE_CREATION';
			]]>
		</sql>
	</changeSet>
	<changeSet id="129" author="naga.g">
		<sql>
			<![CDATA[
			 	Delete from smtparameters where SYSPARMCODE='PRESENTMENT_SUCCESS_MAIL_NOTIFICATION';
   				Delete from smtparameters where SYSPARMCODE='PRESENTMENT_BOUNCE_MAIL_NOTIFICATION';
			    Insert into SMTPARAMETERS (SYSPARMCODE,SYSPARMDESC,SYSPARMTYPE,SYSPARMMAINT,SYSPARMVALUE,SYSPARMLENGTH,SYSPARMDEC,SYSPARMLIST,SYSPARMVALDMOD,SYSPARMDESCRIPTION,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PRESENTMENT_BOUNCE_MAIL_NOTIFICATION','PRESENTMENT BOUNCE MAIL NOTIFICATION','String',0,'79',100,0,null,null,'PRESENTMENT BOUNCE MAIL NOTIFICATION',1,1000,Current_TimeStamp,'Approved',null,null,null,null,null,0);
    			Insert into SMTPARAMETERS (SYSPARMCODE,SYSPARMDESC,SYSPARMTYPE,SYSPARMMAINT,SYSPARMVALUE,SYSPARMLENGTH,SYSPARMDEC,SYSPARMLIST,SYSPARMVALDMOD,SYSPARMDESCRIPTION,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PRESENTMENT_SUCCESS_MAIL_NOTIFICATION','PRESENTMENT SUCESS MAIL NOTIFICATION','String',0,'78',100,0,null,null,'PRESENTMENT BOUNCE MAIL NOTIFICATION',1,1000,Current_TimeStamp,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="130" author="dheerendra.d">
		<sql>
			<![CDATA[
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('JVPOST','75504','AZC - Axis Bank Collection Voucher','AZC','R','6','SERVICE CHARGE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('JVPOST','17802','AZC - Axis Bank Collection Voucher','AZC','R','6','SERVICE CHARGE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('JVPOST','17801','AZC - Axis Bank Collection Voucher','AZC','R','6','SERVICE CHARGE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('JVPOST','17803','AZC - Axis Bank Collection Voucher','AZC','R','6','SERVICE CHARGE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('JVPOST','17804','AZC - Axis Bank Collection Voucher','AZC','R','6','SERVICE CHARGE');
				Insert into OGL_CONFIG (EVENT,HOSTGLCODE,VOUCHER_TYPE,TC_CODE,TXN_TYPE,TRN_NATURE_CODE,TRN_NATURE_NAME) values ('JVPOST','31577','AZC - Axis Bank Collection Voucher','AZC','R','6','SERVICE CHARGE');
			]]>
		</sql>
	</changeSet>
	<changeSet id="131" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				update Sys_Notifications  set CRITERIAQUERY=' from FINSCHEDULEDETAILS schd  inner join FinanceMain fm on fm.FinReference = schd.FinReference 
				left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails Where CUSTID = fm.custid ) 
				inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) where SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'')+3 From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALRT_DUDATE_BFR3';
			]]>
		</sql>
	</changeSet>

	<changeSet id="132" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				update Sys_Notifications  set CRITERIAQUERY=' from FINSCHEDULEDETAILS schd  inner join FinanceMain fm on fm.FinReference = schd.FinReference 
				left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails Where CUSTID = fm.custid ) 
				inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) where SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'') From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALERT_DUEDATE';
			]]>
		</sql>
	</changeSet>

	<changeSet id="133" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				update Sys_Notifications  set CRITERIAQUERY=' from FinanceMain fm inner join FINSCHEDULEDETAILS schd ON schd.FinReference = fm.FinReference left join FINODDETAILS FOD on 
				FOD.FINREFERENCE = fm.FinReference left join (select FinReference, SUM(AdviseAmount - PaidAmount - WaivedAmount) as CHARGES from 
				ManualAdvise where AdviseType = 2 group by FinReference) ma on ma.FinReference = FOD.FinReference  
				left join CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY)  
				From customeremails Where CUSTID = fm.custid ) inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND  
				PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) where fm.FinIsActive = 1 
				and RepayAmount > 0 and SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'') - 1 From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALRT_AFT_DAY1';
			]]>
		</sql>
	</changeSet>

	<changeSet id="134" author="naga.g" dbms="oracle">
		<sql>
			<![CDATA[
				 update Sys_Notifications  set CRITERIAQUERY=' from FinanceMain fm inner join FINSCHEDULEDETAILS schd ON schd.FinReference = fm.FinReference left join FINODDETAILS FOD on  
				 FOD.FINREFERENCE = fm.FinReference left join (select FinReference, SUM(AdviseAmount - PaidAmount - WaivedAmount) as CHARGES 
				 from ManualAdvise where AdviseType = 2 group by FinReference) ma on ma.FinReference = FOD.FinReference left join 
				 CustomerEMails ce on ce.CustID = fm.CustID and ce.CustEMailPriority = (Select max(CUSTEMAILPRIORITY) From customeremails  
				 Where CUSTID = fm.custid ) inner Join CustomerPhoneNumbers CPN ON CPN.phonecustid = fm.custid AND  
				 PHONETYPEPRIORITY =(Select max(PHONETYPEPRIORITY) From CustomerPhoneNumbers Where phonecustid = fm.custid ) 
                 where fm.FinIsActive = 1 and RepayAmount > 0 and SCHDATE = (Select To_Date(SysParmValue, ''YYYY-MM-DD'') - 3 
                 From SMTParameters Where SysParmCode=''APP_DATE'')' where CODE='DUE_ALRT_AFT_DAY3';
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="168" author="vijaya.a">
		<dropColumn tableName="MANDATE_REQUESTS" columnName="DOCUMENTNAME" />
		<dropColumn tableName="MANDATE_RESPONSE" columnName="DOCUMENTNAME" />
	</changeSet>

	<changeSet id="135" author="Keerthi.P">
		<addColumn tableName="MANDATE_REQUESTS">
			<column name="DOCUMENTNAME" type="Varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="136" author="Keerthi.P">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="DOCUMENTNAME" type="Varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="137" author="Keerthi.P">
		<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
			SELECT
			M.MANDATEID,
			M.DOCUMENTNAME,
			BD.BANKSHORTCODE
			BANKCODE,
			BD.BANKNAME,
			case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
			case when
			LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
			CUST.CUSTCIF,
			CUST.CUSTSHRTNAME,
			CUST.CustCoreBank,
			FT.FINTYPEDESC FINTYPE ,
			FIN.FINREFERENCE ,
			COALESCE((SELECT SUM(TotalAmount) from (Select
			MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount
			FROM FINSCHEDULEDETAILS FSD
			INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE
			=FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID
			GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
			COALESCE((SELECT
			SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD WHERE
			(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID =
			M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
			CASE M.OPENMANDATE WHEN 1 THEN 'New Open ECS' ELSE 'No
			Open ECS' END OPENMANDATE,
			M.ACCNUMBER,
			CASE WHEN M.ACCTYPE = '10' then 'Savings Account' WHEN M.ACCTYPE = '11' then
			'Current Account' WHEN M.ACCTYPE = '11' then
			'Cash Credit Account' ELSE M.ACCTYPE END ACCTYPE,
			M.ACCHOLDERNAME,
			BB.MICR,
			BB.IFSC,
			BB.ADDOFBRANCH,
			(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT
			FINREFERENCE FROM FINANCEMAIN WHERE
			MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
			(select MAX(SCHDATE) from FINSCHEDULEDETAILS
			where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT
			FINREFERENCE FROM FINANCEMAIN WHERE
			MANDATEID=M.MANDATEID)) EMIENDDATE,
			COALESCE (M.MAXLIMIT/CCYMINORCCYUNITS, 0) MAXLIMIT,
			COALESCE((SELECT
			SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE
			(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE
			MANDATEID=M.MANDATEID)
			GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
			FIN.NumberOfTerms,
			M.periodicity,
			M.STARTDATE,
			M.EXPIRYDATE,
			FIN.APPLICATIONNO,
			M.MANDATETYPE,
			M.STATUS,
			M.INPUTDATE,
			M.RECORDSTATUS,
			M.RECORDTYPE,
			M.MANDATECCY,
			COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,
			M.EntityCode,
			CP.PHONENUMBER,
			CE.CUSTEMAIL,
			PB.PARTNERBANKNAME,
			M.LASTMNTON,
			BB.BranchDesc BANK_BRANCH_NAME
			FROM MANDATES M
			INNER JOIN BANKBRANCHES BB ON
			BB.BANKBRANCHID = M.BANKBRANCHID
			INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE
			INNER JOIN CUSTOMERS CUST ON
			CUST.CUSTID = M.CUSTID
			INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH
			LEFT JOIN PARTNERBANKS PB ON
			PB.PARTNERBANKID = M.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
			LEFT OUTER JOIN
			RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
			LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
			LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH
			LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE
			=FT.FINTYPE
			WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC'
			OR status =
			'NEW'))
		</createView>
	</changeSet>

	<changeSet id="138" author="Keerthi.P">
		<comment>Mandate Response scripts</comment>
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT';
																	
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_IMPORT'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_IMPORT');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'MANDATES_IMPORT';
													
				INSERT into DATA_ENGINE_CONFIG  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'MANDATES_IMPORT', 'Mandate Response file',12,'Mandates',null,null,null,0,1, null,null, null,'C','/opt/pennant/PFF/MMFSL/Axis/mandates/response', 'MMFSL_MANDATERES','.xls',0, current_timestamp,null,null,'0',null,1,1);
																
				INSERT into DATA_ENGINE_TABLE values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE),(Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT'),'MANDATE_RESPONSE',1,'ID',null, null,null,null,null,null,null,33,0,0);
				
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'RESP_BATCH_ID', 0, 'N', NULL, NULL, '${FILE_ID}', NULL, '0', NULL, NULL, NULL, NULL, 'O');												
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'MANDATE_REG_NO', 0, 'N', NULL, NULL, NULL, NULL, '0', NULL, NULL, NULL, NULL, 'O');			
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, '1', NULL, 'if((STATUS == ''INITIAL REJECTED BY DESTINATIONBANK'')){Result = ''Y'';  return;} else if((STATUS == ''INITIAL ACTIVE'')) {Result = ''N'';  return;} ', NULL, NULL, 'O');			
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'REMARKS', 0, 'N', NULL, NULL, NULL, NULL, '2', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'FINREFERENCE', 0, 'N', NULL, NULL, NULL, NULL, '3', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'PAYMENTTYPE', 1, 'N', NULL, '', NULL, NULL, '4', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACCT_NUMBER', 0, 'N', NULL, NULL, NULL, NULL, '5', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'BANK_NAME', 0, 'N', NULL, NULL, NULL, NULL, '6', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'BANK_CODE', 0, 'N', NULL, NULL, NULL, NULL, '7', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CUSTOMER_NAME', 0, 'N', NULL, NULL, NULL, NULL, '8', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CREDITORNAME', 1, 'N', NULL, '', NULL, NULL, '9', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'FREQUENCY', 0, 'N', NULL, NULL, NULL, NULL, '10', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'DEBIT_AMOUNT', 0, 'N', NULL, NULL, NULL, NULL, '11', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'START_DATE', 1, 'N', NULL, '', NULL, NULL, '12', NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'END_DATE', 1, 'N', NULL, '', NULL, NULL, '13', NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'INITIATE_DBUSINESS_DATE', 1, 'N', NULL, '', NULL, NULL, '14', NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SPONSOR_CHECKER_APPROVALDATE', 1, 'N', NULL, '', NULL, NULL, '15', NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CREATION_DATE', 1, 'N', NULL, '', NULL, NULL, '16', NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACCEPTANCE_DATE', 1, 'N', NULL, '', NULL, NULL, '17', NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CREDITORUTILITYCODE', 1, 'N', NULL, '', NULL, NULL, '18', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'PRO_DATE', 1, 'N', NULL, '', NULL, NULL, '19', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'LOT', 0, 'N', NULL, NULL, NULL, NULL, '20', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SRNO', 1, 'N', NULL, '', NULL, NULL, '21', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CLIENTCODE', 1, 'N', NULL, '', NULL, NULL, '22', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'OLD_UMRN', 1, 'N', NULL, '', NULL, NULL, '23', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'DATE', 1, 'N', NULL, '', NULL, NULL, '24', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SP_BKCODE', 1, 'N', NULL, '', NULL, NULL, '25', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACTION', 1, 'N', NULL, '', NULL, NULL, '26', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACCT_TYPE', 0, 'N', NULL, NULL, NULL, NULL, '27', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CUSTOMER_PHONE', 0, 'N', NULL, NULL, NULL, NULL, '28', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'PICKUP_LOCATION', 1, 'N', NULL, '', NULL, NULL, '29', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'INWARD_DATE', 1, 'N', NULL, '', NULL, NULL, '30', NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SP_BANK', 1, 'N', NULL, '', NULL, NULL, '31', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'MANDATEID', 0, 'N', NULL, NULL, NULL, NULL, '32', NULL, NULL, NULL, NULL, 'M');
													
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select COALESCE(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select COALESCE(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select COALESCE(MAX(ID), 1) FROM DATA_ENGINE_COLUMN); 
				
			]]>
		</sql>
	</changeSet>

	<changeSet id="139" author="Keerthi.P" dbms="oracle">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY;
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT';
							
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT';
							
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'MANDATES_EXPORT', 'Mandates export', 3, 'Mandates', NULL, NULL, ',' , 0, 0, NULL, 'ROW:{Date, Utility Code, UMRN No.,Sponsor Bank, Client Name,Applicant Name,Bank Account Holder Name,Bank Name, Branch Name,Bank Account Number, MICR/IFSC, Account type, Start Date, End Date, Amount (Rs.), No. of Installments, Frequency, Document Name,  Mandate ID}',  '', 'A', '/opt/pennant/PFF/MMFSL/Axis/mandates/request', 'MMFSL_MANDATERES', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT'), 'MANDATE_REQUESTS',  0, 'ID', 'PROCESS_ID = :PROCESS_ID', 'UPDATE MANDATE_REQUESTS SET BATCH_ID = :FILEID, STATUS = ''AC'' WHERE PROCESS_ID = :PROCESS_ID QUERY:UPDATE MANDATES SET STATUS =  ''AC'' WHERE MANDATEID IN (SELECT MANDATEID FROM MANDATE_REQUESTS WHERE PROCESS_ID = :PROCESS_ID AND STATUS =  ''AC'')', NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
							
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'START_DATE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'Utility Code',		    1, 'N', NULL, '', NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MANDATE_REG_NO',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'SponsorBank',			1, 'N', NULL, 'Axis', NULL, NULL, 0, NULL, NULL, NULL,NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'CLIENT_NAME',	        1, 'N', NULL, 'MMFSL', NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'CUSTOMER_NAME',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_HOLDER_NAME',					0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'BANK_NAME',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'BANK_BRANCH_NAME',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_NUMBER',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MICR_CODE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_TYPE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'START_DATE',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy','M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'END_DATE',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy','M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'DEBIT_AMOUNT',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'NUMBER_OF_TERMS',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'FREQUENCY',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'DOCUMENTNAME',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');		
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MANDATEID',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');		
					
											
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
	
			]]>
		</sql>

	</changeSet>

	<changeSet id="140" author="Keerthi.P">
		<comment>Presentment request scripts</comment>
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_REQUEST');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_REQUEST');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_REQUEST';
								
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_REQUEST'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_REQUEST');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_REQUEST';
								
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_REQUEST', 'Presentment Request.', 3, NULL, NULL, NULL, NULL , 0, 0, NULL, 'CORPORATE UTILITY CODE, CORPORATE NAME/ USER NAME, UMRN, CUSTOMER TO BE DEBITED, CUSTOMER IFSC/ MICR, CUSTOMER DEBIT ACC, TRANSACTION ID/ REF, AMOUNT(RS), DATE OF TXN, FILE NO', '', 'A', '/opt/Mahindra_8088/PFF/BASE/presentment/request', 'PRESENTREQ', '.xlsx', 0, NULL, '${SEQ_FILE},_${yyyyMMddHHmmss}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST'), 'PRESENTMENT_REQ_DETAILS',  0, 'JOB_ID', 'JOB_ID = :JOB_ID', NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
								
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'CORPORATE_UTILITY_CODE', 1, 'N', NULL, '', NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'CORPORATENAME/USERNAME', 1, 'N', NULL, 'MMFSL', NULL, NULL, 1, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'UMRN_NO', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'DEST_ACC_HOLDER', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'MICR_CODE', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'ACCOUNTNO', 0, 'N', NULL, NULL, NULL, NULL, 5, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'AGREEMENTNO', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'CHEQUEAMOUNT', 0, 'N', NULL, NULL, NULL, NULL, 7, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'CYCLEDATE', 0, 'N', NULL, NULL, NULL, NULL, 8, NULL, NULL, NULL, 'DATE:dd/MM/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 9, NULL, NULL, NULL, NULL, 'O');
				
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);

			]]>
		</sql>
	</changeSet>

	<changeSet id="141" author="Keerthi.P">
		<comment>Presentment response scripts</comment>
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE';
								
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE';
								
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_RESPONSE', 'Presentment Default Response file.', 12, 'Presentment', NULL, NULL, NULL , 0, 1, NULL, 'Corporate User No, Corporate Name, UMRN, Customer to be debited, Customer IFSC, Customer Debit AC, Transaction ID/REF, Amount (Rs), Date of Txn, File No, Status Description, Reason Description', '', 'C', '/opt/Mahindra_8088/PFF/BASE/presentment/response', 'Presentment_', '.xlsx', 0, current_timestamp, NULL, NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE'), 'PRESENTMENT_FILEIMPORT',  0, 'BatchId', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
					
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AGREEMENTNO', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AMOUNTCLEARED', 0, 'N', NULL, NULL, NULL, NULL, 7, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 9, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, 10, NULL, 'if((STATUS == ''SUCCESS'')){Result = ''S'';  return;} else if((STATUS == ''FAIL'')) {Result = ''F'';  return;} ', NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'REASONCODE', 0, 'N', NULL, NULL, NULL, NULL, 11, NULL, NULL, NULL, NULL, 'O');
				
						
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="142" author="Keerthi.P">
		<createTable tableName="MandateTypeUpdateStatus">
			<column name="FinReference" type="varchar2(20)" />
			<column name="MandateID" type="number(19,0)" />
			<column name="Status" type="varchar(50)" />
			<column name="ErrorDesc" type="varchar(100)" />
			<column name="LoggedOn" type="datetime" />
		</createTable>
	</changeSet>

	<changeSet id="143" author="keerthi.P">
		<sql>
			<![CDATA[
				UPDATE SMTPARAMETERS set sysparmvalue='Y' where sysparmcode='ALLOW_DEFAULT_MANDATE_REQ';
			]]>
		</sql>
	</changeSet>

	<changeSet id="144" author="vijaya.a">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY;
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT';
							
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT';
							
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'MANDATES_EXPORT', 'Mandates export', 3, 'Mandates', NULL, NULL, ',' , 0, 0, NULL, 'ROW:{Date, Utility Code, UMRN No.,Sponsor Bank, Client Name,Applicant Name,Bank Account Holder Name,Bank Name, Branch Name,Bank Account Number, MICR/IFSC, Account type, Start Date, End Date, Amount (Rs.), No. of Installments, Frequency, Reference No.1, Reference No.2}',  '', 'A', '/opt/pennant/PFF/MMFSL/Axis/mandates/request', 'MMFSL_MANDATERES', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT'), 'MANDATE_REQUESTS',  0, 'ID', 'PROCESS_ID = :PROCESS_ID', 'UPDATE MANDATE_REQUESTS SET BATCH_ID = :FILEID, STATUS = ''AC'' WHERE PROCESS_ID = :PROCESS_ID QUERY:UPDATE MANDATES SET STATUS =  ''AC'' WHERE MANDATEID IN (SELECT MANDATEID FROM MANDATE_REQUESTS WHERE PROCESS_ID = :PROCESS_ID AND STATUS =  ''AC'')', NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
							
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'START_DATE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy', 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'UtilityCode',		    1, 'N', NULL, '', NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MANDATE_REG_NO',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'SponsorBank',			1, 'N', NULL, 'Axis', NULL, NULL, 0, NULL, NULL, NULL,NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'CLIENT_NAME',	        1, 'N', NULL, 'MMFSL', NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'CUSTOMER_NAME',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_HOLDER_NAME',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'BANK_NAME',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'BANK_BRANCH_NAME',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_NUMBER',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MICR_CODE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_TYPE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'START_DATE',		    0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy','M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'END_DATE',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy','M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'DEBIT_AMOUNT',		    0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'NUMBER_OF_TERMS',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'FREQUENCY',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MANDATEID',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'DOCUMENTNAME',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL,'M');		
					
											
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="145" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set RuleForValue = 'if((STATUS == ''INITIAL REJECTED'')){Result = ''Y'';  return;} else if((STATUS == ''INITIAL ACTIVE'')) {Result = ''N'';  return;} ' where name = 'STATUS' And Tableid in (Select Id from data_engine_table where ConfigId in (Select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="146" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set ConstraintType = 'M' where name = 'STATUS' And Tableid in (Select Id from data_engine_table where ConfigId in (Select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				update data_engine_column set ConstraintType = 'M' where name = 'MANDATE_REG_NO' And Tableid in (Select Id from data_engine_table where ConfigId in (Select Id from data_engine_config where Name = 'MANDATES_IMPORT'));

			]]>
		</sql>
	</changeSet>

	<changeSet id="147" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set ConstraintType = 'M' where  Tableid in (Select Id from data_engine_table where ConfigId in (Select Id from data_engine_config where Name = 'PRESENTMENT_RESPONSE'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="148" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set ConstraintType = 'O' where name = 'REASONCODE' And Tableid in (Select Id from data_engine_table where ConfigId in (Select Id from data_engine_config where Name = 'PRESENTMENT_RESPONSE'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="149" author="vijaya.a">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE';
				
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE';
				
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_RESPONSE', 'Presentment Default Response file.', 12, 'Presentment', NULL, NULL, NULL , 0, 1, NULL, 'Corporate User No, Corporate Name, UMRN, Customer to be debited, Customer IFSC, Customer Debit AC, Transaction ID/REF, Amount (Rs), Date of Txn, File No, Status Description, Reason Description', '', 'C', '/opt/Mahindra_8088/PFF/BASE/presentment/response', 'Presentment_', '.xlsx', 0, current_timestamp, NULL, NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE'), 'PRESENTMENT_FILEIMPORT',  0, 'BatchId', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
				
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CorporateUserNo', 1, 'N', NULL, '', NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CorporateName', 1, 'N', NULL, '', NULL, NULL, 1, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'UMRN', 1, 'N', NULL, '', NULL, NULL, 2, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CUSTOMERTOBEDEBITED', 1, 'N', NULL, '', NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CUSTOMERIFSC', 1, 'N', NULL, '', NULL, NULL, 4, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CUSTOMERDEBITAC', 1, 'N', NULL, '', NULL, NULL, 5, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AGREEMENTNO', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AMOUNTCLEARED', 0, 'N', NULL, NULL, NULL, NULL, 7, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'DATEOFTXN', 1, 'N', NULL, '', NULL, NULL, 8, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 9, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, 10, NULL, 'if((STATUS == ''SUCCESS'')){Result = ''S'';  return;} else if((STATUS == ''FAIL'')) {Result = ''F'';  return;} ', NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'REASONCODE', 0, 'N', NULL, NULL, NULL, NULL, 11, NULL, NULL, NULL, NULL, 'O');
				
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="150" author="vijaya.a">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE';
				
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE';
				
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_RESPONSE', 'Presentment Default Response file.', 12, 'Presentment', NULL, NULL, NULL , 0, 1, NULL, 'Corporate User No, Corporate Name, UMRN, Customer to be debited, Customer IFSC, Customer Debit AC, Transaction ID/REF, Amount (Rs), Date of Txn, File No, Status Description, Reason Description', '', 'C', '/opt/Mahindra_8088/PFF/BASE/presentment/response', 'Presentment_', '.xlsx', 0, current_timestamp, NULL, NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE'), 'PRESENTMENT_FILEIMPORT',  0, 'BatchId', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
				
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CorporateUserNo', 1, 'N', NULL, '', NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CorporateName', 1, 'N', NULL, '', NULL, NULL, 1, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'UMRN', 1, 'N', NULL, '', NULL, NULL, 2, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CUSTOMERTOBEDEBITED', 1, 'N', NULL, '', NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CUSTOMERIFSC', 1, 'N', NULL, '', NULL, NULL, 4, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CUSTOMERDEBITAC', 1, 'N', NULL, '', NULL, NULL, 5, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AGREEMENTNO', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AMOUNTCLEARED', 0, 'N', NULL, NULL, NULL, NULL, 7, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'DATEOFTXN', 1, 'N', NULL, '', NULL, NULL, 8, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 9, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, 10, NULL, 'if((STATUS == ''SUCCESS'')){Result = ''S'';  return;} else if((STATUS == ''FAIL'')) {Result = ''F'';  return;} ', NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'REASONCODE', 0, 'N', NULL, NULL, NULL, NULL, 11, NULL, NULL, NULL, NULL, 'O');
				
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="151" author="vijaya.a">
		<sql>
			<![CDATA[
				Update ErrorDetails set Message = 'Value Date should be less than or equal to received date.' where code = 'RU0008';
			]]>
		</sql>
	</changeSet>
	<changeSet id="152" author="naga.g">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='MANDATE_EMANDATE_REQUIRED';
				INSERT INTO SMTPARAMETERS VALUES('MANDATE_EMANDATE_REQUIRED','E-Mandate required or not','String',1,'Y',1,0,null,null,'E-Mandate required or not',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>
	<changeSet id="153" author="naga.g">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='PRESENTMENT_RESPONSE_EMNDT';
				INSERT INTO SMTPARAMETERS VALUES('PRESENTMENT_RESPONSE_EMNDT','PRESENTMENT RESPONSE FOR EMANDATE','String',1,'PRESENTMENT_RESPONSE_EMNDT_BD',40,0,null,null,'E-Mandate required or not',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="154" author="naga.g">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_REQUEST_EMNDT_BD');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_REQUEST_EMNDT_BD');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_REQUEST_EMNDT_BD';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_REQUEST_EMNDT_BD'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_REQUEST_EMNDT_BD');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_REQUEST_EMNDT_BD';

				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_REQUEST_EMNDT_BD', 'Presentment Request Emandate BillDesek.', 2, NULL, NULL, NULL, ',' , 0, 0, NULL, 'Debti Reference Nu, LAN No, Customer ID, Debit Amount, Debit Date', '', 'A', '/opt/MMFL/PFF/presentment/request', 'PRESENTREQ', '.csv', 0, NULL, '${SEQ_FILE},_${yyyyMMddHHmmss}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST_EMNDT_BD'), 'PRESENTMENT_REQ_DETAILS_VIEW',  0, 'JOB_ID', 'JOB_ID = :JOB_ID', NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST_EMNDT_BD')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST_EMNDT_BD')), 'AGREEMENTNO', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST_EMNDT_BD')), 'CUSTOMERID', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'M');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST_EMNDT_BD')), 'CHEQUEAMOUNT', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_REQ_DETAILS_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_REQUEST_EMNDT_BD')), 'CYCLEDATE', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, 'DATE:yyyyMMdd', 'O');

				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="155" author="naga.g">
		<sql>
			<![CDATA[

               DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE_EMNDT_BD');
               DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE_EMNDT_BD');
               DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE_EMNDT_BD';
               
               DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE_EMNDT_BD'));
               DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE_EMNDT_BD');
               DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE_EMNDT_BD';
               
               INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_RESPONSE_EMNDT_BD', 'Presentment Emandate Bill Desk Response file.', 1, 'Presentment', NULL, NULL, ',' , 0, 1, NULL, 'Corporate User No, Corporate Name, UMRN, Customer to be debited, Customer IFSC, Customer Debit AC, Transaction ID/REF, Amount (Rs), Date of Txn, File No, Status Description, Reason Description', '', 'C', '/opt/MMFL/PFF/presentment/response', 'Presentment_', '.csv', 0, current_timestamp, NULL, NULL, 0, NULL, 1, 1); 
               INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD'), 'PRESENTMENT_FILEIMPORT',  0, 'BatchId', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 12, 0, 0);
               
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');	
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'AGREEMENTNO', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'M');	
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'CUSTOMERID', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'M');
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'CHEQUEAMOUNT', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'M');
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'CYCLEDATE', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, 'yyyyMMdd', 'M');
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, 5, NULL, 'if((STATUS == ''PAID'')){Result = ''S'';  return;} else if((STATUS == ''FAILED'')) {Result = ''F'';  return;} ', NULL, NULL, 'M');
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'REASONCODE', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');
               INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE_EMNDT_BD')), 'BillDeskTransactionId', 1, 'N', NULL, '', NULL, NULL, 7, NULL, NULL, NULL, NULL, 'O');
               

               UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
               UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
               UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
             
			]]>
		</sql>
	</changeSet>
	<changeSet id="156" author="naga.g">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='PRESENTMENT_REQUEST_EMNDT';
				INSERT INTO SMTPARAMETERS VALUES('PRESENTMENT_REQUEST_EMNDT_BD','PRESENTMENT REQUEST FOR EMANDATE','String',1,'PRESENTMENT_REQUEST_EMNDT_BD',40,0,null,null,'E-Mandate required or not',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>
	<changeSet id="157" author="naga.g">
		<sql>
			<![CDATA[
				update smtparameters set SYSPARMVALUE='Y' where sysparmcode='PRESENTMENT_RESPONSE_ALLOW_INSTRUMENT_TYPE';
			]]>
		</sql>
	</changeSet>

	<changeSet id="158" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_table set RECORDLENGTH=8 where configid=(select id from data_engine_config where name='PRESENTMENT_RESPONSE_EMNDT_BD');
			]]>
		</sql>
	</changeSet>
	<changeSet id="159" author="naga.g">
		<sql>
			<![CDATA[
					update DATA_ENGINE_COLUMN set skip=1 where Name='CUSTOMERID' and tableId=(select id from data_engine_table where configid=(select id from data_engine_config where name='PRESENTMENT_RESPONSE_EMNDT_BD'));
			        update DATA_ENGINE_COLUMN set Name='AMOUNTCLEARED' where Name='CHEQUEAMOUNT' and tableId=(select id from data_engine_table where configid=(select id from data_engine_config where name='PRESENTMENT_RESPONSE_EMNDT_BD'));
                    update DATA_ENGINE_COLUMN set Name='CLEARINGDATE' where Name='CYCLEDATE' and tableId=(select id from data_engine_table where configid=(select id from data_engine_config where name='PRESENTMENT_RESPONSE_EMNDT_BD'));
			]]>
		</sql>
	</changeSet>
	<changeSet id="160" author="naga.g">
		<sql>
			<![CDATA[
				Insert into RBFieldDetails (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('PROVSN','PROVSN','NonStarter','NonStarter','int',1,'0','0',null,'static,global,dbvalue',null);
				Insert into RBFieldDetails (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('PROVSN','PROVSN','Starter','Starter','int',1,'0','0',null,'static,global,dbvalue',null);
			]]>
		</sql>
	</changeSet>
	<changeSet id="161" author="naga.g">
		<createTable tableName="SUBVENTION_REQUEST">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" primaryKey="true" primaryKeyName="pk_subvention_request" />
			</column>
			<column name="HOSTREFERENCE" type="varchar(50)" />
			<column name="ISSUER" type="varchar(50)" />
			<column name="ACQUIRER" type="varchar(100)" />
			<column name="MERCHANTUSERNAME" type="varchar(50)" />
			<column name="MANUFACTURERNAME" type="varchar(50)" />
			<column name="STORENAME" type="varchar(50)" />
			<column name="STORECITY" type="varchar(50)" />
			<column name="STORESTATE" type="varchar(50)" />
			<column name="MANUFACTUREID" type="varchar(20)" />
			<column name="TERMINALID" type="varchar(8)" />
			<column name="EMIOFFER" type="Number(10)" />
			<column name="RRN" type="Number(18,0)" />
			<column name="BANKAPPROVALCODE" type="Number(18,0)" />
			<column name="TransactionDateTime" type="datetime" />
			<column name="SETTLEMENTDATETIME" type="datetime" />
			<column name="TRANSACTIONAMOUNT" type="decimal(18, 0)" />
			<column name="TXNSTATUS" type="varchar(50)" />
			<column name="PRODUCTCATEGORY" type="varchar(100)" />
			<column name="SUBCAT1" type="varchar(100)" />
			<column name="SUBCAT2" type="varchar(100)" />
			<column name="SUBCAT3" type="varchar(100)" />
			<column name="PRODUCTSRNO" type="varchar2(50)" />
			<column name="CARDHASH" type="Number(18,0)" />
			<column name="EMIMODEL" type="Number(18,0)" />
			<column name="POSID" type="Number(10)" />
			<column name="DISCOUNTRATE" type="Number(10)" />
			<column name="DISCOUNTAMOUNT" type="Number(10)" />
			<column name="CASHBACKRATE" type="Number(10)" />
			<column name="CASHBACKAMOUNT" type="decimal(18, 0)" />
			<column name="NBFCCASHBACKRATE" type="Number(10)" />
			<column name="NBFCCASHBACKAMOUNT" type="decimal(18, 0)" />
			<column name="LINKEDTRANID" type="Number(10)" />
		</createTable>
	</changeSet>
	<changeSet id="162" author="naga.g">
		<sql>
			<![CDATA[
					 DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='SUBVENTION_REQUEST_UPLOAD');
 					 DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='SUBVENTION_REQUEST_UPLOAD');
 					 DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='SUBVENTION_REQUEST_UPLOAD';
             
 					 DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'SUBVENTION_REQUEST_UPLOAD'));
 					 DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'SUBVENTION_REQUEST_UPLOAD');
 					 DELETE FROM DATA_ENGINE_CONFIG where Name = 'SUBVENTION_REQUEST_UPLOAD';

 
  					 INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'SUBVENTION_REQUEST_UPLOAD', 'subvention_request  Emandate .', 12,'subvention', NULL, NULL, NULL , 0, 1, NULL, 'LOYALTY_TRANSACTIONID,ISSUER,ACQUIRER,MANUFACTURER_NAME,MERCHANT_NAME,STORE_NAME,STORE_CITY,STORE_STATE,BANK_MID,BANK_TID,EMI_OFFER,BANKRRN,BANKAPPROVALCODE,BANKDATETIME,SETTLEMENTTIME,TRANSACTIONAMOUNT,TXSTATUS,PRODUCT_CATEGORY,SUB_CAT1,SUB_CAT2,SUB_CAT3,PRODUCT_SR__NO,CARD_HASH,EMI_MODEL,POS_ID,Discount Rate,
   						Discount Amount,CashBack Rate,Cashback Amount ,NBFC Cashback Rate,NBFC Cashback Amount ', '', 'C', '/opt/MMFL/PFF/subvention', 'Subventionreq', '.xlsx', 0, NULL, '${SEQ_FILE},_${yyyyMMddHHmmss}', NULL, 0, NULL, 1, 1); 

  					 INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD'), 'SUBVENTION_REQUEST',  0, 'JOB_ID', 'JOB_ID = :JOB_ID', NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
  
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'HOSTREFERENCE', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'ISSUER', 0, 'N', NULL,'MMFL', NULL, NULL, 1, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'ACQUIRER', 0, 'N', NULL, 'MMFL', NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'MERCHANTUSERNAME', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O'); 
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'MANUFACTURERNAME', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'STORENAME', 0, 'N', NULL, NULL, NULL, NULL, 5, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'STORECITY', 0, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');
 				     INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'STORESTATE', 0, 'N', NULL, NULL, NULL, NULL, 7, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'MANUFACTUREID', 0, 'N', NULL, NULL, NULL, NULL, 8, NULL, NULL, NULL,NULL,'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'TERMINALID', 0, 'N', NULL, NULL, NULL, NULL, 9, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'EMIOFFER', 0, 'N', NULL, NULL, NULL, NULL,10, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'RRN', 0, 'N', NULL, NULL, NULL, NULL, 11, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'BANKAPPROVALCODE', 0, 'N', NULL, NULL, NULL, NULL, 12, NULL, NULL, NULL,NULL, 'O');
					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'TRANSACTIONDATETIME', 1, 'N', NULL, NULL, NULL, NULL,13, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'SETTLEMENTDATETIME', 1, 'N', NULL, NULL, NULL, NULL, 14, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'TRANSACTIONAMOUNT', 0, 'N', NULL, NULL, NULL, NULL, 15, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'TXNSTATUS', 0, 'N', NULL, NULL, NULL, NULL, 16, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'PRODUCTCATEGORY', 0, 'N', NULL, NULL, NULL, NULL, 17, NULL, NULL, NULL,NULL,'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'SUBCAT1', 0, 'N', NULL, NULL, NULL, NULL,18, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'SUBCAT2', 0, 'N', NULL, NULL, NULL, NULL, 19, NULL, NULL, NULL, NULL, 'O'); 
                     INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'SUBCAT3', 0, 'N', NULL, NULL, NULL, NULL, 20, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'PRODUCTSRNO', 0, 'N', NULL, NULL, NULL, NULL,21, NULL, NULL, NULL,NULL, 'O'); 
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'CARDHASH', 0, 'N', NULL, NULL, NULL, NULL, 22, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'EMIMODEL', 0, 'N', NULL, NULL, NULL, NULL,23, NULL, NULL, NULL, NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'POSID', 0, 'N', NULL, NULL, NULL, NULL,24, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'DISCOUNTRATE', 0, 'N', NULL, NULL, NULL, NULL,25, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'DISCOUNTAMOUNT', 0, 'N', NULL, NULL, NULL, NULL,26, NULL, NULL, NULL,NULL, 'O');
 					 INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'CASHBACKRATE', 0, 'N', NULL, NULL, NULL, NULL,27, NULL, NULL, NULL,NULL, 'O');
                     INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'CASHBACKAMOUNT', 0, 'N', NULL, NULL, NULL, NULL,28, NULL, NULL, NULL,NULL, 'O');
                     INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'NBFCCASHBACKRATE', 0, 'N', NULL, NULL, NULL, NULL,29, NULL, NULL, NULL,NULL, 'O');
                     INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SUBVENTION_REQUEST' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'SUBVENTION_REQUEST_UPLOAD')), 'NBFCCASHBACKAMOUNT', 0, 'N', NULL, NULL, NULL, NULL,30, NULL, NULL, NULL,NULL, 'O');
  
 					 UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
 					 UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
 					 UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
 
			]]>
		</sql>
	</changeSet>
	<changeSet id="163" author="naga.g">
		<sql>
			<![CDATA[
					Delete 	from BMTAEEVENTS where aeeventcode='OEMSBV';
					INSERT INTO BMTAEEVENTS(aeeventcode, aeeventcodedesc, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, active) VALUES ('OEMSBV', 'OEM Suvention accounting', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);

					Delete 	from BMTAMOUNTCODES where ALLOWEDEVENT='OEMSBV';
					Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('OEMSBV',0,'ae_oemsbv','OEM Suvention amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
			]]>
		</sql>
	</changeSet>
	<changeSet id="164" author="naga.g">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SUBVENTIONPROCESS_UPLOAD_VIEW', 'Group for Subvention process upload enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SUBVENTIONPROCESS_UPLOAD_MAKER', 'Group for Subvention process upload maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SUBVENTIONPROCESS_UPLOAD_APPROVER', 'Group for Subvention process upload approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Subvention_Process_Upload','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SETTLEMENTPROCESS_UPLOAD_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_Subvention_Process_Upload'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SETTLEMENTPROCESS_UPLOAD_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_Subvention_Process_Upload'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="166" author="vijaya.a">
		<sql>
 			<![CDATA[
 				DELETE FROM DATA_ENGINE_COLUMN  where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'DISB_AXIS_IMPORT'));
				DELETE from DATA_ENGINE_TABLE where configid = (select id from DATA_ENGINE_CONFIG where name = 'DISB_AXIS_IMPORT');
				DELETE from DATA_ENGINE_CONFIG where name = 'DISB_AXIS_IMPORT';
								
				INSERT into DATA_ENGINE_CONFIG  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'DISB_AXIS_IMPORT','HDFC Disbursement Response File.',1,null,null,null,'^',0,0, null, null, null,'C','/opt/Mahendra/PFF/MMFL/disbursement','Disbursement_','.txt',0,current_timestamp,null,null,'0',null,1,1);
				INSERT into DATA_ENGINE_TABLE values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE),(Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT'),'DISBURSEMENT_REQUESTS',2,'ID',null,null,null,null,null,null,NULL,18,0,0);
								
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'RESP_BATCH_ID',               0,'N',NULL,NULL,'${FILE_ID}',NULL,'0',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'ID',                     0,'N',NULL,NULL,   NULL,     NULL,'0',NULL,NULL,NULL,NULL,'M');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'CORPORATECODE',               1,'N',NULL,'',   NULL,     NULL,'1',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'PAYMENTRUNDATE',              1,'N',NULL,'',   NULL,     NULL,'2',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'DISBURSEMENT_TYPE',           0,'N',NULL,NULL,   NULL,     NULL,'3',NULL,NULL,NULL,NULL,'M');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'TRANSACTIONUTRNO',            1,'N',NULL,'',   NULL,     NULL,'4',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'CHEQUE_NUMBER',               0,'N',NULL,NULL,   NULL,     NULL,'5',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'STATUS',                  0,'N',NULL,NULL,   NULL,     NULL,'6',NULL,NULL ,NULL,NULL,'M');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'REJECT_REASON',           0,'N',NULL,NULL,   NULL,     NULL,'7',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'BATCHNO',                     1,'N',NULL,'',   NULL,     NULL,'8',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'CUSTCIF',              0,'N',NULL,NULL,   NULL,     NULL,'9',NULL,NULL,NULL,NULL,'M');--ID
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'DISBURSEMENT_DATE',              1,'N',NULL,'',   NULL,     NULL,'10',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'TRANSACTIONREF',             0,'N',NULL,NULl,   NULL,     NULL,'11',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'DISBURSEMENT_AMOUNT',         0,'N',NULL,NULL,   NULL,     NULL,'12',NULL,NULL,NULL,NULL,'M');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'PARTNERBANK_ACCOUNT',         0,'N',NULL,NULL,   NULL,     NULL,'13',NULL,NULL,NULL,NULL,'M');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'CORPORATEIFSCCODE',           1,'N',NULL,'',   NULL,     NULL,'14',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'DEBITCREDITINDICATOR',        1,'N',NULL,'',   NULL,     NULL,'15',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'BENFICIARY_ACCOUNT',          0,'N',NULL,NULL,   NULL,     NULL,'16',NULL,NULL,NULL,NULL,'O');
				INSERT INTO data_engine_column VALUES((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_AXIS_IMPORT')), 'BATCHNO',                     1,'N',NULL,'',   NULL,     NULL,'17',NULL,NULL,NULL,NULL,'O');
								
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
 			]]>
		</sql>
	</changeSet>

	<changeSet id="167" author="Srikanth">
		<sql>
 			<![CDATA[
 				update smtparameters set SYSPARMVALUE='Y' where sysparmcode='CD_CASHBACK_JOB_REQUIRED';
 				update promotions set CBPYT='SEPRT' where CBPYT is null;
 			]]>
		</sql>
	</changeSet>

	<changeSet id="169" author="naga.g">
		<sql>
 			<![CDATA[
 				Delete from CATEGORYWISEEVENTS Where AEEVENTCODE= 'OEMSBV' and CATEGORYCODE= 'C';
				INSERT INTO CATEGORYWISEEVENTS VALUES('OEMSBV','C',1,0,(Select max(seqorder)+1 from CATEGORYWISEEVENTS Where CATEGORYCODE= 'C'));
 			]]>
		</sql>
	</changeSet>

	<changeSet id="170" author="naga.g">
		<createView viewName="SETTLEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT DISTINCT(SR.REQUESTBATCHID),DC.ID,DC.NAME,DC.UPLOADPATH FILELOCATION,DS.FILENAME,DS.ENDTIME,DS.STATUS,DC.Id As ConfigId,DC.PostEvent,'' As HOSTREFERENCE ,'' AS TRANSACTIONAMOUNT,SR.TRANSACTIONDATETIME,SR.MERCHANTNAME FROM DATA_ENGINE_CONFIG DC INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME INNER JOIN SETTLEMENT_REQUEST SR ON SR.REQUESTBATCHID=DS.ID
		</createView>
	</changeSet>

	<changeSet id="171" author="srikanth.m">
		<sql>
			<![CDATA[
				Update BMTAMOUNTCODES set AMOUNTCODE = 'ae_oemSbvAmount' where AMOUNTCODE='ae_oemsbv';
				Update ManualAdvise set BALANCEAMT=ADVISEAMOUNT-PAIDAMOUNT-WAIVEDAMOUNT-RESERVEDAMT;
				Update ManualAdvise_Temp set BALANCEAMT=ADVISEAMOUNT-PAIDAMOUNT-WAIVEDAMOUNT-RESERVEDAMT;
	]]>
		</sql>
	</changeSet>

	<changeSet id="172" author="vijaya.a">
		<sql>
			<![CDATA[
				Update data_engine_column set RuleForValue = 'if((STATUS == ''SUCCESS'')){Result = ''E'';  return;} else if((STATUS == ''FAIL'')) {Result = ''R'';  return;}' where name = 'STATUS' And TableID in (Select Id From Data_Engine_Table Where ConfigId In (Select Id From Data_Engine_Config Where Name = 'DISB_AXIS_IMPORT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="173" author="srikanth.m">
		<sql>
			<![CDATA[
				Update reportfilterfields set fielddbname='cs.Custcif' where reportid in (select reportid from reportconfiguration where MENUITEMCODE='menu_Item_SubventionPendingKnockoff') and fieldid=1;
			]]>
		</sql>
	</changeSet>

	<changeSet id="174" author="Vijaya.a">
		<sql>
			<![CDATA[
				Delete from DATA_ENGINE_COLUMN  where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'DISB_EXPORT_DEFAULT'));
				Delete from DATA_ENGINE_TABLE where configid = (select id from DATA_ENGINE_CONFIG where name = 'DISB_EXPORT_DEFAULT');
				Delete from DATA_ENGINE_CONFIG where name = 'DISB_EXPORT_DEFAULT';
								
				Insert into DATA_ENGINE_CONFIG  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'DISB_EXPORT_DEFAULT','Disbursements[NEFT/RTGS/CHEQUE/DD] Download.',2,null,null,null,'^',0,0, null, null, null,'A','/opt/Mahendra/PFF/MMFL/disbursement','MMFL_Axis_','.txt',0,current_timestamp,'${SEQ_FILE},_${yyyyMMddHHmmss}',null,'0',null,1,1);
				Insert into DATA_ENGINE_TABLE values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE),(Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT'),'DISBURSEMENT_REQUESTS',0,'ID','ID IN (:ID)','UPDATE DISBURSEMENT_REQUESTS SET BATCH_ID = :FILEID, STATUS = ''AC'' WHERE ID IN (:ID)QUERY:UPDATE FINADVANCEPAYMENTS SET STATUS = ''AC'' WHERE PAYMENTID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')QUERY:UPDATE PAYMENTINSTRUCTIONS SET STATUS = ''AC'' WHERE PAYMENTINSTRUCTIONID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')',null,null,null,null,null,0,0,0);
								
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'TXN_TYPE',                1,'N',null,'P',  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'DISBURSEMENT_TYPE',      0,'N',null,null,  null,null,'0',null,'if((DISBURSEMENT_TYPE == ''N'')){Result = ''NE'';  return;} else if((DISBURSEMENT_TYPE == ''R'')) {Result = ''RT'';  return;} else if((DISBURSEMENT_TYPE == ''IMPS'')) {Result = ''PA'';  return;} else if((DISBURSEMENT_TYPE == ''C'')) {Result = ''CC'';  return;}',null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'CORP_CODE',      1,'N',null,'',  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'ID',     0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'PARTNERBANK_ACCOUNT',    0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'DISBURSEMENT_DATE',         0,'N',null,null,  null,null,'0',null,null,null,'DATE:yyyy-MM-dd','O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'TRANSACTION_CURRENCY',	  1,'N',null,'INR',  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'DISBURSEMENT_AMOUNT',	  0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_NAME',	  0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'CUSTCIF',	  0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_ACCOUNT',	  0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_ACC_TYPE',  1,'N',null,'',  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_ADDRESS1',  0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_ADDRESS2',  0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_ADDRESS3',  0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIRY_CITY',         0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIRY_STATE',         0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_ADDRESS4',         0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'IFSC_CODE',         0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_BANK',         0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'MICR_CODE',           0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'CHEQUE_NUMBER',       0,'N',null,null,  null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'PAYMENT_DATE',         0,'N',null,null,	null,null,'0',null,null,null,'DATE:yyyy-MM-dd','O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'DRAWEE_LOCATION',      0,'N',null,null,	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'PRINT_LOCATION',      0,'N',null,null,	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIRY_EMAIL',         0,'N',null,null,	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIRY_EMAIL1',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'BENFICIARY_MOBILE',       0,'N',null,null,	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'CORP_BATCH_NUM',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'COMAPANY_CODE',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'PRODUCT_CODE',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'FINREFERENCE',       0,'N',null,null,	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'EXTRA2',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');--ID
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'EXTRA3',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'EXTRA4',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'EXTRA5',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'DISBURSEMENT_TYPE',      0,'N',null,null,	null,null,'0',null,'if((DISBURSEMENT_TYPE == ''N'')){Result = ''NE'';  return;} else if((DISBURSEMENT_TYPE == ''R'')) {Result =''RT'';  return;} else if((DISBURSEMENT_TYPE == ''IMPS'')) {Result = ''PA'';  return;} else if((DISBURSEMENT_TYPE == ''C'')) {Result = ''CC'';  return;}',null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'CORP_EMAIL_ADDRESS',       1,'N',null,'',	null,null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'TRANSMISSIONDATE',       1,'N',null,null,	'${SysDate}',null,'0',null,null,null,'DATE:yyyy-MM-dd','O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'USERID',       1,'N',null,null,	'${USER_NAME}',null,'0',null,null,null,null,'O');
				Insert into DATA_ENGINE_COLUMN  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DISBURSEMENT_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'DISB_EXPORT_DEFAULT')), 'USERDEPARTMENT',       1,'N',null,null,	'${USER_DEPT_CODE}',null,'0',null,null,null,null,'O');
							
								
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="175" author="vijaya.a">
		<sql>
			<![CDATA[
				Update data_engine_column set Name = 'UTILITYCODE', DEFAULTVALUE = 'HDFC01735000015440' where name = 'UtilityCode' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'SPONSORBANK', DEFAULTVALUE = 'UTIB0000248' where name = 'SponsorBank' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'REFERENCE2' where name = 'DOCUMENTNAME' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'REFERENCE1' where name = 'MANDATEID' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'MANDATEID' where name = 'REFERENCE2' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'DOCUMENTNAME' where name = 'REFERENCE1' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'START_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'END_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'INITIATE_DBUSINESS_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'SPONSOR_CHECKER_APPROVALDATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'CREATION_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'ACCEPTANCE_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'INWARD_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				
				Update data_engine_column set DEFAULTVALUE = 'HDFC01735000015440' where name = 'CORPORATE_UTILITY_CODE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
				Update data_engine_column set DEFAULTVALUE = 'M'||'&'||'M Fin Ser Ltd.' where name = 'CORPORATENAME/USERNAME' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
				
				Update data_engine_column set Format = 'Date:dd/MM/yyyy' where name = 'CYCLEDATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				
				update data_engine_column set Name = 'IFSC_CODE' where Name = 'MICR_CODE' And TableId in (select Id from data_engine_table where configid in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				update data_engine_config set FilePrefixName = 'MMFSL_MANDATEREQ_' where Name = 'MANDATES_EXPORT';
				update data_engine_config set fileExtension = '.xlxs' where Name in ('MANDATES_EXPORT', 'MANDATES_IMPORT');
				update data_engine_config set Header = 'Utility Code, Corporate Name, UMRN, Customer To be debited, Customer IFSC, Customer Debit AC, TRANSACTION ID Ref, Amount, Date of Txn, File No' where name = 'PRESENTMENT_REQUEST';
				update data_engine_column set Name = 'IFSC' where Name = 'MICR_CODE' And TableId in (select Id from data_engine_table where configid in (select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
				update data_engine_config set FilePrefixname = 'PRESENTREQ12_' where Name = 'PRESENTMENT_REQUEST';
				update data_engine_config set worksheet = 'Presentment' where Name = 'PRESENTMENT_REQUEST';
				update data_engine_config set fileExtension = '.xlxs' where Name in ('PRESENTMENT_RESPONSE');
			]]>
		</sql>
	</changeSet>

	<changeSet id="176" author="vijaya.a">
		<sql>
			<![CDATA[
				Update data_engine_column set Name = 'UTILITYCODE', DEFAULTVALUE = 'HDFC01735000015440' where name = 'UtilityCode' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'SPONSORBANK', DEFAULTVALUE = 'UTIB0000248' where name = 'SponsorBank' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'REFERENCE2' where name = 'DOCUMENTNAME' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'REFERENCE1' where name = 'MANDATEID' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'MANDATEID' where name = 'REFERENCE2' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'DOCUMENTNAME' where name = 'REFERENCE1' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				
				Update data_engine_column set Format = 'MM/dd/yyyy' where name = 'START_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'MM/dd/yyyy' where name = 'END_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'MM/dd/yyyy' where name = 'INITIATE_DBUSINESS_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'MM/dd/yyyy' where name = 'SPONSOR_CHECKER_APPROVALDATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'MM/dd/yyyy' where name = 'CREATION_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'MM/dd/yyyy' where name = 'ACCEPTANCE_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				Update data_engine_column set Format = 'MM/dd/yyyy' where name = 'INWARD_DATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
				
				Update data_engine_column set DEFAULTVALUE = 'HDFC01735000015440' where name = 'CORPORATE_UTILITY_CODE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
				Update data_engine_column set DEFAULTVALUE = 'M'||'&'||'M Fin Ser Ltd.' where name = 'CORPORATENAME/USERNAME' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
				
				Update data_engine_column set Format = 'DATE:dd-MM-yyyy' where name = 'CYCLEDATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
				
				update data_engine_column set Name = 'IFSC_CODE' where Name = 'MICR_CODE' And TableId in (select Id from data_engine_table where configid in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				update data_engine_config set FilePrefixName = 'MMFSL_MANDATEREQ_' where Name = 'MANDATES_EXPORT';
				update data_engine_config set Header = 'Utility Code, Corporate Name, UMRN, Customer TO be debited, Customer IFSC, Customer Debit AC, TRANSACTION ID Ref, Amount, Date of Txn, File No' where name = 'PRESENTMENT_REQUEST';
				update data_engine_column set Name = 'IFSC' where Name = 'MICR_CODE' And TableId in (select Id from data_engine_table where configid in (select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
				update data_engine_config set FilePrefixname = 'PRESENTREQ_' where Name = 'PRESENTMENT_REQUEST';
				update data_engine_config set worksheet = 'Presentment' where Name = 'PRESENTMENT_REQUEST';
				update data_engine_config set fileExtension = '.xlsx' where Name in ('PRESENTMENT_RESPONSE', 'PRESENTMENT_REQUEST');
				update data_engine_config set worksheet = 'DATA' where Name = 'MANDATES_IMPORT';
				update data_engine_config set fileExtension = '.xlsx' where Name = 'MANDATES_IMPORT';
				update data_engine_config set fileExtension = '.xls' where Name = 'MANDATES_EXPORT';
				update data_engine_config set FileNameFormat = '${MMddyyyy}' where Name = 'MANDATES_EXPORT';
				Update data_engine_config set Header = 'ROW:{Date, Utility Code, UMRN No.,Sponsor Bank, Client Name,Applicant Name,Bank Account Holder Name,Bank Name, Branch Name,Bank Account Number, IFSC, Account type, Start Date, End Date, Amount (Rs.), No. of Installments, Frequency, Reference No.1, Reference No.2}' Where Name = 'MANDATES_EXPORT';
				update data_engine_column set skip = 0 Where Name in ('START_DATE', 'END_DATE', 'INITIATE_DBUSINESS_DATE', 'SPONSOR_CHECKER_APPROVALDATE', 'CREATION_DATE','ACCEPTANCE_DATE') And TableId in (Select Id From Data_Engine_Table Where Configid In (Select Id From Data_Engine_Config Where Name = 'MANDATES_IMPORT'));
				update data_engine_config set FilePrefixname = 'TRANSACTION FILE-MIS-M'||'&'||'M FIN SER LTD.-000017-0303_' Where name = 'PRESENTMENT_RESPONSE';
			]]>
		</sql>
	</changeSet>

	<changeSet id="177" author="vijaya.a">
		<sql>
		<![CDATA[
			update data_engine_config set fileExtension = '.xlsx' where Name in ('PRESENTMENT_RESPONSE');
			update data_engine_config set fileExtension = '.xls' where Name in ('PRESENTMENT_REQUEST');
			update data_engine_config set Header = 'Utility code, Corporate Name, UMRN, Customer TO be debited, Customer IFSC, Customer Debit AC, TRANSACTION ID Ref, Amount, Date of Txn, File No' where name = 'PRESENTMENT_REQUEST';
			update data_engine_config set Worksheet = 'NACH' Where Name = 'PRESENTMENT_RESPONSE';
		]]>
		</sql>
	</changeSet>

	<changeSet id="178" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_table set name='PRESENTMENT_REQ_DETAILS' where configid in (select id from data_engine_config where name in ('PRESENTMENT_REQUEST_EMNDT_BD'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="179" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_config set UPLOADPATH='/opt/Mahindra_8088/PFF/BASE/disbursementdownload' where name in('DISB_EXPORT_DEFAULT');
			]]>
		</sql>
	</changeSet>

	<changeSet id="180" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set Name = 'CLEARINGDATE' where Name = 'DATEOFTXN' And TableId in (select Id from data_engine_table where configid in (select Id from data_engine_config where Name = 'PRESENTMENT_RESPONSE'));
				update data_engine_column set Format = 'dd/MM/yyyy' where name = 'CLEARINGDATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'PRESENTMENT_RESPONSE'));
				update data_engine_column set skip = 0 where name = 'CLEARINGDATE' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'PRESENTMENT_RESPONSE'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="181" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_table set FILTER='HEADER_ID IN (:HEADER_ID)',KEYFIELDS='HEADER_ID' where configid in (select id from data_engine_config where name in ('DISB_EXPORT_DEFAULT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="182" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_config set FileNameFormat = '${ddMMYYYYHms}' where Name = 'MANDATES_EXPORT';
			]]>
		</sql>
	</changeSet>

	<changeSet id="183" author="satyanarayana.g">
		<sql>
			<![CDATA[
				update reportfilterfields set fielddbname='FM.FinBranch' where reportid in (
				select reportid from reportconfiguration where menuitemcode='menu_Item_WriteoffReport') and fieldid=1;

				update reportfilterfields set fielddbname='FM.fintype' where reportid in (
				select reportid from reportconfiguration where menuitemcode='menu_Item_WriteoffReport') and fieldid=2;

				update reportfilterfields set fielddbname='C.custcif' where reportid in (
				select reportid from reportconfiguration where menuitemcode='menu_Item_WriteoffReport') and fieldid=3;

				update reportfilterfields set fielddbname='FM.Finreference' where reportid in (
				select reportid from reportconfiguration where menuitemcode='menu_Item_WriteoffReport') and fieldid=4;
			]]>
		</sql>
	</changeSet>

	<changeSet id="184" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_config set HEADER='Debit Reference Number, LAN No, Customer ID, Debit Amount, Debit Date'  where name in('PRESENTMENT_REQUEST_EMNDT_BD');
			]]>
		</sql>
	</changeSet>

	<changeSet id="185" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_config set FilePrefixName = 'Presentment_REQUEST_', FileNameFormat = '${ddMMYYYYHms}' where Name = 'PRESENTMENT_REQUEST';
			]]>
		</sql>
	</changeSet>

	<changeSet id="186" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set Name = 'UPPER_LIMIT' where Name = 'DEBIT_AMOUNT' And TableId in (select Id from data_engine_table where configid in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="187" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_config set FILENAMEFORMAT = '${ddMMYYYYHHmmss}' where name = 'PRESENTMENT_REQUEST';
				update data_engine_config set FILENAMEFORMAT = '${ddMMYYYYHHmmss}' where name = 'MANDATES_EXPORT';
				
				update data_engine_config set FileExtension = '.txt' where name in ('PRESENTMENT_REQUEST_EMNDT_BD', 'PRESENTMENT_RESPONSE_EMNDT_BD');
				update data_engine_config set Header = 'ROW:{Debti Reference Nu, LAN No, Customer ID, Debit Amount, Debit Date}' Where name = 'PRESENTMENT_REQUEST_EMNDT_BD';
			]]>
		</sql>
	</changeSet>

	<changeSet id="188" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_config set FilePrefixName = 'Transaction File-Mahindra Finanace', FileNameFormat = null where name = 'PRESENTMENT_REQUEST_EMNDT_BD';
				update data_engine_config set FilePrefixName = 'PresentmentResponse_MAHINDRAFI_', FileNameFormat = null where name = 'PRESENTMENT_RESPONSE_EMNDT_BD';
			]]>
		</sql>
	</changeSet>

	<changeSet id="189" author="naga.g">
		<sql>
			<![CDATA[
				update  data_engine_config set UPLOADPATH='/opt/Mahindra_8088/PFF/BASE/presentment/request'  where name in ('PRESENTMENT_REQUEST_EMNDT_BD');
			]]>
		</sql>
	</changeSet>

	<changeSet id="190" author="naga.g">
		<sql>
			<![CDATA[
				Update data_engine_column set Name = 'REFERENCE2' where name = 'DOCUMENTNAME' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'REFERENCE1' where name = 'MANDATEID' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'MANDATEID' where name = 'REFERENCE2' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
				Update data_engine_column set Name = 'DOCUMENTNAME' where name = 'REFERENCE1' And TableId in (select Id from data_engine_table where configId in (select Id from data_engine_config where Name = 'MANDATES_EXPORT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="191" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_config set UPLOADPATH='/opt/Mahindra_8088/PFF/BASE/presentment/response' where name in ('PRESENTMENT_RESPONSE_EMNDT_BD');
			]]>
		</sql>
	</changeSet>

	<changeSet id="192" author="naga.g">
		<sql>
			<![CDATA[
				update data_engine_table set STATUSUPDATE=null where configid in (select  id from data_engine_config where name in ('DISB_EXPORT_DEFAULT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="193" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set ConstraintType = 'M' where Name = 'ID' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set ConstraintType = 'M' where Name = 'PARTNERBANK_ACCOUNT' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'CORP_CODE' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'BENFICIARY_ACC_TYPE' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'BENFICIRY_EMAIL1' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'CORP_BATCH_NUM' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'COMAPANY_CODE' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'PRODUCT_CODE' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'EXTRA2' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'EXTRA3' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'EXTRA4' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'EXTRA5' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DefaultValue = ' ' where Name = 'CORP_EMAIL_ADDRESS' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
				update data_engine_column set DerivedFrom = '${SYS_DATE}', Format = 'DATE:yyyy-MM-ddHHmmss' where Name = 'TRANSMISSIONDATE' And Tableid in (select Id from data_engine_table where ConfigId in (select Id from data_engine_config where Name = 'DISB_EXPORT_DEFAULT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="194" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_config set FILENAMEFORMAT = '${yyyyMMddHHmmss}', FILEPREFIXNAME = 'Transaction File-Mahindra Finanace_' Where Name = 'PRESENTMENT_REQUEST_EMNDT_BD';
			]]>
		</sql>
	</changeSet>

	<changeSet id="195" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_config set FilePrefixName = 'Payment_MAHFINB_' where name = 'PRESENTMENT_RESPONSE_EMNDT_BD';
			]]>
		</sql>
	</changeSet>

	<changeSet id="196" author="vijaya.a">
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_IMPORT';
																	
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_IMPORT'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_IMPORT');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'MANDATES_IMPORT';
													
				INSERT into DATA_ENGINE_CONFIG  values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'MANDATES_IMPORT', 'Mandate Response file',12,'DATA',null,null,null,0,1, null,null, null,'C','/opt/pennant/PFF/MMFSL/Axis/mandates/response', 'MMFSL_MANDATERES','.xlsx',0, current_timestamp,null,null,'0',null,1,1);
				INSERT into DATA_ENGINE_TABLE values ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE),(Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT'),'MANDATE_RESPONSE',1,'ID',null, null,null,null,null,null,null,33,0,0);
				
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'RESP_BATCH_ID', 0, 'N', NULL, NULL, '${FILE_ID}', NULL, '0', NULL, NULL, NULL, NULL, 'O');												
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'MANDATE_REG_NO', 0, 'N', NULL, NULL, NULL, NULL, '0', NULL, NULL, NULL, NULL, 'M');			
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, '1', NULL, 'if((STATUS == ''INITIAL REJECTED'')){Result = ''Y'';  return;} else if((STATUS == ''INITIAL ACTIVE'')) {Result = ''N'';  return;} ', NULL, NULL, 'M');			
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'REMARKS', 0, 'N', NULL, NULL, NULL, NULL, '2', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'MANDATEID', 0, 'N', NULL, NULL, NULL, NULL, '3', NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'PAYMENTTYPE', 1, 'N', NULL, '', NULL, NULL, '4', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACCT_NUMBER', 0, 'N', NULL, NULL, NULL, NULL, '5', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'BANK_NAME', 0, 'N', NULL, NULL, NULL, NULL, '6', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'BANK_CODE', 0, 'N', NULL, NULL, NULL, NULL, '7', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CUSTOMER_NAME', 0, 'N', NULL, NULL, NULL, NULL, '8', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CREDITORNAME', 1, 'N', NULL, '', NULL, NULL, '9', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'FREQUENCY', 0, 'N', NULL, NULL, NULL, NULL, '10', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'DEBIT_AMOUNT', 0, 'N', NULL, NULL, NULL, NULL, '11', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'START_DATE', 0, 'N', NULL, NULL, NULL, NULL, '12', NULL, NULL, NULL, 'MM/dd/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'END_DATE', 0, 'N', NULL, NULL, NULL, NULL, '13', NULL, NULL, NULL, 'MM/dd/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'INITIATE_DBUSINESS_DATE', 0, 'N', NULL, NULL, NULL, NULL, '14', NULL, NULL, NULL, 'MM/dd/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SPONSOR_CHECKER_APPROVALDATE', 0, 'N', NULL, NULL, NULL, NULL, '15', NULL, NULL, NULL, 'MM/dd/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CREATION_DATE', 0, 'N', NULL, NULL, NULL, NULL, '16', NULL, NULL, NULL, 'MM/dd/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACCEPTANCE_DATE', 0, 'N', NULL, NULL, NULL, NULL, '17', NULL, NULL, NULL, 'MM/dd/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CREDITORUTILITYCODE', 1, 'N', NULL, '', NULL, NULL, '18', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'PRO_DATE', 1, 'N', NULL, '', NULL, NULL, '19', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'LOT', 0, 'N', NULL, NULL, NULL, NULL, '20', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SRNO', 1, 'N', NULL, '', NULL, NULL, '21', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CLIENTCODE', 1, 'N', NULL, '', NULL, NULL, '22', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'OLD_UMRN', 1, 'N', NULL, '', NULL, NULL, '23', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'DATE', 1, 'N', NULL, '', NULL, NULL, '24', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SP_BKCODE', 1, 'N', NULL, '', NULL, NULL, '25', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACTION', 1, 'N', NULL, '', NULL, NULL, '26', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'ACCT_TYPE', 0, 'N', NULL, NULL, NULL, NULL, '27', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'CUSTOMER_PHONE', 0, 'N', NULL, NULL, NULL, NULL, '28', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'PICKUP_LOCATION', 1, 'N', NULL, '', NULL, NULL, '29', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'INWARD_DATE', 1, 'N', NULL, '', NULL, NULL, '30', NULL, NULL, NULL, 'MM/dd/yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SP_BANK', 1, 'N', NULL, '', NULL, NULL, '31', NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_RESPONSE' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_IMPORT')), 'SCHEME', 1, 'N', NULL, '', NULL, NULL, '32', NULL, NULL, NULL, NULL, 'O');
													
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select COALESCE(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select COALESCE(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select COALESCE(MAX(ID), 1) FROM DATA_ENGINE_COLUMN); 
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#737.1.0_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
			   Truncate table deps_saved_ddl;
			]]>
		</sql>
	</changeSet>


	<changeSet id="DE#737.1_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#737.1" author="Gopal.p">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FA.PAYMENTID,
				FA.FINREFERENCE,
				'D' CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN FA.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN FA.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN
				FA.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE FA.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				FA.AMTTOBERELEASED,
				FA.DISBDATE,
				FA.LLDATE,
				FA.PAYABLELOC,
				FA.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				FA.BENEFICIARYACCNO,
				CASE
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				OR FA.PAYMENTTYPE = 'DD'
				THEN
				FA.LIABILITYHOLDNAME
				ELSE FA.BENEFICIARYNAME
				END BENEFICIARYNAME,
				(FA.PHONECOUNTRYCODE || FA.PHONEAREACODE) || FA.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				BRCA.CustAddrHNbr ||','|| BRCA.CustAddrStreet ||','|| BRC.PCCITYNAME ||','|| BRS.CPPROVINCENAME  BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				FA.STATUS,
				FA.DESCRIPTION REMARKS,
				FA.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID
				PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				FA.INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT
				FROM FINADVANCEPAYMENTS FA
				JOIN
				(SELECT FINANCEMAIN_TEMP.CUSTID,
				FINANCEMAIN_TEMP.FINREFERENCE,
				FINANCEMAIN_TEMP.FINTYPE,
				FINANCEMAIN_TEMP.FINISACTIVE
				FROM FINANCEMAIN_TEMP
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM
				ON FM.FINREFERENCE = FA.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID	
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE	= FA.DISBCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE	ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID	AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE =	BB.BANKCODE
				LEFT JOIN ( SELECT PB_1.PARTNERBANKID,	
				PBD_1.BANKNAME,
				PBB.BRANCHDESC,
				PBBRC.PCCITYNAME,
				PBBRS.CPPROVINCENAME FROM PARTNERBANKS PB_1
				JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE AND PBB.BANKCODE = PB_1.BANKCODE
				JOIN BMTBANKDETAIL PBD_1 ON PBD_1.BANKCODE = PBB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
				) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND
				BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID
				AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES	BRCA ON	BRCA.CUSTID = BR.CUSTID
				AND BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE FA.STATUS = 'APPROVED' AND NOT (FA.PAYMENTID IN ( 
				SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
				AND NOT	(FA.PAYMENTID IN ( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP))
				UNION ALL
				SELECT
				PI.PAYMENTINSTRUCTIONID PAYMENTID,
				PH.FINREFERENCE,
				PH.PAYMENTTYPE CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN PI.PAYMENTTYPE =
				'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.POSTDATE
				DISBDATE,
				PI.POSTDATE LLDATE,
				PI.PAYABLELOC,
				PI.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL
				CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				PI.ACCOUNTNO BENEFICIARYACCNO,
				CASE
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				OR PI.PAYMENTTYPE = 'DD'
				THEN
				PI.FAVOURNAME
				ELSE PI.ACCTHOLDERNAME
				END BENEFICIARYNAME,
				PI.PHONECOUNTRYCODE || PI.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				'' BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE
				PARTNERBANK_CODE,
				PI.POSTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO
				PARTNERBANK_ACCOUNTNO
				FROM PAYMENTINSTRUCTIONS PI
				JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
				JOIN (SELECT
				FINANCEMAIN.CUSTID,
				FINANCEMAIN.FINREFERENCE,
				FINANCEMAIN.FINTYPE,
				FINANCEMAIN.FINISACTIVE
				FROM FINANCEMAIN
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN_TEMP T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM ON FM.FINREFERENCE = PH.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID
				AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY	BBRC ON BBRC.PCCITY = BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID
				AND BR.ACCNUMBER = PI.ACCOUNTNO	AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON	BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID	AND	BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY = BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE PI.STATUS = 'APPROVED'
				AND NOT
				(PI.PAYMENTINSTRUCTIONID IN
				( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
				DISBURSEMENT_REQUESTS
				))
				UNION ALL
				SELECT PI.ID PAYMENTID,
				VR.PRIMARYLINKREF FINREFERENCE,
				'I' CHANNEL,
				PI.PROVIDERID,
				CASE
				WHEN
				PI.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN
				PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.PAYMENTDATE DISBDATE,
				PI.PAYMENTDATE LLDATE,
				'' PAYABLELOC,
				'' PRINTINGLOC,
				'' CUSTCIF,
				'' CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				'' CUSTOMER_EMAIL,
				'' CUSTOMER_STATE,
				'' CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
				AVD.DEALERNAME BENEFICIARYNAME,
				AVD.DEALERTELEPHONE
				BENEFICIARY_MOBILE,
				AVD.EMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
				AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
				AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				'' FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				PI.PAYMENTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				1 FINISACTIVE,
				PI.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT
				FROM INSURANCEPAYMENTINSTRUCTIONS PI
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON	PB.PARTNERBANKID = PI.PARTNERBANKID
				JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
				JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
				JOIN VASRECORDING VR ON VR.PAYMENTINSID = PI.ID
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY	= BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	AVD.DEALERCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				WHERE PI.STATUS = 'APPROVED' AND PI.PAYMENTAMOUNT > 0
				AND NOT (PI.ID IN( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
							 ]]>
		</createView>
	</changeSet>

	<changeSet id="DE#737.1_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="197" author="naga.g">
		<dropForeignKeyConstraint baseTableName="RMTBRANCHES_TEMP"
			constraintName="FK_BRANCHES_TEMP_CLUSTERID" />
		<dropForeignKeyConstraint baseTableName="RMTBRANCHES" constraintName="FK_BRANCHES_CLUSTERID" />
	</changeSet>

	<changeSet id="DE#1091" author="vijaya.a">
		<sql>
			<![CDATA[
				update data_engine_column set name = 'TRANSACTIONREF', skip = 0 where StartIndex = 4 and name =  'TRANSACTIONUTRNO' and tableid in (select id from data_engine_table where configid in (select id from data_engine_config where name = 'DISB_AXIS_IMPORT'));
				update data_engine_column set name = 'REMARKS' where StartIndex = 11 and name =  'TRANSACTIONREF' and tableid in (select id from data_engine_table where configid in (select id from data_engine_config where name = 'DISB_AXIS_IMPORT'));
			]]>
		</sql>
	</changeSet>

	<changeSet id="198" author="naga.g">
		<createTable tableName="OFASREREGIONS">
			<column name="HOSTREGIONCODE" type="varchar2(50)">
				<constraints nullable="false" primaryKey="true" primaryKeyName="HOSTREGIONCODE_PK" />
			</column>
			<column name="HOSTREGIONDESC" type="varchar2(100)" />

		</createTable>
	</changeSet>

	<changeSet id="199" author="naga.g">
		<createTable tableName="OFASCONTROLLINGBRANCHS">
			<column name="CTRBRCHCODE" type="varchar2(50)">
				<constraints nullable="false"></constraints>
			</column>
			<column name="CTRBRCHCODEDESC" type="varchar2(100)" />
			<column name="HOSTREGIONCODE" type="varchar2(50)" />
		</createTable>
	</changeSet>

	<changeSet id="200" author="naga.g">
		<addForeignKeyConstraint constraintName="FK_HOSTREGIONCODE"
			referencedTableName="OFASREREGIONS" referencedColumnNames="HOSTREGIONCODE" baseTableName="OFASCONTROLLINGBRANCHS"
			baseColumnNames="HOSTREGIONCODE" />
	</changeSet>

	<changeSet id="201" author="naga.g">
		<sql>
			<![CDATA[
				     INSERT INTO OFASREREGIONS VALUES('950','HEADOFFICE');
                     INSERT INTO OFASREREGIONS VALUES('940','TN-NORTH');
                     INSERT INTO OFASREREGIONS VALUES('904','AP-VIJAYAWADA');
                     INSERT INTO OFASREREGIONS VALUES('906','AS-LOWER');
                     INSERT INTO OFASREREGIONS VALUES('909','BR-PATNA');
                     INSERT INTO OFASREREGIONS VALUES('936','PB-CHANDIGARH');
                     INSERT INTO OFASREREGIONS VALUES('910','CG-RAIPUR');
                     INSERT INTO OFASREREGIONS VALUES('915','GJ-SURAT');
                     INSERT INTO OFASREREGIONS VALUES('911','DELHI');
                     INSERT INTO OFASREREGIONS VALUES('982','MH-KOLHAPUR');
                     INSERT INTO OFASREREGIONS VALUES('912','GJ-AHMEDABAD');
                     INSERT INTO OFASREREGIONS VALUES('978','HR-KARNAL');
                     INSERT INTO OFASREREGIONS VALUES('917','HP-SIMLA-J&K');
                     INSERT INTO OFASREREGIONS VALUES('970','JK-JAMMU');
                     INSERT INTO OFASREREGIONS VALUES('919','JH-RANCHI');
                     INSERT INTO OFASREREGIONS VALUES('920','KA-BANGALORE');
                     INSERT INTO OFASREREGIONS VALUES('924','KR-COCHIN');
                     INSERT INTO OFASREREGIONS VALUES('931','MP-BHOPAL');
                     INSERT INTO OFASREREGIONS VALUES('963','AS-SHILLONG');
                     INSERT INTO OFASREREGIONS VALUES('935','OR-BHUBNESHWAR');
                     INSERT INTO OFASREREGIONS VALUES('BHU','TN-VELLORE');
                     INSERT INTO OFASREREGIONS VALUES('979','PB-LUDHIANA');
                     INSERT INTO OFASREREGIONS VALUES('937','RJ-JAIPUR');
                     INSERT INTO OFASREREGIONS VALUES('949','WB-SILIGURI');
                     INSERT INTO OFASREREGIONS VALUES('902','AP-HYDERABAD');
                     INSERT INTO OFASREREGIONS VALUES('946','UP-LUCKNOW');
                     INSERT INTO OFASREREGIONS VALUES('943','UA-DEHRADUN');
                     INSERT INTO OFASREREGIONS VALUES('948','WB-KOLKATA');
			]]>
		</sql>
	</changeSet>

	<changeSet id="202" author="naga.g">
		<sql>
			<![CDATA[
			INSERT INTO OFASCONTROLLINGBRANCHS VALUES('35','HEADOFFICE','950');
			INSERT INTO OFASCONTROLLINGBRANCHS VALUES('25','CHENNAI','940');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('1048','VIJAYAWADA','904');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('23','GUWAHATI','906');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('52','PATNA','909');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('22','CHANDIGARH','936');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('56','RAIPUR','910');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('19','VAPI','915');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('28','DELHI','911');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('1068','GOA','982');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('5','AHMEDABAD','912');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('42','KARNAL','978');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('58','SIMLA','917');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('1109','JAMMU','970');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('53','RANCHI','919');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('45','BANGALORE','920');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('26','COCHIN','924');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('12','BHOPAL','931');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('1104','SHILLONG','963');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('1077','TEZPUR','963');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('13','BHUWANESHWAR','935');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('1097','PONDICHERRY','BHU');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('22','CHANDIGARH','979');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('39','JAIPUR','937');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('21','CALCUTTA','949');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('36','HYDERABAD','902');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('1105','AGARTALA','963');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('43','LUCKNOW','946');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('29','DEHRADUN','943');
            INSERT INTO OFASCONTROLLINGBRANCHS VALUES('21','CALCUTTA','948');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="203" author="naga.g">
		<createView viewName="REGIONBRACHCODES_VIEW" replaceIfExists="true">
		 <![CDATA[
			SELECT RGCD.HOSTREGIONCODE ,RGCD.HOSTREGIONDESC ,CTRBRCH.CTRBRCHCODE,CTRBRCH.CTRBRCHCODEDESC FROM OFASREREGIONS RGCD INNER JOIN OFASCONTROLLINGBRANCHS CTRBRCH ON RGCD.HOSTREGIONCODE=CTRBRCH.HOSTREGIONCODE
		  ]]>
		</createView>
	</changeSet>

	<changeSet id="204" author="naga.g">
		<addColumn tableName="PaymentInstructions_Temp">
			<column name="REJECTREASON" type="VARCHAR2(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="205" author="naga.g">
		<createView viewName="PAYMENTINSTRUCTIONS_VIEW" replaceIfExists="true">
			<![CDATA[
			  SELECT	 T1.PAYMENTINSTRUCTIONID, T1.PAYMENTID, T1.PAYMENTTYPE, T1.PAYMENTAMOUNT, T1.REMARKS, T1.PARTNERBANKID,
					 T1.IssuingBank, T1.FavourName, T1.FavourNumber, T1.PayableLoc, T1.PrintingLoc, T1.ValueDate, T1.PostDate,
					 T1.BankBranchID, T1.AcctHolderName, T1.AccountNo, T1.PhoneCountryCode, T1.PhoneNumber, 
					 T1.Clearingdate, T1.Active, T1.PaymentCCy,
					 T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode,
					 T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, T1.Status,T1.REJECTREASON, T1.TRANSACTIONREF,
					 T5.PARTNERBANKCODE, T5.PARTNERBANKNAME,
					 T3.BANKCODE BRANCHBANKCODE,T3.BRANCHCODE BANKBRANCHCODE, T3.IFSC BANKBRANCHIFSC, T3.CITY,
					 T4.BANKNAME ISSUINGBANKNAME, T6.PcCityName PCCityName, T3.BranchDesc, T2.BankName,
					 T5.ACCOUNTNO partnerBankAc, T5.ACTYPE partnerBankAcType
					 FROM     PaymentInstructions_Temp  T1 LEFT OUTER JOIN
					 BANKBRANCHES T3 ON T1.BANKBRANCHID = T3.BANKBRANCHID  LEFT OUTER JOIN
					 BMTBANKDETAIL T2 ON T2.BANKCODE = T3.BANKCODE LEFT OUTER JOIN		 
					 BMTBANKDETAIL T4  ON T1.ISSUINGBANK = T4.BANKCODE	LEFT OUTER JOIN
					 PARTNERBANKS T5 ON T5.PARTNERBANKID=T1.PARTNERBANKID LEFT OUTER JOIN
					 RMTPROVINCEVSCITY T6 ON T6.PCCITY = T3.CITY   
			 UNION ALL
					SELECT	 T1.PAYMENTINSTRUCTIONID, T1.PAYMENTID, T1.PAYMENTTYPE, T1.PAYMENTAMOUNT, T1.REMARKS, T1.PARTNERBANKID,
					 T1.IssuingBank, T1.FavourName, T1.FavourNumber, T1.PayableLoc, T1.PrintingLoc, T1.ValueDate, T1.PostDate,
					 T1.BankBranchID, T1.AcctHolderName, T1.AccountNo, T1.PhoneCountryCode, T1.PhoneNumber, 
					 T1.Clearingdate, T1.Active, T1.PaymentCCy,
					 T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode,
					 T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, T1.Status,T1.REJECTREASON, T1.TRANSACTIONREF,
					 T5.PARTNERBANKCODE, T5.PARTNERBANKNAME,
					 T3.BANKCODE BRANCHBANKCODE,T3.BRANCHCODE BANKBRANCHCODE, T3.IFSC BANKBRANCHIFSC, T3.CITY,
					 T4.BANKNAME ISSUINGBANKNAME, 
					 T6.PcCityName PCCityName, T3.BranchDesc, T2.BankName,
					 T5.ACCOUNTNO PartnerBankAc, T5.ACTYPE PartnerBankAcType
					 FROM  PaymentInstructions  T1 LEFT OUTER JOIN
					 BANKBRANCHES T3 ON T1.BANKBRANCHID = T3.BANKBRANCHID  LEFT OUTER JOIN
					 BMTBANKDETAIL T2 ON T2.BANKCODE = T3.BANKCODE LEFT OUTER JOIN		 
					 BMTBANKDETAIL T4  ON T1.ISSUINGBANK = T4.BANKCODE	LEFT OUTER JOIN
					 PARTNERBANKS T5 ON T5.PARTNERBANKID=T1.PARTNERBANKID LEFT OUTER JOIN
					 RMTPROVINCEVSCITY T6 ON T6.PCCITY = T3.CITY 
					WHERE NOT EXISTS ( SELECT 1  FROM PaymentInstructions_Temp WHERE PaymentInstructionId = T1.PaymentInstructionId)
			]]>
		</createView>
	</changeSet>

	<changeSet id="206" author="naga.g">
		<dropColumn tableName="FI_FIN_DTLS_CD" columnName="REGION_CODE" />
	</changeSet>

	<changeSet id="207" author="naga.g">
		<addColumn tableName="FI_FIN_DTLS_CD">
			<column name="REGION_CODE" type="VARCHAR2(10)" defaultValue="916" />
		</addColumn>
	</changeSet>

	<changeSet id="208" author="naga.g">
		<modifyDataType tableName="GST_OFAS_TRAN_DTLS_CD" columnName="BRANCH" newDataType="varchar(12)" />
	</changeSet>

	<changeSet id="ST#1520.1_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'limitheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1520.1" author="vijaya.a">
		<createView viewName="LIMITHEADER_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.HEADERID,
    T1.RULECODE,
    T1.RULEVALUE,
    T8.QUERYDESC,
    T1.CUSTOMERGROUP,
    T3.CUSTGRPCODE,
    T3.CUSTGRPDESC AS GROUPNAME,
    T3.CUSTGRPRO1,
    T1.CUSTOMERID,
    T4.CUSTCIF,
    T4.CUSTSHRTNAME,
    T4.CUSTFNAME,
    T4.CUSTMNAME,
    T4.CUSTLNAME AS CUSTFULLNAME,
    T4.CUSTCOREBANK,
    T4.CUSTSALUTATIONCODE,
    T4.CUSTDFTBRANCH,
    T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
    T1.RESPONSIBLEBRANCH,
    T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
    T1.LIMITCCY,
    T1.LIMITEXPIRYDATE,
    T1.LIMITRVWDATE,
    T1.LIMITSTRUCTURECODE,
    T6.STRUCTURENAME,
    T6.SHOWLIMITSIN,
    T1.LIMITSETUPREMARKS,
    T1.REBUILD,
    T1.ACTIVE,
    T1.VERSION,
    T1.CREATEDBY,
    T1.CREATEDON,
    T1.LASTMNTBY,
    T1.LASTMNTON,
    T2.USRLOGIN,
    T2.USRFNAME,
    T2.USRMNAME,
    T2.USRLNAME,
    T1.RECORDSTATUS,
    T1.ROLECODE,
    T1.NEXTROLECODE,
    T1.TASKID,
    T1.NEXTTASKID,
    T1.RECORDTYPE,
    T1.WORKFLOWID,
    T1.VALIDATEMATURITYDATE,
    T1.BLOCKLIMIT
  FROM LIMITHEADER T1
  JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
  LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
  LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
  LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
  LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
  LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
  LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1520.1_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'limitheader_aview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="ST#1520.2_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'limitheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1520.2" author="vijaya.a">
		<createView viewName="LIMITHEADER_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE,
                    T1.BLOCKLIMIT
					FROM LIMITHEADER_TEMP T1
					JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
					LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
					LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
					LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
					LEFT JOIN RMTBRANCHES T9  ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
					LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
					UNION ALL
					SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE,
					T1.BLOCKLIMIT
					FROM LIMITHEADER T1
					JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
					LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
					LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
					LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
					LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
					LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
					WHERE NOT (EXISTS
					(SELECT 1 FROM LIMITHEADER_TEMP
					WHERE LIMITHEADER_TEMP.HEADERID = T1.HEADERID
					))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1520.2_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'limitheader_view');
			]]>
		</sql>
	</changeSet>



	<changeSet id="ST#1520.3_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'limitheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1520.3" author="vijaya.a">
		<createView viewName="LIMITHEADER_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE,
					T1.BLOCKLIMIT
					FROM LIMITHEADER_TEMP T1
					JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
					LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
					LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
					LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
					LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
					LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1520.3" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'limitheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.1" author="saranya.s">
		<addColumn tableName="BMTBANKDETAIL">
			<column name="MinAccNoLength" type="int" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1442.1.1" author="saranya.s" dbms="postgresql, oracle">
		<addDefaultValue columnName="MinAccNoLength" tableName="BMTBANKDETAIL" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#1442.1.1" author="saranya.s" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE BMTBANKDETAIL ADD CONSTRAINT DF_BMTBANKDETAIL_MAL DEFAULT 0 not null FOR MinAccNoLength;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.2" author="saranya.s">
		<addColumn tableName="BMTBANKDETAIL_TEMP">
			<column name="MinAccNoLength" type="int" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1442.2.2" author="saranya.s" dbms="postgresql, oracle">
		<addDefaultValue columnName="MinAccNoLength" tableName="BMTBANKDETAIL_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#1442.2.2" author="saranya.s" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE BMTBANKDETAIL_TEMP ADD CONSTRAINT DF_BMTBANKDETAIL_T_MAL DEFAULT 0 FOR MinAccNoLength;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.3_pre" author="saranya.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bmtbankdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.3" author="saranya.s">
		<createView viewName="BMTBANKDETAIL_AVIEW" replaceIfExists="true">
		  <![CDATA[
			 	SELECT BANKCODE,
	    			BANKNAME,
	    			BANKSHORTCODE,
	    			ACTIVE,
	    			VERSION,
	    			LASTMNTBY,
	    			LASTMNTON,
	    			RECORDSTATUS,
	    			ROLECODE,
	    			NEXTROLECODE,
	    			TASKID,
	    			NEXTTASKID,
	    			RECORDTYPE,
	    			WORKFLOWID,
	    			ACCNOLENGTH,
	    			MINACCNOLENGTH
	   				FROM BMTBANKDETAIL
  		 	]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1442.3_post" author="saranya.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bmtbankdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.4_pre" author="saranya.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bmtbankdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.4" author="saranya.s">
		<createView viewName="BMTBANKDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT BANKCODE,
    				BANKNAME,
    				BANKSHORTCODE,
    				ACTIVE,
    				VERSION,
    				LASTMNTBY,
    				LASTMNTON,
    				RECORDSTATUS,
   				    ROLECODE,
    				NEXTROLECODE,
    				TASKID,
    				NEXTTASKID,
    				RECORDTYPE,
    				WORKFLOWID,
    				ACCNOLENGTH,
    				MINACCNOLENGTH
   					FROM BMTBANKDETAIL_TEMP				
					UNION ALL
				SELECT BANKCODE,
   					BANKNAME,
    				BANKSHORTCODE,
    				ACTIVE,
    				VERSION,
    				LASTMNTBY,
    				LASTMNTON,
    				RECORDSTATUS,
    				ROLECODE,
    				NEXTROLECODE,
    				TASKID,
    				NEXTTASKID,
    				RECORDTYPE,
    				WORKFLOWID,
   					ACCNOLENGTH,
   					MINACCNOLENGTH
  					FROM BMTBANKDETAIL 
  					WHERE NOT (EXISTS (SELECT 1 FROM BMTBANKDETAIL_TEMP WHERE BMTBANKDETAIL_TEMP.BANKCODE =  BMTBANKDETAIL.BANKCODE))
				 ]]>
	</createView>
	</changeSet>

	<changeSet id="ST#1442.4_post" author="saranya.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bmtbankdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.5" author="saranya.s">
		<sql>
			<![CDATA[
				DELETE from ErrorDetails WHERE code='BNK001';
				INSERT INTO ErrorDetails VALUES('BNK001','EN','E','{0} should be greater than {1} or less than or equal to {2}','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
				
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.6" author="saranya.s">
		<sql>
			<![CDATA[ 
				UPDATE BMTBANKDETAIL set MINACCNOLENGTH = ACCNOLENGTH;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.7" author="saranya.s">
		<sql>
			<![CDATA[
				UPDATE BMTBANKDETAIL_TEMP set MINACCNOLENGTH = ACCNOLENGTH;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.8" author="saranya.s">
		<sql>
			<![CDATA[
			update BMTBANKDETAIL set ACCNOLENGTH=50,MINACCNOLENGTH=50 where ACCNOLENGTH=0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.9" author="saranya.s">
		<sql>
			<![CDATA[
			update BMTBANKDETAIL_TEMP set ACCNOLENGTH=50,MINACCNOLENGTH=50 where ACCNOLENGTH=0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#67.1" author="naga.g">
		<sql>
			<![CDATA[
				DELETE from SecRights where RIGHTNAME='menuItem_RulesFactory_DueDateLogicRule';
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_RulesFactory_DueDateLogicRule','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			    UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#67.2.1" author="naga.g">
		<sql>
			<![CDATA[
				DELETE from rbfielddetails where RBMODULE='DDLRULE';
				Insert into rbfielddetails (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('DDLRULE','DDLRULE','fm_finStartDate','Loan Start Date','datetime',8,'0','1',null,'static,global,calvalue',null);
				Insert into rbfielddetails (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('DDLRULE','DDLRULE','fm_finType','Loan Type','nvarchar',8,'0','1',null,'static',null);

			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.10" author="saranya.s">
		<sql>
			<![CDATA[
				UPDATE BMTBANKDETAIL set MINACCNOLENGTH = 1 where MINACCNOLENGTH = 50 or MINACCNOLENGTH = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1442.11" author="saranya.s">
		<sql>
			<![CDATA[
				UPDATE BMTBANKDETAIL_TEMP set MINACCNOLENGTH = 1 where MINACCNOLENGTH = 50 or MINACCNOLENGTH = 0;
			]]>
		</sql>
	</changeSet>
	<changeSet id="209" author="santhoshi.k">

		<modifyDataType tableName="CD_PRODUCTS" columnName="MODELID" newDataType="varchar2(20)" />
		<modifyDataType tableName="CD_PRODUCTS_Temp" columnName="MODELID" newDataType="varchar2(20)" />

	</changeSet>
	<changeSet id="210" author="ravi.m">
		<sql>
			<![CDATA[
                 DELETE from DEDUPFIELDS;
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','varchar','CustomerLimits',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','varchar','Finance',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','varchar','RETAILBlackList',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','varchar','RETAILPolice',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCtgCode','Customer Category','varchar','CustomerLimits',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCtgCode','Customer Category','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustDOB','Customer Date of Birth','varchar','CustomerLimits',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustDOB','Customer Date of Birth','varchar','RETAILBlackList',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustDOB','Customer Date of Birth','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustDOB','Customer Date of Birth','varchar','RETAILPolice',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustShrtName','Customer Name','nvarchar','CORPPolice',0,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustFName','Customer First Name','nvarchar','CustomerLimits',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustFName','Customer First Name','nvarchar','RETAILBlackList',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustFName','Customer First Name','nvarchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustFName','Customer First Name','nvarchar','RETAILPolice',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustID','Customer Id','Bigint','CustomerLimits',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustLName','Customer Last Name','nvarchar','CustomerLimits',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustLName','Customer Last Name','nvarchar','RETAILBlackList',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustLName','Customer Last Name','nvarchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustLName','Customer Last Name','nvarchar','RETAILPolice',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustNationality','Nationality','varchar','RETAILBlackList',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustNationality','Nationality','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustNationality','Nationality','varchar','RETAILPolice',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustPassportNo','Customer Passport Number','varchar','RETAILBlackList',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustPassportNo','Customer Passport Number','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustPassportNo','Customer Passport Number','varchar','RETAILPolice',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustShrtName','Customer  Name','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('MobileNumber','Mobile Number','varchar','RETAILBlackList',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('MobileNumber','Mobile Number','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('MobileNumber','Customer Mobile Number','varchar','RETAILPolice',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('TradeLicenceNo','Company Trade Licence','varchar','Finance',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustShrtName','Customer Name','nvarchar','CORPCustomer',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ChassisNumber','Chasis Number','varchar','Finance',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('custDOB','Date of Incorporation','nvarchar','CORPCustomer',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('mobileNumber','Mobile Number','nvarchar','CORPCustomer',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','nvarchar','CORPCustomer',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PanNumber','PAN Number','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustEMail','Email ID','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('FinType','Loan Type','varchar','Finance',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCtgCode','Customer Category','varchar','RETAILBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCtgCode','Customer Category','varchar','SMEBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCtgCode','Customer Category','varchar','CORPBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustShrtName','Company Name','varchar','SMEBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustShrtName','Company Name','varchar','CORPBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustDOB','Date of Incorporation','varchar','SMEBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustDOB','Date of Incorporation','varchar','CORPBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('MobileNumber','Phone Number','varchar','SMEBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('MobileNumber','Phone Number','varchar','CORPBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','varchar','SMEBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCRCPR','PAN Number','varchar','CORPBlackList',1,1000,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCIF','Customer CIF','varchar','Finance',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('FinanceType','Finance Type','varchar','Finance',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('VoterID','Voter ID','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('DrivingLicence','Driving Licence','varchar','RETAILCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Insert into DEDUPFIELDS (FIELDNAME,FIELDDESC,FIELDCONTROL,QUERYMODULE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CustCtgCode','Customer Category','varchar','CORPCustomer',1,1005,sysdate,'Approved',null,null,null,null,null,0);
                 Update DedupFields set FIELDDESC='CustCRCPR' where QUERYMODULE like 'RETAILCustomer%' and FIELDNAME ='CustCRCPR';
              ]]>
		</sql>
	</changeSet>

	<changeSet id="ST#54_pre" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financededup_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#54" author="ravi.m">
		<createView viewName="FINANCEDEDUP_VIEW" replaceIfExists="true">
		  <![CDATA[
			 	 SELECT  DISTINCT 
				 T1.FinReference, 
				 T1.FinReference DupReference,
				 T1.CustId,
	             T2.CustCIF,
				 T2.CustFName,
				 T2.CustLName,
				 T2.CustMName, 
				 T2.CustShrtName, 
				 T2.CustDOB,
				 T2.CustNationality, 
                 T2.CustMotherMaiden, 
				 T2.CustParentCountry,
				 T2.CustCRCPR, 
				 T1.FinStartDate StartDate, 
				 T1.FinAmount FinanceAmount, 
                 T1.TotalGrossPft ProfitAmount, 
				 T1.NextRoleCode Stage,
				 T4.RoleDesc StageDesc,  
				 '' DedupeRule, 
				 T2.CustPassportNo,
				 T1.FinType FinanceType, 
                 T2.CustTradeLicenceNum TradeLicenceNo , 
				 T1.FinLimitRef
          FROM    FinanceMain_Temp T1 INNER JOIN
          Customers T2 ON T1.CustId = T2.CustId  LEFT OUTER JOIN 
          SecRoles T4 ON T1.NextRoleCode = T4.RoleCd
          UNION ALL      
             SELECT  DISTINCT  
	             T1.FinReference, 
				 T1.FinReference DupReference,
				 T1.CustId,
	             T2.CustCIF,
				 T2.CustFName,
				 T2.CustLName,
				 T2.CustMName, 
				 T2.CustShrtName, 
				 T2.CustDOB,
				 T2.CustNationality, 
                 T2.CustMotherMaiden, 
				 T2.CustParentCountry,
				 T2.CustCRCPR, 
				 T1.FinStartDate StartDate, 
				 T1.FinAmount FinanceAmount, 
                 T1.TotalGrossPft ProfitAmount, 
				 T1.NextRoleCode Stage,
				 T4.RoleDesc StageDesc,  
				 '' DedupeRule, 
				 T2.CustPassportNo,
				 T1.FinType FinanceType, 
                 T2.CustTradeLicenceNum TradeLicenceNo , 
				 T1.FinLimitRef
         FROM    FinanceMain T1 INNER JOIN
         Customers T2 ON T1.CustId = T2.CustId  LEFT OUTER JOIN 
         SecRoles T4 ON T1.NextRoleCode = T4.RoleCd
  		 	]]>
		</createView>
	</changeSet>

	<changeSet id="ST#54_post" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financededup_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#54.1_pre" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'CusTomersDedup_View');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#54.1" author="ravi.m">
		<createView viewName="CusTomersDedup_View" replaceIfExists="true">
		     <![CDATA[	
                SELECT 
		        T1.cusTid,
		        T1.cusTcif,
		        T1.cusTfname,
		        T1.cusTlname,
		        T1.cusTcrcpr,
		        cdpp.cusTdocTiTle AS cusTpassporTno,
		        T1.cusTshrTname,
		        T1.cusTdob,
		        T1.cusTnaTionaliTy,
		            COALESCE(
		            CASE
		               WHEN T1.phonenumber = ' ' THEN NULL
		               ELSE T1.phonenumber
		          END, T7.phonenumber) AS mobilenumber,
		       T1.cusTcTgcode,
		       T1.cusTdfTbranch,
		       T1.cusTTypecode,
		       T1.cusTsecTor,
		       T1.cusTsubsecTor,
		       T1.subcaTegory,
		       T1.casTeid,
		       T1.religionid,
		       T3.casTecode,
		       T3.casTedesc,
		       T4.religioncode,
		       T4.religiondesc,
		       T2.cusTTypecTg AS lovdesccusTcTgType,
		       cda.cusTdocTiTle AS aadharnumber,
		       cdp.cusTdocTiTle AS pannumber,
		       T6.cusTemail,
               cdv.cusTdocTiTle AS voTerid,
               cdd.cusTdocTiTle AS drivingLicenceNo
		  FROM cusTomers_Temp T1
		     LEFT JOIN rmTcusTTypes T2 ON T1.cusTTypecode = T2.cusTTypecode
		     LEFT JOIN casTe T3 ON T1.casTeid = T3.casTeid
		     LEFT JOIN religion T4 ON T1.religionid = T4.religionid
		     LEFT JOIN cusTomerdocumenTs cda ON cda.cusTid = T1.cusTid AND cda.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		           FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'AADHAAR')))
		     LEFT JOIN cusTomerdocumenTs cdp ON cdp.cusTid = T1.cusTid AND cdp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		           FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PAN')))
		     LEFT JOIN cusTomerdocumenTs cdpp ON cdpp.cusTid = T1.cusTid AND cdpp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		           FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PASSPORT')))
			 LEFT JOIN cusTomerdocumenTs cdv ON cdv.cusTid = T1.cusTid AND cdv.cusTdoccaTegory in ((( SELECT masTer_def.key_code
				  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'VOTERID')))
             LEFT JOIN cusTomerdocumenTs cdd ON cdd.cusTid = T1.cusTid AND cdd.cusTdoccaTegory in ((( SELECT masTer_def.key_code
                  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'DLNO')))
		     LEFT JOIN cusTomeremails T6 ON T1.cusTid = T6.cusTid AND T6.cusTemailprioriTy = 5
		     LEFT JOIN cusTomerphonenumbers T7 ON T1.cusTid = T7.phonecusTid
		UNION ALL
		 SELECT T1.cusTid,
		      T1.cusTcif,
		      T1.cusTfname,
		      T1.cusTlname,
		      T1.cusTcrcpr,
		      cdpp.cusTdocTiTle AS cusTpassporTno,
		      T1.cusTshrTname,
		      T1.cusTdob,
		      T1.cusTnaTionaliTy,
		      COALESCE(
		        CASE
		            WHEN T1.phonenumber = ' ' THEN NULL
		            ELSE T1.phonenumber
		        END, T7.phonenumber) AS mobilenumber,
		     T1.cusTcTgcode,
		     T1.cusTdfTbranch,
		     T1.cusTTypecode,
		     T1.cusTsecTor,
		     T1.cusTsubsecTor,
		     T1.subcaTegory,
		     T1.casTeid,
		     T1.religionid,
		     T3.casTecode,
		     T3.casTedesc,
		     T4.religioncode,
		     T4.religiondesc,
		     T2.cusTTypecTg AS lovdesccusTcTgType,
		     cda.cusTdocTiTle AS aadharnumber,
		     cdp.cusTdocTiTle AS pannumber,
		     T6.cusTemail,
             cdv.cusTdocTiTle AS voTerid,
             cdd.cusTdocTiTle AS drivingLicenceNo
		  FROM cusTomers T1
		     LEFT JOIN rmTcusTTypes T2 ON T1.cusTTypecode = T2.cusTTypecode
		     LEFT JOIN casTe T3 ON T1.casTeid = T3.casTeid
		     LEFT JOIN religion T4 ON T1.religionid = T4.religionid
		     LEFT JOIN cusTomerdocumenTs cda ON cda.cusTid = T1.cusTid AND cda.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		          FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'AADHAAR')))
		     LEFT JOIN cusTomerdocumenTs cdp ON cdp.cusTid = T1.cusTid AND cdp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		          FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PAN')))
		     LEFT JOIN cusTomerdocumenTs cdpp ON cdpp.cusTid = T1.cusTid AND cdpp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		          FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PASSPORT')))
		     LEFT JOIN cusTomerdocumenTs cdv ON cdv.cusTid = T1.cusTid AND cdv.cusTdoccaTegory in ((( SELECT masTer_def.key_code
				  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'VOTERID')))
             LEFT JOIN cusTomerdocumenTs cdd ON cdd.cusTid = T1.cusTid AND cdd.cusTdoccaTegory in ((( SELECT masTer_def.key_code
                  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'DLNO')))
		     LEFT JOIN cusTomeremails T6 ON T1.cusTid = T6.cusTid AND T6.cusTemailprioriTy = 5
		     LEFT JOIN cusTomerphonenumbers T7 ON T1.cusTid = T7.phonecusTid
		          WHERE NOT (EXISTS ( SELECT 1
		           FROM cusTomers_Temp
		          WHERE cusTomers_Temp.cusTid = T1.cusTid))
				  ]]>
     </createView>
	</changeSet>

	<changeSet id="ST#54.1_post" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'CusTomersDedup_View');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#54.2_post" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
			Delete from MASTER_DEF where KEY_TYPE in('VOTERID','DLNO') and MASTER_TYPE='DOC_TYPE';
			Insert into MASTER_DEF values ('DOC_TYPE','VOTERID','VOTERID');
			Insert into MASTER_DEF values ('DOC_TYPE','DLNO','DLNO');
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#54.3_pre" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'CusTomersDedup_View');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#54.3" author="ravi.m">
		<createView viewName="CusTomersDedup_View" replaceIfExists="true">
		     <![CDATA[	
                SELECT DISTINCT
		        T1.cusTid,
		        T1.cusTcif,
		        T1.cusTfname,
		        T1.cusTlname,
		        T1.cusTcrcpr,
		        cdpp.cusTdocTiTle AS cusTpassporTno,
		        T1.cusTshrTname,
		        T1.cusTdob,
		        T1.cusTnaTionaliTy,
		            COALESCE(
		            CASE
		               WHEN T1.phonenumber = ' ' THEN NULL
		               ELSE T1.phonenumber
		          END, T7.phonenumber) AS mobilenumber,
		       T1.cusTcTgcode,
		       T1.cusTdfTbranch,
		       T1.cusTTypecode,
		       T1.cusTsecTor,
		       T1.cusTsubsecTor,
		       T1.subcaTegory,
		       T1.casTeid,
		       T1.religionid,
		       T3.casTecode,
		       T3.casTedesc,
		       T4.religioncode,
		       T4.religiondesc,
		       T2.cusTTypecTg AS lovdesccusTcTgType,
		       cda.cusTdocTiTle AS aadharnumber,
		       cdp.cusTdocTiTle AS pannumber,
		       T6.cusTemail,
               cdv.cusTdocTiTle AS voTerid,
               cdd.cusTdocTiTle AS drivingLicenceNo
		  FROM cusTomers_Temp T1
		     LEFT JOIN rmTcusTTypes T2 ON T1.cusTTypecode = T2.cusTTypecode
		     LEFT JOIN casTe T3 ON T1.casTeid = T3.casTeid
		     LEFT JOIN religion T4 ON T1.religionid = T4.religionid
		     LEFT JOIN cusTomerdocumenTs cda ON cda.cusTid = T1.cusTid AND cda.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		           FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'AADHAAR')))
		     LEFT JOIN cusTomerdocumenTs cdp ON cdp.cusTid = T1.cusTid AND cdp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		           FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PAN')))
		     LEFT JOIN cusTomerdocumenTs cdpp ON cdpp.cusTid = T1.cusTid AND cdpp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		           FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PASSPORT')))
			 LEFT JOIN cusTomerdocumenTs cdv ON cdv.cusTid = T1.cusTid AND cdv.cusTdoccaTegory in ((( SELECT masTer_def.key_code
				  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'VOTERID')))
             LEFT JOIN cusTomerdocumenTs cdd ON cdd.cusTid = T1.cusTid AND cdd.cusTdoccaTegory in ((( SELECT masTer_def.key_code
                  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'DLNO')))
		     LEFT JOIN cusTomeremails T6 ON T1.cusTid = T6.cusTid AND T6.cusTemailprioriTy = 5
		     LEFT JOIN cusTomerphonenumbers T7 ON T1.cusTid = T7.phonecusTid
		UNION ALL 
		 SELECT DISTINCT T1.cusTid,
		      T1.cusTcif,
		      T1.cusTfname,
		      T1.cusTlname,
		      T1.cusTcrcpr,
		      cdpp.cusTdocTiTle AS cusTpassporTno,
		      T1.cusTshrTname,
		      T1.cusTdob,
		      T1.cusTnaTionaliTy,
		      COALESCE(
		        CASE
		            WHEN T1.phonenumber = ' ' THEN NULL
		            ELSE T1.phonenumber
		        END, T7.phonenumber) AS mobilenumber,
		     T1.cusTcTgcode,
		     T1.cusTdfTbranch,
		     T1.cusTTypecode,
		     T1.cusTsecTor,
		     T1.cusTsubsecTor,
		     T1.subcaTegory,
		     T1.casTeid,
		     T1.religionid,
		     T3.casTecode,
		     T3.casTedesc,
		     T4.religioncode,
		     T4.religiondesc,
		     T2.cusTTypecTg AS lovdesccusTcTgType,
		     cda.cusTdocTiTle AS aadharnumber,
		     cdp.cusTdocTiTle AS pannumber,
		     T6.cusTemail,
             cdv.cusTdocTiTle AS voTerid,
             cdd.cusTdocTiTle AS drivingLicenceNo
		  FROM cusTomers T1
		     LEFT JOIN rmTcusTTypes T2 ON T1.cusTTypecode = T2.cusTTypecode
		     LEFT JOIN casTe T3 ON T1.casTeid = T3.casTeid
		     LEFT JOIN religion T4 ON T1.religionid = T4.religionid
		     LEFT JOIN cusTomerdocumenTs cda ON cda.cusTid = T1.cusTid AND cda.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		          FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'AADHAAR')))
		     LEFT JOIN cusTomerdocumenTs cdp ON cdp.cusTid = T1.cusTid AND cdp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		          FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PAN')))
		     LEFT JOIN cusTomerdocumenTs cdpp ON cdpp.cusTid = T1.cusTid AND cdpp.cusTdoccaTegory in ((( SELECT masTer_def.key_code
		          FROM masTer_def
		          WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'PASSPORT')))
		     LEFT JOIN cusTomerdocumenTs cdv ON cdv.cusTid = T1.cusTid AND cdv.cusTdoccaTegory in ((( SELECT masTer_def.key_code
				  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'VOTERID')))
             LEFT JOIN cusTomerdocumenTs cdd ON cdd.cusTid = T1.cusTid AND cdd.cusTdoccaTegory in ((( SELECT masTer_def.key_code
                  FROM masTer_def
                  WHERE masTer_def.masTer_Type = 'DOC_TYPE' AND masTer_def.key_Type = 'DLNO')))
		     LEFT JOIN cusTomeremails T6 ON T1.cusTid = T6.cusTid AND T6.cusTemailprioriTy = 5
		     LEFT JOIN cusTomerphonenumbers T7 ON T1.cusTid = T7.phonecusTid
		          WHERE NOT (EXISTS ( SELECT 1
		           FROM cusTomers_Temp
		          WHERE cusTomers_Temp.cusTid = T1.cusTid))
				  ]]>
     </createView>
	</changeSet>

	<changeSet id="ST#54.3_post" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'CusTomersDedup_View');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#164.1_pre" author="naga.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#164.1" author="naga.g">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FA.PAYMENTID,
				FA.FINREFERENCE,
				'D' CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN FA.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN FA.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN
				FA.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE FA.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				FA.AMTTOBERELEASED,
				FA.DISBDATE,
				FA.LLDATE,
				FA.PAYABLELOC,
				FA.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				FA.BENEFICIARYACCNO,
				CASE
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				OR FA.PAYMENTTYPE = 'DD'
				THEN
				FA.LIABILITYHOLDNAME
				ELSE FA.BENEFICIARYNAME
				END BENEFICIARYNAME,
				(FA.PHONECOUNTRYCODE || FA.PHONEAREACODE) || FA.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				BRCA.CustAddrHNbr ||','|| BRCA.CustAddrStreet ||','|| BRC.PCCITYNAME ||','|| BRS.CPPROVINCENAME  BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				FA.STATUS,
				FA.DESCRIPTION REMARKS,
				FA.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID
				PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				FA.INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				PB.ACTYPE PARTNERBANKACTYPE
				FROM FINADVANCEPAYMENTS FA
				JOIN
				(SELECT FINANCEMAIN_TEMP.CUSTID,
				FINANCEMAIN_TEMP.FINREFERENCE,
				FINANCEMAIN_TEMP.FINTYPE,
				FINANCEMAIN_TEMP.FINISACTIVE
				FROM FINANCEMAIN_TEMP
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM
				ON FM.FINREFERENCE = FA.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID	
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE	= FA.DISBCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE	ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID	AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE =	BB.BANKCODE
				LEFT JOIN ( SELECT PB_1.PARTNERBANKID,	
				PBD_1.BANKNAME,
				PBB.BRANCHDESC,
				PBBRC.PCCITYNAME,
				PBBRS.CPPROVINCENAME FROM PARTNERBANKS PB_1
				JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE AND PBB.BANKCODE = PB_1.BANKCODE
				JOIN BMTBANKDETAIL PBD_1 ON PBD_1.BANKCODE = PBB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
				) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND
				BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID
				AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES	BRCA ON	BRCA.CUSTID = BR.CUSTID
				AND BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE FA.STATUS = 'APPROVED' AND NOT (FA.PAYMENTID IN ( 
				SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
				AND NOT	(FA.PAYMENTID IN ( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP))
				UNION ALL
				SELECT
				PI.PAYMENTINSTRUCTIONID PAYMENTID,
				PH.FINREFERENCE,
				PH.PAYMENTTYPE CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN PI.PAYMENTTYPE =
				'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.POSTDATE
				DISBDATE,
				PI.POSTDATE LLDATE,
				PI.PAYABLELOC,
				PI.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL
				CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				PI.ACCOUNTNO BENEFICIARYACCNO,
				CASE
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				OR PI.PAYMENTTYPE = 'DD'
				THEN
				PI.FAVOURNAME
				ELSE PI.ACCTHOLDERNAME
				END BENEFICIARYNAME,
				PI.PHONECOUNTRYCODE || PI.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				'' BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE
				PARTNERBANK_CODE,
				PI.POSTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO
				PARTNERBANK_ACCOUNTNO,
				PB.ACTYPE PARTNERBANKACTYPE
				FROM PAYMENTINSTRUCTIONS PI
				JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
				JOIN (SELECT
				FINANCEMAIN.CUSTID,
				FINANCEMAIN.FINREFERENCE,
				FINANCEMAIN.FINTYPE,
				FINANCEMAIN.FINISACTIVE
				FROM FINANCEMAIN
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN_TEMP T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM ON FM.FINREFERENCE = PH.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID
				AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY	BBRC ON BBRC.PCCITY = BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID
				AND BR.ACCNUMBER = PI.ACCOUNTNO	AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON	BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID	AND	BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY = BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE PI.STATUS = 'APPROVED'
				AND NOT
				(PI.PAYMENTINSTRUCTIONID IN
				( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
				DISBURSEMENT_REQUESTS
				))
				UNION ALL
				SELECT PI.ID PAYMENTID,
				VR.PRIMARYLINKREF FINREFERENCE,
				'I' CHANNEL,
				PI.PROVIDERID,
				CASE
				WHEN
				PI.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN
				PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.PAYMENTDATE DISBDATE,
				PI.PAYMENTDATE LLDATE,
				'' PAYABLELOC,
				'' PRINTINGLOC,
				'' CUSTCIF,
				'' CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				'' CUSTOMER_EMAIL,
				'' CUSTOMER_STATE,
				'' CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
				AVD.DEALERNAME BENEFICIARYNAME,
				AVD.DEALERTELEPHONE
				BENEFICIARY_MOBILE,
				AVD.EMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
				AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
				AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				'' FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				PI.PAYMENTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				1 FINISACTIVE,
				PI.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				PB.ACTYPE PARTNERBANKACTYPE
				FROM INSURANCEPAYMENTINSTRUCTIONS PI
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON	PB.PARTNERBANKID = PI.PARTNERBANKID
				JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
				JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
				JOIN VASRECORDING VR ON VR.PAYMENTINSID = PI.ID
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY	= BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	AVD.DEALERCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				WHERE PI.STATUS = 'APPROVED' AND PI.PAYMENTAMOUNT > 0
				AND NOT (PI.ID IN( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
							 ]]>
		</createView>
	</changeSet>

	<changeSet id="TK#164.1_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#164.2_pre" author="naga.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#164.2" author="naga.g">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FA.PAYMENTID,
				FA.FINREFERENCE,
				'D' CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN FA.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN FA.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN
				FA.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE FA.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				FA.AMTTOBERELEASED,
				FA.DISBDATE,
				FA.LLDATE,
				FA.PAYABLELOC,
				FA.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				FA.BENEFICIARYACCNO,
				CASE
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				OR FA.PAYMENTTYPE = 'DD'
				THEN
				FA.LIABILITYHOLDNAME
				ELSE FA.BENEFICIARYNAME
				END BENEFICIARYNAME,
				(FA.PHONECOUNTRYCODE || FA.PHONEAREACODE) || FA.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				BRCA.CustAddrHNbr ||','|| BRCA.CustAddrStreet ||','|| BRC.PCCITYNAME ||','|| BRS.CPPROVINCENAME  BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				FA.STATUS,
				FA.DESCRIPTION REMARKS,
				FA.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID
				PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				FA.INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				PB.ACTYPE PARTNERBANKACTYPE,
				FA.DISBCCY
				FROM FINADVANCEPAYMENTS FA
				JOIN
				(SELECT FINANCEMAIN_TEMP.CUSTID,
				FINANCEMAIN_TEMP.FINREFERENCE,
				FINANCEMAIN_TEMP.FINTYPE,
				FINANCEMAIN_TEMP.FINISACTIVE
				FROM FINANCEMAIN_TEMP
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM
				ON FM.FINREFERENCE = FA.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID	
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE	= FA.DISBCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE	ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID	AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE =	BB.BANKCODE
				LEFT JOIN ( SELECT PB_1.PARTNERBANKID,	
				PBD_1.BANKNAME,
				PBB.BRANCHDESC,
				PBBRC.PCCITYNAME,
				PBBRS.CPPROVINCENAME FROM PARTNERBANKS PB_1
				JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE AND PBB.BANKCODE = PB_1.BANKCODE
				JOIN BMTBANKDETAIL PBD_1 ON PBD_1.BANKCODE = PBB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
				) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND
				BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID
				AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES	BRCA ON	BRCA.CUSTID = BR.CUSTID
				AND BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE FA.STATUS = 'APPROVED' AND NOT (FA.PAYMENTID IN ( 
				SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
				AND NOT	(FA.PAYMENTID IN ( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP))
				UNION ALL
				SELECT
				PI.PAYMENTINSTRUCTIONID PAYMENTID,
				PH.FINREFERENCE,
				PH.PAYMENTTYPE CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN PI.PAYMENTTYPE =
				'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.POSTDATE
				DISBDATE,
				PI.POSTDATE LLDATE,
				PI.PAYABLELOC,
				PI.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL
				CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				PI.ACCOUNTNO BENEFICIARYACCNO,
				CASE
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				OR PI.PAYMENTTYPE = 'DD'
				THEN
				PI.FAVOURNAME
				ELSE PI.ACCTHOLDERNAME
				END BENEFICIARYNAME,
				PI.PHONECOUNTRYCODE || PI.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				'' BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE
				PARTNERBANK_CODE,
				PI.POSTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO
				PARTNERBANK_ACCOUNTNO,
				PB.ACTYPE PARTNERBANKACTYPE,
				PI.PAYMENTCCY
				FROM PAYMENTINSTRUCTIONS PI
				JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
				JOIN (SELECT
				FINANCEMAIN.CUSTID,
				FINANCEMAIN.FINREFERENCE,
				FINANCEMAIN.FINTYPE,
				FINANCEMAIN.FINISACTIVE
				FROM FINANCEMAIN
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN_TEMP T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM ON FM.FINREFERENCE = PH.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID
				AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY	BBRC ON BBRC.PCCITY = BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID
				AND BR.ACCNUMBER = PI.ACCOUNTNO	AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON	BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID	AND	BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY = BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE PI.STATUS = 'APPROVED'
				AND NOT
				(PI.PAYMENTINSTRUCTIONID IN
				( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
				DISBURSEMENT_REQUESTS
				))
				UNION ALL
				SELECT PI.ID PAYMENTID,
				VR.PRIMARYLINKREF FINREFERENCE,
				'I' CHANNEL,
				PI.PROVIDERID,
				CASE
				WHEN
				PI.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN
				PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.PAYMENTDATE DISBDATE,
				PI.PAYMENTDATE LLDATE,
				'' PAYABLELOC,
				'' PRINTINGLOC,
				'' CUSTCIF,
				'' CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				'' CUSTOMER_EMAIL,
				'' CUSTOMER_STATE,
				'' CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
				AVD.DEALERNAME BENEFICIARYNAME,
				AVD.DEALERTELEPHONE
				BENEFICIARY_MOBILE,
				AVD.EMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
				AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
				AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				'' FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				PI.PAYMENTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				1 FINISACTIVE,
				PI.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				PB.ACTYPE PARTNERBANKACTYPE,
				PI.PAYMENTCCY
				FROM INSURANCEPAYMENTINSTRUCTIONS PI
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON	PB.PARTNERBANKID = PI.PARTNERBANKID
				JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
				JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
				JOIN VASRECORDING VR ON VR.PAYMENTINSID = PI.ID
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY	= BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	AVD.DEALERCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				WHERE PI.STATUS = 'APPROVED' AND PI.PAYMENTAMOUNT > 0
				AND NOT (PI.ID IN( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
							 ]]>
		</createView>
	</changeSet>

	<changeSet id="TK#164.2_post" author="naga.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#59.1" author="GopalaSwamy.m">
		<sql>
			<![CDATA[
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'AMZPD'	 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'AMZSUSP' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'CANFIN'	 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'CMTDISB'	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'NORM_PD' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'NORM_PIS'	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'PD_NORM' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'PD_PIS' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'PIS_NORM' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'PIS_PD' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'PROVSN' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'WRITEBK' 	and CategoryCode = 'O';
				
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'DISBINS' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'EARLYPAY' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'INSTDATE' 	and CategoryCode = 'O';
				DELETE FROM CategoryWiseEvents Where AEEventCode = 'LPPAMZ' 	and CategoryCode = 'O';
				   
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('DISBINS', 'O', 1, 1, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('EARLYPAY', 'O', 1, 1, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('INSTDATE', 'O', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('LPPAMZ', 'O', 1, 1, (select max(SeqOrder)+1 from CategoryWiseEvents));
				]]>
		</sql>
	</changeSet>

	<changeSet id="PSD#165813" author="GopalaSwamy.m">
		<sql>
			<![CDATA[
				DELETE FROM BmtSchdMethod where SCHDMETHOD = 'POSINT';
				INSERT INTO BmtSchdMethod (SCHDMETHOD,SCHDMETHODDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('POSINT','POS and Calculate Profit',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
				]]>
		</sql>
	</changeSet>

	<changeSet id="ST#108.1" author="naga.g">
		<addColumn tableName="TRANSACTIONMAPPING">
			<column name="TID1" type="VARCHAR2(20)" />
		</addColumn>
		<addColumn tableName="TRANSACTIONMAPPING_TEMP">
			<column name="TID1" type="VARCHAR2(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="ST#108.2" author="naga.g">
		<sql>
			<![CDATA[
			          UPDATE TRANSACTIONMAPPING SET TID1 = TID;
					  UPDATE TRANSACTIONMAPPING_TEMP SET TID1 = TID;
				]]>
		</sql>
	</changeSet>

	<changeSet id="ST#108.3" author="naga.a">
		<dropColumn tableName="TRANSACTIONMAPPING" columnName="TID" />
		<dropColumn tableName="TRANSACTIONMAPPING_TEMP" columnName="TID" />
	</changeSet>

	<changeSet id="ST#108.4" author="naga.g">
		<renameColumn tableName="TRANSACTIONMAPPING" oldColumnName="TID1" newColumnName="TID" />
		<renameColumn tableName="TRANSACTIONMAPPING_TEMP" oldColumnName="TID1" newColumnName="TID" />
	</changeSet>


	<changeSet id="ST#108.5" author="naga.g">
		<modifyDataType tableName="SETTLEMENT_REQUEST" columnName="TERMINALID" newDataType="VARCHAR2(20)" />
	</changeSet>

	<changeSet id="ST#108.6" author="naga.g">
		<modifyDataType tableName="SUBVENTION_REQUEST" columnName="TERMINALID" newDataType="VARCHAR2(20)" />
	</changeSet>

	<changeSet id="ST#108.7" author="naga.g">
		<modifyDataType tableName="LOAN_CD_ORG_ED" columnName="TID" newDataType="VARCHAR2(20)" />
	</changeSet>

	<changeSet id="ST#108.8" author="naga.g">
		<modifyDataType tableName="LOAN_CD_ORG_ED_TEMP" columnName="TID" newDataType="VARCHAR2(20)" />
	</changeSet>

	<changeSet id="ST#108.9" author="naga.g">
		<sql>
			<![CDATA[
			          update  EXTENDEDFIELDDETAIL set FIELDLENGTH='20' where MODULEID in (select MODULEID from EXTENDEDFIELDHEADER where modulename in ('LOAN')) and FIELDNAME = 'TID';
				]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.1" author="sampath.d">
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="AddressLine1" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="AddressLine2" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="AddressLine3" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="City" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="State" type="VARCHAR2(8)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="Country" type="CHAR(2)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="PincodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#208.2" author="sampath.d">
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="AddressLine1" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="AddressLine2" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="AddressLine3" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="City" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="State" type="VARCHAR2(8)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="Country" type="CHAR(2)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="PinCodeId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#208.3" author="sampath.d">
		<addForeignKeyConstraint constraintName="FK_CD_MNFCTRERS_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="CD_MANUFACTURERS" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="TK#208.4" author="sampath.d">
		<addForeignKeyConstraint constraintName="FK_CD_MNFCTRERS_CNTRYVSPROV"
			referencedTableName="RMTCOUNTRYVSPROVINCE" referencedColumnNames="CPCOUNTRY,CPPROVINCE"
			baseTableName="CD_MANUFACTURERS" baseColumnNames="Country,State" />
	</changeSet>

	<changeSet id="TK#208.5" author="sampath.d">
		<addForeignKeyConstraint constraintName="FK_CD_MNFCTRERS_CITY"
			referencedTableName="RMTPROVINCEVSCITY" referencedColumnNames="PCCITY" baseTableName="CD_MANUFACTURERS"
			baseColumnNames="City" />
	</changeSet>

	<changeSet id="TK#208.6" author="sampath.d">
		<addForeignKeyConstraint constraintName="FK_CD_MNFCTRERS_T_PID" referencedTableName="PINCODES"
			referencedColumnNames="PinCodeId" baseTableName="CD_MANUFACTURERS_TEMP" baseColumnNames="PinCodeId" />
	</changeSet>

	<changeSet id="TK#208.7" author="sampath.d">
		<addForeignKeyConstraint constraintName="FK_CD_MNFCTRERS_T_CNTRYVSPROV"
			referencedTableName="RMTCOUNTRYVSPROVINCE" referencedColumnNames="CPCOUNTRY,CPPROVINCE"
			baseTableName="CD_MANUFACTURERS_TEMP" baseColumnNames="Country,State" />
	</changeSet>

	<changeSet id="TK#208.8" author="sampath.d">
		<addForeignKeyConstraint constraintName="FK_CD_MNFCTRERS_T_CITY"
			referencedTableName="RMTPROVINCEVSCITY" referencedColumnNames="PCCITY" baseTableName="CD_MANUFACTURERS_TEMP"
			baseColumnNames="City" />
	</changeSet>

	<changeSet id="TK#208.9_pre" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cd_manufacturers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.9" author="sampath.d">
		<createView viewName="CD_Manufacturers_VIEW" replaceIfExists="true">
			 SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MANUFACTURERS_TEMP T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
			UNION ALL
 			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MANUFACTURERS T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_MANUFACTURERS_TEMP
            WHERE CD_MANUFACTURERS_TEMP.MANUFACTURERID = T1.MANUFACTURERID))
		</createView>
	</changeSet>

	<changeSet id="TK#208.9_post" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cd_manufacturers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.10_pre" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cd_manufacturers_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.10" author="sampath.d">
		<createView viewName="CD_Manufacturers_AVIEW" replaceIfExists="true">
			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MANUFACTURERS T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
		</createView>
	</changeSet>

	<changeSet id="TK#208.10_post" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cd_manufacturers_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.11_pre" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cd_manufacturers_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.11" author="sampath.d">
		<createView viewName="CD_Manufacturers_TVIEW" replaceIfExists="true">
			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MANUFACTURERS_TEMP T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
		</createView>
	</changeSet>

	<changeSet id="TK#208.11_post" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cd_manufacturers_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.12" author="sampath.d">
		<sql>
			<![CDATA[
			
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_AddressLine1','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_AddressLine2','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_AddressLine3','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_City','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_State','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_Country','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_PinCode','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_AddressLine1'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_AddressLine2'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_AddressLine3'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_City'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_State'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_Country'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_PinCode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.13_pre" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cd_manufacturers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.13" author="sampath.d">
		<createView viewName="CD_Manufacturers_VIEW" replaceIfExists="true">
			 SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS_TEMP T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
			UNION ALL
 			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_MANUFACTURERS_TEMP
            WHERE CD_MANUFACTURERS_TEMP.MANUFACTURERID = T1.MANUFACTURERID))
		</createView>
	</changeSet>

	<changeSet id="TK#208.13_post" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cd_manufacturers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.14_pre" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cd_manufacturers_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.14" author="sampath.d">
		<createView viewName="CD_Manufacturers_AVIEW" replaceIfExists="true">
			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
		</createView>
	</changeSet>

	<changeSet id="TK#208.14_post" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cd_manufacturers_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.15_pre" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cd_manufacturers_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#208.15" author="sampath.d">
		<createView viewName="CD_Manufacturers_TVIEW" replaceIfExists="true">
			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS_TEMP T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
		</createView>
	</changeSet>

	<changeSet id="TK#208.15_post" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cd_manufacturers_tview');
			]]>
		</sql>
	</changeSet>

	<!-- Re-presentment -->
	<!-- <changeSet id="ST#106.01" author="Keerthi.P">
		<comment>Added bounce and lpp columns for Representment</comment>
		<addColumn tableName="PRESENTMENTHEADER">
			<column name="lppReq" type="boolean" defaultValueBoolean="false" />
			<column name="bounceReq" type="boolean" defaultValueBoolean="false" />
			<column name="approvedDate" type="DateTime" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#106.02" author="Keerthi.P">
		<comment>Added bounce and lpp columns for Representment</comment>
		<addColumn tableName="PRESENTMENTHEADER_TEMP">
			<column name="lppReq" type="boolean" defaultValueBoolean="false" />
			<column name="bounceReq" type="boolean" defaultValueBoolean="false" />
			<column name="approvedDate" type="DateTime" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#106.03" author="Keerthi.P">
		<sql>
			UPDATE PRESENTMENTHEADER_TEMP SET LPPREQ=0 WHERE LPPREQ IS NULL;
			UPDATE PRESENTMENTHEADER SET LPPREQ=0 WHERE LPPREQ IS NULL;
			
			UPDATE PRESENTMENTHEADER_TEMP SET BOUNCEREQ=0 WHERE BOUNCEREQ IS NULL;
			UPDATE PRESENTMENTHEADER SET BOUNCEREQ=0 WHERE BOUNCEREQ IS NULL;
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.04_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentheader_aview');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.04" author="Keerthi.P">
		<createView viewName="PRESENTMENTHEADER_AVIEW" replaceIfExists="true">
		<![CDATA[ 
	SELECT T1.ID, T1.REFERENCE,T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE,T1.STATUS, T1.MANDATETYPE,T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE,
	T1.BANKCODE,T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE,T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE,T1.WORKFLOWID,
	T1.DBSTATUSID, T2.PARTNERBANKNAME,T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,T1.IMPORTSTATUSID, T1.TOTALRECORDS,
	T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS,T3.BANKNAME ,T1.ENTITYCODE, T1.PRESENTMENTTYPE,
	T1.LPPREQ,T1.BOUNCEREQ,T1.APPROVEDDATE
	FROM PRESENTMENTHEADER T1
	LEFT JOIN PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
	LEFT JOIN BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
	    ]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.04_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentheader_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.05_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentheader_view');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.05" author="Keerthi.P">
		<createView viewName="PRESENTMENTHEADER_VIEW" replaceIfExists="true">
		<![CDATA[ 
	SELECT T1.ID, T1.REFERENCE,T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE,T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE,
	T1.BANKCODE,T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE,T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE,T1.WORKFLOWID,
	T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
	T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS,T3.BANKNAME,T1.ENTITYCODE, T1.PRESENTMENTTYPE,
	T1.LPPREQ,T1.BOUNCEREQ,T1.APPROVEDDATE
	FROM PRESENTMENTHEADER_Temp T1
	LEFT JOIN PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
	LEFT JOIN BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
	UNION ALL
	SELECT T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID,T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE,T1.FINBRANCH, T1.SCHDATE,
	T1.BANKCODE,T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE,T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE,T1.WORKFLOWID,
	T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
	T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS,T3.BANKNAME,T1.ENTITYCODE, T1.PRESENTMENTTYPE,
	T1.LPPREQ,T1.BOUNCEREQ,T1.APPROVEDDATE
	FROM PRESENTMENTHEADER T1
	LEFT JOIN PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
	LEFT JOIN BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
	WHERE NOT EXISTS (SELECT 1 FROM PRESENTMENTHEADER_TEMP WHERE ID = T1.ID)
	    ]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.05_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentheader_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.06" author="Keerthi.P">
		<comment>Added bounce and lpp amount PresentmentDetails</comment>
		<addColumn tableName="PRESENTMENTDETAILS">
			<column name="LPPAMOUNT" type="decimal(18,0)" defaultValue="0">
				<constraints nullable="false" />
			</column>
			<column name="BOUNCEAMOUNT" type="decimal(18,0)" defaultValue="0">
				<constraints nullable="false" />
			</column>
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#106.07" author="Keerthi.P">
		<comment>Added bounce and lpp amount PresentmentDetails</comment>
		<addColumn tableName="PRESENTMENTDETAILS_TEMP">
			<column name="LPPAMOUNT" type="decimal(18,0)" defaultValue="0">
				<constraints nullable="false" />
			</column>
			<column name="BOUNCEAMOUNT" type="decimal(18,0)" defaultValue="0">
				<constraints nullable="false" />
			</column>
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#106.08_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_aview');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.08" author="Keerthi.P">
		<createView viewName="PRESENTMENTDETAILS_AVIEW" replaceIfExists="true">
		<![CDATA[
		SELECT T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE,
		T1.SCHINSDUE, T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status,
		T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.MANDATETYPE,T3.FINTYPE,
		T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME ,T1.ReceiptID, T1.ECSRETURN, T1.ErrorCode, T1.ErrorDesc, T1.ManualAdviseId,
		T1.lppAmount, T1.bounceAmount, T7.BankName
		FROM PRESENTMENTDETAILS T1 INNER JOIN
		MANDATES T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN
		FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN
		RMTFINANCETYPES T4 ON T3.FINTYPE = T4.FINTYPE INNER JOIN
		CUSTOMERS T5 ON T5.CUSTID = T3.CUSTID LEFT OUTER JOIN
		BankBranches T6 ON T2.BankBranchID = T6.BankBranchID LEFT OUTER JOIN
		BMTBankDetail T7 ON T6.BankCode=T7.BankCode
		]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.08_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.09_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_view');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.09" author="Keerthi.P">
		<createView viewName="PRESENTMENTDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[
	 	SELECT T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
	 	T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status, T1.Version ,
	 	T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.MANDATETYPE,
	 	T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME, T1.ReceiptID ,T1.ECSRETURN, T1.ErrorCode, T1.ErrorDesc, T1.ManualAdviseId,
	 	T1.lppAmount, T1.bounceAmount, T7.BankName 
	 	FROM PRESENTMENTDETAILS_TEMP T1 INNER JOIN
	 	MANDATES T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN
	 	FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN
	 	RMTFINANCETYPES T4 ON T3.FINTYPE = T4.FINTYPE INNER JOIN
	 	CUSTOMERS T5 ON T5.CUSTID = T3.CUSTID LEFT OUTER JOIN
	 	BankBranches T6 ON T2.BankBranchID = T6.BankBranchID LEFT OUTER JOIN
	 	BMTBankDetail T7 ON T6.BankCode=T7.BankCode
	 	UNION ALL
	 	SELECT T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
	 	T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status, T1.Version ,
	 	T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.MANDATETYPE,
	 	T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME , T1.ReceiptID ,T1.ECSRETURN, T1.ErrorCode, T1.ErrorDesc, T1.ManualAdviseId,
	 	T1.lppAmount, T1.bounceAmount, T7.BankName
		FROM PRESENTMENTDETAILS T1 INNER JOIN
		MANDATES T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN
		FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN
		RMTFINANCETYPES T4 ON T3.FINTYPE = T4.FINTYPE INNER JOIN
		CUSTOMERS T5 ON T5.CUSTID = T3.CUSTID LEFT OUTER JOIN
		BankBranches T6 ON T2.BankBranchID = T6.BankBranchID LEFT OUTER JOIN
		BMTBankDetail T7 ON T6.BankCode=T7.BankCode WHERE NOT EXISTS (SELECT 1 FROM PRESENTMENTDETAILS_TEMP WHERE ID = T1.ID)
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.09_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.10_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_pdcaview');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.10" author="Keerthi.P">
		<createView viewName="PRESENTMENTDETAILS_PDCAVIEW" replaceIfExists="true">
		<![CDATA[
	SELECT t1.id, t1.presentmentid, t1.presentmentref, t1.finreference, t1.schdate, t1.mandateid, t1.schamtdue, t1.schpridue, t1.schpftdue, t1.schfeedue, t1.schinsdue,
 	t1.schpenaltydue, t1.advanceamt, t1.excessid, t1.adviseamt, t1.presentmentamt, t1.excludereason, t1.tdsamount, t1.bounceid, t1.emino, t1.status, t1.version,
 	t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.chequetype AS mandatetype,
 	t3.fintype, t4.fintypedesc, t5.custshrtname AS customername, t1.receiptid, t1.ecsreturn, t1.errorcode, t1.errordesc, t1.manualadviseid,
 	t1.lppAmount, t1.bounceAmount, t7.BankName
	FROM presentmentdetails t1 JOIN
	chequedetail t2 ON t2.chequedetailsid = t1.mandateid JOIN
	financemain t3 ON t1.finreference = t3.finreference JOIN
	rmtfinancetypes t4 ON t3.fintype = t4.fintype JOIN
	customers t5 ON t5.custid = t3.custid LEFT OUTER JOIN
	BankBranches t6 ON t2.BankBranchID = t6.BankBranchID LEFT OUTER JOIN
	BMTBankDetail t7 ON T6.BankCode=t7.BankCode
	    ]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.10_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_pdcaview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.11_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_pdcview');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.11" author="Keerthi.P">
		<createView viewName="PRESENTMENTDETAILS_PDCVIEW" replaceIfExists="true">
		<![CDATA[
	SELECT t1.id, t1.presentmentid, t1.presentmentref, t1.finreference, t1.schdate, t1.mandateid, t1.schamtdue, t1.schpridue, t1.schpftdue, t1.schfeedue, t1.schinsdue,
	t1.schpenaltydue, t1.advanceamt, t1.excessid, t1.adviseamt, t1.presentmentamt, t1.excludereason, t1.tdsamount, t1.bounceid, t1.emino, t1.status, t1.version,
	t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.chequetype mandatetype,
	t3.fintype, t4.fintypedesc, t5.custshrtname customername, t1.receiptid, t1.ecsreturn, t1.errorcode, t1.errordesc, t1.manualadviseid,
	t1.lppAmount, t1.bounceAmount,t7.BankName
	FROM presentmentdetails_temp t1 JOIN
	chequedetail t2 ON	t2.chequedetailsid = t1.mandateid JOIN
	financemain t3 ON t1.finreference = t3.finreference JOIN
	rmtfinancetypes t4 ON t3.fintype = t4.fintype JOIN
	customers t5 ON t5.custid = t3.custid LEFT OUTER JOIN
	BankBranches t6 ON t2.BankBranchID = t6.BankBranchID
	LEFT OUTER JOIN BMTBankDetail t7 ON T6.BankCode=t7.BankCode
	UNION ALL
	SELECT t1.id, t1.presentmentid, t1.presentmentref, t1.finreference, t1.schdate, t1.mandateid, t1.schamtdue, t1.schpridue, t1.schpftdue, t1.schfeedue, t1.schinsdue, t1.schpenaltydue,
	t1.advanceamt, t1.excessid, t1.adviseamt, t1.presentmentamt, t1.excludereason, t1.tdsamount, t1.bounceid, t1.emino, t1.status, t1.version,
	t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.chequetype mandatetype,
	t3.fintype, t4.fintypedesc, t5.custshrtname customername, t1.receiptid, t1.ecsreturn, t1.errorcode, t1.errordesc, t1.manualadviseid,
	t1.lppAmount, t1.bounceAmount, t7.BankName 
	FROM presentmentdetails t1 JOIN 
	chequedetail t2 ON t2.chequedetailsid = t1.mandateid JOIN 
	financemain t3 ON t1.finreference = t3.finreference JOIN
	rmtfinancetypes t4 ON t3.fintype = t4.fintype JOIN
	customers t5 ON t5.custid = t3.custid LEFT OUTER JOIN
	BankBranches t6 ON t2.BankBranchID = t6.BankBranchID LEFT OUTER JOIN
	BMTBankDetail t7 ON T6.BankCode=t7.BankCode
	WHERE NOT (EXISTS ( SELECT 1 FROM presentmentdetails_temp WHERE presentmentdetails_temp.id = t1.id))
	    ]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.11_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_pdcview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.12_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentheader_aview');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.12" author="Keerthi.P">
		<createView viewName="PRESENTMENTHEADER_AVIEW" replaceIfExists="true">
		<![CDATA[ 
	SELECT T1.ID, T1.REFERENCE,T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE,T1.STATUS, T1.MANDATETYPE, T1.EMANDATESOURCE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE,
	T1.BANKCODE,T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE,T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE,T1.WORKFLOWID,
	T1.DBSTATUSID, T2.PARTNERBANKNAME,T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,T1.IMPORTSTATUSID, T1.TOTALRECORDS,
	T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS,T3.BANKNAME ,T1.ENTITYCODE, T1.PRESENTMENTTYPE,
	T1.LPPREQ,T1.BOUNCEREQ,T1.APPROVEDDATE
	FROM PRESENTMENTHEADER T1
	LEFT JOIN PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
	LEFT JOIN BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
	    ]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.12_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentheader_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.13_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentheader_view');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.13" author="Keerthi.P">
		<createView viewName="PRESENTMENTHEADER_VIEW" replaceIfExists="true">
		<![CDATA[ 
	SELECT T1.ID, T1.REFERENCE,T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE,T1.STATUS, T1.MANDATETYPE, T1.EMANDATESOURCE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE,
	T1.BANKCODE,T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE,T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE,T1.WORKFLOWID,
	T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
	T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS,T3.BANKNAME,T1.ENTITYCODE, T1.PRESENTMENTTYPE,
	T1.LPPREQ,T1.BOUNCEREQ,T1.APPROVEDDATE
	FROM PRESENTMENTHEADER_Temp T1
	LEFT JOIN PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
	LEFT JOIN BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
	UNION ALL
	SELECT T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID,T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.EMANDATESOURCE, T1.LOANTYPE,T1.FINBRANCH, T1.SCHDATE,
	T1.BANKCODE,T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE,T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE,T1.WORKFLOWID,
	T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
	T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS,T3.BANKNAME,T1.ENTITYCODE, T1.PRESENTMENTTYPE,
	T1.LPPREQ,T1.BOUNCEREQ,T1.APPROVEDDATE
	FROM PRESENTMENTHEADER T1
	LEFT JOIN PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
	LEFT JOIN BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
	WHERE NOT EXISTS (SELECT 1 FROM PRESENTMENTHEADER_TEMP WHERE ID = T1.ID)
	    ]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.13_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentheader_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.14_pre" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_pdcview');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#106.14" author="Keerthi.P">
		<createView viewName="PRESENTMENTDETAILS_PDCVIEW" replaceIfExists="true">
		<![CDATA[
	SELECT t1.id, t1.presentmentid, t1.presentmentref, t1.finreference, t1.schdate, t1.mandateid, t1.schamtdue, t1.schpridue, t1.schpftdue, t1.schfeedue, t1.schinsdue,
	t1.schpenaltydue, t1.advanceamt, t1.excessid, t1.adviseamt, t1.presentmentamt, t1.excludereason, t1.tdsamount, t1.bounceid, t1.emino, t1.status, t1.version,
	t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.chequetype mandatetype,
	t3.fintype, t4.fintypedesc, t5.custshrtname customername, t1.receiptid, t1.ecsreturn, t1.errorcode, t1.errordesc, t1.manualadviseid,
	t1.lppAmount, t1.bounceAmount,t7.BankName
	FROM presentmentdetails_temp t1 JOIN
	chequedetail t2 ON	t2.chequedetailsid = t1.mandateid JOIN
	financemain t3 ON t1.finreference = t3.finreference JOIN
	rmtfinancetypes t4 ON t3.fintype = t4.fintype JOIN
	customers t5 ON t5.custid = t3.custid LEFT OUTER JOIN
	BankBranches t6 ON t2.BankBranchID = t6.BankBranchID
	LEFT OUTER JOIN BMTBankDetail t7 ON T6.BankCode=t7.BankCode
	UNION ALL
	SELECT t1.id, t1.presentmentid, t1.presentmentref, t1.finreference, t1.schdate, t1.mandateid, t1.schamtdue, t1.schpridue, t1.schpftdue, t1.schfeedue, t1.schinsdue, t1.schpenaltydue,
	t1.advanceamt, t1.excessid, t1.adviseamt, t1.presentmentamt, t1.excludereason, t1.tdsamount, t1.bounceid, t1.emino, t1.status, t1.version,
	t1.lastmntby, t1.lastmnton, t1.recordstatus, t1.rolecode, t1.nextrolecode, t1.taskid, t1.nexttaskid, t1.recordtype, t1.workflowid, t2.chequetype mandatetype,
	t3.fintype, t4.fintypedesc, t5.custshrtname customername, t1.receiptid, t1.ecsreturn, t1.errorcode, t1.errordesc, t1.manualadviseid,
	t1.lppAmount, t1.bounceAmount, t7.BankName 
	FROM presentmentdetails t1 JOIN 
	chequedetail t2 ON t2.chequedetailsid = t1.mandateid JOIN 
	financemain t3 ON t1.finreference = t3.finreference JOIN
	rmtfinancetypes t4 ON t3.fintype = t4.fintype JOIN
	customers t5 ON t5.custid = t3.custid LEFT OUTER JOIN
	BankBranches t6 ON t2.BankBranchID = t6.BankBranchID LEFT OUTER JOIN
	BMTBankDetail t7 ON T6.BankCode=t7.BankCode
	WHERE NOT (EXISTS ( SELECT 1 FROM presentmentdetails_temp WHERE presentmentdetails_temp.id = t1.id))
	    ]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#106.14_post" author="Keerthi.P" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_pdcview');
			]]>
		</sql>
	</changeSet> -->
	
	<changeSet id="TK#289.1" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE 	FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT='EXPENSE';
				DELETE 	FROM BMTAEEVENTS WHERE AEEVENTCODE='EXPENSE';
				
				DELETE 	FROM BMTAEEVENTS WHERE AEEVENTCODE='INDAS'; 
 
				INSERT INTO BMTAEEVENTS(AEEVENTCODE, AEEVENTCODEDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, ACTIVE) VALUES ('EXPENSE', 'Accounting on Expense Upload', 1, 1000, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0, 1);
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('EXPENSE', 0, 'ae_expense', 'EXPENSES', 1, 1, 1005, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO BMTAEEVENTS(AEEVENTCODE, AEEVENTCODEDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, ACTIVE) VALUES ('INDAS', 'Accounting on Amortization Process on Month END', 1, 1000, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0, 1);
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#289.2" author="sampath.d">
		<sql>
			<![CDATA[
				delete  from CategoryWiseEvents where AeEventCode='EXPENSE' and CategoryCode ='C';
				delete  from CategoryWiseEvents where AeEventCode='EXPENSE' and CategoryCode ='F';
				delete  from CategoryWiseEvents where AeEventCode='EXPENSE' and CategoryCode ='O';
				delete  from CategoryWiseEvents where AeEventCode='EXPENSE' and CategoryCode ='S';

				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('EXPENSE', 'C', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('EXPENSE', 'F', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('EXPENSE', 'O', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('EXPENSE', 'S', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				
				delete  from CategoryWiseEvents where AeEventCode='INDAS' and CategoryCode ='C';
				delete  from CategoryWiseEvents where AeEventCode='INDAS' and CategoryCode ='F';
				delete  from CategoryWiseEvents where AeEventCode='INDAS' and CategoryCode ='O';
				delete  from CategoryWiseEvents where AeEventCode='INDAS' and CategoryCode ='S';

				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('INDAS', 'C', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('INDAS', 'F', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('INDAS', 'O', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
				INSERT INTO CategoryWiseEvents (AEEventCode, CategoryCode, Active, Mandatory, SeqOrder) VALUES ('INDAS', 'S', 1, 0, (select max(SeqOrder)+1 from CategoryWiseEvents));
			]]>
		</sql>
	</changeSet>


	<changeSet id="TK#289.3" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE 	FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT='INDAS';
				
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('INDAS', 0, 'DBD_AMZ', 'Merchant Amortized Amount', 1, 1, 1005, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('INDAS', 0, 'MBD_AMZ', 'Manufacturer Amortized Amount', 1, 1, 1005, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('INDAS', 0, 'DBMBD_AMZ', 'Manufacturer-Merchant Amortized Amount', 1, 1, 1005, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#352.1" author="sampath.d">
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="ManufacPAN" type="VARCHAR2(10)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="GstInNumber" type="VARCHAR2(15)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="ManfMobileNo" type="VARCHAR2(15)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="ManfEmailId" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS">
			<column name="ManfacContactName" type="VARCHAR2(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#352.2" author="sampath.d">
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="ManufacPAN" type="VARCHAR2(10)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="GstInNumber" type="VARCHAR2(15)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="ManfMobileNo" type="VARCHAR2(15)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="ManfEmailId" type="VARCHAR2(50)" />
		</addColumn>
		<addColumn tableName="CD_MANUFACTURERS_TEMP">
			<column name="ManfacContactName" type="VARCHAR2(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#352.3" author="sampath.d">
		<createView viewName="CD_Manufacturers_VIEW" replaceIfExists="true">
			 SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
          		T1.MANUFACPAN,
          		T1.GSTINNUMBER,
          		T1.MANFMOBILENO,
          		T1.MANFEMAILID,
          		T1.MANFACCONTACTNAME,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS_TEMP T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
			UNION ALL
 			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
          		T1.MANUFACPAN,
          		T1.GSTINNUMBER,
          		T1.MANFMOBILENO,
          		T1.MANFEMAILID,
          		T1.MANFACCONTACTNAME,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_MANUFACTURERS_TEMP
            WHERE CD_MANUFACTURERS_TEMP.MANUFACTURERID = T1.MANUFACTURERID))
		</createView>
	</changeSet>

	<changeSet id="TK#352.4" author="sampath.d">
		<createView viewName="CD_Manufacturers_AVIEW" replaceIfExists="true">
			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
          		T1.MANUFACPAN,
          		T1.GSTINNUMBER,
          		T1.MANFMOBILENO,
          		T1.MANFEMAILID,
          		T1.MANFACCONTACTNAME,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
		</createView>
	</changeSet>

	<changeSet id="TK#352.5" author="sampath.d">
		<createView viewName="CD_Manufacturers_TVIEW" replaceIfExists="true">
			SELECT T1.MANUFACTURERID,
    			T1.NAME,
   				T1.DESCRIPTION,
    			T1.CHANNEL,
          		T1.ACTIVE,
          		T1.ADDRESSLINE1,
          		T1.ADDRESSLINE2,
          		T1.ADDRESSLINE3,
          		T1.CITY,
          		T4.PCCITYNAME LOVDESCCITYNAME,
          		T1.STATE,
          		T3.CPPROVINCENAME LOVDESCSTATENAME,
          		T1.COUNTRY,
          		T2.COUNTRYDESC LOVDESCCOUNTRYNAME,
          		T1.PINCODEID,
          		T5.AREANAME PINAREADESC,
          		T1.MANUFACPAN,
          		T1.GSTINNUMBER,
          		T1.MANFMOBILENO,
          		T1.MANFEMAILID,
          		T1.MANFACCONTACTNAME,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID,
    			T5.PINCODE
   			FROM CD_MANUFACTURERS_TEMP T1
   			LEFT JOIN BMTCOUNTRIES T2 ON T1.COUNTRY = T2.COUNTRYCODE
		    LEFT JOIN RMTCOUNTRYVSPROVINCE T3 ON T1.COUNTRY = T3.CPCOUNTRY AND T1.STATE = T3.CPPROVINCE
		    LEFT JOIN RMTPROVINCEVSCITY T4 ON T1.COUNTRY = T4.PCCOUNTRY AND T1.STATE = T4.PCPROVINCE AND T1.CITY = T4.PCCITY
		    LEFT JOIN PINCODES T5 ON T5.PINCODEID = T1.PINCODEID
		</createView>
	</changeSet>

	<changeSet id="TK#352.6" author="sampath.d">
		<sql>
			<![CDATA[
			
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_PANNumber','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_GSTINNumber','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_MobileNumber','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_EmailId','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CDManufacturersDialogue_ContactName','CDManufacturersDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_PANNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_GSTINNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_MobileNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_EmailId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MANUFACTURERS_MAKER'), (Select RightID from SecRights where RightName = 'CDManufacturersDialogue_ContactName'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#352.7" author="sampath.d">
		<addColumn tableName="CD_Merchants">
			<column name="MerchPAN" type="varchar(10)" />
		</addColumn>
		<addColumn tableName="CD_Merchants">
			<column name="GstInNumber" type="varchar(15)" />
		</addColumn>
		<addColumn tableName="CD_Merchants">
			<column name="MerchMobileNo" type="varchar(15)" />
		</addColumn>
		<addColumn tableName="CD_Merchants">
			<column name="MerchEmailId" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#352.8" author="sampath.d">
		<addColumn tableName="CD_Merchants_TEMP">
			<column name="MerchPAN" type="varchar(10)" />
		</addColumn>
		<addColumn tableName="CD_Merchants_TEMP">
			<column name="GstInNumber" type="varchar(15)" />
		</addColumn>
		<addColumn tableName="CD_Merchants_TEMP">
			<column name="MerchMobileNo" type="varchar(15)" />
		</addColumn>
		<addColumn tableName="CD_Merchants_TEMP">
			<column name="MerchEmailId" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#352.9" author="sampath.d">
		<createView viewName="CD_Merchants_VIEW" replaceIfExists="true">
			  SELECT T1.MERCHANTID,
    			T1.MERCHANTNAME,
   				T1.STOREID,
    			T1.STORENAME,     
    			T1.STOREADDRESSLINE1,
    			T1.STOREADDRESSLINE2,
    			T1.STOREADDRESSLINE3,
    			T1.STORECITY,
    			T1.STORESTATE,
         		T1.STORECOUNTRY,
         		T1.CITYNAME,
          		T1.STATENAME,
          		T1.COUNTRYNAME,
    			T1.POSID,
    			T1.AVGTRANPERMNTH,
    			T1.AVGTRANAMTPERMNTH,
    			T1.TRANAMTPERTRAN,
    			T1.TRANAMTPERDAY,
    			T1.ALLOWREFUND,
    			T1.PEAKTRANSPERDAY,
    			T1.CHANNEL,
    			T1.PINCODE,
    			T1.ACTIVE,
    			T1.MERCHPAN,
    			T1.GSTINNUMBER,
    			T1.MERCHMOBILENO,
    			T1.MERCHEMAILID,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MERCHANTS_TEMP T1
			UNION ALL
 			SELECT T1.MERCHANTID,
    			T1.MERCHANTNAME,
   				T1.STOREID,
    			T1.STORENAME,     
    			T1.STOREADDRESSLINE1,
    			T1.STOREADDRESSLINE2,
    			T1.STOREADDRESSLINE3,
    			T1.STORECITY,
    			T1.STORESTATE,
    			T1.STORECOUNTRY,
         		T1.CITYNAME,
          		T1.STATENAME,
          		T1.COUNTRYNAME,
    			T1.POSID,
    			T1.AVGTRANPERMNTH,
    			T1.AVGTRANAMTPERMNTH,
    			T1.TRANAMTPERTRAN,
    			T1.TRANAMTPERDAY,
    			T1.ALLOWREFUND,
    			T1.PEAKTRANSPERDAY,
    			T1.CHANNEL,
    			T1.PINCODE,
    			T1.ACTIVE,
    			T1.MERCHPAN,
    			T1.GSTINNUMBER,
    			T1.MERCHMOBILENO,
    			T1.MERCHEMAILID,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MERCHANTS T1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM CD_MERCHANTS_TEMP
            WHERE CD_MERCHANTS_TEMP.MERCHANTID = T1.MERCHANTID))
		</createView>
	</changeSet>

	<changeSet id="TK#352.10" author="sampath.d">
		<createView viewName="CD_Merchants_AVIEW" replaceIfExists="true">
			  SELECT T1.MERCHANTID,
    			T1.MERCHANTNAME,
   				T1.STOREID,
    			T1.STORENAME,     
    			T1.STOREADDRESSLINE1,
    			T1.STOREADDRESSLINE2,
    			T1.STOREADDRESSLINE3,
    			T1.STORECITY,
    			T1.STORESTATE,
    			T1.STORECOUNTRY,
         		T1.CITYNAME,
          		T1.STATENAME,
          		T1.COUNTRYNAME,
    			T1.POSID,
    			T1.AVGTRANPERMNTH,
    			T1.AVGTRANAMTPERMNTH,
    			T1.TRANAMTPERTRAN,
    			T1.TRANAMTPERDAY,
    			T1.ALLOWREFUND,
    			T1.PEAKTRANSPERDAY,
    			T1.CHANNEL,
    			T1.PINCODE,
    			T1.ACTIVE,
    			T1.MERCHPAN,
    			T1.GSTINNUMBER,
    			T1.MERCHMOBILENO,
    			T1.MERCHEMAILID,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MERCHANTS T1
		</createView>
	</changeSet>

	<changeSet id="TK#352.11" author="sampath.d">
		<createView viewName="CD_Merchants_TVIEW" replaceIfExists="true">
			  SELECT T1.MERCHANTID,
    			T1.MERCHANTNAME,
   				T1.STOREID,
    			T1.STORENAME,     
    			T1.STOREADDRESSLINE1,
    			T1.STOREADDRESSLINE2,
    			T1.STOREADDRESSLINE3,
    			T1.STORECITY,
    			T1.STORESTATE,
    			T1.STORECOUNTRY,
          		T1.CITYNAME,
          		T1.STATENAME,
          		T1.COUNTRYNAME,
    			T1.POSID,
    			T1.AVGTRANPERMNTH,
    			T1.AVGTRANAMTPERMNTH,
    			T1.TRANAMTPERTRAN,
    			T1.TRANAMTPERDAY,
    			T1.ALLOWREFUND,
    			T1.PEAKTRANSPERDAY,
    			T1.CHANNEL,
    			T1.ACTIVE,
    			T1.MERCHPAN,
    			T1.GSTINNUMBER,
    			T1.MERCHMOBILENO,
    			T1.MERCHEMAILID,
    			T1.VERSION,
    			T1.LASTMNTBY,
    			T1.LASTMNTON,
    			T1.RECORDSTATUS,
   				T1.ROLECODE,
    			T1.NEXTROLECODE,
    			T1.TASKID,
    			T1.NEXTTASKID,
    			T1.RECORDTYPE,
    			T1.WORKFLOWID
   			FROM CD_MERCHANTS_TEMP T1
		</createView>
	</changeSet>

	<changeSet id="TK#352.12" author="sampath.d">
		<sql>
			<![CDATA[
			
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_PANNumber','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_GSTINNumber','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_MobileNumber','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'MerchantDialogue_EmailId','MerchantDialogue',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_PANNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_GSTINNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_MobileNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_MERCHANT_MAKER'), (Select RightID from SecRights where RightName = 'MerchantDialogue_EmailId'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			]]>
		</sql>
	</changeSet>

	<changeSet id="TK#352.13" author="sampath.d">
		<addColumn tableName="CashBackDetails">
			<column name="FeeTypeId" type="varchar(10)" />
		</addColumn>
		<addColumn tableName="CashBackDetails">
			<column name="RetainedAmount" type="Number(15,2)" />
		</addColumn>
		<addColumn tableName="CashBackDetails">
			<column name="CGST" type="Number(15,2)" />
		</addColumn>
		<addColumn tableName="CashBackDetails">
			<column name="SGST" type="Number(15,2)" />
		</addColumn>
		<addColumn tableName="CashBackDetails">
			<column name="IGST" type="Number(15,2)" />
		</addColumn>
		<addColumn tableName="CashBackDetails">
			<column name="UGST" type="Number(15,2)" />
		</addColumn>
		<addColumn tableName="CashBackDetails">
			<column name="TGST" type="Number(15,2)" />
		</addColumn>
		<addColumn tableName="CashBackDetails">
			<column name="Cess" type="Number(15,2)" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#352.14" author="sampath.d">
		<addColumn tableName="CashBackDetails">
			<column name="ManfMerchId" type="varchar(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="TK#352.15" author="sampath.d">
		<addColumn tableName="CashBackDetails">
			<column name="StoreName" type="varchar(50)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="TK#352.16" author="sampath.d">
		<addColumn tableName="CashBackDetails">
			<column name="LinkedTranId" type="NUMBER(19,0)" />
		</addColumn>
	</changeSet>

 	<changeSet id="TK#352.17" author="sampath.d">
		<sql>
			<![CDATA[
			Delete from MASTER_DEF where key_type = 'MBD_DBD';
			Delete from MASTER_DEF where key_type = 'MBD_DBD1';
			Delete from MASTER_DEF where key_type = 'MBD_DBD2';
			Delete from MASTER_DEF where key_type = 'MBD_DBD3';
			Insert into MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) values ('GST_FEETYPE','MBD_DBD','IGST');
			Insert into MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) values ('GST_FEETYPE','MBD_DBD1','UGST');
			Insert into MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) values ('GST_FEETYPE','MBD_DBD2','SGST');
			Insert into MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) values ('GST_FEETYPE','MBD_DBD3','CGST');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="TK#352.18" author="sampath.d">
		<sql>
			<![CDATA[
			ALTER TABLE CASHBACKDETAILS MODIFY MANFMERCHID VARCHAR(15);
 			]]>
		</sql>
	</changeSet> 

	<changeSet id="TK#352.19" author="sampath.d">
		<sql>
			<![CDATA[
			ALTER TABLE FI_FIN_DTLS_CD MODIFY ENTITY_TYPE VARCHAR(50);
 			]]>
		</sql>
	</changeSet> 
	
	<changeSet id="PSD#172691_pre" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="PSD#172691" author="sampath.d">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FA.PAYMENTID,
				FA.FINREFERENCE,
				'D' CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN FA.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN FA.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN
				FA.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE FA.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				FA.AMTTOBERELEASED,
				FA.DISBDATE,
				FA.LLDATE,
				FA.PAYABLELOC,
				FA.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				FA.BENEFICIARYACCNO,
				CASE
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				OR FA.PAYMENTTYPE = 'DD'
				THEN
				FA.LIABILITYHOLDNAME
				ELSE FA.BENEFICIARYNAME
				END BENEFICIARYNAME,
				(FA.PHONECOUNTRYCODE || FA.PHONEAREACODE) || FA.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				BRCA.CustAddrHNbr ||','|| BRCA.CustAddrStreet ||','|| BRC.PCCITYNAME ||','|| BRS.CPPROVINCENAME  BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				FA.STATUS,
				FA.DESCRIPTION REMARKS,
				FA.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID
				PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				FA.INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				PB.ACTYPE PARTNERBANKACTYPE,
				FA.DISBCCY
				FROM FINADVANCEPAYMENTS FA
				JOIN
				(SELECT FINANCEMAIN_TEMP.CUSTID,
				FINANCEMAIN_TEMP.FINREFERENCE,
				FINANCEMAIN_TEMP.FINTYPE,
				FINANCEMAIN_TEMP.FINISACTIVE
				FROM FINANCEMAIN_TEMP
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM
				ON FM.FINREFERENCE = FA.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID	
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE	= FA.DISBCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE	ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID	AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE =	BB.BANKCODE
				LEFT JOIN ( SELECT PB_1.PARTNERBANKID,	
				PBD_1.BANKNAME,
				PBB.BRANCHDESC,
				PBBRC.PCCITYNAME,
				PBBRS.CPPROVINCENAME FROM PARTNERBANKS PB_1
				JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE AND PBB.BANKCODE = PB_1.BANKCODE
				JOIN BMTBANKDETAIL PBD_1 ON PBD_1.BANKCODE = PBB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
				) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND
				BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID
				AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES	BRCA ON	BRCA.CUSTID = BR.CUSTID
				AND BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE FA.STATUS = 'APPROVED' AND NOT (FA.PAYMENTID IN ( 
				SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
				AND NOT	(FA.PAYMENTID IN ( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP))
				UNION ALL
				SELECT
				PI.PAYMENTINSTRUCTIONID PAYMENTID,
				PH.FINREFERENCE,
				PH.PAYMENTTYPE CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN PI.PAYMENTTYPE =
				'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.POSTDATE
				DISBDATE,
				PI.POSTDATE LLDATE,
				PI.PAYABLELOC,
				PI.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL
				CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				PI.ACCOUNTNO BENEFICIARYACCNO,
				CASE
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				OR PI.PAYMENTTYPE = 'DD'
				THEN
				PI.FAVOURNAME
				ELSE PI.ACCTHOLDERNAME
				END BENEFICIARYNAME,
				PI.PHONECOUNTRYCODE || PI.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				'' BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE
				PARTNERBANK_CODE,
				PI.POSTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO
				PARTNERBANK_ACCOUNTNO,
				PB.ACTYPE PARTNERBANKACTYPE,
				PI.PAYMENTCCY
				FROM PAYMENTINSTRUCTIONS PI
				JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
				JOIN (SELECT
				FINANCEMAIN.CUSTID,
				FINANCEMAIN.FINREFERENCE,
				FINANCEMAIN.FINTYPE,
				FINANCEMAIN.FINISACTIVE
				FROM FINANCEMAIN
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN_TEMP T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM ON FM.FINREFERENCE = PH.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID
				AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY	BBRC ON BBRC.PCCITY = BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID
				AND BR.ACCNUMBER = PI.ACCOUNTNO	AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON	BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID	AND	BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY = BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE PI.STATUS = 'APPROVED'
				AND NOT
				(PI.PAYMENTINSTRUCTIONID IN
				( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
				DISBURSEMENT_REQUESTS
				))
				UNION ALL
				SELECT PI.ID PAYMENTID,
				VR.PRIMARYLINKREF FINREFERENCE,
				'I' CHANNEL,
				PI.PROVIDERID,
				CASE
				WHEN
				PI.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN
				PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.PAYMENTDATE DISBDATE,
				PI.PAYMENTDATE LLDATE,
				'' PAYABLELOC,
				'' PRINTINGLOC,
				'' CUSTCIF,
				'' CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				'' CUSTOMER_EMAIL,
				'' CUSTOMER_STATE,
				'' CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
				AVD.DEALERNAME BENEFICIARYNAME,
				AVD.DEALERTELEPHONE
				BENEFICIARY_MOBILE,
				AVD.EMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
				AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
				AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				'' FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				PI.PAYMENTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				1 FINISACTIVE,
				PI.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				PB.ACTYPE PARTNERBANKACTYPE,
				PI.PAYMENTCCY
				FROM INSURANCEPAYMENTINSTRUCTIONS PI
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON	PB.PARTNERBANKID = PI.PARTNERBANKID
				JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
				JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
				JOIN VASRECORDING VR ON VR.PAYMENTINSID = PI.ID
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY	= BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	AVD.DEALERCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				WHERE PI.STATUS = 'APPROVED' AND PI.PAYMENTAMOUNT > 0
				AND NOT (PI.ID IN( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
							 ]]>
		</createView>
	</changeSet>

	<changeSet id="PSD#172691_post" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="TK#352.20" author="sampath.d">
		<sql>
			<![CDATA[
			ALTER TABLE FI_FIN_DTLS_CD MODIFY SECTOR_CODE VARCHAR(8);
			ALTER TABLE FI_FIN_DTLS_CD MODIFY PORTFOLIO VARCHAR(8);
			ALTER TABLE FI_FIN_DTLS_CD MODIFY PRODUCT_CODE VARCHAR(8);
			ALTER TABLE FI_FIN_DTLS_CD MODIFY DEPARTMENT_CODE VARCHAR(8);
 			]]>
		</sql>
	</changeSet> 
	
	<changeSet id="TK#289.10" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE FROM BMTAEEVENTS WHERE AEEVENTCODE='CBRET';
				INSERT INTO BMTAEEVENTS(aeeventcode, aeeventcodedesc, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, active) VALUES ('CBRET', 'Cash Back Retained', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);

				DELETE FROM BMTAMOUNTCODES where ALLOWEDEVENT='CBRET';
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'ae_cbret','Cash Back Retained amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'cbret_igst','Cash Back Retained IGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'cbret_ugst','Cash Back Retained UGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'cbret_cgst','Cash Back Retained CGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'cbret_sgst','Cash Back Retained SGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'cbret_cess','Cash Back Retained CESS amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
					
				DELETE FROM CATEGORYWISEEVENTS Where AEEVENTCODE= 'CBRET' and CATEGORYCODE= 'C';
				INSERT INTO CATEGORYWISEEVENTS VALUES('CBRET','C',1,0,(Select max(seqorder)+1 from CATEGORYWISEEVENTS Where CATEGORYCODE= 'C'));
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="PSD#172930.1" author="sampath.d">
		<sql>
			<![CDATA[
			DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'EARLYPAY';

			DELETE FROM BMTAEEVENTS WHERE AEEVENTCODE='EARLYPAY';

			INSERT INTO BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE) VALUES ('EARLYPAY','Partial Payment',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,'1');

			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_insttot','Installment Total (P+I)','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_rpPri','Total Repay Principal now (P)','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_instpri','Installment Princiapl','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_schFeePay','Scheduled Fee','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_payableAdvise','Payable advise amount for payment/receipt','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_rpTds','TDS Amount','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_penaltyPaid','Penalty Paid','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_penaltyDue','Penalty Due','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_toExcessAmt','To Excess Amount','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_excessAmt','Excess amount for payment/receipt','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_InsPay','Insurance amount paid','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_InsuranceAmt','Insurance amount scheduled','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_suplRentPay','Suplementary Rent','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_rpPft','Total Repay Interest now (P)','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_toEmiAdvance','To EMI Advance Amount','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_insRefund','Insurance amount refunded','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_incrCostPay','Increased Cost Paid','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_instpft','Installment Interest','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_penaltyWaived','Penalty Waived','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_rpTot','Total Repay now (P+I)','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_FeeChargeAmt','Total Fee and Charges paid/scheduled now','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_penalty','Penalty Amount','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_emiInAdvance','EMI in advance amount for payment/receipt','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_pftChg','Interest Change','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','bounceChargePaid','Bounce charges Paid','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','bounceChargeWaived','Bounce charges Waived','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','EA_ReceiptAmount','Total Receipt Amount from EMIAdvance','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','PB_ReceiptAmount','Total Receipt Amount from Bank','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','PA_ReceiptAmount','Total Receipt Amount from Payable','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','EX_ReceiptAmount','Total Receipt Amount from Excess','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_dLPIAmz','Amortized Late Payment Interest','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_dLPPAmz','Amortized Late Payment Penalty','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_lpiPaid','LPI Paid Now','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_lpiWaived','LPI Waived Now','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_dGSTLPIAmz','Amortized Late Payment Interest GST','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_dGSTLPPAmz','Amortized Late Payment Penalty GST','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','EAI_ReceiptAmount','Total Receipt Amount from Advance Interest','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','EAE_ReceiptAmount','Total Receipt Amount from Advance EMI','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','bounceCharge_CESS_P','Bounce charge CESS PAID Waived','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','bounceCharge_CESS_N','Bounce charge CESS NET Waived','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','bounceCharge_CESS_W','Bounce charge CESS WAIVER Waived','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','bounceCharge_CESS_SCH','Bounce charge CESS SCHEDULE Waived','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','bounceCharge_CESS_AF','Bounce charge CESS AF Waived','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','CACLT_ReceiptAmount','Cash Collateral','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','DSF_ReceiptAmount','Debt Service Fund','1',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','LPP_TDS_P','Paid Late Payment Penalty TDS','1',1,1000,current_timestamp,'Approved','','','','','',0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) VALUES ('EARLYPAY','0','ae_isWriteOff','Write Off','1',1,1005,current_timestamp,'Approved',null,null,null,null,null,0);	
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#192" author="sampath.d">
		<modifyDataType tableName="CD_PRODUCTS" columnName="MODELDESCRIPTION" newDataType="varchar2(50)" />
		<modifyDataType tableName="CD_PRODUCTS" columnName="ASSETDESCRIPTION" newDataType="varchar2(50)" />
		<modifyDataType tableName="CD_PRODUCTS_TEMP" columnName="MODELDESCRIPTION" newDataType="varchar2(50)" />
		<modifyDataType tableName="CD_PRODUCTS_TEMP" columnName="ASSETDESCRIPTION" newDataType="varchar2(50)" />
	</changeSet>
	
	<changeSet id="DE#206.1" author="sampath.d">
		<sql>
			<![CDATA[
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD';
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD1';
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD2';
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD3';
			
			INSERT INTO MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) VALUES ('GST_FEETYPE','MBD_DBD','SVRCVBL');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#207.1" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'ae_mbd_cbret';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'mbd_cbret_ugst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'mbd_cbret_igst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'mbd_cbret_cgst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'mbd_cbret_sgst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'mbd_cbret_cess';
				
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'ae_dbd_cbret';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'dbd_cbret_igst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'dbd_cbret_ugst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'dbd_cbret_cgst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'dbd_cbret_sgst';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'CBRET' AND AMOUNTCODE = 'dbd_cbret_cess';

				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'ae_mbd_cbret','MBD Cash Back Retained amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'mbd_cbret_igst','MBD Cash Back Retained IGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'mbd_cbret_ugst','MBD Cash Back Retained UGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'mbd_cbret_cgst','MBD Cash Back Retained CGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'mbd_cbret_sgst','MBD Cash Back Retained SGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'mbd_cbret_cess','MBD Cash Back Retained CESS amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'ae_dbd_cbret','DBD Cash Back Retained amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'dbd_cbret_igst','DBD Cash Back Retained IGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'dbd_cbret_ugst','DBD Cash Back Retained UGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'dbd_cbret_cgst','DBD Cash Back Retained CGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'dbd_cbret_sgst','DBD Cash Back Retained SGST amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CBRET',0,'dbd_cbret_cess','DBD Cash Back Retained CESS amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
			]]>
		</sql>
	</changeSet>
	
		<changeSet id="ST#120.1" author="sampath.d">
		<createTable tableName="COLLECTIONAPIDETAIL">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" />
			</column>
			<column name="APIID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="Varchar2(20)">
				<constraints nullable="false" />
			</column>
			<column name="ReceiptId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Amount" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="LinkedTranId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="ServiceName" type="Varchar2(50)">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	
	<changeSet id="ST#120.2" author="sampath.d">
		<addPrimaryKey tableName="COLLECTIONAPIDETAIL" columnNames="Id"
			constraintName="pk_collection_api_detail" />
	</changeSet>
	
	<changeSet id="ST#120.3" author="sampath.d" >
		<sql>
			<![CDATA[	
				UPDATE COLLECTIONAPIDETAIL SET LINKEDTRANID=0;
				UPDATE COLLECTIONAPIDETAIL SET AMOUNT=0;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#120.4" author="sampath.d" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE COLLECTIONAPIDETAIL ADD CONSTRAINT DF_C_API_LINKEDTRANID DEFAULT 0 FOR LINKEDTRANID;
				ALTER TABLE COLLECTIONAPIDETAIL ADD CONSTRAINT DF_C_API_AMOUNT DEFAULT 0 FOR AMOUNT;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#120.4" author="sampath.d" dbms="postgresql, oracle">
		<addDefaultValue columnName="LinkedTranId" tableName="COLLECTIONAPIDETAIL" defaultValue="0" />
		<addDefaultValue columnName="Amount" tableName="COLLECTIONAPIDETAIL" defaultValue="0" />
	</changeSet>
	
	<changeSet id="ST#120.5" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE FROM BMTAEEVENTS WHERE AEEVENTCODE='COL2CSH';
				DELETE FROM BMTAEEVENTS WHERE AEEVENTCODE='CSH2BANK';
				
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT='COL2CSH';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT='CSH2BANK';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT= 'REPAY' AND AMOUNTCODE = 'ae_receiptChannel';
				
				DELETE FROM CATEGORYWISEEVENTS WHERE AEEVENTCODE= 'COL2CSH' AND CATEGORYCODE= 'C';
				DELETE FROM CATEGORYWISEEVENTS WHERE AEEVENTCODE= 'CSH2BANK' AND CATEGORYCODE= 'C';
				
				DELETE FROM RBFIELDDETAILS WHERE RBMODULE = 'SUBHEAD' AND RBFLDNAME = 'receiptChannel';
				INSERT INTO RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('SUBHEAD','SUBHEAD','receiptChannel','Receipt Channel','nvarchar',8,'0','1',null,'static',null);
				
				INSERT INTO BMTAEEVENTS(AEEVENTCODE, AEEVENTCODEDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, ACTIVE) VALUES ('COL2CSH', 'Collector to Cashier accounting', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);
				INSERT INTO BMTAEEVENTS(AEEVENTCODE, AEEVENTCODEDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, ACTIVE) VALUES ('CSH2BANK', 'Cashier to Bank accounting', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 1);
	
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('REPAY',0,'ae_receiptChannel','Receipt channel','1',1,1005,to_date('04-JUN-17','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('COL2CSH',0,'PB_ReceiptAmount','CASHIER amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
	          	Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CSH2BANK',0,'PB_ReceiptAmount','CASHIER amount code',1,1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
	         	
				INSERT INTO CATEGORYWISEEVENTS VALUES('COL2CSH','C',1,0,(Select max(seqorder)+1 from CATEGORYWISEEVENTS Where CATEGORYCODE= 'C'));
				INSERT INTO CATEGORYWISEEVENTS VALUES('CSH2BANK','C',1,0,(Select max(seqorder)+1 from CATEGORYWISEEVENTS Where CATEGORYCODE= 'C'));
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#208.1" author="sampath.d">
		<addColumn tableName="FINANCEMAIN">
			<column name="MIGRDATE" type="datetime" />
		</addColumn>
	</changeSet>
	
	 <changeSet id="DE#208.2" author="sampath.d">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="MIGRDATE" type="datetime" />
		</addColumn>
	</changeSet>
	
	<changeSet id="DE#208.3" author="sampath.d">
		<addColumn tableName="REJECTFINANCEMAIN">
			<column name="MIGRDATE" type="datetime" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#120.6" author="sampath.d">
		<sql>
			<![CDATA[
			DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT= 'COL2CSH' AND AMOUNTCODE = 'ae_receiptmode';
			DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT= 'CSH2BANK' AND AMOUNTCODE = 'ae_receiptmode';
			
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('COL2CSH',0,'ae_receiptmode','Receipt Mode','1',1,1005,to_date('04-JUN-17','DD-MON-RR'),'Approved',null,null,null,null,null,0);
			INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CSH2BANK',0,'ae_receiptmode','Receipt Mode','1',1,1005,to_date('04-JUN-17','DD-MON-RR'),'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#120.7" author="sampath.d">
		<addColumn tableName="FinReceiptHeader">
			<column name="Moduletype" type="varchar2(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#120.8" author="sampath.d">
		<addColumn tableName="FinReceiptHeader_temp">
			<column name="Moduletype" type="varchar2(10)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#120.9" author="sampath.d">
		<addColumn tableName="COLLECTIONAPIDETAIL">
			<column name="Modulecode" type="varchar2(10)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#120.10" author="sampath.d">
		<sql>
			<![CDATA[
			DELETE FROM CATEGORYWISEEVENTS WHERE AEEVENTCODE= 'COL2CSH' AND CATEGORYCODE= 'F';
			DELETE FROM CATEGORYWISEEVENTS WHERE AEEVENTCODE= 'CSH2BANK' AND CATEGORYCODE= 'F';
			
			INSERT INTO CATEGORYWISEEVENTS VALUES('COL2CSH','F',1,0,(Select max(seqorder)+1 from CATEGORYWISEEVENTS Where CATEGORYCODE= 'F'));
			INSERT INTO CATEGORYWISEEVENTS VALUES('CSH2BANK','F',1,0,(Select max(seqorder)+1 from CATEGORYWISEEVENTS Where CATEGORYCODE= 'F'));
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#120.11" author="sampath.d">
		<sql>
			<![CDATA[
			DELETE FROM TEMPLATEFIELDS WHERE MODULE = 'FIN' AND FIELD = 'repaymentDate';
			
			INSERT INTO TEMPLATEFIELDS (MODULE,FIELD,FIELDDESC,FIELDFORMAT,EVENT) VALUES ('FIN','repaymentDate','RepaymentDate','A','Origination');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="TK#352.21" author="sampath.d">
		<sql>
			<![CDATA[
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD';
			
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD_IGST';
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD_UGST';
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD_SGST';
			DELETE FROM MASTER_DEF WHERE KEY_TYPE = 'MBD_DBD_CGST';
			
			INSERT INTO MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) VALUES ('GST_FEETYPE','MBD_DBD_IGST','IGST');
			INSERT INTO MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) VALUES ('GST_FEETYPE','MBD_DBD_UGST','UGST');
			INSERT INTO MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) VALUES ('GST_FEETYPE','MBD_DBD_SGST','SGST');
			INSERT INTO MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) VALUES ('GST_FEETYPE','MBD_DBD_CGST','CGST');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#241.1" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'EARLYPAY' AND AMOUNTCODE = 'PB_ReceiptAmount';
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'EARLYPAY' AND AMOUNTCODE = 'ae_paymentType';
			
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'ae_paymentType','PaymentType','1',1,1005,to_date('04-JUN-17','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'PB_ReceiptAmount','Receipt Amount','1',1,1005,to_date('04-JUN-17','DD-MON-RR'),'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#264.1" author="sampath.d">
		<addColumn tableName="RECEIPTUPLOADDETAILS">
			<column name="BckdtdWthOldDues" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet id="ST#264.2" author="sampath.d" >
		<sql>
			<![CDATA[	
				UPDATE RECEIPTUPLOADDETAILS SET BCKDTDWTHOLDDUES=0;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#264.3" author="sampath.d" dbms="postgresql, oracle">
		<addDefaultValue columnName="BckdtdWthOldDues" tableName="RECEIPTUPLOADDETAILS" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#264.3" author="sampath.d" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE RECEIPTUPLOADDETAILS ADD CONSTRAINT DK_RUD_BCKDTDWTHOLDDUES DEFAULT 0 FOR BCKDTDWTHOLDDUES;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#264.4" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE FROM ERRORDETAILS WHERE CODE = '90356';
				
				INSERT INTO ERRORDETAILS (CODE,LANGUAGE,SEVERITY,MESSAGE,EXTENDEDMESSAGE,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,LASTMNTBY,VERSION) VALUES ('90356','EN','E','Installement is not paid for these dates: {0}',null,'Approved',null,null,null,null,null,0,to_date('30-12-20','DD-MM-RR'),1000,0);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#304.1" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE FROM MASTER_DEF WHERE KEY_CODE IN ('SGST', 'UGST', 'IGST', 'CGST');
				DELETE FROM MASTER_DEF WHERE KEY_CODE = 'MBDSVRCBL';
				DELETE FROM MASTER_DEF WHERE KEY_CODE = 'DBDSVRCBL';
				
				INSERT INTO MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) VALUES ('GST_FEETYPE','CDPFMBDSVRCBL','MBDSVRCBL');
				INSERT INTO MASTER_DEF (MASTER_TYPE,KEY_TYPE,KEY_CODE) VALUES ('GST_FEETYPE','CDPFDBDSVRCBL','DBDSVRCBL');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#391.1" author="sampath.d">
		<createTable tableName="RECEIPTTRANSACTIONLOG">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="Varchar2(20)" />
			<column name="ValueDate" type="datetime" />
			<column name="ReceiptAmount" type="decimal(18,0)" />
			<column name="TransactionRef" type="Varchar2(50)" />
			<column name="Status" type="int" />
		</createTable>
	</changeSet>
	
	<changeSet id="DE#391.2" author="sampath.d" >
		<sql>
			<![CDATA[	
				UPDATE RECEIPTTRANSACTIONLOG SET STATUS=0;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#391.3" author="sampath.d" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE RECEIPTTRANSACTIONLOG ADD CONSTRAINT DF_RTL_STATUS DEFAULT 0 FOR STATUS;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#391.3" author="sampath.d" dbms="postgresql, oracle">
		<addDefaultValue columnName="Status" tableName="RECEIPTTRANSACTIONLOG" defaultValue="0" />
	</changeSet>
	
	<changeSet id="DE#391.4" author="sampath.d">
    	<addUniqueConstraint tableName="RECEIPTTRANSACTIONLOG" columnNames="FinReference,ValueDate,ReceiptAmount,TransactionRef,Status"
            constraintName="UK_RCPT_TXN_LOG" />
	</changeSet>
	
	<changeSet id="DE#409" author="sampath.d">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'WRITEOFF'; 
				
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_accrue','Accrued Interest','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_accrueS','Accrued Interest in suspense','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_accrueTsfd','Accrued Amount Transferred','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_amz','Amortized interest','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_amzNRM','Amortized interest in normal period','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_amzPD','Amortized interest in pastdue period','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_amzS','Amortized interest in suspended period','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_cpzChg','Capitalization Changed now','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_cpzCur','Capitalization amount in current period','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_cpzNxt','Capitalzie on next schedule date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_cpzPrv','Capitalzie on previous schedule date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_cpzTot','Total Capitalization amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dAccrue','Accrued Interest From previous Accrual Date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dAccrueS','Accrued Interest in Suspense From previous Accrual Date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dAmz','Amortized Interest From previous Amz Date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dAmzNRM','Amortized Interest in Normal From previous Amz Date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dAmzPD','Amortized Interest in PD From previous Amz Date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dAmzS','Amortized Interest in Suspense From previous Amz Date','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_emiInAdvance','EMI in advance amount for payment/receipt','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_excessAmt','Excess amount for payment/receipt','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_FeeChargeAmt','Total Fee and Charges paid/scheduled now','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_incrCostPay','Increased Cost Paid','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_InsPay','Insurance amount paid','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_insRefund','Insurance amount refunded','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_InsuranceAmt','Insurance amount scheduled','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_payableAdvise','Payable advise amount for payment/receipt','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_penalty','Penalty Amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_penaltyDue','Penalty Due','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_penaltyPaid','Penalty Paid','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_penaltyWaived','Penalty Waived','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_pft','Total Interest','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_pftAB','Total Interest Due for the loan','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_pftAP','Total Interest Paid for the loan','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_pri','Total Principal','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_priAB','Total Principal Due for the loan','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
                INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_priAP','Total Principal Paid for the loan','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_provAmt','Calculated/Derived Provision Amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_provDue','Provision Due Amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_prvAccrueTsfd','Accrue Transferred as of previous month','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_rebate','Rebate Amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_refund','Refund Amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_rpPft','Total Repay Interest now (P)','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_rpPri','Total Repay Principal now (P)','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_rpTot','Total Repay now (P+I)','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_suplRentPay','Suplementary Rent','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_suspNow','Interest Suspended Now','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_suspRls','Interest Released from Suspense Now','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_waiver','Waiver Amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_totalWriteoff','Total Wriiten-Off Amount','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dLPIAmz','Amortized Late Payment Interest','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dLPPAmz','Amortized Late Payment Penalty','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dGSTLPIAmz','Amortized Late Payment Interest GST','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_dGSTLPPAmz','Amortized Late Payment Penalty GST','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_pftS','Total Interest as per schedule till today','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_pftSB','Total Interest due as per schedule till today','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_priSB','Total Principal due as per schedule till today','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_odPri','OverDue Principal','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_odPft','OverDue Profit','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
				INSERT INTO BMTAMOUNTCODES(ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('WRITEOFF',0,'ae_prvMntAmz','Previous Month Amortized interest','1',1,1005,to_date('19-03-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#283.1" author="sampath.d">
		<sql>
			<![CDATA[	
				DELETE FROM CATEGORYWISEEVENTS WHERE AEEVENTCODE= 'EARLYPAY' AND CATEGORYCODE= 'C';
				
				INSERT INTO CATEGORYWISEEVENTS (AEEVENTCODE,CATEGORYCODE,ACTIVE,MANDATORY,SEQORDER) values ('EARLYPAY','C',1,0,(select max(SeqOrder)+1 from CategoryWiseEvents));
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#391.5" author="sampath.d">
		<createTable tableName="RECEIPT_TRANSACTION_LOG">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="Varchar(20)" />
			<column name="ValueDate" type="datetime" />
			<column name="ReceiptAmount" type="decimal(18,0)" />
			<column name="TransactionRef" type="Varchar(50)" />
			<column name="Status" type="int" />
		</createTable>
	</changeSet>
	
	<changeSet id="DE#391.6" author="sampath.d" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE RECEIPT_TRANSACTION_LOG ADD CONSTRAINT DF_RTL_STATUS DEFAULT 0 FOR STATUS;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#391.7" author="sampath.d" dbms="postgresql, oracle">
		<addDefaultValue columnName="Status" tableName="RECEIPT_TRANSACTION_LOG" defaultValue="0" />
	</changeSet>
	
	<changeSet id="DE#391.8" author="sampath.d">
    	<addUniqueConstraint tableName="RECEIPT_TRANSACTION_LOG" columnNames="FinReference,ValueDate,ReceiptAmount,TransactionRef,Status"
            constraintName="UK_RPT_TXN_LOG" />
	</changeSet>
	
	<changeSet id="DE#391.9" author="sampath.d">
		<sql>
			<![CDATA[	
				INSERT INTO RECEIPT_TRANSACTION_LOG (FINREFERENCE, VALUEDATE, RECEIPTAMOUNT, TRANSACTIONREF, STATUS) SELECT FINREFERENCE, VALUEDATE, RECEIPTAMOUNT, TRANSACTIONREF, STATUS FROM RECEIPTTRANSACTIONLOG;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#391.10" author="sampath.d">
		<dropTable tableName="RECEIPTTRANSACTIONLOG"/>
	</changeSet>
	
</databaseChangeLog>