<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp1" author="Adarsh" runAlways="true"
		dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1" author="Saikiran.v">
		<sql>
		   <![CDATA[
			 update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
			 update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
			 update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
			 
			 delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='COMMITMENT_MAKER');
			 delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='COMMITMENT_APPROVER');
			 
			 delete from secgroups where grpcode='COMMITMENT_APPROVER';
			 delete from secgroups where grpcode='COMMITMENT_MAKER';
			 
			 delete from secgrouprights  where rightid in (Select rightid from SecRights where page='CommitmentDialog');
			 delete from secgrouprights  where rightid in (Select rightid from SecRights where rightname='menuItem_Commitment_Commitment');
			 delete from secgrouprights  where rightid in (Select rightid from SecRights where rightname='menuItem_Enquiry_CommitmentEnquiry');
			 delete from SecRights where page='CommitmentDialog';
			 
			 delete from SecRights where rightname='menuItem_Commitment_Commitment';
			 delete from SecRights where rightname='menuItem_Enquiry_CommitmentEnquiry';
				
			 insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'COMMITMENT_MAKER', 'Commitment Process Maker', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
			 insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'COMMITMENT_APPROVER', 'Commitment Process Approver', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
			 	
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtAccount','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtAccount'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtActiveStatus','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtActiveStatus'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtAmount','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtAmount'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtAvailable','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtAvailable'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtAvailableMonths','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtAvailableMonths'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtBranch','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtBranch'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtCcy','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtCcy'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtCharges','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtCharges'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtChargesAccount','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtChargesAccount'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtEndDate','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtEndDate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtExpDate','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtExpDate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtLimitLine','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtLimitLine'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtNonperformingStatus','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtNonperformingStatus'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtNotes','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtNotes'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtPftRateMax','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtPftRateMax'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtPromisedDate','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtPromisedDate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtReference','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtReference'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtRvwDate','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtRvwDate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtStartDate','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtStartDate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtStopRateRange','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtStopRateRange'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );


 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtTitle','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtTitle'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CmtUtilizedAmount','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CmtUtilizedAmount'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CollateralRequired','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CollateralRequired'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CommitmentFlags','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CommitmentFlags'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_CustCIF','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_CustCIF'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_FacilityRef','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_FacilityRef'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_MultiBranch','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_MultiBranch'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_OpenAccount','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_OpenAccount'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_Revolving','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_Revolving'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentDialog_SharedCmt','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_SharedCmt'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_CommitmentDialog_btnSave','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_APPROVER'), (select RightID from SecRights WHERE RightName='button_CommitmentDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_Enquiry_CommitmentEnquiry','MENU',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='menuItem_Enquiry_CommitmentEnquiry'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_APPROVER'), (select RightID from SecRights WHERE RightName='menuItem_Enquiry_CommitmentEnquiry'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_Commitment_Commitment','MENU',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='menuItem_Commitment_Commitment'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_APPROVER'), (select RightID from SecRights WHERE RightName='menuItem_Commitment_Commitment'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );	
			
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_CommitmentDialog_btnNewCmtRate','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentDialog_btnNewCmtRate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_CommitmentDialog_btnEdit','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentDialog_btnEdit'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 			 
 			 insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_CommitmentDialog_btnDelete','CommitmentDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
 			 insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentDialog_btnDelete'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
			  	
			 update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
			 update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
			 update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
		    ]]>
		</sql>
	</changeSet>

	<changeSet id="2" author="Saikiran.v">
		<sql>
		 	<![CDATA[
				INSERT INTO SMTPARAMETERS Values('ALLOW_COMMITMENTS','Commitments Required Or Not','String', 0, 'N', 1, 0, NULL, NULL,'Commitments Required Or Not',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="3" author="Saikiran.v">
		<sql>
		   <![CDATA[
	  		delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='COMMITMENTWORKFLOW_MAKER');
			delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='COMMITMENTWORKFLOW_APPROVER');

			delete from secgroups where grpcode='COMMITMENTWORKFLOW_MAKER';
			delete from secgroups where grpcode='COMMITMENTWORKFLOW_APPROVER';

			delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='COMMITMENT_REFERENCEDETAIL_MAKER');		 
			delete from secgrouprights where rightid=(select rightid from SecRights where rightname='menuItem_SolutionFactory_CommitmentWorkFlow');
			delete from secgrouprights where rightid=(select rightid from SecRights where rightname='menuItem_SolutionFactory_CommitmentReferenceDetail');

			delete from secgroups where grpcode='COMMITMENT_REFERENCEDETAIL_MAKER';
			delete from secgrouprights  where rightid in (Select rightid from SecRights where page='CommitmentWorkFlowDialog');
			delete from secgrouprights  where rightid in (Select rightid from SecRights where page='CommitmentList');
			 delete from secgrouprights  where rightid in (Select rightid from SecRights where rightname='menuItem_SolutionFactory_CommitmentWorkFlow');
			 delete from secgrouprights  where rightid in (Select rightid from SecRights where rightname='menuItem_SolutionFactory_CommitmentReferenceDetail');
			 
			 
			delete from SecRights where page='CommitmentWorkFlowDialog';
			delete from SecRights where page='CommitmentList';
			delete from SecRights where rightname='menuItem_SolutionFactory_CommitmentWorkFlow';
			delete from SecRights where rightname='menuItem_SolutionFactory_CommitmentReferenceDetail';

			insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'COMMITMENTWORKFLOW_MAKER', 'Maker for Commitment Workflow', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
			insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'COMMITMENTWORKFLOW_APPROVER', 'Approver for Commitment Workflow', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentWorkFlowDialog_finEvent','CommitmentWorkFlowDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentWorkFlowDialog_finEvent'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentWorkFlowDialog_finType','CommitmentWorkFlowDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentWorkFlowDialog_finType'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_CommitmentWorkFlowDialog_btnDelete','CommitmentWorkFlowDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentWorkFlowDialog_btnDelete'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_CommitmentWorkFlowDialog_btnSave','CommitmentWorkFlowDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentWorkFlowDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_APPROVER'), (select RightID from SecRights WHERE RightName='button_CommitmentWorkFlowDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'button_CommitmentList_NewCommitment','CommitmentList',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentList_NewCommitment'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_SolutionFactory_CommitmentWorkFlow','MENU',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_MAKER'), (select RightID from SecRights WHERE RightName='menuItem_SolutionFactory_CommitmentWorkFlow'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTWORKFLOW_APPROVER'), (select RightID from SecRights WHERE RightName='menuItem_SolutionFactory_CommitmentWorkFlow'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			delete from lmtfinanceworkflowdef where fintype='CMTMNT';
			delete from lmtfinanceworkflowdef where fintype='CMTNEW';

			INSERT INTO lmtfinanceworkflowdef(fintype, screencode, workflowtype, modulename, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, finevent) VALUES   ('CMTMNT', 'DDE', 'MSTGRP1', 'COMMITMENT' ,1, 1000, current_timestamp, 'Approved',null,null,null,null,null, 0, 'Origination');
			INSERT INTO lmtfinanceworkflowdef(fintype, screencode, workflowtype, modulename, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid, finevent) VALUES   ('CMTNEW', 'DDE', 'MSTGRP1', 'COMMITMENT' ,1, 1000, current_timestamp, 'Approved',null,null,null,null,null, 0, 'Origination');

			insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'COMMITMENT_REFERENCEDETAIL_MAKER', 'Commitment Process Editor Maker', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_SolutionFactory_CommitmentReferenceDetail','MENU',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_REFERENCEDETAIL_MAKER'), (select RightID from SecRights WHERE RightName='menuItem_SolutionFactory_CommitmentReferenceDetail'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'CommitmentWorkFlowDialog_screenCode','CommitmentWorkFlowDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_REFERENCEDETAIL_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentWorkFlowDialog_screenCode'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'CommitmentWorkFlowDialog_workFlowType','CommitmentWorkFlowDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
			insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_REFERENCEDETAIL_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentWorkFlowDialog_workFlowType'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

			delete from CommitmentType where typecode='CMTMNT';
			delete from CommitmentType where typecode='CMTNEW';

			insert into CommitmentType values ('CMTNEW','CMT NEW Process',1);
			insert into CommitmentType values ('CMTMNT','CMT Maintaint Process',1); 
	    ]]>
		</sql>
	</changeSet>

	<changeSet id="4" author="Saikiran.v">
		<createView viewName="commitments_aview" replaceIfExists="true">
			SELECT t1.cmtreference,
			t1.custid,
			t2.custshrtname,
			t1.cmtbranch,
			t3.branchdesc,
			t1.openaccount,
			t1.cmtaccount,
			t1.cmtccy,
			t1.cmtpftratemin,
			t1.cmtpftratemax,
			t1.cmtamount,
			t1.cmtutilizedamount,
			t1.cmtavailable,
			t1.cmtpromiseddate,
			t1.cmtstartdate,
			t1.cmtexpdate,
			t1.cmtrvwdate,
			t1.cmttitle,
			t1.cmtnotes,
			t1.revolving,
			t1.sharedcmt,
			t1.multibranch,
			t1.facilityref,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.cmtstopraterange,
			t1.cmtactive,
			t1.nonperforming,
			t1.cmtcharges,
			t1.chargesaccount,
			t2.custcif,
			t6.fintypedesc AS facilityrefdesc,
			t1.cmtavailablemonths,
			t1.collateralrequired,
			t1.cmtenddate,
			t1.limitlineid,
			t4.CcyEditField
			from commitments t1
			JOIN customers t2 ON t1.custid = t2.custid
			JOIN rmtbranches t3 ON t1.cmtbranch = t3.branchcode
			JOIN RMTCurrencies t4 ON T1.CmtCcy = T4.CcyCode
			JOIN limitdetails t5 ON t1.limitlineid = t5.detailid
			LEFT JOIN rmtfinancetypes t6 ON t1.facilityref = t6.fintype
		</createView>
	</changeSet>

	<changeSet id="5_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'commitmentrates');
					select deps_save_and_drop_dependencies ('plf', 'commitmentrates_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="5" author="Saikiran.v">
		<modifyDataType tableName="commitmentrates" columnName="cmtspecialrate" newDataType="varchar(8)" />
		<modifyDataType tableName="commitmentrates_Temp" columnName="cmtspecialrate" newDataType="varchar(8)" />
	</changeSet>

	<changeSet id="5_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'commitmentrates');
					select deps_restore_dependencies ('plf', 'commitmentrates_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="6" author="Saikiran.v">
		<sql>
			<![CDATA[
				delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='COMMITMENTRATE_MAKER');
				delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='COMMITMENTRATE_APPROVER'); 
				delete from SecRights where page='CommitmentRateDialog';

				delete from secgroups where grpcode='COMMITMENTRATE_MAKER';
				delete from secgroups where grpcode='COMMITMENTRATE_APPROVER';

				insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'COMMITMENTRATE_MAKER', 'CommitmentRate Maker', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
				insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'COMMITMENTRATE_APPROVER', 'CommitmentRate Approver', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'button_CommitmentRateDialog_btnDelete','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentRateDialog_btnDelete'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'button_CommitmentRateDialog_btnEdit','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentRateDialog_btnEdit'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'button_CommitmentRateDialog_btnSave','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='button_CommitmentRateDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_APPROVER'), (select RightID from SecRights WHERE RightName='button_CommitmentRateDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentRateDialog_CmtActualRate','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentRateDialog_CmtActualRate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentRateDialog_CmtBaseRate','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentRateDialog_CmtBaseRate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentRateDialog_CmtCalculatedRate','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentRateDialog_CmtCalculatedRate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentRateDialog_CmtMargin','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentRateDialog_CmtMargin'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentRateDialog_CmtReference','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentRateDialog_CmtReference'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentRateDialog_CmtRvwFrq','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentRateDialog_CmtRvwFrq'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );

				insert into SecRights Values((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'CommitmentRateDialog_CmtSpecialRate','CommitmentRateDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
				insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENTRATE_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentRateDialog_CmtSpecialRate'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
			]]>
		</sql>
	</changeSet>

	<changeSet id="7" author="Saikiran.v">
		<addColumn tableName="PartnerBanks">
			<column name="DownloadType" type="varchar(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="8" author="Saikiran.v">
		<addColumn tableName="PartnerBanks">
			<column name="DataEngineConfigName" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="9" author="Saikiran.v">
		<addColumn tableName="PartnerBanks_temp">
			<column name="DownloadType" type="varchar(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="10" author="Saikiran.v">
		<addColumn tableName="PartnerBanks_temp">
			<column name="DataEngineConfigName" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="11" author="Saikiran.v">
		<createView viewName="partnerbanks_aview" replaceIfExists="true">
			SELECT t1.partnerbankid,
			t1.partnerbankcode,
			t1.partnerbankname,
			t1.bankcode,
			t1.bankbranchcode,
			t1.branchmicrcode,
			t1.branchifsccode,
			t1.branchcity,
			t1.utilitycode,
			t1.accountno,
			t1.actype,
			t1.alwfiledownload,
			t1.alwdisb,
			t1.alwpayment,
			t1.alwreceipt,
			t1.infavourlength,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.bankname bankcodename,
			t3.branchdesc bankbranchcodename,
			t4.actypedesc actypename,
			t1.hostglcode,
			t1.profitcenterid,
			t1.costcenterid,
			t1.filename,
			t1.entity,
			t1.downloadType,
			t1.dataEngineConfigName,
			t5.entitydesc
			FROM partnerbanks t1
			JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
			JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode AND t1.bankcode = t3.bankcode
			JOIN rmtaccounttypes t4 ON t1.actype = t4.actype
			LEFT JOIN entity t5 ON t1.entity = t5.entitycode
		</createView>
	</changeSet>

	<changeSet id="12" author="Saikiran.v">
		<createView viewName="partnerbanks_view" replaceIfExists="true">
			SELECT t1.partnerbankid,
			t1.partnerbankcode,
			t1.partnerbankname,
			t1.bankcode,
			t1.bankbranchcode,
			t1.branchmicrcode,
			t1.branchifsccode,
			t1.branchcity,
			t1.utilitycode,
			t1.accountno,
			t1.actype,
			t1.alwfiledownload,
			t1.alwdisb,
			t1.alwpayment,
			t1.alwreceipt,
			t1.infavourlength,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.bankname AS bankcodename,
			t3.branchdesc AS bankbranchcodename,
			t4.actypedesc AS actypename,
			t1.hostglcode,
			t1.profitcenterid,
			t1.costcenterid,
			t1.filename,
			t1.entity,
			t5.entitydesc,
			t1.downloadType,
			t1.dataEngineConfigName
			FROM partnerbanks_temp t1
			JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
			JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode AND t1.bankcode = t3.bankcode
			JOIN rmtaccounttypes t4 ON t1.actype = t4.actype
			LEFT JOIN entity t5 ON t1.entity = t5.entitycode
			UNION ALL
			SELECT t1.partnerbankid,
			t1.partnerbankcode,
			t1.partnerbankname,
			t1.bankcode,
			t1.bankbranchcode,
			t1.branchmicrcode,
			t1.branchifsccode,
			t1.branchcity,
			t1.utilitycode,
			t1.accountno,
			t1.actype,
			t1.alwfiledownload,
			t1.alwdisb,
			t1.alwpayment,
			t1.alwreceipt,
			t1.infavourlength,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.bankname AS bankcodename,
			t3.branchdesc AS bankbranchcodename,
			t4.actypedesc AS actypename,
			t1.hostglcode,
			t1.profitcenterid,
			t1.costcenterid,
			t1.filename,
			t1.entity,
			t5.entitydesc,
			t1.downloadType,
			t1.dataEngineConfigName
			FROM partnerbanks t1
			JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
			JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode AND t1.bankcode = t3.bankcode
			JOIN rmtaccounttypes t4 ON t1.actype = t4.actype
			LEFT JOIN entity t5 ON t1.entity = t5.entitycode
			WHERE NOT (EXISTS ( SELECT 1
			FROM partnerbanks_temp
			WHERE partnerbanks_temp.partnerbankid = t1.partnerbankid))
		</createView>
	</changeSet>

	<changeSet id="13" author="Saikiran.v">
		<sql>
			<![CDATA[
			update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
			update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);

			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_DownloadType','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_DownloadType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_DataEngineConfigName','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_DataEngineConfigName'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
			update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
		
			]]>
		</sql>
	</changeSet>

	<changeSet id="14" author="Saikiran.v">
		<sql>
			<![CDATA[
				update data_engine_config set Name = 'DISB_EXPORT_DEFAULT' where name = 'DISB_HDFC_EXPORT';
				update data_engine_status set Name = 'DISB_EXPORT_DEFAULT' where name = 'DISB_HDFC_EXPORT';
				update data_engine_config set Name = 'DISB_EXPORT_CITI' where name = 'DISB_CITI_EXPORT';
				update data_engine_status set Name = 'DISB_EXPORT_CITI' where name = 'DISB_CITI_EXPORT';
				update data_engine_config set Name = 'DISB_EXPORT_IMPS' where name = 'DISB_IMPS_EXPORT';
				update data_engine_status set Name = 'DISB_EXPORT_IMPS' where name = 'DISB_IMPS_EXPORT';

				update data_engine_config set Name = 'DISB_EXPORT_OTHER_NEFT_RTGS' where name = 'DISB_OTHER_NEFT_RTGS_EXPORT';
				update data_engine_status set Name = 'DISB_EXPORT_OTHER_NEFT_RTGS' where name = 'DISB_OTHER_NEFT_RTGS_EXPORT';

				update data_engine_config set Name = 'DISB_EXPORT_OTHER_CHEQUE_DD' where name = 'DISB_OTHER_CHEQUE_DD_EXPORT';
				update data_engine_status set Name = 'DISB_EXPORT_OTHER_CHEQUE_DD' where name = 'DISB_OTHER_CHEQUE_DD_EXPORT';

				update partnerbanks set downloadType ='OFFL';
				update partnerbanks_Temp set downloadType ='OFFL';

				update partnerbanks set dataEngineConfigName ='DISB_EXPORT_DEFAULT' where AlwFileDownload=1;
				update partnerbanks_Temp set dataEngineConfigName ='DISB_EXPORT_DEFAULT' where AlwFileDownload=1;
			 ]]>
		</sql>
	</changeSet>

	<changeSet id="15" author="Saikiran.v">
		<addColumn tableName="PartnerBanks">
			<column name="VanCode" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="16" author="Saikiran.v">
		<addColumn tableName="PartnerBanks_temp">
			<column name="VanCode" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="17" author="Saikiran.v">
		<createView viewName="partnerbanks_aview" replaceIfExists="true">
			SELECT t1.partnerbankid,
			t1.partnerbankcode,
			t1.partnerbankname,
			t1.bankcode,
			t1.bankbranchcode,
			t1.branchmicrcode,
			t1.branchifsccode,
			t1.branchcity,
			t1.utilitycode,
			t1.actype,
			t1.accountno,
			t1.alwfiledownload,
			t1.alwdisb,
			t1.alwpayment,
			t1.alwreceipt,
			t1.infavourlength,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.bankname bankcodename,
			t3.branchdesc bankbranchcodename,
			t4.actypedesc actypename,
			t1.hostglcode,
			t1.profitcenterid,
			t1.costcenterid,
			t1.filename,
			t1.entity,
			t1.downloadType,
			t1.dataEngineConfigName,
			t5.entitydesc,
			t1.vanCode
			FROM partnerbanks t1
			JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
			JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode AND t1.bankcode = t3.bankcode
			JOIN rmtaccounttypes t4 ON t1.actype = t4.actype
			LEFT JOIN entity t5 ON t1.entity = t5.entitycode
		</createView>
	</changeSet>

	<changeSet id="18" author="Saikiran.v">
		<createView viewName="partnerbanks_view" replaceIfExists="true">
			SELECT t1.partnerbankid,
			t1.partnerbankcode,
			t1.partnerbankname,
			t1.bankcode,
			t1.bankbranchcode,
			t1.branchmicrcode,
			t1.branchifsccode,
			t1.branchcity,
			t1.utilitycode,
			t1.accountno,
			t1.actype,
			t1.alwfiledownload,
			t1.alwdisb,
			t1.alwpayment,
			t1.alwreceipt,
			t1.infavourlength,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.bankname bankcodename,
			t3.branchdesc bankbranchcodename,
			t4.actypedesc actypename,
			t1.hostglcode,
			t1.profitcenterid,
			t1.costcenterid,
			t1.filename,
			t1.entity,
			t5.entitydesc,
			t1.downloadType,
			t1.dataEngineConfigName,
			t1.vanCode
			FROM partnerbanks_temp t1
			JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
			JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode AND t1.bankcode = t3.bankcode
			JOIN rmtaccounttypes t4 ON t1.actype = t4.actype
			LEFT JOIN entity t5 ON t1.entity = t5.entitycode
			UNION ALL
			SELECT t1.partnerbankid,
			t1.partnerbankcode,
			t1.partnerbankname,
			t1.bankcode,
			t1.bankbranchcode,
			t1.branchmicrcode,
			t1.branchifsccode,
			t1.branchcity,
			t1.utilitycode,
			t1.accountno,
			t1.actype,
			t1.alwfiledownload,
			t1.alwdisb,
			t1.alwpayment,
			t1.alwreceipt,
			t1.infavourlength,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.bankname bankcodename,
			t3.branchdesc bankbranchcodename,
			t4.actypedesc actypename,
			t1.hostglcode,
			t1.profitcenterid,
			t1.costcenterid,
			t1.filename,
			t1.entity,
			t5.entitydesc,
			t1.downloadType,
			t1.dataEngineConfigName,
			t1.vanCode
			FROM partnerbanks t1
			JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
			JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode AND t1.bankcode = t3.bankcode
			JOIN rmtaccounttypes t4 ON t1.actype = t4.actype
			LEFT JOIN entity t5 ON t1.entity = t5.entitycode
			WHERE NOT (EXISTS ( SELECT 1
			FROM partnerbanks_temp
			WHERE partnerbanks_temp.partnerbankid = t1.partnerbankid))
		</createView>
	</changeSet>

	<changeSet id="19" author="Saikiran.v">
		<sql>
			 	<![CDATA[
					update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
					update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
					update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
									
					insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'PARTNERBANK_VANCODE_MAKER', 'Partner Bank Maker for VanCode ', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
									
					INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_VanCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_VANCODE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_VanCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
					
					update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
					update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
					update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
				]]>
		</sql>
	</changeSet>

	<changeSet id="20.1" author="ADARSH" dbms="postgresql">
		<dropView viewName="'wiffinancemain_aview'" />
	</changeSet>




	<changeSet id="20" author="Saikiran.v">
		<addColumn tableName="RMTFinanceTypes">
			<column name="AlwVan" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="21" author="Saikiran.v">
		<addColumn tableName="RMTFinanceTypes">
			<column name="VanAllocationMethod" type="varchar(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="22" author="Saikiran.v">
		<addColumn tableName="RMTFinanceTypes_temp">
			<column name="AlwVan" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="23" author="Saikiran.v">
		<addColumn tableName="RMTFinanceTypes_temp">
			<column name="VanAllocationMethod" type="varchar(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="24" author="Saikiran.v">
		<sql>
			<![CDATA[
				UPDATE RMTFinanceTypes Set AlwVan = 0;
				UPDATE RMTFinanceTypes_Temp Set AlwVan = 0;
			
			]]>
		</sql>
	</changeSet>

	<changeSet id="25" author="Saikiran.v" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE RMTFINANCETYPES ADD CONSTRAINT DF_RMTFINANCETYPES_AlwVan DEFAULT 0 FOR AlwVan;
				ALTER TABLE RMTFINANCETYPES_TEMP ADD CONSTRAINT DF_RMTFINANCETYPES_TEMP_AlwVan DEFAULT 0 FOR AlwVan;
			]]>
		</sql>
	</changeSet>

	<changeSet id="26" author="Saikiran.v" dbms="postgresql, oracle">
		<addDefaultValue columnName="AlwVan" tableName="RMTFinanceTypes" defaultValue="0" />
		<addDefaultValue columnName="AlwVan" tableName="RMTFinanceTypes_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="27.2" author="Saikiran.v">
		<createView viewName="rmtfinancetypes_aview" replaceIfExists="true">
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc AS lovdescfincontingentactypename,
			t5.actypedesc AS lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc AS lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc AS lovdescfinbankcontactypename,
			t39.actypedesc AS lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc AS lovdescfindivisionname,
			t48.entitycode AS lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc AS lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode AS downpayrulecode,
			t59.rulecodedesc AS downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode AS grcpricingmethoddesc,
			t68.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.alwmaxdisbcheckreq,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc AS fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.AlwVan,
			t1.VanAllocationMethod
			FROM rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
		</createView>
	</changeSet>

	<changeSet id="28" author="Saikiran.v">
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisactive,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finrepaypftonfrq,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t3.divisioncodedesc lovdescfindivisionname,
			t1.finsuspactype,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc lovdescpromofintypedesc,
			t1.remarks,
			t4.policydesc lovdescdftsteppolicyname,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t5.rulecode downpayrulecode,
			t5.rulecodedesc downpayruledesc,
			t1.applygrcpricing,
			t1.applyrpypricing,
			t6.rulecode grcpricingmethoddesc,
			t7.rulecode rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t4.steptype dftsteppolicytype,
			t1.manualschedule,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.alwmaxdisbcheckreq,
			t1.productcategory,
			t1.rpyhierarchy,
			t1.developerfinance,
			t3.entitycode lovdescentitycode,
			t8.entitydesc lovdescentitydesc,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.finisalwpartialrpy,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.alwearlypaymethods,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwVan,
			t1.VanAllocationMethod
			FROM rmtfinancetypes t1
			JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
			LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
			LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
			LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
			LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
			LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
		</createView>
	</changeSet>

	<changeSet id="29" author="Saikiran.v">
		<createView viewName="rmtfinancetypes_view" replaceIfExists="true">

			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc lovdescfincontingentactypename,
			t5.actypedesc lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc lovdescfinbankcontactypename,
			t39.actypedesc lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc lovdescfindivisionname,
			t48.entitycode lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode downpayrulecode,
			t59.rulecodedesc downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode grcpricingmethoddesc,
			t68.rulecode rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwVan,
			t1.VanAllocationMethod
			FROM rmtfinancetypes_temp t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			UNION ALL
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc lovdescfincontingentactypename,
			t5.actypedesc lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc lovdescfinbankcontactypename,
			t39.actypedesc lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc lovdescfindivisionname,
			t48.entitycode lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode downpayrulecode,
			t59.rulecodedesc downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode grcpricingmethoddesc,
			t68.rulecode rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwVan,
			t1.VanAllocationMethod
			FROM rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			WHERE NOT (EXISTS ( SELECT 1 expr1
			FROM rmtfinancetypes_temp
			WHERE rmtfinancetypes_temp.fintype = t1.fintype))
		</createView>
	</changeSet>



	<changeSet id="30" author="Saikiran.V">
		<addColumn tableName="FinTypePartnerBanks">
			<column name="VanApplicable" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="31" author="Saikiran.V">
		<addColumn tableName="FinTypePartnerBanks_temp">
			<column name="VanApplicable" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="32" author="Saikiran.v">
		<sql>
			<![CDATA[
				UPDATE FinTypePartnerBanks Set VanApplicable = 0;
				UPDATE FinTypePartnerBanks_temp Set VanApplicable = 0;
			
			]]>
		</sql>
	</changeSet>

	<changeSet id="33" author="Saikiran.v" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FinTypePartnerBanks ADD CONSTRAINT DF_FinTypePartnerBanks_VanApplicable DEFAULT 0 FOR VanApplicable;
				ALTER TABLE FinTypePartnerBanks_temp ADD CONSTRAINT DF_FinTypePartnerBanks_temp_VanApplicable DEFAULT 0 FOR VanApplicable;
			]]>
		</sql>
	</changeSet>

	<changeSet id="34" author="Saikiran.v" dbms="postgresql, oracle">
		<addDefaultValue columnName="VanApplicable" tableName="FinTypePartnerBanks" defaultValue="0" />
		<addDefaultValue columnName="VanApplicable" tableName="FinTypePartnerBanks_temp" defaultValue="0" />
	</changeSet>

	<changeSet id="35" author="Saikiran.v">
		<createView viewName="Fintypepartnerbanks_aview" replaceIfExists="true">
			SELECT t1.id,
			t1.fintype,
			t1.purpose,
			t1.paymentmode,
			t1.partnerbankid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.partnerbankcode,
			t2.partnerbankname,
			t2.active,
			t2.accountno,
			t2.actype AS accounttype,
			t4.entitycode,
			t1.vanApplicable
			FROM fintypepartnerbanks t1
			LEFT JOIN partnerbanks t2 ON t1.partnerbankid = t2.partnerbankid
			LEFT JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
			LEFT JOIN smtdivisiondetail t4 ON t3.findivision = t4.divisioncode
		</createView>
	</changeSet>

	<changeSet id="36" author="Saikiran.v">
		<createView viewName="Fintypepartnerbanks_view" replaceIfExists="true">
			SELECT t1.id,
			t1.fintype,
			t1.purpose,
			t1.paymentmode,
			t1.partnerbankid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.partnerbankcode,
			t2.partnerbankname,
			t1.vanApplicable
			FROM fintypepartnerbanks_temp t1
			LEFT JOIN partnerbanks t2 ON t1.partnerbankid = t2.partnerbankid
			UNION ALL
			SELECT t1.id,
			t1.fintype,
			t1.purpose,
			t1.paymentmode,
			t1.partnerbankid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.partnerbankcode,
			t2.partnerbankname,
			t1.vanApplicable
			FROM fintypepartnerbanks t1
			LEFT JOIN partnerbanks t2 ON t1.partnerbankid = t2.partnerbankid
			WHERE NOT (EXISTS ( SELECT 1
			FROM fintypepartnerbanks_temp
			WHERE fintypepartnerbanks_temp.id = t1.id))
		</createView>
	</changeSet>

	<changeSet id="37" author="Saikiran.V">
		<sql>
			<![CDATA[
				update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
				update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
				update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
								
				insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FINANCETYPE_VAN_MAKER', 'Finance Type Maker for VanApplicable', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
								
				Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3,'FinTypePartnerBankDialog_VanApplicable', 'FinTypePartnerBankDialog', 1,1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
				Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode ='FINANCETYPE_VAN_MAKER'), (Select RightID from SecRights where RightName= 'FinTypePartnerBankDialog_VanApplicable'), 1, 1, 1000, CURRENT_TIMESTAMP,null, null, null, null, null, null, 0 );
				
				update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
				update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
				update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="38" author="Saikiran.v">
		<createView viewName="wiffinancemain_aview" replaceIfExists="true">
			SELECT t1.finreference,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t15.custcif AS lovdesccustcif,
			t7.fintypedesc AS lovdescfintypename,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t7.finmaxamount AS lovdescfinmaxamt,
			t7.finminamount AS lovdescfinminamount,
			t7.finisalwdifferment AS lovdescfinalwdeferment,
			t1.mindownpayperc,
			t7.finisdwpayrequired AS lovdescdwnpayreq,
			t1.recaltype,
			t1.finassetvalue,
			t7.finmaxdifferment AS lovdescfinmaxdifferment,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.repaymargin,
			t1.grcmargin,
			t1.depreciationfrq,
			t1.fincommitmentref,
			t1.fincurrassetvalue,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.downpaybank,
			t1.downpaysupl,
			t7.findivision AS lovdescfindivisionname,
			t1.graceterms,
			t14.facilitytype,
			t15.custshrtname AS lovdesccustshrtname,
			t16.branchdesc AS lovdescfinbranchname,
			t1.totalgrossgrcpft,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t7.product AS lovdescfinproduct,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.feeaccountid,
			t1.tdsapplicable,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.feechargeamt,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.roundingtarget,
			t1.grcmaxamount,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis AS bpiratebasis,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage
			FROM wiffinancemain t1
			LEFT JOIN wifindicativetermdetail_temp t14 ON t14.finreference = t1.finreference
			LEFT JOIN customers t15 ON t15.custid = t1.custid
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t16 ON t1.finbranch = t16.branchcode
		</createView>
	</changeSet>

	<changeSet id="39" author="Saikiran.v">
		<addColumn tableName="Financemain_temp">
			<column name="VanReq" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="40" author="Saikiran.v">
		<addColumn tableName="Financemain_temp">
			<column name="vanCode" type="varchar(100)" />
		</addColumn>
	</changeSet>


	<changeSet id="41" author="Saikiran.v">
		<addColumn tableName="Financemain">
			<column name="VanReq" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="42" author="Saikiran.v">
		<addColumn tableName="Financemain">
			<column name="vanCode" type="varchar(100)" />
		</addColumn>
	</changeSet>

	<changeSet id="43" author="Saikiran.v">
		<sql>
			<![CDATA[
				UPDATE Financemain Set VanReq = 0;
				UPDATE Financemain_temp Set VanReq = 0;
			
			]]>
		</sql>
	</changeSet>

	<changeSet id="44" author="Saikiran.v" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE Financemain ADD CONSTRAINT DF_Financemain_VanReq DEFAULT 0 FOR VanReq;
				ALTER TABLE Financemain_temp ADD CONSTRAINT DF_Financemain_temp_VanReq DEFAULT 0 FOR VanReq;
			]]>
		</sql>
	</changeSet>

	<changeSet id="45" author="Saikiran.v" dbms="postgresql, oracle">
		<addDefaultValue columnName="VanReq" tableName="Financemain" defaultValue="0" />
		<addDefaultValue columnName="VanReq" tableName="Financemain_temp" defaultValue="0" />
	</changeSet>

	<changeSet id="46" author="Saikiran.v">
		<createView viewName="financemain_aview" replaceIfExists="true">

			SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc lovdescfintypename,
			t7.finmaxamount lovdescfinmaxamt,
			t7.finminamount lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment lovdescfinalwdeferment,
			t7.finisdwpayrequired lovdescdwnpayreq,
			t7.finmaxdifferment lovdescfinmaxdifferment,
			t12.branchdesc lovdescfinbranchname,
			t12.branchprovince finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername lovdescaccountsofficer,
			t28.dealercity lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc referraliddesc,
			t1.dmacode,
			t34.rofficerdesc dmacodedesc,
			t1.salesdepartment,
			t35.gendeptdesc salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue loveligibilitymethod,
			t38.valuedesc lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername connectorcode,
			t40.dealercity connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code businessverticalcode,
			bv.description businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanReq,
			t1.vanCode
			FROM financemain t1
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical

		</createView>
	</changeSet>

	<changeSet id="47" author="Saikiran.v">
		<createView viewName="financemain_tview" replaceIfExists="true">

			SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc lovdescfintypename,
			t7.finmaxamount lovdescfinmaxamt,
			t7.finminamount lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment lovdescfinalwdeferment,
			t7.finisdwpayrequired lovdescdwnpayreq,
			t7.finmaxdifferment lovdescfinmaxdifferment,
			t12.branchdesc lovdescfinbranchname,
			t12.branchprovince finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername lovdescaccountsofficer,
			t28.dealercity lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc referraliddesc,
			t1.dmacode,
			t34.rofficerdesc dmacodedesc,
			t1.salesdepartment,
			t35.gendeptdesc salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue loveligibilitymethod,
			t38.valuedesc lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername connectorcode,
			t40.dealercity connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code businessverticalcode,
			bv.description businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanReq,
			t1.vanCode
			FROM financemain_temp t1
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
		</createView>
	</changeSet>

	<changeSet id="48" author="Saikiran.v">
		<createView viewName="financemain_view" replaceIfExists="true">

			SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc lovdescfintypename,
			t7.finmaxamount lovdescfinmaxamt,
			t7.finminamount lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment lovdescfinalwdeferment,
			t7.finisdwpayrequired lovdescdwnpayreq,
			t7.finmaxdifferment lovdescfinmaxdifferment,
			t12.branchdesc lovdescfinbranchname,
			t12.branchprovince finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername lovdescaccountsofficer,
			t28.dealercity lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc referraliddesc,
			t1.dmacode,
			t34.rofficerdesc dmacodedesc,
			t1.salesdepartment,
			t35.gendeptdesc salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue loveligibilitymethod,
			t38.valuedesc lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername connectorcode,
			t40.dealercity connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code businessverticalcode,
			bv.description businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanReq,
			t1.vanCode
			FROM financemain_temp t1
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			UNION ALL
			SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc lovdescfintypename,
			t7.finmaxamount lovdescfinmaxamt,
			t7.finminamount lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment lovdescfinalwdeferment,
			t7.finisdwpayrequired lovdescdwnpayreq,
			t7.finmaxdifferment lovdescfinmaxdifferment,
			t12.branchdesc lovdescfinbranchname,
			t12.branchprovince finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername lovdescaccountsofficer,
			t28.dealercity lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc referraliddesc,
			t1.dmacode,
			t34.rofficerdesc dmacodedesc,
			t1.salesdepartment,
			t35.gendeptdesc salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue loveligibilitymethod,
			t38.valuedesc lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername connectorcode,
			t40.dealercity connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code businessverticalcode,
			bv.description businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanReq,
			t1.vanCode
			FROM financemain t1
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			WHERE NOT (EXISTS ( SELECT 1
			FROM financemain_temp
			WHERE financemain_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="49" author="Saikiran.v">
		<sql>
		   <![CDATA[
			  UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			  update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
			  UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			  
			  insert into SecGroups Values((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FINANCEMAIN_VANCODE_MAKER', 'Partner Bank Maker for VanCode ', 0,1000,current_timestamp,'Approved',null,null,null,null,null,0 );
		  
			  INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'FinanceMainDialog_VanReq','FinanceMainDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			  INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='FINANCEMAIN_VANCODE_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_VanReq'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			  
			  INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'FinanceMainDialog_VanCode','FinanceMainDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			  INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='FINANCEMAIN_VANCODE_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_VanCode'),1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			  UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			  update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
			  UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>
	<changeSet id="50" author="Saikiran.v">
		<sql>
			<![CDATA[
				INSERT INTO ErrorDetails VALUES('90400','EN','E','Partner Bank with VAN Already Exist.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
			]]>
		</sql>
	</changeSet>
	<changeSet id="51" author="Saikiran.v">
		<sql>
			<![CDATA[
				INSERT INTO SMTPARAMETERS Values('VAN_REQUIRED','VAN Required Or Not','String', 0, 'N', 1, 0, NULL, NULL,'VAN Required Or Not',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="52" author="Manoj.P">
		<createTable tableName="LowerTaxDeduction_Temp">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint" />
			<column name="FinMaintainId" type="bigint" />
			<column name="Percentage" type="decimal(5,2)" />
			<column name="StartDate" type="datetime" />
			<column name="Enddate" type="datetime" />
			<column name="Limitamt" type="decimal(18,0)" />
			<column name="version" type="int" />
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="53" author="Manoj.P">
		<createTable tableName="LowerTaxDeduction">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint" />
			<column name="FinMaintainId" type="bigint" />
			<column name="Percentage" type="decimal(5,2)" />
			<column name="StartDate" type="datetime" />
			<column name="Enddate" type="datetime" />
			<column name="Limitamt" type="decimal(18,0)" />
			<column name="version" type="int" />
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>


	<changeSet id="54" author="Manoj.P" dbms="oracle,postgresql">
		<createSequence sequenceName="SeqLowerTaxDeduction" startValue="1" maxValue="9223372036854775807"
			incrementBy="1" />
	</changeSet>

	<changeSet id="55" author="Manoj.P" dbms="mssql">
		<createTable tableName="SeqLowerTaxDeduction">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int" />
		</createTable>
	</changeSet>


	<changeSet id="56" author="Durga Prasad G">
		<sql>
			<![CDATA[
				INSERT INTO SMTPARAMETERS Values('VALIDATION_REQ_NEXT_REPAYMENT_DATE','Next repayment period capitalization date cannot start before next repayment Interest date validation required or not','String', 0, 'Y', 1, 0, NULL, NULL,'Next repayment period capitalization date cannot start before next repayment Interest date validation required or not',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="57" author="Durga Prasad G">
		<sql>
			<![CDATA[
				INSERT INTO SMTPARAMETERS Values('RESET_FREQUENCY_DATES_REQ','Reset frequency dates required or not','String', 0, 'Y', 1, 0, NULL, NULL,'Reset frequency dates required or not',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="58" author="Durga Prasad G">
		<sql>
			<![CDATA[
				INSERT INTO SMTPARAMETERS Values('FRQ_DATE_VALIDATION_REQ','Frequency date validation required or not','String', 0, 'Y', 1, 0, NULL, NULL,'Frequency date validation required or not',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="59_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'secusers');
					select deps_save_and_drop_dependencies ('plf', 'secusers_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="59" author="Varaprasad.K">
		<modifyDataType tableName="SecUsers_temp" columnName="USERSTAFFID" newDataType="varchar(10)" />
	</changeSet>

	<changeSet id="60" author="Varaprasad.k">
		<modifyDataType tableName="SecUsers" columnName="USERSTAFFID" newDataType="varchar(10)" />
	</changeSet>

	<changeSet id="59_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'secusers');
					select deps_restore_dependencies ('plf', 'secusers_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="61" author="Manoj.P">
		<sql>
		<![CDATA[
			Delete from RBFIELDDETAILS where RBMODULE = 'GSTRULE' and RBEVENT = 'CGST' and RBFLDNAME = 'sezCertificateNo';
			Delete from RBFIELDDETAILS where RBMODULE = 'GSTRULE' and RBEVENT = 'SGST' and RBFLDNAME = 'sezCertificateNo';
			Delete from RBFIELDDETAILS where RBMODULE = 'GSTRULE' and RBEVENT = 'UGST' and RBFLDNAME = 'sezCertificateNo';
			Delete from RBFIELDDETAILS where RBMODULE = 'GSTRULE' and RBEVENT = 'IGST' and RBFLDNAME = 'sezCertificateNo';
			
			Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('GSTRULE','CGST','sezCertificateNo','Sez Certificate No','nchar',1,'0','1',' ','static,global','  '); 
			Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('GSTRULE','IGST','sezCertificateNo','Sez Certificate No','nchar',1,'0','1',' ','static,global','  '); 
			Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('GSTRULE','SGST','sezCertificateNo','Sez Certificate No','nchar',1,'0','1',' ','static,global','  ');
			Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values ('GSTRULE','UGST','sezCertificateNo','Sez Certificate No','nchar',1,'0','1',' ','static,global','  ');	
		   ]]>
		</sql>
	</changeSet>

	<changeSet id="62" author="Manoj.P">
		<sql>
		 	<![CDATA[
				INSERT INTO SMTPARAMETERS Values('ALW_PROFIT_SCHD_INVOICE','Allow Profit Schedule Invoice','String', 0, 'N', 1, 0, NULL, NULL,'Allow Profit Schedule Invoice',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<!-- <changeSet id="63" author="Manoj.P">
		<addColumn tableName="Email_messages">
			<column name="NotificationData" type="clob" />
		</addColumn>
	</changeSet>

	<changeSet id="64" author="Manoj.P">
		<addColumn tableName="sms_messages">
			<column name="NotificationData" type="clob" />
		</addColumn>
	</changeSet> -->
	<changeSet id="65.1" author="Varaprasad">
		<sql>
		  	<![CDATA[
					delete from REPORTLIST Where Code = 'NTFLENQ';
					INSERT INTO REPORTLIST Values ('NTFLENQ','FinanceMain','listheader_FinType.label,listheader_LovDescProductCodeName.label,listheader_LovDescCustCIF.label,listheader_FinReference.label,listheader_FinBranch.label,listheader_FinStartDate.label,listheader_NumberOfTerms.label,listheader_MaturityDate.label,listheader_FinCcy.label,listheader_FinancingAmount.label,listheader_CurFinAmount.label', 'finType,lovDescProductCodeName,lovDescCustCIF,finReference,finBranch,finStartDate,numberOfTerms,maturityDate,finCcy,financingAmount,curFinAmount','String,String,String,String,String,Date,int,Date,String,BigDecimal,BigDecimal',' ','ReportList11','Notification Log Details','Notification Log Enquiry',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0,0);
		 	]]>
		</sql>
	</changeSet>


	<changeSet id="66" author="Manoj" dbms="oracle,postgresql">
		<createView viewName="int_disbursement_request_view" replaceIfExists="true">
	     SELECT fa.paymentid,
		    fa.finreference,
		    'D' AS channel,
		    0 AS providerid,
		        CASE
		            WHEN fa.paymenttype = 'NEFT' THEN 'N'
		            WHEN fa.paymenttype = 'RTGS' THEN 'R'
		            WHEN fa.paymenttype = 'DD' THEN 'D'
		            WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
		            ELSE fa.paymenttype
		        END AS disbursement_type,
		    fa.amttobereleased,
		    fa.disbdate,
		    fa.lldate,
		    fa.payableloc,
		    fa.printingloc,
		    cu.custcif,
		    cu.custshrtname,
		    '' AS customer_mobile,
		    ce.custemail AS customer_email,
		    cs.cpprovincename AS customer_state,
		    cc.pccityname AS customer_city,
		    '' AS customer_address1,
		    '' AS customer_address2,
		    '' AS customer_address3,
		    '' AS customer_address4,
		    '' AS customer_address5,
		    bd.bankname,
		    bb.branchcode,
		    bb.branchdesc,
		    pbd.cpprovincename AS benficiary_branch_state,
		    pbd.pccityname AS benficiary_branch_city,
		    bb.micr AS micr_code,
		    bb.ifsc AS ifsc_code,
		    fa.beneficiaryaccno,
		        CASE
		            WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
		            ELSE fa.beneficiaryname
		        END AS beneficiaryname,
		    (fa.phonecountrycode || fa.phoneareacode) || fa.phonenumber AS beneficiary_mobile,
		    bce.custemail AS benficiry_email,
		    brs.cpprovincename AS benficiary_state,
		    brc.pccityname AS benficiary_city,
		    '' AS benficiary_address1,
		    '' AS benficiary_address2,
		    '' AS benficiary_address3,
		    '' AS benficiary_address4,
		    '' AS benficiary_address5,
		    '' AS payment_detail1,
		    '' AS payment_detail2,
		    '' AS payment_detail3,
		    '' AS payment_detail4,
		    '' AS payment_detail5,
		    '' AS payment_detail6,
		    '' AS payment_detail7,
		    fa.status,
		    fa.description AS remarks,
		    fa.paymenttype,
		    fm.fintype,
		    pb.partnerbankid,
		    pb.partnerbankcode,
		    fa.inputdate,
		    pb.alwfiledownload,
		    pb.filename,
		    fm.finisactive,
		    smd.entitycode
		   FROM finadvancepayments fa
		     JOIN ( SELECT financemain_temp.custid,
		            financemain_temp.finreference,
		            financemain_temp.fintype,
		            financemain_temp.finisactive
		           FROM financemain_temp
		        UNION ALL
		         SELECT t2.custid,
		            t2.finreference,
		            t2.fintype,
		            t2.finisactive
		           FROM financemain t2
		          WHERE NOT (EXISTS ( SELECT 1
		                   FROM financemain_temp t3
		                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
		     JOIN customers cu ON cu.custid = fm.custid
		     JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
		     JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
		     LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
		     LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
		     LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
		     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
		     LEFT JOIN ( SELECT pb_1.partnerbankid,
		            pbd_1.bankname,
		            pbb.branchdesc,
		            pbbrc.pccityname,
		            pbbrs.cpprovincename
		           FROM partnerbanks pb_1
		             JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
		             JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
		             LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
		             LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
		     LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
		     LEFT JOIN customers bc ON bc.custid = br.custid
		     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
		     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
		     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
		     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
		  WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
		           FROM disbursement_requests)) AND NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
		           FROM finadvancepayments_temp))
		UNION ALL
    
		 SELECT pi.paymentinstructionid AS paymentid,
		    ph.finreference,
		    ph.paymenttype AS channel,
		    0 AS providerid,
		        CASE
		            WHEN pi.paymenttype = 'NEFT' THEN 'N'
		            WHEN pi.paymenttype = 'RTGS' THEN 'R'
		            WHEN pi.paymenttype = 'DD' THEN 'D'
		            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
		            ELSE pi.paymenttype
		        END AS disbursement_type,
		    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
		    pi.postdate AS disbdate,
		    pi.postdate AS lldate,
		    pi.payableloc,
		    pi.printingloc,
		    cu.custcif,
		    cu.custshrtname,
		    '' AS customer_mobile,
		    ce.custemail AS customer_email,
		    cs.cpprovincename AS customer_state,
		    cc.pccityname AS customer_city,
		    '' AS customer_address1,
		    '' AS customer_address2,
		    '' AS customer_address3,
		    '' AS customer_address4,
		    '' AS customer_address5,
		    bd.bankname,
		    bb.branchcode,
		    bb.branchdesc,
		    bbrs.cpprovincename AS benficiary_branch_state,
		    bbrc.pccityname AS benficiary_branch_city,
		    bb.micr AS micr_code,
		    bb.ifsc AS ifsc_code,
		    pi.accountno AS beneficiaryaccno,
		        CASE
		            WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
		            ELSE pi.acctholdername
		        END AS beneficiaryname,
		    pi.phonecountrycode || pi.phonenumber AS beneficiary_mobile,
		    bce.custemail AS benficiry_email,
		    brs.cpprovincename AS benficiary_state,
		    brc.pccityname AS benficiary_city,
		    '' AS benficiary_address1,
		    '' AS benficiary_address2,
		    '' AS benficiary_address3,
		    '' AS benficiary_address4,
		    '' AS benficiary_address5,
		    '' AS payment_detail1,
		    '' AS payment_detail2,
		    '' AS payment_detail3,
		    '' AS payment_detail4,
		    '' AS payment_detail5,
		    '' AS payment_detail6,
		    '' AS payment_detail7,
		    pi.status,
		    pi.remarks,
		    pi.paymenttype,
		    fm.fintype,
		    pb.partnerbankid,
		    pb.partnerbankcode,
		    pi.postdate AS inputdate,
		    pb.alwfiledownload,
		    pb.filename,
		    fm.finisactive,
		    smd.entitycode
		   FROM paymentinstructions pi
		     JOIN paymentheader ph ON ph.paymentid = pi.paymentid
		     JOIN ( SELECT financemain.custid,
		            financemain.finreference,
		            financemain.fintype,
		            financemain.finisactive
		           FROM financemain
		        UNION ALL
		         SELECT t2.custid,
		            t2.finreference,
		            t2.fintype,
		            t2.finisactive
		           FROM financemain_temp t2
		          WHERE NOT (EXISTS ( SELECT 1
		                   FROM financemain_temp t3
		                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
		     JOIN customers cu ON cu.custid = fm.custid
		     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
		     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
		     LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
		     LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
		     LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
		     LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
		     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
		     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
		     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
		     LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
		     LEFT JOIN customers bc ON bc.custid = br.custid
		     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
		     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
		     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
		     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
		  WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
		           FROM disbursement_requests))
		UNION ALL
		 SELECT pi.id AS paymentid,
		    '' AS finreference,
		    'I' AS channel,
		    pi.providerid,
		        CASE
		            WHEN pi.paymenttype = 'NEFT' THEN 'N'
		            WHEN pi.paymenttype = 'RTGS' THEN 'R'
		            WHEN pi.paymenttype = 'DD' THEN 'D'
		            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
		            ELSE pi.paymenttype
		        END AS disbursement_type,
		    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
		    pi.paymentdate AS disbdate,
		    pi.paymentdate AS lldate,
		    '' AS payableloc,
		    '' AS printingloc,
		    '' AS custcif,
		    '' AS custshrtname,
		    '' AS customer_mobile,
		    '' AS customer_email,
		    '' AS customer_state,
		    '' AS customer_city,
		    '' AS customer_address1,
		    '' AS customer_address2,
		    '' AS customer_address3,
		    '' AS customer_address4,
		    '' AS customer_address5,
		    bd.bankname,
		    bb.branchcode,
		    bb.branchdesc,
		    bbrs.cpprovincename AS benficiary_branch_state,
		    bbrc.pccityname AS benficiary_branch_city,
		    bb.micr AS micr_code,
		    bb.ifsc AS ifsc_code,
		    vpa.accountnumber AS beneficiaryaccno,
		    avd.dealername AS beneficiaryname,
		    avd.dealertelephone AS beneficiary_mobile,
		    avd.email AS benficiry_email,
		    brs.cpprovincename AS benficiary_state,
		    brc.pccityname AS benficiary_city,
		    avd.dealeraddress1 AS benficiary_address1,
		    avd.dealeraddress2 AS benficiary_address2,
		    avd.dealeraddress3 AS benficiary_address3,
		    '' AS benficiary_address4,
		    '' AS benficiary_address5,
		    '' AS payment_detail1,
		    '' AS payment_detail2,
		    '' AS payment_detail3,
		    '' AS payment_detail4,
		    '' AS payment_detail5,
		    '' AS payment_detail6,
		    '' AS payment_detail7,
		    pi.status,
		    pi.remarks,
		    pi.paymenttype,
		    '' AS fintype,
		    pb.partnerbankid,
		    pb.partnerbankcode,
		    pi.paymentdate AS inputdate,
		    pb.alwfiledownload,
		    pb.filename,
		    1 AS finisactive,
		    pi.entitycode
		   FROM insurancepaymentinstructions pi
		     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
		     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
		     JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
		     JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
		     LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
		     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
		     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
		     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
		     LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
		     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
		  WHERE pi.status = 'APPROVED' AND pi.paymentamount > 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
		           FROM disbursement_requests))
     	</createView>
	</changeSet>


	<changeSet id="66" author="Manoj" dbms="mssql">
		<createView viewName="int_disbursement_request_view" replaceIfExists="true">
	          SELECT fa.paymentid,
		    fa.finreference,
		    'D' AS channel,
		    0 AS providerid,
		        CASE
		            WHEN fa.paymenttype = 'NEFT' THEN 'N'
		            WHEN fa.paymenttype = 'RTGS' THEN 'R'
		            WHEN fa.paymenttype = 'DD' THEN 'D'
		            WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
		            ELSE fa.paymenttype
		        END AS disbursement_type,
		    fa.amttobereleased,
		    fa.disbdate,
		    fa.lldate,
		    fa.payableloc,
		    fa.printingloc,
		    cu.custcif,
		    cu.custshrtname,
		    '' AS customer_mobile,
		    ce.custemail AS customer_email,
		    cs.cpprovincename AS customer_state,
		    cc.pccityname AS customer_city,
		    '' AS customer_address1,
		    '' AS customer_address2,
		    '' AS customer_address3,
		    '' AS customer_address4,
		    '' AS customer_address5,
		    bd.bankname,
		    bb.branchcode,
		    bb.branchdesc,
		    pbd.cpprovincename AS benficiary_branch_state,
		    pbd.pccityname AS benficiary_branch_city,
		    bb.micr AS micr_code,
		    bb.ifsc AS ifsc_code,
		    fa.beneficiaryaccno,
		        CASE
		            WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
		            ELSE fa.beneficiaryname
		        END AS beneficiaryname,
		    (fa.phonecountrycode + fa.phoneareacode) + fa.phonenumber AS beneficiary_mobile,
		    bce.custemail AS benficiry_email,
		    brs.cpprovincename AS benficiary_state,
		    brc.pccityname AS benficiary_city,
		    '' AS benficiary_address1,
		    '' AS benficiary_address2,
		    '' AS benficiary_address3,
		    '' AS benficiary_address4,
		    '' AS benficiary_address5,
		    '' AS payment_detail1,
		    '' AS payment_detail2,
		    '' AS payment_detail3,
		    '' AS payment_detail4,
		    '' AS payment_detail5,
		    '' AS payment_detail6,
		    '' AS payment_detail7,
		    fa.status,
		    fa.description AS remarks,
		    fa.paymenttype,
		    fm.fintype,
		    pb.partnerbankid,
		    pb.partnerbankcode,
		    fa.inputdate,
		    pb.alwfiledownload,
		    pb.filename,
		    fm.finisactive,
		    smd.entitycode
		   FROM finadvancepayments fa
		     JOIN ( SELECT financemain_temp.custid,
		            financemain_temp.finreference,
		            financemain_temp.fintype,
		            financemain_temp.finisactive
		           FROM financemain_temp
		        UNION ALL
		         SELECT t2.custid,
		            t2.finreference,
		            t2.fintype,
		            t2.finisactive
		           FROM financemain t2
		          WHERE NOT (EXISTS ( SELECT 1
		                   FROM financemain_temp t3
		                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
		     JOIN customers cu ON cu.custid = fm.custid
		     JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
		     JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
		     LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
		     LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
		     LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
		     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
		     LEFT JOIN ( SELECT pb_1.partnerbankid,
		            pbd_1.bankname,
		            pbb.branchdesc,
		            pbbrc.pccityname,
		            pbbrs.cpprovincename
		           FROM partnerbanks pb_1
		             JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
		             JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
		             LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
		             LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
		     LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
		     LEFT JOIN customers bc ON bc.custid = br.custid
		     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
		     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
		     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
		     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
		  WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
		           FROM disbursement_requests)) AND NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
		           FROM finadvancepayments_temp))
		UNION ALL
    
		 SELECT pi.paymentinstructionid AS paymentid,
		    ph.finreference,
		    ph.paymenttype AS channel,
		    0 AS providerid,
		        CASE
		            WHEN pi.paymenttype = 'NEFT' THEN 'N'
		            WHEN pi.paymenttype = 'RTGS' THEN 'R'
		            WHEN pi.paymenttype = 'DD' THEN 'D'
		            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
		            ELSE pi.paymenttype
		        END AS disbursement_type,
		    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
		    pi.postdate AS disbdate,
		    pi.postdate AS lldate,
		    pi.payableloc,
		    pi.printingloc,
		    cu.custcif,
		    cu.custshrtname,
		    '' AS customer_mobile,
		    ce.custemail AS customer_email,
		    cs.cpprovincename AS customer_state,
		    cc.pccityname AS customer_city,
		    '' AS customer_address1,
		    '' AS customer_address2,
		    '' AS customer_address3,
		    '' AS customer_address4,
		    '' AS customer_address5,
		    bd.bankname,
		    bb.branchcode,
		    bb.branchdesc,
		    bbrs.cpprovincename AS benficiary_branch_state,
		    bbrc.pccityname AS benficiary_branch_city,
		    bb.micr AS micr_code,
		    bb.ifsc AS ifsc_code,
		    pi.accountno AS beneficiaryaccno,
		        CASE
		            WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
		            ELSE pi.acctholdername
		        END AS beneficiaryname,
		    pi.phonecountrycode + pi.phonenumber AS beneficiary_mobile,
		    bce.custemail AS benficiry_email,
		    brs.cpprovincename AS benficiary_state,
		    brc.pccityname AS benficiary_city,
		    '' AS benficiary_address1,
		    '' AS benficiary_address2,
		    '' AS benficiary_address3,
		    '' AS benficiary_address4,
		    '' AS benficiary_address5,
		    '' AS payment_detail1,
		    '' AS payment_detail2,
		    '' AS payment_detail3,
		    '' AS payment_detail4,
		    '' AS payment_detail5,
		    '' AS payment_detail6,
		    '' AS payment_detail7,
		    pi.status,
		    pi.remarks,
		    pi.paymenttype,
		    fm.fintype,
		    pb.partnerbankid,
		    pb.partnerbankcode,
		    pi.postdate AS inputdate,
		    pb.alwfiledownload,
		    pb.filename,
		    fm.finisactive,
		    smd.entitycode
		   FROM paymentinstructions pi
		     JOIN paymentheader ph ON ph.paymentid = pi.paymentid
		     JOIN ( SELECT financemain.custid,
		            financemain.finreference,
		            financemain.fintype,
		            financemain.finisactive
		           FROM financemain
		        UNION ALL
		         SELECT t2.custid,
		            t2.finreference,
		            t2.fintype,
		            t2.finisactive
		           FROM financemain_temp t2
		          WHERE NOT (EXISTS ( SELECT 1
		                   FROM financemain_temp t3
		                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
		     JOIN customers cu ON cu.custid = fm.custid
		     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
		     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
		     LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
		     LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
		     LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
		     LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
		     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
		     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
		     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
		     LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
		     LEFT JOIN customers bc ON bc.custid = br.custid
		     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
		     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
		     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
		     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
		     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
		     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
		  WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
		           FROM disbursement_requests))
		UNION ALL
		 SELECT pi.id AS paymentid,
		    '' AS finreference,
		    'I' AS channel,
		    pi.providerid,
		        CASE
		            WHEN pi.paymenttype = 'NEFT' THEN 'N'
		            WHEN pi.paymenttype = 'RTGS' THEN 'R'
		            WHEN pi.paymenttype = 'DD' THEN 'D'
		            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
		            ELSE pi.paymenttype
		        END AS disbursement_type,
		    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
		    pi.paymentdate AS disbdate,
		    pi.paymentdate AS lldate,
		    '' AS payableloc,
		    '' AS printingloc,
		    '' AS custcif,
		    '' AS custshrtname,
		    '' AS customer_mobile,
		    '' AS customer_email,
		    '' AS customer_state,
		    '' AS customer_city,
		    '' AS customer_address1,
		    '' AS customer_address2,
		    '' AS customer_address3,
		    '' AS customer_address4,
		    '' AS customer_address5,
		    bd.bankname,
		    bb.branchcode,
		    bb.branchdesc,
		    bbrs.cpprovincename AS benficiary_branch_state,
		    bbrc.pccityname AS benficiary_branch_city,
		    bb.micr AS micr_code,
		    bb.ifsc AS ifsc_code,
		    vpa.accountnumber AS beneficiaryaccno,
		    avd.dealername AS beneficiaryname,
		    avd.dealertelephone AS beneficiary_mobile,
		    avd.email AS benficiry_email,
		    brs.cpprovincename AS benficiary_state,
		    brc.pccityname AS benficiary_city,
		    avd.dealeraddress1 AS benficiary_address1,
		    avd.dealeraddress2 AS benficiary_address2,
		    avd.dealeraddress3 AS benficiary_address3,
		    '' AS benficiary_address4,
		    '' AS benficiary_address5,
		    '' AS payment_detail1,
		    '' AS payment_detail2,
		    '' AS payment_detail3,
		    '' AS payment_detail4,
		    '' AS payment_detail5,
		    '' AS payment_detail6,
		    '' AS payment_detail7,
		    pi.status,
		    pi.remarks,
		    pi.paymenttype,
		    '' AS fintype,
		    pb.partnerbankid,
		    pb.partnerbankcode,
		    pi.paymentdate AS inputdate,
		    pb.alwfiledownload,
		    pb.filename,
		    1 AS finisactive,
		    pi.entitycode
		   FROM insurancepaymentinstructions pi
		     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
		     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
		     JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
		     JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
		     LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
		     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
		     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
		     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
		     LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
		     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
		  WHERE pi.status = 'APPROVED' AND pi.paymentamount > 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
		           FROM disbursement_requests))
     	</createView>
	</changeSet>



	<changeSet id="67" author="Manoj">
		<sql>
                   <![CDATA[
                     INSERT INTO SMTPARAMETERS Values('FI_DOCUMENT_MANDATORY','Atleast One Document is Mandatory For Field Investigation','String', 0, 'N', 1, 0, NULL, NULL,'Atleast One Document is Mandatory For Field Investigation',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);                   
                     INSERT INTO SMTPARAMETERS Values('VERIFICATION_RCU_EYEBALLED_VALUE','For RCU Verification EyeBalled Value Required Or Not','String', 0, 'N', 1, 0, NULL, NULL,'For RCU Verification EyeBalled Value Required Or Not',1,  1000,CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);      
                   ]]>
		</sql>
	</changeSet>

	<changeSet id="68" author="Prathap">
		<createView viewName="lmtfinanceworkflowdef_aview" replaceIfExists="true">
		  SELECT t1.fintype,
				t1.fintype AS typecode,
				t2.fintypedesc AS lovdescfintypename,
				t6.collateraldesc,
				t7.productdesc AS vasproductdesc,
				t8.description AS commitmenttypedesc,
				t1.fintype AS lovdescpromotioncode,
				t2.fintypedesc AS lovdescpromotionname,
				t4.facilitydesc AS lovdescfacilitytypename,
				t1.screencode,
				t1.workflowtype,
				t3.workflowdesc AS lovdescworkflowtypename,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t3.workflowroles AS lovdescworkflowrolesname,
				t2.fincategory AS lovdescproductcodename,
				t2.findivision AS lovdescfindivisionname,
				t3.firsttaskowner AS lovdescfirsttaskowner,
				t1.modulename,
				COALESCE(t2.finisactive, t6.active, t7.active, t8.active) AS finisactive,
				COALESCE(t2.product, '') AS lovdescproductname,
				t2.lovdescpromofintypedesc,
				t2.finassettype,
				t2.startdate,
				t2.enddate,
				t1.finevent,
				t5.productcategory
		   FROM lmtfinanceworkflowdef t1
			 LEFT JOIN rmtfinancetypes_aview t2 ON t1.fintype = t2.fintype
			 JOIN workflowdetails t3 ON t1.workflowtype = t3.workflowtype AND t3.workflowactive = 1
			 LEFT JOIN caffacilitytypes t4 ON t1.fintype = t4.facilitytype
			 LEFT JOIN bmtproduct t5 ON t2.fincategory = t5.productcode
			 LEFT JOIN collateralstructure t6 ON t1.fintype = t6.collateraltype
			 LEFT JOIN vasstructure t7 ON t1.fintype = t7.productcode
			 LEFT JOIN commitmenttype t8 ON t1.fintype = t8.typecode
		 </createView>
	</changeSet>
	<changeSet id="69" author="pruthvi">
		<sql>
                <![CDATA[	
		            DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MENUITEM_FINDEPTREPORTS_PASTDUE');
					DELETE FROM SECRIGHTS WHERE RIGHTNAME='MENUITEM_FINDEPTREPORTS_PASTDUE';
				]]>
		</sql>
	</changeSet>
	<!-- 5.0.6 is Under QC please use 5.0.7 -->
</databaseChangeLog>