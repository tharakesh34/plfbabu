<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />


	<changeSet id="pre_run_for_pgp" author="Jayant" runAlways="true"
		dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>
	
	<changeSet id="1" author="Siva">
		<sql>
			insert into BMTAMOUNTCODES values('REPAY',0,'bounceCharge_CGST_P','Bounce charge CGST paid',1,1,1000,Current_TimeStamp,'Approved',null,null,null,null,null,0);
			insert into BMTAMOUNTCODES values('REPAY',0,'bounceCharge_SGST_P','Bounce charge SGST paid',1,1,1000,Current_TimeStamp,'Approved',null,null,null,null,null,0);
			insert into BMTAMOUNTCODES values('REPAY',0,'bounceCharge_IGST_P','Bounce charge IGST paid',1,1,1000,Current_TimeStamp,'Approved',null,null,null,null,null,0);
			insert into BMTAMOUNTCODES values('REPAY',0,'bounceCharge_UGST_P','Bounce charge UGST paid',1,1,1000,Current_TimeStamp,'Approved',null,null,null,null,null,0);
		</sql>
	</changeSet>
	<changeSet id="2" author="SrinivasaVarma">
		<comment> New Column added allowInRule </comment>
		<createView viewName="extendedfielddetail_aview"
			replaceIfExists="true">
			select t1.moduleid,  t1.fieldname,  t2.modulename as lovdescmodulename, t2.submodulename as lovdescsubmodulename,
			t1.fieldtype, t1.fieldlength,  t1.fieldprec, t1.fieldlabel, t1.fieldmandatory,
			t1.fieldconstraint,  t1.fieldseqorder, t1.fieldlist, t1.fielddefaultvalue,
			t1.fieldminvalue, t1.fieldmaxvalue, t1.fieldunique, t1.extendedtype, t1.version,
			t1.lastmntby, t1.lastmnton,  t1.recordstatus,  t1.rolecode, t1.nextrolecode,
			t1.taskid,  t1.nexttaskid, t1.recordtype,  t1.workflowid, t1.multiline,  t1.parenttag,
			t1.inputelement, t1.editable,t1.allowInRule
			from extendedfielddetail t1 join extendedfieldheader t2 on t1.moduleid = t2.moduleid
		</createView>
	</changeSet>

	<changeSet id="3" author="SrinivasaVarma">
		<comment> New Column added allowInRule </comment>
		<createView viewName="extendedfielddetail_view"
			replaceIfExists="true">
			SELECT t1.moduleid, t1.fieldname, t2.modulename AS lovdescmodulename, t2.submodulename AS lovdescsubmodulename,
		    t1.fieldtype, t1.fieldlength, t1.fieldprec, t1.fieldlabel,
		    t1.fieldmandatory,
		    t1.fieldconstraint,
		    t1.fieldseqorder,
		    t1.fieldlist,
		    t1.fielddefaultvalue,
		    t1.fieldminvalue,
		    t1.fieldmaxvalue,
		    t1.fieldunique,
		    t1.extendedtype,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t1.multiline,
		    t1.parenttag,
		    t1.inputelement,
		    t1.editable,
		    t1.allowInRule
		   FROM extendedfielddetail_temp t1 JOIN extendedfieldheader_temp t2 ON t1.moduleid = t2.moduleid
		UNION ALL
		 SELECT t1.moduleid,
		    t1.fieldname,
		    t2.modulename AS lovdescmodulename,
		    t2.submodulename AS lovdescsubmodulename,
		    t1.fieldtype,
		    t1.fieldlength,
		    t1.fieldprec,
		    t1.fieldlabel,
		    t1.fieldmandatory,
		    t1.fieldconstraint,
		    t1.fieldseqorder,
		    t1.fieldlist,
		    t1.fielddefaultvalue,
		    t1.fieldminvalue,
		    t1.fieldmaxvalue,
		    t1.fieldunique,
		    t1.extendedtype,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t1.multiline,
		    t1.parenttag,
		    t1.inputelement,
		    t1.editable,
		    t1.allowInRule
		   FROM extendedfielddetail t1 JOIN extendedfieldheader t2 ON t1.moduleid = t2.moduleid
		   WHERE NOT (EXISTS ( SELECT 1 FROM extendedfielddetail_temp WHERE extendedfielddetail_temp.moduleid = t1.moduleid AND extendedfielddetail_temp.fieldname = t1.fieldname))
		</createView>
	</changeSet>
	
	<changeSet id="4" author="Siva">
		<addColumn tableName="FinRepayHeader">
			<column name="RealizeUnAmz" type="decimal(18,0)" />
		</addColumn>
		<addColumn tableName="FinRepayHeader_Temp">
			<column name="RealizeUnAmz" type="decimal(18,0)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="5" author="Siva" dbms="oracle">
		<addDefaultValue columnName="RealizeUnAmz" tableName="FinRepayHeader" defaultValue="0"/>
		<addDefaultValue columnName="RealizeUnAmz" tableName="FinRepayHeader_Temp" defaultValue="0"/>
	</changeSet>
	<changeSet id="5" author="Siva" dbms="postgresql">
		<addDefaultValue columnName="RealizeUnAmz" tableName="FinRepayHeader" defaultValue="0"/>
		<addDefaultValue columnName="RealizeUnAmz" tableName="FinRepayHeader_Temp" defaultValue="0"/>
	</changeSet>
		<changeSet id="5" author="Siva" dbms="mssql">
		<sql>
			alter table FinRepayHeader add constraint df_fph_RealizeUnAmz default 0 for RealizeUnAmz;
			alter table FinRepayHeader_Temp add constraint df_fph_t_RealizeUnAmz default 0 for RealizeUnAmz;
		</sql>
	</changeSet>
	<changeSet id="6" author="Siva">
		<sql>
			update FinRepayHeader set RealizeUnAmz = 0 where RealizeUnAmz is null;
			update FinRepayHeader_Temp set RealizeUnAmz = 0 where RealizeUnAmz is null;
		</sql>
	</changeSet>
	<changeSet id="7" author="Ganesh.p">
		<comment> change the severity of the LoanStartDate and DisbursmentDate should be matched error</comment>
		<sql>
			update ERRORDETAILS set severity='E' where code='65032';
		</sql>
	</changeSet>
	<changeSet id="8" author="Manoj">
		<comment> New Table : InterfaceMappingConfiguration for mapping PLF and InterfaceData</comment>
		<createTable tableName="InterfaceMappingConfiguration">
			<column name="ServiceName" type="varchar(100)">
				<constraints nullable="false"/>
			</column>
			<column name="ModuleCode" type="varchar(100)">
				<constraints nullable="false"/>
			</column>
			<column name="SourceCode" type="varchar(30)	">
			</column>
			<column name="DestCode" type="varchar(30)">
			</column>
			<column name="SourceId" type="bigint">
			</column>
			<column name="DestId" type="bigint">
			</column>
			<column name="DestDescription" type="varchar(200)" />
			<column name="active" type="boolean" />
			<column name="version" type="int" />
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet id="8_Post" author="manoj" dbms="oracle">
		<addDefaultValue columnName="SourceId" tableName="InterfaceMappingConfiguration" defaultValue="0"/>
		<addDefaultValue columnName="DestId" tableName="InterfaceMappingConfiguration" defaultValue="0"/>
	</changeSet>
	<changeSet id="8_Post" author="manoj" dbms="postgresql">
		<addDefaultValue columnName="SourceId" tableName="InterfaceMappingConfiguration" defaultValue="0"/>
		<addDefaultValue columnName="DestId" tableName="InterfaceMappingConfiguration" defaultValue="0"/>
	</changeSet>
		<changeSet id="8_Post" author="manoj" dbms="mssql">
		<sql>
			alter table InterfaceMappingConfiguration add constraint df_imc_SourceId default 0 for SourceId;
			alter table InterfaceMappingConfiguration add constraint df_imc_DestId default 0 for DestId;
		</sql>
	</changeSet>
	<changeSet id="9" author="Manoj">
		<createIndex tableName="InterfaceMappingConfiguration" indexName="IDX_IMC_MOD_SRC_SM">
			<column name="ModuleCode" type="varchar(100)"/>
			<column name="SourceCode" type="varchar(100)"/>
			<column name="ServiceName" type="varchar(100)"/>
		</createIndex>
	</changeSet>
	<changeSet id="10" author="Manoj">
		<createIndex tableName="InterfaceMappingConfiguration" indexName="IDX_IMC_MOD_SID_SM">
			<column name="ModuleCode" type="varchar(100)"/>
			<column name="SourceId" type="bigint"/>
			<column name="ServiceName" type="varchar(100)"/>
		</createIndex>
	</changeSet>
	<changeSet id="11" author="Manoj">
		<createIndex tableName="InterfaceMappingConfiguration" indexName="IDX_IMC_MOD_SM">
			<column name="ModuleCode" type="varchar(100)"/>
			<column name="ServiceName" type="varchar(100)"/>
		</createIndex>
	</changeSet>

	 <changeSet id="12" author="Ganesh.p">
		<modifyDataType tableName="CollateralCoOwners_Temp"
			columnName="CoOwnerIDType" newDataType="VARCHAR(50)" />
	</changeSet>

	<changeSet id="13" author="Ganesh.p">
		<modifyDataType tableName="CollateralCoOwners"
			columnName="CoOwnerIDType" newDataType="VARCHAR(50)" />
	</changeSet>
	<changeSet id="14" author="srikanth.m">
	<addColumn tableName="mandate_requests">
		<column name="ifsc_code" type= "varchar(20)"/>
		<column name="customer_phone" type= "varchar(20)"/>
		<column name="customer_email" type= "varchar(100)"/>
		<column name="folio_number" type= "varchar(20)"/>
		<column name="branch_code" type= "varchar(8)"/>
		<column name="branch_address" type= "varchar(100)"/>
		<column name="auxiliary_field1" type= "varchar(50)"/>
		<column name="auxiliary_field2" type= "varchar(50)"/>
		<column name="auxiliary_field3" type= "varchar(50)"/>
		<column name="auxiliary_field4" type= "varchar(50)"/>
	</addColumn>
</changeSet>
<changeSet id="14.1" author="srikanth.m">
	<addColumn tableName="mandate_response">
		<column name="ifsc_code" type= "varchar(20)"/>
		<column name="customer_phone" type= "varchar(20)"/>
		<column name="customer_email" type= "varchar(100)"/>
		<column name="folio_number" type= "varchar(20)"/>
		<column name="branch_code" type= "varchar(8)"/>
		<column name="branch_address" type= "varchar(100)"/>
		<column name="auxiliary_field1" type= "varchar(50)"/>
		<column name="auxiliary_field2" type= "varchar(50)"/>
		<column name="auxiliary_field3" type= "varchar(50)"/>
		<column name="auxiliary_field4" type= "varchar(50)"/>
	</addColumn>
</changeSet>
<changeSet id="14.2" author="srikanth.m">
	<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
 SELECT M.MANDATEID, 
			BD.BANKSHORTCODE BANKCODE,
			BD.BANKNAME,
			case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
      		case when LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
			CUST.CUSTCIF,
			CUST.CUSTSHRTNAME,
			FT.FINTYPEDESC FINTYPE ,
			FIN.FINREFERENCE ,
			COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount 
													FROM FINSCHEDULEDETAILS FSD 
													INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE =FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID 
													GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
			COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID = M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
			  CASE M.OPENMANDATE
			    WHEN 1
			    THEN 'New Open ECS'
			    ELSE 'No Open ECS'
			  END OPENMANDATE,
			M.ACCNUMBER,
			M.ACCTYPE,
			M.ACCHOLDERNAME,
			BB.MICR,
			BB.IFSC,
			BB.ADDOFBRANCH,
			(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
			(select MAX(SCHDATE) from FINSCHEDULEDETAILS where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) EMIENDDATE,
			 COALESCE (M.MAXLIMIT/CCYMINORCCYUNITS, 0) MAXLIMIT, 
     		 COALESCE((SELECT SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)
     		 GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
			  M.STARTDATE,
			  M.EXPIRYDATE,
			  FIN.APPLICATIONNO,
			  M.MANDATETYPE,
			  M.STATUS,
			  M.INPUTDATE,
			  M.RECORDSTATUS,
			  M.RECORDTYPE,
        	M.MANDATECCY,
			  COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,M.EntityCode
			FROM MANDATES M
			INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
			INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE 
			INNER JOIN CUSTOMERS CUST   ON CUST.CUSTID = M.CUSTID
			INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH 
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
			LEFT OUTER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
			LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
			LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH 
			LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE =FT.FINTYPE 
			WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN  (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC' OR status = 'NEW'))
		</createView>
</changeSet>
<changeSet id="14.3" author="srikanth.m">
<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
SELECT M.MANDATEID, 
			BD.BANKSHORTCODE BANKCODE,
			BD.BANKNAME,
			case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
      		case when LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
			CUST.CUSTCIF,
			CUST.CUSTSHRTNAME,
			FT.FINTYPEDESC FINTYPE ,
			FIN.FINREFERENCE ,
			COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount 
													FROM FINSCHEDULEDETAILS FSD 
													INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE =FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID 
													GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
			COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID = M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
			  CASE M.OPENMANDATE
			    WHEN 1
			    THEN 'New Open ECS'
			    ELSE 'No Open ECS'
			  END OPENMANDATE,
			M.ACCNUMBER,
			M.ACCTYPE,
			M.ACCHOLDERNAME,
			BB.MICR,
			BB.IFSC,
			BB.ADDOFBRANCH,
			(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
			(select MAX(SCHDATE) from FINSCHEDULEDETAILS where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) EMIENDDATE,
			 COALESCE (M.MAXLIMIT/CCYMINORCCYUNITS, 0) MAXLIMIT, 
     		 COALESCE((SELECT SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)
     		 GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
			  M.STARTDATE,
			  M.EXPIRYDATE,
			  FIN.APPLICATIONNO,
			  M.MANDATETYPE,
			  M.STATUS,
			  M.INPUTDATE,
			  M.RECORDSTATUS,
			  M.RECORDTYPE,
        	M.MANDATECCY,
			  COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,M.EntityCode,
              CP.PHONENUMBER,
			CE.CUSTEMAIL
			FROM MANDATES M
			INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
			INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE 
			INNER JOIN CUSTOMERS CUST   ON CUST.CUSTID = M.CUSTID
			INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH 
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
			LEFT OUTER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
			LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
			LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH 
			LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE =FT.FINTYPE 
			WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN  (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC' OR status = 'NEW'))
			</createView>
</changeSet>
<changeSet id="15" author="Jayant">
	<createSequence sequenceName="SeqPostingId" startValue="1" incrementBy="1"/>
</changeSet>
<changeSet id="16" author="vijaykumar.l">
<sql>
			Delete from RBFIELDDETAILS where RBMODULE = 'SCORES' and RBEVENT = 'RSCORE' and RbFldName = 'IIR_RATIO';
			Delete from RBFIELDDETAILS where RBMODULE = 'SCORES' and RBEVENT = 'RSCORE' and RbFldName = 'MRKVALUE_CONSIDER';
			Delete from RBFIELDDETAILS where RBMODULE = 'SCORES' and RBEVENT = 'RSCORE' and RbFldName = 'PROP_LTV';
			Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
			('SCORES','RSCORE','IIR_RATIO',' Installment Income Ratio','decimal',18,'1','1',null,'static,calvalue',null);
			Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
			('SCORES','RSCORE','MRKVALUE_CONSIDER',' Market Value Considered','decimal',18,'1','1',null,'static,calvalue',null);
			Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
			('SCORES','RSCORE','PROP_LTV',' LTV On Property ','decimal',18,'1','1',null,'static,calvalue',null);
</sql>
</changeSet>
<changeSet id="17" author="Vinay">
		<createView viewName="querydetail_aview" replaceIfExists="true">
			SELECT t1.finreference,
		    t1.id,
		    s1.usrlogin,
		    t1.raisedon,
		    b1.description,
		    t1.qrynotes,
		    t1.status,
		    t1.raisedby,
		    b1.code AS categorycode,
		    b1.description AS categorydescription,
		    t1.categoryid,
		    t1.assignedrole,
		    t1.notifyto,
		    t1.responsnotes,
		    t1.responseby,
		    s2.usrlogin AS responseuser,
		    t1.responseon,
		    t1.closernotes,
		    t1.closerby,
		    s3.usrlogin AS closeruser,
		    t1.closeron,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid
		   FROM querydetail t1
		     JOIN bmtquerycategories b1 ON t1.categoryid = b1.id
		     JOIN secusers s1 ON t1.raisedby = s1.usrid
		     LEFT JOIN secusers s2 ON t1.responseby = s2.usrid
		     LEFT JOIN secusers s3 ON t1.closerby = s3.usrid
		</createView>
	</changeSet>
	
	<changeSet id="18" author="Vinay">
		<createView viewName="querydetail_view" replaceIfExists="true"> 
			SELECT t1.finreference,
			    t1.id,
			    s1.usrlogin,
			    t1.raisedon,
			    b1.description,
			    t1.qrynotes,
			    t1.status,
			    t1.raisedby,
			    b1.code AS categorycode,
			    b1.description AS categorydescription,
			    t1.categoryid,
			    t1.assignedrole,
			    t1.notifyto,
			    t1.responsnotes,
			    t1.responseby,
			    s2.usrlogin AS responseuser,
			    t1.responseon,
			    t1.closernotes,
			    t1.closerby,
			    s3.usrlogin AS closeruser,
			    t1.closeron,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid
			   FROM querydetail t1
			     JOIN bmtquerycategories b1 ON t1.categoryid = b1.id
			     JOIN secusers s1 ON t1.raisedby = s1.usrid
			     LEFT JOIN secusers s2 ON t1.responseby = s2.usrid
			     LEFT JOIN secusers s3 ON t1.closerby = s3.usrid
		</createView>
	</changeSet>
	
	<changeSet id="19" author="Vinay">
		<sql>
			delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='QUERYDETAIL_MAKER') and rightid=(select rightid from secrights where rightname='menuItem_LoanQuery_QueryDetail');
			delete from secgrouprights where grpid=(select grpid from secgroups where grpcode='QUERYDETAIL_APPROVER') and rightid=(select rightid from secrights where rightname='menuItem_LoanQuery_QueryDetail');
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='QUERYDETAIL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_LoanQuery_QueryDetail'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='QUERYDETAIL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_LoanQuery_QueryDetail'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		</sql>
	</changeSet>
		
	<changeSet id="20" author="Vinay">
		<modifyDataType tableName="QueryDetail" columnName="closernotes" newDataType="varchar(200)"/>
		<modifyDataType tableName="QueryDetail_Temp" columnName="closernotes" newDataType="varchar(200)"/>
	</changeSet>
	
	<changeSet id="21" author="Vinay">
		<dropSequence sequenceName="seqQuerydetail"/>
	</changeSet>
	
	<changeSet id="22" author="Vinay">
		<createTable tableName="seqQuerydetail">
			<column name="SeqNo" type="bigint"/>
		</createTable>
	</changeSet>
	 <changeSet id="23" author="Vinay">
		<sql>
			delete from errordetails where code='QRYMGMT1';
			Insert into ERRORDETAILS values ('QRYMGMT1','EN','E','Please close if any query is open or resolve from this {0}.','test','Approved',null,null,null,null,null,0,null,1000,3);
		</sql>
	</changeSet>
	<changeSet id="24" author="Umarohini">
		<comment>Add marginDeviation column as null in customers.</comment>
		<addColumn tableName="customers">
			<column name="marginDeviation" type="boolean"/>
		</addColumn>
	</changeSet>
	<changeSet id="25" author="Umarohini">
		<comment>Add marginDeviation column as null in customers_temp.</comment>
		<addColumn tableName="customers_temp">
			<column name="marginDeviation" type="boolean"/>
		</addColumn>
	</changeSet>	
	
	<changeSet id="26" author="Umarohini">
		<createView viewName="customers_view" replaceIfExists="true">
			SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.dealername AS lovdesccustro1name,
    t15.dealercity AS lovdesccustro1city,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    t1.subcategory,
    t1.casteid,
    t1.religionid,
    t32.castecode,
    t32.castedesc,
    t33.religioncode,
    t33.religiondesc,
    COALESCE((t34.roledesc), ${add.schema}fn_get_roledesc((t1.nextrolecode))) AS lovdescrequeststage,
	t1.marginDeviation
   FROM ((((((((((((((((((((((((((((((((customers_temp t1
     LEFT JOIN rmtcusttypes t2 ON ((t1.custtypecode = t2.custtypecode)))
     LEFT JOIN bmtmaritalstatuscodes t3 ON ((t1.custmaritalsts = t3.maritalstscode)))
     LEFT JOIN bmtempstscodes t4 ON ((t1.custempsts = t4.empstscode)))
     LEFT JOIN bmtcuststatuscodes t6 ON ((t1.custsts = t6.custstscode)))
     LEFT JOIN bmtindustries t7 ON ((t1.custindustry = t7.industrycode)))
     LEFT JOIN bmtsectors t8 ON ((t1.custsector = t8.sectorcode)))
     LEFT JOIN bmtsubsectors t9 ON (((t1.custsector = t9.sectorcode) AND (t1.custsubsector = t9.subsectorcode))))
     LEFT JOIN bmtprofessions t10 ON ((t1.custprofession = t10.professioncode)))
     LEFT JOIN bmtcountries t11 ON ((t1.custcob = t11.countrycode)))
     LEFT JOIN bmtnationalitycodes t12 ON ((t1.custnationality = t12.nationalitycode)))
     LEFT JOIN bmtgenders t13 ON ((t1.custgendercode = t13.gendercode)))
     LEFT JOIN bmtdepartments t14 ON ((t1.custdsadept = t14.deptcode)))
     LEFT JOIN amtvehicledealer t15 ON ((t1.custro1 = t15.dealerid)))
     LEFT JOIN bmtgrpstatuscodes t16 ON ((t1.custgroupsts = t16.grpstscode)))
     LEFT JOIN rmtbranches t17 ON ((t1.custdftbranch = t17.branchcode)))
     LEFT JOIN bmtcustcategories t18 ON ((t1.custctgcode = t18.custctgcode)))
     LEFT JOIN bmtsalutations t19 ON ((t1.custsalutationcode = t19.salutationcode)))
     LEFT JOIN bmtsegments t20 ON ((t1.custsegment = t20.segmentcode)))
     LEFT JOIN bmtcountries t21 ON ((t1.custparentcountry = t21.countrycode)))
     LEFT JOIN bmtcountries t22 ON ((t1.custresdcountry = t22.countrycode)))
     LEFT JOIN bmtcountries t23 ON ((t1.custriskcountry = t23.countrycode)))
     LEFT JOIN relationshipofficers t24 ON ((t1.custro2 = t24.rofficercode)))
     LEFT JOIN bmtblacklistrsncodes t25 ON ((t1.custblrsncode = t25.blrsncode)))
     LEFT JOIN bmtrejectcodes t26 ON (((t1.custrejectedrsn) = (t26.rejectcode))))
     LEFT JOIN customergroups t27 ON ((t1.custgroupid = t27.custgrpid)))
     LEFT JOIN bmtsubsegments t28 ON ((t1.custsubsegment = t28.subsegmentcode)))
     LEFT JOIN bmtlanguage t29 ON ((t1.custlng = t29.lngcode)))
     LEFT JOIN bmtdispatchmodes t30 ON ((t1.custstmtdispatchmode = t30.dispatchmodecode)))
     LEFT JOIN targetdetails t31 ON ((t1.custaddlvar82 = t31.targetcode)))
     LEFT JOIN secroles t34 ON ((t1.nextrolecode = t34.rolecd)))
     LEFT JOIN caste t32 ON ((t1.casteid = t32.casteid)))
     LEFT JOIN religion t33 ON ((t1.religionid = t33.religionid)))
UNION ALL
 SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.dealername AS lovdesccustro1name,
    t15.dealercity AS lovdesccustro1city,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    t1.subcategory,
    t1.casteid,
    t1.religionid,
    t32.castecode,
    t32.castedesc,
    t33.religioncode,
    t33.religiondesc,
    COALESCE((t34.roledesc), ${add.schema}fn_get_roledesc((t1.nextrolecode))) AS lovdescrequeststage,
	t1.marginDeviation
   FROM ((((((((((((((((((((((((((((((((customers t1
     LEFT JOIN rmtcusttypes t2 ON ((t1.custtypecode = t2.custtypecode)))
     LEFT JOIN bmtmaritalstatuscodes t3 ON ((t1.custmaritalsts = t3.maritalstscode)))
     LEFT JOIN bmtempstscodes t4 ON ((t1.custempsts = t4.empstscode)))
     LEFT JOIN bmtcuststatuscodes t6 ON ((t1.custsts = t6.custstscode)))
     LEFT JOIN bmtindustries t7 ON ((t1.custindustry = t7.industrycode)))
     LEFT JOIN bmtsectors t8 ON ((t1.custsector = t8.sectorcode)))
     LEFT JOIN bmtsubsectors t9 ON (((t1.custsector = t9.sectorcode) AND (t1.custsubsector = t9.subsectorcode))))
     LEFT JOIN bmtprofessions t10 ON ((t1.custprofession = t10.professioncode)))
     LEFT JOIN bmtcountries t11 ON ((t1.custcob = t11.countrycode)))
     LEFT JOIN bmtnationalitycodes t12 ON ((t1.custnationality = t12.nationalitycode)))
     LEFT JOIN bmtgenders t13 ON ((t1.custgendercode = t13.gendercode)))
     LEFT JOIN bmtdepartments t14 ON ((t1.custdsadept = t14.deptcode)))
     LEFT JOIN amtvehicledealer t15 ON ((t1.custro1 = t15.dealerid)))
     LEFT JOIN bmtgrpstatuscodes t16 ON ((t1.custgroupsts = t16.grpstscode)))
     LEFT JOIN rmtbranches t17 ON ((t1.custdftbranch = t17.branchcode)))
     LEFT JOIN bmtcustcategories t18 ON ((t1.custctgcode = t18.custctgcode)))
     LEFT JOIN bmtsalutations t19 ON ((t1.custsalutationcode = t19.salutationcode)))
     LEFT JOIN bmtsegments t20 ON ((t1.custsegment = t20.segmentcode)))
     LEFT JOIN bmtcountries t21 ON ((t1.custparentcountry = t21.countrycode)))
     LEFT JOIN bmtcountries t22 ON ((t1.custresdcountry = t22.countrycode)))
     LEFT JOIN bmtcountries t23 ON ((t1.custriskcountry = t23.countrycode)))
     LEFT JOIN relationshipofficers t24 ON ((t1.custro2 = t24.rofficercode)))
     LEFT JOIN bmtblacklistrsncodes t25 ON ((t1.custblrsncode = t25.blrsncode)))
     LEFT JOIN bmtrejectcodes t26 ON (((t1.custrejectedrsn) = (t26.rejectcode))))
     LEFT JOIN customergroups t27 ON ((t1.custgroupid = t27.custgrpid)))
     LEFT JOIN bmtsubsegments t28 ON ((t1.custsubsegment = t28.subsegmentcode)))
     LEFT JOIN bmtlanguage t29 ON ((t1.custlng = t29.lngcode)))
     LEFT JOIN bmtdispatchmodes t30 ON ((t1.custstmtdispatchmode = t30.dispatchmodecode)))
     LEFT JOIN targetdetails t31 ON ((t1.custaddlvar82 = t31.targetcode)))
     LEFT JOIN secroles t34 ON ((t1.nextrolecode = t34.rolecd)))
     LEFT JOIN caste t32 ON ((t1.casteid = t32.casteid)))
     LEFT JOIN religion t33 ON ((t1.religionid = t33.religionid)))
  WHERE (NOT (EXISTS ( SELECT 1 AS expr1
           FROM customers_temp
          WHERE (customers_temp.custid = t1.custid))))
		</createView>
		</changeSet>
		
		<changeSet  author="umarohini" id="28">
		<createView replaceIfExists="true" viewName="customers_tview">
		 SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.dealername AS lovdesccustro1name,
    t15.dealercity AS lovdesccustro1city,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custrelation,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    t1.subcategory,
    t1.casteid,
    t1.religionid,
    t32.castecode,
    t32.castedesc,
    t33.religioncode,
    t33.religiondesc,
    COALESCE((t34.roledesc), ${add.schema}fn_get_roledesc((t1.nextrolecode))) AS lovdescrequeststage,
    t1.marginDeviation
   FROM ((((((((((((((((((((((((((((((((customers_temp t1
     LEFT JOIN rmtcusttypes t2 ON ((t1.custtypecode = t2.custtypecode)))
     LEFT JOIN bmtmaritalstatuscodes t3 ON ((t1.custmaritalsts = t3.maritalstscode)))
     LEFT JOIN bmtempstscodes t4 ON ((t1.custempsts = t4.empstscode)))
     LEFT JOIN bmtcuststatuscodes t6 ON ((t1.custsts = t6.custstscode)))
     LEFT JOIN bmtindustries t7 ON ((t1.custindustry = t7.industrycode)))
     LEFT JOIN bmtsectors t8 ON ((t1.custsector = t8.sectorcode)))
     LEFT JOIN bmtsubsectors t9 ON (((t1.custsector = t9.sectorcode) AND (t1.custsubsector = t9.subsectorcode))))
     LEFT JOIN bmtprofessions t10 ON ((t1.custprofession = t10.professioncode)))
     LEFT JOIN bmtcountries t11 ON ((t1.custcob = t11.countrycode)))
     LEFT JOIN bmtnationalitycodes t12 ON ((t1.custnationality = t12.nationalitycode)))
     LEFT JOIN bmtgenders t13 ON ((t1.custgendercode = t13.gendercode)))
     LEFT JOIN bmtdepartments t14 ON ((t1.custdsadept = t14.deptcode)))
     LEFT JOIN amtvehicledealer t15 ON ((t1.custro1 = t15.dealerid)))
     LEFT JOIN bmtgrpstatuscodes t16 ON ((t1.custgroupsts = t16.grpstscode)))
     LEFT JOIN rmtbranches t17 ON ((t1.custdftbranch = t17.branchcode)))
     LEFT JOIN bmtcustcategories t18 ON ((t1.custctgcode = t18.custctgcode)))
     LEFT JOIN bmtsalutations t19 ON ((t1.custsalutationcode = t19.salutationcode)))
     LEFT JOIN bmtsegments t20 ON ((t1.custsegment = t20.segmentcode)))
     LEFT JOIN bmtcountries t21 ON ((t1.custparentcountry = t21.countrycode)))
     LEFT JOIN bmtcountries t22 ON ((t1.custresdcountry = t22.countrycode)))
     LEFT JOIN bmtcountries t23 ON ((t1.custriskcountry = t23.countrycode)))
     LEFT JOIN relationshipofficers t24 ON ((t1.custro2 = t24.rofficercode)))
     LEFT JOIN bmtblacklistrsncodes t25 ON ((t1.custblrsncode = t25.blrsncode)))
     LEFT JOIN bmtrejectcodes t26 ON (((t1.custrejectedrsn) = (t26.rejectcode))))
     LEFT JOIN customergroups t27 ON ((t1.custgroupid = t27.custgrpid)))
     LEFT JOIN bmtsubsegments t28 ON ((t1.custsubsegment = t28.subsegmentcode)))
     LEFT JOIN bmtlanguage t29 ON ((t1.custlng = t29.lngcode)))
     LEFT JOIN bmtdispatchmodes t30 ON ((t1.custstmtdispatchmode = t30.dispatchmodecode)))
     LEFT JOIN targetdetails t31 ON ((t1.custaddlvar82 = t31.targetcode)))
     LEFT JOIN caste t32 ON ((t1.casteid = t32.casteid)))
     LEFT JOIN religion t33 ON ((t1.religionid = t33.religionid)))
     LEFT JOIN secroles t34 ON ((t1.nextrolecode = t34.rolecd)))
</createView>
	</changeSet>

	<changeSet  author="umarohini" id="29">
		<createView replaceIfExists="true" viewName="customers_aview">
 	 SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.version,
    t1.custsourceid,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.dealername AS lovdesccustro1name,
    t15.dealercity AS lovdesccustro1city,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    t1.subcategory,
    t1.casteid,
    t1.religionid,
    t32.castecode,
    t32.castedesc,
    t33.religioncode,
    t33.religiondesc,
    COALESCE((t34.roledesc), ${add.schema}fn_get_roledesc((t1.nextrolecode))) AS lovdescrequeststage,
    t1.marginDeviation
   FROM ((((((((((((((((((((((((((((((((customers t1
     LEFT JOIN rmtcusttypes t2 ON ((t1.custtypecode = t2.custtypecode)))
     LEFT JOIN bmtmaritalstatuscodes t3 ON ((t1.custmaritalsts = t3.maritalstscode)))
     LEFT JOIN bmtempstscodes t4 ON ((t1.custempsts = t4.empstscode)))
     LEFT JOIN bmtcuststatuscodes t6 ON ((t1.custsts = t6.custstscode)))
     LEFT JOIN bmtindustries t7 ON ((t1.custindustry = t7.industrycode)))
     LEFT JOIN bmtsectors t8 ON ((t1.custsector = t8.sectorcode)))
     LEFT JOIN bmtsubsectors t9 ON (((t1.custsector = t9.sectorcode) AND (t1.custsubsector = t9.subsectorcode))))
     LEFT JOIN bmtprofessions t10 ON ((t1.custprofession = t10.professioncode)))
     LEFT JOIN bmtcountries t11 ON ((t1.custcob = t11.countrycode)))
     LEFT JOIN bmtnationalitycodes t12 ON ((t1.custnationality = t12.nationalitycode)))
     LEFT JOIN bmtgenders t13 ON ((t1.custgendercode = t13.gendercode)))
     LEFT JOIN bmtdepartments t14 ON ((t1.custdsadept = t14.deptcode)))
     LEFT JOIN amtvehicledealer t15 ON ((t1.custro1 = t15.dealerid)))
     LEFT JOIN bmtgrpstatuscodes t16 ON ((t1.custgroupsts = t16.grpstscode)))
     LEFT JOIN rmtbranches t17 ON ((t1.custdftbranch = t17.branchcode)))
     LEFT JOIN bmtcustcategories t18 ON ((t1.custctgcode = t18.custctgcode)))
     LEFT JOIN bmtsalutations t19 ON ((t1.custsalutationcode = t19.salutationcode)))
     LEFT JOIN bmtsegments t20 ON ((t1.custsegment = t20.segmentcode)))
     LEFT JOIN bmtcountries t21 ON ((t1.custparentcountry = t21.countrycode)))
     LEFT JOIN bmtcountries t22 ON ((t1.custresdcountry = t22.countrycode)))
     LEFT JOIN bmtcountries t23 ON ((t1.custriskcountry = t23.countrycode)))
     LEFT JOIN relationshipofficers t24 ON ((t1.custro2 = t24.rofficercode)))
     LEFT JOIN bmtblacklistrsncodes t25 ON ((t1.custblrsncode = t25.blrsncode)))
     LEFT JOIN bmtrejectcodes t26 ON (((t1.custrejectedrsn) = (t26.rejectcode))))
     LEFT JOIN customergroups t27 ON ((t1.custgroupid = t27.custgrpid)))
     LEFT JOIN bmtsubsegments t28 ON ((t1.custsubsegment = t28.subsegmentcode)))
     LEFT JOIN bmtlanguage t29 ON ((t1.custlng = t29.lngcode)))
     LEFT JOIN bmtdispatchmodes t30 ON ((t1.custstmtdispatchmode = t30.dispatchmodecode)))
     LEFT JOIN targetdetails t31 ON ((t1.custaddlvar82 = t31.targetcode)))
     LEFT JOIN caste t32 ON ((t1.casteid = t32.casteid)))
     LEFT JOIN religion t33 ON ((t1.religionid = t33.religionid)))
     LEFT JOIN secroles t34 ON ((t1.nextrolecode = t34.rolecd)))
		</createView>
	</changeSet>
	<changeSet  author="umarohini" id="30">
		<createView replaceIfExists="true" viewName="customers_aeview">
 	 		 SELECT t1.custid,
		    t1.custcif,
		    t1.custcorebank,
		    t1.custctgcode,
		    t1.custtypecode,
		    t1.custshrtname,
		    t1.custfname,
		    t1.custlname,
		    t1.custdob,
		    t1.custnationality,
		    t1.custsector,
		    t1.custsubsector,
		    t2.phonenumber,
		    t2.phoneareacode,
		    t2.phonecountrycode,
		    t1.custcrcpr,
		    t1.custpassportno,
		    t3.custemail AS emailid,
		    t1.custaddlvar82,
		    t4.custtypedesc AS lovdesccusttypecodename,
		    t1.custbaseccy,
		    t4.custtypectg AS lovdesccustctgtype,
		    t5.custctgdesc AS lovdesccustctgcodename,
		    t6.custstsdescription AS lovdesccuststsname,
		    t1.custdftbranch,
		    t7.branchdesc AS lovdesccustdftbranchname,
		    t1.subcategory,
		    t1.casteid,
		    t1.religionid,
		    t8.castecode,
		    t8.castedesc,
		    t9.religioncode,
		    t9.religiondesc,
    COALESCE((t32.roledesc), ${add.schema}fn_get_roledesc((t1.nextrolecode))) AS lovdescrequeststage,
    t1.marginDeviation
   FROM (((((((((customers t1
     LEFT JOIN customerphonenumbers t2 ON (((t1.custid = t2.phonecustid) AND (t2.phonetypepriority = 5))))
     LEFT JOIN customeremails t3 ON (((t1.custid = t3.custid) AND (t3.custemailtypecode = 'OFFICE'))))
     LEFT JOIN rmtcusttypes t4 ON ((t1.custtypecode = t4.custtypecode)))
     LEFT JOIN bmtcustcategories t5 ON ((t1.custctgcode = t5.custctgcode)))
     LEFT JOIN bmtcuststatuscodes t6 ON ((t1.custsts = t6.custstscode)))
     LEFT JOIN rmtbranches t7 ON ((t1.custdftbranch = t7.branchcode)))
     LEFT JOIN caste t8 ON ((t1.casteid = t8.casteid)))
     LEFT JOIN religion t9 ON ((t1.religionid = t9.religionid)))
     LEFT JOIN secroles t32 ON ((t1.nextrolecode = t32.rolecd)))
		</createView>
	</changeSet>
<changeSet  author="umarohini" id="31">
		<createView replaceIfExists="true" viewName="customers_lview">
 	 		SELECT c.custid,
		    c.custcif,
		    c.custcorebank,
		    c.custctgcode,
		    c.custtypecode,
		    c.custshrtname,
		    c.custdftbranch,
		    c.recordstatus,
		    c.rolecode,
		    c.nextrolecode,
		    c.recordtype,
		    ct.custtypedesc AS lovdesccusttypecodename,
		    t1.custctgdesc AS lovdesccustctgcodename,
		    c.subcategory,
		    c.casteid,
		    c.religionid,
		    t2.castecode,
		    t2.castedesc,
		    t3.religioncode,
		    t3.religiondesc,
		    COALESCE((t4.roledesc), ${add.schema}fn_get_roledesc((c.nextrolecode))) AS lovdescrequeststage,
    c.marginDeviation
   FROM (((((customers_temp c
     LEFT JOIN rmtcusttypes ct ON ((c.custtypecode = ct.custtypecode)))
     LEFT JOIN bmtcustcategories t1 ON ((c.custctgcode = t1.custctgcode)))
     LEFT JOIN secroles t4 ON ((c.nextrolecode = t4.rolecd)))
     LEFT JOIN caste t2 ON ((c.casteid = t2.casteid)))
     LEFT JOIN religion t3 ON ((c.religionid = t3.religionid)))
UNION ALL
 SELECT c.custid,
    c.custcif,
    c.custcorebank,
    c.custctgcode,
    c.custtypecode,
    c.custshrtname,
    c.custdftbranch,
    c.recordstatus,
    c.rolecode,
    c.nextrolecode,
    c.recordtype,
    ct.custtypedesc AS lovdesccusttypecodename,
    t1.custctgdesc AS lovdesccustctgcodename,
    c.subcategory,
    c.casteid,
    c.religionid,
    t2.castecode,
    t2.castedesc,
    t3.religioncode,
    t3.religiondesc,
    COALESCE((t4.roledesc), ${add.schema}fn_get_roledesc((c.nextrolecode))) AS lovdescrequeststage,
    c.marginDeviation
   FROM (((((customers c
     LEFT JOIN rmtcusttypes ct ON ((c.custtypecode = ct.custtypecode)))
     LEFT JOIN bmtcustcategories t1 ON ((c.custctgcode = t1.custctgcode)))
     LEFT JOIN secroles t4 ON ((c.nextrolecode = t4.rolecd)))
     LEFT JOIN caste t2 ON ((c.casteid = t2.casteid)))
     LEFT JOIN religion t3 ON ((c.religionid = t3.religionid)))
  WHERE (NOT (c.custid IN ( SELECT customers_temp.custid
           FROM customers_temp
          WHERE (customers_temp.custid = c.custid))))
		</createView>
</changeSet>
<changeSet  author="Umarohini" id="32">
<sql>
update Customers set marginDeviation=0;	
update customers_temp set marginDeviation=0;	
</sql>
</changeSet>

<changeSet id="Durgaprasad G" author="33">
	<modifyDataType tableName="PRESENTMENT_REQ_DETAILS_TEMP" columnName="UMRN_NO" newDataType="VARCHAR(50)"/>
	<modifyDataType tableName="PRESENTMENT_REQ_DETAILS" columnName="UMRN_NO" newDataType="VARCHAR(50)"/>
</changeSet>
<changeSet id="34" author="vijaykumar.l">
<sql>
	Delete from RBFIELDDETAILS where RBMODULE = 'SCORES' and RBEVENT = 'RSCORE' and RbFldName = 'Total_Co_Applicants_Income';
	Delete from RBFIELDDETAILS where RBMODULE = 'SCORES' and RBEVENT = 'RSCORE' and RbFldName = 'Total_Co_Applicants_Expense';
    Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
	('SCORES','RSCORE','Total_Co_Applicants_Income','  Total CoApplicants Income','decimal',18,'1','1',null,'static,calvalue',null);
	Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
	('SCORES','RSCORE','Total_Co_Applicants_Expense',' Total CoApplicants Expense','decimal',18,'1','1',null,'static,calvalue',null);
</sql>
</changeSet>
<changeSet id="35.1" author="madhubabu.p">
	<createView viewName="fincovenanttype_view" replaceIfExists="true">
SELECT t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc AS covenanttypedesc,
    t5.code AS categorycode,
    t4.roledesc AS mandroledesc,
    t1.receivabledate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd AS pddFlag,
    t3.otc AS otcFlag
   FROM fincovenanttype_temp t1
     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
     LEFT JOIN documentcategory t5 ON t5.id = t3.categoryid
     LEFT JOIN secroles t4 ON t4.rolecd = t1.mandrole
UNION ALL
 SELECT t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc AS covenanttypedesc,
    t5.code AS categorycode,
    t4.roledesc AS mandroledesc,
    t1.receivabledate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd AS pddFlag,
    t3.otc AS otcFlag
   FROM fincovenanttype t1
     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
     LEFT JOIN documentcategory t5 ON t5.id = t3.categoryid
     LEFT JOIN secroles t4 ON t4.rolecd = t1.mandrole
  WHERE NOT (EXISTS ( SELECT 1
           FROM fincovenanttype_temp
          WHERE fincovenanttype_temp.finreference = t1.finreference AND fincovenanttype_temp.covenanttype = t1.covenanttype))
			</createView>
</changeSet>
<changeSet id="36.1" author="madhubabu.p">
	<createView viewName="fincovenanttype_aview" replaceIfExists="true">
SELECT t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc AS covenanttypedesc,
    t5.code AS categorycode,
    t4.roledesc AS mandroledesc,
    t1.receivabledate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd AS pddFlag,
    t3.otc AS otcFlag
   FROM fincovenanttype t1
     JOIN financemain t2 ON t2.finreference = t1.finreference
     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
     LEFT JOIN documentcategory t5 ON t5.id = t3.categoryid
     JOIN secroles t4 ON t4.rolecd = t1.mandrole
			</createView>
</changeSet>
<changeSet id="37.1" author="madhubabu.p">
	<createView viewName="fincovenanttype_eaview" replaceIfExists="true">
SELECT t.finreference,
    t.custid,
    t.covenanttype,
    t.description,
    t.mandrole,
    t.alwwaiver,
    t.alwpostpone,
    t.alwotc,
    t.postponedays,
    t.covenanttypedesc,
    t.categorycode,
    t.receivabledate,
    t.version,
    t.lastmntby,
    t.lastmnton,
    t.recordstatus,
    t.rolecode,
    t.nextrolecode,
    t.taskid,
    t.nexttaskid,
    t.recordtype,
    t.workflowid,
        CASE
            WHEN t.docreceiveddate IS NULL THEN cd.lastmnton
            ELSE t.docreceiveddate
        END AS docreceiveddate,
     t.pddFlag,
     t.otcFlag
   FROM ( SELECT t1.finreference,
            t4.custid,
            t1.covenanttype,
            t1.description,
            t1.mandrole,
            t1.alwwaiver,
            t1.alwpostpone,
            t1.alwotc,
            t1.postponedays,
            t3.doctypedesc AS covenanttypedesc,
            t5.code AS categorycode,
            t1.receivabledate,
            t1.version,
            t1.lastmntby,
            t1.lastmnton,
            t1.recordstatus,
            t1.rolecode,
            t1.nextrolecode,
            t1.taskid,
            t1.nexttaskid,
            t1.recordtype,
            t1.workflowid,
            t7.docreceiveddate,
         	t3.pdd AS pddFlag,
    		t3.otc AS otcFlag
         
           FROM fincovenanttype t1
             JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
             LEFT JOIN documentcategory t5 ON t5.id = t3.categoryid
             JOIN financemain t4 ON t4.finreference = t1.finreference
             LEFT JOIN documentdetails t7 ON t7.referenceid = t1.finreference AND t1.covenanttype = t7.doccategory) t
     LEFT JOIN customerdocuments cd ON cd.custid = t.custid AND t.covenanttype = cd.custdoccategory
			</createView>
</changeSet>
<changeSet id="38.1" author="madhubabu.p">
	<createView viewName="fincovenanttype_eview" replaceIfExists="true">
SELECT t.finreference,
    t.custid,
    t.covenanttype,
    t.description,
    t.mandrole,
    t.alwwaiver,
    t.alwpostpone,
    t.alwotc,
    t.postponedays,
    t.covenanttypedesc,
    t.categorycode,
    t.receivabledate,
    t.version,
    t.lastmntby,
    t.lastmnton,
    t.recordstatus,
    t.rolecode,
    t.nextrolecode,
    t.taskid,
    t.nexttaskid,
    t.recordtype,
    t.workflowid,
        CASE
            WHEN t.docreceiveddate IS NULL THEN cd.lastmnton
            ELSE t.docreceiveddate
        END AS docreceiveddate,
     t.pddFlag,
     t.otcFlag
   FROM ( SELECT t1.finreference,
            t4.custid,
            t1.covenanttype,
            t1.description,
            t1.mandrole,
            t1.alwwaiver,
            t1.alwpostpone,
            t1.postponedays,
            t1.alwotc,
            t3.doctypedesc AS covenanttypedesc,
            t5.code AS categorycode,
            t1.receivabledate,
            t1.version,
            t1.lastmntby,
            t1.lastmnton,
            t1.recordstatus,
            t1.rolecode,
            t1.nextrolecode,
            t1.taskid,
            t1.nexttaskid,
            t1.recordtype,
            t1.workflowid,
            t7.docreceiveddate,
         	t3.pdd AS pddFlag,
    		t3.otc AS otcFlag
           FROM fincovenanttype_temp t1
             JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
             LEFT JOIN documentcategory t5 ON t5.id = t3.categoryid
             JOIN financemain t4 ON t4.finreference = t1.finreference
             LEFT JOIN documentdetails t7 ON t7.referenceid = t1.finreference AND t1.covenanttype = t7.doccategory
        UNION ALL
         SELECT t1.finreference,
            t4.custid,
            t1.covenanttype,
            t1.description,
            t1.mandrole,
            t1.alwwaiver,
            t1.alwpostpone,
            t1.postponedays,
            t1.alwotc,
            t3.doctypedesc AS covenanttypedesc,
            t5.code AS categorycode,
            t1.receivabledate,
            t1.version,
            t1.lastmntby,
            t1.lastmnton,
            t1.recordstatus,
            t1.rolecode,
            t1.nextrolecode,
            t1.taskid,
            t1.nexttaskid,
            t1.recordtype,
            t1.workflowid,
            t7.docreceiveddate,
            t3.pdd AS pddFlag,
    		t3.otc AS otcFlag
           FROM fincovenanttype t1
             JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
             LEFT JOIN documentcategory t5 ON t5.id = t3.categoryid
             JOIN financemain t4 ON t4.finreference = t1.finreference
             LEFT JOIN documentdetails t7 ON t7.referenceid = t1.finreference AND t1.covenanttype = t7.doccategory
          WHERE NOT (EXISTS ( SELECT 1
                   FROM fincovenanttype_temp
                  WHERE fincovenanttype_temp.finreference = t1.finreference AND fincovenanttype_temp.covenanttype = t1.covenanttype))) t
     LEFT JOIN customerdocuments cd ON cd.custid = t.custid AND t.covenanttype = cd.custdoccategory
			</createView>
</changeSet>
<changeSet id="39" author="madhubabu.p">
	<createView viewName="fincovenanttype_tview" replaceIfExists="true">
SELECT t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc AS covenanttypedesc,
    t5.code AS categorycode,
    t4.roledesc AS mandroledesc,
    t1.receivabledate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd AS pddFlag,
    t3.otc AS otcFlag
   FROM fincovenanttype_temp t1
     JOIN financemain_temp t2 ON t2.finreference = t1.finreference
     JOIN bmtdocumenttypes t3 ON t3.doctypecode = t1.covenanttype
     LEFT JOIN documentcategory t5 ON t5.id = t3.categoryid
     JOIN secroles t4 ON t4.rolecd = t1.mandrole
			</createView>
</changeSet>

<changeSet id="40" author="vinay">
		<addColumn tableName="finjointaccountdetails">
			<column name="IncludeIncome" type="boolean" />
		</addColumn>
	</changeSet>
<changeSet id="41" author="vinay">
		<addColumn tableName="finjointaccountdetails_temp">
			<column name="IncludeIncome" type="boolean" />
		</addColumn>
	</changeSet>
	
<changeSet id="42" author="vinay">
	<createView viewName="finjointaccountdetails_aview" replaceIfExists="true">
	SELECT t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
	t1.IncludeIncome,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname AS lovdesccifname,
    t3.custid
   FROM finjointaccountdetails t1
     JOIN secusers t2 ON t1.lastmntby = t2.usrid
     JOIN customers t3 ON t1.custcif = t3.custcif
	</createView>
</changeSet>
	
<changeSet id="43" author="vinay">
	<createView viewName="finjointaccountdetails_tview" replaceIfExists="true">
	SELECT t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
	t1.IncludeIncome,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname AS lovdesccifname,
    t3.custid
   FROM finjointaccountdetails_temp t1
     JOIN secusers t2 ON t1.lastmntby = t2.usrid
     JOIN customers t3 ON t1.custcif = t3.custcif
	</createView>
</changeSet>
	 
<changeSet id="44" author="vinay">
	<createView viewName="finjointaccountdetails_view" replaceIfExists="true">
	SELECT t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
	t1.includeIncome,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname AS lovdesccifname,
    t3.custid
   FROM finjointaccountdetails_temp t1
     JOIN secusers t2 ON t1.lastmntby = t2.usrid
     JOIN customers t3 ON t1.custcif = t3.custcif
UNION ALL
 SELECT t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
    t1.version,
	t1.includeIncome,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname AS lovdesccifname,
    t3.custid
   FROM finjointaccountdetails t1
     JOIN secusers t2 ON t1.lastmntby = t2.usrid
     JOIN customers t3 ON t1.custcif = t3.custcif
  WHERE NOT (EXISTS ( SELECT 1
           FROM finjointaccountdetails_temp
          WHERE finjointaccountdetails_temp.jointaccountid = t1.jointaccountid))
	</createView>
</changeSet>

<changeSet id="45" author="vinay">
<sql>
	update finjointaccountdetails set  IncludeIncome=0;
	update finjointaccountdetails_temp set  IncludeIncome=0;
</sql>
</changeSet>

<changeSet id="46" author="Vinay">
		<createTable tableName="STAGETABDETAIL">
			<column name="TABID" type="bigint">
				<constraints nullable="false" primaryKey="true" primaryKeyName="pk_stagetabdetail_tabid"/>
			</column>
			<column name="TABDESCRIPTION" type="VARCHAR(50)">
				<constraints nullable="false"/>
			</column>
			<column name="active" type="number(1,0)" defaultValue="1" />
		</createTable>
	</changeSet>
	
	<changeSet id="47" author="Vinay">
		<createView viewName="LMTFINREFDETAIL_TFSVIEW" replaceIfExists="true">
			SELECT     T1.FinRefDetailId, T1.FinType, T2.FinTypeDesc lovDescFinTypeDescName, T1.FinRefType, T1.FinRefId, T3.TabDescription lovDescNamelov, 
					  T1.IsActive, T1.ShowInStage, T1.MandInputInStage, T1.AllowInputInStage, T1.AllowDeviation, T1.AllowWaiver, T1.AllowPostpone, 
					  T1.AllowExpire, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
					  T3.TabId lovDescCodelov, T3.TabDescription lovDescRefDesc,  T1.OverRide,  T1.OverRideValue, T1.FinEvent,T1.AlertType
					  FROM         LMTFinRefDetail_Temp T1 LEFT JOIN
					  RMTFinanceTypes T2 ON T1.FinType = T2.FinType  INNER JOIN
					  STAGETABDETAIL T3 ON T1.FinRefId = T3.TabID AND T1.FinRefType = '15'
					  UNION ALL
  					  SELECT     T1.FinRefDetailId, T1.FinType, T2.FinTypeDesc lovDescFinTypeDescName, T1.FinRefType, T1.FinRefId, T3.TabDescription lovDescNamelov, 
					  T1.IsActive, T1.ShowInStage, T1.MandInputInStage, T1.AllowInputInStage, T1.AllowDeviation, T1.AllowWaiver, T1.AllowPostpone, 
					  T1.AllowExpire, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
					  T3.TabId lovDescCodelov, T3.TabDescription lovDescRefDesc,  T1.OverRide,  T1.OverRideValue, T1.FinEvent,T1.AlertType
                      FROM         LMTFinRefDetail T1 LEFT JOIN
					  RMTFinanceTypes T2 ON T1.FinType = T2.FinType  INNER JOIN
					  STAGETABDETAIL T3 ON T1.FinRefId = T3.TabID AND T1.FinRefType = '15'
					  WHERE     (NOT EXISTS
					  (SELECT     1 Expr1
					  FROM          LMTFinRefDetail_Temp
					  WHERE      (FinRefDetailId = T1.FinRefDetailId AND T1.FinRefType = '15')))
		</createView>
	</changeSet>
	<changeSet id="49" author="Vijaykumar.l">
	<sql>
	Delete from RBFIELDDETAILS where RBMODULE = 'ELGRULE' and RBEVENT = 'ELGRULE' and RbFldName = 'Total_Co_Applicants_Income';
	Delete from RBFIELDDETAILS where RBMODULE = 'ELGRULE' and RBEVENT = 'ELGRULE' and RbFldName = 'Total_Co_Applicants_Expense';
	Delete from RBFIELDDETAILS where RBMODULE = 'ELGRULE' and RBEVENT = 'ELGRULE' and RbFldName = 'CUSTOMER_MARGIN_DEVIATION';
	Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
	   ('ELGRULE','ELGRULE','Total_Co_Applicants_Income','  Total CoApplicants Income','decimal',18,'1','1','','static,calvalue','');
	Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
	   ('ELGRULE','ELGRULE','Total_Co_Applicants_Expense',' Total CoApplicants Expense','decimal',18,'1','1','','static,calvalue','');
	Insert into RBFIELDDETAILS (RBMODULE,RBEVENT,RBFLDNAME,RBFLDDESC,RBFLDTYPE,RBFLDLEN,RBFORCALFLDS,RBFORBLDFLDS,RBFLDTABLENAME,RBSTFLDS,MODULECODE) values 
	   ('ELGRULE','ELGRULE','CUSTOMER_MARGIN_DEVIATION','CUSTOMER MARGIN DEVIATION','nchar',2,'1','1','','static,global,dbvalue','');	
	  
 </sql>
	</changeSet>
	
	<changeSet id="50" author="Durgaprasad G">
			<sql>
				Delete from secrolegroups Where Roleid in (Select Roleid from Secroles Where Rolecd = 'ROLE_PRESENTMENTDETAILS'); 
				Delete from secgrouprights Where grpid in (Select grpid from secgroups Where grpcode = 'GROUP_PRESENTMENTDETAILS'); 
				Delete from secgroups Where grpcode = 'GROUP_PRESENTMENTDETAILS';
                Delete from secoperationroles Where Roleid in (Select Roleid from Secroles Where Rolecd = 'ROLE_PRESENTMENTDETAILS');
				Delete from Secroles Where Rolecd = 'ROLE_PRESENTMENTDETAILS';
				Delete from Secrights Where Rightname in ('menuItem_PresentmentDetail_PresentmentEnquiry',
				'menuItem_PresentmentDetail_PresentmentExtract',
				'menuItem_PresentmentDetail_PresentmentFileImport',
				'menuItem_PresentmentDetail_PresentmentBatchCreation',
				'menuItem_PresentmentDetail_PresentmentApprove');
				 
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
				UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);	
				 
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_PresentmentDetail_PresentmentEnquiry','MENU',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECGROUPS Values ((select max(grpid)+1 from SecGroups), 'PRESENTMENT_DETAIL_ENQUIRY', 'Presentment detail enquiry', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
						
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENT_DETAIL_ENQUIRY') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_PresentmentDetail_PresentmentEnquiry'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SECROLES SELECT (select MAX(RoleID)+1 from SecRoles),1,'PRESENTMENT_DETAIL_ENQUIRY','Presentment detail enquiry','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
						
				INSERT INTO SecRoleGroups Values((select max(rolegrpid)+1 from SecRoleGroups), (select grpid from SecGroups Where grpcode = 'PRESENTMENT_DETAIL_ENQUIRY'),(select roleid from SecRoles where RoleCd='PRESENTMENT_DETAIL_ENQUIRY'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
					
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_PresentmentDetail_PresentmentExtract','MENU',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECGROUPS Values ((select max(grpid)+1 from SecGroups), 'PRESENTMENT_DETAIL_EXTRACT', 'Presentment detail extraction', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
						
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENT_DETAIL_EXTRACT') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_PresentmentDetail_PresentmentExtract'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SecRoles SELECT (select MAX(RoleID)+1 from SecRoles),1,'PRESENTMENT_DETAIL_EXTRACT','Presentment detail extraction','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
						
				INSERT INTO SecRoleGroups Values((select max(rolegrpid)+1 from SecRoleGroups), (select grpid from SecGroups Where grpcode = 'PRESENTMENT_DETAIL_EXTRACT'),(select roleid from SecRoles where RoleCd='PRESENTMENT_DETAIL_EXTRACT'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_PresentmentDetail_PresentmentFileImport','MENU',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECGROUPS Values ((select max(grpid)+1 from SecGroups), 'PRESENTMENT_FILE_IMPORT', 'Presentment file Import', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
						
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENT_FILE_IMPORT') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_PresentmentDetail_PresentmentFileImport'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SecRoles SELECT (select MAX(RoleID)+1 from SecRoles),1,'PRESENTMENT_FILE_IMPORT','Presentment file import','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
						
				INSERT INTO SecRoleGroups Values((select max(rolegrpid)+1 from SecRoleGroups), (select grpid from SecGroups Where grpcode = 'PRESENTMENT_FILE_IMPORT'),(select roleid from SecRoles where RoleCd='PRESENTMENT_FILE_IMPORT'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
					
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_PresentmentDetail_PresentmentBatchCreation','MENU',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_PresentmentDetail_PresentmentApprove','MENU',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PresentmentDetailDialog_btnSave','PresentmentDetailDialog',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PresentmentDetailDialog_btnExclude','PresentmentDetailDialog',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PresentmentDetailDialog_btnInclude','PresentmentDetailDialog',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PresentmentDetailDialog_partnerBank','PresentmentDetailDialog',0,1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				
				INSERT INTO SECGROUPS Values ((select max(grpid)+1 from SecGroups), 'PRESENTMENTBATCH_MAKER', 'Presentment btach maker', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPS Values ((select max(grpid)+1 from SecGroups), 'PRESENTMENTBATCH_APPROVER', 'Presentment btach approver', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENTBATCH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PresentmentDetailDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENTBATCH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PresentmentDetailDialog_btnExclude'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENTBATCH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PresentmentDetailDialog_btnInclude'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENTBATCH_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PresentmentDetailDialog_partnerBank'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PRESENTMENTBATCH_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PresentmentDetailDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				INSERT INTO SecRoles SELECT (select MAX(RoleID)+1 from SecRoles),1,'PRESENTMENTBATCH_MAKER','Presentment btach maker','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
				INSERT INTO SecRoles SELECT (select MAX(RoleID)+1 from SecRoles),1,'PRESENTMENTBATCH_APPROVER','Presentment btach approver','',0,1000,null,' ',' ',null,' ',' ',' ',0 FROM SeqSecRoles WHERE 0=0;
						
				INSERT INTO SecRoleGroups Values((select max(rolegrpid)+1 from SecRoleGroups), (select grpid from SecGroups Where grpcode = 'PRESENTMENTBATCH_MAKER'),(select roleid from SecRoles where RoleCd='PRESENTMENTBATCH_MAKER'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				INSERT INTO SecRoleGroups Values((select max(rolegrpid)+1 from SecRoleGroups), (select grpid from SecGroups Where grpcode = 'PRESENTMENTBATCH_APPROVER'),(select roleid from SecRoles where RoleCd='PRESENTMENTBATCH_APPROVER'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
				UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);	
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);	
			</sql>
	</changeSet>
</databaseChangeLog>
	