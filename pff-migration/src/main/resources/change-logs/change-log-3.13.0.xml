<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	
	<changeSet id="01" author="Durgaprasad G">
	 <dropColumn tableName="INT_DSBIMPS_REQUEST" columnName="Channel"/>
	</changeSet>
	
	<changeSet id="02" author="Durgaprasad G">
	  <sql>
			DELETE from BMTAmountCodes Where allowedevent = 'PAYMTINS' AND amountCode = 'pi_payableAdvice';
			DELETE from BMTAmountCodes Where allowedevent = 'PAYMTINS' AND amountCode = 'pi_excessAmount';
			DELETE from BMTAmountCodes Where allowedevent = 'PAYMTINS' AND amountCode = 'pi_emiInAdvance';
			DELETE from BMTAmountCodes Where allowedevent = 'PAYMTINS' AND amountCode = 'pi_paymentAmount';
			
			Insert into BMTAmountCodes Values ('PAYMTINS','0','pi_payableAdvice', 'Payable advise Amount', '1', 1, 1005, Current_TimeStamp, 'Approved', null, null, null, null, null, 0 ); 
			Insert into BMTAmountCodes Values ('PAYMTINS','0','pi_excessAmount', 'Excess Amount', '1', 1, 1005,  Current_TimeStamp, 'Approved', null, null, null, null, null, 0 ); 
			Insert into BMTAmountCodes Values ('PAYMTINS','0','pi_emiInAdvance', 'EMI in Advance Amount', '1', 1, 1005, Current_TimeStamp, 'Approved', null, null, null, null, null, 0 ); 
			Insert into BMTAmountCodes Values ('PAYMTINS','0','pi_paymentAmount', 'Payment Amount', '1', 1, 1005, Current_TimeStamp, 'Approved', null, null, null, null, null, 0 ); 
	 </sql>
	</changeSet>
	
	<changeSet id="03" author="Durgaprasad G">
	 <sql>
	 Update DATA_ENGINE_TABLE set STATUSUPDATE = 'UPDATE DISBURSEMENT_REQUESTS SET BATCH_ID = :FILEID, STATUS = ''AC'' WHERE ID IN (:ID)
	 QUERY:UPDATE FINADVANCEPAYMENTS SET STATUS = ''AC'' WHERE PAYMENTID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')
	 QUERY:UPDATE PAYMENTINSTRUCTIONS SET STATUS = ''AC'' WHERE PAYMENTINSTRUCTIONID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')' WHERE CONFIGID = 
	 (Select id from DATA_ENGINE_CONFIG WHERE NAME = 'DISB_HDFC_EXPORT');
	 
	  Update DATA_ENGINE_TABLE set STATUSUPDATE = 'UPDATE DISBURSEMENT_REQUESTS SET BATCH_ID = :FILEID, STATUS = ''AC'' WHERE ID IN (:ID)
	 QUERY:UPDATE FINADVANCEPAYMENTS SET STATUS = ''AC'' WHERE PAYMENTID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')
	 QUERY:UPDATE PAYMENTINSTRUCTIONS SET STATUS = ''AC'' WHERE PAYMENTINSTRUCTIONID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')' WHERE CONFIGID = 
	 (Select id from DATA_ENGINE_CONFIG WHERE NAME = 'DISB_OTHER_NEFT_RTGS_EXPORT');
	
	  Update DATA_ENGINE_TABLE set STATUSUPDATE = 'UPDATE DISBURSEMENT_REQUESTS SET BATCH_ID = :FILEID, STATUS = ''AC'' WHERE ID IN (:ID)
	 QUERY:UPDATE FINADVANCEPAYMENTS SET STATUS = ''AC'' WHERE PAYMENTID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')
	 QUERY:UPDATE PAYMENTINSTRUCTIONS SET STATUS = ''AC'' WHERE PAYMENTINSTRUCTIONID IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')' WHERE CONFIGID = 
	 (Select id from DATA_ENGINE_CONFIG WHERE NAME = 'DISB_OTHER_CHEQUE_DD_EXPORT');
	 </sql>
	</changeSet>
	
	<changeSet id="04" author="Durgaprasad G">
	 <createView viewName="DE_DISBURSE_FILE_CONTROL_VIEW" replaceIfExists="true">
	  SELECT DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS, 
			PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, FA.PAYMENTTYPE
			FROM DATA_ENGINE_CONFIG DC
			INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
			INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
      		INNER JOIN FINADVANCEPAYMENTS FA ON FA.PAYMENTID = DR.DISBURSEMENT_ID
			INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
      WHERE NOT EXISTS (SELECT ID FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID = DS.ID)
	  UNION ALL
	  SELECT DISTINCT(DS.ID), DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME, DS.ENDTIME, DS.STATUS, 
			PB.ALWFILEDOWNLOAD,  PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, PI.PAYMENTTYPE
			FROM DATA_ENGINE_CONFIG DC
			INNER JOIN DATA_ENGINE_STATUS DS ON DS.NAME = DC.NAME 
			INNER JOIN DISBURSEMENT_REQUESTS DR ON DR.BATCH_ID =DS.ID
      		INNER JOIN PAYMENTINSTRUCTIONS PI ON PI.PAYMENTINSTRUCTIONID = DR.DISBURSEMENT_ID
			INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
      WHERE NOT EXISTS (SELECT ID FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID = DS.ID) ORDER BY ID DESC
	 </createView>
	</changeSet>
	
	<changeSet id="05" author="Durgaprasad G">
	 <createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			   SELECT   
			   FA. PAYMENTID,
			   FA.FINREFERENCE,
			   '' CHANNEL, 
			   CASE WHEN FA.PAYMENTTYPE = 'NEFT' THEN 'N' WHEN FA.PAYMENTTYPE = 'RTGS' THEN 'R' WHEN FA.PAYMENTTYPE = 'DD' THEN 'D' WHEN FA.PAYMENTTYPE = 'CHEQUE' THEN 'C' ELSE  FA.PAYMENTTYPE END  DISBURSEMENT_TYPE,
			   FA.AMTTOBERELEASED/CCY.CCYMINORCCYUNITS  AMTTOBERELEASED,
			   FA.DISBDATE,
               FA.LLDATE,
			   FA.PAYABLELOC,
			   FA.PRINTINGLOC,
			   CU.CUSTCIF,            
			   CU.CUSTSHRTNAME,     
			   '' AS CUSTOMER_MOBILE,
			   CE.CUSTEMAIL       CUSTOMER_EMAIL,
			   CS.CPPROVINCENAME  CUSTOMER_STATE,
			   CC.PCCITYNAME      CUSTOMER_CITY,
			   ''                 CUSTOMER_ADDRESS1,
			   ''                 CUSTOMER_ADDRESS2,
			   ''                 CUSTOMER_ADDRESS3,
			   ''                 CUSTOMER_ADDRESS4,
			   ''                 CUSTOMER_ADDRESS5,
              BD.BANKNAME BANKNAME,
              BB.BRANCHCODE,
              BB.BRANCHDESC BRANCHDESC,
			  PBD.CPPROVINCENAME  BENFICIARY_BRANCH_STATE,
			  PBD.PCCITYNAME      BENFICIARY_BRANCH_CITY,
			   BB.MICR             MICR_CODE,
			   BB.IFSC             IFSC_CODE,
			   FA.BENEFICIARYACCNO,
			   CASE WHEN FA.PAYMENTTYPE = 'CHEQUE' OR  FA.PAYMENTTYPE = 'DD' THEN FA.LIABILITYHOLDNAME ELSE FA.BENEFICIARYNAME END BENEFICIARYNAME,
			   FA.PHONECOUNTRYCODE||FA.PHONEAREACODE||FA.PHONENUMBER AS BENEFICIARY_MOBILE, 
			   BCE.CUSTEMAIL        BENFICIRY_EMAIL,
			   BRS.CPPROVINCENAME  BENFICIARY_STATE,
			   BRC.PCCITYNAME      BENFICIARY_CITY,
			   ''                  BENFICIARY_ADDRESS1,
			   ''                  BENFICIARY_ADDRESS2,
			   ''                  BENFICIARY_ADDRESS3,
			   ''                  BENFICIARY_ADDRESS4,
			   ''                  BENFICIARY_ADDRESS5,
			   ''				   PAYMENT_DETAIL1,
			   ''                  PAYMENT_DETAIL2,
			   ''                  PAYMENT_DETAIL3,
			   ''                  PAYMENT_DETAIL4,
			   ''                  PAYMENT_DETAIL5,
			   ''                  PAYMENT_DETAIL6,
			   ''                  PAYMENT_DETAIL7,     
			   FA.STATUS           STATUS,
			   FA.DESCRIPTION      REMARKS,
			     FA.PAYMENTTYPE      PAYMENTTYPE,
			     FM.FINTYPE,
			     PB.PARTNERBANKID,
			     PB.PARTNERBANKCODE,
			     FA.INPUTDATE,
			     PB.ALWFILEDOWNLOAD,
                PB.FILENAME,
			     FM.FINISACTIVE
			   FROM FINADVANCEPAYMENTS FA
			   INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = FA.FINREFERENCE
			   INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
			   INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = FA.DISBCCY
               INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
			   LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 3
			   LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
			   LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
			   LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE  
			   LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
			   LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
         	   LEFT JOIN  (select PB.PARTNERBANKID, PBD.BANKNAME, PBB.BRANCHDESC, PBBRC.PCCITYNAME, PBBRS.CPPROVINCENAME from PARTNERBANKS PB INNER JOIN BANKBRANCHES PBB ON PBB.BANKBRANCHID = PB.BANKBRANCHCODE INNER JOIN BMTBANKDETAIL PBD ON PBD.BANKCODE = PBB.BANKCODE LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE ) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
			   LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND BR.ACCNUMBER = FA.BENEFICIARYACCNO
			   LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
			   LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 3
			   LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID AND BRCA.CUSTADDRPRIORITY = 5
			   LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = BRCA.CUSTADDRCITY
			   LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			   WHERE STATUS='APPROVED' AND PAYMENTID NOT IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS)
			   
			   UNION ALL
			   
			   SELECT PI. PAYMENTINSTRUCTIONID PAYMENTID,
			   PH.FINREFERENCE,
			   PH.PAYMENTTYPE CHANNEL, 
			   CASE WHEN PI.PAYMENTTYPE = 'NEFT' THEN 'N' WHEN PI.PAYMENTTYPE = 'RTGS' THEN 'R' WHEN PI.PAYMENTTYPE = 'DD' THEN 'D' WHEN PI.PAYMENTTYPE = 'CHEQUE' THEN 'C' ELSE  PI.PAYMENTTYPE END  DISBURSEMENT_TYPE,
			   PI.PAYMENTAMOUNT/CCY.CCYMINORCCYUNITS  AMTTOBERELEASED,
			   PI.POSTDATE DISBDATE, 
			   PI.POSTDATE LLDATE, 
			   PI.PAYABLELOC, 
			   PI.PRINTINGLOC, 
			   CU.CUSTCIF,            
			   CU.CUSTSHRTNAME,     
			   '' AS CUSTOMER_MOBILE,
			   CE.CUSTEMAIL       CUSTOMER_EMAIL,
			   CS.CPPROVINCENAME  CUSTOMER_STATE,
			   CC.PCCITYNAME      CUSTOMER_CITY,
			   ''                 CUSTOMER_ADDRESS1,
			   ''                 CUSTOMER_ADDRESS2,
			   ''                 CUSTOMER_ADDRESS3,
			   ''                 CUSTOMER_ADDRESS4,
			   ''                 CUSTOMER_ADDRESS5,
			   BD.BANKNAME,
			   BB.BRANCHCODE,
			   BB.BRANCHDESC,
			   BBRS.CPPROVINCENAME  BENFICIARY_BRANCH_STATE,
			   BBRC.PCCITYNAME      BENFICIARY_BRANCH_CITY,
			   BB.MICR              MICR_CODE,
			   BB.IFSC              IFSC_CODE,
			   PI.ACCOUNTNO BENEFICIARYACCNO,
			   CASE WHEN PI.PAYMENTTYPE = 'CHEQUE' OR  PI.PAYMENTTYPE = 'DD' THEN PI.FAVOURNAME ELSE PI.ACCTHOLDERNAME END BENEFICIARYNAME,
			   PI.PHONECOUNTRYCODE||PI.PHONENUMBER AS BENEFICIARY_MOBILE,
			   BCE.CUSTEMAIL       BENFICIRY_EMAIL,
			   BRS.CPPROVINCENAME  BENFICIARY_STATE,
			   BRC.PCCITYNAME      BENFICIARY_CITY,
			   ''                  BENFICIARY_ADDRESS1,
			   ''                  BENFICIARY_ADDRESS2,
			   ''                  BENFICIARY_ADDRESS3,
			   ''                  BENFICIARY_ADDRESS4,
			   ''                  BENFICIARY_ADDRESS5,
			   ''				   PAYMENT_DETAIL1,
			   ''                  PAYMENT_DETAIL2,
			   ''                  PAYMENT_DETAIL3,
			   ''                  PAYMENT_DETAIL4,
			   ''                  PAYMENT_DETAIL5,
			   ''                  PAYMENT_DETAIL6,
			   ''                  PAYMENT_DETAIL7,     
			   PI.STATUS           STATUS, 
			   PI.REMARKS          REMARKS,
			   PI.PAYMENTTYPE      PAYMENTTYPE,
			   FM.FINTYPE,
			   PB.PARTNERBANKID,
			   PB.PARTNERBANKCODE,
			   PI.POSTDATE INPUTDATE, 
			   PB.ALWFILEDOWNLOAD,
			   PB.FILENAME,
			   FM.FINISACTIVE
			   FROM PAYMENTINSTRUCTIONS PI 
			   INNER JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
			   INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = PH.FINREFERENCE
			   INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
			   INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
			   INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
			   LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 3
			   LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
			   LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
			   LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
			   LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5  
			   LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
			   LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
			   LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY = BB.CITY
			   LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
			   LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID AND BR.ACCNUMBER = PI.ACCOUNTNO
			   LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
			   LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 3
			   LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID AND BRCA.CUSTADDRPRIORITY = 5
			   LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = BRCA.CUSTADDRCITY
			   LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			   WHERE PI.STATUS='APPROVED' AND PI.PAYMENTINSTRUCTIONID NOT IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS)
	 
	 
	 </createView>
	
	</changeSet>
	
	<changeSet id="06" author="Durgaprasad G">
	 <sql>
	  Update SECUSERS set authtype = 'DAO';
  	  Update SECUSERS_RTEMP set authtype = 'DAO';
  	  Update SECUSERS_TEMP set authtype = 'DAO';
	 </sql>
	</changeSet>
	
	<changeSet id="07" author="Durgaprasad G">
		 <modifyDataType tableName="SECUSERS" columnName="AUTHTYPE" newDataType="CHAR(4)"/>
		 <modifyDataType tableName="SECUSERS_RTEMP" columnName="AUTHTYPE" newDataType="CHAR(4)"/>
		 <modifyDataType tableName="SECUSERS_TEMP" columnName="AUTHTYPE" newDataType="CHAR(4)"/>
	</changeSet>
	
	<changeSet id="08" author="Durgaprasad G">
	 <dropNotNullConstraint tableName="SECUSERS" columnName="USRPWD"/>
	 <dropNotNullConstraint tableName="SECUSERS_RTEMP" columnName="USRPWD"/>
	 <dropNotNullConstraint tableName="SECUSERS_TEMP" columnName="USRPWD"/>
	</changeSet>
	
	<changeSet id="9" author="Siva">
		 <sql>
		 	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinanceManagement_FeeReceiptCancellation','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_FeeReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_FeeReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 						
		 </sql>
	</changeSet>
	
	<changeSet id="10" author="Siva">
		 <createView viewName="FinReceiptHeader_FCView" replaceIfExists="true">
		 	SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive, 
				 T2.ScheduleMethod, T2.ProfitDaysBasis PftDaysBasis, T1.WaviedAmt, T3.CustID, T1.TotFeeAmount
							FROM         FinReceiptHeader_Temp T1 INNER JOIN
				       FinanceMain_Temp T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
			UNION ALL
			SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive, 
				 T2.ScheduleMethod, T2.ProfitDaysBasis PftDaysBasis, T1.WaviedAmt, T3.CustID, T1.TotFeeAmount
							FROM         FinReceiptHeader T1 INNER JOIN
				       FinanceMain_Temp T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
               	WHERE     NOT EXISTS
				                          (SELECT     1
				                            FROM          FinReceiptHeader_TEMP 
				                            WHERE      ReceiptID = T1.ReceiptID)				
		 </createView>
	</changeSet>
<changeSet id="11" author="Irfan">
	<sql>	
		Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeDialog_gSTApplicable','AccountTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeDialog_hSNNumber','AccountTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeDialog_natureService','AccountTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeDialog_revChrgApplicable','AccountTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'AccountType_Maker'), (Select RightID from SecRights where RightName = 'AccountTypeDialog_gSTApplicable'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'AccountType_Maker'), (Select RightID from SecRights where RightName = 'AccountTypeDialog_hSNNumber'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'AccountType_Maker'), (Select RightID from SecRights where RightName = 'AccountTypeDialog_natureService'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'AccountType_Maker'), (Select RightID from SecRights where RightName = 'AccountTypeDialog_revChrgApplicable'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	</sql>
</changeSet>

<changeSet id="12" author="Irfan">
	<addColumn tableName="RMTACCOUNTTYPES">
		<column name="gSTApplicable" type="char(1)"/>
		<column name="hSNNumber" type="varchar(50)"/>
		<column name="natureService" type="varchar(50)"/>
		<column name="revChrgApplicable" type="char(1)"/>
	</addColumn>
	<addColumn tableName="RMTACCOUNTTYPES_TEMP">
		<column name="gSTApplicable" type="char(1)"/>
		<column name="hSNNumber" type="varchar(50)"/>
		<column name="natureService" type="varchar(50)"/>
		<column name="revChrgApplicable" type="char(1)"/>
	</addColumn>
</changeSet>


<changeSet id="13" author="Irfan">
	<createView viewName="RMTACCOUNTTYPES_VIEW" replaceIfExists="true">
	
	SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
			  T1.AcLmtCategory, T1.AcTypeIsActive,T1.ProfitCenterID,T1.CostCenterID, T1.GSTApplicable,  T1.HSNNumber, T1.NatureService, T1.RevChrgApplicable,T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
			 T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
			 T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes_Temp T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
											ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
											LEFT JOIN
											CostCenters T3 ON T1.CostCenterID = T3.CostCenterID 
			 UNION ALL
			SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
			T1.AcLmtCategory, T1.AcTypeIsActive, T1.ProfitCenterID,T1.CostCenterID, T1.GSTApplicable,  T1.HSNNumber, T1.NatureService, T1.RevChrgApplicable, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
			 T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
			 T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
											ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
											LEFT JOIN
											CostCenters T3 ON T1.CostCenterID = T3.CostCenterID 
			 WHERE     (NOT EXISTS
			 (SELECT     1 Expr1
			 FROM          RMTAccountTypes_Temp
			 WHERE      (AcType = T1.AcType)))
	
	</createView>

</changeSet>

<changeSet id="14" author="Irfan">
	<createView viewName="RMTACCOUNTTYPES_AVIEW" replaceIfExists="true">
		SELECT    T1.AcType, T1.AcTypeDesc, T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
		T1.AcLmtCategory, T1.AcTypeIsActive, T1.ProfitCenterID, T1.CostCenterID, T1.GSTApplicable,  T1.HSNNumber, T1.NatureService, T1.RevChrgApplicable, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
					 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
		       T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
		       T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
					 FROM         RMTAccountTypes T1 Left Join
											AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId 
											INNER JOIN
											ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
											LEFT JOIN
											CostCenters T3 ON T1.CostCenterID = T3.CostCenterID
	
	</createView>

</changeSet>
<changeSet id="15" author="Irfan">
	<sql>
		Update 	RMTAccountTypes set GSTApplicable=0 where  GSTApplicable is null;
		Update 	RMTAccountTypes set RevChrgApplicable=0 where  RevChrgApplicable is null;
		Update 	RMTAccountTypes_TEMP set GSTApplicable=0 where  GSTApplicable is null;
		Update 	RMTAccountTypes_TEMP set RevChrgApplicable=0 where  RevChrgApplicable is null;
	</sql>
</changeSet>
<changeSet id="16" author="Madhubabu">
	<createView viewName="FINANCEMAINTENANCE_VIEW" replaceIfExists="true">
		SELECT	T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt, T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision, T1.RepayRateBasis,
                   T1.ManualSchedule , T1.TakeOverFinance , T1.NextRolloverDate,
                   COALESCE(T5.RoleDesc,  FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		   T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF, T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
              T1.planEMIHAlw,T1.FinCurrAssetValue   , T1.CalTerms,T1.RateChgAnyDay
            FROM           FinanceMain_Temp T1 INNER JOIN
			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
 UNION ALL
SELECT      T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt,T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,  
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision,  T1.RepayRateBasis ,
                   T1.ManualSchedule , T1.TakeOverFinance  , T1.NextRolloverDate,
                    COALESCE(T5.RoleDesc,  FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		    T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF,  T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
		    T1.planEMIHAlw,T1.FinCurrAssetValue  , T1.CalTerms,T1.RateChgAnyDay
            FROM           FinanceMain T1 INNER JOIN
	    			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           FinanceMain_Temp
                            WHERE      (FinReference = T1.FinReference)))
	</createView>

</changeSet>
	<changeSet id="17" author="Vinay">
	<sql>
	UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);

INSERT INTO SecGroups SELECT (select (SeqNo+1) from SeqSecGroups), 'TAXDETAIL_VIEW', 'Allow to view TaxDetail', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;
INSERT INTO SecGroups SELECT (select (SeqNo+2) from SeqSecGroups), 'TAXDETAIL_MAKER', 'WF Maker for TaxDetail', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;
INSERT INTO SecGroups SELECT (select (SeqNo+3) from SeqSecGroups), 'TAXDETAIL_APPROVER', 'WF Approver for TaxDetail', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;

INSERT INTO SecRights SELECT (select (SeqNo+3) from SeqSecRights),0,'menuItem_applicationmaster_TaxDetail','MENU',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+4) from SeqSecRights),0,'menuItem_applicationmaster_TaxDetailEnquiry','MENU',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

INSERT INTO SecRights SELECT (select (SeqNo+5) from SeqSecRights),2,'button_TaxDetailList_PrintList','TaxDetailList',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+6) from SeqSecRights),2,'button_TaxDetailList_NewTaxDetail','TaxDetailList',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+7) from SeqSecRights),2,'button_TaxDetailDialog_btnNew','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+8) from SeqSecRights),2,'button_TaxDetailDialog_btnEdit','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+9) from SeqSecRights),2,'button_TaxDetailDialog_btnDelete','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10) from SeqSecRights),2,'button_TaxDetailDialog_btnSave','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+1) from SeqSecRights),3,'TaxDetailDialog_Id','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+2) from SeqSecRights),3,'TaxDetailDialog_Country','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+3) from SeqSecRights),3,'TaxDetailDialog_StateCode','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+4) from SeqSecRights),3,'TaxDetailDialog_EntityCode','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+5) from SeqSecRights),3,'TaxDetailDialog_TaxCode','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+6) from SeqSecRights),3,'TaxDetailDialog_AddressLine1','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+7) from SeqSecRights),3,'TaxDetailDialog_AddressLine2','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+8) from SeqSecRights),3,'TaxDetailDialog_AddressLine3','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+9) from SeqSecRights),3,'TaxDetailDialog_AddressLine4','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+10) from SeqSecRights),3,'TaxDetailDialog_PinCode','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select (SeqNo+10+11) from SeqSecRights),3,'TaxDetailDialog_CityCode','TaxDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights), (select (SeqNo+1) from SeqSecGroups), (select max(RightID) from SecRights WHERE RightName='menuCat_applicationmasterEnquiry'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+2) from SeqSecGroupRights), (select (SeqNo+1) from SeqSecGroups), (select (SeqNo+4) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+16) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select max(RightID) from SecRights WHERE RightName='menuCat_applicationmaster'),1,0,10000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+17) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+3) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+18) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+6) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+19) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+9) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+1) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+1) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+2) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+2) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+3) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+3) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+4) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+4) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+5) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+5) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+6) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+6) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+7) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+7) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+8) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+8) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+9) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+9) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+10) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+10) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+20+11) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+11) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+24+11) from SeqSecGroupRights), (select (SeqNo+3) from SeqSecGroups), (select max(RightID) from SecRights WHERE RightName='menuCat_applicationmaster'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+25+11) from SeqSecGroupRights), (select (SeqNo+3) from SeqSecGroups), (select (SeqNo+3) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select (SeqNo+26+11) from SeqSecGroupRights), (select (SeqNo+3) from SeqSecGroups), (select (SeqNo+10) from SeqSecRights),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecRoleGroups SELECT (select (SeqNo+1) from SeqSecRoleGroups), (select (SeqNo+2) from SeqSecGroups), (select roleid from SecRoles where RoleCd='MSTGRP1_MAKER'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRoleGroups WHERE 0=0;
INSERT INTO SecRoleGroups SELECT (select (SeqNo+2) from SeqSecRoleGroups), (select (SeqNo+3) from SeqSecGroups), (select roleid from SecRoles where RoleCd='MSTGRP1_APPROVER'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRoleGroups WHERE 0=0;

UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
	</sql>
	</changeSet>
	
	<changeSet id="18" author="Manoj.P">
		<createView viewName=" INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
		   SELECT M.MANDATEID, 
			BD.BANKSHORTCODE BANKCODE,
			BD.BANKNAME,
			case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
      case when LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
			CUST.CUSTCIF,
			CUST.CUSTSHRTNAME,
			FT.FINTYPEDESC FINTYPE ,
			FIN.FINREFERENCE ,
			(SELECT SUM(MAX(FSD.REPAYAMOUNT+FSD.FEESCHD)) FROM FINSCHEDULEDETAILS FSD INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE =FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID GROUP BY FM.FINREFERENCE)/CCYMINORCCYUNITS CUST_EMI,
			(SELECT SUM(MAX(FSD.REPAYAMOUNT+FSD.FEESCHD)) FROM FINSCHEDULEDETAILS FSD WHERE REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1 AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID = M.MANDATEID) GROUP BY FINREFERENCE)/CCYMINORCCYUNITS EMI,
			  CASE M.OPENMANDATE
			    WHEN 1
			    THEN 'New Open ECS'
			    ELSE 'No Open ECS'
			  END OPENMANDATE,
			M.ACCNUMBER,
			M.ACCTYPE,
			M.ACCHOLDERNAME,
			BB.MICR,
			(select MIN(SCHDATE) from FINSCHEDULEDETAILS where REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1 and FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
			(select MAX(SCHDATE) from FINSCHEDULEDETAILS where REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1 and FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) EMIENDDATE,
			 COALESCE (M.MAXLIMIT, 0)/CCYMINORCCYUNITS MAXLIMIT, 
      (SELECT SUM(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1 AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID) AND REPAYONSCHDATE =1
			  )/CCYMINORCCYUNITS DEBITAMOUNT,
			  M.STARTDATE,
			  M.EXPIRYDATE,
			  FIN.APPLICATIONNO,
			  M.MANDATETYPE,
			  M.STATUS,
			  M.INPUTDATE,
			  M.RECORDSTATUS,
			  M.RECORDTYPE,
        M.MANDATECCY,
			  COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS
			FROM MANDATES M
			INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
			INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE 
			INNER JOIN CUSTOMERS CUST   ON CUST.CUSTID = M.CUSTID
			  INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH 
			  LEFT OUTER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
			LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
			  LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH 
			LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE =FT.FINTYPE 
			WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN  (select MANDATEID FROM MANDATE_REQUESTS where status = 'AC' OR status = 'NEW')
		</createView>
	</changeSet>
</databaseChangeLog>