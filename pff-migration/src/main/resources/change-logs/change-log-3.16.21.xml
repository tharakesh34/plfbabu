<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	
	<changeSet author="Veeravenkata" id="1">
		<addColumn tableName="LimitDetails">
			<column name="NonRvlUtilised" type="decimal(21, 0)"/>
		</addColumn>
	</changeSet>
	
	<changeSet author="Veeravenkata" id="2">	
		<addColumn tableName="LimitDetails_Temp">
			<column name="NonRvlUtilised" type="decimal(21, 0)"/>
		</addColumn>
	</changeSet>
	
	<changeSet author="Veeravenkata" id="3">
		<createView viewName="LIMITDETAILS_AVIEW" replaceIfExists="true">
		
			SELECT     T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode, T3.GroupName,T5.LimitLine, T4.RuleCodeDesc  LimitLineDesc, COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving,T1.ExpiryDate, T1.LimitSanctioned,  
	                      T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq, T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
	                      T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
	                      T1.WorkflowId, T1.NonRvlUtilised
	                     
			FROM      LimitDetails  T1 INNER JOIN
	                     SecUsers  T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
	                     LimitStructureDetails  T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
	                     LimitGroup  T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
	                     Rules  T4 ON T5.LimitLine = T4.RuleCode and  RuleModule='LMTLINE'
						
		</createView>
	</changeSet>
		
	<changeSet author="Veeravenkata" id="4">
		<createView viewName="LIMITDETAILS_TVIEW" replaceIfExists="true">
		
			SELECT     T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode,  T3.GroupName, T5.LimitLine, T4.RuleCodeDesc  LimitLineDesc, COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving,T1.ExpiryDate, T1.LimitSanctioned,  
	                      T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq,T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
	                      T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
	                      T1.WorkflowId, T1.NonRvlUtilised
		   	
		   	FROM      LimitDetails_Temp  T1 INNER JOIN
	                     SecUsers  T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
	                     LimitStructureDetails  T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
	                     LimitGroup  T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
	                     Rules  T4 ON T5.LimitLine = T4.RuleCode and  RuleModule='LMTLINE'
						
		</createView>
	</changeSet>
	
	<changeSet author="Veeravenkata" id="5">
		<createView viewName="LIMITLINES_VIEW" replaceIfExists="true">
		
			Select 	T.DetailId, T.LimitHeaderId, T1.RuleCode,T1.RuleValue,T1.CustomerId,T1.CustomerGroup,T.LimitLine,R.SqlRule,R.RuleCodeDesc  LimitLineDesc,T.GroupCode, T.
					LimitStructureDetailsID,T.LimitChkMethod, T.ExpiryDate, T.LimitSanctioned,  T.ReservedLimit, T.UtilisedLimit,T.LimitCheck,COALESCE(T.Revolving,0)Revolving ,T1.LimitCcy  Currency,T.Version , T.
					CreatedBy,T.CreatedOn,T.LastMntBy, T.LastMntOn, T.RecordStatus, T.RoleCode, T.NextRoleCode, T.TaskId, T.NextTaskId, T.RecordType, T.WorkflowId, T.NonRvlUtilised 
			
			From 	LimitDetails_AView  T INNER JOIN
					LimitHeader  T1 ON T1.HeaderId=T.LimitHeaderId  Left Outer Join 
					Rules R ON T.LimitLine= R.RuleCode and RuleModule='LMTLINE' where  T1.Active=1
						
		</createView>
	</changeSet>
	
	<changeSet author="Veeravenkata" id="6">
		<createView viewName="LIMITDETAILS_VIEW" replaceIfExists="true">
		
			SELECT     T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode,  T3.GroupName, T5.LimitLine, T4.RuleCodeDesc  LimitLineDesc,COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving ,T1.ExpiryDate, T1.LimitSanctioned,  
	                      T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq, T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
	                      T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
	                      T1.WorkflowId, T1.NonRvlUtilised
			
			FROM       LimitDetails_Temp  T1 INNER JOIN
	                      SecUsers  T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
	                      LimitStructureDetails  T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
	                      LimitGroup  T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
	                      Rules  T4 ON T5.LimitLine = T4.RuleCode and  RuleModule='LMTLINE'
	                      
			UNION ALL
			
			SELECT   	T1.DetailId, T1.LimitHeaderId, T1.LimitStructureDetailsID,T5.GroupCode,  T3.GroupName, T5.LimitLine, T4.RuleCodeDesc  LimitLineDesc,COALESCE(T1.Revolving,0)Revolving, COALESCE(T4.Revolving,0)  LimitStructureRevolving,T1.ExpiryDate, T1.LimitSanctioned,  
	                    T1.ReservedLimit, T1.UtilisedLimit, T1.LimitCheck, T1.LimitChkMethod,T5.ItemSeq, T5.ItemPriority,T5.ItemLevel,T5.Editable, T5.DisplayStyle, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, 
	                    T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
	                    T1.WorkflowId, T1.NonRvlUtilised
	                    
			FROM        LimitDetails  T1 INNER JOIN
	                       SecUsers  T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
	                       LimitStructureDetails  T5 ON T1.LimitStructureDetailsID = T5.LimitStructureDetailsID LEFT OUTER JOIN
	                       LimitGroup  T3 ON T5.GroupCode = T3.GroupCode LEFT OUTER JOIN
	                      Rules  T4 ON T5.LimitLine = T4.RuleCode and  RuleModule='LMTLINE'
			
			WHERE     NOT EXISTS
			                          (SELECT     1
			                            FROM          LimitDetails_Temp
			                            WHERE      DetailId = T1.DetailId)
						
		</createView>
	</changeSet>
	
	<changeSet author="Veeravenkata" id="7">
		<createView viewName="LIMITGROUPLINES_AVIEW" replaceIfExists="true">
		
		SELECT		T1.LimitGroupCode, T5.LimitCategory, T1.GroupCode, T3.GroupName,T1.LimitLine,  T1.LimitLines ,	T4.RuleCodeDesc LimitLineDesc,T1.ItemSeq,	
					T1.Version ,T1.CreatedBy,T1.CreatedOn, T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, 
					T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, COALESCE(T4.Revolving, 1) Revolving
		
		FROM	   	 LimitGroupLines T1 INNER JOIN
		 			 LimitGroup_View T5 ON T1.LimitGroupCode = T5.GroupCode INNER JOIN
		             SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT JOIN
		             LimitGroup T3 ON T1.GroupCode = T3.GroupCode LEFT JOIN
		             Rules T4 ON T1.LimitLine = T4.Rulecode and RuleModule='LMTLINE'
		</createView>
	</changeSet>
	
	<changeSet author="Veeravenkata" id="8">
		<createView viewName="LIMITGROUPLINES_TVIEW" replaceIfExists="true">
		
		SELECT		T1.LimitGroupCode,T5.LimitCategory, T1.GroupCode,T3.GroupName, T1.LimitLine,  T1.LimitLines ,	T4.RuleCodeDesc LimitLineDesc,T1.ItemSeq,
					T1.Version ,T1.CreatedBy,T1.CreatedOn, T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, 
					T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, COALESCE(T4.Revolving, 1) Revolving
					
		FROM    	LimitGroupLines_Temp T1 INNER JOIN
			 		LimitGroup_View T5 ON T1.LimitGroupCode = T5.GroupCode INNER JOIN
            		SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT JOIN
            		LimitGroup T3 ON T1.GroupCode = T3.GroupCode LEFT JOIN
            		Rules T4 ON T1.LimitLine = T4.Rulecode and  RuleModule='LMTLINE'
	            		
		</createView>
	</changeSet>
	
	<changeSet author="Veeravenkata" id="9">
		<createView viewName="LIMITGROUPLINES_VIEW" replaceIfExists="true">
		
		 SELECT		T1.LimitGroupCode,T5.LimitCategory, T1.GroupCode, T3.GroupName,T1.LimitLine , T1. LimitLines,	T4.RuleCodeDesc LimitLineDesc,T1.ItemSeq,
					T1.Version ,T1.CreatedBy,T1.CreatedOn, T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, 
					T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, COALESCE(T4.Revolving, 1) Revolving
					
		FROM    	LimitGroupLines_Temp T1 INNER JOIN
					LimitGroup_View T5 ON T1.LimitGroupCode = T5.GroupCode INNER JOIN
		            SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT JOIN
		            LimitGroup T3 ON T1.GroupCode = T3.GroupCode LEFT JOIN
		            Rules T4 ON T1.LimitLine = T4.Rulecode and  RuleModule='LMTLINE'
		UNION ALL
	
		SELECT		T1.LimitGroupCode, T5.LimitCategory, T1.GroupCode, T3.GroupName,T1.LimitLine , T1.LimitLines ,	T4.RuleCodeDesc LimitLineDesc,T1.ItemSeq,	
					T1.Version ,T1.CreatedBy,T1.CreatedOn, T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, 
					T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, COALESCE(T4.Revolving, 1) Revolving
					
		FROM    	LimitGroupLines T1 INNER JOIN
					LimitGroup_View T5 ON T1.LimitGroupCode = T5.GroupCode INNER JOIN
		            SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT JOIN
		            LimitGroup T3 ON T1.GroupCode = T3.GroupCode LEFT JOIN
		            Rules T4 ON T1.LimitLine = T4.Rulecode and  RuleModule='LMTLINE'
		
		WHERE     NOT EXISTS (SELECT 1 FROM LimitGroupLines_Temp WHERE LimitGroupCode = T1.LimitGroupCode AND (GroupCode=T1.GroupCode  OR LimitLine=T1.LimitLine))
	            		
		</createView>
	</changeSet>
	
	<changeSet id="10" author="Veeravenkata">
		<sql>
			Update LimitDetails set NonRvlUtilised = 0 Where NonRvlUtilised IS NULL;
			Update LimitDetails_Temp set NonRvlUtilised = 0 Where NonRvlUtilised IS NULL;
		</sql>
	</changeSet>

<changeSet id="11" author="somasekhar">
	<addColumn tableName="customeraddresses">
			<column name="custAddressId" type="bigint"/>
		</addColumn>
  </changeSet>
  <changeSet id="12" author="somasekhar">
  	<sql>
        update customeraddresses set custAddressId = Rownum;
  	</sql>
  </changeSet>
   <changeSet id="11.1" author="somasekhar">
  <addNotNullConstraint tableName="customeraddresses" columnName="custAddressId"/>
  </changeSet>
<changeSet id="13" author="somasekhar">
   <addColumn tableName="customeraddresses_Temp">
			<column name="custAddressId" type="bigint"/>
		</addColumn>
  </changeSet>
 <changeSet id="14" author="somasekhar">
   <sql>
        update customeraddresses_Temp set custAddressId = Rownum;
  	</sql>
 </changeSet>
 <changeSet id="13.1" author="somasekhar">
 <addNotNullConstraint tableName="customeraddresses_Temp" columnName="custAddressId"/>
  </changeSet>

<changeSet id="15" author="somasekhar" dbms="oracle">
		<sql splitStatements="false">
			declare
                 addrseq INTEGER;
          begin
                 select max(custAddressId)+1 into addrseq from CustomerAddresses;
                 execute immediate 'Create sequence SeqCustomerAddresses  start with ' || addrseq || ' increment by 1 MAXVALUE 9223372036854775807 NOCYCLE';
          end;
		</sql>
	</changeSet>

<changeSet id="16" author="somasekhar">
    <addColumn tableName="FINASSETTYPES">
			<column name="assetTypeId" type="bigint"/>
		</addColumn>
</changeSet>
<changeSet id="17" author="somasekhar"> 
  	<sql>
        update FINASSETTYPES set assetTypeId = Rownum;
  	</sql>
 </changeSet>
   <changeSet id="16.1" author="somasekhar">
 <addNotNullConstraint tableName="FINASSETTYPES" columnName="assetTypeId"/>
  </changeSet>
<changeSet id="18" author="somasekhar">
       <addColumn tableName="FINASSETTYPES_Temp">
			<column name="assetTypeId" type="bigint"/>
		</addColumn>
		
</changeSet>
<changeSet id="19" author="somasekhar"> 
  	<sql>
        update FINASSETTYPES_Temp set assetTypeId = Rownum;
  	</sql>
  </changeSet>
<changeSet id="18.1" author="somasekhar">
 <addNotNullConstraint tableName="FINASSETTYPES_Temp" columnName="assetTypeId"/>
  </changeSet>
<changeSet id="20" author="somasekhar" dbms="oracle">
		<sql splitStatements="false">
			declare
                 addrseq INTEGER;
          begin
                 select max(assetTypeId)+1 into addrseq from FINASSETTYPES;
                 execute immediate 'Create sequence SeqFinASSETTYPES  start with ' || addrseq || ' increment by 1 MAXVALUE 9223372036854775807 NOCYCLE';
          end;
		</sql>
</changeSet>
	
<changeSet id="21" author="somasekhar">
      <addColumn tableName="RECEIPTALLOCATIONDETAIL">
			<column name="receiptAllocationid" type="bigint"/>
		</addColumn>
</changeSet>
<changeSet id="22" author="somasekhar"> 
  	<sql>
        update RECEIPTALLOCATIONDETAIL set receiptAllocationid = Rownum;
  	</sql>
  </changeSet>
  <changeSet id="21.1" author="somasekhar">
 <addNotNullConstraint tableName="RECEIPTALLOCATIONDETAIL" columnName="receiptAllocationid"/>
  </changeSet>
<changeSet id="23" author="somasekhar">
       <addColumn tableName="RECEIPTALLOCATIONDETAIL_TEMP">
			<column name="receiptAllocationid" type="bigint"/>
		</addColumn>
</changeSet>
<changeSet id="24" author="somasekhar"> 
  	<sql>
        update RECEIPTALLOCATIONDETAIL_TEMP set receiptAllocationid = Rownum;
  	</sql>
  </changeSet>
<changeSet id="23.1" author="somasekhar">
 <addNotNullConstraint tableName="RECEIPTALLOCATIONDETAIL_TEMP" columnName="receiptAllocationid"/>
  </changeSet>
<changeSet id="25" author="somasekhar" dbms="oracle">
		<sql splitStatements="false">
		declare
                 addrseq INTEGER;
          begin
                 select max(receiptAllocationid)+1 into addrseq from RECEIPTALLOCATIONDETAIL;
                 execute immediate 'Create sequence SeqReceiptAllocationDetail  start with ' || addrseq || ' increment by 1 MAXVALUE 9223372036854775807 NOCYCLE';
          end;
		</sql>
</changeSet>

<changeSet id="26" author="Somasekhar">
		<createView viewName="CUSTOMERADDRESSES_AVIEW" replaceIfExists="true">
                 SELECT 		T1.custAddressId, T1.CustID , T1.CustAddrType,  T1.CustAddrHNbr , T1.CustFlatNbr, T1.CustAddrStreet , T1.CustAddrLine1 , T1.CustAddrLine2 , T1.CustPOBox , T1.CustAddrCity , 
								T1.TypeOfResidence,  T1.CustAddrProvince , T1.CustAddrCountry , T1.CustAddrZIP ,  T1.CustAddrPhone , T1.CustAddrFrom ,  T1.custAddrPriority ,
								T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,						
         						T2.AddrTypeDesc lovDescCustAddrTypeName  ,
        						T3.PCCityName lovDescCustAddrCityName  , T3.BankRefNo as cityRefNo,
          						T4.CPProvinceName lovDescCustAddrProvinceName  , T4.BankRefNo as stateRefNo,
								T5.CountryDesc lovDescCustAddrCountryName,
								T6.areaname lovDescCustAddrZip
        FROM 			  CustomerAddresses T1
        LEFT JOIN 		BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
        LEFT JOIN       RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
		LEFT JOIN       RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry AND T1.CustAddrProvince = T4.CPProvince
        LEFT JOIN       BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
		LEFT JOIN       pincodes T6 ON T1.CustAddrZIP = T6.pincode
	</createView>
</changeSet>

<changeSet id="27" author="Somasekhar">
		<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
SELECT 			T1.custAddressId, T1.CustID , T1.CustAddrType,  T1.CustAddrHNbr , T1.CustFlatNbr, T1.CustAddrStreet , T1.CustAddrLine1 , T1.CustAddrLine2 , T1.CustPOBox , T1.CustAddrCity , 
								T1.TypeOfResidence,  T1.CustAddrProvince , T1.CustAddrCountry , T1.CustAddrZIP ,  T1.CustAddrPhone , T1.CustAddrFrom ,  T1.custAddrPriority ,
								T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,						
         						T2.AddrTypeDesc lovDescCustAddrTypeName  ,
        						T3.PCCityName lovDescCustAddrCityName  , T3.BankRefNo as cityRefNo,
          						T4.CPProvinceName lovDescCustAddrProvinceName  , T4.BankRefNo as stateRefNo,
								T5.CountryDesc lovDescCustAddrCountryName,
								T6.areaname lovDescCustAddrZip
        FROM 			  CustomerAddresses_Temp T1
        LEFT JOIN 		BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
        LEFT JOIN       RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
		LEFT JOIN       RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry AND T1.CustAddrProvince = T4.CPProvince
        LEFT JOIN       BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
		LEFT JOIN       pincodes T6 ON T1.CustAddrZIP = T6.pincode
        UNION ALL 
       SELECT 			T1.custAddressId, T1.CustID , T1.CustAddrType,  T1.CustAddrHNbr , T1.CustFlatNbr, T1.CustAddrStreet , T1.CustAddrLine1 , T1.CustAddrLine2 , T1.CustPOBox , T1.CustAddrCity , 
								T1.TypeOfResidence,  T1.CustAddrProvince , T1.CustAddrCountry , T1.CustAddrZIP ,  T1.CustAddrPhone , T1.CustAddrFrom ,  T1.custAddrPriority ,
								T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,						
         						T2.AddrTypeDesc lovDescCustAddrTypeName  ,
        						T3.PCCityName lovDescCustAddrCityName  , T3.BankRefNo as cityRefNo,
          						T4.CPProvinceName lovDescCustAddrProvinceName  , T4.BankRefNo as stateRefNo,
								T5.CountryDesc lovDescCustAddrCountryName,
								T6.areaname lovDescCustAddrZip
        FROM 			  CustomerAddresses T1
        LEFT JOIN 		BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
        LEFT JOIN       RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
		LEFT JOIN       RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry AND T1.CustAddrProvince = T4.CPProvince
        LEFT JOIN       BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
		LEFT JOIN       pincodes T6 ON T1.CustAddrZIP = T6.pincode
        WHERE NOT EXISTS ( SELECT 1 
                        FROM CustomerAddresses_Temp 
                          WHERE CustID = T1.CustID
                                  AND CustAddrType = T1.CustAddrType )
	</createView>
</changeSet>
<changeSet id="28" author="Somasekhar">
		<createView viewName="RECEIPTALLOCATIONDETAIL_AVIEW" replaceIfExists="true">
  select            T1.ReceiptAllocationid,T1.ReceiptID, T1.AllocationID, T1.AllocationType, T1.AllocationTo, T1.PaidAmount,
                        T1.WaivedAmount, coalesce(T3.FeeTypeDesc, T5.FeeTypeDesc) TypeDesc 
  from               ReceiptAllocationDetail T1  
  LEFT JOIN    FinFeeDetail T2 ON T1.AllocationTo = T2.FeeID AND T1.AllocationType = 'FEE'
  LEFT JOIN    FeeTypes T3 ON T2.FeeTypeId = T3.FeeTypeId 
  LEFT JOIN    ManualAdvise T4 ON T1.AllocationTo = T4.AdviseID AND T1.AllocationType = 'MANADV'
  LEFT JOIN    FeeTypes T5 ON T4.FeeTypeId = T5.FeeTypeId
	</createView>
</changeSet>

<changeSet id="29" author="somasekhar">
		<createView viewName="FINASSETTYPES_TVIEW" replaceIfExists="true">
		SELECT     T1.AssetTypeId,T1.AssetType, T1.SeqNo, T1.Reference,
		  			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
		 			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
		FROM   FinAssetTypes_Temp T1
		</createView>
	</changeSet>
<changeSet id="30" author="Somasekhar" >
		<addColumn tableName="FINGUARANTORSDETAILS">
			<column name="GuarantorGenderCode" type="varchar(8)" />
		</addColumn>
</changeSet>
<changeSet id="31" author="Somasekhar">
	<addColumn tableName="FINGUARANTORSDETAILS_Temp">
			<column name="GuarantorGenderCode" type="varchar(8)" />
		</addColumn>
</changeSet>
<changeSet id="32" author="Somasekhar">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			
           INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) FROM SECRIGHTS)+1,3,'GuarantorDetailDialog_GuarantorGenderCode','GuarantorDetailDialog',1,1000,CURRENT_timestamp,' ',' ',' ',' ',' ',' ',0);

           INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINGUARANTORACCDETAIL_SER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='GuarantorDetailDialog_GuarantorGenderCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

           INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BFSD_ORIGINATION_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='GuarantorDetailDialog_GuarantorGenderCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

           INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_WRM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='GuarantorDetailDialog_GuarantorGenderCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

            UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
</changeSet>
<changeSet id="33" author="somasekhar">
		<createView viewName="FINGUARANTORSDETAILS_AVIEW" replaceIfExists="true">
			SELECT           T1.GuarantorId, T1.FinReference, T1.BankCustomer, T1.GuarantorCIF, T1.GuarantorIDType, T1.GuarantorIDNumber, T1.GuranteePercentage, 
			                    T1.MobileNo, T1.EmailId, T1.GuarantorProof, T1.GuarantorProofName, T1.Version, T1.LastMntBy, T1.LastMntOn,  T1.RecordStatus,
						        T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.GuarantorCIFName, T1.Remarks, T1.AddrHNbr,
						        T1.FlatNbr, T1.AddrStreet, T1.AddrLine1, T1.AddrLine2, T1.POBox, T1.AddrCity, T1.AddrProvince, T1.AddrCountry, T1.AddrZIP,T1.GuarantorGenderCode, 
			                    (SELECT IdentityDesc  FROM BMTIdentityType WHERE (IdentityType = T1.GuarantorIDType)) GuarantorIDTypeName,
			                    T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName,
			                    coalesce(T3.CUSTID,0) CUSTID, T3.CustShrtName			            
			FROM              FinGuarantorsDetails T1 INNER JOIN
				               SecUsers T2 ON T1.LastMntBy = T2.UsrID Left Outer Join
				              Customers T3 ON T1.GuarantorCIF =  T3.CustCIF
		</createView>
</changeSet>
<changeSet id="34" author="somasekhar">
	<createView viewName="FINGUARANTORSDETAILS_TVIEW" replaceIfExists="true">
			SELECT            T1.GuarantorId, T1.FinReference, T1.BankCustomer, T1.GuarantorCIF, T1.GuarantorIDType, T1.GuarantorIDNumber, T1.GuranteePercentage, 
						       T1.MobileNo, T1.EmailId, T1.GuarantorProof, T1.GuarantorProofName, T1.Version, T1.LastMntBy, T1.LastMntOn,  T1.RecordStatus,
						       T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.GuarantorCIFName, T1.Remarks, T1.AddrHNbr,
						       T1.FlatNbr, T1.AddrStreet, T1.AddrLine1, T1.AddrLine2, T1.POBox, T1.AddrCity, T1.AddrProvince, T1.AddrCountry, T1.AddrZIP,T1.GuarantorGenderCode, 
						       (SELECT IdentityDesc  FROM BMTIdentityType WHERE (IdentityType = T1.GuarantorIDType)) GuarantorIDTypeName,
						       T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName,
						       coalesce(T3.CUSTID,0) CUSTID , T3.CustShrtName
			FROM              FinGuarantorsDetails_Temp T1 INNER JOIN
						      SecUsers T2 ON T1.LastMntBy = T2.UsrID Left Outer Join
						     Customers T3 ON T1.GuarantorCIF =  T3.CustCIF
		</createView>
</changeSet>
<changeSet id="35" author="somasekhar">
		<createView viewName="FINGUARANTORSDETAILS_VIEW" replaceIfExists="true">
			SELECT             T1.GuarantorId, T1.FinReference, T1.BankCustomer, T1.GuarantorCIF, T1.GuarantorIDType, T1.GuarantorIDNumber, T1.GuranteePercentage, 
						       T1.MobileNo, T1.EmailId, T1.GuarantorProof, T1.GuarantorProofName, T1.Version, T1.LastMntBy, T1.LastMntOn,  T1.RecordStatus, 
						       T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.GuarantorCIFName, T1.Remarks, T1.AddrHNbr,
						       T1.FlatNbr, T1.AddrStreet, T1.AddrLine1, T1.AddrLine2, T1.POBox, T1.AddrCity, T1.AddrProvince, T1.AddrCountry, T1.AddrZIP,T1.GuarantorGenderCode,
						       (SELECT IdentityDesc  FROM BMTIdentityType WHERE (IdentityType = T1.GuarantorIDType)) GuarantorIDTypeName,
						       T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName,
						       coalesce(T3.CUSTID,0) CUSTID, T3.CustShrtName			            
			FROM               FinGuarantorsDetails_Temp T1 INNER JOIN
						       SecUsers T2 ON T1.LastMntBy = T2.UsrID Left Outer Join
						       Customers T3 ON T1.GuarantorCIF =  T3.CustCIF
						
			UNION ALL
						
			SELECT            T1.GuarantorId, T1.FinReference, T1.BankCustomer, T1.GuarantorCIF, T1.GuarantorIDType, T1.GuarantorIDNumber, T1.GuranteePercentage, 
			                  T1.MobileNo, T1.EmailId, T1.GuarantorProof, T1.GuarantorProofName, T1.Version, T1.LastMntBy, T1.LastMntOn,  T1.RecordStatus,
			                  T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.GuarantorCIFName, T1.Remarks, T1.AddrHNbr,
			                  T1.FlatNbr, T1.AddrStreet, T1.AddrLine1, T1.AddrLine2, T1.POBox, T1.AddrCity, T1.AddrProvince, T1.AddrCountry, T1.AddrZIP, T1.GuarantorGenderCode,
			                  (SELECT IdentityDesc  FROM BMTIdentityType WHERE (IdentityType = T1.GuarantorIDType)) GuarantorIDTypeName,
			                  T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName,
			                  coalesce(T3.CUSTID,0) CUSTID, T3.CustShrtName            
			FROM              FinGuarantorsDetails T1 INNER JOIN
			                  SecUsers T2 ON T1.LastMntBy = T2.UsrID Left Outer Join
			                  Customers T3 ON T1.GuarantorCIF =  T3.CustCIF
			
			WHERE     	NOT EXISTS (SELECT 1 FROM FinGuarantorsDetails_TEMP  WHERE GuarantorId = T1.GuarantorId)

		</createView>
</changeSet>
<changeSet id="36" author="Jayant" dbms="oracle">
	    <sql splitStatements="false">
	        begin
	        	SP_INVALIDVIEWS;
	        	RESEED_SEQUENCE_TABLES;
	        end;
	    </sql>
</changeSet>
	<changeSet id="37" author="Kesav">
		<sql >
			Delete from ErrorDetails where ErrorCode = '41021';
			INSERT INTO ErrorDetails VALUES('41021','EN','E','{0} and {1} already exists for {2}','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		</sql>
	</changeSet>
	
	<changeSet id="38" author="Veeravenkata">
	<sql>
		INSERT INTO ErrorDetails VALUES('60316','EN','E','Customer Limit Setup: {0} is Inactive.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
</changeSet>
	

</databaseChangeLog>
