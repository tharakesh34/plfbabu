<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="add.schema" value=" " dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="satish" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'covenantsmaintenance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="1" author="murthy.y">
		<createView viewName="COVENANTSMAINTENANCE_VIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.FINID,
				 	T1.FINREFERENCE,
				    T1.FINBRANCH,
				    T1.FINTYPE,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.FINSTARTDATE,
				    T1.NUMBEROFTERMS,
				    T1.CUSTID,
				    T1.FINAMOUNT,
				    T1.MATURITYDATE,
				    T1.FINREPAYMENTAMOUNT,
				    T1.FINISACTIVE,
				    T1.BLACKLISTED,
				    T1.FEECHARGEAMT,
				    T1.INSURANCEAMT,
				    T1.GRACETERMS,
				    T1.ALLOWGRCPERIOD,
				    T1.GRCPERIODENDDATE,
				    T1.ALWMULTIDISB,
				    T1.DEFFERMENTS,
				    T1.ALLOWGRCPFTRVW,
				    T1.ALLOWREPAYRVW,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.MIGRATEDFINANCE,
				    T1.CLOSINGSTATUS,
				    T1.REPAYRATEBASIS,
				    T1.MANUALSCHEDULE,
				    T1.FINCURRASSETVALUE,
				    T1.TAKEOVERFINANCE,
				    T1.NEXTROLLOVERDATE,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.DOWNPAYMENT,
				    T1.PLANEMIHALW,
				    T1.CALTERMS,
				    T1.RATECHGANYDAY,
				    T1.FINASSETVALUE,
				    T2.CUSTCIF LOVDESCCUSTCIF,
				    T3.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				    T3.FINDIVISION LOVDESCFINDIVISION,
				    T3.FINCATEGORY LOVDESCPRODUCTCODENAME,
				    T4.PRODUCTCATEGORY,
				    coalesce(T9.NOINST, 0) NOINST,
				    coalesce(T5.ROLEDESC, fn_get_roledesc(T10.NEXTROLECODE)) LOVDESCREQUESTSTAGE,
				    T10.FINMAINTAINID,
				    T10.EVENT RCDMAINTAINSTS,
				    T10.NEXTROLECODE,
				    T10.RECORDSTATUS,
				    T10.RECORDTYPE,
				    T1.VERSION
				FROM FINMAINTAININSTRUCTIONS_TEMP T10
				JOIN FINANCEMAIN T1 ON T1.FINID = T10.FINID
				JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				JOIN RMTFINANCETYPES T3 ON T1.FINTYPE = T3.FINTYPE
				LEFT JOIN SECROLES T5 ON T10.NEXTROLECODE = T5.ROLECD
				JOIN BMTPRODUCT T4 ON T3.FINCATEGORY = T4.PRODUCTCODE
				LEFT JOIN FINPFTDETAILS T9 ON T1.FINID = T9.FINID
				WHERE T10.EVENT = 'covenants'
				UNION ALL
				SELECT T1.FINID,
				 	T1.FINREFERENCE,
				    T1.FINBRANCH,
				    T1.FINTYPE,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.FINSTARTDATE,
				    T1.NUMBEROFTERMS,
				    T1.CUSTID,
				    T1.FINAMOUNT,
				    T1.MATURITYDATE,
				    T1.FINREPAYMENTAMOUNT,
				    T1.FINISACTIVE,
				    T1.BLACKLISTED,
				    T1.FEECHARGEAMT,
				    T1.INSURANCEAMT,
				    T1.GRACETERMS,
				    T1.ALLOWGRCPERIOD,
				    T1.GRCPERIODENDDATE,
				    T1.ALWMULTIDISB,
				    T1.DEFFERMENTS,
				    T1.ALLOWGRCPFTRVW,
				    T1.ALLOWREPAYRVW,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.MIGRATEDFINANCE,
				    T1.CLOSINGSTATUS,
				    T1.REPAYRATEBASIS,
				    T1.MANUALSCHEDULE,
				    T1.FINCURRASSETVALUE,
				    T1.TAKEOVERFINANCE,
				    T1.NEXTROLLOVERDATE,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.DOWNPAYMENT,
				    T1.PLANEMIHALW,
				    T1.CALTERMS,
				    T1.RATECHGANYDAY,
				    T1.FINASSETVALUE,
				    T2.CUSTCIF LOVDESCCUSTCIF,
				    T3.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				    T3.FINDIVISION LOVDESCFINDIVISION,
				    T3.FINCATEGORY LOVDESCPRODUCTCODENAME,
				    T4.PRODUCTCATEGORY,
				    coalesce(T9.NOINST, 0) NOINST,
				    null LOVDESCREQUESTSTAGE,
				    null FINMAINTAINID,
				    null RCDMAINTAINSTS,
				    null NEXTROLECODE,
				    null RECORDSTATUS,
				    null RECORDTYPE,
				    T1.VERSION
				FROM FINANCEMAIN T1
				JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				JOIN RMTFINANCETYPES T3 ON T1.FINTYPE = T3.FINTYPE
				LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
				JOIN BMTPRODUCT T4 ON T3.FINCATEGORY = T4.PRODUCTCODE
				LEFT JOIN FINPFTDETAILS T9 ON T1.FINID = T9.FINID
				WHERE NOT EXISTS (SELECT 1 EXPR1 FROM FINMAINTAININSTRUCTIONS_TEMP
					WHERE FINMAINTAININSTRUCTIONS_TEMP.FINID = T1.FINID)
			]]>
		</createView>
	</changeSet>
	<changeSet id="1_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'covenantsmaintenance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="2_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'querydetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="2" author="murthy.y">
		<createView viewName="QUERYDETAIL_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT F1.FINID,
					F1.FINREFERENCE,
				    T1.ID,
				    S1.USRLOGIN,
				    T1.RAISEDON,
				    B1.DESCRIPTION,
				    T1.QRYNOTES,
				    T1.STATUS,
				    T1.RAISEDBY,
				    B1.CODE CATEGORYCODE,
				    B1.DESCRIPTION CATEGORYDESCRIPTION,
				    T1.CATEGORYID,
				    T1.ASSIGNEDROLE,
				    T1.NOTIFYTO,
				    T1.RESPONSNOTES,
				    T1.RESPONSEBY,
				    S2.USRLOGIN RESPONSEUSER,
				    T1.RESPONSEON,
				    T1.CLOSERNOTES,
				    T1.CLOSERBY,
				    S3.USRLOGIN CLOSERUSER,
				    T1.CLOSERON,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.MODULE,
				    T1.REFERENCE,
				    T1.RAISEDUSRROLE
				FROM QUERYDETAIL T1
				JOIN FINANCEMAIN F1 ON F1.FINID = T1.FINID  
				JOIN BMTQUERYCATEGORIES B1 ON T1.CATEGORYID = B1.ID
				JOIN SECUSERS S1 ON T1.RAISEDBY = S1.USRID
				LEFT JOIN SECUSERS S2 ON T1.RESPONSEBY = S2.USRID
				LEFT JOIN SECUSERS S3 ON T1.CLOSERBY = S3.USRID
			]]>
		</createView>
	</changeSet>
	<changeSet id="2_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'querydetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="3_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'depositcheques_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="3" author="murthy.y">
		<createView viewName="DEPOSITCHEQUES_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.ID,
				    T1.MOVEMENTID,
				    T1.RECEIPTID,
				    T1.RECEIPTMODE,
				    T1.AMOUNT,
				    T1.LINKEDTRANID,
				    T1.STATUS,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.RECEIPTPURPOSE,
				    T2.REMARKS,
				    T3.FAVOURNUMBER,
				    T3.RECEIVEDDATE,
				    T3.FUNDINGAC,
				    T4.FINID,
				    T4.FINREFERENCE,
				    T5.CUSTSHRTNAME
				FROM DEPOSITCHEQUES T1
     			JOIN (SELECT T.REFERENCE, T.RECEIPTID, T.RECEIPTPURPOSE, T.REMARKS FROM FINRECEIPTHEADER_TEMP T
        			UNION ALL
         			SELECT T.REFERENCE, T.RECEIPTID, T.RECEIPTPURPOSE, T.REMARKS FROM FINRECEIPTHEADER T
          			WHERE NOT EXISTS ( SELECT 1 FROM FINRECEIPTHEADER_TEMP
						WHERE FINRECEIPTHEADER_TEMP.RECEIPTID = T.RECEIPTID)) T2 ON T2.RECEIPTID = T1.RECEIPTID
				JOIN (SELECT T.RECEIPTID, T.FAVOURNUMBER, T.RECEIVEDDATE, T.FUNDINGAC, T.PAYMENTTYPE FROM FINRECEIPTDETAIL_TEMP T
        			UNION ALL
					SELECT T.RECEIPTID, T.FAVOURNUMBER, T.RECEIVEDDATE, T.FUNDINGAC, T.PAYMENTTYPE FROM FINRECEIPTDETAIL T
          			WHERE NOT EXISTS ( SELECT 1 FROM FINRECEIPTDETAIL_TEMP
                  		WHERE FINRECEIPTDETAIL_TEMP.RECEIPTID = T.RECEIPTID)) T3 ON T3.RECEIPTID = T1.RECEIPTID AND T3.PAYMENTTYPE = T1.RECEIPTMODE
     			JOIN FINANCEMAIN T4 ON T2.REFERENCE = T4.FINREFERENCE
     			JOIN CUSTOMERS T5 ON T4.CUSTID = T5.CUSTID
			]]>
		</createView>
	</changeSet>
	<changeSet id="3_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'depositcheques_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="4_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_pastduesummary_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="4" author="murthy.y">
		<createView viewName="RPT_PASTDUESUMMARY_VIEW" replaceIfExists="true">
			<![CDATA[
				 select t4.branchcode finbranch,
    				t.finisactive,
    				t.region,
    				t.finstatus,
    				t.totalpastdue measure
   				from (( select t1.finbranch, 'past due amount' region, t1.finstatus, t1.finisactive,
            			(sum(udf_convertcurrency((t2.fincurodpri + t2.fincurodpft), (t1.finccy), 'INR')))(18,3) totalpastdue
           			from (((financemain t1
             		join finoddetails t2 on (((t1.finreference) = (t2.finreference))))
             		join finpftdetails t3 on (((t1.finreference) = (t3.finreference))))
             		join rmtcurrencies on ((t1.finccy = rmtcurrencies.ccycode)))
          			where ((t2.fincurodamt > (0)) and ((t1.closingstatus <> ('c'(500))::bpchar) or (t1.closingstatus is null)) and (t1.finstatus is not null))
          			group by t1.finbranch, t1.finstatus, t1.finisactive
        			union all
					select t1.finbranch, 'profit suspended' text, t1.finstatus, t1.finisactive,
            			(sum(udf_convertcurrency(t3.pftaccruesusp, (t1.finccy), 'INR')))(18,3) profitsuspended
           			from (((financemain t1
             		join finoddetails t2 on (((t1.finreference) = (t2.finreference))))
             		join finpftdetails t3 on (((t1.finreference) = (t3.finreference))))
             		join rmtcurrencies on ((t1.finccy = rmtcurrencies.ccycode)))
          			where ((t2.fincurodamt > (0)) and ((t1.closingstatus <> ('c'(500))::bpchar) or (t1.closingstatus is null)) and (t1.finstatus is not null))
          			group by t1.finbranch, t1.finstatus, t1.finisactive
        			union all
         			select t1.finbranch, 'count' text, t1.finstatus, t1.finisactive, (count(t2.finreference))(18,3) count
           			from (((financemain t1
             		join finoddetails t2 on (((t1.finreference) = (t2.finreference))))
             		join finpftdetails t3 on (((t1.finreference) = (t3.finreference))))
             		join rmtcurrencies on ((t1.finccy = rmtcurrencies.ccycode)))
          			where ((t2.fincurodamt > (0)) and ((t1.closingstatus <> ('c'(500))::bpchar) or (t1.closingstatus is null)) and (t1.finstatus is not null))
          			group by t1.finbranch, t1.finstatus, t1.finisactive) t
     				join rmtbranches t4 on (((t4.branchcode) = (t.finbranch))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="4_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_pastduesummary_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="5_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="5" author="murthy.y">
		<createView viewName="FINANCEMAIN_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.FINID,
				 	T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    ((T1.FINAMOUNT + T1.FEECHARGEAMT) - T1.DOWNPAYMENT) LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME CONNECTORCODE,
				    T40.DEALERCITY CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE BUSINESSVERTICALCODE,
				    BV.DESCRIPTION BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND,
				    T1.REQLOANAMT,
				    T1.REQLOANTENOR,
				    T1.FINOCRREQUIRED,
				    T1.OFFERPRODUCT,
				    T1.OFFERAMOUNT,
				    T1.CUSTSEGMENTATION,
				    T1.BASEPRODUCT,
				    T1.PROCESSTYPE,
				    T1.BUREAUTIMESERIES,
				    T1.CAMPAIGNNAME,
				    T1.EXISTINGLANREFNO,
				    T1.LEADSOURCE,
				    T1.POSOURCE,
				    T1.RSA,
				    T1.VERIFICATION,
				    T1.SOURCINGBRANCH,
				    T1.SOURCHANNELCATEGORY,
				    T1.ASMNAME,
				    T13.BRANCHDESC LOVDESCSOURCINGBRANCH,
				    T1.OFFERID,
				    T1.ALWGRCADJ,
				    T1.ENDGRCPERIODAFTRFULLDISB,
				    T1.AUTOINCGRCENDDATE,
				    T1.PMAY,
				    T1.ALWLOANSPLIT,
				    T1.PARENTREF,
				    T1.LOANSPLITTED,
				    T1.INSTBASEDSCHD,
				    T1.PLANEMIHALWINGRACE,
				    T1.ALLOWSUBVENTION,
				    T1.TDSTYPE,
				    T1.WRITEOFFLOAN,
				    T1.RESTRUCTURE,
				    T1.CALCOFSTEPS,
				    T1.STEPSAPPLIEDFOR,
				    T1.NOOFGRCSTEPS,
				    T1.SCHDVERSION,
				    T1.SUBVENTIONFROM,
				    T1.MANUFACTURERDEALERID,
				    T41.DEALERNAME MANUFACTURERDEALERNAME,
				    T41.CODE MANUFACTURERDEALERCODE
				FROM FINANCEMAIN_TEMP T1
				JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				LEFT JOIN RMTBRANCHES T13 ON T1.SOURCINGBRANCH = T13.BRANCHCODE
				LEFT JOIN FINPFTDETAILS T17 ON T17.FINID = T1.FINID
				LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'elgmethod'
				LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
				LEFT JOIN AMTVEHICLEDEALER T41 ON T1.MANUFACTURERDEALERID = T41.DEALERID
				UNION ALL
				SELECT T1.FINID, 
					T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    ((T1.FINAMOUNT + T1.FEECHARGEAMT) - T1.DOWNPAYMENT) LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME CONNECTORCODE,
				    T40.DEALERCITY CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE BUSINESSVERTICALCODE,
				    BV.DESCRIPTION BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND,
				    T1.REQLOANAMT,
				    T1.REQLOANTENOR,
				    T1.FINOCRREQUIRED,
				    T1.OFFERPRODUCT,
				    T1.OFFERAMOUNT,
				    T1.CUSTSEGMENTATION,
				    T1.BASEPRODUCT,
				    T1.PROCESSTYPE,
				    T1.BUREAUTIMESERIES,
				    T1.CAMPAIGNNAME,
				    T1.EXISTINGLANREFNO,
				    T1.LEADSOURCE,
				    T1.POSOURCE,
				    T1.RSA,
				    T1.VERIFICATION,
				    T1.SOURCINGBRANCH,
				    T1.SOURCHANNELCATEGORY,
				    T1.ASMNAME,
				    T13.BRANCHDESC LOVDESCSOURCINGBRANCH,
				    T1.OFFERID,
				    T1.ALWGRCADJ,
				    T1.ENDGRCPERIODAFTRFULLDISB,
				    T1.AUTOINCGRCENDDATE,
				    T1.PMAY,
				    T1.ALWLOANSPLIT,
				    T1.PARENTREF,
				    T1.LOANSPLITTED,
				    T1.INSTBASEDSCHD,
				    T1.PLANEMIHALWINGRACE,
				    T1.ALLOWSUBVENTION,
				    T1.TDSTYPE,
				    T1.WRITEOFFLOAN,
				    T1.RESTRUCTURE,
				    T1.CALCOFSTEPS,
				    T1.STEPSAPPLIEDFOR,
				    T1.NOOFGRCSTEPS,
				    T1.SCHDVERSION,
				    T1.SUBVENTIONFROM,
				    T1.MANUFACTURERDEALERID,
				    T41.DEALERNAME MANUFACTURERDEALERNAME,
				    T41.CODE MANUFACTURERDEALERCODE
				FROM FINANCEMAIN T1
				JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				LEFT JOIN RMTBRANCHES T13 ON T1.SOURCINGBRANCH = T13.BRANCHCODE
				LEFT JOIN FINPFTDETAILS T17 ON T17.FINID = T1.FINID
				LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'elgmethod'
				LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
				LEFT JOIN AMTVEHICLEDEALER T41 ON T1.MANUFACTURERDEALERID = T41.DEALERID
				WHERE NOT EXISTS ( SELECT 1 FROM FINANCEMAIN_TEMP
					WHERE FINANCEMAIN_TEMP.FINID = T1.FINID)
			]]>
		</createView>
	</changeSet>
	<changeSet id="5_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="6_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finpendingdtlsbyrole_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="6" author="murthy.y">
		<createView viewName="FINPENDINGDTLSBYROLE_VIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T2.MENUREF,
    				T2.MENUCODE,
    				T1.FINID,
				    T1.FINREFERENCE,
				    T1.CUSTID CUSTCIF,
				    T3.CUSTSHRTNAME,
				    T2.MENUZULPATH,
				    T1.NEXTROLECODE
				FROM FINANCEMAIN_TEMP T1
				JOIN PTMENUDETAILS T2 ON T1.RCDMAINTAINSTS = T2.MENUCODE
				LEFT JOIN CUSTOMERS T3 ON T1.CUSTID = T3.CUSTID
			]]>
		</createView>
	</changeSet>
	<changeSet id="6_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finpendingdtlsbyrole_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="7_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_portfoliobehavior');
			]]>
		</sql>
	</changeSet>
	<changeSet id="7" author="murthy.y">
		<createView viewName="RPT_PORTFOLIOBEHAVIOR" replaceIfExists="true">
			<![CDATA[
				 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    1 grade,
    'exceptional-risk free' classification,
    '0' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays = 0) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    2 grade,
    'excellent-low risk' classification,
    '1-15' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 1) and (t1.fincuroddays <= 15) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    3 grade,
    'superior-modest risk' classification,
    '16-30' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 16) and (t1.fincuroddays <= 30) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    4 grade,
    'good-above average risk' classification,
    '31-45' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 31) and (t1.fincuroddays <= 45) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    5 grade,
    'satisfactory-average risk' classification,
    '46-60' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 46) and (t1.fincuroddays <= 60) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    6 grade,
    'adequate-borderline' classification,
    '61-70' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 61) and (t1.fincuroddays <= 70) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    7 grade,
    'watch list' classification,
    '71-80' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 71) and (t1.fincuroddays <= 80) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    8 grade,
    'special mention' classification,
    '81-90' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 81) and (t1.fincuroddays <= 90) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    9 grade,
    'substandard' classification,
    '91-180' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 91) and (t1.fincuroddays <= 180) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    10 grade,
    'doubtful' classification,
    '181-365' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 181) and (t1.fincuroddays <= 365) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    11 grade,
    'loss' classification,
    '365>' dpd,
    count(distinct t2.finaccount) noofaccounts,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) curoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) curoutstandingusd
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays > 365) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
			]]>
		</createView>
	</changeSet>
	<changeSet id="7_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_portfoliobehavior');
			]]>
		</sql>
	</changeSet>

	<changeSet id="8_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finocrcapture_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="8" author="murthy.y">
		<createView viewName="FINOCRCAPTURE_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.ID,
				 	T2.FINID,
				    T2.FINREFERENCE,
				    T1.DISBSEQ,
				    T1.DEMANDAMOUNT,
				    T1.PAIDAMOUNT,
				    T1.REMARKS,
				    T1.RECEIPTDATE,
				    T1.FILENAME,
				    T1.DOCUMENTREF,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID
				FROM FINOCRCAPTURE T1
				INNER JOIN FINANCEMAIN T2 ON T2.FINID = T1.FINID
			]]>
		</createView>
	</changeSet>
	<changeSet id="8_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finocrcapture_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="9_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cibil_customer_loans_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="9" author="murthy.y">
		<createView viewName="CIBIL_CUSTOMER_LOANS_VIEW" replaceIfExists="true">
			<![CDATA[
				 select at.segment_type,
    cu.custid,
    at.code fintype,
    fm.finreference,
    fm.finstartdate,
    fm.finapproveddate,
    pd.latestrpydate,
    fm.repayfrq,
    udf_convertcurrency(fm.finassetvalue, (fm.finccy), 'INR') finassetvalue,
    udf_convertcurrency(pd.totalpribal, (fm.finccy), 'INR') future_schedule_prin,
    udf_convertcurrency((pd.odprincipal + pd.odprofit), (fm.finccy), 'INR') instalment_due,
    udf_convertcurrency((pd.totalpftpaid + pd.totalpripaid), (fm.finccy), 'INR') instalment_paid,
    udf_convertcurrency(ma.bounce_due, (fm.finccy), 'INR') bounce_due,
    udf_convertcurrency(ma.bounce_paid, (fm.finccy), 'INR') bounce_paid,
    udf_convertcurrency(fo.late_payment_penalty_due, (fm.finccy), 'INR') late_payment_penalty_due,
    udf_convertcurrency(fo.late_payment_penalty_paid, (fm.finccy), 'INR') late_payment_penalty_paid,
    udf_convertcurrency(pd.totalprischd, (fm.finccy), 'INR') total_pri_schd,
    udf_convertcurrency(pd.totalpripaid, (fm.finccy), 'INR') total_pri_paid,
    udf_convertcurrency(pd.totalpftschd, (fm.finccy), 'INR') total_pft_schd,
    udf_convertcurrency(pd.totalpftpaid, (fm.finccy), 'INR') total_pft_paid,
    udf_convertcurrency(fe.excess_amount, (fm.finccy), 'INR') excess_amount,
    udf_convertcurrency(fe.excess_amt_paid, (fm.finccy), 'INR') excess_amt_paid,
    pd.curoddays,
    pd.maturitydate,
    pd.curreducingrate,
    fm.closingstatus,
    cu.ownership,
    fm.numberofterms,
    udf_convertcurrency(ci.custincome, (fm.finccy), 'INR') custincome
   from ((((((((financemain fm
     join cibil_customer_extract cu on (((cu.finreference) = (fm.finreference))))
     join finpftdetails pd on (((pd.finreference) = (fm.finreference))))
     join cibil_account_types_mapping atm on (((atm.fin_type) = (fm.fintype))))
     join cibil_account_types at on (((at.code = atm.code) and ((at.segment_type) = (atm.segment_type)))))
     left join ( select ma_1.finreference,
            sum(((coalesce(ma_1.adviseamount, (0)) - coalesce(ma_1.paidamount, (0))) - coalesce(ma_1.waivedamount, (0)))) bounce_due,
            sum(ma_1.paidamount) bounce_paid
           from manualadvise ma_1
          where (ma_1.bounceid > 0)
          group by ma_1.finreference) ma on (((ma.finreference) = (fm.finreference))))
     left join ( select finoddetails.finreference,
            sum(finoddetails.totpenaltybal) late_payment_penalty_due,
            sum(finoddetails.totpenaltypaid) late_payment_penalty_paid
           from finoddetails
          group by finoddetails.finreference) fo on (((fo.finreference) = (fm.finreference))))
     left join ( select finexcessamount.finreference,
            sum(finexcessamount.amount) excess_amount,
            sum((coalesce(finexcessamount.utilisedamt, (0)) + coalesce(finexcessamount.reservedamt, (0)))) excess_amt_paid
           from finexcessamount
          group by finexcessamount.finreference) fe on (((fe.finreference) = (fm.finreference))))
     left join ( select customerincomes.custid,
            coalesce(sum(customerincomes.custincome), (0)) custincome
           from customerincomes
          group by customerincomes.custid) ci on ((ci.custid = cu.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="9_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cibil_customer_loans_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="10_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finrepayinstruction_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="10" author="murthy.y">
		<createView viewName="FINREPAYINSTRUCTION_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T2.FINID,
				 	T2.FINREFERENCE,
				    T1.REPAYDATE,
				    T1.REPAYAMOUNT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.REPAYSCHDMETHOD
				FROM FINREPAYINSTRUCTION T1
				INNER JOIN FINANCEMAIN T2 ON T2.FINID = T1.FINID
			]]>
		</createView>
	</changeSet>
	<changeSet id="10_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finrepayinstruction_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="11_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemaintenance_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="11" author="murthy.y">
		<createView viewName="FINANCEMAINTENANCE_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.FINID,
				 	T1.FINREFERENCE,
				    T1.FINBRANCH,
				    T1.FINTYPE,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.FINSTARTDATE,
				    T1.NUMBEROFTERMS,
				    T1.CUSTID,
				    T1.FINAMOUNT,
				    T1.MATURITYDATE,
				    T1.FINREPAYMENTAMOUNT,
				    T1.FINISACTIVE,
				    T1.BLACKLISTED,
				    T1.FEECHARGEAMT,
				    T1.INSURANCEAMT,
				    T1.GRACETERMS,
				    T1.ALLOWGRCPERIOD,
				    T1.GRCPERIODENDDATE,
				    T1.ALWMULTIDISB,
				    T1.DEFFERMENTS,
				    T1.NEXTROLECODE,
				    T1.RECORDSTATUS,
				    T1.RECORDTYPE,
				    T1.ALLOWGRCPFTRVW,
				    T1.ALLOWREPAYRVW,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.MIGRATEDFINANCE,
				    T1.RCDMAINTAINSTS,
				    T1.CLOSINGSTATUS,
				    T1.REPAYRATEBASIS,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.NEXTROLLOVERDATE,
				    T1.DOWNPAYMENT,
				    T1.PLANEMIHALW,
				    T1.FINCURRASSETVALUE,
				    T1.FINASSETVALUE,
				    T2.CUSTCIF LOVDESCCUSTCIF,
				    T3.FINCATEGORY LOVDESCPRODUCTCODENAME,
				    T3.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				    T4.PRODUCTCATEGORY,
				    T1.SAMPLINGREQUIRED,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS BPIRATEBASIS,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T5.ENTITYCODE
				FROM FINANCEMAIN T1
				JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				JOIN RMTFINANCETYPES T3 ON T1.FINTYPE = T3.FINTYPE
				JOIN BMTPRODUCT T4 ON T3.FINCATEGORY = T4.PRODUCTCODE
				LEFT JOIN SMTDIVISIONDETAIL T5 ON T3.FINDIVISION = T5.DIVISIONCODE
			]]>
		</createView>
	</changeSet>
	<changeSet id="11_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemaintenance_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="12_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finchangecustomer_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="12" author="murthy.y">
		<createView viewName="FINCHANGECUSTOMER_VIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.ID,
				 	T2.FINID
				    T2.FINREFERENCE,
				    T1.OLDCUSTID,
				    C.CUSTCIF,
				    T1.COAPPLICANTID,
				    JC.CUSTCIF JCUSTCIF,
				    C.CUSTCTGCODE CUSTCATEGORY,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID
				FROM FINCHANGECUSTOMER_TEMP T1
				JOIN FINANCEMAIN_TEMP ON T2 T2.FINID = T1.FINID
				JOIN CUSTOMERS C ON T1.OLDCUSTID = C.CUSTID
				LEFT JOIN CUSTOMERS JC ON T1.COAPPLICANTID = JC.CUSTID
				UNION ALL
 				SELECT T1.ID,
 					T2.FINID
				    T2.FINREFERENCE,
				    T1.OLDCUSTID,
				    C.CUSTCIF,
				    T1.COAPPLICANTID,
				    JC.CUSTCIF JCUSTCIF,
				    C.CUSTCTGCODE CUSTCATEGORY,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID
				FROM FINCHANGECUSTOMER T1
				JOIN FINANCEMAIN_TEMP ON T2 T2.FINID = T1.FINID
				JOIN CUSTOMERS C ON T1.OLDCUSTID = C.CUSTID
				LEFT JOIN CUSTOMERS JC ON T1.COAPPLICANTID = JC.CUSTID
				WHERE NOT EXISTS ( SELECT 1 FROM FINCHANGECUSTOMER_TEMP
				   WHERE FINCHANGECUSTOMER_TEMP.ID = T1.ID)
			]]>
		</createView>
	</changeSet>
	<changeSet id="12_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finchangecustomer_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="13_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeescheduledetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="13" author="murthy.y">
		<createView viewName="FINFEESCHEDULEDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.FEEID,
				    T1.SCHDATE,
				    T1.SCHAMOUNT,
				    T1.PAIDAMOUNT,
				    T1.OSAMOUNT,
				    T1.WAIVERAMOUNT,
				    T1.WRITEOFFAMOUNT,
				    T1.CGST,
				    T1.SGST,
				    T1.UGST,
				    T1.IGST,
				    T3.FINID,
				    T3.FINREFERENCE,
				    T2.FEETYPEID,
				    T2.FINEVENT
				FROM FINFEESCHEDULEDETAIL_TEMP T1
				JOIN FINFEEDETAIL_TEMP T2 ON T1.FEEID = T2.FEEID
				JOIN FINANCEMAIN_TEMP T3 ON T3.FINID = T2.FINID
				UNION ALL
				SELECT T1.FEEID,
				    T1.SCHDATE,
				    T1.SCHAMOUNT,
				    T1.PAIDAMOUNT,
				    T1.OSAMOUNT,
				    T1.WAIVERAMOUNT,
				    T1.WRITEOFFAMOUNT,
				    T1.CGST,
				    T1.SGST,
				    T1.UGST,
				    T1.IGST,
				    T3.FINID,
				    T3.FINREFERENCE,
				    T2.FEETYPEID,
				    T2.FINEVENT
				FROM FINFEESCHEDULEDETAIL T1
				JOIN FINFEEDETAIL_TEMP T2 ON T1.FEEID = T2.FEEID
				JOIN FINANCEMAIN_TEMP T3 ON T3.FINID = T2.FINID
				WHERE NOT EXISTS ( SELECT 1 FROM FINFEESCHEDULEDETAIL_TEMP
					WHERE FINFEESCHEDULEDETAIL_TEMP.FEEID = T1.FEEID AND FINFEESCHEDULEDETAIL_TEMP.SCHDATE = T1.SCHDATE)
			]]>
		</createView>
	</changeSet>
	<changeSet id="13_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeescheduledetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="14_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintaxdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="14" author="murthy.y">
		<createView viewName="FINTAXDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.applicablefor,
    t1.taxcustid,
    t1.taxexempted,
    t1.taxnumber,
    t1.addrline1,
    t1.addrline2,
    t1.addrline3,
    t1.addrline4,
    t1.country,
    t1.province,
    t1.city,
    t1.pincode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.countrydesc countryname,
    t3.cpprovincename provincename,
    t4.pccityname cityname,
    t5.areaname pincodename,
    t6.custcif,
    t6.custshrtname,
    t1.sezcertificateno,
    t1.sezvaluedate,
    t1.addressdetail,
    t1.pincodeid
   from (((((fintaxdetail_temp t1
     left join bmtcountries t2 on (((t1.country)::bpchar = t2.countrycode)))
     left join rmtcountryvsprovince t3 on ((((t1.province) = (t3.cpprovince)) and ((t1.country)::bpchar = t3.cpcountry))))
     left join rmtprovincevscity t4 on ((((t1.city) = (t4.pccity)) and ((t1.province) = (t4.pcprovince)) and ((t1.country)::bpchar = t4.pccountry))))
     left join pincodes t5 on (((t1.pincodeid = t5.pincodeid) and ((t1.city) = (t5.city)))))
     join customers t6 on ((t1.taxcustid = (t6.custid))))
union all
 select t1.finreference,
    t1.applicablefor,
    t1.taxcustid,
    t1.taxexempted,
    t1.taxnumber,
    t1.addrline1,
    t1.addrline2,
    t1.addrline3,
    t1.addrline4,
    t1.country,
    t1.province,
    t1.city,
    t1.pincode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.countrydesc countryname,
    t3.cpprovincename provincename,
    t4.pccityname cityname,
    t5.areaname pincodename,
    t6.custcif,
    t6.custshrtname,
    t1.sezcertificateno,
    t1.sezvaluedate,
    t1.addressdetail,
    t1.pincodeid
   from (((((fintaxdetail t1
     left join bmtcountries t2 on (((t1.country)::bpchar = t2.countrycode)))
     left join rmtcountryvsprovince t3 on ((((t1.province) = (t3.cpprovince)) and ((t1.country)::bpchar = t3.cpcountry))))
     left join rmtprovincevscity t4 on ((((t1.city) = (t4.pccity)) and ((t1.province) = (t4.pcprovince)) and ((t1.country)::bpchar = t4.pccountry))))
     left join pincodes t5 on (((t1.pincodeid = t5.pincodeid) and ((t1.city) = (t5.city)))))
     join customers t6 on ((t1.taxcustid = (t6.custid))))
  where (not (exists ( select 1
           from fintaxdetail_temp
          where ((fintaxdetail_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="14_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintaxdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="15_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'adviseuploads_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="15" author="murthy.y">
		<createView viewName="ADVISEUPLOADS_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ADVISEID,
				    T1.UPLOADID,
				    T2.FINID,
				    T2.FINREFERENCE,
				    T1.ADVISETYPE,
				    T1.FEETYPECODE,
				    T1.VALUEDATE,
				    T1.ADVISEAMOUNT,
				    T1.REMARKS,
				    T1.STATUS,
				    T1.REASON,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.FEETYPEID,
				    T1.REJECTSTAGE
				FROM ADVISEUPLOADS T1
				INNER JOIN FINANCEMAIN T2 ON T2.FINID = T1.FINID
				LEFT JOIN FEETYPES T2 ON T2.FEETYPECODE = T1.FEETYPECODE
			]]>
		</createView>
	</changeSet>
	<changeSet id="15_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'adviseuploads_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="16_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontributordetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="16" author="murthy.y">
		<createView viewName="FINCONTRIBUTORDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T2.FINID,
					T2.FINREFERENCE,
				    T1.CONTRIBUTORBASENO,
				    T1.CUSTID,
				    T1.CONTRIBUTORNAME,
				    T1.CONTRIBUTORINVEST,
				    T1.INVESTACCOUNT,
				    T1.INVESTDATE,
				    T1.TOTALINVESTPERC,
				    T1.MUDARIBPERC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    C.CUSTCIF LOVDESCCONTRIBUTORCIF,
				    T1.RECORDDATE
				FROM FINCONTRIBUTORDETAIL_TEMP T1
				INNER JOIN FINANCEMAIN T2 ON T2.FINID = T2.FINID
				JOIN CUSTOMERS C ON T1.CUSTID = C.CUSTID
				UNION ALL
				SELECT T2.FINID,
					T2.FINREFERENCE,
				    T1.CONTRIBUTORBASENO,
				    T1.CUSTID,
				    T1.CONTRIBUTORNAME,
				    T1.CONTRIBUTORINVEST,
				    T1.INVESTACCOUNT,
				    T1.INVESTDATE,
				    T1.TOTALINVESTPERC,
				    T1.MUDARIBPERC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    C.CUSTCIF LOVDESCCONTRIBUTORCIF,
				    T1.RECORDDATE
				FROM FINCONTRIBUTORDETAIL T1
				INNER JOIN FINANCEMAIN T2 ON T2.FINID = T2.FINID
				JOIN CUSTOMERS C ON T1.CUSTID = C.CUSTID
				WHERE NOT EXISTS (SELECT 1 FROM FINCONTRIBUTORDETAIL_TEMP
					WHERE T1.FINREFERENCE = T1.FINREFERENCE AND T1.CONTRIBUTORBASENO = T1.CONTRIBUTORBASENO)
			]]>
		</createView>
	</changeSet>
	<changeSet id="16_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontributordetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="17_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'subventionscheduledetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="17" author="murthy.y">
		<createView viewName="SUBVENTIONSCHEDULEDETAIL_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T2.FINID,
					T2.FINREFERENCE,
				    T1.DISBSEQID,
				    T1.SCHDATE,
				    T1.NOOFDAYS,
				    T1.DISCOUNTEDPFT,
				    T1.PRESENTVALUE,
				    T1.FUTUREVALUE,
				    T1.CLOSINGBAL
				FROM SUBVENTIONSCHEDULEDETAIL_TEMP T1
				INNER JOIN FINANCEMAIN T2 ON T2.FINID = T1.FINID
			]]>
		</createView>
	</changeSet>
	<changeSet id="17_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'subventionscheduledetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="18_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customerfinancedetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="18" author="murthy.y">
		<createView viewName="CUSTOMERFINANCEDETAILS_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.FINID,
					T1.FINREFERENCE,
				    T1.FINBRANCH,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.FINTYPE,
				    T1.FINAMOUNT,
				    T1.DOWNPAYMENT,
				    T1.FEECHARGEAMT,
				    T1.FINSTARTDATE,
				    T1.LASTMNTBY,
				    T1.FINCCY,
				    T1.RECORDTYPE,
				    T1.FINASSETVALUE,
				    T2.CUSTID,
				    T2.CUSTCIF,
				    T2.CUSTSHRTNAME,
				    T3.ROLEDESC PRVROLEDESC,
				    coalesce(T4.ROLEDESC, fn_get_roledesc(T1.NEXTROLECODE)) NEXTROLEDESC,
				    T6.DEPTDESC,
				    T7.USRFNAME,
				    T7.USRLNAME LASTMNTBYUSER,
				    T9.FINTYPEDESC,
				    T9.FINDIVISION LOVDESCFINDIVISION,
				    T1.FIRSTREPAY,
				    T1.NUMBEROFTERMS
				FROM FINANCEMAIN_TEMP T1
				JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				LEFT JOIN SECROLES T3 ON T3.ROLECD = T1.ROLECODE
				LEFT JOIN SECROLES T4 ON T4.ROLECD = T1.NEXTROLECODE
				LEFT JOIN SECUSERS T5 ON T5.USRID = T1.LASTMNTBY
				LEFT JOIN BMTDEPARTMENTS T6 ON T6.DEPTCODE = T5.USRDEPTCODE
				LEFT JOIN SECUSERS T7 ON T1.LASTMNTBY = T7.USRID
				LEFT JOIN RMTFINANCETYPES T9 ON T1.FINTYPE = T9.FINTYPE
			]]>
		</createView>
	</changeSet>
	<changeSet id="18_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customerfinancedetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="19_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'provisions_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="19" author="murthy.y">
		<createView viewName="PROVISIONS_AVIEW" replaceIfExists="true">
			<![CDATA[
				 SELECT PA.ID,
				    FM.FINID,
				    FM.FINREFERENCE,
				    PA.CLOSINGBALANCE,
				    PA.OUTSTANDPRINCIPAL,
				    PA.OUTSTANDPROFIT,
				    PA.PROFITACCRUEDANDDUE,
				    PA.PROFITACCRUEDANDNOTDUE,
				    PA.COLLATERALVALUE,
				    PA.DUEFROMDATE,
				    PA.LASTFULLYPAIDDATE,
				    PA.CURRBUCKET,
				    PA.DUEDAYS,
				    PA.DPD,
				    PA.PROVISIONDATE,
				    PA.PROVISIONEDAMT,
				    PA.ASSETCODE,
				    PA.ASSETSTAGEORDER,
				    PA.NPA,
				    PA.MANUALPROVISION,
				    PA.LINKEDTRANID,
				    PA.CHGLINKEDTRANID,
				    PA.VERSION,
				    PA.LASTMNTBY,
				    PA.LASTMNTON,
				    PA.RECORDSTATUS,
				    PA.ROLECODE,
				    PA.NEXTROLECODE,
				    PA.TASKID,
				    PA.NEXTTASKID,
				    PA.RECORDTYPE,
				    PA.WORKFLOWID,
				    FM.FINTYPE,
				    FM.FINBRANCH,
				    FM.FINISACTIVE,
				    C.CUSTID,
				    C.CUSTCIF,
				    C.CUSTSHRTNAME,
				    PA.NPATEMPLATEID,
				    NP.CODE NPATEMPLATECODE,
				    NP.DESCRIPTION NPATEMPLATEDESC
				FROM PROVISIONS PA
				JOIN FINANCEMAIN FM ON FM.FINID = PA.FINID
				JOIN CUSTOMERS C ON C.CUSTID = FM.CUSTID
				LEFT JOIN NPA_TEMPLATE_TYPES NP ON NP.ID = PA.NPATEMPLATEID
			]]>
		</createView>
	</changeSet>
	<changeSet id="19_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'provisions_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="20_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financechecklistref_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="20" author="murthy.y">
		<createView viewName="FINANCECHECKLISTREF_VIEW" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.questionid,
    t1.answer,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.checklistdesc lovdescquesdesc,
    t3.ansdesc lovdescanswerdesc,
    t1.instructionuid
   from ((financechecklistref_temp t1
     join bmtchecklist t2 on ((t1.questionid = t2.checklistid)))
     join rmtchecklistdetails t3 on (((t1.questionid = t3.checklistid) and (t1.answer = t3.ansseqno))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="20_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financechecklistref_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="21_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'etihadcreditbureaudetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="21" author="murthy.y">
		<createView viewName="ETIHADCREDITBUREAUDETAIL_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T2.FINID,
					T2.FINREFERENCE,
				    T1.BUREAUSCORE,
				    T1.TOTOUTSTANDINGAMT,
				    T1.TOTOVERDUEAMT,
				    T1.DEFAULTCONTRACTS,
				    T1.TOTMONTHLYINST,
				    T1.WORSTCURRPAYDELAY,
				    T1.WORSTPAYDELAY,
				    T1.WORSTSTATUS,
				    T1.OLDCONSTARTDATE,
				    T1.NEWCONSTARTDATE,
				    T1.OTHERBANKFINTYPE,
				    T1.NOOFINQUIRY,
				    T1.NOOFCONTRACTSINST,
				    T1.NOOFCONTRACTSNONINST,
				    T1.NOOFCONTRACTSCREDIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID
				FROM ETIHADCREDITBUREAUDETAIL T1
				JOIN FINANCEMAIN T2 ON T2.FINID = T1.FINID
			]]>
		</createView>
	</changeSet>
	<changeSet id="21_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'etihadcreditbureaudetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="22_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finassetevaluation_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="22" author="murthy.y">
		<createView viewName="FINASSETEVALUATION_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T2.FINID,
					T2.FINREFERENCE,
				    T1.TYPEOFVALUATION,
				    T1.CUSTAWAREVISIT,
				    T1.CUSTREPRENAME,
				    T1.LEASED,
				    T1.TOTALREVENUE,
				    T1.TENANTCONTACTNUM,
				    T1.TENANTAWAREVISIT,
				    T1.REMARKS,
				    T1.PANELFIRM,
				    T1.REUREFERENCE,
				    T1.PROPERTYDESC,
				    T1.VENDORINSTRUCTEDDATE,
				    T1.REPORTDELIVEREDDATE,
				    T1.INSPECTIONDATE,
				    T1.FINALREPORTDATE,
				    T1.MARKETVALUEAED,
				    T1.VALUATIONDATE,
				    T1.STATUS,
				    T1.VENDORVALUER,
				    T1.VALUERFEE,
				    T1.CUSTOMERFEE,
				    T1.VALUATIONCOMMENTS,
				    T1.EXPRENTALINCOME,
				    T1.PROPISRENTED,
				    T1.PROPERTYSTATUS,
				    T1.PERCWORKCOMPLETION,
				    T1.ILLEGALDIVALTERATION,
				    T1.NOCREQDEVMUNICIPALITY,
				    T1.REUDECISION,
				    T3.FIELDCODEVALUE VENDORVALUERDESC,
				    T1.UNITVILLASIZE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID
				FROM FINASSETEVALUATION T1
				JOIN FINANCEMAIN T2 ON T2.FINID = T1.FINID
				LEFT JOIN RMTLOVFIELDDETAIL T3 ON T1.VENDORVALUER = T3.FIELDCODEID
			]]>
		</createView>
	</changeSet>
	<changeSet id="22_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finassetevaluation_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="23_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finliabilityreq_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="23" author="murthy.y">
		<createView viewName="finliabilityreq_view" replaceIfExists="true">
			<![CDATA[
				 SELECT T1.ID,
				 	T2.FINID,
				    T2.FINREFERENCE,
				    T1.INITIATEDBY,
				    T1.FINEVENT,
				    T1.INSPAIDSTATUS,
				    T1.INSCLAIMAMOUNT,
				    T1.INSCLAIMREASON,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.FINTYPE,
				    T2.FINBRANCH,
				    T2.FINSTARTDATE,
				    T2.NUMBEROFTERMS,
				    T2.MATURITYDATE,
				    T2.FINCCY,
				    T2.FINAMOUNT,
				    T2.FINASSETVALUE,
				    T4.CUSTCIF,
				    T4.CUSTSHRTNAME,
				    T5.BRANCHDESC,
				    T6.FINDIVISION LOVDESCFINDIVISION
				FROM FINLIABILITYREQ_TEMP T1
				JOIN FINANCEMAIN T2 ON T1.FINID = T2.FINID
				JOIN CUSTOMERS T4 ON T2.CUSTID = T4.CUSTID
				JOIN RMTBRANCHES T5 ON T2.FINBRANCH = T5.BRANCHCODE
				JOIN RMTFINANCETYPES T6 ON T2.FINTYPE = T6.FINTYPE
				UNION ALL
				SELECT T1.ID,
				    T2.FINID,
				    T2.FINREFERENCE,
				    T1.INITIATEDBY,
				    T1.FINEVENT,
				    T1.INSPAIDSTATUS,
				    T1.INSCLAIMAMOUNT,
				    T1.INSCLAIMREASON,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.FINTYPE,
				    T2.FINBRANCH,
				    T2.FINSTARTDATE,
				    T2.NUMBEROFTERMS,
				    T2.MATURITYDATE,
				    T2.FINCCY,
				    T2.FINAMOUNT,
				    T2.FINASSETVALUE,
				    T4.CUSTCIF,
				    T4.CUSTSHRTNAME,
				    T5.BRANCHDESC,
				    T6.FINDIVISION LOVDESCFINDIVISION
				FROM FINLIABILITYREQ T1
				JOIN FINANCEMAIN T2 ON T1.FINID = T2.FINID
				JOIN CUSTOMERS T4 ON T2.CUSTID = T4.CUSTID
				JOIN RMTBRANCHES T5 ON T2.FINBRANCH = T5.BRANCHCODE
				JOIN RMTFINANCETYPES T6 ON T2.FINTYPE = T6.FINTYPE
				WHERE NOT EXISTS (SELECT 1 FROM FINLIABILITYREQ_TEMP
					WHERE FINLIABILITYREQ_TEMP.ID = T1.ID)
			]]>
		</createView>
	</changeSet>
	<changeSet id="23_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finliabilityreq_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="24_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeescheduledetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="24" author="murthy.y">
		<createView viewName="finfeescheduledetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.feeid,
    t1.schdate,
    t1.schamount,
    t1.paidamount,
    t1.osamount,
    t1.waiveramount,
    t1.writeoffamount,
    t2.finreference,
    t2.feetypeid,
    t2.finevent,
    t1.cgst,
    t1.sgst,
    t1.ugst,
    t1.igst
   from (finfeescheduledetail t1
     join finfeedetail t2 on ((t1.feeid = t2.feeid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="24_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeescheduledetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="25_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'adviseuploads_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="25" author="murthy.y">
		<createView viewName="adviseuploads_view" replaceIfExists="true">
			<![CDATA[
				 select t1.adviseid,
    t1.uploadid,
    t1.finreference,
    t1.advisetype,
    t1.feetypecode,
    t1.valuedate,
    t1.adviseamount,
    t1.remarks,
    t1.status,
    t1.reason,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypeid,
    t1.rejectstage
   from (adviseuploads_temp t1
     left join feetypes t2 on (((t2.feetypecode) = (t1.feetypecode))))
union all
 select t1.adviseid,
    t1.uploadid,
    t1.finreference,
    t1.advisetype,
    t1.feetypecode,
    t1.valuedate,
    t1.adviseamount,
    t1.remarks,
    t1.status,
    t1.reason,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypeid,
    t1.rejectstage
   from (adviseuploads t1
     left join feetypes t2 on (((t2.feetypecode) = (t1.feetypecode))))
  where (not (exists ( select 1
           from adviseuploads_temp
          where ((adviseuploads_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="25_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'adviseuploads_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="26_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="26" author="murthy.y">
		<createView viewName="presentmentdetails_view" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ID,
				    T1.PRESENTMENTID,
				    T1.PRESENTMENTREF,
				    T3.FINID,
				    T3.FINREFERENCE,
				    T1.SCHDATE,
				    T1.MANDATEID,
				    T1.SCHAMTDUE,
				    T1.SCHPRIDUE,
				    T1.SCHPFTDUE,
				    T1.SCHFEEDUE,
				    T1.SCHINSDUE,
				    T1.SCHPENALTYDUE,
				    T1.ADVANCEAMT,
				    T1.EXCESSID,
				    T1.ADVISEAMT,
				    T1.PRESENTMENTAMT,
				    T1.EXCLUDEREASON,
				    T1.TDSAMOUNT,
				    T1.BOUNCEID,
				    T1.EMINO,
				    T1.STATUS,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.MANDATETYPE,
				    T3.FINTYPE,
				    T4.FINTYPEDESC,
				    T5.CUSTSHRTNAME CUSTOMERNAME,
				    T1.RECEIPTID,
				    T1.ECSRETURN,
				    T1.ERRORCODE,
				    T1.ERRORDESC,
				    T1.MANUALADVISEID
				FROM PRESENTMENTDETAILS_TEMP T1
				JOIN MANDATES T2 ON T1.MANDATEID = T2.MANDATEID
				JOIN FINANCEMAIN T3 ON T1.FINID = T3.FINID
				JOIN RMTFINANCETYPES T4 ON T3.FINTYPE = T4.FINTYPE
				JOIN CUSTOMERS T5 ON T5.CUSTID = T3.CUSTID
				UNION ALL
				SELECT T1.ID,
				    T1.PRESENTMENTID,
				    T1.PRESENTMENTREF,
				    T3.FINID,
				    T3.FINREFERENCE,
				    T1.SCHDATE,
				    T1.MANDATEID,
				    T1.SCHAMTDUE,
				    T1.SCHPRIDUE,
				    T1.SCHPFTDUE,
				    T1.SCHFEEDUE,
				    T1.SCHINSDUE,
				    T1.SCHPENALTYDUE,
				    T1.ADVANCEAMT,
				    T1.EXCESSID,
				    T1.ADVISEAMT,
				    T1.PRESENTMENTAMT,
				    T1.EXCLUDEREASON,
				    T1.TDSAMOUNT,
				    T1.BOUNCEID,
				    T1.EMINO,
				    T1.STATUS,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.MANDATETYPE,
				    T3.FINTYPE,
				    T4.FINTYPEDESC,
				    T5.CUSTSHRTNAME CUSTOMERNAME,
				    T1.RECEIPTID,
				    T1.ECSRETURN,
				    T1.ERRORCODE,
				    T1.ERRORDESC,
				    T1.MANUALADVISEID
				FROM PRESENTMENTDETAILS T1
				JOIN MANDATES T2 ON T1.MANDATEID = T2.MANDATEID
				JOIN FINANCEMAIN T3 ON T1.FINID = T3.FINID
				JOIN RMTFINANCETYPES T4 ON T3.FINTYPE = T4.FINTYPE
				JOIN CUSTOMERS T5 ON T5.CUSTID = T3.CUSTID
				WHERE NOT EXISTS (SELECT 1 FROM PRESENTMENTDETAILS_TEMP
					WHERE PRESENTMENTDETAILS_TEMP.ID = T1.ID)
			]]>
		</createView>
	</changeSet>
	<changeSet id="26_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="27_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'vasrecording_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="27" author="murthy.y">
		<createView viewName="vasrecording_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.productcode,
    t1.postingagainst,
    t1.primarylinkref,
    t1.vasreference,
    t1.fee,
    t1.renewalfee,
    t1.feepaymentmode,
    t1.valuedate,
    t1.accrualtilldate,
    t1.recurringdate,
    t1.dsaid,
    t1.dmaid,
    t1.fulfilofficerid,
    t1.referralid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.productdesc,
    t3.rofficerdesc dsaiddesc,
    t4.rofficerdesc dmaiddesc,
    t5.rofficerdesc fulfilofficeriddesc,
    t6.rofficerdesc referraliddesc,
    t7.producttype,
    t7.producttypedesc,
    t8.productctg,
    t8.productctgdesc,
    t9.dealername manufacturerdesc,
    t1.vasstatus,
    t1.financeprocess,
    t2.feeaccounting,
    t1.paidamt,
    t1.waivedamt,
    t1.status,
    t1.entitycode,
    t1.oldvasreference,
    t1.remarks,
    t1.reason,
    t1.cancelamt,
    t1.servicereqnumber,
    t1.cancelafterflp,
    t2.freelockperiod flpdays,
    fm.fintype,
    t1.manualadviseid,
    t1.paymentinsid,
    t1.receivableadviseid,
    t1.terminsurancelien,
    t1.providername,
    t1.policynumber,
    t1.medicalapplicable,
    t1.medicalstatus
   from (((((((((vasrecording t1
     left join vasstructure t2 on (((t1.productcode) = (t2.productcode))))
     left join relationshipofficers t3 on (((t1.dsaid) = (t3.rofficercode))))
     left join relationshipofficers t4 on (((t1.dmaid) = (t4.rofficercode))))
     left join relationshipofficers t5 on (((t1.fulfilofficerid) = (t5.rofficercode))))
     left join relationshipofficers t6 on (((t1.referralid) = (t6.rofficercode))))
     join vasproducttype t7 on (((t7.producttype) = (t2.producttype))))
     join vasproductcategory t8 on (((t7.productctg) = (t8.productctg))))
     left join amtvehicledealer t9 on ((t2.manufacturerid = t9.dealerid)))
     left join financemain fm on (((t1.primarylinkref) = (fm.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="27_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'vasrecording_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="28_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'legaldetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="28" author="murthy.y">
		<createView viewName="legaldetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.legalid,
    t1.legalreference,
    t1.loanreference,
    t1.collateralreference,
    t1.branch,
    t1.legaldate,
    t1.schedulelevelarea,
    t1.legaldecision,
    t1.legalremarks,
    t1.propertydetailmodt,
    t1.propertydetailecdate,
    t1.ecpropertyownername,
    t1.active,
    t1.module,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.branchdesc,
    t3.finbranch,
    t4.findivision,
    coalesce(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) requeststage,
    coalesce(t6.propertyownersname, t7.custshrtname) applicantname
   from ((((((legaldetails_temp t1
     join rmtbranches t2 on (((t1.branch) = (t2.branchcode))))
     join financemain_temp t3 on (((t3.finreference) = (t1.loanreference))))
     join rmtfinancetypes t4 on (((t4.fintype) = (t3.fintype))))
     join secroles t5 on (((t5.rolecd) = (t1.nextrolecode))))
     left join ( select ldt1.propertyownersname,
            ldt1.legalid
           from legalapplicantdetails_temp ldt1
          where (ldt1.legalapplicantid = ( select min(ldt2.legalapplicantid) min
                   from legalapplicantdetails_temp ldt2
                  where (ldt2.legalid = ldt1.legalid)))) t6 on ((t6.legalid = t1.legalid)))
     join customers t7 on ((t7.custid = t3.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="28_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'legaldetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="29_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodpenaltyrates_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="29" author="murthy.y">
		<createView viewName="finodpenaltyrates_tview" replaceIfExists="true">
			<![CDATA[
				 select finodpenaltyrates_temp.finreference,
    finodpenaltyrates_temp.fineffectdate,
    finodpenaltyrates_temp.applyodpenalty,
    finodpenaltyrates_temp.odincgrcdays,
    finodpenaltyrates_temp.odchargetype,
    finodpenaltyrates_temp.odgracedays,
    finodpenaltyrates_temp.odchargecalon,
    finodpenaltyrates_temp.odchargeamtorperc,
    finodpenaltyrates_temp.odallowwaiver,
    finodpenaltyrates_temp.odmaxwaiverperc,
    finodpenaltyrates_temp.odrulecode,
    finodpenaltyrates_temp.odmincapamount,
    finodpenaltyrates_temp.odtdsreq
   from finodpenaltyrates_temp
			]]>
		</createView>
	</changeSet>
	<changeSet id="29_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodpenaltyrates_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="30_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemainmaintenance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="30" author="murthy.y">
		<createView viewName="financemainmaintenance_view" replaceIfExists="true">
			<![CDATA[
				SELECT T1.FINID,
					T1.FINREFERENCE,
				    T1.FINTYPE,
				    T1.FINCCY,
				    T1.CALROUNDINGMODE,
				    T1.ROUNDINGTARGET,
				    T1.FINBRANCH,
				    T1.CUSTID,
				    T1.FINSTARTDATE,
				    T1.MATURITYDATE,
				    T1.CLOSINGSTATUS
				FROM FINANCEMAIN_TEMP T1
				UNION ALL
				SELECT T1.FINID,
					T1.FINREFERENCE,
				    T1.FINTYPE,
				    T1.FINCCY,
				    T1.CALROUNDINGMODE,
				    T1.ROUNDINGTARGET,
				    T1.FINBRANCH,
				    T1.CUSTID,
				    T1.FINSTARTDATE,
				    T1.MATURITYDATE,
				    T1.CLOSINGSTATUS
				FROM FINANCEMAIN T1
				WHERE NOT EXISTS (SELECT 1 FROM FINANCEMAIN_TEMP
					WHERE FINANCEMAIN_TEMP.FINREFERENCE = T1.FINREFERENCE)
			]]>
		</createView>
	</changeSet>
	<changeSet id="30_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemainmaintenance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="31_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finmaintaininstructions_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="31" author="murthy.y">
		<createView viewName="finmaintaininstructions_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finmaintainid,
    t1.finreference,
    t1.event,
    t1.tdsapplicable,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from finmaintaininstructions_temp t1
union all
 select t1.finmaintainid,
    t1.finreference,
    t1.event,
    t1.tdsapplicable,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from finmaintaininstructions t1
  where (not (exists ( select 1
           from finmaintaininstructions_temp
          where (finmaintaininstructions_temp.finmaintainid = t1.finmaintainid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="31_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finmaintaininstructions_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="32_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'verification_tv_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="32" author="murthy.y">
		<createView viewName="verification_tv_view" replaceIfExists="true">
			<![CDATA[
				 select tv.verificationid,
    tv.agentcode,
    tv.agentname,
    tv.type,
    tv.verifieddate,
    tv.status,
    cs.collateraltype,
    cs.collateralccy,
    cs.collateralloc,
    tv.reason,
    tv.valuationamount,
    r1.code reasoncode,
    r1.description reasondesc,
    tv.summaryremarks,
    tv.sourceformname,
    tv.verificationformname,
    tv.documentname,
    tv.documentref,
    tv.version,
    tv.lastmntby,
    tv.lastmnton,
    tv.recordstatus,
    tv.rolecode,
    tv.nextrolecode,
    tv.taskid,
    tv.nexttaskid,
    tv.recordtype,
    tv.workflowid,
    tv.observationremarks,
    c.custcif cif,
    v.keyreference,
    v.createdon,
    v.agency,
    a.dealername agencyname,
    a.dealercity agencycity,
    v.custid,
    c.custshrtname custname,
    v.verificationcategory,
    cs.collateralref,
    cpnh.phonenumber contactnumber1,
    cpnl.phonenumber contactnumber2,
    tv.valasperpe,
    tv.finalvalamt,
    tv.decisiononval,
    tv.finalvalremarks,
    fm.productcategory,
    fm.fintype loantype,
    fm.lovdescfintypename lovdescloantypename,
    fm.sourcingbranch,
    fm.lovdescsourcingbranch
   from (((((((((verification_tv_temp tv
     join verifications v on ((v.id = tv.verificationid)))
     join ( select collateralsetup_temp.collateraltype,
            collateralsetup_temp.collateralccy,
            collateralsetup_temp.collateralloc,
            collateralsetup_temp.collateralref
           from collateralsetup_temp
        union
         select csp.collateraltype,
            csp.collateralccy,
            csp.collateralloc,
            csp.collateralref
           from collateralsetup csp
          where (not (exists ( select 1
                   from collateralsetup_temp
                  where ((collateralsetup_temp.collateralref) = (csp.collateralref)))))) cs on (((cs.collateralref) = (v.referencefor))))
     join collateralstructure cst on (((cst.collateraltype) = (cs.collateraltype))))
     left join amtvehicledealer a on ((a.dealerid = v.agency)))
     left join customers c on ((c.custid = v.custid)))
     left join customerphonenumbers cpnh on (((cpnh.phonecustid = c.custid) and (cpnh.phonetypepriority = 5))))
     left join customerphonenumbers cpnl on (((cpnl.phonecustid = c.custid) and (cpnl.phonetypepriority = 4))))
     left join reasons r1 on ((r1.id = tv.reason)))
     join financemain_view fm on (((fm.finreference) = (v.keyreference))))
union all
 select tv.verificationid,
    tv.agentcode,
    tv.agentname,
    tv.type,
    tv.verifieddate,
    tv.status,
    cs.collateraltype,
    cs.collateralccy,
    cs.collateralloc,
    tv.reason,
    tv.valuationamount,
    r1.code reasoncode,
    r1.description reasondesc,
    tv.summaryremarks,
    tv.sourceformname,
    tv.verificationformname,
    tv.documentname,
    tv.documentref,
    tv.version,
    tv.lastmntby,
    tv.lastmnton,
    tv.recordstatus,
    tv.rolecode,
    tv.nextrolecode,
    tv.taskid,
    tv.nexttaskid,
    tv.recordtype,
    tv.workflowid,
    tv.observationremarks,
    c.custcif cif,
    v.keyreference,
    v.createdon,
    v.agency,
    a.dealername agencyname,
    a.dealercity agencycity,
    v.custid,
    c.custshrtname custname,
    v.verificationcategory,
    cs.collateralref,
    cpnh.phonenumber contactnumber1,
    cpnl.phonenumber contactnumber2,
    tv.valasperpe,
    tv.finalvalamt,
    tv.decisiononval,
    tv.finalvalremarks,
    fm.productcategory,
    fm.fintype loantype,
    fm.lovdescfintypename lovdescloantypename,
    fm.sourcingbranch,
    fm.lovdescsourcingbranch
   from (((((((((verification_tv tv
     join verifications v on ((v.id = tv.verificationid)))
     join ( select collateralsetup_temp.collateraltype,
            collateralsetup_temp.collateralccy,
            collateralsetup_temp.collateralloc,
            collateralsetup_temp.collateralref
           from collateralsetup_temp
        union
         select csp.collateraltype,
            csp.collateralccy,
            csp.collateralloc,
            csp.collateralref
           from collateralsetup csp
          where (not (exists ( select 1
                   from collateralsetup_temp
                  where ((collateralsetup_temp.collateralref) = (csp.collateralref)))))) cs on (((cs.collateralref) = (v.referencefor))))
     join collateralstructure cst on (((cst.collateraltype) = (cs.collateraltype))))
     left join amtvehicledealer a on ((a.dealerid = v.agency)))
     left join customers c on ((c.custid = v.custid)))
     left join customerphonenumbers cpnh on (((cpnh.phonecustid = c.custid) and (cpnh.phonetypepriority = 5))))
     left join customerphonenumbers cpnl on (((cpnl.phonecustid = c.custid) and (cpnl.phonetypepriority = 4))))
     left join reasons r1 on ((r1.id = tv.reason)))
     join financemain_view fm on (((fm.finreference) = (v.keyreference))))
  where (not (exists ( select 1
           from verification_tv_temp
          where (verification_tv_temp.verificationid = tv.verificationid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="32_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'verification_tv_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="33_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodcrecovery_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="33" author="murthy.y">
		<createView viewName="finodcrecovery_aview" replaceIfExists="true">
			<![CDATA[
				SELECT T2.FINID,
					T2.FINREFERENCE,
				    T1.FINODSCHDDATE,
				    T1.FINODFOR,
				    T1.MOVEMENTDATE,
				    T1.SEQNO,
				    T1.ODDAYS,
				    T1.FINCURODAMT,
				    T1.FINCURODPRI,
				    T1.FINCURODPFT,
				    T1.PENALTYTYPE,
				    T1.PENALTYCALON,
				    T1.PENALTYAMTPERC,
				    T1.PENALTY,
				    T1.MAXWAIVER,
				    T1.WAIVEDAMT,
				    T1.PENALTYPAID,
				    T1.PENALTYBAL,
				    T2.FINCCY,
				    CASE WHEN (T1.RCDCANDEL = 1 AND T1.PENALTYBAL = 0) THEN 0 ELSE T1.RCDCANDEL END RCDCANDEL
				FROM FINODCRECOVERY T1
				JOIN FINANCEMAIN T2 ON T1.FINID = T2.FINID
			]]>
		</createView>
	</changeSet>
	<changeSet id="33_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodcrecovery_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="34_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_dailyodsmryretail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="34" author="murthy.y">
		<createView viewName="rpt_dailyodsmryretail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.fintype,
    t5.fintypedesc,
    count(t1.finreference) noofaccounts,
    t5.findivision,
    sum(udf_convertcurrency((t1.totalpribal + t1.totalpftbal), (t1.finccy), 'usd')) conexchgoutstandingamt_usd,
    sum(udf_convertcurrency((t1.totalpribal + t1.totalpftbal), (t1.finccy), 'INR')) conexchgoutstandingamt_bhd
   from (finpftdetails t1
     join rmtfinancetypes t5 on (((t5.fintype) = (t1.fintype))))
  where (t1.noodinst > 0)
  group by t1.fintype, t5.fintypedesc, t5.findivision
			]]>
		</createView>
	</changeSet>
	<changeSet id="34_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_dailyodsmryretail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="35_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'chequeheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="35" author="murthy.y">
		<createView viewName="chequeheader_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.noofcheques,
    t1.totalamount,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from chequeheader t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="35_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'chequeheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="36_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="36" author="murthy.y">
		<createView viewName="financemain_tview" replaceIfExists="true">
			<![CDATA[
				SELECT T1.FINID,
				 	T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    ((T1.FINAMOUNT + T1.FEECHARGEAMT) - T1.DOWNPAYMENT) LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME CONNECTORCODE,
				    T40.DEALERCITY CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE BUSINESSVERTICALCODE,
				    BV.DESCRIPTION BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND,
				    T1.REQLOANAMT,
				    T1.REQLOANTENOR,
				    T1.FINOCRREQUIRED,
				    T1.OFFERPRODUCT,
				    T1.OFFERAMOUNT,
				    T1.CUSTSEGMENTATION,
				    T1.BASEPRODUCT,
				    T1.PROCESSTYPE,
				    T1.BUREAUTIMESERIES,
				    T1.CAMPAIGNNAME,
				    T1.EXISTINGLANREFNO,
				    T1.LEADSOURCE,
				    T1.POSOURCE,
				    T1.RSA,
				    T1.VERIFICATION,
				    T1.SOURCINGBRANCH,
				    T1.SOURCHANNELCATEGORY,
				    T1.ASMNAME,
				    T13.BRANCHDESC LOVDESCSOURCINGBRANCH,
				    T1.OFFERID,
				    T1.ENDGRCPERIODAFTRFULLDISB,
				    T1.AUTOINCGRCENDDATE,
				    T1.ALWGRCADJ,
				    T1.PMAY,
				    T1.ALWLOANSPLIT,
				    T1.PARENTREF,
				    T1.LOANSPLITTED,
				    T1.INSTBASEDSCHD,
				    T1.PLANEMIHALWINGRACE,
				    T1.ALLOWSUBVENTION,
				    T1.TDSTYPE,
				    T1.WRITEOFFLOAN,
				    T1.RESTRUCTURE,
				    T1.CALCOFSTEPS,
				    T1.STEPSAPPLIEDFOR,
				    T1.NOOFGRCSTEPS,
				    T1.SCHDVERSION,
				    T1.SUBVENTIONFROM,
				    T1.MANUFACTURERDEALERID,
				    T41.DEALERNAME MANUFACTURERDEALERNAME,
				    T41.CODE MANUFACTURERDEALERCODE
				FROM FINANCEMAIN_TEMP T1
				JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				LEFT JOIN RMTBRANCHES T13 ON T1.SOURCINGBRANCH = T13.BRANCHCODE
				LEFT JOIN FINPFTDETAILS T17 ON T17.FINID = T1.FINID
				LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'elgmethod'
				LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
				LEFT JOIN AMTVEHICLEDEALER T41 ON T1.MANUFACTURERDEALERID = T41.DEALERID
			]]>
		</createView>
	</changeSet>
	<changeSet id="36_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="37_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wifindicativetermdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="37" author="murthy.y">
		<createView viewName="wifindicativetermdetail_view" replaceIfExists="true">
			<![CDATA[
				SELECT T5.FINID,
				 	T5.FINREFERENCE,
				    T1.RPSNNAME,
				    T1.RPSNDESG,
				    T1.CUSTID,
				    T1.FACILITYTYPE,
				    T1.PRICING,
				    T1.REPAYMENTS,
				    T1.LCPERIOD,
				    T1.USANCEPERIOD,
				    T1.SECURITYCLEAN,
				    T1.SECURITYNAME,
				    T1.UTILIZATION,
				    T1.COMMISSION,
				    T1.PURPOSE,
				    T1.GUARANTEE,
				    T1.COVENANTS,
				    T1.DOCUMENTSREQUIRED,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.TENORYEAR,
				    T1.TENORMONTH,
				    T1.TENORDESC,
				    T1.TRANSACTIONTYPE,
				    T1.AGENTBANK,
				    T1.OTHERDETAILS,
				    T1.TOTALFACILITY,
				    T1.TOTALFACILITYCCY,
				    T1.UNDERWRITING,
				    T1.UNDERWRITINGCCY,
				    T1.PROPFINALTAKE,
				    T1.PROPFINALTAKECCY,
				    T2.CUSTSHRTNAME LOVDESCCUSTSHRTNAME,
				    T2.CUSTCIF LOVDESCCUSTCIF,
				    T3.GENDESGDESC LOVDESCRPSNDESGNAME,
				    T4.FACILITYDESC LOVDESCFACILITYTYPE,
				    T4.REVOLVING LOVDESCREVOLVING,
				    T5.FINSTARTDATE LOVDESCFINSTARTDATE,
				    T5.MATURITYDATE LOVDESCMATURITYDATE
				FROM WIFINDICATIVETERMDETAIL_TEMP T1
				JOIN WIFFINANCEMAIN_TEMP T5 ON T1.FINID = T5.FINID
				LEFT JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				LEFT JOIN RMTGENDESIGNATIONS T3 ON T3.GENDESIGNATION = T1.RPSNDESG
				LEFT JOIN RMTFACILITYTYPES T4 ON T4.FACILITYTYPE = T1.FACILITYTYPE
				UNION ALL
				SELECT T5.FINID,
					T5.FINREFERENCE,
				    T1.RPSNNAME,
				    T1.RPSNDESG,
				    T1.CUSTID,
				    T1.FACILITYTYPE,
				    T1.PRICING,
				    T1.REPAYMENTS,
				    T1.LCPERIOD,
				    T1.USANCEPERIOD,
				    T1.SECURITYCLEAN,
				    T1.SECURITYNAME,
				    T1.UTILIZATION,
				    T1.COMMISSION,
				    T1.PURPOSE,
				    T1.GUARANTEE,
				    T1.COVENANTS,
				    T1.DOCUMENTSREQUIRED,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.TENORYEAR,
				    T1.TENORMONTH,
				    T1.TENORDESC,
				    T1.TRANSACTIONTYPE,
				    T1.AGENTBANK,
				    T1.OTHERDETAILS,
				    T1.TOTALFACILITY,
				    T1.TOTALFACILITYCCY,
				    T1.UNDERWRITING,
				    T1.UNDERWRITINGCCY,
				    T1.PROPFINALTAKE,
				    T1.PROPFINALTAKECCY,
				    T2.CUSTSHRTNAME LOVDESCCUSTSHRTNAME,
				    T2.CUSTCIF LOVDESCCUSTCIF,
				    T3.GENDESGDESC LOVDESCRPSNDESGNAME,
				    T4.FACILITYDESC LOVDESCFACILITYTYPE,
				    T4.REVOLVING LOVDESCREVOLVING,
				    T5.FINSTARTDATE LOVDESCFINSTARTDATE,
				    T5.MATURITYDATE LOVDESCMATURITYDATE
				FROM WIFINDICATIVETERMDETAIL T1
				JOIN WIFFINANCEMAIN T5 ON T1.FINID = T5.FINID
				LEFT JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				LEFT JOIN RMTGENDESIGNATIONS T3 ON T3.GENDESIGNATION = T1.RPSNDESG
				LEFT JOIN RMTFACILITYTYPES T4 ON T4.FACILITYTYPE = T1.FACILITYTYPE
				WHERE NOT EXISTS (SELECT 1 FROM WIFINDICATIVETERMDETAIL_TEMP
					WHERE WIFINDICATIVETERMDETAIL_TEMP.FINREFERENCE = T1.FINREFERENCE)
			]]>
		</createView>
	</changeSet>
	<changeSet id="37_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wifindicativetermdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="38_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fdview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="38" author="murthy.y">
		<createView viewName="finreceiptheader_fdview" replaceIfExists="true">
			<![CDATA[
				select t1.receiptid,
				    t1.receiptdate,
				    t1.receipttype,
				    t1.recagainst,
				    case when t1.recagainst = 'c' then t10.custcif  else t1.reference
				        end reference,
				    t1.receiptpurpose,
				    t1.receiptmode,
				    t1.excessadjustto,
				    t1.allocationtype,
				    t1.receiptamount,
				    t1.effectschdmethod,
				    t1.receiptmodestatus,
				    t1.subreceiptmode,
				    t1.receiptchannel,
				    t1.receivedfrom,
				    t1.pannumber,
				    t1.collectionagentid,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    coalesce(t2.fintype, t1.fintype) fintype,
				    t2.finbranch,
				    coalesce(t3.custcif, t10.custcif) custcif,
				    coalesce(t3.custshrtname, t10.custshrtname) custshrtname,
				    coalesce(t2.finccy, t14.finccy) finccy,
				    t1.realizationdate,
				    t1.cancelreason,
				    coalesce(t4.fintypedesc, t14.fintypedesc) fintypedesc,
				    t6.branchdesc finbranchdesc,
				    coalesce(t5.ccydesc, t15.ccydesc) finccydesc,
				    t7.rejectdesc cancelreasondesc,
				    coalesce((t2.finisactive)::integer, 0) finisactive,
				    t2.schedulemethod,
				    t2.profitdaysbasis pftdaysbasis,
				    t1.waviedamt,
				    coalesce(t3.custid, t10.custid) custid,
				    t1.totfeeamount,
				    t1.bouncedate,
				    t1.remarks,
				    t1.rcdmaintainsts,
				    t1.depositprocess,
				    t1.depositbranch,
				    t1.lpiamount,
				    t1.lppamount,
				    t1.gstlpiamount,
				    t1.gstlppamount,
				    t1.gdravailable,
				    t1.releasetype,
				    t1.thirdpartyname,
				    t1.thirdpartymobilenum,
				    t2.productcategory,
				    t2.promotioncode,
				    t1.cashierbranch,
				    t2.nextrepayrvwdate,
				    t1.initiatedate,
				    t9.code collectionagentcode,
				    t9.description collectionagentdesc,
				    t1.module,
				    t1.extreference,
				    t10.custcif customercif,
				    t10.custshrtname customername,
				    t1.findivision,
				    t1.postbranch,
				    t11.divisioncodedesc findivisiondesc,
				    t12.branchdesc postbranchdesc,
				    t13.branchdesc cashierbranchdesc,
				    t11.entitycode,
				    t1.instructionuid,
				    t1.actfinreceipt,
				    t1.cancelremarks,
				    t1.refwaiveramt,
				    t1.source,
				    t1.valuedate,
				    t1.transactionref,
				    t1.depositdate,
				    t1.partnerbankid,
				    t1.prvreceiptpurpose,
				    t1.receiptsource,
				    t1.recappdate,
				    t1.receiveddate,
				    t1.knockofftype,
				    t1.sourceoffund,
				    t1.tdsamount,
				    t1.closuretypeid,
				    t16.code closuretypedesc
				   from finreceiptheader_temp t1
				     left join financemain_temp t2 on t1.reference = t2.finreference
				     left join customers t3 on t2.custid = t3.custid
				     left join rmtfinancetypes t4 on t2.fintype = t4.fintype
				     left join rmtcurrencies t5 on t2.finccy = t5.ccycode
				     left join rmtbranches t6 on t2.finbranch = t6.branchcode
				     left join bmtrejectcodes t7 on t1.cancelreason = t7.rejectcode
				     left join collectionagencies t9 on t1.collectionagentid = t9.id
				     left join customers t10 on t10.custid = t1.reference
				     left join smtdivisiondetail t11 on t1.findivision = t11.divisioncode
				     left join rmtbranches t12 on t1.postbranch = t12.branchcode
				     left join rmtbranches t13 on t1.cashierbranch = t13.branchcode
				     left join rmtfinancetypes t14 on t1.fintype = t14.fintype
				     left join rmtcurrencies t15 on t14.finccy = t15.ccycode
				     left join closure_types t16 on t16.id = t1.closuretypeid
			]]>
		</createView>
	</changeSet>
	<changeSet id="38_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fdview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="39_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincomminventoryenq_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="39" author="murthy.y">
		<createView viewName="fincomminventoryenq_view" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    				c.custshrtname lovdesccustshrtname,
    				c.custcif lovdesccustcif
   				from ((select fm1.finid, fm1.finreference, fm1.custid, fm1.finccy from financemain fm1
        			union all
         			select fmt.finid, fmt.finreference, fmt.custid, fmt.finccy from financemain_temp fmt
        			union all
         			select rfm.finid, rfm.finreference, rfm.custid, rfm.finccy  from rejectfinancemain rfm) fm
     			join customers c on ((fm.custid = c.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="39_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincomminventoryenq_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="40_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mandates_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="40" author="murthy.y">
		<createView viewName="mandates_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.mandateid,
    t1.custid,
    t1.mandateref,
    t1.mandatetype,
    t1.bankbranchid,
    t1.accnumber,
    t1.accholdername,
    t1.jointaccholdername,
    t1.acctype,
    t1.openmandate,
    t1.startdate,
    t1.expirydate,
    t1.maxlimit,
    t1.periodicity,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.status,
    t1.approvalid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.reason,
    t1.mandateccy,
    t2.custcif,
    t2.custshrtname,
    t3.bankcode,
    t3.branchcode,
    t3.branchdesc,
    t3.micr,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.inputdate,
    t1.inputdate fromdate,
    t1.inputdate todate,
    t1.active,
    t1.defaultmandate,
    1 useexisting,
    t1.orgreference,
    t5.pccityname,
    t1.documentname,
    t1.documentref,
    t1.externalref,
    t1.entitycode,
    t6.entitydesc,
    t1.primarymandateid,
    t1.swapisactive,
    t1.barcodenumber,
    t7.partnerbankcode,
    t7.partnerbankname,
    t1.partnerbankid,
    t1.emandatesource,
    t1.emandatereferenceno,
    t8.fintype
   from (((((((mandates t1
     join customers t2 on ((t1.custid = t2.custid)))
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t4 on (((t3.bankcode) = (t4.bankcode))))
     left join rmtprovincevscity t5 on (((t3.city) = (t5.pccity))))
     left join entity t6 on (((t1.entitycode) = (t6.entitycode))))
     left join partnerbanks t7 on ((t1.partnerbankid = t7.partnerbankid)))
     left join financemain t8 on (((t1.orgreference) = (t8.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="40_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mandates_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="41_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'postings_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="41" author="murthy.y">
		<createView viewName="postings_view" replaceIfExists="true">
			<![CDATA[
				 select t1.linkedtranid,
    t1.postref,
    t1.postingid,
    t1.finreference,
    t1.finevent,
    t1.postdate,
    t1.valuedate,
    t1.appvaluedate,
    t1.appdate,
    t1.trancode,
    t1.revtrancode,
    t1.drorcr,
    t1.account,
    t1.postamount,
    t1.poststatus,
    t1.errorid,
    t1.errormsg,
    t2.aeeventcodedesc lovdesceventcodename,
    t1.shadowposting,
    t1.trandesc,
    t1.amounttype,
    t1.acccy,
    t1.postbranch,
    t1.userbranch,
    t1.tranorderid,
    t1.transorder
   from ((postings t1
     join bmtaeevents t2 on (((t1.finevent) = (t2.aeeventcode))))
     join ( select financemain.finreference
           from financemain
        union
         select financemain_temp.finreference
           from financemain_temp) t3 on (((t3.finreference) = (t1.finreference))))
  where ((t1.finevent) <> all (array[('vasfee'), ('jvpost')]))
union all
 select t1.linkedtranid,
    t1.postref,
    t1.postingid,
    t3.primarylinkref finreference,
    t1.finevent,
    t1.postdate,
    t1.valuedate,
    t1.appvaluedate,
    t1.appdate,
    t1.trancode,
    t1.revtrancode,
    t1.drorcr,
    t1.account,
    t1.postamount,
    t1.poststatus,
    t1.errorid,
    t1.errormsg,
    t2.aeeventcodedesc lovdesceventcodename,
    t1.shadowposting,
    t1.trandesc,
    t1.amounttype,
    t1.acccy,
    t1.postbranch,
    t1.userbranch,
    t1.tranorderid,
    t1.transorder
   from ((postings t1
     join bmtaeevents t2 on (((t1.finevent) = (t2.aeeventcode))))
     join vasrecording t3 on (((t3.vasreference) = (t1.finreference))))
  where ((t1.finevent) = 'vasfee')
union all
 select t1.linkedtranid,
    t1.postref,
    t1.postingid,
    t3.reference finreference,
    t1.finevent,
    t1.postdate,
    t1.valuedate,
    t1.appvaluedate,
    t1.appdate,
    t1.trancode,
    t1.revtrancode,
    t1.drorcr,
    t1.account,
    t1.postamount,
    t1.poststatus,
    t1.errorid,
    t1.errormsg,
    t2.aeeventcodedesc lovdesceventcodename,
    t1.shadowposting,
    t1.trandesc,
    t1.amounttype,
    t1.acccy,
    t1.postbranch,
    t1.userbranch,
    t1.tranorderid,
    t1.transorder
   from (((postings t1
     join bmtaeevents t2 on (((t1.finevent) = (t2.aeeventcode))))
     join jvpostings t3 on ((((t3.batchreference)(20)) = (t1.finreference))))
     join financemain t4 on (((t3.reference) = (t4.finreference))))
  where ((t1.finevent) = 'jvpost')
union all
 select t1.linkedtranid,
    t1.postref,
    t1.postingid,
    t4.finreference,
    t1.finevent,
    t1.postdate,
    t1.valuedate,
    t1.appvaluedate,
    t1.appdate,
    t1.trancode,
    t1.revtrancode,
    t1.drorcr,
    t1.account,
    t1.postamount,
    t1.poststatus,
    t1.errorid,
    t1.errormsg,
    t2.aeeventcodedesc lovdesceventcodename,
    t1.shadowposting,
    t1.trandesc,
    t1.amounttype,
    t1.acccy,
    t1.postbranch,
    t1.userbranch,
    t1.tranorderid,
    t1.transorder
   from (((postings t1
     join bmtaeevents t2 on (((t1.finevent) = (t2.aeeventcode))))
     join feepostings t3 on ((((t3.postid)(20)) = (t1.finreference))))
     join financemain t4 on (((t3.reference) = (t4.finreference))))
  where ((t1.finevent) = 'manfee')
			]]>
		</createView>
	</changeSet>
	<changeSet id="41_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'postings_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="42_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="42" author="murthy.y">
		<createView viewName="wiffinancemain_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t15.custcif lovdesccustcif,
    t7.fintypedesc lovdescfintypename,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t7.finmaxamount lovdescfinmaxamt,
    t7.finminamount lovdescfinminamount,
    t7.finisalwdifferment lovdescfinalwdeferment,
    t1.mindownpayperc,
    t7.finisdwpayrequired lovdescdwnpayreq,
    t1.recaltype,
    t1.finassetvalue,
    t7.finmaxdifferment lovdescfinmaxdifferment,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.repaymargin,
    t1.grcmargin,
    t1.depreciationfrq,
    t1.fincommitmentref,
    t1.fincurrassetvalue,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.downpaybank,
    t1.downpaysupl,
    t7.findivision lovdescfindivisionname,
    t1.graceterms,
    t14.facilitytype,
    t15.custshrtname lovdesccustshrtname,
    t16.branchdesc lovdescfinbranchname,
    t1.totalgrossgrcpft,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t7.product lovdescfinproduct,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.feeaccountid,
    t1.tdsapplicable,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.feechargeamt,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t1.grcmaxamount,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedtenorrate,
    t1.fixedratetenor,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.cbamount,
    t1.svamount,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.alwgrcadj,
    t1.planemihalwingrace,
    t1.endgrcperiodaftrfulldisb,
    t1.autoincgrcenddate,
    t1.writeoffloan,
    t1.restructure,
    t1.calcofsteps,
    t1.stepsappliedfor,
    t1.noofgrcsteps
   from ((((wiffinancemain_temp t1
     left join wifindicativetermdetail_temp t14 on (((t14.finreference) = (t1.finreference))))
     left join customers t15 on ((t15.custid = t1.custid)))
     join rmtfinancetypes t7 on (((t1.fintype) = (t7.fintype))))
     left join rmtbranches t16 on (((t1.finbranch) = (t16.branchcode))))
union all
 select t1.finreference,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t15.custcif lovdesccustcif,
    t7.fintypedesc lovdescfintypename,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t7.finmaxamount lovdescfinmaxamt,
    t7.finminamount lovdescfinminamount,
    t7.finisalwdifferment lovdescfinalwdeferment,
    t1.mindownpayperc,
    t7.finisdwpayrequired lovdescdwnpayreq,
    t1.recaltype,
    t1.finassetvalue,
    t7.finmaxdifferment lovdescfinmaxdifferment,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.repaymargin,
    t1.grcmargin,
    t1.depreciationfrq,
    t1.fincommitmentref,
    t1.fincurrassetvalue,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.downpaybank,
    t1.downpaysupl,
    t7.findivision lovdescfindivisionname,
    t1.graceterms,
    t14.facilitytype,
    t15.custshrtname lovdesccustshrtname,
    t16.branchdesc lovdescfinbranchname,
    t1.totalgrossgrcpft,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t7.product lovdescfinproduct,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.feeaccountid,
    t1.tdsapplicable,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.feechargeamt,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t1.grcmaxamount,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedtenorrate,
    t1.fixedratetenor,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.cbamount,
    t1.svamount,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.alwgrcadj,
    t1.planemihalwingrace,
    t1.endgrcperiodaftrfulldisb,
    t1.autoincgrcenddate,
    t1.writeoffloan,
    t1.restructure,
    t1.calcofsteps,
    t1.stepsappliedfor,
    t1.noofgrcsteps
   from ((((wiffinancemain t1
     left join wifindicativetermdetail_temp t14 on (((t14.finreference) = (t1.finreference))))
     left join customers t15 on ((t15.custid = t1.custid)))
     join rmtfinancetypes t7 on (((t1.fintype) = (t7.fintype))))
     left join rmtbranches t16 on (((t1.finbranch) = (t16.branchcode))))
  where (not (exists ( select 1
           from wiffinancemain_temp
          where ((wiffinancemain_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="42_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="43_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wifprospectcustomer_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="43" author="murthy.y">
		<createView viewName="wifprospectcustomer_view" replaceIfExists="true">
			<![CDATA[
				 select t3.finreference,
    t1.custid,
    t1.custcif,
    t1.custshrtname,
    t2.custctgcode,
    t1.custdftbranch
   from ((customers t1
     join wifcustomers t2 on (((t1.custcrcpr) = (t2.custcrcpr))))
     join wiffinancemain t3 on ((t2.custid = t3.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="43_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wifprospectcustomer_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="44_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finlegalexpenses_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="44" author="murthy.y">
		<createView viewName="finlegalexpenses_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.expreference,
    t1.customerid,
    t1.bookingdate,
    t1.amount,
    t1.finreference,
    t1.transactiontype,
    t1.remarks,
    t1.recoveredamount,
    t1.amountdue,
    t1.isrecoverdfrommopa,
    t1.totalcharges,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finlegalexpenses t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="44_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finlegalexpenses_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="45_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincovenanttype_eaview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="45" author="murthy.y">
		<createView viewName="fincovenanttype_eaview" replaceIfExists="true">
			<![CDATA[
				 select t.finreference,
    t.custid,
    t.covenanttype,
    t.description,
    t.mandrole,
    t.alwwaiver,
    t.alwpostpone,
    t.alwotc,
    t.postponedays,
    t.covenanttypedesc,
    t.categorycode,
    t.receivabledate,
    t.internaluse,
    t.version,
    t.lastmntby,
    t.lastmnton,
    t.recordstatus,
    t.rolecode,
    t.nextrolecode,
    t.taskid,
    t.nexttaskid,
    t.recordtype,
    t.workflowid,
        case
            when (t.docreceiveddate is null) then cd.lastmnton
            else t.docreceiveddate
        end docreceiveddate,
    t.pddflag,
    t.otcflag
   from (( select t1.finreference,
            t4.custid,
            t1.covenanttype,
            t1.description,
            t1.mandrole,
            t1.alwwaiver,
            t1.alwpostpone,
            t1.alwotc,
            t1.postponedays,
            t3.doctypedesc covenanttypedesc,
            t5.code categorycode,
            t1.receivabledate,
            t1.internaluse,
            t1.version,
            t1.lastmntby,
            t1.lastmnton,
            t1.recordstatus,
            t1.rolecode,
            t1.nextrolecode,
            t1.taskid,
            t1.nexttaskid,
            t1.recordtype,
            t1.workflowid,
            t7.docreceiveddate,
            t3.pdd pddflag,
            t3.otc otcflag
           from ((((fincovenanttype t1
             join bmtdocumenttypes t3 on (((t3.doctypecode) = (t1.covenanttype))))
             left join documentcategory t5 on ((t5.id = t3.categoryid)))
             join financemain t4 on (((t4.finreference) = (t1.finreference))))
             left join documentdetails t7 on ((((t7.referenceid) = (t1.finreference)) and ((t1.covenanttype) = (t7.doccategory)))))) t
     left join customerdocuments cd on (((cd.custid = t.custid) and ((t.covenanttype) = (cd.custdoccategory)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="45_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincovenanttype_eaview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="46_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_emrcounterpartyoddtl_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="46" author="murthy.y">
		<createView viewName="rpt_emrcounterpartyoddtl_view" replaceIfExists="true">
			<![CDATA[
				 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 0 to 7d' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7'::integer) and ((- t1.fincuroddays) <= 0))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 7d to 1m' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-30'::integer) and ((- t1.fincuroddays) < '-7'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1m to 3m' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-90'::integer) and ((- t1.fincuroddays) < '-30'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3m to 6m' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-180'::integer) and ((- t1.fincuroddays) < '-90'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 6m to 1y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-365'::integer) and ((- t1.fincuroddays) < '-180'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1y to 3y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1095'::integer) and ((- t1.fincuroddays) < '-365'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3y to 5y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1825'::integer) and ((- t1.fincuroddays) < '-1095'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 5y to 10y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-3650'::integer) and ((- t1.fincuroddays) < '-1825'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 10y to 20y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7300'::integer) and ((- t1.fincuroddays) < '-3650'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due over 20y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) < '-7300'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'not yet paid' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) > 0))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 0 to 7d' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7'::integer) and ((- t1.fincuroddays) <= 0))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 7d to 1m' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-30'::integer) and ((- t1.fincuroddays) < '-7'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1m to 3m' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-90'::integer) and ((- t1.fincuroddays) < '-30'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3m to 6m' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-180'::integer) and ((- t1.fincuroddays) < '-90'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 6m to 1y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-365'::integer) and ((- t1.fincuroddays) < '-180'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1y to 3y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1095'::integer) and ((- t1.fincuroddays) < '-365'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3y to 5y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1825'::integer) and ((- t1.fincuroddays) < '-1095'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 5y to 10y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-3650'::integer) and ((- t1.fincuroddays) < '-1825'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 10y to 20y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7300'::integer) and ((- t1.fincuroddays) < '-3650'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due over 20y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) < '-7300'::integer))
  group by t3.custtypecode, t4.custtypedesc
union all
 select t3.custtypecode gfctp,
    t4.custtypedesc c4ctd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'not yet paid' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join rmtcusttypes t4 on (((t4.custtypecode) = (t3.custtypecode))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) > 0))
  group by t3.custtypecode, t4.custtypedesc
			]]>
		</createView>
	</changeSet>
	<changeSet id="46_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_emrcounterpartyoddtl_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="47_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontractorastdtls_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="47" author="murthy.y">
		<createView viewName="fincontractorastdtls_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.contractorid,
    t1.custid,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t1.assetdesc,
    t1.assetvalue,
    t1.totclaimamt,
    t1.totadvanceamt,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.contractorname,
    t1.dftretentionperc,
    t1.retentiontilldate
   from (fincontractorastdtls_temp t1
     left join customers t3 on ((t3.custid = t1.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="47_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontractorastdtls_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="48_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkratechangedetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="48" author="murthy.y">
		<createView viewName="bulkratechangedetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.bulkratechangeref,
    t1.finreference,
    t1.finbranch,
    t1.finccy,
    t1.custcif,
    t1.finamount,
    t1.oldprofitrate,
    t1.newprofitrate,
    t1.oldprofit,
    t1.newprofit,
    t1.allowratechange,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.ccyeditfield lovdescfinformatter
   from (bulkratechangedetails_temp t1
     join rmtcurrencies t2 on (((t1.finccy)::bpchar = t2.ccycode)))
union all
 select t1.bulkratechangeref,
    t1.finreference,
    t1.finbranch,
    t1.finccy,
    t1.custcif,
    t1.finamount,
    t1.oldprofitrate,
    t1.newprofitrate,
    t1.oldprofit,
    t1.newprofit,
    t1.allowratechange,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.ccyeditfield lovdescfinformatter
   from (bulkratechangedetails t1
     join rmtcurrencies t2 on (((t1.finccy)::bpchar = t2.ccycode)))
  where (not (exists ( select 1
           from bulkratechangedetails_temp
          where ((bulkratechangedetails_temp.bulkratechangeref) = (t1.bulkratechangeref)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="48_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkratechangedetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="49_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'findisbursementdetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="49" author="murthy.y">
		<createView viewName="findisbursementdetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.disbdate,
    t1.disbseq,
    t1.disbdesc,
    t1.disbaccountid,
    t1.disbamount,
    t1.disbreqdate,
    t1.disbdisbursed,
    t1.disbisactive,
    t1.disbremarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.feechargeamt,
    t1.disbstatus,
    t1.disbtype,
    t1.disbclaim,
    t1.disbexptype,
    t1.disbretperc,
    t1.disbretamount,
    t1.autodisb,
    t1.netadvdue,
    t1.netretdue,
    t1.disbretpaid,
    t1.retpaiddate,
    t2.expencetypename lovdescdisbexptype,
    t1.consultfeefrq,
    t1.consultfeestartdate,
    t1.consultfeeenddate,
    t1.contractorid,
    t1.insuranceamt,
    t1.instructionuid,
    t1.quickdisb,
    t1.instcalreq,
    t1.linkeddisbid
   from (findisbursementdetails_temp t1
     left join amtexpensetype t2 on ((t2.expencetypeid = t1.disbexptype)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="49_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'findisbursementdetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="50_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'depositcheques_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="50" author="murthy.y">
		<createView viewName="depositcheques_view" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.movementid,
    t1.receiptid,
    t1.receiptmode,
    t1.amount,
    t1.linkedtranid,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.receiptpurpose,
    t2.remarks,
    t3.favournumber,
    t3.receiveddate,
    t3.fundingac,
    t4.finreference,
    t5.custshrtname
   from ((((depositcheques_temp t1
     join ( select t.reference,
            t.receiptid,
            t.receiptpurpose,
            t.remarks
           from finreceiptheader_temp t
        union all
         select t.reference,
            t.receiptid,
            t.receiptpurpose,
            t.remarks
           from finreceiptheader t
          where (not (exists ( select 1
                   from finreceiptheader_temp
                  where (finreceiptheader_temp.receiptid = t.receiptid))))) t2 on ((t2.receiptid = t1.receiptid)))
     join ( select t.receiptid,
            t.favournumber,
            t.receiveddate,
            t.fundingac,
            t.paymenttype
           from finreceiptdetail_temp t
        union all
         select t.receiptid,
            t.favournumber,
            t.receiveddate,
            t.fundingac,
            t.paymenttype
           from finreceiptdetail t
          where (not (exists ( select 1
                   from finreceiptdetail_temp
                  where (finreceiptdetail_temp.receiptid = t.receiptid))))) t3 on (((t3.receiptid = t1.receiptid) and ((t3.paymenttype) = (t1.receiptmode)))))
     join financemain t4 on (((t2.reference) = (t4.finreference))))
     join customers t5 on ((t4.custid = t5.custid)))
union all
 select t1.id,
    t1.movementid,
    t1.receiptid,
    t1.receiptmode,
    t1.amount,
    t1.linkedtranid,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.receiptpurpose,
    t2.remarks,
    t3.favournumber,
    t3.receiveddate,
    t3.fundingac,
    t4.finreference,
    t5.custshrtname
   from ((((depositcheques t1
     join ( select t.reference,
            t.receiptid,
            t.receiptpurpose,
            t.remarks
           from finreceiptheader_temp t
        union all
         select t.reference,
            t.receiptid,
            t.receiptpurpose,
            t.remarks
           from finreceiptheader t
          where (not (exists ( select 1
                   from finreceiptheader_temp
                  where (finreceiptheader_temp.receiptid = t.receiptid))))) t2 on ((t2.receiptid = t1.receiptid)))
     join ( select t.receiptid,
            t.favournumber,
            t.receiveddate,
            t.fundingac,
            t.paymenttype
           from finreceiptdetail_temp t
        union all
         select t.receiptid,
            t.favournumber,
            t.receiveddate,
            t.fundingac,
            t.paymenttype
           from finreceiptdetail t
          where (not (exists ( select 1
                   from finreceiptdetail_temp
                  where (finreceiptdetail_temp.receiptid = t.receiptid))))) t3 on (((t3.receiptid = t1.receiptid) and ((t3.paymenttype) = (t1.receiptmode)))))
     join financemain t4 on (((t2.reference) = (t4.finreference))))
     join customers t5 on ((t4.custid = t5.custid)))
  where (not (exists ( select 1
           from depositcheques_temp
          where (depositcheques_temp.id = t1.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="50_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'depositcheques_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="51_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'deviationtracker_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="51" author="murthy.y">
		<createView viewName="deviationtracker_view" replaceIfExists="true">
			<![CDATA[
				 select d.deviationid,
    d.module,
    d.deviationcode,
    d.deviationtype,
    d.deviationvalue,
    d.userrole,
    d.delegationrole,
    d.approvalstatus,
    d.deviationdate,
    d.deviationuserid,
    d.delegateduserid,
    d.finreference,
    c.custcif,
    c.custshrtname
   from ((( select t2.deviationid,
            t2.finreference,
            t2.module,
            t2.deviationcode,
            t2.deviationtype,
            t2.deviationvalue,
            t2.userrole,
            t2.delegationrole,
            t2.approvalstatus,
            t2.deviationdate,
            t2.deviationuserid,
            t2.delegateduserid
           from (( select financedeviations.module,
                    financedeviations.deviationcode,
                    financedeviations.finreference,
                    max(financedeviations.deviationid) maxdeviationid
                   from financedeviations
                  group by financedeviations.module, financedeviations.deviationcode, financedeviations.finreference) t1
             join financedeviations t2 on ((((t1.module) = (t2.module)) and ((t1.deviationcode) = (t2.deviationcode)) and ((t1.finreference) = (t2.finreference)) and (t2.deviationid = t1.maxdeviationid))))) d
     join ( select m.finreference,
            m.custid
           from financemain m
        union
         select t.finreference,
            t.custid
           from financemain_temp t) fm on (((d.finreference) = (fm.finreference))))
     join customers c on ((fm.custid = c.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="51_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'deviationtracker_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="52_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'querydetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="52" author="murthy.y">
		<createView viewName="querydetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.id,
    s1.usrlogin,
    t1.raisedon,
    b1.description,
    t1.qrynotes,
    t1.status,
    t1.raisedby,
    b1.code categorycode,
    b1.description categorydescription,
    t1.categoryid,
    t1.assignedrole,
    t1.notifyto,
    t1.responsnotes,
    t1.responseby,
    s2.usrlogin responseuser,
    t1.responseon,
    t1.closernotes,
    t1.closerby,
    s3.usrlogin closeruser,
    t1.closeron,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.module,
    t1.reference
   from ((((querydetail t1
     join bmtquerycategories b1 on ((t1.categoryid = b1.id)))
     join secusers s1 on ((t1.raisedby = s1.usrid)))
     left join secusers s2 on ((t1.responseby = s2.usrid)))
     left join secusers s3 on ((t1.closerby = s3.usrid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="52_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'querydetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="53_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_topup_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="53" author="murthy.y">
		<createView viewName="dm_topup_details_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference agreementno,
    (t2.applicationno)(8,0) applid,
    t1.fintype productflag,
    null(8,0) top_up_amt,
    null(8,0) x_lan_pos,
    null(16,2) disbursalamount,
    (t1.finamount)(16,2) amtfin,
    now() processeddate,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_next_bus_date'(500)))) businessdate
   from (finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="53_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_topup_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="54_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincustinstdetails_iview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="54" author="murthy.y">
		<createView viewName="fincustinstdetails_iview" replaceIfExists="true">
			<![CDATA[
				 select t2.custtypecode customertype,
    t2.custctgcode,
    t2.phonenumber mobileno,
    t2.custshrtname customername,
    t2.emailid,
    t1.firstrepaydate installmentdate,
    t1.totaltenor noofinstallments,
    t1.nschdpri emiamount,
    t1.finreference,
    ( select customerdocuments.custdoctitle
           from customerdocuments
          where ((customerdocuments.custid = t2.custid) and ((customerdocuments.custdoccategory) = ('01'(500))))) custcrcpr,
    ( select customerdocuments.custdoctitle
           from customerdocuments
          where ((customerdocuments.custid = t2.custid) and ((customerdocuments.custdoccategory) = ('03'(500))))) passportnumber,
    ( select customerdocuments.custdoctitle
           from customerdocuments
          where ((customerdocuments.custid = t2.custid) and ((customerdocuments.custdoccategory) = ('11'(500))))) drivinglicense,
    ( select customerdocuments.custdoctitle
           from customerdocuments
          where ((customerdocuments.custid = t2.custid) and ((customerdocuments.custdoccategory) = ('15'(500))))) tradenumber
   from (finpftdetails t1
     join customers t2 on ((t1.custid = t2.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="54_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincustinstdetails_iview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="55_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_subq_disb_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="55" author="murthy.y">
		<createView viewName="dm_subq_disb_details_view" replaceIfExists="true">
			<![CDATA[
				 select t2.finapproveddate agreementdate,
    "substring"((t2.finreference), '-7'::integer, 7) applid,
    t2.finreference agreementno,
    t3.disbseq disbursementno,
    t3.disbdate disbursementdate,
    null parent_agreementno,
    (t2.finamount / rc.ccyminorccyunits) amtfin,
    null net_amtfin,
    (t3.disbamount / rc.ccyminorccyunits) disbursedamt,
    t3.disbisactive disb_status,
    t1.firstrepaydate first_due_date,
    null gross_tenure,
    null net_tenure,
    t2.maturitydate,
    t2.maturitydate expirydate,
    null no_of_adv_instl,
    null adv_emi_amt,
    t2.firstrepay emi,
    t2.finrepaymethod repayment_mode,
    t2.fintype productflag,
    null promotionid,
    null icici_lombard,
    null bagic,
    null balic_charges,
    null businessdate,
    'n' processed_flag,
    null process_date,
    null segments,
    null fee,
    null dealer_subv,
    null manu_subv_ded,
    null manu_subv_nded,
    null preemi,
    null existing_lanno,
    null mortgage_fee,
    null commitment_fee,
    null processing_fee,
    null pre_emi_receivable,
    null insurance,
    null paymentmode,
    "substring"((t2.repayfrq), 1, 1) freq,
    null chequenum,
    null batch_id
   from (((finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join findisbursementdetails t3 on (((t3.finreference) = (t1.finreference))))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="55_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_subq_disb_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="56_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_loanwise_repayschedule_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="56" author="murthy.y">
		<createView viewName="dm_loanwise_repayschedule_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference agreementno,
    "substring"((t1.finreference), '-7'::integer, 7) agreementid,
    ("substring"((t1.finreference), '-7'::integer, 7) || t2.instnumber) propinstlid,
    t2.instnumber emi_no,
    t2.schdate duedate,
    (t2.balanceforpftcal / rc.ccyminorccyunits) opening_principal,
    (t2.repayamount / rc.ccyminorccyunits) instalment_amt,
    (t2.principalschd / rc.ccyminorccyunits) principal_amt,
    (t2.profitschd / rc.ccyminorccyunits) interest_amt,
    (t2.closingbalance / rc.ccyminorccyunits) closing_principal,
    t2.schdmethod instal_type,
    null total_amount_due,
    (t1.finassetvalue / rc.ccyminorccyunits) dropline_limit,
    ((t1.finassetvalue - t1.fincurrassetvalue) / rc.ccyminorccyunits) act_available_limit,
    (fp.totalprischd / rc.ccyminorccyunits) act_utilisation_limit,
        case
            when ((t2.bpiorholiday) = ('h'(500))) then 'y'
            else 'n'
        end emi_holiday,
    null batch_id,
    null businessdate
   from (((financemain t1
     join finpftdetails fp on (((t1.finreference) = (fp.finreference))))
     join finscheduledetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtcurrencies rc on ((rc.ccycode = t1.finccy)))
  where ((t2.disbonschdate = 0) and (t2.repayamount > (0)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="56_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_loanwise_repayschedule_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="57_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralsmaintenance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="57" author="murthy.y">
		<createView viewName="collateralsmaintenance_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    coalesce(t5.roledesc, fn_get_roledesc(t10.nextrolecode)) lovdescrequeststage,
    t10.finmaintainid,
    t10.event rcdmaintainsts,
    t10.nextrolecode,
    t10.recordstatus,
    t10.recordtype,
    t1.version
   from ((((((finmaintaininstructions_temp t10
     join financemain t1 on (((t1.finreference) = (t10.finreference))))
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t10.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
  where ((t10.event) = 'collaterals')
union all
 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    null lovdescrequeststage,
    null finmaintainid,
    null rcdmaintainsts,
    null nextrolecode,
    null recordstatus,
    null recordtype,
    t1.version
   from (((((financemain t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
  where (not (exists ( select 1 expr1
           from finmaintaininstructions_temp
          where ((finmaintaininstructions_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="57_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralsmaintenance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="58_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkratechangedetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="58" author="murthy.y">
		<createView viewName="bulkratechangedetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.bulkratechangeref,
    t1.finreference,
    t1.finbranch,
    t1.finccy,
    t1.custcif,
    t1.finamount,
    t1.oldprofitrate,
    t1.newprofitrate,
    t1.oldprofit,
    t1.newprofit,
    t1.allowratechange,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.status,
    t1.errormsg,
    t2.ccyeditfield lovdescfinformatter
   from (bulkratechangedetails t1
     join rmtcurrencies t2 on (((t1.finccy)::bpchar = t2.ccycode)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="58_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkratechangedetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="59_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralsetup_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="59" author="murthy.y">
		<createView viewName="collateralsetup_view" replaceIfExists="true">
			<![CDATA[
				 select t1.collateralref,
    t1.finreference,
    t1.depositorid,
    t1.collateraltype,
    t1.collateralccy,
    t1.maxcollateralvalue,
    t1.specialltv,
    t1.collateralloc,
    t1.valuator,
    t1.expirydate,
    t1.reviewfrequency,
    t1.nextreviewdate,
    t1.multiloanassignment,
    t1.thirdpartyassignment,
    t1.remarks,
    t1.collateralvalue,
    t1.bankltv,
    t1.bankvaluation,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.createdby,
    t1.createdon,
    t1.status,
    t2.custcif depositorcif,
    t3.collateraldesc collateraltypename,
    t2.custshrtname depositorname
   from ((collateralsetup_temp t1
     join customers t2 on ((t2.custid = t1.depositorid)))
     join collateralstructure t3 on (((t3.collateraltype) = (t1.collateraltype))))
union all
 select t1.collateralref,
    t1.finreference,
    t1.depositorid,
    t1.collateraltype,
    t1.collateralccy,
    t1.maxcollateralvalue,
    t1.specialltv,
    t1.collateralloc,
    t1.valuator,
    t1.expirydate,
    t1.reviewfrequency,
    t1.nextreviewdate,
    t1.multiloanassignment,
    t1.thirdpartyassignment,
    t1.remarks,
    t1.collateralvalue,
    t1.bankltv,
    t1.bankvaluation,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.createdby,
    t1.createdon,
    t1.status,
    t2.custcif depositorcif,
    t3.collateraldesc collateraltypename,
    t2.custshrtname depositorname
   from ((collateralsetup t1
     join customers t2 on ((t2.custid = t1.depositorid)))
     join collateralstructure t3 on (((t3.collateraltype) = (t1.collateraltype))))
  where (not (exists ( select 1
           from collateralsetup_temp
          where ((collateralsetup_temp.collateralref) = (t1.collateralref)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="59_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralsetup_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="60_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finadvancepayments_adview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="60" author="murthy.y">
		<createView viewName="finadvancepayments_adview" replaceIfExists="true">
			<![CDATA[
				 select t1.paymentid,
    t1.finreference,
    t1.paymentseq,
    t1.disbseq,
    t1.paymentdetail,
    t1.amttobereleased,
    t1.liabilityholdname,
    t1.beneficiaryname,
    t1.beneficiaryaccno,
    t1.description,
    t1.paymenttype,
    t1.bankcode,
    t1.llreferenceno,
    t1.lldate,
    t1.custcontribution,
    t1.sellercontribution,
    t1.remarks,
    t1.payableloc,
    t1.printingloc,
    t1.valuedate,
    t1.bankbranchid,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.clearingdate,
    t1.status,
    t1.active,
    t1.inputdate,
    t1.disbccy,
    t1.poissued,
    t1.partnerbankid,
    t1.linkedtranid,
    t1.transactionref,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.fintype,
    t4.bankcode branchbankcode,
    t4.branchcode,
    t4.branchdesc,
    t4.ifsc,
    t4.city,
    t4.micr,
    t5.bankname branchbankname,
    t6.bankname,
    t7.partnerbankcode,
    t7.partnerbankname,
    t7.actype partnerbankactype,
    t7.accountno partnerbankac,
    t7.filename,
    t7.alwfiledownload,
    t1.holddisbursement
   from (((((finadvancepayments t1
     join financemain t3 on (((t3.finreference) = (t1.finreference))))
     left join bankbranches t4 on ((t1.bankbranchid = t4.bankbranchid)))
     left join bmtbankdetail t5 on (((t5.bankcode) = (t4.bankcode))))
     left join bmtbankdetail t6 on (((t1.bankcode) = (t6.bankcode))))
     left join partnerbanks t7 on ((t7.partnerbankid = t1.partnerbankid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="60_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finadvancepayments_adview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="61_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodcrecovery_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="61" author="murthy.y">
		<createView viewName="finodcrecovery_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.schdate finodschddate,
    t1.schdfor finodfor,
    t3.valuedate movementdate,
    t1.repayschid seqno,
    t1.dayslate oddays,
    (t1.principalschdbal + t1.profitschdbal) fincurodamt,
    t1.principalschdbal fincurodpri,
    t1.profitschdbal fincurodpft,
    t5.odchargetype penaltytype,
    t5.odchargecalon penaltycalon,
    t5.odchargeamtorperc penaltyamtperc,
    t1.penaltyamt penalty,
    t1.maxwaiver,
    t1.waivedamt,
    t1.penaltypaynow penaltypaid,
    ((t1.penaltyamt - t1.penaltypaynow) - t1.waivedamt) penaltybal,
    0 rcdcandel,
    t4.custcif lovdesccustcif,
    t4.custshrtname lovdesccustshrtname,
    t2.finstartdate lovdescfinstartdate,
    t2.maturitydate lovdescmaturitydate,
    t2.finamount lovdescfinamount,
    (t2.finamount - t2.finrepaymentamount) lovdesccurfinamt,
    t2.finccy,
    t5.fincurodpri lovdesccurschpridue,
    t5.fincurodpft lovdesccurschpftdue,
    t5.totpenaltyamt lovdesctotovrduechrg,
    t5.totwaived lovdesctotovrduechrgwaived,
    t5.totpenaltypaid lovdesctotovrduechrgpaid
   from (((((finrepayscheduledetail t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join customers t4 on ((t4.custid = t2.custid)))
     join finrepayheader t3 on ((t1.repayid = t3.repayid)))
     join finreceiptdetail t6 on (((t6.receiptseqid = t3.receiptseqid) and (t6.status <> all (array[('c'(500))::bpchar, ('b'(500))::bpchar])))))
     join finoddetails t5 on ((((t1.finreference) = (t5.finreference)) and (t1.schdate = t5.finodschddate))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="61_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodcrecovery_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="62_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finagreementdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="62" author="murthy.y">
		<createView viewName="finagreementdetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.agrid,
    t1.agrname,
    t1.agrcontent,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.lovdescnamelov lovdescagrname,
    t1.fintype
   from (finagreementdetail_temp t1
     join lmtfinrefdetail_aaview t2 on (((t1.agrid = t2.finrefid) and ((t1.fintype) = (t2.fintype)))))
union all
 select t1.finreference,
    t1.agrid,
    t1.agrname,
    t1.agrcontent,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.lovdescnamelov lovdescagrname,
    t1.fintype
   from (finagreementdetail t1
     join lmtfinrefdetail_aaview t2 on (((t1.agrid = t2.finrefid) and ((t1.fintype) = (t2.fintype)))))
  where (not (exists ( select 1
           from finagreementdetail_temp
          where (((finagreementdetail_temp.finreference) = (t1.finreference)) and (finagreementdetail_temp.agrid = t1.agrid)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="62_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finagreementdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="63_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'manualadvise_lview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="63" author="murthy.y">
		<createView viewName="manualadvise_lview" replaceIfExists="true">
			<![CDATA[
				 select t1.adviseid,
    t1.advisetype,
    t1.finreference,
    t1.feetypeid,
    t1.sequence,
    t1.adviseamount,
    t1.paidamount,
    t1.waivedamount,
    t1.remarks,
    t1.valuedate,
    t1.postdate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypedesc,
    t2.feetypecode,
    t1.bounceid,
    t1.receiptid,
    t3.bouncecode,
    t1.reservedamt,
    t1.balanceamt,
    t3.reason bouncecodedesc,
    coalesce((t2.taxapplicable)::integer, 0) taxapplicable,
    coalesce((t2.tdsreq)::integer, 0) tdsreq,
    t2.taxcomponent,
    t1.paidcgst,
    t1.paidsgst,
    t1.paidigst,
    t1.paidugst,
    t1.waivedcgst,
    t1.waivedsgst,
    t1.waivedugst,
    t1.waivedigst,
    t1.finsource,
    t1.duecreation,
    t1.linkedtranid,
    t1.tdspaid,
    t1.holddue
   from ((manualadvise t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join bouncereasons t3 on ((t1.bounceid = t3.bounceid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="63_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'manualadvise_lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="64_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finlegalexpenses_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="64" author="murthy.y">
		<createView viewName="finlegalexpenses_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.expreference,
    t1.customerid,
    t1.bookingdate,
    t1.amount,
    t1.finreference,
    t1.transactiontype,
    t1.remarks,
    t1.recoveredamount,
    t1.amountdue,
    t1.isrecoverdfrommopa,
    t1.totalcharges,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finlegalexpenses_temp t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="64_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finlegalexpenses_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="65_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'receiptdetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="65" author="murthy.y">
		<createView viewName="receiptdetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t4.custcif,
    t1.reference,
    t3.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t1.bankcode,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.bouncedate canceldate,
    t2.payagainstid,
    t1.bouncedate,
    t1.realizationdate,
    t1.cancelreason,
    t3.closingstatus,
    t3.finbranch,
    t3.fincurrassetvalue,
    t3.productcategory,
    t6.partnerbankcode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.roledesc lovdescrequeststage,
    t1.receiptmode paymenttype,
    t1.receiptmodestatus,
    t1.actfinreceipt,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid fundingac,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype
   from (((((finreceiptheader_temp t1
     left join finreceiptdetail_temp t2 on ((t1.receiptid = t2.receiptid)))
     left join financemain t3 on (((t1.reference) = (t3.finreference))))
     left join customers t4 on ((t3.custid = t4.custid)))
     join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     left join partnerbanks t6 on ((t6.partnerbankid = t2.fundingac)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="65_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'receiptdetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="66_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financepremiumdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="66" author="murthy.y">
		<createView viewName="financepremiumdetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.issuenumber,
    t1.noofunits,
    t1.facevalue,
    t1.premiumtype,
    t1.premiumvalue,
    t1.priceperunit,
    t1.yieldvalue,
    t1.lastcoupondate,
    t1.accruedprofit,
    t1.purchasedate,
    t1.fairvalueperunit,
    t1.fairvalueamount
   from financepremiumdetail_temp t1
union all
 select t1.finreference,
    t1.issuenumber,
    t1.noofunits,
    t1.facevalue,
    t1.premiumtype,
    t1.premiumvalue,
    t1.priceperunit,
    t1.yieldvalue,
    t1.lastcoupondate,
    t1.accruedprofit,
    t1.purchasedate,
    t1.fairvalueperunit,
    t1.fairvalueamount
   from financepremiumdetail t1
  where (not (exists ( select 1
           from financepremiumdetail_temp
          where ((financepremiumdetail_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="66_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financepremiumdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="67_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finocrheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="67" author="murthy.y">
		<createView viewName="finocrheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.ocrid,
    t1.ocrdescription,
    t1.customerportion,
    t1.ocrtype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.totaldemand
   from finocrheader_temp t1
union all
 select t1.headerid,
    t1.finreference,
    t1.ocrid,
    t1.ocrdescription,
    t1.customerportion,
    t1.ocrtype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.totaldemand
   from finocrheader t1
  where (not (exists ( select 1 expr1
           from finocrheader_temp
          where (finocrheader_temp.headerid = t1.headerid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="67_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finocrheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="68_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'pmay_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="68" author="murthy.y">
		<createView viewName="pmay_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.notifiedtown,
    t1.towncode,
    t4.townname,
    t1.centralassistance,
    t1.ownedhouse,
    t1.carpetarea,
    t1.householdannincome,
    t1.balancetransfer,
    t1.primaryapplicant,
    t1.transactionfintype,
    t1.product,
    t1.prprtyownedbywomen,
    t1.watersupply,
    t1.drinage,
    t1.electricity,
    t1.pmaycategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.custcif,
    t3.custshrtname,
    t2.fintype
   from (((pmay_temp t1
     join financemain_view t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     left join towncode t4 on ((t1.towncode = t4.towncode)))
  where (t2.finisactive = 1)
union all
 select t1.finreference,
    t1.notifiedtown,
    t1.towncode,
    t4.townname,
    t1.centralassistance,
    t1.ownedhouse,
    t1.carpetarea,
    t1.householdannincome,
    t1.balancetransfer,
    t1.primaryapplicant,
    t1.transactionfintype,
    t1.product,
    t1.prprtyownedbywomen,
    t1.watersupply,
    t1.drinage,
    t1.electricity,
    t1.pmaycategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.custcif,
    t3.custshrtname,
    t2.fintype
   from (((pmay t1
     join financemain_view t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     left join towncode t4 on ((t1.towncode = t4.towncode)))
  where ((not (exists ( select 1
           from pmay_temp
          where ((pmay_temp.finreference) = (t2.finreference))))) and (t2.finisactive = 1))
			]]>
		</createView>
	</changeSet>
	<changeSet id="68_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'pmay_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="69_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'disb_other_neft_rtgs_export');
			]]>
		</sql>
	</changeSet>
	<changeSet id="69" author="murthy.y">
		<createView viewName="disb_other_neft_rtgs_export" replaceIfExists="true">
			<![CDATA[
				 select disb.paymenttype,
    fm.custid,
    disb.beneficiaryaccno,
    (disb.amttobereleased / (100)) amttobereleased,
    disb.beneficiaryname,
    disb.liabilityholdname,
    disb.payableloc,
    '' beneficiarycity,
    disb.printingloc,
    '' address1,
    '' address2,
    '' address3,
    '' address4,
    '' address5,
    disb.paymentid,
    disb.finreference,
    'bafl@bajajfinserve.com' baflmailid,
    '' paymentdetails1,
    '' paymentdetails2,
    '' paymentdetails3,
    '' paymentdetails4,
    '' paymentdetails5,
    '' paymentdetails6,
    '' paymentdetails7,
    disb.llreferenceno,
    disb.lldate,
    branch.micr,
    branch.ifsc,
    bank.bankname,
    branch.branchdesc,
    bny.email,
    bank.bankcode,
    '' ddcharges
   from ((((finadvancepayments disb
     join financemain fm on (((fm.finreference) = (disb.finreference))))
     left join beneficiary bny on ((((bny.accholdername) = (disb.beneficiaryname)) and ((bny.accnumber) = (disb.beneficiaryaccno)))))
     left join bankbranches branch on ((branch.bankbranchid = disb.bankbranchid)))
     left join bmtbankdetail bank on (((bank.bankcode) = (disb.bankcode))))
  where (((disb.status) = ('approved'(500))) and ((disb.paymenttype) = any (array[('neft'(500)), ('rtgs'(500))])) and ((bank.bankcode) <> ('19'(500))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="69_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'disb_other_neft_rtgs_export');
			]]>
		</sql>
	</changeSet>

	<changeSet id="70_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'agreementfielddetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="70" author="murthy.y">
		<createView viewName="agreementfielddetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.custcity,
    t1.custpobox,
    t1.custcntamt,
    t1.sellername,
    t1.custnationality,
    t1.plotorunitno,
    t1.otherbankname,
    t1.propertytype,
    t1.sectororcommunity,
    t1.finamount,
    t1.proprtydesc,
    t1.propertylocation,
    t1.jointapplicant,
    t1.sellernationality,
    t1.sellerpobox,
    t1.propertyuse,
    t1.plotareainsqft,
    t1.builtupareainsqft,
    t1.ahbbranch,
    t1.fininstitution,
    t1.facilityname,
    t1.sellercntbamt,
    t1.otherbankamt,
    t1.propertyowner,
    t1.collateralauthority,
    t1.collateral1,
    t1.sellerinternal,
    t1.area,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (agreementfielddetails t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="70_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'agreementfielddetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="71_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'feewaiverheader_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="71" author="murthy.y">
		<createView viewName="feewaiverheader_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.waiverid,
    t1.finreference,
    t1.event,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.postingdate,
    t1.valuedate
   from feewaiverheader_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="71_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'feewaiverheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="72_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financedeviations_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="72" author="murthy.y">
		<createView viewName="financedeviations_view" replaceIfExists="true">
			<![CDATA[
				 select t1.deviationid,
    t1.finreference,
    t1.module,
    t1.deviationcode,
    t1.deviationtype,
    t1.userrole,
    t1.deviationvalue,
    t1.delegationrole,
    t1.approvalstatus,
    t1.deviationcategory,
    t1.remarks,
    t1.deviationdesc,
    t1.markdeleted,
    t1.deviationdate,
    t1.deviationuserid,
    t1.delegateduserid,
    t1.raiseduser
   from financedeviations_temp t1
union all
 select t1.deviationid,
    t1.finreference,
    t1.module,
    t1.deviationcode,
    t1.deviationtype,
    t1.userrole,
    t1.deviationvalue,
    t1.delegationrole,
    t1.approvalstatus,
    t1.deviationcategory,
    t1.remarks,
    t1.deviationdesc,
    t1.markdeleted,
    t1.deviationdate,
    t1.deviationuserid,
    t1.delegateduserid,
    t1.raiseduser
   from financedeviations t1
  where (not (exists ( select 1
           from financedeviations_temp
          where (financedeviations_temp.deviationid = t1.deviationid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="72_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financedeviations_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="73_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_send_soa_email_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="73" author="murthy.y">
		<createView viewName="dm_send_soa_email_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference agreementno,
    t1.custid customerid,
    t4.custemail emailid,
    "substring"((t2.finreference), '-7'::integer, 7) agreementid,
    "substring"((t2.finreference), '-7'::integer, 7) processid,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_date'(500)))) generation_date,
    null processed,
    t1.fintype productflag,
    null groupid,
    (t5.activecnt + t6.closecnt) total_lan,
    t6.closecnt total_closed_lan,
    t5.activecnt total_active_lan,
    null swipe_flag,
    null emi_card_no,
    t1.latestdisbdate disbursement_date,
    null supplierid,
    null supplierdesc,
    (t1.totalprischd / rc.ccyminorccyunits) amt_fin,
    (t1.firstrepayamt / rc.ccyminorccyunits) emi,
    t2.nextrepaydate next_emi_due_date,
    null cheque_bounce_charge,
    null batch_id
   from ((((((finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t3.custid = t1.custid)))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
     left join customeremails t4 on (((t4.custid = t3.custid) and (t4.custemailpriority = 5))))
     left join ( select finpftdetails.custid,
            count(*) activecnt
           from finpftdetails
          where (finpftdetails.finisactive = 1)
          group by finpftdetails.custid) t5 on ((t1.custid = t5.custid)))
     left join ( select finpftdetails.custid,
            count(*) closecnt
           from finpftdetails
          where (finpftdetails.finisactive <> 1)
          group by finpftdetails.custid) t6 on ((t1.custid = t6.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="73_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_send_soa_email_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="74_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemainlimitcheck_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="74" author="murthy.y">
		<createView viewName="financemainlimitcheck_aview" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    fm.finbranch,
    fm.finsourceid,
    fm.fintype,
    fm.finccy,
    fm.numberofterms,
    fm.schedulemethod,
    fm.securitycollateral,
    fm.allowrepayrvw,
    fm.finpurpose,
    fm.finassetvalue,
    c.custid,
    c.custdftbranch,
    c.custctgcode,
    c.custtypecode,
    c.custgendercode,
    c.custisstaff,
    c.custindustry,
    c.custsector,
    c.custsubsector,
    c.custempsts,
    c.custmaritalsts,
    c.custsegment,
    c.custsubsegment,
    c.custparentcountry,
    c.custriskcountry,
    c.custnationality,
    c.custaddlvar2,
    ca.custaddrprovince,
    ft.fincategory,
    ft.findivision,
    date_part('month', age(fm.finstartdate, fm.maturitydate)) tenor,
    fm.samplingrequired,
    fm.legalrequired
   from (((financemain fm
     join customers c on ((c.custid = fm.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (fm.fintype))))
     left join customeraddresses ca on (((ca.custid = c.custid) and ((ca.custaddrtype) = ('perm'(500))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="74_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemainlimitcheck_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="75_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finstatusdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="75" author="murthy.y">
		<createView viewName="finstatusdetail_view" replaceIfExists="true">
			<![CDATA[
				 select t.custid,
    t2.custstscode finstatus,
    max(tsubtable.valuedate) valuedate
   from ((( select tmain.custid,
            max(tmain.duedays) maxduedays
           from ( select t1.finreference,
                    t1.valuedate,
                    t1.custid,
                    t1.finstatus,
                    t1.oddays,
                    t2_1.duedays
                   from ((finstatusdetail t1
                     join ( select finstatusdetail.finreference,
                            max(finstatusdetail.valuedate) valuedate
                           from finstatusdetail
                          group by finstatusdetail.finreference) t_1 on ((((t_1.finreference) = (t1.finreference)) and (t_1.valuedate = t1.valuedate))))
                     join bmtcuststatuscodes t2_1 on (((t1.finstatus) = (t2_1.custstscode))))) tmain
          group by tmain.custid) t
     left join bmtcuststatuscodes t2 on ((t.maxduedays = t2.duedays)))
     join ( select t1.finreference,
            t1.valuedate,
            t1.custid,
            t1.finstatus,
            t1.oddays,
            t2_1.duedays
           from ((finstatusdetail t1
             join ( select finstatusdetail.finreference,
                    max(finstatusdetail.valuedate) valuedate
                   from finstatusdetail
                  group by finstatusdetail.finreference) t_1 on ((((t_1.finreference) = (t1.finreference)) and (t_1.valuedate = t1.valuedate))))
             join bmtcuststatuscodes t2_1 on (((t1.finstatus) = (t2_1.custstscode))))) tsubtable on (((t.custid = tsubtable.custid) and (t.maxduedays = tsubtable.duedays))))
  group by t.custid, t2.custstscode
			]]>
		</createView>
	</changeSet>
	<changeSet id="75_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finstatusdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="76_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentment_dwnld_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="76" author="murthy.y">
		<createView viewName="presentment_dwnld_details_view" replaceIfExists="true">
			<![CDATA[
				 select t1.txn_ref,
    t1.entity_code,
    t1.cycle_type,
    t1.instrument_mode,
    t1.presentationdate,
    t1.bank_code,
    t1.product_code,
    t1.customerid,
    t1.agreementno,
    t1.chequeamount,
    t1.emi_no,
    t1.txn_type_code,
    t1.source_code,
    t1.br_code,
    t1.umrn_no,
    t1.bank_name,
    t1.micr_code,
    t1.accountno,
    t1.dest_acc_holder,
    t1.acc_type,
    t1.bank_address,
    t1.resub_flag,
    t1.orgin_system,
    t1.data_gen_date,
    t1.specialhit_file,
    t1.userid,
    t1.batchid,
    t1.job_id,
    t1.pickup_batchid,
    t1.processed_flag,
    t1.accountfield1,
    t1.accountfield2,
    t1.accountfield3,
    t1.cycledate,
    t1.partner_bank,
    t1.ifsc,
    t1.chequeserialno,
    t1.chequedate,
    t4.accholdername
   from ((((((presentment_req_details_temp t1
     join financemain t2 on (((t2.finreference) = (t1.agreementno))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join mandates t4 on ((t4.mandateid = t2.mandateid)))
     join rmtbranches t5 on (((t5.branchcode) = (t2.finbranch))))
     join bankbranches t6 on ((t4.bankbranchid = t6.bankbranchid)))
     join smtdivisiondetail t7 on (((t7.divisioncode) = (t3.findivision))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="76_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentment_dwnld_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="77_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'subventiondetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="77" author="murthy.y">
		<createView viewName="subventiondetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.method,
    t1.type,
    t1.rate,
    t1.periodrate,
    t1.discountrate,
    t1.tenure,
    t1.startdate,
    t1.enddate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from subventiondetails_temp t1
union all
 select t1.finreference,
    t1.method,
    t1.type,
    t1.rate,
    t1.periodrate,
    t1.discountrate,
    t1.tenure,
    t1.startdate,
    t1.enddate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from subventiondetails t1
  where (not (exists ( select 1
           from subventiondetails_temp
          where ((subventiondetails_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="77_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'subventiondetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="78_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'k');
			]]>
		</sql>
	</changeSet>
	<changeSet id="78" author="murthy.y">
		<createView viewName="k" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference agreementno,
    "substring"((t1.finreference), 9, length((t1.finreference))) agreementid,
    null propinstlid,
    t2.instnumber emi_no,
    t2.schdate duedate,
    udf_convertcurrency(t2.balanceforpftcal, (t1.finccy), 'INR') opening_principal,
    udf_convertcurrency(t2.repayamount, (t1.finccy), 'INR') instalment_amt,
    udf_convertcurrency(t2.principalschd, (t1.finccy), 'INR') principal_amt,
    udf_convertcurrency(t2.profitschd, (t1.finccy), 'INR') interest_amt,
    udf_convertcurrency(t2.closingbalance, (t1.finccy), 'INR') closing_principal,
    t2.schdmethod instal_type,
    null total_amount_due,
    udf_convertcurrency(t1.finassetvalue, (t1.finccy), 'INR') dropline_limit,
    udf_convertcurrency((t1.finassetvalue - t1.fincurrassetvalue), (t1.finccy), 'INR') act_available_limit,
    udf_convertcurrency(fp.totalprischd, (t1.finccy), 'INR') act_utilisation_limit,
        case
            when ((t2.bpiorholiday) = ('h'(500))) then 'y'
            else 'n'
        end emi_holiday,
    null batch_id,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_date'(500)))) businessdate
   from ((financemain t1
     join finpftdetails fp on (((t1.finreference) = (fp.finreference))))
     join finscheduledetails t2 on (((t1.finreference) = (t2.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="78_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'k');
			]]>
		</sql>
	</changeSet>

	<changeSet id="79_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finguarantorsdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="79" author="murthy.y">
		<createView viewName="finguarantorsdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.guarantorid,
    t1.finreference,
    t1.bankcustomer,
    t1.guarantorcif,
    t1.guarantoridtype,
    t1.guarantoridnumber,
    t1.guranteepercentage,
    t1.mobileno,
    t1.emailid,
    t1.guarantorproof,
    t1.guarantorproofname,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.guarantorcifname,
    t1.remarks,
    t1.addrhnbr,
    t1.flatnbr,
    t1.addrstreet,
    t1.addrline1,
    t1.addrline2,
    t1.pobox,
    t1.addrcity,
    t1.addrprovince,
    t1.addrcountry,
    t1.addrzip,
    t1.guarantorgendercode,
    ( select bmtidentitytype.identitydesc
           from bmtidentitytype
          where ((bmtidentitytype.identitytype) = (t1.guarantoridtype))) guarantoridtypename,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    coalesce(t3.custid, (0)) custid,
    t3.custshrtname,
    t3.custdob lovcustdob
   from ((finguarantorsdetails_temp t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
     left join customers t3 on (((t1.guarantorcif) = (t3.custcif))))
union all
 select t1.guarantorid,
    t1.finreference,
    t1.bankcustomer,
    t1.guarantorcif,
    t1.guarantoridtype,
    t1.guarantoridnumber,
    t1.guranteepercentage,
    t1.mobileno,
    t1.emailid,
    t1.guarantorproof,
    t1.guarantorproofname,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.guarantorcifname,
    t1.remarks,
    t1.addrhnbr,
    t1.flatnbr,
    t1.addrstreet,
    t1.addrline1,
    t1.addrline2,
    t1.pobox,
    t1.addrcity,
    t1.addrprovince,
    t1.addrcountry,
    t1.addrzip,
    t1.guarantorgendercode,
    ( select bmtidentitytype.identitydesc
           from bmtidentitytype
          where ((bmtidentitytype.identitytype) = (t1.guarantoridtype))) guarantoridtypename,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    coalesce(t3.custid, (0)) custid,
    t3.custshrtname,
    t3.custdob lovcustdob
   from ((finguarantorsdetails t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
     left join customers t3 on (((t1.guarantorcif) = (t3.custcif))))
  where (not (exists ( select 1
           from finguarantorsdetails_temp
          where (finguarantorsdetails_temp.guarantorid = t1.guarantorid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="79_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finguarantorsdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="80_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincollaterals_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="80" author="murthy.y">
		<createView viewName="fincollaterals_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.collateralseq,
    t1.collateraltype,
    t1.custid,
    t1.reference,
    t1.ccy,
    t1.value,
    t1.coverage,
    t1.tenortype,
    t1.tenor,
    t1.rate,
    t1.maturitydate,
    t1.bankname,
    t1.firstchequeno,
    t1.startdate,
    t1.lastchequeno,
    t1.status,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from fincollaterals_temp t1
union all
 select t1.finreference,
    t1.collateralseq,
    t1.collateraltype,
    t1.custid,
    t1.reference,
    t1.ccy,
    t1.value,
    t1.coverage,
    t1.tenortype,
    t1.tenor,
    t1.rate,
    t1.maturitydate,
    t1.bankname,
    t1.firstchequeno,
    t1.startdate,
    t1.lastchequeno,
    t1.status,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from fincollaterals t1
  where (not (exists ( select 1
           from fincollaterals_temp
          where (((fincollaterals_temp.finreference) = (t1.finreference)) and (fincollaterals_temp.collateralseq = t1.collateralseq)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="80_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincollaterals_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="81_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finwaiverheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="81" author="murthy.y">
		<createView viewName="finwaiverheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.waiverid,
    t1.finreference,
    t1.totalwaiver,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t2.finisactive
   from (((((finwaiverheader_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
union all
 select t1.waiverid,
    t1.finreference,
    t1.totalwaiver,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t2.finisactive
   from (((((finwaiverheader_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
  where (not (exists ( select 1
           from finwaiverheader_temp
          where (finwaiverheader_temp.waiverid = t1.waiverid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="81_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finwaiverheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="82_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'linkedfinmaintenance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="82" author="murthy.y">
		<createView viewName="linkedfinmaintenance_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    coalesce(t5.roledesc, fn_get_roledesc(t10.nextrolecode)) lovdescrequeststage,
    t10.finmaintainid,
    t10.event rcdmaintainsts,
    t10.nextrolecode,
    t10.recordstatus,
    t10.recordtype,
    t1.version,
    t11.entitycode
   from (((((((finmaintaininstructions_temp t10
     join financemain t1 on (((t1.finreference) = (t10.finreference))))
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t10.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
     left join smtdivisiondetail t11 on (((t3.findivision) = (t11.divisioncode))))
  where ((t10.event) = 'linkdelink')
union all
 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    null lovdescrequeststage,
    null finmaintainid,
    null rcdmaintainsts,
    null nextrolecode,
    null recordstatus,
    null recordtype,
    t1.version,
    t11.entitycode
   from ((((((financemain t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
     left join smtdivisiondetail t11 on (((t3.findivision) = (t11.divisioncode))))
  where (not (exists ( select 1 expr1
           from finmaintaininstructions_temp
          where ((finmaintaininstructions_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="82_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'linkedfinmaintenance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="83_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finjointacdetails_iview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="83" author="murthy.y">
		<createView viewName="finjointacdetails_iview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.custcif customerno,
    (((t2.custfname) || (t2.custmname)) || (t2.custlname)) customername
   from (finjointaccountdetails t1
     join customers t2 on (((t1.custcif) = (t2.custcif))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="83_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finjointacdetails_iview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="84_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'gl_subheadcodes_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="84" author="murthy.y">
		<createView viewName="gl_subheadcodes_view" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    null entitycode,
    0 alwflexi,
    fm.finbranch,
    null btloan,
    bv.code businessvertical,
    cust.subcategory emptype,
    pc.pccityname branchcity,
    ft.fincollateralreq,
    rf.findivision
   from ((((((financemain_temp fm
     join rmtfinancetypes ft on (((fm.fintype) = (ft.fintype))))
     join customers cust on ((cust.custid = fm.custid)))
     join rmtbranches br on (((br.branchcode) = (fm.finbranch))))
     join rmtprovincevscity pc on (((pc.pccity) = (br.branchcity))))
     left join business_vertical bv on ((bv.id = fm.businessvertical)))
     join rmtfinancetypes rf on (((rf.fintype) = (fm.fintype))))
union all
 select fm.finreference,
    null entitycode,
    0 alwflexi,
    fm.finbranch,
    null btloan,
    bv.code businessvertical,
    cust.subcategory emptype,
    pc.pccityname branchcity,
    ft.fincollateralreq,
    rf.findivision
   from ((((((financemain fm
     join rmtfinancetypes ft on (((fm.fintype) = (ft.fintype))))
     join customers cust on ((cust.custid = fm.custid)))
     join rmtbranches br on (((br.branchcode) = (fm.finbranch))))
     join rmtprovincevscity pc on (((pc.pccity) = (br.branchcity))))
     join business_vertical bv on ((bv.id = fm.businessvertical)))
     join rmtfinancetypes rf on (((rf.fintype) = (fm.fintype))))
  where (not (exists ( select 1
           from financemain_temp
          where ((financemain_temp.finreference) = (fm.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="84_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'gl_subheadcodes_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="85_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finoptionsmaintenance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="85" author="murthy.y">
		<createView viewName="finoptionsmaintenance_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    coalesce(t5.roledesc, fn_get_roledesc(t10.nextrolecode)) lovdescrequeststage,
    t10.finmaintainid,
    t10.event rcdmaintainsts,
    t10.nextrolecode,
    t10.recordstatus,
    t10.recordtype,
    t1.version
   from ((((((finmaintaininstructions_temp t10
     join financemain t1 on (((t1.finreference) = (t10.finreference))))
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t10.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
  where ((t10.event) = 'finoptions')
union all
 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    null lovdescrequeststage,
    null finmaintainid,
    null rcdmaintainsts,
    null nextrolecode,
    null recordstatus,
    null recordtype,
    t1.version
   from (((((financemain t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
  where (not (exists ( select 1 expr1
           from finmaintaininstructions_temp
          where ((finmaintaininstructions_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="85_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finoptionsmaintenance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="86_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentment_pdc_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="86" author="murthy.y">
		<createView viewName="presentment_pdc_details_view" replaceIfExists="true">
			<![CDATA[
				 select t1.txn_ref,
    t1.entity_code,
    t1.cycle_type,
    t1.instrument_mode,
    t1.presentationdate,
    t1.bank_code,
    t1.product_code,
    t1.customerid,
    t1.agreementno,
    t1.chequeamount,
    t1.emi_no,
    t1.txn_type_code,
    t1.source_code,
    t1.br_code,
    t1.umrn_no,
    t1.bank_name,
    t1.micr_code,
    t1.accountno,
    t1.dest_acc_holder,
    t1.acc_type,
    t1.bank_address,
    t1.resub_flag,
    t1.orgin_system,
    t1.data_gen_date,
    t1.specialhit_file,
    t1.userid,
    t1.batchid,
    t1.job_id,
    t1.pickup_batchid,
    t1.processed_flag,
    t1.accountfield1,
    t1.accountfield2,
    t1.accountfield3,
    t1.cycledate,
    t1.partner_bank,
    t1.ifsc,
    t1.chequeserialno,
    t1.chequedate,
    t2.finbranch,
    t8.accholdername,
    t6.branchdesc
   from (((((((presentment_req_details_temp t1
     join financemain t2 on (((t2.finreference) = (t1.agreementno))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join chequeheader t4 on (((t4.finreference) = (t1.agreementno))))
     join chequedetail t8 on (((t8.headerid = t4.headerid) and ((t8.emirefno) = t1.emi_no))))
     join rmtbranches t5 on (((t5.branchcode) = (t2.finbranch))))
     join bankbranches t6 on ((t8.bankbranchid = t6.bankbranchid)))
     join smtdivisiondetail t7 on (((t7.divisioncode) = (t3.findivision))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="86_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentment_pdc_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="87_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'insurancedetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="87" author="murthy.y">
		<createView viewName="insurancedetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.reference,
    t1.finreference,
    t1.startdate,
    t1.enddate,
    t1.term,
    t1.coverageamount,
    t1.policynumber,
    t1.issuancedate,
    t1.issuancestatus,
    t1.partnerpremium,
    t1.partnerreceiveddate,
    t1.awbno1,
    t1.awbno2,
    t1.awbno3,
    t1.dispatchstatus1,
    t1.dispatchstatus2,
    t1.dispatchstatus3,
    t1.reasonofrto1,
    t1.reasonofrto2,
    t1.reasonofrto3,
    t1.dispatchdateattempt1,
    t1.dispatchdateattempt2,
    t1.dispatchdateattempt3,
    t1.medicalstatus,
    t1.pendencyreasoncategory,
    t1.pendencyreason,
    t1.inspendencyresreq,
    t1.fpr,
    t1.policystatus,
    t1.formhandoverdate,
    t1.nomineename,
    t1.nomineerelation,
    t1.vasproviderid,
    t1.reconstatus,
    t1.manualreconremarks,
    t1.manualreconrescategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.linkedtranid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.tolaranceamount,
    fm.fintype,
    vr.postingagainst,
    vr.fee insurancepremium,
    vs.freelockperiod,
    t1.paymentlinkedtranid
   from (((insurancedetails_temp t1
     join vasrecording vr on (((t1.reference) = (vr.vasreference))))
     join vasstructure vs on (((vs.productcode) = (vr.productcode))))
     left join financemain fm on (((t1.finreference) = (fm.finreference))))
union all
 select t1.id,
    t1.reference,
    t1.finreference,
    t1.startdate,
    t1.enddate,
    t1.term,
    t1.coverageamount,
    t1.policynumber,
    t1.issuancedate,
    t1.issuancestatus,
    t1.partnerpremium,
    t1.partnerreceiveddate,
    t1.awbno1,
    t1.awbno2,
    t1.awbno3,
    t1.dispatchstatus1,
    t1.dispatchstatus2,
    t1.dispatchstatus3,
    t1.reasonofrto1,
    t1.reasonofrto2,
    t1.reasonofrto3,
    t1.dispatchdateattempt1,
    t1.dispatchdateattempt2,
    t1.dispatchdateattempt3,
    t1.medicalstatus,
    t1.pendencyreasoncategory,
    t1.pendencyreason,
    t1.inspendencyresreq,
    t1.fpr,
    t1.policystatus,
    t1.formhandoverdate,
    t1.nomineename,
    t1.nomineerelation,
    t1.vasproviderid,
    t1.reconstatus,
    t1.manualreconremarks,
    t1.manualreconrescategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.linkedtranid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.tolaranceamount,
    fm.fintype,
    vr.postingagainst,
    vr.fee insurancepremium,
    vs.freelockperiod,
    t1.paymentlinkedtranid
   from (((insurancedetails t1
     join vasrecording vr on (((t1.reference) = (vr.vasreference))))
     join vasstructure vs on (((vs.productcode) = (vr.productcode))))
     left join financemain fm on (((t1.finreference) = (fm.finreference))))
  where (not (exists ( select 1
           from insurancedetails_temp
          where ((insurancedetails_temp.reference) = (t1.reference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="87_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'insurancedetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="88_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'vasmovementdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="88" author="murthy.y">
		<createView viewName="vasmovementdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.vasmovementid,
    t1.vasmovementdetailid,
    t1.finreference,
    t1.vasreference,
    t1.movementdate,
    t1.movementamt,
    t1.vasprovider,
    t1.vasproduct,
    t1.vasamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from vasmovementdetails_temp t1
union all
 select t1.vasmovementid,
    t1.vasmovementdetailid,
    t1.finreference,
    t1.vasreference,
    t1.movementdate,
    t1.movementamt,
    t1.vasprovider,
    t1.vasproduct,
    t1.vasamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from vasmovementdetails t1
  where (not (exists ( select 1
           from vasmovementdetails_temp
          where ((vasmovementdetails_temp.vasmovementid = t1.vasmovementid) and (vasmovementdetails_temp.vasmovementdetailid = t1.vasmovementdetailid) and ((vasmovementdetails_temp.vasreference) = (t1.vasreference))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="88_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'vasmovementdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="89_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontributorheader_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="89" author="murthy.y">
		<createView viewName="fincontributorheader_tview" replaceIfExists="true">
			<![CDATA[
				 select fincontributorheader_temp.finreference,
    fincontributorheader_temp.mincontributors,
    fincontributorheader_temp.maxcontributors,
    fincontributorheader_temp.mincontributionamt,
    fincontributorheader_temp.maxcontributionamt,
    fincontributorheader_temp.curcontributors,
    fincontributorheader_temp.curcontributionamt,
    fincontributorheader_temp.curbankinvestment,
    fincontributorheader_temp.avgmudaribrate,
    fincontributorheader_temp.alwcontributorstoleave,
    fincontributorheader_temp.alwcontributorstojoin,
    fincontributorheader_temp.version,
    fincontributorheader_temp.lastmntby,
    fincontributorheader_temp.lastmnton,
    fincontributorheader_temp.recordstatus,
    fincontributorheader_temp.rolecode,
    fincontributorheader_temp.nextrolecode,
    fincontributorheader_temp.taskid,
    fincontributorheader_temp.nexttaskid,
    fincontributorheader_temp.recordtype,
    fincontributorheader_temp.workflowid
   from fincontributorheader_temp
			]]>
		</createView>
	</changeSet>
	<changeSet id="89_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontributorheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="90_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'etihadcreditbureaudetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="90" author="murthy.y">
		<createView viewName="etihadcreditbureaudetail_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.bureauscore,
    t1.totoutstandingamt,
    t1.totoverdueamt,
    t1.defaultcontracts,
    t1.totmonthlyinst,
    t1.worstcurrpaydelay,
    t1.worstpaydelay,
    t1.worststatus,
    t1.oldconstartdate,
    t1.newconstartdate,
    t1.otherbankfintype,
    t1.noofinquiry,
    t1.noofcontractsinst,
    t1.noofcontractsnoninst,
    t1.noofcontractscredit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (etihadcreditbureaudetail_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="90_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'etihadcreditbureaudetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="91_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finchangecustomer_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="91" author="murthy.y">
		<createView viewName="finchangecustomer_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.fintype,
    t1.rolecode,
    t1.nextrolecode,
    c.custid oldcustid,
    c.custctgcode custcategory,
    c.custcif
   from (financemain_temp t1
     join customers c on ((t1.custid = c.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="91_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finchangecustomer_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="92_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finsuspenses_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="92" author="murthy.y">
		<createView viewName="finsuspenses_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.custid,
    t1.finsuspseq,
    t1.finisinsusp,
    t1.manualsusp,
    t1.finsuspdate,
    t1.finsuspamt,
    t1.fincursuspamt,
    t2.custcif lovdesccustcifname,
    t2.custshrtname lovdesccustshrtname,
    t3.finccy
   from ((finsusphead t1
     join customers t2 on ((t1.custid = t2.custid)))
     join financemain t3 on (((t1.finreference) = (t3.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="92_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finsuspenses_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="93_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finocrdetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="93" author="murthy.y">
		<createView viewName="finocrdetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.detailid,
    t1.headerid,
    t2.finreference,
    t1.stepsequence,
    t1.customercontribution,
    t1.financercontribution,
    t1.contributor,
    t2.ocrid,
    t2.ocrdescription,
    t2.customerportion,
    t2.ocrtype,
    t2.totaldemand,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finocrdetails t1
     join finocrheader t2 on ((t1.headerid = t2.headerid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="93_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finocrdetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="94_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'psldetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="94" author="murthy.y">
		<createView viewName="psldetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.categorycode,
    t1.weakersection,
    t1.landholding,
    t1.landarea,
    t1.sector,
    t1.amount,
    t1.subcategory,
    t1.purpose,
    t1.enduse,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.description weakersectionname,
    t3.description purposename,
    t4.description endusename,
    t1.eligibleamount,
    t1.loanpurpose,
    t5.loanpurposedesc loanpurposename
   from ((((psldetail t1
     left join pslweakersection t2 on (((t2.code) = (t1.weakersection))))
     left join pslpurpose t3 on (((t3.code) = (t1.purpose))))
     left join pslenduse t4 on (((t4.code) = (t1.enduse))))
     left join loanpurposes t5 on (((t5.loanpurposecode) = (t1.loanpurpose))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="94_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'psldetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="95_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'restructure_details_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="95" author="murthy.y">
		<createView viewName="restructure_details_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.restructuretype,
    t1.emihldperiod,
    t1.prihldperiod,
    t1.emiperiods,
    t1.totnoofrestructure,
    t1.recalculationtype,
    t1.servicerequestno,
    t1.remark,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.oldbucket,
    t1.newbucket,
    t1.oldemios,
    t1.newemios,
    t1.oldbaltenure,
    t1.newbaltenure,
    t1.oldmaturity,
    t1.newmaturity,
    t1.lastbilleddate,
    t1.lastbilledinstno,
    t1.actloanamount,
    t1.oldtenure,
    t1.newtenure,
    t1.oldinterest,
    t1.newinterest,
    t1.oldmaxunplannedemi,
    t1.newmaxunplannedemi,
    t1.oldavailedunplanemi,
    t1.newavailedunplanemi,
    t1.oldfinalemi,
    t1.newfinalemi,
    t1.tenorchange,
    t1.emirecal,
    t1.restructuredate,
    t1.restructurereason,
    t1.olddpd,
    t1.newdpd,
    t1.oldcpzinterest,
    t1.newcpzinterest,
    t1.emihldstartdate,
    t1.emihldenddate,
    t1.prihldstartdate,
    t1.prihldenddate,
    t1.oldposamount,
    t1.newposamount,
    t1.oldemioverdue,
    t1.newemioverdue,
    t1.bouncecharge,
    t1.oldpenaltyamount,
    t1.newpenaltyamount,
    t1.othercharge,
    t1.restructurecharge,
    t1.appdate,
    t2.rsttypecode,
    t2.rsttypedesc,
    t1.fincurrassetvalue,
    t1.oldextoddays,
    t1.newextoddays,
    t1.repayprofitrate,
    t1.grcmaxamount
   from (restructure_details t1
     join restructure_types t2 on (((t1.restructuretype) = t2.id)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="95_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'restructure_details_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="96_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finexcessamount_lovview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="96" author="murthy.y">
		<createView viewName="finexcessamount_lovview" replaceIfExists="true">
			<![CDATA[
				 select finexcessamount.excessid,
    finexcessamount.finreference,
    finexcessamount.amounttype,
    (round((finexcessamount.amount / (100)), 2))(36,2) amount,
    (round((finexcessamount.utilisedamt / (100)), 2))(36,2) utilisedamt,
    (round((finexcessamount.reservedamt / (100)), 2))(36,2) reservedamt,
    (round((finexcessamount.balanceamt / (100)), 2))(36,2) balanceamt
   from finexcessamount
			]]>
		</createView>
	</changeSet>
	<changeSet id="96_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finexcessamount_lovview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="97_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financeprofitenquiry_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="97" author="murthy.y">
		<createView viewName="financeprofitenquiry_view" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    (fpd.totalpripaid + fpd.totalpribal) totalprischd,
    (fpd.totalpftpaid + fpd.totalpftbal) totalpftschd,
    (((fpd.totalpripaid + fpd.totalpribal) + fpd.totalpftpaid) + fpd.totalpftbal) totaloriginal,
    ((fpd.totalpripaid + fpd.totalpribal) - fpd.tdschdpri) outstandprincipal,
    ((fpd.totalpftpaid + fpd.totalpftbal) - fpd.tdschdpft) outstandprofit,
    (((((fpd.totalpripaid + fpd.totalpribal) - fpd.tdschdpri) + fpd.totalpftpaid) + fpd.totalpftbal) - fpd.tdschdpft) totaloutstanding,
    fpd.totalpripaid schdpripaid,
    fpd.totalpftpaid schdpftpaid,
    (fpd.totalpripaid + fpd.totalpftpaid) totalpaid,
    fpd.totalpribal currentfinanceamount,
    fpd.totalpftbal unpaidprofit,
    (fpd.totalpribal + fpd.totalpftbal) totalunpaid,
    (fpd.totalpftpaid + fpd.pftaccrued) earnedprofit,
    (fpd.totalpftbal - fpd.pftaccrued) unearnedprofit,
    fm.downpayment totaldownpayment,
    fm.downpaybank downpaymenttobank,
    fm.downpaysupl downpaymenttospplier,
    fpd.totalpribal unpaidprincipal,
    fpd.pftaccruesusp profitsuspended,
    fm.finbranch,
    fm.fintype,
    fm.finccy,
    fm.numberofterms,
    fm.maturitydate,
    fm.finstartdate,
    fm.lastrepaydate finlastrepaydate,
    fm.repayprofitrate finrate,
    fpd.odprincipal overdueprincipal,
    fpd.odprofit overdueprofit,
    (fpd.odprincipal + fpd.odprofit) totaloverdue,
    (fpd.odprincipal + fpd.odprofit) overdueinstlementpft,
    fpd.noodinst overdueinstlments,
    fpd.nopaidinst paidinstlments,
    fpd.custcif
   from (financemain fm
     join finpftdetails fpd on (((fm.finreference) = (fpd.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="97_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financeprofitenquiry_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="98_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'depositcheques_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="98" author="murthy.y">
		<createView viewName="depositcheques_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.movementid,
    t1.receiptid,
    t1.receiptmode,
    t1.amount,
    t1.linkedtranid,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.receiptpurpose,
    t2.remarks,
    t3.favournumber,
    t3.receiveddate,
    t3.fundingac,
    t4.finreference,
    t5.custshrtname
   from ((((depositcheques_temp t1
     join ( select t.reference,
            t.receiptid,
            t.receiptpurpose,
            t.remarks
           from finreceiptheader_temp t
        union all
         select t.reference,
            t.receiptid,
            t.receiptpurpose,
            t.remarks
           from finreceiptheader t
          where (not (exists ( select 1
                   from finreceiptheader_temp
                  where (finreceiptheader_temp.receiptid = t.receiptid))))) t2 on ((t2.receiptid = t1.receiptid)))
     join ( select t.receiptid,
            t.favournumber,
            t.receiveddate,
            t.fundingac,
            t.paymenttype
           from finreceiptdetail_temp t
        union all
         select t.receiptid,
            t.favournumber,
            t.receiveddate,
            t.fundingac,
            t.paymenttype
           from finreceiptdetail t
          where (not (exists ( select 1
                   from finreceiptdetail_temp
                  where (finreceiptdetail_temp.receiptid = t.receiptid))))) t3 on (((t3.receiptid = t1.receiptid) and ((t3.paymenttype) = (t1.receiptmode)))))
     join financemain t4 on (((t2.reference) = (t4.finreference))))
     join customers t5 on ((t4.custid = t5.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="98_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'depositcheques_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="99_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finassetevaluation_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="99" author="murthy.y">
		<createView viewName="finassetevaluation_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.typeofvaluation,
    t1.custawarevisit,
    t1.custreprename,
    t1.leased,
    t1.totalrevenue,
    t1.tenantcontactnum,
    t1.tenantawarevisit,
    t1.remarks,
    t1.panelfirm,
    t1.reureference,
    t1.propertydesc,
    t1.vendorinstructeddate,
    t1.reportdelivereddate,
    t1.inspectiondate,
    t1.finalreportdate,
    t1.marketvalueaed,
    t1.valuationdate,
    t1.status,
    t1.vendorvaluer,
    t1.valuerfee,
    t1.customerfee,
    t1.valuationcomments,
    t1.exprentalincome,
    t1.propisrented,
    t1.propertystatus,
    t1.percworkcompletion,
    t1.illegaldivalteration,
    t1.nocreqdevmunicipality,
    t1.reudecision,
    t3.fieldcodevalue vendorvaluerdesc,
    t1.unitvillasize,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finassetevaluation_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
     left join rmtlovfielddetail t3 on ((t1.vendorvaluer = t3.fieldcodeid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="99_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finassetevaluation_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="100_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'findefermentheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="100" author="murthy.y">
		<createView viewName="findefermentheader_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.defrecaltype,
    t1.deftilldate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from findefermentheader t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="100_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'findefermentheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="101_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentment_req_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="101" author="murthy.y">
		<createView viewName="presentment_req_details_view" replaceIfExists="true">
			<![CDATA[
				 select t1.txn_ref,
    t1.entity_code,
    t1.cycle_type,
    t1.instrument_mode,
    t1.presentationdate,
    t1.bank_code,
    t1.product_code,
    t1.customerid,
    t1.agreementno,
    t1.chequeamount,
    t1.emi_no,
    t1.txn_type_code,
    t1.source_code,
    t1.br_code,
    t1.umrn_no,
    t1.bank_name,
    t1.micr_code,
    t1.accountno,
    t1.dest_acc_holder,
    t1.acc_type,
    t1.bank_address,
    t1.resub_flag,
    t1.orgin_system,
    t1.data_gen_date,
    t1.specialhit_file,
    t1.userid,
    t1.batchid,
    t1.job_id,
    t1.pickup_batchid,
    t1.processed_flag,
    t1.accountfield1,
    t1.accountfield2,
    t1.accountfield3,
    t1.cycledate,
    t1.partner_bank,
    t1.ifsc,
    t1.chequeserialno,
    t1.chequedate,
    (((t1.agreementno) || '|') || (t1.batchid)) agreementnowithbatchid,
    t3.accholdername,
    t1.utilitycode usernumber
   from ((presentment_req_details_temp t1
     left join chequeheader t2 on (((t2.finreference) = (t1.agreementno))))
     left join chequedetail t3 on (((t3.headerid = t2.headerid) and ((t1.chequeserialno) = (t3.chequeserialno)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="101_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentment_req_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="102_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finunpaidrepayments_iview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="102" author="murthy.y">
		<createView viewName="finunpaidrepayments_iview" replaceIfExists="true">
			<![CDATA[
				 select temp.repayaccountid,
    temp.fintype,
    temp.finreference,
    temp.schdate,
    temp.finccy,
    temp.repayamount
   from ( select row_number() over (partition by t1.finreference order by t1.schdate) row_num,
            t2.repayaccountid,
            t2.fintype,
            t2.finreference,
            t1.schdate,
            t2.finccy,
            t1.repayamount
           from (finscheduledetails t1
             join financemain t2 on (((t1.finreference) = (t2.finreference))))
          where (((((t1.profitschd - t1.schdpftpaid) + t1.principalschd) - t1.schdpripaid) <> (0)) and (t1.schdate > ( select (smtparameters.sysparmvalue)::date sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = ('app_date'(500))))))) temp
  where (temp.row_num = 1)
			]]>
		</createView>
	</changeSet>
	<changeSet id="102_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finunpaidrepayments_iview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="103_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'gst_financemain_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="103" author="murthy.y">
		<createView viewName="gst_financemain_view" replaceIfExists="true">
			<![CDATA[
				 select distinct t1.finreference,
    t1.fintype
   from (financemain t1
     join gst_invoice_txn t2 on (((t2.loanaccountno) = (t1.finreference))))
union all
 select distinct t1.finreference,
    t1.fintype
   from (rejectfinancemain t1
     join gst_invoice_txn t2 on (((t2.loanaccountno) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="103_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'gst_financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="104_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finprovisions_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="104" author="murthy.y">
		<createView viewName="finprovisions_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.custid,
    t1.provisioncaldate,
    t1.provisionedamt,
    t1.provisionamtcal,
    t1.provisiondue,
    t1.nonformulaprov,
    t1.usenfprov,
    t1.principaldue,
    t1.profitdue,
    t1.autoreleasenfp,
    t1.duefromdate,
    t1.lastfullypaiddate,
    t4.custcif lovdesccustcif,
    t4.custshrtname lovdesccustshrtname,
    t2.finccy,
    t1.version,
    t1.lastmnton,
    t1.lastmntby,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.findivision lovdescfindivision
   from (((finprovisions_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join customers t4 on ((t1.custid = t4.custid)))
     join rmtfinancetypes t5 on (((t2.fintype) = (t5.fintype))))
union all
 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.custid,
    t1.provisioncaldate,
    t1.provisionedamt,
    t1.provisionamtcal,
    t1.provisiondue,
    t1.nonformulaprov,
    t1.usenfprov,
    t1.principaldue,
    t1.profitdue,
    t1.autoreleasenfp,
    t1.duefromdate,
    t1.lastfullypaiddate,
    t4.custcif lovdesccustcif,
    t4.custshrtname lovdesccustshrtname,
    t2.finccy,
    t1.version,
    t1.lastmnton,
    t1.lastmntby,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.findivision lovdescfindivision
   from (((finprovisions t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join customers t4 on ((t1.custid = t4.custid)))
     join rmtfinancetypes t5 on (((t2.fintype) = (t5.fintype))))
  where (not (exists ( select 1
           from finprovisions_temp
          where ((finprovisions_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="104_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finprovisions_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="105_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'chequedetailmaintain_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="105" author="murthy.y">
		<createView viewName="chequedetailmaintain_view" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.noofcheques,
    t1.totalamount,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (chequeheader_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
union all
 select t1.headerid,
    t1.finreference,
    t1.noofcheques,
    t1.totalamount,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (chequeheader t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
  where (not (exists ( select 1
           from chequeheader_temp
          where (chequeheader_temp.headerid = t1.headerid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="105_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'chequedetailmaintain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="106_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontributordetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="106" author="murthy.y">
		<createView viewName="fincontributordetail_aview" replaceIfExists="true">
			<![CDATA[
				 select fincontributordetail.finreference,
    fincontributordetail.contributorbaseno,
    fincontributordetail.contributorname,
    fincontributordetail.contributorinvest,
    fincontributordetail.investaccount,
    fincontributordetail.investdate,
    fincontributordetail.totalinvestperc,
    fincontributordetail.mudaribperc,
    fincontributordetail.version,
    fincontributordetail.lastmntby,
    fincontributordetail.lastmnton,
    fincontributordetail.recordstatus,
    fincontributordetail.rolecode,
    fincontributordetail.nextrolecode,
    fincontributordetail.taskid,
    fincontributordetail.nexttaskid,
    fincontributordetail.recordtype,
    fincontributordetail.workflowid,
    fincontributordetail.custid,
    customers.custcif lovdesccontributorcif,
    fincontributordetail.recorddate
   from (fincontributordetail
     join customers on ((fincontributordetail.custid = customers.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="106_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontributordetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="107_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_pdcaview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="107" author="murthy.y">
		<createView viewName="presentmentdetails_pdcaview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.presentmentid,
    t1.presentmentref,
    t1.finreference,
    t1.schdate,
    t1.mandateid,
    t1.schamtdue,
    t1.schpridue,
    t1.schpftdue,
    t1.schfeedue,
    t1.schinsdue,
    t1.schpenaltydue,
    t1.advanceamt,
    t1.excessid,
    t1.adviseamt,
    t1.presentmentamt,
    t1.excludereason,
    t1.tdsamount,
    t1.bounceid,
    t1.emino,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.chequetype mandatetype,
    t3.fintype,
    t4.fintypedesc,
    t5.custshrtname customername,
    t1.receiptid,
    t1.ecsreturn,
    t1.errorcode,
    t1.errordesc,
    t1.manualadviseid
   from ((((presentmentdetails t1
     join chequedetail t2 on ((t2.chequedetailsid = t1.mandateid)))
     join financemain t3 on (((t1.finreference) = (t3.finreference))))
     join rmtfinancetypes t4 on (((t3.fintype) = (t4.fintype))))
     join customers t5 on ((t5.custid = t3.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="107_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_pdcaview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="108_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finscheduledetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="108" author="murthy.y">
		<createView viewName="finscheduledetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.schseq,
    t1.schdate,
    t1.pftonschdate,
    t1.repayonschdate,
    t1.cpzonschdate,
    t1.rvwonschdate,
    t1.disbonschdate,
    t1.downpaymentonschdate,
    t1.balanceforpftcal,
    t1.baserate,
    t1.splrate,
    t1.actrate,
    t1.noofdays,
    t1.dayfactor,
    t1.profitcalc,
    t1.profitschd,
    t1.principalschd,
    t1.repayamount,
    t1.profitbalance,
    t1.disbamount,
    t1.cpzamount,
    t1.downpaymentamount,
    t1.closingbalance,
    t1.profitfraction,
    t1.prvrepayamount,
    t1.schdpftpaid,
    t1.schpftpaid,
    t1.schdpripaid,
    t1.schpripaid,
    t1.specifier,
    t1.defschddate,
    t1.schdmethod,
    t1.mrgrate,
    t1.calonindrate,
    t1.feechargeamt,
    t1.calculatedrate,
    t1.earlypaidbal,
    t1.earlypaid,
    t1.refundorwaiver,
    t1.writeoffprincipal,
    t1.writeoffprofit,
    t1.orgpft,
    t1.orgpri,
    t1.orgendbal,
    t1.orgplanpft,
    t1.feeschd,
    t1.schdfeepaid,
    t1.schdfeeos,
    t1.insschd,
    t1.schdinspaid,
    t1.advpftrate,
    t1.advprofit,
    t1.advrepayamount,
    t1.advbaserate,
    t1.advmargin,
    t1.advcalrate,
    t1.suplrent,
    t1.incrcost,
    t1.suplrentpaid,
    t1.incrcostpaid,
    t1.rolloveronschdate,
    t1.rolloveramount,
    t1.rolloveramountpaid,
    t1.tdsamount,
    t1.tdspaid,
    t1.pftdaysbasis,
    t1.writeoffins,
    t1.writeoffincrcost,
    t1.writeoffsuplrent,
    t1.writeoffschfee,
    t1.insuranceamt,
    t1.instnumber,
    t1.bpiorholiday,
    t1.frqdate,
    t1.presentmentid,
    t1.partialpaidamt,
    t1.feetax,
    t1.recallock,
    t1.tdsapplicable,
    t1.schdpftwaiver,
    t1.cpzbalance
   from finscheduledetails_temp t1
union all
 select t1.finreference,
    t1.schseq,
    t1.schdate,
    t1.pftonschdate,
    t1.repayonschdate,
    t1.cpzonschdate,
    t1.rvwonschdate,
    t1.disbonschdate,
    t1.downpaymentonschdate,
    t1.balanceforpftcal,
    t1.baserate,
    t1.splrate,
    t1.actrate,
    t1.noofdays,
    t1.dayfactor,
    t1.profitcalc,
    t1.profitschd,
    t1.principalschd,
    t1.repayamount,
    t1.profitbalance,
    t1.disbamount,
    t1.cpzamount,
    t1.downpaymentamount,
    t1.closingbalance,
    t1.profitfraction,
    t1.prvrepayamount,
    t1.schdpftpaid,
    t1.schpftpaid,
    t1.schdpripaid,
    t1.schpripaid,
    t1.specifier,
    t1.defschddate,
    t1.schdmethod,
    t1.mrgrate,
    t1.calonindrate,
    t1.feechargeamt,
    t1.calculatedrate,
    t1.earlypaidbal,
    t1.earlypaid,
    t1.refundorwaiver,
    t1.writeoffprincipal,
    t1.writeoffprofit,
    t1.orgpft,
    t1.orgpri,
    t1.orgendbal,
    t1.orgplanpft,
    t1.feeschd,
    t1.schdfeepaid,
    t1.schdfeeos,
    t1.insschd,
    t1.schdinspaid,
    t1.advpftrate,
    t1.advprofit,
    t1.advrepayamount,
    t1.advbaserate,
    t1.advmargin,
    t1.advcalrate,
    t1.suplrent,
    t1.incrcost,
    t1.suplrentpaid,
    t1.incrcostpaid,
    t1.rolloveronschdate,
    t1.rolloveramount,
    t1.rolloveramountpaid,
    t1.tdsamount,
    t1.tdspaid,
    t1.pftdaysbasis,
    t1.writeoffins,
    t1.writeoffincrcost,
    t1.writeoffsuplrent,
    t1.writeoffschfee,
    t1.insuranceamt,
    t1.instnumber,
    t1.bpiorholiday,
    t1.frqdate,
    t1.presentmentid,
    t1.partialpaidamt,
    t1.feetax,
    t1.recallock,
    t1.tdsapplicable,
    t1.schdpftwaiver,
    t1.cpzbalance
   from finscheduledetails t1
  where (not (exists ( select 1
           from finscheduledetails_temp
          where ((finscheduledetails_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="108_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finscheduledetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="109_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'disb_hdfc_cheque_dd_export');
			]]>
		</sql>
	</changeSet>
	<changeSet id="109" author="murthy.y">
		<createView viewName="disb_hdfc_cheque_dd_export" replaceIfExists="true">
			<![CDATA[
				 select "substring"((finadvpayments.paymenttype), 0, 1) transactiontype,
    beneficiary.custid beneficiarycode,
    finadvpayments.beneficiaryaccno beneficiaryaccountno,
    finadvpayments.amttobereleased instrumentamount,
    finadvpayments.beneficiaryname,
    '' draweelocation,
    '' printlocation,
    '' address1,
    '' address2,
    '' address3,
    '' address4,
    '' address5,
    finadvpayments.finreference instructionrefno,
    finadvpayments.paymentseq customerrefno,
    '' paymentdetails1,
    '' paymentdetails2,
    '' paymentdetails3,
    '' paymentdetails4,
    '' paymentdetails5,
    '' paymentdetails6,
    '' paymentdetails7,
    finadvpayments.llreferenceno chequeno,
    finadvpayments.lldate trndate,
    branches.micr micrnumber,
    branches.ifsc ifsccode,
    bank.bankname bank,
    branches.branchdesc branch,
    beneficiary.email
   from (((finadvancepayments finadvpayments
     left join bankbranches branches on ((finadvpayments.bankbranchid = branches.bankbranchid)))
     join bmtbankdetail bank on (((finadvpayments.bankcode) = (bank.bankcode))))
     left join beneficiary beneficiary on ((((finadvpayments.beneficiaryname) = (beneficiary.accholdername)) and ((finadvpayments.beneficiaryaccno) = (beneficiary.accnumber)))))
  where (((finadvpayments.status) = ('approved'(500))) and ((finadvpayments.paymenttype) = any (array[('cheque'(500)), ('dd'(500))])) and ((bank.bankcode) = ('19'(500))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="109_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'disb_hdfc_cheque_dd_export');
			]]>
		</sql>
	</changeSet>

	<changeSet id="110_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinschfrqinsurance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="110" author="murthy.y">
		<createView viewName="wiffinschfrqinsurance_view" replaceIfExists="true">
			<![CDATA[
				 select t1.insid,
    t3.reference,
    t3.module,
    t3.insurancetype,
    t3.insreference,
    t2.closingbalance,
    t1.insschdate,
    t1.insurancerate,
    t1.insurancefrq,
    t1.amount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((wiffinschfrqinsurance_temp t1
     join wiffininsurances_temp t3 on ((t3.insid = t1.insid)))
     join wiffinscheduledetails_temp t2 on (((t2.schdate = t1.insschdate) and ((t3.reference) = (t2.finreference)))))
union all
 select t1.insid,
    t3.reference,
    t3.module,
    t3.insurancetype,
    t3.insreference,
    t2.closingbalance,
    t1.insschdate,
    t1.insurancerate,
    t1.insurancefrq,
    t1.amount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((wiffinschfrqinsurance t1
     join wiffininsurances t3 on ((t3.insid = t1.insid)))
     join wiffinscheduledetails t2 on (((t2.schdate = t1.insschdate) and ((t3.reference) = (t2.finreference)))))
  where (not (exists ( select 1
           from finschfrqinsurance_temp
          where ((finschfrqinsurance_temp.insid = t1.insid) and (finschfrqinsurance_temp.insschdate = t1.insschdate)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="110_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinschfrqinsurance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="111_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'vasrecording_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="111" author="murthy.y">
		<createView viewName="vasrecording_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.productcode,
    t1.postingagainst,
    t1.primarylinkref,
    t1.vasreference,
    t1.fee,
    t1.renewalfee,
    t1.feepaymentmode,
    t1.valuedate,
    t1.accrualtilldate,
    t1.recurringdate,
    t1.dsaid,
    t1.dmaid,
    t1.fulfilofficerid,
    t1.referralid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.productdesc,
    t3.rofficerdesc dsaiddesc,
    t4.rofficerdesc dmaiddesc,
    t5.rofficerdesc fulfilofficeriddesc,
    t6.rofficerdesc referraliddesc,
    t7.producttype,
    t7.producttypedesc,
    t8.productctg,
    t8.productctgdesc,
    t9.dealername manufacturerdesc,
    t1.vasstatus,
    t1.financeprocess,
    t2.feeaccounting,
    t1.paidamt,
    t1.waivedamt,
    t1.status,
    t1.entitycode,
    t1.oldvasreference,
    t1.remarks,
    t1.reason,
    t1.cancelamt,
    t1.servicereqnumber,
    t1.cancelafterflp,
    t2.freelockperiod flpdays,
    fm.fintype,
    t1.manualadviseid,
    t1.paymentinsid,
    t1.receivableadviseid,
    t1.terminsurancelien,
    t1.providername,
    t1.policynumber,
    t1.medicalapplicable,
    t1.medicalstatus
   from (((((((((vasrecording_temp t1
     left join vasstructure t2 on (((t1.productcode) = (t2.productcode))))
     left join relationshipofficers t3 on (((t1.dsaid) = (t3.rofficercode))))
     left join relationshipofficers t4 on (((t1.dmaid) = (t4.rofficercode))))
     left join relationshipofficers t5 on (((t1.fulfilofficerid) = (t5.rofficercode))))
     left join relationshipofficers t6 on (((t1.referralid) = (t6.rofficercode))))
     join vasproducttype t7 on (((t7.producttype) = (t2.producttype))))
     join vasproductcategory t8 on (((t7.productctg) = (t8.productctg))))
     left join amtvehicledealer t9 on ((t2.manufacturerid = t9.dealerid)))
     left join financemain fm on (((t1.primarylinkref) = (fm.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="111_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'vasrecording_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="112_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'chequeheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="112" author="murthy.y">
		<createView viewName="chequeheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.noofcheques,
    t1.totalamount,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from chequeheader_temp t1
union all
 select t1.headerid,
    t1.finreference,
    t1.noofcheques,
    t1.totalamount,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from chequeheader t1
  where (not (exists ( select 1
           from chequeheader_temp
          where (chequeheader_temp.headerid = t1.headerid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="112_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'chequeheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="113_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'subventiondetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="113" author="murthy.y">
		<createView viewName="subventiondetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.method,
    t1.type,
    t1.rate,
    t1.periodrate,
    t1.discountrate,
    t1.tenure,
    t1.startdate,
    t1.enddate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from subventiondetails t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="113_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'subventiondetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="114_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_disb_details_daily_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="114" author="murthy.y">
		<createView viewName="dm_disb_details_daily_view" replaceIfExists="true">
			<![CDATA[
				 select t2.finapproveddate agreementdate,
    "substring"((t2.finreference), 9, length((t2.finreference))) applid,
    t2.finreference agreementno,
    t3.disbseq disbursementno,
    t3.disbdate disbursementdate,
    null parent_agreementno,
    (t2.finamount / rc.ccyminorccyunits) amtfin,
    (((t2.finamount - t2.downpayment) + t2.feechargeamt) / rc.ccyminorccyunits) net_amtfin,
    (t7.disbamount / rc.ccyminorccyunits) disbursedamt,
        case
            when (t2.finassetvalue = t2.fincurrassetvalue) then 'fully disbursed'
            else 'partially disbursed'
        end disb_status,
    t1.firstrepaydate first_due_date,
    date_part('month', (t2.maturitydate - t2.finstartdate)) gross_tenure,
    t1.noinst net_tenure,
    t2.maturitydate,
    t2.lastrepaydate expirydate,
    null no_of_adv_instl,
    null adv_emi_amt,
    t2.firstrepay emi,
    t2.finrepaymethod repayment_mode,
    t2.fintype productflag,
    p.promotionid,
    null icici_lombard,
    null bagic,
    null balic_charges,
    null businessdate,
    'n' processed_flag,
    null process_date,
    null segments,
    (t9.totalfee / rc.ccyminorccyunits) fee,
    null dealer_subv,
    null manu_subv_ded,
    null manu_subv_nded,
    (t2.bpiamount / rc.ccyminorccyunits) preemi,
    null existing_lanno,
    null mortgage_fee,
    null commitment_fee,
    (t10.proces_fee / rc.ccyminorccyunits) processing_fee,
    null pre_emi_receivable,
    (t2.insuranceamt / rc.ccyminorccyunits) insurance,
    t2.finrepaymethod paymentmode,
        case
            when ("substring"((t2.repayfrq), 1, 1) = 'y') then 'a'
            else "substring"((t2.repayfrq), 1, 1)
        end freq,
    fa.llreferenceno chequenum,
    "substring"((fa.beneficiaryaccno), 1, 16) cust_acct_no,
    t5.bankname,
    t6.micr micrcode,
    null business_year,
    null emi_charge,
    null pdc_charge,
        case
            when (t2.effectiverateofreturn > (999)) then (999)
            else t2.effectiverateofreturn
        end irr_per,
    (t9.totalfee / rc.ccyminorccyunits) fee_wl,
    null elc_charge,
    null credit_vidya_fees,
    null batch_id
   from ((((((((((((financemain t2
     join finpftdetails t1 on (((t1.finreference) = (t2.finreference))))
     join findisbursementdetails t3 on (((t3.finreference) = (t2.finreference))))
     join rmtfinancetypes t4 on (((t4.fintype) = (t2.fintype))))
     left join bankbranches t6 on (((t6.branchcode) = (t2.finbranch))))
     left join bmtbankdetail t5 on (((t5.bankcode) = (t6.bankcode))))
     left join promotions p on (((p.promotioncode) = (t2.promotioncode))))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
     left join ( select findisbursementdetails.finreference,
            sum(findisbursementdetails.disbamount) disbamount
           from findisbursementdetails
          where (findisbursementdetails.disbdate <= ( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = 'app_date')))
          group by findisbursementdetails.finreference) t7 on (((t7.finreference) = (t2.finreference))))
     left join ( select finexcessamount.finreference,
            sum(finexcessamount.balanceamt) balanceamt
           from finexcessamount
          where ((finexcessamount.amounttype) = ('a'::bpchar))
          group by finexcessamount.finreference) t8 on (((t8.finreference) = (t2.finreference))))
     left join ( select finfeedetail.finreference,
            sum((finfeedetail.actualamount - finfeedetail.waivedamount)) totalfee
           from finfeedetail
          group by finfeedetail.finreference) t9 on (((t9.finreference) = (t2.finreference))))
     left join ( select f.finreference,
            sum((f.actualamount - f.waivedamount)) proces_fee
           from (finfeedetail f
             join feetypes ft on ((f.feetypeid = ft.feetypeid)))
          where ((ft.feetypecode) = 'procfee')
          group by f.finreference) t10 on (((t10.finreference) = (t2.finreference))))
     left join ( select fa_1.finreference,
            fa_1.beneficiaryaccno,
            fa_1.llreferenceno
           from (( select finadvancepayments.finreference,
                    max(finadvancepayments.paymentseq) maxpaymentseq
                   from finadvancepayments
                  group by finadvancepayments.finreference) t
             join finadvancepayments fa_1 on ((((fa_1.finreference) = (t.finreference)) and (fa_1.paymentseq = t.maxpaymentseq))))) fa on (((fa.finreference) = (t2.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="114_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_disb_details_daily_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="115_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'receiptdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="115" author="murthy.y">
		<createView viewName="receiptdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t4.custcif,
    t1.reference,
    t3.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t1.bankcode,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.bouncedate canceldate,
    t2.payagainstid,
    t1.bouncedate,
    t1.realizationdate,
    t1.cancelreason,
    t3.closingstatus,
    t3.finbranch,
    t3.fincurrassetvalue,
    t3.productcategory,
    t6.partnerbankcode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.roledesc lovdescrequeststage,
    t1.receiptmode paymenttype,
    t1.receiptmodestatus,
    t1.actfinreceipt,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid fundingac,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    tx.receiptseqid
   from ((((((finreceiptheader_temp t1
     join ( select max(finreceiptdetail_temp.receiptseqid) receiptseqid,
            finreceiptdetail_temp.receiptid
           from finreceiptdetail_temp
          group by finreceiptdetail_temp.receiptid) tx on ((tx.receiptid = t1.receiptid)))
     left join finreceiptdetail_temp t2 on (((t1.receiptid = t2.receiptid) and (t2.receiptseqid = tx.receiptseqid))))
     left join financemain t3 on (((t1.reference) = (t3.finreference))))
     left join customers t4 on ((t3.custid = t4.custid)))
     join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     left join partnerbanks t6 on ((t6.partnerbankid = t2.fundingac)))
union all
 select t4.custcif,
    t1.reference,
    t3.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t1.bankcode,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.bouncedate canceldate,
    t2.payagainstid,
    t1.bouncedate,
    t1.realizationdate,
    t1.cancelreason,
    t3.closingstatus,
    t3.finbranch,
    t3.fincurrassetvalue,
    t3.productcategory,
    t6.partnerbankcode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.roledesc lovdescrequeststage,
    t1.receiptmode paymenttype,
    t1.receiptmodestatus,
    t1.actfinreceipt,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid fundingac,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    tx.receiptseqid
   from ((((((finreceiptheader t1
     join ( select max(finreceiptdetail.receiptseqid) receiptseqid,
            finreceiptdetail.receiptid
           from finreceiptdetail
          group by finreceiptdetail.receiptid) tx on ((tx.receiptid = t1.receiptid)))
     left join finreceiptdetail t2 on (((t1.receiptid = t2.receiptid) and (t2.receiptseqid = tx.receiptseqid))))
     left join financemain t3 on (((t1.reference) = (t3.finreference))))
     left join customers t4 on ((t3.custid = t4.custid)))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     left join partnerbanks t6 on ((t6.partnerbankid = t2.fundingac)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="115_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'receiptdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="116_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralassignment_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="116" author="murthy.y">
		<createView viewName="collateralassignment_view" replaceIfExists="true">
			<![CDATA[
				 select ca.module,
    ca.reference,
    ca.collateralref,
    ca.assignperc,
    cs.collateralccy,
    ca.active,
    ca.hostreference,
    cs.collateralvalue,
    cs.bankvaluation,
    (t.totassignperc - ca.assignperc) totassignperc,
    coalesce(((((fm.fincurrassetvalue - fm.downpayment) + fm.feechargeamt) + fm.insuranceamt) - fm.finrepaymentamount), cm.cmtutilizedamount) utilizedamount,
    ca.version,
    ca.lastmntby,
    ca.lastmnton,
    ca.recordstatus,
    ca.rolecode,
    ca.nextrolecode,
    ca.taskid,
    ca.nexttaskid,
    ca.recordtype,
    ca.workflowid,
    cs.specialltv,
    cs.bankltv,
    cu.custcif depositorcif,
    cs.collateraltype
   from (((((collateralassignment_temp ca
     join collateralsetup cs on (((ca.collateralref) = (cs.collateralref))))
     join customers cu on ((cu.custid = cs.depositorid)))
     left join ( select t1.collateralref,
            sum(t1.assignperc) totassignperc
           from ( select collateralassignment_temp.reference,
                    collateralassignment_temp.collateralref,
                    collateralassignment_temp.assignperc
                   from collateralassignment_temp
                union
                 select ca_1.reference,
                    ca_1.collateralref,
                    ca_1.assignperc
                   from collateralassignment ca_1
                  where (not (exists ( select 1
                           from collateralassignment_temp
                          where (((collateralassignment_temp.collateralref) = (ca_1.collateralref)) and ((collateralassignment_temp.module) = (ca_1.module)) and ((collateralassignment_temp.reference) = (ca_1.reference))))))) t1
          group by t1.collateralref) t on (((t.collateralref) = (ca.collateralref))))
     left join financemain_temp fm on (((ca.reference) = (fm.finreference))))
     left join commitments_temp cm on (((cm.cmtreference) = (ca.reference))))
union all
 select ca.module,
    ca.reference,
    ca.collateralref,
    ca.assignperc,
    cs.collateralccy,
    ca.active,
    ca.hostreference,
    cs.collateralvalue,
    cs.bankvaluation,
    (t.totassignperc - ca.assignperc) totassignperc,
    coalesce(((((fm.fincurrassetvalue - fm.downpayment) + fm.feechargeamt) + fm.insuranceamt) - fm.finrepaymentamount), cm.cmtutilizedamount) utilizedamount,
    ca.version,
    ca.lastmntby,
    ca.lastmnton,
    ca.recordstatus,
    ca.rolecode,
    ca.nextrolecode,
    ca.taskid,
    ca.nexttaskid,
    ca.recordtype,
    ca.workflowid,
    cs.specialltv,
    cs.bankltv,
    cu.custcif depositorcif,
    cs.collateraltype
   from (((((collateralassignment ca
     join collateralsetup cs on (((ca.collateralref) = (cs.collateralref))))
     join customers cu on ((cu.custid = cs.depositorid)))
     left join ( select t1.collateralref,
            sum(t1.assignperc) totassignperc
           from ( select collateralassignment_temp.reference,
                    collateralassignment_temp.collateralref,
                    collateralassignment_temp.assignperc
                   from collateralassignment_temp
                union
                 select ca_1.reference,
                    ca_1.collateralref,
                    ca_1.assignperc
                   from collateralassignment ca_1
                  where (not (exists ( select 1
                           from collateralassignment_temp
                          where (((collateralassignment_temp.collateralref) = (ca_1.collateralref)) and ((collateralassignment_temp.module) = (ca_1.module)) and ((collateralassignment_temp.reference) = (ca_1.reference))))))) t1
          group by t1.collateralref) t on (((t.collateralref) = (ca.collateralref))))
     left join financemain fm on (((ca.reference) = (fm.finreference))))
     left join commitments cm on (((cm.cmtreference) = (ca.reference))))
  where (not (exists ( select 1
           from collateralassignment_temp
          where (((collateralassignment_temp.collateralref) = (ca.collateralref)) and ((collateralassignment_temp.module) = (ca.module)) and ((collateralassignment_temp.reference) = (ca.reference))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="116_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralassignment_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="117_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'pmay_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="117" author="murthy.y">
		<createView viewName="pmay_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.notifiedtown,
    t1.towncode,
    t4.townname,
    t1.centralassistance,
    t1.ownedhouse,
    t1.carpetarea,
    t1.householdannincome,
    t1.balancetransfer,
    t1.primaryapplicant,
    t1.transactionfintype,
    t1.product,
    t1.prprtyownedbywomen,
    t1.watersupply,
    t1.drinage,
    t1.electricity,
    t1.pmaycategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.custcif,
    t3.custshrtname,
    t2.fintype
   from (((pmay t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     left join towncode t4 on ((t1.towncode = t4.towncode)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="117_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'pmay_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="118_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'taxdownloaddetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="118" author="murthy.y">
		<createView viewName="taxdownloaddetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.postdate,
    t1.linkedtranid,
    t1.oldlinkedtranid,
    t1.transorder,
    t1.tranorderid,
    t1.finevent,
    t1.account,
    t1.finreference,
    t1.userbranch,
    t1.poststatus status,
    t1.postamount,
    t1.accounttype,
    t2.fintype,
    t2.finbranch,
    t2.finapproveddate,
    t2.custid,
    t4.entitycode,
    t5.custshrtname,
    t5.custcif,
    t5.custcrcpr,
    t6.custaddrhnbr,
    t6.custflatnbr,
    t6.custaddrstreet,
    t6.custaddrline1,
    t6.custaddrline2,
    t6.custaddrcity,
    t6.custaddrprovince,
    t6.custaddrcountry,
    t6.custaddrzip,
    t6.lastmnton custaddrlastmnton,
    t6.custpobox,
    t7.taxnumber customergstin,
    t7.addrline1 taxaddrline1,
    t7.addrline2 taxaddrline2,
    t7.addrline3 taxaddrline3,
    t7.addrline4 taxaddrline4,
    t7.country taxcountry,
    t7.province taxprovince,
    t7.city taxcity,
    t7.pincode taxpincode,
    t7.lastmnton taxlastmnton,
    t7.taxexempted,
    t8.custcif taxcustcif,
    t8.custshrtname taxcustshrtname,
    t8.custcrcpr taxcustcrcpr,
    t9.accaddlvar1 hsnsaccode,
    t9.accaddlvar2 natureofservice,
    t9.accaddlchar1 reversechargeapplicable,
    t9.taxapplicable,
    t9.extractiontype,
    '' originalinvoiceno,
    t9.accaddlchar1,
    t10.ccyminorccyunits
   from (((((((((postings_taxdownload t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join smtdivisiondetail t4 on (((t3.findivision) = (t4.divisioncode))))
     join customers t5 on ((t5.custid = t2.custid)))
     join customeraddresses t6 on (((t6.custid = t2.custid) and (t6.custaddrpriority = 5))))
     left join fintaxdetail t7 on (((t7.finreference) = (t1.finreference))))
     left join customers t8 on (((t8.custid) = t7.taxcustid)))
     join rmtaccounttypes t9 on (((t9.actype) = (t1.accounttype))))
     join rmtcurrencies t10 on ((t10.ccycode = (t1.acccy)::bpchar)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="118_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'taxdownloaddetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="119_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finflagsheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="119" author="murthy.y">
		<createView viewName="finflagsheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t2.fintype,
    t3.fintypedesc,
    t3.fincategory,
    t4.custcif,
    t2.finbranch,
    t5.branchdesc,
    t2.finstartdate,
    t2.numberofterms,
    t2.graceterms,
    t2.maturitydate,
    t2.finccy,
    t2.finamount,
    t2.finrepaymentamount,
    t2.schedulemethod,
    t2.feechargeamt,
    t2.downpaybank,
    t2.downpaysupl,
    t2.effectiverateofreturn,
    t2.totalprofit,
    t2.profitdaysbasis,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.findivision lovdescfindivision
   from ((((finflagsheader_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join customers t4 on ((t2.custid = t4.custid)))
     join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
union all
 select t1.finreference,
    t2.fintype,
    t3.fintypedesc,
    t3.fincategory,
    t4.custcif,
    t2.finbranch,
    t5.branchdesc,
    t2.finstartdate,
    t2.numberofterms,
    t2.graceterms,
    t2.maturitydate,
    t2.finccy,
    t2.finamount,
    t2.finrepaymentamount,
    t2.schedulemethod,
    t2.feechargeamt,
    t2.downpaybank,
    t2.downpaysupl,
    t2.effectiverateofreturn,
    t2.totalprofit,
    t2.profitdaysbasis,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.findivision lovdescfindivision
   from ((((finflagsheader t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join customers t4 on ((t2.custid = t4.custid)))
     join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
  where (not (exists ( select 1 expr1
           from finflagsheader_temp
          where ((finflagsheader_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="119_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finflagsheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="120_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_coapplicant_dtls_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="120" author="murthy.y">
		<createView viewName="dm_coapplicant_dtls_view" replaceIfExists="true">
			<![CDATA[
				 select t1.custid customerid,
    t.applicant_type,
    t1.custcrcpr pan_no,
    null cust_relation,
    t1.custctgcode cust_type,
        case
            when ((date_part('month', ((( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
               from smtparameters
              where ((smtparameters.sysparmcode) = 'app_date')))::timestamp without time zone - t1.custdob)) / (12)::double precision) <= (99)::double precision) then (date_part('month', ((( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
               from smtparameters
              where ((smtparameters.sysparmcode) = 'app_date')))::timestamp without time zone - t1.custdob)) / (12)::double precision)
            else (99)::double precision
        end age,
    t1.custdob dob,
    t1.custfname fname,
    t1.custmname mname,
    t1.custlname lname,
    t2.gendercode gender,
    t1.custmaritalsts marital_status,
    t1.noofdependents no_of_dependent,
    (date_part('month', ((( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = 'app_date')))::timestamp without time zone - t7.custempfrom)) / (12)::double precision) yrs_currentjob,
    null previous_job_year,
    null qualification,
    e.empname employer_desc,
    null company_type,
    t1.custindustry industryid,
    t1.custsector business_nature,
    null occupation_code,
    null guardian,
    'n' process_flag,
    null process_date,
    t7.custemptype emp_type,
    null businessdate,
    udf_convertcurrency(t1.custtotalincome, 'INR', 'INR') income,
    t.applid,
    null batch_id
   from (((((customers t1
     join ( select distinct 'co applicant' applicant_type,
            finjointaccountdetails.custcif,
            "substring"((finjointaccountdetails.finreference), '-7'::integer, 7) applid
           from finjointaccountdetails
        union
         select distinct 'guaranteer' applicant_type,
            finguarantorsdetails.guarantorcif,
            "substring"((finguarantorsdetails.finreference), '-7'::integer, 7) applid
           from finguarantorsdetails) t on (((t.custcif) = (t1.custcif))))
     left join bmtgenders t2 on (((t2.gendercode) = (t1.custgendercode))))
     left join rmtcusttypes t3 on (((t3.custtypecode) = (t1.custtypecode))))
     left join customerempdetails t7 on (((t7.custid = t1.custid) and (t7.currentemployer = 1))))
     left join employerdetail e on ((e.employerid = t7.custempname)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="120_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_coapplicant_dtls_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="121_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'subventionscheduledetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="121" author="murthy.y">
		<createView viewName="subventionscheduledetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.disbseqid,
    t1.schdate,
    t1.noofdays,
    t1.discountedpft,
    t1.presentvalue,
    t1.futurevalue,
    t1.closingbal
   from subventionscheduledetail t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="121_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'subventionscheduledetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="122_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemaintenance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="122" author="murthy.y">
		<createView viewName="financemaintenance_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.nextrolecode,
    t1.recordstatus,
    t1.recordtype,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.rcdmaintainsts,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
    coalesce(t9.noinst, (0)) noinst,
    t1.samplingrequired,
    t1.advemiterms,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.repaypftfrq,
    t1.version,
    t1.totalcpz
   from (((((financemain_temp t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
union all
 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.nextrolecode,
    t1.recordstatus,
    t1.recordtype,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.rcdmaintainsts,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
    coalesce(t9.noinst, (0)) noinst,
    t1.samplingrequired,
    t1.advemiterms,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.repaypftfrq,
    t1.version,
    t1.totalcpz
   from (((((financemain t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
  where (not (exists ( select 1 expr1
           from financemain_temp
          where ((financemain_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="122_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemaintenance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="123_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'restructure_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="123" author="murthy.y">
		<createView viewName="restructure_details_view" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.restructuretype,
    t1.emihldperiod,
    t1.prihldperiod,
    t1.emiperiods,
    t1.totnoofrestructure,
    t1.recalculationtype,
    t1.servicerequestno,
    t1.remark,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.oldbucket,
    t1.newbucket,
    t1.oldemios,
    t1.newemios,
    t1.oldbaltenure,
    t1.newbaltenure,
    t1.oldmaturity,
    t1.newmaturity,
    t1.lastbilleddate,
    t1.lastbilledinstno,
    t1.actloanamount,
    t1.oldtenure,
    t1.newtenure,
    t1.oldinterest,
    t1.newinterest,
    t1.oldmaxunplannedemi,
    t1.newmaxunplannedemi,
    t1.oldavailedunplanemi,
    t1.newavailedunplanemi,
    t1.oldfinalemi,
    t1.newfinalemi,
    t1.tenorchange,
    t1.emirecal,
    t1.restructuredate,
    t1.restructurereason,
    t1.olddpd,
    t1.newdpd,
    t1.oldcpzinterest,
    t1.newcpzinterest,
    t1.emihldstartdate,
    t1.emihldenddate,
    t1.prihldstartdate,
    t1.prihldenddate,
    t1.oldposamount,
    t1.newposamount,
    t1.oldemioverdue,
    t1.newemioverdue,
    t1.bouncecharge,
    t1.oldpenaltyamount,
    t1.newpenaltyamount,
    t1.othercharge,
    t1.restructurecharge,
    t1.appdate,
    t2.rsttypecode,
    t2.rsttypedesc,
    t1.fincurrassetvalue,
    t1.oldextoddays,
    t1.newextoddays,
    t1.repayprofitrate,
    t1.grcmaxamount
   from (restructure_details_temp t1
     join restructure_types t2 on (((t1.restructuretype) = t2.id)))
union all
 select t1.id,
    t1.finreference,
    t1.restructuretype,
    t1.emihldperiod,
    t1.prihldperiod,
    t1.emiperiods,
    t1.totnoofrestructure,
    t1.recalculationtype,
    t1.servicerequestno,
    t1.remark,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.oldbucket,
    t1.newbucket,
    t1.oldemios,
    t1.newemios,
    t1.oldbaltenure,
    t1.newbaltenure,
    t1.oldmaturity,
    t1.newmaturity,
    t1.lastbilleddate,
    t1.lastbilledinstno,
    t1.actloanamount,
    t1.oldtenure,
    t1.newtenure,
    t1.oldinterest,
    t1.newinterest,
    t1.oldmaxunplannedemi,
    t1.newmaxunplannedemi,
    t1.oldavailedunplanemi,
    t1.newavailedunplanemi,
    t1.oldfinalemi,
    t1.newfinalemi,
    t1.tenorchange,
    t1.emirecal,
    t1.restructuredate,
    t1.restructurereason,
    t1.olddpd,
    t1.newdpd,
    t1.oldcpzinterest,
    t1.newcpzinterest,
    t1.emihldstartdate,
    t1.emihldenddate,
    t1.prihldstartdate,
    t1.prihldenddate,
    t1.oldposamount,
    t1.newposamount,
    t1.oldemioverdue,
    t1.newemioverdue,
    t1.bouncecharge,
    t1.oldpenaltyamount,
    t1.newpenaltyamount,
    t1.othercharge,
    t1.restructurecharge,
    t1.appdate,
    t2.rsttypecode,
    t2.rsttypedesc,
    t1.fincurrassetvalue,
    t1.oldextoddays,
    t1.newextoddays,
    t1.repayprofitrate,
    t1.grcmaxamount
   from (restructure_details t1
     join restructure_types t2 on (((t1.restructuretype) = t2.id)))
  where (not (exists ( select 1
           from restructure_details_temp
          where (restructure_details_temp.id = t1.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="123_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'restructure_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="124_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_ivr_gateway_flexi_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="124" author="murthy.y">
		<createView viewName="dm_ivr_gateway_flexi_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference agreementno,
    udf_convertcurrency(t2.finassetvalue, (t1.finccy), 'INR') drop_line_limit,
    udf_convertcurrency((t2.finassetvalue - t2.fincurrassetvalue), (t1.finccy), 'INR') amount_drawn_limit,
    t1.totalprischd utlized_balance_limit,
    udf_convertcurrency(t1.totalpripaid, (t1.finccy), 'INR') principle_amount_paid,
    udf_convertcurrency(t1.totalpribal, (t1.finccy), 'INR') balance_principal_outstanding,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('value_date'(500)))) process_date,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_date'(500)))) businessdate,
    null batch_id
   from (finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="124_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_ivr_gateway_flexi_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="125_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financededup_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="125" author="murthy.y">
		<createView viewName="financededup_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finreference dupreference,
    t1.custid,
    t2.custcif,
    t2.custfname,
    t2.custlname,
    t2.custmname,
    t2.custshrtname,
    t2.custdob,
    t2.custnationality,
    t2.custparentcountry,
    t2.custcrcpr,
    t1.finstartdate startdate,
    t1.finamount financeamount,
    t1.totalgrosspft profitamount,
    t1.nextrolecode stage,
    t4.roledesc stagedesc,
    '' deduperule,
    t1.fintype financetype,
    t2.custtradelicencenum tradelicenceno,
    t1.finlimitref,
    coalesce(
        case
            when ((t2.phonenumber) = ' ') then null
            else t2.phonenumber
        end, t3.phonenumber) mobilenumber,
    t2.custmothermaiden fathername,
    t2.custshrtnamelcllng mothername,
    cda.custdoctitle aadharnumber,
    cdp.custdoctitle pannumber,
    cdvi.custdoctitle voterid,
    cdrc.custdoctitle rationcard,
    cdlpg.custdoctitle lpgnumber,
    cdpp.custdoctitle custpassportno,
    cddl.custdoctitle drivinglicenceno
   from ((((((((((financemain_temp t1
     join customers t2 on ((t1.custid = t2.custid)))
     left join secroles t4 on (((t1.nextrolecode) = (t4.rolecd))))
     left join customerdocuments cda on (((cda.custid = t2.custid) and ((cda.custdoccategory) in ( select master_def.key_code
           from master_def
          where (((master_def.master_type) = 'doc_type') and ((master_def.key_type) = 'aadhaar')))))))
     left join customerdocuments cdp on (((cdp.custid = t2.custid) and ((cdp.custdoccategory) in ( select master_def.key_code
           from master_def
          where (((master_def.master_type) = 'doc_type') and ((master_def.key_type) = 'pan')))))))
     left join customerdocuments cdpp on (((cdpp.custid = t2.custid) and ((cdpp.custdoccategory) in ( select master_def.key_code
           from master_def
          where (((master_def.master_type) = 'doc_type') and ((master_def.key_type) = 'passport')))))))
     left join customerdocuments cdvi on (((cdvi.custid = t2.custid) and ((cdvi.custdoccategory) in ( select master_def.key_code
           from master_def
          where (((master_def.master_type) = 'doc_type') and ((master_def.key_type) = 'voter_id')))))))
     left join customerdocuments cdrc on (((cdrc.custid = t2.custid) and ((cdrc.custdoccategory) in ( select master_def.key_code
           from master_def
          where (((master_def.master_type) = 'doc_type') and ((master_def.key_type) = 'ration_card')))))))
     left join customerdocuments cdlpg on (((cdlpg.custid = t2.custid) and ((cdlpg.custdoccategory) in ( select master_def.key_code
           from master_def
          where (((master_def.master_type) = 'doc_type') and ((master_def.key_type) = 'lpg_number')))))))
     left join customerdocuments cddl on (((cddl.custid = t2.custid) and ((cddl.custdoccategory) in ( select master_def.key_code
           from master_def
          where (((master_def.master_type) = 'doc_type') and ((master_def.key_type) = 'driving_licence')))))))
     left join customerphonenumbers t3 on ((t2.custid = t3.phonecustid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="125_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financededup_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="126_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_feview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="126" author="murthy.y">
		<createView viewName="finreceiptheader_feview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t4.findivision lovdescfindivision,
    t2.businessvertical,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.instructionuid,
    t1.module,
    t1.extreference,
    t1.collectionagentid,
    t1.pannumber,
    t1.receivedfrom,
    t1.receiptchannel,
    t1.subreceiptmode,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.actfinreceipt,
    t1.reasoncode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t14.code closuretypedesc
   from ((((((((((((finreceiptheader_temp t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join closure_types t14 on ((t14.id = t1.closuretypeid)))
union all
 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t4.findivision lovdescfindivision,
    t2.businessvertical,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.instructionuid,
    t1.module,
    t1.extreference,
    t1.collectionagentid,
    t1.pannumber,
    t1.receivedfrom,
    t1.receiptchannel,
    t1.subreceiptmode,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.actfinreceipt,
    t1.reasoncode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t14.code closuretypedesc
   from ((((((((((((finreceiptheader t1
     left join ( select financemain_temp.finreference,
            financemain_temp.finbranch,
            financemain_temp.fintype,
            financemain_temp.finccy,
            financemain_temp.schedulemethod,
            financemain_temp.profitdaysbasis,
            financemain_temp.finisactive,
            financemain_temp.custid,
            financemain_temp.productcategory,
            financemain_temp.promotioncode,
            financemain_temp.nextrepayrvwdate,
            financemain_temp.businessvertical
           from financemain_temp
        union
         select financemain.finreference,
            financemain.finbranch,
            financemain.fintype,
            financemain.finccy,
            financemain.schedulemethod,
            financemain.profitdaysbasis,
            financemain.finisactive,
            financemain.custid,
            financemain.productcategory,
            financemain.promotioncode,
            financemain.nextrepayrvwdate,
            financemain.businessvertical
           from financemain) t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join closure_types t14 on ((t14.id = t1.closuretypeid)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="126_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_feview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="127_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'payorderissueheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="127" author="murthy.y">
		<createView viewName="payorderissueheader_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t4.custcif,
    t4.phonenumber,
    t4.custshrtname,
    t3.fintype,
    t3.fintypedesc,
    t3.fincategory,
    t4.custcrcpr,
    t1.totalpoamount,
    t1.totalpocount,
    t1.issuedpoamount,
    t1.issuedpocount,
    t1.podueamount,
    t1.poduecount,
    t2.finccy,
    t2.numberofterms,
    t2.graceterms,
    t2.finstartdate,
    t2.maturitydate,
    t2.finamount,
    t2.feechargeamt,
    t2.downpaysupl,
    t2.totalprofit,
    t2.effectiverateofreturn,
    t2.profitdaysbasis,
    t2.custid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.alwmultipartydisb,
    t2.quickdisb,
    t2.loanapproved
   from (((payorderissueheader t1
     join ( select financemain.finccy,
            financemain.fintype,
            financemain.custid,
            financemain.numberofterms,
            financemain.graceterms,
            financemain.finstartdate,
            financemain.finreference,
            1 loanapproved,
            financemain.maturitydate,
            financemain.finamount,
            financemain.feechargeamt,
            financemain.downpaysupl,
            financemain.totalprofit,
            financemain.effectiverateofreturn,
            financemain.profitdaysbasis,
            financemain.quickdisb
           from financemain
        union all
         select financemain_temp.finccy,
            financemain_temp.fintype,
            financemain_temp.custid,
            financemain_temp.numberofterms,
            financemain_temp.graceterms,
            financemain_temp.finstartdate,
            financemain_temp.finreference,
            1 loanapproved,
            financemain_temp.maturitydate,
            financemain_temp.finamount,
            financemain_temp.feechargeamt,
            financemain_temp.downpaysupl,
            financemain_temp.totalprofit,
            financemain_temp.effectiverateofreturn,
            financemain_temp.profitdaysbasis,
            financemain_temp.quickdisb
           from financemain_temp
          where (not (exists ( select 1
                   from financemain
                  where ((financemain.finreference) = (financemain_temp.finreference)))))) t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join customers t4 on ((t2.custid = t4.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="127_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'payorderissueheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="128_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeerefundheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="128" author="murthy.y">
		<createView viewName="finfeerefundheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.linkedtranid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t2.custid,
    t2.finccy,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.fintypedesc,
    t5.branchdesc,
    t2.tdsapplicable fintdsapplicable
   from ((((finfeerefundheader_temp t1
     left join financemain_view t2 on (((t2.finreference) = (t1.finreference))))
     left join customers t3 on ((t3.custid = t2.custid)))
     left join rmtfinancetypes t4 on (((t4.fintype) = (t2.fintype))))
     left join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
union all
 select t1.headerid,
    t1.finreference,
    t1.linkedtranid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t2.custid,
    t2.finccy,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.fintypedesc,
    t5.branchdesc,
    t2.tdsapplicable fintdsapplicable
   from ((((finfeerefundheader t1
     left join financemain_view t2 on (((t2.finreference) = (t1.finreference))))
     left join customers t3 on ((t3.custid = t2.custid)))
     left join rmtfinancetypes t4 on (((t4.fintype) = (t2.fintype))))
     left join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
  where (not (exists ( select 1
           from finfeerefundheader_temp
          where (finfeerefundheader_temp.headerid = t1.headerid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="128_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeerefundheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="129_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finschfrqinsurance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="129" author="murthy.y">
		<createView viewName="finschfrqinsurance_view" replaceIfExists="true">
			<![CDATA[
				 select t1.insid,
    t3.reference,
    t3.module,
    t3.insurancetype,
    t3.insreference,
    t2.closingbalance,
    t1.insschdate,
    t1.insurancerate,
    t1.insurancefrq,
    t1.amount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finschfrqinsurance_temp t1
     left join fininsurances_temp t3 on ((t3.insid = t1.insid)))
     left join finscheduledetails_temp t2 on (((t2.schdate = t1.insschdate) and ((t3.reference) = (t2.finreference)))))
union all
 select t1.insid,
    t3.reference,
    t3.module,
    t3.insurancetype,
    t3.insreference,
    t2.closingbalance,
    t1.insschdate,
    t1.insurancerate,
    t1.insurancefrq,
    t1.amount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finschfrqinsurance t1
     left join fininsurances t3 on ((t3.insid = t1.insid)))
     left join finscheduledetails t2 on (((t2.schdate = t1.insschdate) and ((t3.reference) = (t2.finreference)))))
  where (not (exists ( select 1
           from finschfrqinsurance_temp
          where ((finschfrqinsurance_temp.insid = t1.insid) and (finschfrqinsurance_temp.insschdate = t1.insschdate)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="129_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finschfrqinsurance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="130_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rolledoverfinancedetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="130" author="murthy.y">
		<createView viewName="rolledoverfinancedetail_tview" replaceIfExists="true">
			<![CDATA[
				 select r.newfinreference,
    r.finreference,
    r.rolloveramount,
    r.custpayment,
    p.totalpftbal,
    p.totalpribal,
    f.finstartdate startdate,
    f.finamount,
    f.effectiverateofreturn profitrate,
    f.totalprofit,
    f.nextrolloverdate rolloverdate
   from ((rolledoverfinancedetail_temp r
     join financemain f on (((r.finreference) = (f.finreference))))
     join finpftdetails p on (((f.finreference) = (p.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="130_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rolledoverfinancedetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="131_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinrepayinstruction_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="131" author="murthy.y">
		<createView viewName="wiffinrepayinstruction_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.repaydate,
    t1.repayamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.repayschdmethod
   from wiffinrepayinstruction_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="131_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinrepayinstruction_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="132_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finflagsheader_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="132" author="murthy.y">
		<createView viewName="finflagsheader_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t2.fintype,
    t3.fintypedesc,
    t3.fincategory,
    t4.custcif,
    t2.finbranch,
    t5.branchdesc,
    t2.finstartdate,
    t2.numberofterms,
    t2.graceterms,
    t2.maturitydate,
    t2.finccy,
    t2.finamount,
    t2.finrepaymentamount,
    t2.schedulemethod,
    t2.feechargeamt,
    t2.downpaybank,
    t2.downpaysupl,
    t2.effectiverateofreturn,
    t2.totalprofit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.findivision lovdescfindivision
   from ((((finflagsheader_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join customers t4 on ((t2.custid = t4.custid)))
     join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="132_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finflagsheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="133_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mandates_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="133" author="murthy.y">
		<createView viewName="mandates_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.mandateid,
    t1.custid,
    t1.mandateref,
    t1.mandatetype,
    t1.bankbranchid,
    t1.accnumber,
    t1.accholdername,
    t1.jointaccholdername,
    t1.acctype,
    t1.openmandate,
    t1.startdate,
    t1.expirydate,
    t1.maxlimit,
    t1.periodicity,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.status,
    t1.approvalid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.reason,
    t1.mandateccy,
    t2.custcif,
    t2.custshrtname,
    t3.bankcode,
    t3.branchcode,
    t3.branchdesc,
    t3.micr,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.inputdate,
    t1.active,
    t1.defaultmandate,
    0 useexisting,
    t1.orgreference,
    t5.pccityname,
    t1.documentname,
    t1.documentref,
    t1.externalref,
    t1.entitycode,
    t6.entitydesc,
    t1.primarymandateid,
    t1.swapisactive,
    t1.barcodenumber,
    t7.partnerbankcode,
    t7.partnerbankname,
    t1.partnerbankid,
    t1.emandatesource,
    t1.emandatereferenceno,
    t8.fintype
   from (((((((mandates_temp t1
     join customers t2 on ((t1.custid = t2.custid)))
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t4 on (((t3.bankcode) = (t4.bankcode))))
     left join rmtprovincevscity t5 on (((t3.city) = (t5.pccity))))
     left join entity t6 on (((t1.entitycode) = (t6.entitycode))))
     left join partnerbanks t7 on ((t1.partnerbankid = t7.partnerbankid)))
     left join financemain t8 on (((t1.orgreference) = (t8.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="133_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mandates_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="134_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_discrepancyreport_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="134" author="murthy.y">
		<createView viewName="rpt_discrepancyreport_view" replaceIfExists="true">
			<![CDATA[
				 select distinct t.auditdate,
    t.initiateuser,
    t5.usrfname,
    t5.usrmname,
    t5.usrlname,
    t.lastmntby,
    t4.usrfname discusrfname,
    t4.usrmname discusrmname,
    t4.usrlname discusrlname,
    t.fintype,
    t2.custcif,
    t2.custshrtname,
    t.finreference,
    t3.rolecode
   from ((((( select data.auditdate,
            data.initiateuser,
            data.lastmntby,
            data.fintype,
            data.finreference,
            data.custid,
            data.recordstatus
           from dblink('demodbrnd', 'select auditdate,initiateuser,lastmntby,fintype,finreference,custid,recordstatus from plfaudit.adtfinancemain') data(auditdate timestamp without time zone, initiateuser bigint, lastmntby bigint, fintype character varying, finreference character varying, custid bigint, recordstatus character varying)) t
     join customers t2 on ((t2.custid = t.custid)))
     left join notes t3 on ((((t3.reference) = (t.finreference)) and ((t3.modulename) = 'financemain') and (t3.remarktype = ('n'(500))::bpchar))))
     join secusers t4 on ((t4.usrid = t.lastmntby)))
     left join secusers t5 on ((t5.usrid = t.initiateuser)))
  where (((t.recordstatus) = any (array[('resubmitted'), ('rejected')])) and (t3.rolecode is not null))
			]]>
		</createView>
	</changeSet>
	<changeSet id="134_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_discrepancyreport_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="135_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'insurancedetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="135" author="murthy.y">
		<createView viewName="insurancedetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.reference,
    t1.finreference,
    t1.startdate,
    t1.enddate,
    t1.term,
    t1.coverageamount,
    t1.policynumber,
    t1.issuancedate,
    t1.issuancestatus,
    t1.partnerpremium,
    t1.partnerreceiveddate,
    t1.awbno1,
    t1.awbno2,
    t1.awbno3,
    t1.dispatchstatus1,
    t1.dispatchstatus2,
    t1.dispatchstatus3,
    t1.reasonofrto1,
    t1.reasonofrto2,
    t1.reasonofrto3,
    t1.dispatchdateattempt1,
    t1.dispatchdateattempt2,
    t1.dispatchdateattempt3,
    t1.medicalstatus,
    t1.pendencyreasoncategory,
    t1.pendencyreason,
    t1.inspendencyresreq,
    t1.fpr,
    t1.policystatus,
    t1.formhandoverdate,
    t1.nomineename,
    t1.nomineerelation,
    t1.vasproviderid,
    t1.reconstatus,
    t1.manualreconremarks,
    t1.manualreconrescategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.linkedtranid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.tolaranceamount,
    fm.fintype,
    vr.postingagainst,
    vr.fee insurancepremium,
    vs.freelockperiod,
    t1.paymentlinkedtranid
   from (((insurancedetails t1
     join vasrecording vr on (((t1.reference) = (vr.vasreference))))
     join vasstructure vs on (((vs.productcode) = (vr.productcode))))
     left join financemain fm on (((t1.finreference) = (fm.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="135_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'insurancedetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="136_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodcrecovery_atview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="136" author="murthy.y">
		<createView viewName="finodcrecovery_atview" replaceIfExists="true">
			<![CDATA[
				 select odr.finreference,
    odr.finodschddate,
    odr.finodfor,
    odr.movementdate,
    odr.oddays,
    odr.fincurodamt,
    odr.fincurodpri,
    odr.penaltytype,
    odr.fincurodpft,
    odr.penaltycalon,
    odr.penaltyamtperc,
    odr.penalty,
    odr.maxwaiver,
    odr.waivedamt,
    odr.penaltypaid,
    odr.penaltybal,
    odr.rcdcandel,
    odr.seqno
   from finodcrecovery odr
  where ((odr.seqno = ( select max(finodcrecovery_1.seqno) expr1
           from finodcrecovery finodcrecovery_1
          where ((finodcrecovery_1.rcdcandel = 0) and ((finodcrecovery_1.finreference) = (odr.finreference)) and (finodcrecovery_1.finodschddate = odr.finodschddate) and ((finodcrecovery_1.finodfor) = (odr.finodfor))))) and (odr.movementdate = ( select max(finodcrecovery.movementdate) expr1
           from finodcrecovery
          where ((finodcrecovery.rcdcandel = 0) and ((finodcrecovery.finreference) = (odr.finreference)) and (finodcrecovery.finodschddate = odr.finodschddate) and ((finodcrecovery.finodfor) = (odr.finodfor))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="136_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodcrecovery_atview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="137_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincovenanttype_eview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="137" author="murthy.y">
		<createView viewName="fincovenanttype_eview" replaceIfExists="true">
			<![CDATA[
				 select t.finreference,
    t.custid,
    t.covenanttype,
    t.description,
    t.mandrole,
    t.alwwaiver,
    t.alwpostpone,
    t.alwotc,
    t.postponedays,
    t.covenanttypedesc,
    t.categorycode,
    t.receivabledate,
    t.internaluse,
    t.version,
    t.lastmntby,
    t.lastmnton,
    t.recordstatus,
    t.rolecode,
    t.nextrolecode,
    t.taskid,
    t.nexttaskid,
    t.recordtype,
    t.workflowid,
        case
            when (t.docreceiveddate is null) then cd.lastmnton
            else t.docreceiveddate
        end docreceiveddate,
    t.pddflag,
    t.otcflag
   from (( select t1.finreference,
            t4.custid,
            t1.covenanttype,
            t1.description,
            t1.mandrole,
            t1.alwwaiver,
            t1.alwpostpone,
            t1.postponedays,
            t1.alwotc,
            t3.doctypedesc covenanttypedesc,
            t5.code categorycode,
            t1.receivabledate,
            t1.internaluse,
            t1.version,
            t1.lastmntby,
            t1.lastmnton,
            t1.recordstatus,
            t1.rolecode,
            t1.nextrolecode,
            t1.taskid,
            t1.nexttaskid,
            t1.recordtype,
            t1.workflowid,
            t7.docreceiveddate,
            t3.pdd pddflag,
            t3.otc otcflag
           from ((((fincovenanttype_temp t1
             join bmtdocumenttypes t3 on (((t3.doctypecode) = (t1.covenanttype))))
             left join documentcategory t5 on ((t5.id = t3.categoryid)))
             join financemain_temp t4 on (((t4.finreference) = (t1.finreference))))
             left join documentdetails t7 on ((((t7.referenceid) = (t1.finreference)) and ((t1.covenanttype) = (t7.doccategory)))))) t
     left join customerdocuments cd on (((cd.custid = t.custid) and ((t.covenanttype) = (cd.custdoccategory)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="137_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincovenanttype_eview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="138_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_presentation_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="138" author="murthy.y">
		<createView viewName="dm_presentation_details_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference agreementno,
    (t1.firstrepayamt / rc.ccyminorccyunits) emi,
        case
            when ((t3.mandatetype) = ('ecs'(500))) then 'ecs'
            when ((t3.mandatetype) = ('nach'(500))) then 'z'
            when ((t3.mandatetype) = ('ddm'(500))) then 'd'
            else null
        end repay_type,
    fr.receiptdate deposited_date,
    null credit_status,
    b.bouncecode return_code,
    b.reason return_reason,
    null remarks,
    null segments,
    null processdate,
    null businessdate,
    pr.emino emi_no,
    t7.bankname customer_bank_name,
    null bom_bounce_bucket,
    t6.micr micr_code,
    null status_updt_date,
    t3.accnumber cust_bank_ac_no,
    t6.branchdesc customer_bank_branch,
    (t3.mandateid + pr.emino) chequesno,
    null chequedate,
        case
            when (pr.emino = 1) then 'y'
            else 'n'
        end femi_flag,
    194 hold_ignore_code,
        case
            when ((t3.status) = ('hold'(500))) then t3.reason
            else null(500)
        end hold_ignore_reason,
    null dest_acc_holder,
    t3.mandateid pdcid,
    t6.bankcode bbranchid,
    null batch_id
   from ((((((((finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join presentmentdetails pr on (((pr.finreference) = (t2.finreference))))
     join finreceiptheader fr on ((fr.receiptid = pr.receiptid)))
     left join bouncereasons b on ((b.bounceid = pr.bounceid)))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
     join mandates t3 on (((t3.mandateid = pr.mandateid) and (t3.active = 1))))
     join bankbranches t6 on ((t6.bankbranchid = t3.bankbranchid)))
     join bmtbankdetail t7 on (((t7.bankcode) = (t6.bankcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="138_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_presentation_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="139_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodcrecoveryenquiry_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="139" author="murthy.y">
		<createView viewName="finodcrecoveryenquiry_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.grcperiodenddate,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.allowgrcperiod,
    t1.downpayment,
    t1.migratedfinance,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t5.fintypedesc lovdescfintypename,
    t6.custcif lovdesccustcif,
    t6.custshrtname lovdesccustshrtname,
    t7.branchdesc lovdescfinbranchname,
    t1.blacklisted,
    t5.finscheduleon lovdescfinscheduleon,
    t1.feechargeamt,
    t1.closingstatus,
    t8.custtypectg,
    t1.graceterms,
    t5.findivision lovdescfindivision,
    t5.fincategory lovdescproductcodename,
    t5.finisalwmd lovdescfinisalwmd,
    t5.finisalwdifferment lovdescfinalwdeferment,
    t1.defferments,
    (((t1.finamount - t1.downpayment) + t1.feechargeamt) - t1.finrepaymentamount) curfinamount,
    ((t1.finamount - t1.downpayment) + t1.feechargeamt) financingamount,
    t1.finstatus
   from ((((financemain t1
     join rmtfinancetypes t5 on (((t1.fintype) = (t5.fintype))))
     join customers t6 on ((t1.custid = t6.custid)))
     join rmtbranches t7 on (((t1.finbranch) = (t7.branchcode))))
     join rmtcusttypes t8 on (((t6.custtypecode) = (t8.custtypecode))))
  where ((t1.finreference) = any ( select finodcrecovery.finreference
           from finodcrecovery))
			]]>
		</createView>
	</changeSet>
	<changeSet id="139_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodcrecoveryenquiry_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="140_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financeenquiry_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="140" author="murthy.y">
		<createView viewName="financeenquiry_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.calterms numberofterms,
    t1.custid,
    t1.finamount,
    t1.grcperiodenddate,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.allowgrcperiod,
    t1.downpayment,
    t1.migratedfinance,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.fincurrassetvalue,
    t1.blacklisted,
    t1.feechargeamt,
    t1.closingstatus,
    t1.graceterms,
    t1.alwmultidisb,
    t1.defferments,
    t1.finstatus,
    t1.mandateid,
    t1.finrepaymethod,
    t1.finassetvalue,
    ((t1.fincurrassetvalue + t1.feechargeamt) + t1.insuranceamt) financingamount,
    (((t1.fincurrassetvalue - t1.finrepaymentamount) + t1.feechargeamt) + t1.insuranceamt) curfinamount,
    t2.fintypedesc lovdescfintypename,
    t2.finscheduleon lovdescfinscheduleon,
    t2.findivision lovdescfindivision,
    t2.fincategory lovdescproductcodename,
    t2.finisalwdifferment lovdescfinalwdeferment,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.branchdesc lovdescfinbranchname,
    t5.custtypectg,
    coalesce(t9.noinst, (0)) noinst,
    t1.finocrrequired,
    t1.totalcpz,
    t1.alwgrcadj,
    t1.endgrcperiodaftrfulldisb,
    t1.autoincgrcenddate,
    t1.recordstatus,
    t1.writeoffloan,
    t1.restructure,
    t1.subventionfrom,
    t1.manufacturerdealerid,
    t10.dealername manufacturerdealername,
    t10.code manufacturerdealercode
   from ((((((financemain_temp t1
     join rmtfinancetypes t2 on (((t1.fintype) = (t2.fintype))))
     join customers t3 on ((t1.custid = t3.custid)))
     join rmtbranches t4 on (((t1.finbranch) = (t4.branchcode))))
     join rmtcusttypes t5 on (((t3.custtypecode) = (t5.custtypecode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
     left join amtvehicledealer t10 on ((t1.manufacturerdealerid = t10.dealerid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="140_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financeenquiry_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="141_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'linkedfinances_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="141" author="murthy.y">
		<createView viewName="linkedfinances_view" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.linkedreference,
    f.fintype linkedfintype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    c.custshrtname,
    t1.status
   from ((linkedfinances_temp t1
     join financemain f on (((t1.linkedreference) = (f.finreference))))
     join customers c on ((f.custid = c.custid)))
union all
 select t1.id,
    t1.finreference,
    t1.linkedreference,
    f.fintype linkedfintype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    c.custshrtname,
    t1.status
   from ((linkedfinances t1
     join financemain f on (((t1.linkedreference) = (f.finreference))))
     join customers c on ((f.custid = c.custid)))
  where (not (exists ( select 1
           from linkedfinances_temp
          where ((linkedfinances_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="141_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'linkedfinances_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="142_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeedetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="142" author="murthy.y">
		<createView viewName="finfeedetail_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.feeid,
    t1.finreference,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeseq,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.status,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.feeamz,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.transactionid,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc,
    t1.refundable,
    t1.instructionuid,
    t1.actpercentage,
    t1.waivedgst,
    t1.referenceid,
    t1.taxheaderid,
    t1.paidtds,
    t1.remtds,
    t1.nettds,
    t2.tdsreq,
    t3.productcode vasproductcode
   from ((finfeedetail_temp t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join vasrecording_temp t3 on (((t1.vasreference) = (t3.vasreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="142_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeedetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="143_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customerfinances_iview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="143" author="murthy.y">
		<createView viewName="customerfinances_iview" replaceIfExists="true">
			<![CDATA[
				 select t1.custid customerno,
    t1.finreference financeref,
    t1.finstartdate startdate,
    t1.maturitydate,
    t1.repayaccountid repaymentaccount,
    t1.totalprofit profitamount,
    t1.totalrepayamt totalamount,
    t1.finamount financeamount,
    t1.nextrepaydate duedate,
    t1.numberofterms totalinstallments,
    t1.fintype financetype,
    t3.custshrtname customername,
    t1.repayprofitrate profitrate,
    t1.repaymargin marginrate,
    t1.repaybaserate baserate,
    t2.branchdesc branch,
    t4.fincategory producttype,
    (t5.nschdpft + t5.nschdpri) installmentamount,
    (((t5.nschdpft + t5.nschdpri) + t5.nschdpftdue) + t5.nschdpridue) outstandingamount,
    (t5.totalpftbal - t5.pftaccrued) unearnedprofit,
    (t5.noinst - t5.nopaidinst) remaininginstallments,
    t5.curoddays daysptdue,
    (t1.finamount - t1.finrepaymentamount) outstandingbalance,
    t6.custstscode financestatus
   from (((((financemain t1
     join rmtbranches t2 on (((t1.finbranch) = (t2.branchcode))))
     join customers t3 on ((t1.custid = t3.custid)))
     join rmtfinancetypes t4 on (((t1.fintype) = (t4.fintype))))
     join finpftdetails t5 on (((t1.finreference) = (t5.finreference))))
     join bmtcuststatuscodes t6 on (((t1.finstatus) = (t6.custstscode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="143_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customerfinances_iview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="144_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_application_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="144" author="murthy.y">
		<createView viewName="dm_application_details_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t2.finreference), '-7'::integer, 7) applid,
    null crm_dealid,
    null crscoredate,
    null cibilscore,
    null appscore,
    null behscore,
    null deviation_type,
    null deviation_flag,
    null deviation_code,
    null deviation_name,
    null req_tenure,
    null req_loan_amt,
    null loan_limit,
    (t1.totalprischd / rc.ccyminorccyunits) approve_loan_amt,
    null loan_purpose,
    t1.fintype loan_type,
        case
            when (t1.closingstatus = ('c'(500))::bpchar) then t2.lastmnton
            else null::timestamp without time zone
        end cancellationdate,
    null cancel_reason,
    "substring"((t2.repayfrq), 1, 1) frequency,
    t1.finapproveddate loan_approval_date,
    t2.fincontractdate agreementdate,
        case
            when (t1.curreducingrate > (999)) then (999)
            else t1.curreducingrate
        end intrate,
        case
            when (t2.effectiverateofreturn > (999)) then (999)
            else t2.effectiverateofreturn
        end flat_rate,
        case
            when (t2.effectiverateofreturn > (999)) then (999)
            else t2.effectiverateofreturn
        end irr,
    null gross_ltv,
    null net_ltv,
    null cof,
    null debt_burden_ratio,
    null foir_db,
    null schemeid,
    null schemedesc,
    null schemegroupid,
    null scheme_groupg_desc,
    null product_category,
    t1.fincategory prod_type,
    null promotionid,
    null programid,
    null surrogate_flag,
    null sourcing_channel_type,
    null sourcing_channel_name,
    null referal_group,
    null referal_name,
    null countryid,
    null country,
    null regionid,
    null region,
    null stateid,
    null state,
    null cityid,
    null city,
    t1.finbranch branchid,
    t3.branchdesc,
    null broker_name,
    null dme_name,
    null asm_name,
    c.custro1 rsm_name,
    null crdt_mgr_name,
    null roid_name,
    null tlid_name,
    null bmid_name,
    null coid_name,
    null supplierid,
    null dlr_participation_rate,
    null local_outstation_flg,
    c.custcorebank customerid,
    null businessdate,
    'n' processed_flag,
    null process_date,
    t1.fintype product,
    null segments,
    null crm_status,
    t1.finstartdate logindate,
    t1.finapproveddate appr_rej_date,
        case
            when (t1.closingstatus = ('c'(500))::bpchar) then t2.lastmnton
            else null::timestamp without time zone
        end cancel_date,
    null file_status,
    null file_hold_reason,
    null qdpdone,
    null ishold,
    null branch_inw_date,
    null branch_hold_date,
    null cpu_inw_date,
    null cpu_hold_date,
    null system_hold,
    null psl_flag,
    null doc_wave_flag,
    null customer_swipe,
    null customer_acceptance,
    'pan card' kyc_doc_type,
    cd.custdoctitle kyc_doc_id,
    null business_irr,
    null inspectorname,
    null regnumber,
    null business_year,
    null dealid,
    null pretaxirr,
    null odm_flag,
    null di_date,
    null laa_qdp_flag,
    null preferred_card_acceptance,
    null orig_amtfin,
    null elc_flag,
    null elc_limit,
    null qdp_done_date,
    null laa_decentralized_flag,
    null fcu_flag,
    null mktgid,
    null dm_mpid,
    null swipe_card_code,
    null source_card_code,
    null dii_user_id,
    null qdp_cheque_issue,
    null interest_type,
    null dii_done_date,
    null finish_date,
    null batch_id
   from (((((finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join rmtbranches t3 on (((t3.branchcode) = (t1.finbranch))))
     join customers c on ((c.custid = t2.custid)))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
     left join ( select distinct customerdocuments.custid,
            customerdocuments.custdoctitle
           from customerdocuments
          where ((customerdocuments.custdoccategory) = ('03'(500)))) cd on ((cd.custid = c.custid)))
  where ("substring"((t2.finreference), '-7'::integer, 7) is not null)
			]]>
		</createView>
	</changeSet>
	<changeSet id="144_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_application_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="145_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'sampling_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="145" author="murthy.y">
		<createView viewName="sampling_tview" replaceIfExists="true">
			<![CDATA[
				 select s.id,
    s.keyreference,
    s.createdby,
    s.createdon,
    s.tenure,
    s.interestrate,
    s.foireligibility,
    s.emi,
    s.loaneligibility,
    s.irreligibility,
    s.lcreligibility,
    s.ltveligibility,
    s.totalincome,
    s.totalliability,
    s.remarks,
    s.samplingon,
    s.decision,
    s.recommendedamount,
    s.decisionon,
    s.resubmitreason,
    s.totalcustomerintobligation,
    s.totalcoapplicantsintobligation,
    r.code resubmitreasoncode,
    r.description resubmitreasondesc,
    ft.fintype,
    ft.fintypedesc,
    ft.fingrcratetype,
    fm.numberofterms,
    fm.repaybaserate,
    fm.repayspecialrate,
    fm.repayprofitrate,
    fm.repaymargin,
    fm.repayminrate,
    fm.repaymaxrate,
    fm.finccy,
    ccy.ccyeditfield,
    lb.branchcode,
    lb.branchdesc,
    cu.custid,
    cu.custcif,
    cu.custshrtname,
    cu.custctgcode custcategory,
    s.version,
    s.lastmntby,
    s.lastmnton,
    s.recordstatus,
    s.rolecode,
    s.nextrolecode,
    s.taskid,
    s.nexttaskid,
    s.recordtype,
    s.workflowid
   from ((((((sampling_temp s
     join ( select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain_temp fm_1
        union all
         select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain fm_1
          where (not (exists ( select 1
                   from financemain_temp
                  where ((financemain_temp.finreference) = (fm_1.finreference)))))) fm on (((fm.finreference) = (s.keyreference))))
     join rmtcurrencies ccy on ((ccy.ccycode = fm.finccy)))
     join customers cu on ((cu.custid = fm.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (fm.fintype))))
     left join rmtbranches lb on (((lb.branchcode) = (fm.finbranch))))
     left join reasons r on ((r.id = s.resubmitreason)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="145_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'sampling_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="146_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeecharges_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="146" author="murthy.y">
		<createView viewName="finfeecharges_view" replaceIfExists="true">
			<![CDATA[
				 select finfeecharges_temp.finreference,
    finfeecharges_temp.schdate,
    finfeecharges_temp.feecode,
    finfeecharges_temp.feecodedesc,
    finfeecharges_temp.feeorder,
    finfeecharges_temp.feeamount,
    finfeecharges_temp.waiveramount,
    finfeecharges_temp.paidamount,
    finfeecharges_temp.seqno,
    finfeecharges_temp.allowwaiver,
    finfeecharges_temp.waiverperc,
    finfeecharges_temp.excludefromrpt,
    finfeecharges_temp.calfeemodify,
    finfeecharges_temp.calfeeamount,
    finfeecharges_temp.feetofinance,
    finfeecharges_temp.finevent,
    finfeecharges_temp.feemethod,
    finfeecharges_temp.scheduleterms
   from finfeecharges_temp
			]]>
		</createView>
	</changeSet>
	<changeSet id="146_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeecharges_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="147_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'custalertsod_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="147" author="murthy.y">
		<createView viewName="custalertsod_view" replaceIfExists="true">
			<![CDATA[
				 select fm.custid,
    c.custcif,
    (((c.custfname) || (c.custmname)) || (c.custlname)) custshrtname,
    t.fincuroddays,
    t.fincurodamt,
    fm.finreference,
    fm.finbranch,
    fm.finccy,
    fm.finpurpose
   from ((( select od.finreference,
            max(od.fincuroddays) fincuroddays,
            sum(od.fincurodamt) fincurodamt
           from finoddetails od
          where (od.fincurodamt > (0))
          group by od.finreference) t
     join financemain fm on (((t.finreference) = (fm.finreference))))
     join customers c on ((c.custid = fm.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="147_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'custalertsod_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="148_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_dview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="148" author="murthy.y">
		<createView viewName="finreceiptheader_dview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.remarks,
    t1.depositbranch,
    t1.receiptamount amount,
    t3.finreference,
    t4.custshrtname,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid fundingac,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t13.code closuretypedesc
   from ((((((finreceiptheader_temp t1
     join financemain t3 on (((t1.reference) = (t3.finreference))))
     join customers t4 on ((t3.custid = t4.custid)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join closure_types t13 on ((t13.id = t1.closuretypeid)))
  where (((t1.receiptmode) = any (array[('cheque'), ('dd')])) and (t1.depositprocess = 1) and (not (t1.receiptid in ( select depositcheques_temp.receiptid
           from depositcheques_temp))))
union all
 select t1.receiptid,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.remarks,
    t1.depositbranch,
    t1.receiptamount amount,
    t3.finreference,
    t4.custshrtname,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid fundingac,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t13.code closuretypedesc
   from ((((((finreceiptheader t1
     join financemain t3 on (((t1.reference) = (t3.finreference))))
     join customers t4 on ((t3.custid = t4.custid)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join closure_types t13 on ((t13.id = t1.closuretypeid)))
  where ((not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid)))) and ((t1.receiptmode) = any (array[('cheque'), ('dd')])) and (t1.depositprocess = 1) and (not (t1.receiptid in ( select depositcheques_temp.receiptid
           from depositcheques_temp))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="148_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_dview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="149_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'loanreport_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="149" author="murthy.y">
		<createView viewName="loanreport_view" replaceIfExists="true">
			<![CDATA[
				 select f.finreference,
    c.custshrtname,
    c.custcif,
    ctg.custctgdesc,
    f.fintype,
    f.finpurpose,
    lp.loanpurposedesc,
    f.repayprofitrate,
    f.finassetvalue,
    f.fincurrassetvalue,
    f.calmaturity,
    f.maturitydate,
    f.finstartdate,
    pft.curreducingrate,
    pft.finisactive,
    f.allowgrcperiod,
    f.repayratebasis,
    f.repaybaserate,
    f.finccy,
    f.repayspecialrate,
    f.repaymargin,
    f.rpyminrate,
    f.rpymaxrate,
    f.numberofterms,
    f.closeddate,
    pft.amztilllbd,
    ft.findivision,
    pft.totalpftcpz,
    c.custctgcode,
    f.nextrepaydate,
    pft.pftamz,
    ft.roundingmode,
    pft.prvmthamz,
    f.graceterms,
    ca.castedesc,
    cp.cpprovincename,
    f.quickdisb,
    f.finamount,
    f.roundingtarget
   from (((((((((financemain f
     join rmtfinancetypes ft on (((f.fintype) = (ft.fintype))))
     join customers c on ((f.custid = c.custid)))
     join rmtbranches rb on (((f.finbranch) = (rb.branchcode))))
     join rmtcountryvsprovince cp on ((((rb.branchprovince) = (cp.cpprovince)) and (rb.branchcountry = cp.cpcountry))))
     left join caste ca on ((c.casteid = ca.casteid)))
     left join loanpurposes lp on (((lp.loanpurposecode) = (f.finpurpose))))
     join bmtcustcategories ctg on (((c.custctgcode) = (ctg.custctgcode))))
     join finpftdetails pft on (((f.finreference) = (pft.finreference))))
     left join ( select distinct fa.finreference
           from (finadvancepayments fa
             join findisbursementdetails fd on (((fa.finreference) = (fd.finreference))))
          where ((fa.status) = any (array[('paid'), ('realized')]))) t1 on (((t1.finreference) = (f.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="149_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'loanreport_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="150_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkdeferement_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="150" author="murthy.y">
		<createView viewName="bulkdeferement_view" replaceIfExists="true">
			<![CDATA[
				 select t1.closingstatus,
    t1.finreference,
    t1.fintype,
    t1.finccy,
    t1.custid,
    t3.findivision lovdescfindivision,
    t1.finbranch,
    t3.fincategory productcode,
    t2.schdate deferedschddate,
    t4.custcif,
    t4.custshrtname custname,
    bmt.intratebasisdesc profitdaybasisdesc,
    bmtschd.schdmethoddesc
   from (((((financemain t1
     join finscheduledetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     join customers t4 on ((t1.custid = t4.custid)))
     join bmtintratebasiscodes bmt on (((bmt.intratebasiscode) = (t1.profitdaysbasis))))
     join bmtschdmethod bmtschd on (((bmtschd.schdmethod) = (t1.schedulemethod))))
  where (((t1.defferments - t1.alloweddefrpychange) > 0) and (t1.maturitydate <> t2.schdate) and (t1.finisactive = 1) and (t2.repayamount > (0)) and (coalesce(t1.closingstatus, (''(500))::bpchar) <> all (array[('c'(500))::bpchar, ('w'(500))::bpchar])) and ((t2.schdpftpaid + t2.schdpripaid) = (0)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="150_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkdeferement_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="151_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeedetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="151" author="murthy.y">
		<createView viewName="finfeedetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.feeid,
    t1.finreference,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeseq,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.status,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.feeamz,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.transactionid,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc,
    t1.refundable,
    t1.instructionuid,
    t1.actpercentage,
    t1.waivedgst,
    t1.referenceid,
    t1.taxheaderid,
    t1.paidtds,
    t1.remtds,
    t1.nettds,
    t2.tdsreq,
    t3.productcode vasproductcode
   from ((finfeedetail_temp t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join vasrecording_temp t3 on (((t1.vasreference) = (t3.vasreference))))
union all
 select t1.feeid,
    t1.finreference,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeseq,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.status,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.feeamz,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.transactionid,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc,
    t1.refundable,
    t1.instructionuid,
    t1.actpercentage,
    t1.waivedgst,
    t1.referenceid,
    t1.taxheaderid,
    t1.paidtds,
    t1.remtds,
    t1.nettds,
    t2.tdsreq,
    t3.productcode vasproductcode
   from ((finfeedetail t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join vasrecording t3 on (((t1.vasreference) = (t3.vasreference))))
  where (not (exists ( select 1
           from finfeedetail_temp
          where (finfeedetail_temp.feeid = t1.feeid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="151_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeedetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="152_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemainlimitcheck_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="152" author="murthy.y">
		<createView viewName="financemainlimitcheck_tview" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    fm.finbranch,
    fm.finsourceid,
    fm.fintype,
    fm.finccy,
    fm.numberofterms,
    fm.schedulemethod,
    fm.securitycollateral,
    fm.allowrepayrvw,
    fm.finpurpose,
    fm.finassetvalue,
    c.custid,
    c.custdftbranch,
    c.custctgcode,
    c.custtypecode,
    c.custgendercode,
    c.custisstaff,
    c.custindustry,
    c.custsector,
    c.custsubsector,
    c.custempsts,
    c.custmaritalsts,
    c.custsegment,
    c.custsubsegment,
    c.custparentcountry,
    c.custriskcountry,
    c.custnationality,
    c.custaddlvar2,
    ca.custaddrprovince,
    ft.fincategory,
    ft.findivision,
    date_part('month', age(fm.finstartdate, fm.maturitydate)) tenor,
    fm.samplingrequired,
    fm.legalrequired
   from (((financemain_temp fm
     join customers c on ((c.custid = fm.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (fm.fintype))))
     left join customeraddresses ca on (((ca.custid = c.custid) and ((ca.custaddrtype) = ('perm'(500))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="152_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemainlimitcheck_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="153_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_provision_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="153" author="murthy.y">
		<createView viewName="rpt_provision_view" replaceIfExists="true">
			<![CDATA[
				 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
        case
            when (t2.fintype is null) then ''
            else (((t2.fintype) || '-') || (t3.fintypedesc))
        end loantype,
    'performing 0-90' classifications,
    4 gradeorder,
    sum((t1.fincurodpri + t1.fincurodpft)) exposurebhd,
    count(distinct t2.finaccount) noofaccounts,
    sum(t4.provisiondue) provision
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join finprovisions t4 on (((t4.finreference) = (t1.finreference))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 0) and (t1.fincuroddays <= 90) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
        case
            when (t2.fintype is null) then ''
            else (((t2.fintype) || '-') || (t3.fintypedesc))
        end loantype,
    'substandard 91-180' classifications,
    3 gradeorder,
    sum((t1.fincurodpri + t1.fincurodpft)) exposurebhd,
    count(distinct t2.finaccount) noofaccounts,
    sum(t4.provisiondue) provision
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join finprovisions t4 on (((t4.finreference) = (t1.finreference))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 91) and (t1.fincuroddays <= 180) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
        case
            when (t2.fintype is null) then ''
            else (((t2.fintype) || '-') || (t3.fintypedesc))
        end loantype,
    'doubtful 181-365' classifications,
    2 gradeorder,
    sum((t1.fincurodpri + t1.fincurodpft)) exposurebhd,
    count(distinct t2.finaccount) noofaccounts,
    sum(t4.provisiondue) provision
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join finprovisions t4 on (((t4.finreference) = (t1.finreference))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays >= 181) and (t1.fincuroddays <= 365) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
        case
            when (t2.fintype is null) then ''
            else (((t2.fintype) || '-') || (t3.fintypedesc))
        end loantype,
    'loss 365>' classifications,
    1 gradeorder,
    sum((t1.fincurodpri + t1.fincurodpft)) exposurebhd,
    count(distinct t2.finaccount) noofaccounts,
    sum(t4.provisiondue) provision
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join finprovisions t4 on (((t4.finreference) = (t1.finreference))))
  where ((t1.fincurodamt <> (0)) and (t1.fincuroddays > 365) and (coalesce(t2.closingstatus, (''(500))::bpchar) <> ('c'(500))::bpchar))
  group by t2.fintype, t3.fintypedesc, t3.findivision
			]]>
		</createView>
	</changeSet>
	<changeSet id="153_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_provision_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="154_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodpenaltyrates_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="154" author="murthy.y">
		<createView viewName="finodpenaltyrates_aview" replaceIfExists="true">
			<![CDATA[
				 select finodpenaltyrates.finreference,
    finodpenaltyrates.fineffectdate,
    finodpenaltyrates.applyodpenalty,
    finodpenaltyrates.odincgrcdays,
    finodpenaltyrates.odchargetype,
    finodpenaltyrates.odgracedays,
    finodpenaltyrates.odchargecalon,
    finodpenaltyrates.odchargeamtorperc,
    finodpenaltyrates.odallowwaiver,
    finodpenaltyrates.odmaxwaiverperc,
    finodpenaltyrates.odrulecode,
    finodpenaltyrates.odmincapamount,
    finodpenaltyrates.odtdsreq
   from finodpenaltyrates
			]]>
		</createView>
	</changeSet>
	<changeSet id="154_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodpenaltyrates_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="155_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="155" author="murthy.y">
		<createView viewName="financemain_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    ((t1.finamount + t1.feechargeamt) - t1.downpayment) lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc lovdescfintypename,
    t7.finmaxamount lovdescfinmaxamt,
    t7.finminamount lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment lovdescfinalwdeferment,
    t7.finisdwpayrequired lovdescdwnpayreq,
    t7.finmaxdifferment lovdescfinmaxdifferment,
    t12.branchdesc lovdescfinbranchname,
    t12.branchprovince finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername lovdescaccountsofficer,
    t28.dealercity lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc referraliddesc,
    t1.dmacode,
    t34.rofficerdesc dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue loveligibilitymethod,
    t38.valuedesc lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername connectorcode,
    t40.dealercity connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code businessverticalcode,
    bv.description businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.planemihalwingrace,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
    t1.offerproduct,
    t1.offeramount,
    t1.custsegmentation,
    t1.baseproduct,
    t1.processtype,
    t1.bureautimeseries,
    t1.campaignname,
    t1.existinglanrefno,
    t1.leadsource,
    t1.posource,
    t1.rsa,
    t1.verification,
    t1.sourcingbranch,
    t1.sourchannelcategory,
    t1.asmname,
    t13.branchdesc lovdescsourcingbranch,
    t1.endgrcperiodaftrfulldisb,
    t1.autoincgrcenddate,
    t1.alwgrcadj,
    t1.pmay,
    t1.offerid,
    t1.alwloansplit,
    t1.parentref,
    t1.loansplitted,
    t1.instbasedschd,
    c.custcif lovdesccustcif,
    t1.allowsubvention,
    t1.tdstype,
    t1.writeoffloan,
    t1.restructure,
    t1.calcofsteps,
    t1.stepsappliedfor,
    t1.noofgrcsteps,
    t1.schdversion,
    t1.subventionfrom,
    t1.manufacturerdealerid,
    t41.dealername manufacturerdealername,
    t41.code manufacturerdealercode
   from (((((((((((((((((((financemain t1
     join rmtfinancetypes t7 on (((t1.fintype) = (t7.fintype))))
     left join rmtbranches t12 on (((t1.finbranch) = (t12.branchcode))))
     left join rmtbranches t13 on (((t1.sourcingbranch) = (t13.branchcode))))
     left join finpftdetails t17 on (((t17.finreference) = (t1.finreference))))
     left join steppolicyheader t24 on (((t1.steppolicy) = (t24.policycode))))
     left join bmtcuststatuscodes t27 on (((t1.finstatus) = (t27.custstscode))))
     left join amtvehicledealer t28 on ((t1.accountsofficer = t28.dealerid)))
     left join relationshipofficers t30 on (((t1.dsacode) = (t30.rofficercode))))
     left join relationshipofficers t33 on (((t1.referralid) = (t33.rofficercode))))
     left join relationshipofficers t34 on (((t1.dmacode) = (t34.rofficercode))))
     left join bmtdepartments t35 on (((t1.salesdepartment) = (t35.deptcode))))
     left join smtdivisiondetail t36 on (((t7.findivision) = (t36.divisioncode))))
     left join relationshipofficers t37 on (((t1.employeename) = (t37.rofficercode))))
     left join rmtlovfielddetail t38 on (((t1.eligibilitymethod = t38.fieldcodeid) and ((t38.fieldcode) = 'elgmethod'))))
     left join loanpurposes t39 on (((t1.finpurpose) = (t39.loanpurposecode))))
     left join amtvehicledealer t40 on ((t1.connector = t40.dealerid)))
     left join business_vertical bv on ((bv.id = t1.businessvertical)))
     join customers c on ((c.custid = t1.custid)))
     left join amtvehicledealer t41 on ((t1.manufacturerdealerid = t41.dealerid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="155_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="156_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customerfinancedetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="156" author="murthy.y">
		<createView viewName="customerfinancedetails_aview" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    fm.finbranch,
    fm.rolecode,
    fm.nextrolecode,
    fm.recordtype,
    fm.finccy,
    fm.fintype,
    fm.finamount,
    fm.downpayment,
    fm.feechargeamt,
    fm.finstartdate,
    fm.lastmntby,
    fm.finassetvalue,
    c.custcif,
    c.custshrtname,
    '' prvroledesc,
    '' nextroledesc,
    c.custid,
    d.deptdesc,
    u.usrfname,
    u.usrlname lastmntbyuser,
    ft.fintypedesc,
    ft.findivision lovdescfindivision,
    fm.firstrepay,
    fm.numberofterms
   from ((((financemain fm
     join rmtfinancetypes ft on (((ft.fintype) = (fm.fintype))))
     join customers c on ((c.custid = fm.custid)))
     join secusers u on ((u.usrid = fm.lastmntby)))
     join bmtdepartments d on (((d.deptcode) = (u.usrdeptcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="156_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customerfinancedetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="157_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'covenant_alerts_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="157" author="murthy.y">
		<createView viewName="covenant_alerts_view" replaceIfExists="true">
			<![CDATA[
				 select c.id,
    c.covenanttypeid,
    ct.code,
    ct.description,
    c.keyreference,
    fm.fintype,
    c.frequency,
    c.nextfrequencydate,
    c.alertdays,
    ct.doctype,
    dt.doctypedesc doctypename
   from ((((covenants c
     join covenant_types ct on ((ct.id = c.covenanttypeid)))
     left join bmtdocumenttypes dt on (((dt.doctypecode) = (ct.doctype))))
     join financemain fm on ((((fm.finreference) = (c.keyreference)) and (fm.closingstatus is null))))
     left join covenant_documents cd on ((cd.covenantid = c.id)))
  where (((c.pdd = 1) and (cd.frequencydate is null)) or (cd.frequencydate <> c.nextfrequencydate))
			]]>
		</createView>
	</changeSet>
	<changeSet id="157_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'covenant_alerts_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="158_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fin_options_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="158" author="murthy.y">
		<createView viewName="fin_options_view" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.optiontype,
    t1.currentoptiondate,
    t1.frequency,
    t1.noticeperioddays,
    t1.alertdays,
    t1.optionexercise,
    t1.nextoptiondate,
    t1.alerttype,
    t1.alerttoroles,
    t1.usertemplate,
    t1.customertemplate,
    ut.templatecode usertemplatecode,
    cust.templatecode customertemplatecode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.remarks
   from ((fin_options_temp t1
     left join templates ut on ((ut.templateid = t1.usertemplate)))
     left join templates cust on ((cust.templateid = t1.customertemplate)))
union all
 select t1.id,
    t1.finreference,
    t1.optiontype,
    t1.currentoptiondate,
    t1.frequency,
    t1.noticeperioddays,
    t1.alertdays,
    t1.optionexercise,
    t1.nextoptiondate,
    t1.alerttype,
    t1.alerttoroles,
    t1.usertemplate,
    t1.customertemplate,
    ut.templatecode usertemplatecode,
    cust.templatecode customertemplatecode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.remarks
   from ((fin_options t1
     left join templates ut on ((ut.templateid = t1.usertemplate)))
     left join templates cust on ((cust.templateid = t1.customertemplate)))
  where (not (exists ( select 1
           from fin_options_temp
          where (fin_options_temp.id = t1.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="158_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fin_options_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="159_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'sampling_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="159" author="murthy.y">
		<createView viewName="sampling_view" replaceIfExists="true">
			<![CDATA[
				 select s.id,
    s.keyreference,
    s.createdby,
    s.createdon,
    s.tenure,
    s.interestrate,
    s.foireligibility,
    s.emi,
    s.loaneligibility,
    s.irreligibility,
    s.lcreligibility,
    s.ltveligibility,
    s.totalincome,
    s.totalliability,
    s.remarks,
    s.samplingon,
    s.decision,
    s.recommendedamount,
    s.decisionon,
    s.resubmitreason,
    s.totalcustomerintobligation,
    s.totalcoapplicantsintobligation,
    r.code resubmitreasoncode,
    r.description resubmitreasondesc,
    ft.fintype,
    ft.fintypedesc,
    ft.fincategory,
    ft.fingrcratetype,
    fm.numberofterms,
    fm.repaybaserate,
    fm.repayspecialrate,
    fm.repayprofitrate,
    fm.repaymargin,
    fm.repayminrate,
    fm.repaymaxrate,
    fm.finccy,
    ccy.ccyeditfield,
    lb.branchcode,
    lb.branchdesc,
    cu.custid,
    cu.custcif,
    cu.custshrtname,
    cu.custctgcode custcategory,
    s.version,
    s.lastmntby,
    s.lastmnton,
    s.recordstatus,
    s.rolecode,
    s.nextrolecode,
    s.taskid,
    s.nexttaskid,
    s.recordtype,
    s.workflowid
   from ((((((sampling_temp s
     join ( select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain_temp fm_1
        union all
         select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain fm_1
          where (not (exists ( select 1
                   from financemain_temp
                  where ((financemain_temp.finreference) = (fm_1.finreference)))))) fm on (((fm.finreference) = (s.keyreference))))
     join rmtcurrencies ccy on ((ccy.ccycode = fm.finccy)))
     join customers cu on ((cu.custid = fm.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (fm.fintype))))
     left join rmtbranches lb on (((lb.branchcode) = (fm.finbranch))))
     left join reasons r on ((r.id = s.resubmitreason)))
union all
 select s.id,
    s.keyreference,
    s.createdby,
    s.createdon,
    s.tenure,
    s.interestrate,
    s.foireligibility,
    s.emi,
    s.loaneligibility,
    s.irreligibility,
    s.lcreligibility,
    s.ltveligibility,
    s.totalincome,
    s.totalliability,
    s.remarks,
    s.samplingon,
    s.decision,
    s.recommendedamount,
    s.decisionon,
    s.resubmitreason,
    s.totalcustomerintobligation,
    s.totalcoapplicantsintobligation,
    r.code resubmitreasoncode,
    r.description resubmitreasondesc,
    ft.fintype,
    ft.fintypedesc,
    ft.fincategory,
    ft.fingrcratetype,
    fm.numberofterms,
    fm.repaybaserate,
    fm.repayspecialrate,
    fm.repayprofitrate,
    fm.repaymargin,
    fm.repayminrate,
    fm.repaymaxrate,
    fm.finccy,
    ccy.ccyeditfield,
    lb.branchcode,
    lb.branchdesc,
    cu.custid,
    cu.custcif,
    cu.custshrtname,
    cu.custctgcode custcategory,
    s.version,
    s.lastmntby,
    s.lastmnton,
    s.recordstatus,
    s.rolecode,
    s.nextrolecode,
    s.taskid,
    s.nexttaskid,
    s.recordtype,
    s.workflowid
   from ((((((sampling s
     join ( select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain_temp fm_1
        union all
         select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain fm_1
          where (not (exists ( select 1
                   from financemain_temp
                  where ((financemain_temp.finreference) = (fm_1.finreference)))))) fm on (((fm.finreference) = (s.keyreference))))
     join rmtcurrencies ccy on ((ccy.ccycode = fm.finccy)))
     join customers cu on ((cu.custid = fm.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (fm.fintype))))
     left join rmtbranches lb on (((lb.branchcode) = (fm.finbranch))))
     left join reasons r on ((r.id = s.resubmitreason)))
  where (not (exists ( select 1
           from sampling_temp
          where (sampling_temp.id = s.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="159_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'sampling_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="160_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finjointaccountdetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="160" author="murthy.y">
		<createView viewName="finjointaccountdetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
    t1.includeincome,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname lovdesccifname,
    t3.custid,
    t3.custdob lovcustdob
   from ((finjointaccountdetails_temp t1
     left join secusers t2 on ((t1.lastmntby = t2.usrid)))
     join customers t3 on (((t1.custcif) = (t3.custcif))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="160_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finjointaccountdetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="161_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'adviseuploads_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="161" author="murthy.y">
		<createView viewName="adviseuploads_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.adviseid,
    t1.uploadid,
    t1.finreference,
    t1.advisetype,
    t1.feetypecode,
    t1.valuedate,
    t1.adviseamount,
    t1.remarks,
    t1.status,
    t1.reason,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypeid,
    t1.rejectstage
   from (adviseuploads_temp t1
     left join feetypes t2 on (((t2.feetypecode) = (t1.feetypecode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="161_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'adviseuploads_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="162_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'disb_hdfc_export');
			]]>
		</sql>
	</changeSet>
	<changeSet id="162" author="murthy.y">
		<createView viewName="disb_hdfc_export" replaceIfExists="true">
			<![CDATA[
				 select disb.paymenttype,
    fm.custid,
    disb.beneficiaryaccno,
    (disb.amttobereleased / (100)) amttobereleased,
    disb.beneficiaryname,
    disb.liabilityholdname,
    disb.payableloc,
    '' beneficiarycity,
    disb.printingloc,
    '' address1,
    '' address2,
    '' address3,
    '' address4,
    '' address5,
    disb.paymentid,
    disb.finreference,
    'bafl@bajajfinserve.com' baflmailid,
    '' paymentdetails1,
    '' paymentdetails2,
    '' paymentdetails3,
    '' paymentdetails4,
    '' paymentdetails5,
    '' paymentdetails6,
    '' paymentdetails7,
    disb.llreferenceno,
    disb.lldate,
    branch.micr,
    branch.ifsc,
    bank.bankname,
    branch.branchdesc,
    bny.email,
    bank.bankcode,
    '' ddcharges
   from ((((finadvancepayments disb
     join financemain fm on (((fm.finreference) = (disb.finreference))))
     left join beneficiary bny on ((((bny.accholdername) = (disb.beneficiaryname)) and ((bny.accnumber) = (disb.beneficiaryaccno)))))
     left join bankbranches branch on ((branch.bankbranchid = disb.bankbranchid)))
     left join bmtbankdetail bank on (((bank.bankcode) = (disb.bankcode))))
  where ((disb.status) = ('approved'(500)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="162_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'disb_hdfc_export');
			]]>
		</sql>
	</changeSet>

	<changeSet id="163_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_sview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="163" author="murthy.y">
		<createView viewName="wiffinancemain_sview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finamount,
    t1.finccy,
    t1.fintype,
    t1.custid,
    t1.finassetvalue,
    t1.lastmnton,
    t1.finstartdate,
    t4.firsttaskowner lovdescfirsttaskowner,
    t5.productcategory lovdescproductcodename
   from ((((wiffinancemain t1
     join rmtfinancetypes t2 on ((((t1.fintype) = (t2.fintype)) and (t2.finisactive = 1))))
     left join lmtfinanceworkflowdef t3 on ((((t2.fintype) = (t3.fintype)) and ((t3.finevent) = ('origination'(500))))))
     join workflowdetails t4 on ((((t3.workflowtype) = (t4.workflowtype)) and (t4.workflowactive = 1))))
     join bmtproduct t5 on (((t2.fincategory) = (t5.productcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="163_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinancemain_sview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="164_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finchangecustomer_lview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="164" author="murthy.y">
		<createView viewName="finchangecustomer_lview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.oldcustid,
    c.custcif,
    t1.coapplicantid,
    jc.custcif jcustcif,
    c.custctgcode custcategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finchangecustomer_temp t1
     join customers c on ((t1.oldcustid = c.custid)))
     left join customers jc on ((t1.coapplicantid = jc.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="164_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finchangecustomer_lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="165_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="165" author="murthy.y">
		<createView viewName="wiffinancemain_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t15.custcif lovdesccustcif,
    t7.fintypedesc lovdescfintypename,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t7.finmaxamount lovdescfinmaxamt,
    t7.finminamount lovdescfinminamount,
    t7.finisalwdifferment lovdescfinalwdeferment,
    t1.mindownpayperc,
    t7.finisdwpayrequired lovdescdwnpayreq,
    t1.recaltype,
    t1.finassetvalue,
    t7.finmaxdifferment lovdescfinmaxdifferment,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.repaymargin,
    t1.grcmargin,
    t1.depreciationfrq,
    t1.fincommitmentref,
    t1.fincurrassetvalue,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.downpaybank,
    t1.downpaysupl,
    t7.findivision lovdescfindivisionname,
    t1.graceterms,
    t14.facilitytype,
    t15.custshrtname lovdesccustshrtname,
    t16.branchdesc lovdescfinbranchname,
    t1.totalgrossgrcpft,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t7.product lovdescfinproduct,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.feeaccountid,
    t1.tdsapplicable,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.feechargeamt,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.roundingtarget,
    t1.grcmaxamount,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis bpiratebasis,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.cbamount,
    t1.svamount,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.alwgrcadj,
    t1.planemihalwingrace,
    t1.endgrcperiodaftrfulldisb,
    t1.autoincgrcenddate,
    t1.writeoffloan,
    t1.restructure,
    t1.calcofsteps,
    t1.stepsappliedfor,
    t1.noofgrcsteps
   from ((((wiffinancemain t1
     left join wifindicativetermdetail_temp t14 on (((t14.finreference) = (t1.finreference))))
     left join customers t15 on ((t15.custid = t1.custid)))
     join rmtfinancetypes t7 on (((t1.fintype) = (t7.fintype))))
     left join rmtbranches t16 on (((t1.finbranch) = (t16.branchcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="165_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinancemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="166_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_hts_unadjusted_amt_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="166" author="murthy.y">
		<createView viewName="dm_hts_unadjusted_amt_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t1.finreference), '-7'::integer, 7) applid,
    (t2.balanceamt / rc.ccyminorccyunits) unadjusted_amount,
    null businessdate,
    null batch_id
   from ((financemain t1
     join ( select finexcessamount.finreference,
            sum(finexcessamount.balanceamt) balanceamt
           from finexcessamount
          group by finexcessamount.finreference) t2 on (((t1.finreference) = (t2.finreference))))
     join rmtcurrencies rc on ((rc.ccycode = t1.finccy)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="166_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_hts_unadjusted_amt_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="167_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinfeedetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="167" author="murthy.y">
		<createView viewName="wiffinfeedetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.feeid,
    t1.finreference,
    t1.feeseq,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.status,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc,
    t1.refundable,
    t1.instructionuid,
    t1.waivedgst,
    t1.referenceid,
    t1.taxheaderid,
    t1.paidtds,
    t1.remtds,
    t1.nettds
   from (wiffinfeedetail_temp t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
union all
 select t1.feeid,
    t1.finreference,
    t1.feeseq,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.status,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc,
    t1.refundable,
    t1.instructionuid,
    t1.waivedgst,
    t1.referenceid,
    t1.taxheaderid,
    t1.paidtds,
    t1.remtds,
    t1.nettds
   from (wiffinfeedetail t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
  where (not (exists ( select 1
           from wiffinfeedetail_temp
          where (((wiffinfeedetail_temp.finreference) = (t1.finreference)) and (wiffinfeedetail_temp.originationfee = t1.originationfee) and ((wiffinfeedetail_temp.finevent) = (t1.finevent)) and (wiffinfeedetail_temp.feetypeid = t1.feetypeid)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="167_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinfeedetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="168_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'availfinance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="168" author="murthy.y">
		<createView viewName="availfinance_view" replaceIfExists="true">
			<![CDATA[
				 select finpftdetails.fintype,
    finpftdetails.finreference,
    finpftdetails.custid,
    finpftdetails.finccy,
    finpftdetails.finamount,
    finpftdetails.totalpftschd,
    finpftdetails.finamount drawnprinciple,
    t.lastrepay,
    finpftdetails.maturitydate,
    finpftdetails.curreducingrate profitrate,
    finpftdetails.repayfrq,
    finpftdetails.finstatus status,
    finpftdetails.fincommitmentref,
    finpftdetails.totalpribal outstandingbal,
    rmtfinancetypes.findivision,
    smtdivisiondetail.divisioncodedesc findivisiondesc,
    finpftdetails.finstartdate,
    finpftdetails.noinst
   from (((finpftdetails
     join rmtfinancetypes on (((finpftdetails.fintype) = (rmtfinancetypes.fintype))))
     join smtdivisiondetail on (((smtdivisiondetail.divisioncode) = (rmtfinancetypes.findivision))))
     left join ( select finrepaydetails.finreference,
            max(finrepaydetails.finpostdate) lastrepay
           from finrepaydetails
          group by finrepaydetails.finreference) t on (((t.finreference) = (finpftdetails.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="168_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'availfinance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="169_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinscheduledetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="169" author="murthy.y">
		<createView viewName="wiffinscheduledetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.schseq,
    t1.schdate,
    t1.pftonschdate,
    t1.repayonschdate,
    t1.cpzonschdate,
    t1.rvwonschdate,
    t1.disbonschdate,
    t1.downpaymentonschdate,
    t1.balanceforpftcal,
    t1.baserate,
    t1.splrate,
    t1.actrate,
    t1.noofdays,
    t1.dayfactor,
    t1.profitcalc,
    t1.profitschd,
    t1.principalschd,
    t1.repayamount,
    t1.profitbalance,
    t1.disbamount,
    t1.cpzamount,
    t1.downpaymentamount,
    t1.closingbalance,
    t1.profitfraction,
    t1.prvrepayamount,
    t1.schdpftpaid,
    t1.schpftpaid,
    t1.schdpripaid,
    t1.schpripaid,
    t1.specifier,
    t1.defschddate,
    t1.schdmethod,
    t1.mrgrate,
    t1.calonindrate,
    t1.feechargeamt,
    t1.calculatedrate,
    t1.orgpft,
    t1.orgpri,
    t1.orgendbal,
    t1.orgplanpft,
    t1.feeschd,
    t1.schdfeepaid,
    t1.schdfeeos,
    t1.insschd,
    t1.schdinspaid,
    t1.advpftrate,
    t1.advprofit,
    t1.advrepayamount,
    t1.advbaserate,
    t1.advmargin,
    t1.advcalrate,
    t1.suplrent,
    t1.incrcost,
    t1.suplrentpaid,
    t1.incrcostpaid,
    t1.rolloveronschdate,
    t1.rolloveramount,
    t1.rolloveramountpaid,
    t1.tdsamount,
    t1.pftdaysbasis,
    t1.insuranceamt,
    t1.instnumber,
    t1.bpiorholiday,
    t1.frqdate,
    t1.recallock,
    t1.tdspaid,
    t1.cpzbalance
   from wiffinscheduledetails_temp t1
union all
 select t1.finreference,
    t1.schseq,
    t1.schdate,
    t1.pftonschdate,
    t1.repayonschdate,
    t1.cpzonschdate,
    t1.rvwonschdate,
    t1.disbonschdate,
    t1.downpaymentonschdate,
    t1.balanceforpftcal,
    t1.baserate,
    t1.splrate,
    t1.actrate,
    t1.noofdays,
    t1.dayfactor,
    t1.profitcalc,
    t1.profitschd,
    t1.principalschd,
    t1.repayamount,
    t1.profitbalance,
    t1.disbamount,
    t1.cpzamount,
    t1.downpaymentamount,
    t1.closingbalance,
    t1.profitfraction,
    t1.prvrepayamount,
    t1.schdpftpaid,
    t1.schpftpaid,
    t1.schdpripaid,
    t1.schpripaid,
    t1.specifier,
    t1.defschddate,
    t1.schdmethod,
    t1.mrgrate,
    t1.calonindrate,
    t1.feechargeamt,
    t1.calculatedrate,
    t1.orgpft,
    t1.orgpri,
    t1.orgendbal,
    t1.orgplanpft,
    t1.feeschd,
    t1.schdfeepaid,
    t1.schdfeeos,
    t1.insschd,
    t1.schdinspaid,
    t1.advpftrate,
    t1.advprofit,
    t1.advrepayamount,
    t1.advbaserate,
    t1.advmargin,
    t1.advcalrate,
    t1.suplrent,
    t1.incrcost,
    t1.suplrentpaid,
    t1.incrcostpaid,
    t1.rolloveronschdate,
    t1.rolloveramount,
    t1.rolloveramountpaid,
    t1.tdsamount,
    t1.pftdaysbasis,
    t1.insuranceamt,
    t1.instnumber,
    t1.bpiorholiday,
    t1.frqdate,
    t1.recallock,
    t1.tdspaid,
    t1.cpzbalance
   from wiffinscheduledetails t1
  where (not (exists ( select 1
           from wiffinscheduledetails_temp
          where ((wiffinscheduledetails_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="169_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinscheduledetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="170_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_dview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="170" author="murthy.y">
		<createView viewName="financemain_dview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t2.custid,
    t2.custcif,
    t3.fincategory lovdescproductcodename,
    t3.findivision lovdescfindivision,
    t1.samplingrequired,
    t1.legalrequired,
    t1.instbasedschd,
    t1.allowsubvention,
    t1.tdstype,
    t1.writeoffloan,
    t1.restructure,
    t1.calcofsteps,
    t1.stepsappliedfor,
    t1.noofgrcsteps,
    t1.schdversion,
    t1.subventionfrom,
    t1.manufacturerdealerid,
    t5.dealername manufacturerdealername,
    t5.code manufacturerdealercode
   from ((((financemain_temp t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t3.fintype) = (t1.fintype))))
     join investmentfinheader t4 on (((t4.investmentref) = (t1.investmentref))))
     left join amtvehicledealer t5 on ((t1.manufacturerdealerid = t5.dealerid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="170_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_dview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="171_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fedview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="171" author="murthy.y">
		<createView viewName="finreceiptheader_fedview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
        case
            when (t1.recagainst = 'c'::bpchar) then t13.custcif
            else t1.reference
        end reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.finbranch,
    coalesce(t3.custcif, t13.custcif) custcif,
    coalesce(t3.custshrtname, t13.custshrtname) custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    coalesce(t2.fintype, t1.fintype) fintype,
    coalesce(t4.fintypedesc, t14.fintypedesc) fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.module,
    t1.extreference,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t15.code closuretypedesc
   from (((((((((((((finreceiptheader_temp t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join rmtfinancetypes t14 on (((t1.fintype) = (t14.fintype))))
     left join closure_types t15 on ((t15.id = t1.closuretypeid)))
union all
 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
        case
            when (t1.recagainst = 'c'::bpchar) then t13.custcif
            else t1.reference
        end reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.finbranch,
    coalesce(t3.custcif, t13.custcif) custcif,
    coalesce(t3.custshrtname, t13.custshrtname) custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    coalesce(t2.fintype, t1.fintype) fintype,
    coalesce(t4.fintypedesc, t14.fintypedesc) fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.module,
    t1.extreference,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t15.code closuretypedesc
   from (((((((((((((finreceiptheader t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join rmtfinancetypes t14 on (((t1.fintype) = (t14.fintype))))
     left join closure_types t15 on ((t15.id = t1.closuretypeid)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="171_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fedview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="172_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeereceipts_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="172" author="murthy.y">
		<createView viewName="finfeereceipts_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.feeid,
    t1.receiptid,
    t1.paidamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.amount receiptamount,
    t2.transactionref,
    t2.favournumber,
    t3.feetypeid,
    t3.vasreference,
    t4.feetypecode,
    t4.feetypedesc,
    t3.finreference,
    t5.receiptmode receipttype,
    t1.paidtds
   from ((((finfeereceipts_temp t1
     join finreceiptdetail_temp t2 on ((t1.receiptid = t2.receiptid)))
     join finfeedetail_view t3 on ((t1.feeid = t3.feeid)))
     left join feetypes t4 on ((t3.feetypeid = t4.feetypeid)))
     join finreceiptheader_temp t5 on ((t1.receiptid = t5.receiptid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="172_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeereceipts_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="173_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finscheduledetails_iview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="173" author="murthy.y">
		<createView viewName="finscheduledetails_iview" replaceIfExists="true">
			<![CDATA[
				 select temp.repayaccountid,
    temp.fintype,
    temp.finreference,
    temp.schdate,
    temp.finccy,
    temp.repayamount
   from ( select row_number() over (partition by t1.finreference order by t1.schdate) row_num,
            t2.repayaccountid,
            t2.fintype,
            t2.finreference,
            t1.schdate,
            t2.finccy,
            t1.repayamount
           from (finscheduledetails t1
             join financemain t2 on (((t1.finreference) = (t2.finreference))))
          where (((((t1.profitschd - t1.schdpftpaid) + t1.principalschd) - t1.schdpripaid) <> (0)) and (t1.schdate > ( select (smtparameters.sysparmvalue)::date sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = ('app_date'(500))))))) temp
  where (temp.row_num = 1)
			]]>
		</createView>
	</changeSet>
	<changeSet id="173_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finscheduledetails_iview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="174_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffindisbursementdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="174" author="murthy.y">
		<createView viewName="wiffindisbursementdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.disbdate,
    t1.disbseq,
    t1.disbdesc,
    t1.disbaccountid,
    t1.disbamount,
    t1.disbdisbursed,
    t1.disbisactive,
    t1.disbremarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.disbreqdate,
    t1.feechargeamt,
    t1.insuranceamt
   from wiffindisbursementdetails_temp t1
union all
 select t1.finreference,
    t1.disbdate,
    t1.disbseq,
    t1.disbdesc,
    t1.disbaccountid,
    t1.disbamount,
    t1.disbdisbursed,
    t1.disbisactive,
    t1.disbremarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.disbreqdate,
    t1.feechargeamt,
    t1.insuranceamt
   from wiffindisbursementdetails t1
  where (not (exists ( select 1
           from wiffindisbursementdetails_temp
          where ((wiffindisbursementdetails_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="174_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffindisbursementdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="175_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_lfview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="175" author="murthy.y">
		<createView viewName="financemain_lfview" replaceIfExists="true">
			<![CDATA[
				 select f.finreference,
    f.custid,
    c.custcif lovdesccustcif,
    c.custshrtname lovdesccustshrtname,
    f.fintype,
    f.finisactive,
    sd.entitycode,
    f.rcdmaintainsts,
    f.recordstatus,
    f.quickdisb
   from (((financemain_temp f
     join customers c on (((f.custid = c.custid) and (f.quickdisb = 1) and ((f.recordstatus) = 'submitted'))))
     join rmtfinancetypes ft on (((ft.fintype) = (f.fintype))))
     join smtdivisiondetail sd on (((ft.findivision) = (sd.divisioncode))))
union all
 select f.finreference,
    f.custid,
    c.custcif lovdesccustcif,
    c.custshrtname lovdesccustshrtname,
    f.fintype,
    f.finisactive,
    sd.entitycode,
    f.rcdmaintainsts,
    f.recordstatus,
    f.quickdisb
   from (((financemain f
     join customers c on ((f.custid = c.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (f.fintype))))
     join smtdivisiondetail sd on (((ft.findivision) = (sd.divisioncode))))
  where (not (exists ( select 1 expr1
           from financemain_temp
          where ((financemain_temp.finreference) = (f.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="175_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_lfview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="176_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintaxdetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="176" author="murthy.y">
		<createView viewName="fintaxdetail_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.applicablefor,
    t1.taxcustid,
    t1.taxexempted,
    t1.taxnumber,
    t1.addrline1,
    t1.addrline2,
    t1.addrline3,
    t1.addrline4,
    t1.country,
    t1.province,
    t1.city,
    t1.pincode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.countrydesc countryname,
    t3.cpprovincename provincename,
    t4.pccityname cityname,
    t5.areaname pincodename,
    t6.custcif,
    t6.custshrtname,
    t1.sezcertificateno,
    t1.sezvaluedate,
    t1.addressdetail,
    t1.pincodeid
   from (((((fintaxdetail_temp t1
     left join bmtcountries t2 on (((t1.country)::bpchar = t2.countrycode)))
     left join rmtcountryvsprovince t3 on ((((t1.province) = (t3.cpprovince)) and ((t1.country)::bpchar = t3.cpcountry))))
     left join rmtprovincevscity t4 on ((((t1.city) = (t4.pccity)) and ((t1.province) = (t4.pcprovince)) and ((t1.country)::bpchar = t4.pccountry))))
     left join pincodes t5 on (((t1.pincodeid = t5.pincodeid) and ((t1.city) = (t5.city)))))
     join customers t6 on ((t1.taxcustid = (t6.custid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="176_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintaxdetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="177_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'verification_fi_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="177" author="murthy.y">
		<createView viewName="verification_fi_view" replaceIfExists="true">
			<![CDATA[
				 select fi.verificationid,
    flv.fintype,
    fi.agentcode,
    fi.agentname,
    fi.type,
    fi.verifieddate,
    fi.status,
    fi.reason,
    r1.code reasoncode,
    r1.description reasondesc,
    fi.summaryremarks,
    fi.version,
    fi.lastmntby,
    fi.lastmnton,
    fi.recordstatus,
    fi.rolecode,
    fi.nextrolecode,
    fi.taskid,
    fi.nexttaskid,
    fi.recordtype,
    fi.workflowid,
    fi.addresstype,
    c.custshrtname name,
    fi.housenumber,
    fi.flatnumber,
    fi.street,
    fi.addressline1,
    fi.addressline2,
    fi.addressline3,
    fi.addressline4,
    fi.addressline5,
    fi.country,
    fi.province,
    fi.city,
    fi.contactnumber1,
    fi.contactnumber2,
    fi.pobox,
    fi.zipcode,
    fi.ownershipstatus,
    fi.yearsatpresentaddress,
    fi.personmet,
    fi.relationship,
    r2.prelationdesc lovrelationdesc,
    fi.contactnumber,
    fi.neighbourhoodfeedback,
    fi.livingstandard,
    fi.negativecheck,
    fi.noofattempts,
    fi.observationremarks,
    c.custcif cif,
    v.custid,
    v.keyreference,
    v.createdon,
    v.agency,
    v.verificationdate,
    a.dealername agencyname,
    v.reinitid,
    a.dealertype,
    r1.reasontypecode,
    country.countrydesc,
    p.cpprovincename provincedesc,
    city.pccityname citydesc
   from (((((((((verification_fi_temp fi
     join verifications v on ((v.id = fi.verificationid)))
     left join amtvehicledealer a on ((a.dealerid = v.agency)))
     join bmtcountries country on ((country.countrycode = fi.country)))
     join rmtcountryvsprovince p on (((p.cpprovince) = (fi.province))))
     join rmtprovincevscity city on (((city.pccity) = (fi.city))))
     left join customers c on (((c.custcif) = (v.reference))))
     left join reasons_aview r1 on ((r1.id = fi.reason)))
     left join bmtprelationcodes r2 on (((r2.prelationcode) = (fi.relationship))))
     left join financemain_view flv on (((flv.finreference) = (v.keyreference))))
union all
 select fi.verificationid,
    flv.fintype,
    fi.agentcode,
    fi.agentname,
    fi.type,
    fi.verifieddate,
    fi.status,
    fi.reason,
    r1.code reasoncode,
    r1.description reasondesc,
    fi.summaryremarks,
    fi.version,
    fi.lastmntby,
    fi.lastmnton,
    fi.recordstatus,
    fi.rolecode,
    fi.nextrolecode,
    fi.taskid,
    fi.nexttaskid,
    fi.recordtype,
    fi.workflowid,
    fi.addresstype,
    c.custshrtname name,
    fi.housenumber,
    fi.flatnumber,
    fi.street,
    fi.addressline1,
    fi.addressline2,
    fi.addressline3,
    fi.addressline4,
    fi.addressline5,
    fi.country,
    fi.province,
    fi.city,
    fi.contactnumber1,
    fi.contactnumber2,
    fi.pobox,
    fi.zipcode,
    fi.ownershipstatus,
    fi.yearsatpresentaddress,
    fi.personmet,
    fi.relationship,
    r2.prelationdesc lovrelationdesc,
    fi.contactnumber,
    fi.neighbourhoodfeedback,
    fi.livingstandard,
    fi.negativecheck,
    fi.noofattempts,
    fi.observationremarks,
    c.custcif cif,
    v.custid,
    v.keyreference,
    v.createdon,
    v.agency,
    v.verificationdate,
    a.dealername agencyname,
    v.reinitid,
    a.dealertype,
    r1.reasontypecode,
    country.countrydesc,
    p.cpprovincename provincedesc,
    city.pccityname citydesc
   from (((((((((verification_fi fi
     join verifications v on ((v.id = fi.verificationid)))
     left join amtvehicledealer a on ((a.dealerid = v.agency)))
     join bmtcountries country on ((country.countrycode = fi.country)))
     join rmtcountryvsprovince p on (((p.cpprovince) = (fi.province))))
     join rmtprovincevscity city on (((city.pccity) = (fi.city))))
     left join customers c on (((c.custcif) = (v.reference))))
     left join reasons_aview r1 on ((r1.id = fi.reason)))
     left join bmtprelationcodes r2 on (((r2.prelationcode) = (fi.relationship))))
     left join financemain_view flv on (((flv.finreference) = (v.keyreference))))
  where (not (exists ( select 1
           from verification_fi_temp
          where (verification_fi_temp.verificationid = fi.verificationid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="177_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'verification_fi_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="178_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_soa_loan_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="178" author="murthy.y">
		<createView viewName="rpt_soa_loan_view" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    fm.finassetvalue loanamount,
    fm.repaybaserate plrrate,
    fm.repaymargin variance,
    fm.effectiverateofreturn irr,
    fp.curreducingrate roi,
    fp.noinst tenure,
    fp.totalpripaid emireceivedpri,
    fp.totalpftpaid emireceivedpft,
    0.00 preferredcardlimit,
    fp.prvrpyschpri previnstamtpri,
    fp.prvrpyschpft previnstamtpft,
        case
            when ((fm.repayratebasis) = 'r') then 'reducing'
            when ((fm.repayratebasis) = 'f') then 'flat'
            when ((fm.repayratebasis) = 'c') then 'flat converting to reduce'
            else ''
        end intratetype,
    fp.latestdisbdate lastdisbursaldate,
    fp.firstrepaydate firstduedate,
    fm.maturitydate endinstallmentdate,
    '0.00/ 0' advinstamt,
    fm.finisactive,
    fm.closingstatus,
    fm.closeddate,
    fp.futureinst futureinstno,
    fp.totalprischd futurepri1,
    fp.tdschdpri futurepri2,
    fp.totalpftschd futurerpypft1,
    fp.tdschdpft futurerpypft2,
    fp.totchargespaid charge_coll_cust,
    fp.upfrontfee upfront_int_cust,
    0 int_paid_dealer_upfront,
    0 pre_emi_int_paid,
    '' repo_status,
    '' repo_date,
    '' sale_date,
    '' release_date,
    fp.latestrpydate,
    c.ccyminorccyunits,
    c.ccyeditfield,
    coalesce(fp.totalpftcpz, (0)) totalpftcpz
   from (((financemain fm
     join finpftdetails fp on (((fp.finreference) = (fm.finreference))))
     join rmtfinancetypes rf on (((rf.fintype) = (fm.fintype))))
     join rmtcurrencies c on ((c.ccycode = fp.finccy)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="178_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_soa_loan_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="179_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finguarantorsdetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="179" author="murthy.y">
		<createView viewName="finguarantorsdetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.guarantorid,
    t1.finreference,
    t1.bankcustomer,
    t1.guarantorcif,
    t1.guarantoridtype,
    t1.guarantoridnumber,
    t1.guranteepercentage,
    t1.mobileno,
    t1.emailid,
    t1.guarantorproof,
    t1.guarantorproofname,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.guarantorcifname,
    t1.remarks,
    t1.addrhnbr,
    t1.flatnbr,
    t1.addrstreet,
    t1.addrline1,
    t1.addrline2,
    t1.pobox,
    t1.addrcity,
    t1.addrprovince,
    t1.addrcountry,
    t1.addrzip,
    t1.guarantorgendercode,
    ( select bmtidentitytype.identitydesc
           from bmtidentitytype
          where ((bmtidentitytype.identitytype) = (t1.guarantoridtype))) guarantoridtypename,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    coalesce(t3.custid, (0)) custid,
    t3.custshrtname,
    t3.custdob lovcustdob
   from ((finguarantorsdetails t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
     left join customers t3 on (((t1.guarantorcif) = (t3.custcif))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="179_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finguarantorsdetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="180_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finoverdueenquiry_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="180" author="murthy.y">
		<createView viewName="finoverdueenquiry_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.grcperiodenddate,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.allowgrcperiod,
    t1.downpayment,
    t1.migratedfinance,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t5.fintypedesc lovdescfintypename,
    t6.custcif lovdesccustcif,
    t6.custshrtname lovdesccustshrtname,
    t7.branchdesc lovdescfinbranchname,
    t1.blacklisted,
    t5.finscheduleon lovdescfinscheduleon,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.closingstatus,
    t8.custtypectg,
    t1.graceterms,
    t5.findivision lovdescfindivision,
    t5.fincategory lovdescproductcodename,
    t1.alwmultidisb,
    t5.finisalwdifferment lovdescfinalwdeferment,
    t1.defferments,
    t1.fincurrassetvalue,
    (((t1.finamount - t1.downpayment) + t1.feechargeamt) - t1.finrepaymentamount) curfinamount,
    ((t1.finamount - t1.downpayment) + t1.feechargeamt) financingamount,
    t1.finstatus,
    t1.totalcpz
   from ((((financemain t1
     join rmtfinancetypes t5 on (((t1.fintype) = (t5.fintype))))
     join customers t6 on ((t1.custid = t6.custid)))
     join rmtbranches t7 on (((t1.finbranch) = (t7.branchcode))))
     join rmtcusttypes t8 on (((t6.custtypecode) = (t8.custtypecode))))
  where ((t1.finreference) in ( select finoddetails.finreference
           from finoddetails))
			]]>
		</createView>
	</changeSet>
	<changeSet id="180_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finoverdueenquiry_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="181_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'gl_vochers_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="181" author="murthy.y">
		<createView viewName="gl_vochers_view" replaceIfExists="true">
			<![CDATA[
				 select p.linkedtranid,
    p.finreference,
    p.postdate,
    p.valuedate,
    p.drorcr,
    p.postamount,
    p.finevent,
    am.account,
    am.hostaccount,
    at.actype,
    at.actypedesc,
    atg.groupcode,
    atg.groupdescription,
    p.transorder,
    p.trancode,
    p.trandesc
   from (((postings p
     join accountmapping am on (((am.account) = (p.account))))
     join rmtaccounttypes at on (((at.actype) = (am.accounttype))))
     join accounttypegroup atg on ((atg.groupid = at.actypegrpid)))
  where ((p.postamount <> (0)) and ((p.finevent) <> 'jvpost'))
union all
 select distinct p.linkedtranid,
    jve.reference finreference,
    p.postdate,
    p.valuedate,
    p.drorcr,
    p.postamount,
    p.finevent,
    am.account,
    am.hostaccount,
    atg.groupcode actype,
    atg.groupdescription actypedesc,
    at.actype groupcode,
    at.actypedesc groupdescription,
    p.transorder,
    p.trancode,
    p.trandesc
   from (((((jvpostingentry jp
     join jvpostings jve on ((jve.batchreference = jp.batchreference)))
     join postings p on (((p.finreference) = ((jp.batchreference)(20)))))
     join accountmapping am on (((am.account) = (p.account))))
     join rmtaccounttypes at on (((at.actype) = (am.accounttype))))
     join accounttypegroup atg on ((atg.groupid = at.actypegrpid)))
  where ((p.postamount <> (0)) and ((p.finevent) = 'jvpost'))
			]]>
		</createView>
	</changeSet>
	<changeSet id="181_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'gl_vochers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="182_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_bounce_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="182" author="murthy.y">
		<createView viewName="dm_bounce_details_view" replaceIfExists="true">
			<![CDATA[
				 select distinct substr((t3.finreference), '-7'::integer, 7) applid,
    t2.receiptseqid chequeid,
    t3.finreference agreementno,
    t3.postdate bounce_date,
    t4.bouncecode bounce_reason,
    (t2.amount / (100)) bounce_amt,
    null businessdate,
    'n' processed_flag,
    null process_date,
    '' segments,
    null(16,2) business_year,
    coalesce(t2.valuedate, t5.schdate) chequedate,
    null batch_id,
    t3.lastmnton
   from ((((manualadvise t3
     join finreceiptheader t on ((t.receiptid = t3.receiptid)))
     join finreceiptdetail t2 on ((t.receiptid = t2.receiptid)))
     join bouncereasons t4 on ((t4.bounceid = t3.bounceid)))
     left join presentmentdetails t5 on (((t5.receiptid = t2.receiptid) and ((t2.paymenttype) = ('present'(500))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="182_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_bounce_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="183_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincovenanttype_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="183" author="murthy.y">
		<createView viewName="fincovenanttype_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc covenanttypedesc,
    t5.code categorycode,
    t4.roledesc mandroledesc,
    t1.receivabledate,
    t1.internaluse,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd pddflag,
    t3.otc otcflag
   from ((((fincovenanttype t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
     join bmtdocumenttypes t3 on (((t3.doctypecode) = (t1.covenanttype))))
     left join documentcategory t5 on ((t5.id = t3.categoryid)))
     join secroles t4 on (((t4.rolecd) = (t1.mandrole))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="183_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincovenanttype_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="184_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cibil_customer_extarct_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="184" author="murthy.y">
		<createView viewName="cibil_customer_extarct_view" replaceIfExists="true">
			<![CDATA[
				 select c.custid,
    fm.finreference,
        case
            when (fm.finreference is null) then 4
            else 1
        end ownership,
    pd.latestrpydate
   from (((financemain fm
     join customers c on ((c.custid = fm.custid)))
     join finpftdetails pd on (((pd.finreference) = (fm.finreference))))
     join rmtfinancetypes rft on (((rft.fintype) = (pd.fintype))))
  where ((c.custid in ( select distinct financemain.custid
           from financemain)) and ((c.custtypecode) = any ( select rmtcusttypes.custtypecode
           from rmtcusttypes
          where ((rmtcusttypes.custtypectg) = ('retail'(500))))))
union all
 select c.custid,
    fm.finreference,
    3 ownership,
    pd.latestrpydate
   from ((((finguarantorsdetails gd
     join customers c on (((c.custcif) = (gd.guarantorcif))))
     join financemain fm on (((fm.finreference) = (gd.finreference))))
     join finpftdetails pd on (((pd.finreference) = (gd.finreference))))
     join rmtfinancetypes rft on (((rft.fintype) = (pd.fintype))))
  where ((c.custid in ( select distinct financemain.custid
           from financemain)) and ((c.custtypecode) = any ( select rmtcusttypes.custtypecode
           from rmtcusttypes
          where ((rmtcusttypes.custtypectg) = ('retail'(500))))))
union all
 select c.custid,
    fm.finreference,
    4 ownership,
    pd.latestrpydate
   from ((((finjointaccountdetails ja
     join customers c on (((c.custcif) = (ja.custcif))))
     join financemain fm on (((fm.finreference) = (ja.finreference))))
     join finpftdetails pd on (((pd.finreference) = (ja.finreference))))
     join rmtfinancetypes rft on (((rft.fintype) = (pd.fintype))))
  where ((c.custid in ( select distinct financemain.custid
           from financemain)) and ((c.custtypecode) = any ( select rmtcusttypes.custtypecode
           from rmtcusttypes
          where ((rmtcusttypes.custtypectg) = ('retail'(500))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="184_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cibil_customer_extarct_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="185_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeedetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="185" author="murthy.y">
		<createView viewName="finfeedetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.feeid,
    t1.finreference,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeseq,
    t1.feeorder,
    t1.calculatedamount,
    t1.actualamount,
    t1.waivedamount,
    t1.paidamount,
    t1.feeschedulemethod,
    t1.terms,
    t1.remainingfee,
    t1.paymentref,
    t1.calculationtype,
    t1.rulecode,
    t1.fixedamount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.vasreference,
    t1.taxapplicable,
    t1.taxcomponent,
    t1.paidamountoriginal,
    t1.paidamountgst,
    t1.netamountoriginal,
    t1.netamountgst,
    t1.netamount,
    t1.remainingfeeoriginal,
    t1.remainingfeegst,
    t1.actualamountoriginal,
    t1.actualamountgst,
    t1.feeamz,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.transactionid,
    t1.workflowid,
    t2.feetypecode,
    t2.feetypedesc,
    t1.status,
    t1.refundable,
    t1.instructionuid,
    t1.actpercentage,
    t1.waivedgst,
    t1.referenceid,
    t1.taxheaderid,
    t1.paidtds,
    t1.remtds,
    t1.nettds,
    t2.tdsreq,
    t3.productcode vasproductcode
   from ((finfeedetail t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join vasrecording t3 on (((t1.vasreference) = (t3.vasreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="185_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeedetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="186_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'paymentheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="186" author="murthy.y">
		<createView viewName="paymentheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.paymentid,
    t1.finreference,
    t1.paymenttype,
    t1.paymentamount,
    t1.createdon,
    t1.approvedon,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    pit.paymenttype paymentinstrtype
   from (paymentheader_temp t1
     left join paymentinstructions_temp pit on ((t1.paymentid = pit.paymentid)))
union all
 select t1.paymentid,
    t1.finreference,
    t1.paymenttype,
    t1.paymentamount,
    t1.createdon,
    t1.approvedon,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    pi.paymenttype paymentinstrtype
   from (paymentheader t1
     left join paymentinstructions pi on ((t1.paymentid = pi.paymentid)))
  where (not (exists ( select 1
           from paymentheader_temp
          where (paymentheader_temp.paymentid = t1.paymentid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="186_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'paymentheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="187_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_loanwise_charge_dtls_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="187" author="murthy.y">
		<createView viewName="dm_loanwise_charge_dtls_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t1.finreference), '-7'::integer, 7) agreementid,
    m.adviseid txnadviceid,
    coalesce(m.feetypeid, m.bounceid) chargeid,
    null chargecodeid,
    coalesce(f.feetypedesc, b.reason) chargedesc,
    (m.adviseamount / rc.ccyminorccyunits) chargeamt,
    null status,
    null amtinprocess,
    (m.paidamount / rc.ccyminorccyunits) txnadjustedamt,
    (m.adviseamount / rc.ccyminorccyunits) adviceamt,
    m.postdate advicedate,
    null businessdate,
    null processdate,
    'n' processed_flag,
    '' segment,
    null batch_id
   from (((((finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join ( select finfeedetail.finreference,
            ('01' || finfeedetail.feeid) adviseid,
            finfeedetail.feetypeid,
            (finfeedetail.actualamount - finfeedetail.waivedamount) adviseamount,
            finfeedetail.paidamount,
            finfeedetail.postdate,
            null bounceid
           from finfeedetail
          where (finfeedetail.feetypeid > 0)
        union all
         select manualadvise.finreference,
            ('02' || manualadvise.adviseid),
            manualadvise.feetypeid,
            manualadvise.adviseamount,
            manualadvise.paidamount,
            manualadvise.postdate,
            manualadvise.bounceid
           from manualadvise) m on (((m.finreference) = (t1.finreference))))
     join rmtcurrencies rc on ((rc.ccycode = t1.finccy)))
     left join feetypes f on ((f.feetypeid = m.feetypeid)))
     left join bouncereasons b on ((b.bounceid = m.bounceid)))
  where ("substring"((t1.finreference), '-7'::integer, 7) is not null)
			]]>
		</createView>
	</changeSet>
	<changeSet id="187_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_loanwise_charge_dtls_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="188_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'payorderissueheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="188" author="murthy.y">
		<createView viewName="payorderissueheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t4.custcif,
    t4.custshrtname,
    t3.fintype,
    t3.fintypedesc,
    t3.fincategory,
    t4.custcrcpr,
    t1.totalpoamount,
    t1.totalpocount,
    t1.issuedpoamount,
    t1.issuedpocount,
    t1.podueamount,
    t1.poduecount,
    t2.finccy,
    t2.custid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.alwmultipartydisb,
    t2.finisactive
   from (((payorderissueheader_temp t1
     join ( select financemain.finccy,
            financemain.fintype,
            financemain.custid,
            financemain.finreference,
            financemain.finisactive
           from financemain
        union all
         select financemain_temp.finccy,
            financemain_temp.fintype,
            financemain_temp.custid,
            financemain_temp.finreference,
            financemain_temp.finisactive
           from financemain_temp
          where (not (exists ( select 1
                   from financemain
                  where ((financemain.finreference) = (financemain_temp.finreference)))))) t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join customers t4 on ((t2.custid = t4.custid)))
union all
 select t1.finreference,
    t4.custcif,
    t4.custshrtname,
    t3.fintype,
    t3.fintypedesc,
    t3.fincategory,
    t4.custcrcpr,
    t1.totalpoamount,
    t1.totalpocount,
    t1.issuedpoamount,
    t1.issuedpocount,
    t1.podueamount,
    t1.poduecount,
    t2.finccy,
    t2.custid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.alwmultipartydisb,
    t2.finisactive
   from (((payorderissueheader t1
     join ( select financemain.finccy,
            financemain.fintype,
            financemain.custid,
            financemain.finreference,
            financemain.finisactive
           from financemain
        union all
         select financemain_temp.finccy,
            financemain_temp.fintype,
            financemain_temp.custid,
            financemain_temp.finreference,
            financemain_temp.finisactive
           from financemain_temp
          where (not (exists ( select 1
                   from financemain
                  where ((financemain.finreference) = (financemain_temp.finreference)))))) t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join customers t4 on ((t2.custid = t4.custid)))
  where (not (exists ( select 1
           from payorderissueheader_temp
          where ((payorderissueheader_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="188_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'payorderissueheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="189_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_mandate_request_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="189" author="murthy.y">
		<createView viewName="int_mandate_request_view" replaceIfExists="true">
			<![CDATA[
				 select m.mandateid,
    m.documentname,
    bd.bankshortcode bankcode,
    bd.bankname,
        case
            when (lb.branchcode is null) then cb.branchcode
            else lb.branchcode
        end branchcode,
        case
            when (lb.branchdesc is null) then cb.branchdesc
            else lb.branchdesc
        end branchdesc,
    cust.custcif,
    cust.custshrtname,
    cust.custcorebank,
    ft.fintypedesc fintype,
    fin.finreference,
    coalesce((( select sum(t.totalamount) sum
           from ( select max((fsd.repayamount + fsd.feeschd)) totalamount
                   from (finscheduledetails fsd
                     join financemain fm on ((((fm.finreference) = (fsd.finreference)) and (fm.custid = m.custid))))
                  group by fm.finreference) t) / ccy.ccyminorccyunits), (0)) cust_emi,
    coalesce((( select sum(t.totalamount) sum
           from ( select max((fsd.repayamount + fsd.feeschd)) totalamount
                   from finscheduledetails fsd
                  where (((fsd.repayonschdate = 1) or (fsd.pftonschdate = 1)) and ((fsd.finreference) in ( select financemain.finreference
                           from financemain
                          where (financemain.mandateid = m.mandateid))))
                  group by fsd.finreference) t) / ccy.ccyminorccyunits), (0)) emi,
        case m.openmandate
            when 1 then 'new open ecs'
            else 'no open ecs'
        end openmandate,
    m.accnumber,
        case
            when ((m.acctype) = '10') then 'savings account'
            when ((m.acctype) = '11') then 'current account'
            when ((m.acctype) = '11') then 'cash credit account'
            else m.acctype
        end acctype,
    m.accholdername,
    bb.micr,
    bb.ifsc,
    bb.addofbranch,
    ( select min(finpftdetails.firstrepaydate) min
           from finpftdetails
          where ((finpftdetails.finreference) in ( select financemain.finreference
                   from financemain
                  where (financemain.mandateid = m.mandateid)))) firstduedate,
    ( select max(finscheduledetails.schdate) max
           from finscheduledetails
          where (((finscheduledetails.repayonschdate = 1) or (finscheduledetails.pftonschdate = 1)) and ((finscheduledetails.finreference) in ( select financemain.finreference
                   from financemain
                  where (financemain.mandateid = m.mandateid))))) emienddate,
    coalesce(m.maxlimit, (0)) maxlimit,
    (coalesce(( select sum(t.mandatedebitamount) sum
           from ( select max((finscheduledetails.repayamount + finscheduledetails.feeschd)) mandatedebitamount
                   from finscheduledetails
                  where (((finscheduledetails.repayonschdate = 1) or (finscheduledetails.pftonschdate = 1)) and ((finscheduledetails.finreference) in ( select financemain.finreference
                           from financemain
                          where (financemain.mandateid = m.mandateid))))
                  group by finscheduledetails.finreference) t), (0)) / ccy.ccyminorccyunits) debitamount,
    fin.numberofterms,
    m.periodicity,
    m.startdate,
    m.expirydate,
    fin.applicationno,
    m.mandatetype,
    m.status,
    m.inputdate,
    m.recordstatus,
    m.recordtype,
    m.mandateccy,
    coalesce(ccy.ccyminorccyunits, (100)) ccyminorccyunits,
    m.entitycode,
    cp.phonenumber,
    ce.custemail,
    pb.partnerbankname,
    m.lastmnton,
    bb.branchdesc bank_branch_name,
    et.entitydesc,
    pb.utilitycode,
    pb.sponsorbankcode,
    m.partnerbankid,
    pb.partnerbankcode,
    pb.branchifsccode
   from ((((((((((((mandates m
     join bankbranches bb on ((bb.bankbranchid = m.bankbranchid)))
     join bmtbankdetail bd on (((bd.bankcode) = (bb.bankcode))))
     join customers cust on ((cust.custid = m.custid)))
     join rmtbranches cb on (((cb.branchcode) = (cust.custdftbranch))))
     left join partnerbanks pb on ((pb.partnerbankid = m.partnerbankid)))
     left join customeremails ce on (((ce.custid = cust.custid) and (ce.custemailpriority = 5))))
     left join customerphonenumbers cp on (((cp.phonecustid = cust.custid) and (cp.phonetypepriority = 5))))
     left join rmtcurrencies ccy on ((ccy.ccycode = m.mandateccy)))
     left join financemain fin on (((m.orgreference) = (fin.finreference))))
     left join rmtbranches lb on (((lb.branchcode) = (fin.finbranch))))
     left join rmtfinancetypes ft on (((fin.fintype) = (ft.fintype))))
     left join entity et on (((m.entitycode) = (et.entitycode))))
  where (((m.status) = 'new') and (not (m.mandateid in ( select mandate_requests.mandateid
           from mandate_requests
          where (((mandate_requests.status) = 'ac') or ((mandate_requests.status) = 'new'))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="189_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_mandate_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="190_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="190" author="murthy.y">
		<createView viewName="rejectfinancemain_view" replaceIfExists="true">
			<![CDATA[
				 select f.finreference,
    t.fincategory lovdescproductcodename,
    f.fintype,
    f.finbranch,
    f.finstartdate,
    f.maturitydate,
    f.numberofterms,
    f.finccy,
    f.finamount,
    (((f.finamount - f.downpayment) + f.feechargeamt) + f.insuranceamt) financingamount,
    f.feechargeamt,
    f.insuranceamt,
    ((((f.finamount - f.downpayment) + f.feechargeamt) + f.insuranceamt) - f.finrepaymentamount) curfinamount,
    f.downpayment,
    f.fincurrassetvalue,
    f.finassetvalue,
    f.allowdrawingpower,
    f.promotionseqid,
    f.sanbsdschdle,
    c.custcif lovdesccustcif,
    f.svamount,
    f.cbamount,
    f.finisratervwatgrcend,
    f.alwgrcadj,
    f.endgrcperiodaftrfulldisb,
    f.autoincgrcenddate,
    f.reqloanamt,
    f.reqloantenor,
    f.offerproduct,
    f.offeramount,
    f.custsegmentation,
    f.baseproduct,
    f.processtype,
    f.bureautimeseries,
    f.campaignname,
    f.existinglanrefno,
    f.leadsource,
    f.posource,
    f.rsa,
    f.verification,
    f.sourcingbranch,
    f.sourchannelcategory,
    f.asmname,
    f.tdstype,
    f.writeoffloan,
    f.restructure,
    f.calcofsteps,
    f.stepsappliedfor,
    f.noofgrcsteps
   from ((rejectfinancemain f
     left join customers c on ((f.custid = c.custid)))
     left join rmtfinancetypes t on (((f.fintype) = (t.fintype))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="190_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="191_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finadvancepayments_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="191" author="murthy.y">
		<createView viewName="finadvancepayments_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.paymentid,
    t1.paymentseq,
    t1.paymentdetail,
    t1.amttobereleased,
    t1.liabilityholdname,
    t1.transactionref,
    t1.beneficiaryname,
    t1.beneficiaryaccno,
    t1.reenterbeneficiaryaccno,
    t1.description,
    t1.paymenttype,
    t1.llreferenceno,
    t1.lldate,
    t1.custcontribution,
    t1.sellercontribution,
    t1.remarks,
    t1.disbdate,
    t1.disbseq,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.bankcode,
    t1.payableloc,
    t1.printingloc,
    t1.valuedate,
    t1.bankbranchid,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.clearingdate,
    t1.status,
    t1.active,
    t1.inputdate,
    t1.disbccy,
    t1.poissued,
    t3.bankcode branchbankcode,
    t31.bankname branchbankname,
    t3.branchcode,
    t3.branchdesc,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.partnerbankid,
    t5.partnerbankcode,
    t5.partnerbankname,
    t1.linkedtranid,
    t5.actype partnerbankactype,
    t5.accountno partnerbankac,
    t6.branchdesc printinglocdesc,
    t1.rejectreason,
    t1.realizationdate,
    t1.holddisbursement,
    t1.vasreference
   from (((((finadvancepayments t1
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t31 on (((t31.bankcode) = (t3.bankcode))))
     left join bmtbankdetail t4 on (((t1.bankcode) = (t4.bankcode))))
     left join partnerbanks t5 on ((t5.partnerbankid = t1.partnerbankid)))
     left join bankbranches t6 on ((((t6.branchcode) = (t1.printingloc)) and ((t6.bankcode) = (t1.bankcode)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="191_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finadvancepayments_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="192_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'provision_movements_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="192" author="murthy.y">
		<createView viewName="provision_movements_view" replaceIfExists="true">
			<![CDATA[
				 select pa.id,
    pa.finreference,
    pa.closingbalance,
    pa.outstandprincipal,
    pa.outstandprofit,
    pa.profitaccruedanddue,
    pa.profitaccruedandnotdue,
    pa.collateralvalue,
    pa.duefromdate,
    pa.lastfullypaiddate,
    pa.currbucket,
    pa.duedays,
    pa.dpd,
    pa.provisiondate,
    pa.provisionedamt,
    pa.assetcode,
    pa.assetstageorder,
    pa.npa,
    pa.manualprovision,
    pa.linkedtranid,
    pa.chglinkedtranid,
    pa.version,
    pa.lastmntby,
    pa.lastmnton,
    pa.recordstatus,
    pa.rolecode,
    pa.nextrolecode,
    pa.taskid,
    pa.nexttaskid,
    pa.recordtype,
    pa.workflowid,
    fm.fintype,
    fm.finbranch,
    c.custid,
    c.custcif,
    c.custshrtname,
    pa.npatemplateid,
    np.code npatemplatecode,
    np.description npatemplatedesc
   from (((provision_movements pa
     join financemain fm on (((fm.finreference) = (pa.finreference))))
     join customers c on ((c.custid = fm.custid)))
     left join npa_template_types np on ((np.id = pa.npatemplateid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="192_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'provision_movements_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="193_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_insurance_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="193" author="murthy.y">
		<createView viewName="dm_insurance_details_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t1.finreference), '-7'::integer, 7) applid,
    t1.finreference agreementno,
    null assetid,
    t2.hostfeetypecode insurance_type,
    t2.vasfeeamt insur_premium,
    null insurance_renewal_date,
    null businessdate,
    'n' processed_flag,
    null process_date,
    null segments,
    null business_year,
    null policy_tenure,
    null sum_assured,
    null nominee_name,
    null good_health,
    null critical_illness_flag,
    null relationship,
    null nominee_address,
    null nominee_relation,
    null nominee_dob,
    null nominee_age,
    null nominee_contactno,
    null nominee_name2,
    null nominee_address2,
    null nominee_relation2,
    null nominee_dob2,
    null nominee_age2,
    null nominee_contactno2,
    null dfgh,
    null batch_id
   from (financemain t1
     join ( select t1_1.finreference,
            t2_1.hostfeetypecode,
            sum((t1_1.actualamount - t1_1.waivedamount)) vasfeeamt
           from ((finfeedetail t1_1
             left join feetypes t2_1 on ((t1_1.feetypeid = t2_1.feetypeid)))
             left join vasrecording t4 on (((t1_1.vasreference) = (t4.vasreference))))
          where (t2_1.hostfeetypecode is not null)
          group by t1_1.finreference, t2_1.hostfeetypecode) t2 on (((t1.finreference) = (t2.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="193_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_insurance_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="194_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financeenquiry_hierarchy_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="194" author="murthy.y">
		<createView viewName="financeenquiry_hierarchy_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.calterms numberofterms,
    t1.custid,
    t1.finamount,
    t1.grcperiodenddate,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.allowgrcperiod,
    t1.downpayment,
    t1.migratedfinance,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.fincurrassetvalue,
    t1.blacklisted,
    t1.feechargeamt,
    t1.closingstatus,
    t1.graceterms,
    t1.alwmultidisb,
    t1.defferments,
    t1.finstatus,
    t1.mandateid,
    t1.finrepaymethod,
    t1.finassetvalue,
    t1.insuranceamt,
    (((t1.fincurrassetvalue + t1.feechargeamt) + t1.insuranceamt) + t1.totalcpz) financingamount,
    t1.totalcpz,
    ((((t1.fincurrassetvalue + t1.totalcpz) - t1.finrepaymentamount) + t1.feechargeamt) + t1.insuranceamt) curfinamount,
    t2.fintypedesc lovdescfintypename,
    t2.finscheduleon lovdescfinscheduleon,
    t2.findivision lovdescfindivision,
    t2.fincategory lovdescproductcodename,
    t2.finisalwdifferment lovdescfinalwdeferment,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.branchdesc lovdescfinbranchname,
    t5.custtypectg,
    coalesce(t9.noinst, (0)) noinst,
    h.reporting_to
   from ((((((financemain t1
     join user_hierarchy h on (((t1.businessvertical = coalesce(h.business_vertical, t1.businessvertical)) and ((t1.fincategory) = (coalesce(h.product, t1.fincategory))) and ((t1.fintype) = (coalesce(h.fin_type, t1.fintype))) and ((t1.finbranch) = (coalesce(h.branch, t1.finbranch))))))
     join rmtfinancetypes t2 on (((t1.fintype) = (t2.fintype))))
     join customers t3 on ((t1.custid = t3.custid)))
     join rmtbranches t4 on (((t1.finbranch) = (t4.branchcode))))
     join rmtcusttypes t5 on (((t3.custtypecode) = (t5.custtypecode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="194_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financeenquiry_hierarchy_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="195_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralassignment_ctview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="195" author="murthy.y">
		<createView viewName="collateralassignment_ctview" replaceIfExists="true">
			<![CDATA[
				 select ca.module,
    ca.reference,
    ca.collateralref,
    ca.assignperc,
    cs.collateralccy,
    ca.active,
    cs.collateralvalue,
    cs.bankvaluation,
    (t.totassignperc - ca.assignperc) totassignperc,
    ((((fm.fincurrassetvalue - fm.downpayment) + fm.feechargeamt) + fm.insuranceamt) - fm.finrepaymentamount) utilizedamount,
    ca.version,
    ca.lastmntby,
    ca.lastmnton,
    ca.recordstatus,
    ca.rolecode,
    ca.nextrolecode,
    ca.taskid,
    ca.nexttaskid,
    ca.recordtype,
    ca.workflowid,
    cs.specialltv,
    cs.bankltv,
    ca.hostreference,
    cu.custcif depositorcif,
    cs.collateraltype
   from ((((collateralassignment_temp ca
     join collateralsetup_temp cs on (((ca.collateralref) = (cs.collateralref))))
     join customers cu on ((cu.custid = cs.depositorid)))
     left join ( select t1.collateralref,
            sum(t1.assignperc) totassignperc
           from ( select collateralassignment_temp.reference,
                    collateralassignment_temp.collateralref,
                    collateralassignment_temp.assignperc
                   from collateralassignment_temp
                union
                 select ca_1.reference,
                    ca_1.collateralref,
                    ca_1.assignperc
                   from collateralassignment ca_1
                  where (not (exists ( select 1
                           from collateralassignment_temp
                          where (((collateralassignment_temp.collateralref) = (ca_1.collateralref)) and ((collateralassignment_temp.module) = (ca_1.module)) and ((collateralassignment_temp.reference) = (ca_1.reference))))))) t1
          group by t1.collateralref) t on (((t.collateralref) = (ca.collateralref))))
     left join financemain_temp fm on (((ca.reference) = (fm.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="195_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralassignment_ctview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="196_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'ijarahfinance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="196" author="murthy.y">
		<createView viewName="ijarahfinance_view" replaceIfExists="true">
			<![CDATA[
				 select f.finreference,
    f.fintype,
    f.finccy,
    f.schedulemethod,
    f.profitdaysbasis,
    c.custcif,
    f.finbranch,
    ft.fincategory productcode,
    s.schdate
   from (((financemain f
     join rmtfinancetypes ft on (((f.fintype) = (ft.fintype))))
     join customers c on ((c.custid = f.custid)))
     join finscheduledetails s on (((f.finreference) = (s.finreference))))
  where ((((s.profitschd - s.schdpftpaid) > (0)) or ((s.principalschd - s.schdpripaid) > (0))) and ((ft.fincategory) = ('ijarah'(500))) and (s.baserate is not null))
			]]>
		</createView>
	</changeSet>
	<changeSet id="196_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'ijarahfinance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="197_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'manualadvise_lovview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="197" author="murthy.y">
		<createView viewName="manualadvise_lovview" replaceIfExists="true">
			<![CDATA[
				 select manualadvise_aview.adviseid,
    manualadvise_aview.feetypeid,
    manualadvise_aview.advisetype,
    manualadvise_aview.finreference,
    (round((manualadvise_aview.adviseamount / (100)), 2))(36,2) adviseamount,
    manualadvise_aview.valuedate,
    manualadvise_aview.postdate,
    (round((manualadvise_aview.reservedamt / (100)), 2))(36,2) reservedamt,
    (round((manualadvise_aview.balanceamt / (100)), 2))(36,2) balanceamt
   from manualadvise_aview
  where (manualadvise_aview.holddue = 0)
			]]>
		</createView>
	</changeSet>
	<changeSet id="197_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'manualadvise_lovview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="198_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontributordetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="198" author="murthy.y">
		<createView viewName="fincontributordetail_tview" replaceIfExists="true">
			<![CDATA[
				 select fincontributordetail_temp.finreference,
    fincontributordetail_temp.contributorbaseno,
    fincontributordetail_temp.custid,
    fincontributordetail_temp.contributorname,
    fincontributordetail_temp.contributorinvest,
    fincontributordetail_temp.investaccount,
    fincontributordetail_temp.investdate,
    fincontributordetail_temp.totalinvestperc,
    fincontributordetail_temp.mudaribperc,
    fincontributordetail_temp.version,
    fincontributordetail_temp.lastmntby,
    fincontributordetail_temp.lastmnton,
    fincontributordetail_temp.recordstatus,
    fincontributordetail_temp.rolecode,
    fincontributordetail_temp.nextrolecode,
    fincontributordetail_temp.taskid,
    fincontributordetail_temp.nexttaskid,
    fincontributordetail_temp.recordtype,
    fincontributordetail_temp.workflowid,
    customers.custcif lovdesccontributorcif,
    fincontributordetail_temp.recorddate
   from (fincontributordetail_temp
     join customers on ((fincontributordetail_temp.custid = customers.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="198_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontributordetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="199_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'paymentheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="199" author="murthy.y">
		<createView viewName="paymentheader_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.paymentid,
    t1.finreference,
    t1.paymenttype,
    t1.paymentamount,
    t1.createdon,
    t1.approvedon,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    pi.paymenttype paymentinstrtype
   from (paymentheader t1
     left join paymentinstructions pi on ((t1.paymentid = pi.paymentid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="199_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'paymentheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="200_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finmaintaininstructions_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="200" author="murthy.y">
		<createView viewName="finmaintaininstructions_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finmaintainid,
    t1.finreference,
    t1.event,
    t1.tdsapplicable,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from finmaintaininstructions t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="200_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finmaintaininstructions_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="201_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeereceipts_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="201" author="murthy.y">
		<createView viewName="finfeereceipts_view" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.feeid,
    t1.receiptid,
    t1.paidamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.amount receiptamount,
    t2.transactionref,
    t2.favournumber,
    t3.feetypeid,
    t3.vasreference,
    t4.feetypecode,
    t4.feetypedesc,
    t3.finreference,
    t5.receiptmode receipttype,
    t1.paidtds
   from ((((finfeereceipts_temp t1
     join finreceiptdetail t2 on ((t1.receiptid = t2.receiptid)))
     join finfeedetail_view t3 on ((t1.feeid = t3.feeid)))
     left join feetypes t4 on ((t3.feetypeid = t4.feetypeid)))
     join finreceiptheader t5 on ((t1.receiptid = t5.receiptid)))
union all
 select t1.id,
    t1.feeid,
    t1.receiptid,
    t1.paidamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.amount receiptamount,
    t2.transactionref,
    t2.favournumber,
    t3.feetypeid,
    t3.vasreference,
    t4.feetypecode,
    t4.feetypedesc,
    t3.finreference,
    t5.receiptmode receipttype,
    t1.paidtds
   from ((((finfeereceipts t1
     join finreceiptdetail t2 on ((t1.receiptid = t2.receiptid)))
     join finfeedetail_view t3 on ((t1.feeid = t3.feeid)))
     left join feetypes t4 on ((t3.feetypeid = t4.feetypeid)))
     join finreceiptheader t5 on ((t1.receiptid = t5.receiptid)))
  where (not (exists ( select 1
           from finfeereceipts_temp
          where (finfeereceipts_temp.id = t1.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="201_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeereceipts_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="202_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'vasrecording_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="202" author="murthy.y">
		<createView viewName="vasrecording_view" replaceIfExists="true">
			<![CDATA[
				 select t1.productcode,
    t1.postingagainst,
    t1.primarylinkref,
    t1.vasreference,
    t1.fee,
    t1.renewalfee,
    t1.feepaymentmode,
    t1.valuedate,
    t1.accrualtilldate,
    t1.recurringdate,
    t1.dsaid,
    t1.dmaid,
    t1.fulfilofficerid,
    t1.referralid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.productdesc,
    t3.rofficerdesc dsaiddesc,
    t4.rofficerdesc dmaiddesc,
    t5.rofficerdesc fulfilofficeriddesc,
    t6.rofficerdesc referraliddesc,
    t7.producttype,
    t7.producttypedesc,
    t8.productctg,
    t8.productctgdesc,
    t9.dealername manufacturerdesc,
    t1.vasstatus,
    t1.financeprocess,
    t2.feeaccounting,
    t1.paidamt,
    t1.waivedamt,
    t1.status,
    t1.entitycode,
    t1.oldvasreference,
    t1.remarks,
    t1.reason,
    t1.cancelamt,
    t1.servicereqnumber,
    t1.cancelafterflp,
    t2.freelockperiod flpdays,
    fm.fintype,
    t1.manualadviseid,
    t1.paymentinsid,
    t1.receivableadviseid,
    t1.terminsurancelien,
    t1.providername,
    t1.policynumber,
    t1.medicalapplicable,
    t1.medicalstatus
   from (((((((((vasrecording_temp t1
     left join vasstructure t2 on (((t1.productcode) = (t2.productcode))))
     left join relationshipofficers t3 on (((t1.dsaid) = (t3.rofficercode))))
     left join relationshipofficers t4 on (((t1.dmaid) = (t4.rofficercode))))
     left join relationshipofficers t5 on (((t1.fulfilofficerid) = (t5.rofficercode))))
     left join relationshipofficers t6 on (((t1.referralid) = (t6.rofficercode))))
     join vasproducttype t7 on (((t7.producttype) = (t2.producttype))))
     join vasproductcategory t8 on (((t7.productctg) = (t8.productctg))))
     left join amtvehicledealer t9 on ((t2.manufacturerid = t9.dealerid)))
     left join financemain fm on (((t1.primarylinkref) = (fm.finreference))))
union all
 select t1.productcode,
    t1.postingagainst,
    t1.primarylinkref,
    t1.vasreference,
    t1.fee,
    t1.renewalfee,
    t1.feepaymentmode,
    t1.valuedate,
    t1.accrualtilldate,
    t1.recurringdate,
    t1.dsaid,
    t1.dmaid,
    t1.fulfilofficerid,
    t1.referralid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.productdesc,
    t3.rofficerdesc dsaiddesc,
    t4.rofficerdesc dmaiddesc,
    t5.rofficerdesc fulfilofficeriddesc,
    t6.rofficerdesc referraliddesc,
    t7.producttype,
    t7.producttypedesc,
    t8.productctg,
    t8.productctgdesc,
    t9.dealername manufacturerdesc,
    t1.vasstatus,
    t1.financeprocess,
    t2.feeaccounting,
    t1.paidamt,
    t1.waivedamt,
    t1.status,
    t1.entitycode,
    t1.oldvasreference,
    t1.remarks,
    t1.reason,
    t1.cancelamt,
    t1.servicereqnumber,
    t1.cancelafterflp,
    t2.freelockperiod flpdays,
    fm.fintype,
    t1.manualadviseid,
    t1.paymentinsid,
    t1.receivableadviseid,
    t1.terminsurancelien,
    t1.providername,
    t1.policynumber,
    t1.medicalapplicable,
    t1.medicalstatus
   from (((((((((vasrecording t1
     left join vasstructure t2 on (((t1.productcode) = (t2.productcode))))
     left join relationshipofficers t3 on (((t1.dsaid) = (t3.rofficercode))))
     left join relationshipofficers t4 on (((t1.dmaid) = (t4.rofficercode))))
     left join relationshipofficers t5 on (((t1.fulfilofficerid) = (t5.rofficercode))))
     left join relationshipofficers t6 on (((t1.referralid) = (t6.rofficercode))))
     join vasproducttype t7 on (((t7.producttype) = (t2.producttype))))
     join vasproductcategory t8 on (((t7.productctg) = (t8.productctg))))
     left join amtvehicledealer t9 on ((t2.manufacturerid = t9.dealerid)))
     left join financemain fm on (((t1.primarylinkref) = (fm.finreference))))
  where (not (exists ( select 1
           from vasrecording_temp
          where ((vasrecording_temp.vasreference) = (t1.vasreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="202_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'vasrecording_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="203_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'sampling_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="203" author="murthy.y">
		<createView viewName="sampling_aview" replaceIfExists="true">
			<![CDATA[
				 select s.id,
    s.keyreference,
    s.createdby,
    s.createdon,
    s.tenure,
    s.interestrate,
    s.foireligibility,
    s.emi,
    s.loaneligibility,
    s.irreligibility,
    s.lcreligibility,
    s.ltveligibility,
    s.totalincome,
    s.totalliability,
    s.remarks,
    s.samplingon,
    s.decision,
    s.recommendedamount,
    s.decisionon,
    s.resubmitreason,
    s.totalcustomerintobligation,
    s.totalcoapplicantsintobligation,
    r.code resubmitreasoncode,
    r.description resubmitreasondesc,
    ft.fintype,
    ft.fintypedesc,
    ft.fincategory,
    ft.fingrcratetype,
    fm.numberofterms,
    fm.repaybaserate,
    fm.repayspecialrate,
    fm.repayprofitrate,
    fm.repaymargin,
    fm.repayminrate,
    fm.repaymaxrate,
    fm.finccy,
    ccy.ccyeditfield,
    lb.branchcode,
    lb.branchdesc,
    cu.custid,
    cu.custcif,
    cu.custshrtname,
    cu.custctgcode custcategory,
    s.version,
    s.lastmntby,
    s.lastmnton,
    s.recordstatus,
    s.rolecode,
    s.nextrolecode,
    s.taskid,
    s.nexttaskid,
    s.recordtype,
    s.workflowid
   from ((((((sampling s
     join ( select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain_temp fm_1
        union all
         select fm_1.finreference,
            fm_1.fintype,
            fm_1.finbranch,
            fm_1.custid,
            fm_1.numberofterms,
            fm_1.repaybaserate,
            fm_1.repayspecialrate,
            fm_1.repayprofitrate,
            fm_1.repaymargin,
            fm_1.rpyminrate repayminrate,
            fm_1.rpymaxrate repaymaxrate,
            fm_1.finccy
           from financemain fm_1
          where (not (exists ( select 1
                   from financemain_temp
                  where ((financemain_temp.finreference) = (fm_1.finreference)))))) fm on (((fm.finreference) = (s.keyreference))))
     join rmtcurrencies ccy on ((ccy.ccycode = fm.finccy)))
     join customers cu on ((cu.custid = fm.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (fm.fintype))))
     left join rmtbranches lb on (((lb.branchcode) = (fm.finbranch))))
     left join reasons r on ((r.id = s.resubmitreason)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="203_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'sampling_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="204_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="204" author="murthy.y">
		<createView viewName="finreceiptheader_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.extreference,
    t1.module,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    t2.finisactive,
    t1.waviedamt,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t1.actfinreceipt,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t13.code closuretypedesc
   from (((((((((((finreceiptheader t1
     join financemain t2 on (((t1.reference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join closure_types t13 on ((t13.id = t1.closuretypeid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="204_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="205_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'disb_hdfc_neft_rtgs_export');
			]]>
		</sql>
	</changeSet>
	<changeSet id="205" author="murthy.y">
		<createView viewName="disb_hdfc_neft_rtgs_export" replaceIfExists="true">
			<![CDATA[
				 select "substring"((finadvpayments.paymenttype), 0, 1) transactiontype,
    beneficiary.custid beneficiarycode,
    finadvpayments.beneficiaryaccno beneficiaryaccountno,
    finadvpayments.amttobereleased instrumentamount,
    finadvpayments.beneficiaryname,
    '' draweelocation,
    '' printlocation,
    '' address1,
    '' address2,
    '' address3,
    '' address4,
    '' address5,
    finadvpayments.finreference instructionrefno,
    finadvpayments.paymentseq customerrefno,
    '' paymentdetails1,
    '' paymentdetails2,
    '' paymentdetails3,
    '' paymentdetails4,
    '' paymentdetails5,
    '' paymentdetails6,
    '' paymentdetails7,
    finadvpayments.llreferenceno chequeno,
    finadvpayments.lldate trndate,
    branches.micr micrnumber,
    branches.ifsc ifsccode,
    bank.bankname bank,
    branches.branchdesc branch,
    beneficiary.email
   from (((finadvancepayments finadvpayments
     join bankbranches branches on ((finadvpayments.bankbranchid = branches.bankbranchid)))
     join bmtbankdetail bank on (((branches.bankcode) = (bank.bankcode))))
     left join beneficiary beneficiary on ((((finadvpayments.beneficiaryname) = (beneficiary.accholdername)) and ((finadvpayments.beneficiaryaccno) = (beneficiary.accnumber)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="205_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'disb_hdfc_neft_rtgs_export');
			]]>
		</sql>
	</changeSet>

	<changeSet id="206_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'subventionscheduledetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="206" author="murthy.y">
		<createView viewName="subventionscheduledetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.disbseqid,
    t1.schdate,
    t1.noofdays,
    t1.discountedpft,
    t1.presentvalue,
    t1.futurevalue,
    t1.closingbal
   from subventionscheduledetail_temp t1
union all
 select t1.finreference,
    t1.disbseqid,
    t1.schdate,
    t1.noofdays,
    t1.discountedpft,
    t1.presentvalue,
    t1.futurevalue,
    t1.closingbal
   from subventionscheduledetail t1
  where (not (exists ( select 1
           from subventionscheduledetail_temp
          where (((subventionscheduledetail_temp.finreference) = (t1.finreference)) and (subventionscheduledetail_temp.disbseqid = t1.disbseqid)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="206_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'subventionscheduledetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="207_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'investment_deal_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="207" author="murthy.y">
		<createView viewName="investment_deal_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.investmentref,
    t1.fintype,
    t3.fintypedesc lovdescfintypename,
    t1.finccy,
    t1.finamount,
    t1.totalprofit,
    t1.totalrepayamt,
    t1.finstartdate,
    t1.maturitydate,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.taskid,
    t1.nexttaskid,
    t1.workflowid,
    t2.custid,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t3.fincategory lovdescproductcodename,
    t1.repayprofitrate,
    t1.finbranch,
    t7.branchdesc lovdescfinbranchname,
    t1.schedulemethod,
    t10.schdmethoddesc lovdescschedulemethodname,
    t1.profitdaysbasis,
    t9.intratebasiscode lovdescprofitdaysbasisname,
    t1.disbaccountid,
    t1.repayaccountid
   from ((((((financemain_temp t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t3.fintype) = (t1.fintype))))
     join investmentfinheader_view t6 on (((t6.investmentref) = (t1.investmentref))))
     join rmtbranches t7 on (((t7.branchcode) = (t1.finbranch))))
     join bmtintratebasiscodes t9 on (((t9.intratebasiscode) = (t1.profitdaysbasis))))
     join bmtschdmethod t10 on (((t1.schedulemethod) = (t10.schdmethod))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="207_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'investment_deal_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="208_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finsteppolicydetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="208" author="murthy.y">
		<createView viewName="finsteppolicydetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.stepno,
    t1.tenorsplitperc,
    t1.installments,
    t1.ratemargin,
    t1.emisplitperc,
    t1.steppedemi,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepspecifier,
    t1.stepstart,
    t1.stepend,
    t1.autocal
   from finsteppolicydetail t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="208_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finsteppolicydetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="209_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financepremiumdetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="209" author="murthy.y">
		<createView viewName="financepremiumdetail_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.issuenumber,
    t1.noofunits,
    t1.facevalue,
    t1.premiumtype,
    t1.premiumvalue,
    t1.priceperunit,
    t1.yieldvalue,
    t1.lastcoupondate,
    t1.accruedprofit,
    t1.purchasedate,
    t1.fairvalueperunit,
    t1.fairvalueamount
   from financepremiumdetail_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="209_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financepremiumdetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="210_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'feewaivers_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="210" author="murthy.y">
		<createView viewName="feewaivers_view" replaceIfExists="true">
			<![CDATA[
				 select distinct t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    coalesce(t5.roledesc, t10.nextrolecode) lovdescrequeststage,
    t10.waiverid,
    t10.event rcdmaintainsts,
    t10.nextrolecode,
    t10.recordstatus,
    t10.recordtype,
    t1.version
   from (((((((feewaiverheader_temp t10
     join financemain t1 on (((t1.finreference) = (t10.finreference))))
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t10.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
     join ( select manualadvise.finreference
           from manualadvise
          where ((manualadvise.advisetype = 1) and (((manualadvise.adviseamount - manualadvise.paidamount) - manualadvise.waivedamount) > (0)))
        union all
         select finoddetails.finreference
           from finoddetails
          where ((finoddetails.totpenaltybal > (0)) or (finoddetails.lpibal > (0)))) t on (((t.finreference) = (t1.finreference))))
  where ((t10.event) = 'feewaivers')
union all
 select distinct t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t3.finisalwdifferment lovdescfinalwdeferment,
    t3.findivision lovdescfindivision,
    t3.fincategory lovdescproductcodename,
    t4.productcategory,
    coalesce(t9.noinst, (0)) noinst,
    null lovdescrequeststage,
    0 waiverid,
    null rcdmaintainsts,
    null nextrolecode,
    null recordstatus,
    null recordtype,
    t1.version
   from ((((((financemain t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t1.fintype) = (t3.fintype))))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     join bmtproduct t4 on (((t3.fincategory) = (t4.productcode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
     join ( select manualadvise.finreference
           from manualadvise
          where ((manualadvise.advisetype = 1) and (((manualadvise.adviseamount - manualadvise.paidamount) - manualadvise.waivedamount) > (0)))
        union all
         select finoddetails.finreference
           from finoddetails
          where ((finoddetails.totpenaltybal > (0)) or (finoddetails.lpibal > (0)))) t on (((t.finreference) = (t1.finreference))))
  where (not (exists ( select 1 expr1
           from feewaiverheader_temp
          where ((feewaiverheader_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="210_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'feewaivers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="211_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_finguarantordtls_pvt_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="211" author="murthy.y">
		<createView viewName="rpt_finguarantordtls_pvt_view" replaceIfExists="true">
			<![CDATA[
				 select pvt.finreference,
    pvt.co_gur1,
    pvt.co_gur2,
    pvt.co_gur3
   from crosstab('select row_number() over(partition by finreference order by finreference) row_num,finreference,custshrtname
					  from finguarantorsdetails fj inner join customers c on c.custcif = fj.guarantorcif ') pvt(finreference text, co_gur1 text, co_gur2 text, co_gur3 text)
			]]>
		</createView>
	</changeSet>
	<changeSet id="211_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_finguarantordtls_pvt_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="212_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mandateenquiry_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="212" author="murthy.y">
		<createView viewName="mandateenquiry_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.calterms numberofterms,
    t1.custid,
    t1.finamount,
    t1.grcperiodenddate,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.allowgrcperiod,
    t1.downpayment,
    t1.migratedfinance,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.fincurrassetvalue,
    t1.blacklisted,
    t1.feechargeamt,
    t1.closingstatus,
    t1.graceterms,
    t1.alwmultidisb,
    t1.defferments,
    t1.finstatus,
    t1.mandateid,
    t1.finrepaymethod,
    t1.finassetvalue,
    t1.insuranceamt,
    ((t1.fincurrassetvalue + t1.feechargeamt) + t1.insuranceamt) financingamount,
    (((t1.fincurrassetvalue - t1.finrepaymentamount) + t1.feechargeamt) + t1.insuranceamt) curfinamount,
    t2.fintypedesc lovdescfintypename,
    t2.finscheduleon lovdescfinscheduleon,
    t2.findivision lovdescfindivision,
    t2.fincategory lovdescproductcodename,
    t2.finisalwdifferment lovdescfinalwdeferment,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.branchdesc lovdescfinbranchname,
    t5.custtypectg,
    coalesce(t9.noinst, (0)) noinst,
    t6.maxinstamount
   from ((((((financemain t1
     join rmtfinancetypes t2 on (((t1.fintype) = (t2.fintype))))
     join customers t3 on ((t1.custid = t3.custid)))
     join rmtbranches t4 on (((t1.finbranch) = (t4.branchcode))))
     join rmtcusttypes t5 on (((t3.custtypecode) = (t5.custtypecode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
     left join ( select finscheduledetails.finreference,
            max((finscheduledetails.repayamount + finscheduledetails.feeschd)) maxinstamount
           from finscheduledetails
          where (((finscheduledetails.schdate)(500)) >= (( select smtparameters.sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = ('app_date'(500))))))
          group by finscheduledetails.finreference) t6 on (((t6.finreference) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="212_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mandateenquiry_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="213_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finsusphead_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="213" author="murthy.y">
		<createView viewName="finsusphead_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.custid,
    t1.finsuspseq,
    t1.finisinsusp,
    t1.manualsusp,
    t1.finsuspdate,
    t1.finsusptrfdate,
    t1.finsuspamt,
    t1.fincursuspamt,
    t4.custcif lovdesccustcifname,
    t4.custshrtname lovdesccustshrtname,
    t1.version,
    t1.lastmnton,
    t1.lastmntby,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.findivision lovdescfindivision,
    t2.finccy
   from (((finsusphead_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join customers t4 on ((t1.custid = t4.custid)))
     join rmtfinancetypes t5 on (((t2.fintype) = (t5.fintype))))
union all
 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.custid,
    t1.finsuspseq,
    t1.finisinsusp,
    t1.manualsusp,
    t1.finsuspdate,
    t1.finsusptrfdate,
    t1.finsuspamt,
    t1.fincursuspamt,
    t4.custcif lovdesccustcifname,
    t4.custshrtname lovdesccustshrtname,
    t1.version,
    t1.lastmnton,
    t1.lastmntby,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.findivision lovdescfindivision,
    t2.finccy
   from (((finsusphead t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join customers t4 on ((t1.custid = t4.custid)))
     join rmtfinancetypes t5 on (((t2.fintype) = (t5.fintype))))
  where (not (exists ( select 1
           from finsusphead_temp
          where ((finsusphead_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="213_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finsusphead_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="214_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fcdview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="214" author="murthy.y">
		<createView viewName="finreceiptheader_fcdview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
        case
            when (t1.recagainst = 'c'::bpchar) then t13.custcif
            else t1.reference
        end reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.module,
    t1.extreference,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t14.code closuretypedesc
   from ((((((((((((finreceiptheader_temp t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join closure_types t14 on ((t14.id = t1.closuretypeid)))
union all
 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
        case
            when (t1.recagainst = 'c'::bpchar) then t13.custcif
            else t1.reference
        end reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.module,
    t1.extreference,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t14.code closuretypedesc
   from ((((((((((((finreceiptheader t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join closure_types t14 on ((t14.id = t1.closuretypeid)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="214_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fcdview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="215_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodpenaltyrates_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="215" author="murthy.y">
		<createView viewName="finodpenaltyrates_view" replaceIfExists="true">
			<![CDATA[
				 select finodpenaltyrates_temp.finreference,
    finodpenaltyrates_temp.fineffectdate,
    finodpenaltyrates_temp.applyodpenalty,
    finodpenaltyrates_temp.odincgrcdays,
    finodpenaltyrates_temp.odchargetype,
    finodpenaltyrates_temp.odgracedays,
    finodpenaltyrates_temp.odchargecalon,
    finodpenaltyrates_temp.odchargeamtorperc,
    finodpenaltyrates_temp.odallowwaiver,
    finodpenaltyrates_temp.odmaxwaiverperc,
    finodpenaltyrates_temp.odrulecode,
    finodpenaltyrates_temp.odmincapamount,
    finodpenaltyrates_temp.odtdsreq
   from finodpenaltyrates_temp
union
 select finodpenaltyrates.finreference,
    finodpenaltyrates.fineffectdate,
    finodpenaltyrates.applyodpenalty,
    finodpenaltyrates.odincgrcdays,
    finodpenaltyrates.odchargetype,
    finodpenaltyrates.odgracedays,
    finodpenaltyrates.odchargecalon,
    finodpenaltyrates.odchargeamtorperc,
    finodpenaltyrates.odallowwaiver,
    finodpenaltyrates.odmaxwaiverperc,
    finodpenaltyrates.odrulecode,
    finodpenaltyrates.odmincapamount,
    finodpenaltyrates.odtdsreq
   from finodpenaltyrates
  where (not (exists ( select 1
           from finodpenaltyrates_temp
          where ((finodpenaltyrates_temp.finreference) = (finodpenaltyrates.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="215_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodpenaltyrates_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="216_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finjointaccountdetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="216" author="murthy.y">
		<createView viewName="finjointaccountdetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
    t1.includeincome,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname lovdesccifname,
    t3.custid,
    t3.custdob lovcustdob
   from ((finjointaccountdetails t1
     left join secusers t2 on ((t1.lastmntby = t2.usrid)))
     join customers t3 on (((t1.custcif) = (t3.custcif))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="216_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finjointaccountdetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="217_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintransactionhistory_iview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="217" author="murthy.y">
		<createView viewName="fintransactionhistory_iview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference financeref,
    t1.postdate transactiondate,
    t1.account accountnumber,
    t1.acccy currency,
    t1.linkedtranid transactionref,
    t1.trandesc transactionnarration,
    t1.drorcr,
    t1.tranorderid,
    t1.postamount txnamount
   from postings t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="217_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintransactionhistory_iview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="218_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'agreementfielddetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="218" author="murthy.y">
		<createView viewName="agreementfielddetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.custcity,
    t1.custpobox,
    t1.custcntamt,
    t1.sellername,
    t1.custnationality,
    t1.plotorunitno,
    t1.otherbankname,
    t1.propertytype,
    t1.sectororcommunity,
    t1.finamount,
    t1.proprtydesc,
    t1.propertylocation,
    t1.jointapplicant,
    t1.sellernationality,
    t1.sellerpobox,
    t1.propertyuse,
    t1.plotareainsqft,
    t1.builtupareainsqft,
    t1.ahbbranch,
    t1.fininstitution,
    t1.facilityname,
    t1.sellercntbamt,
    t1.otherbankamt,
    t1.propertyowner,
    t1.collateralauthority,
    t1.collateral1,
    t1.sellerinternal,
    t1.area,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (agreementfielddetails_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
union all
 select t1.finreference,
    t1.custcity,
    t1.custpobox,
    t1.custcntamt,
    t1.sellername,
    t1.custnationality,
    t1.plotorunitno,
    t1.otherbankname,
    t1.propertytype,
    t1.sectororcommunity,
    t1.finamount,
    t1.proprtydesc,
    t1.propertylocation,
    t1.jointapplicant,
    t1.sellernationality,
    t1.sellerpobox,
    t1.propertyuse,
    t1.plotareainsqft,
    t1.builtupareainsqft,
    t1.ahbbranch,
    t1.fininstitution,
    t1.facilityname,
    t1.sellercntbamt,
    t1.otherbankamt,
    t1.propertyowner,
    t1.collateralauthority,
    t1.collateral1,
    t1.sellerinternal,
    t1.area,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (agreementfielddetails t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
  where (not (exists ( select 1
           from agreementfielddetails_temp
          where ((agreementfielddetails_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="218_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'agreementfielddetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="219_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finprovisions_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="219" author="murthy.y">
		<createView viewName="finprovisions_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.custid,
    t1.provisioncaldate,
    t1.provisionedamt,
    t1.provisionamtcal,
    t1.provisiondue,
    t1.nonformulaprov,
    t1.usenfprov,
    t1.principaldue,
    t1.profitdue,
    t1.autoreleasenfp,
    t1.duefromdate,
    t1.lastfullypaiddate,
    t4.custcif lovdesccustcif,
    t4.custshrtname lovdesccustshrtname,
    t2.finccy,
    t1.version,
    t1.lastmnton,
    t1.lastmntby,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finprovisions t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     left join customers t4 on ((t1.custid = t4.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="219_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finprovisions_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="220_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'facilitycommitmentdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="220" author="murthy.y">
		<createView viewName="facilitycommitmentdetail_view" replaceIfExists="true">
			<![CDATA[
				 select fpd.finreference,
    fpd.custid,
    fpd.fintype,
    fpd.finccy,
    fpd.finstartdate,
    fpd.maturitydate,
    cmt.cmtexpdate cmtexpirydate,
    cmt.cmttitle,
    cmt.cmtamount,
    cmt.cmtavailable,
    fpd.fincommitmentref,
    (fpd.totalprischd + fpd.totalpftschd) totaloriginal,
    (fpd.totalpftpaid + fpd.totalpripaid) totalpaid,
    (fpd.totalpribal + fpd.totalpftbal) totaloutstanding,
    fpd.finstatus
   from (finpftdetails fpd
     left join commitments cmt on (((cmt.cmtreference) = (fpd.fincommitmentref))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="220_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'facilitycommitmentdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="221_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_resch_details_daily_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="221" author="murthy.y">
		<createView viewName="dm_resch_details_daily_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t2.finreference), '-7'::integer, 7) applid,
    t2.finreference agreementno,
        case
            when ((t2.finassetvalue - t2.fincurrassetvalue) > (0)) then 'partially disbursed'
            else 'fully disbursed'
        end disb_status,
    t1.noinst gross_tenure,
    t1.noinst net_tenure,
    t2.maturitydate,
    t2.lastrepaydate expirydate,
    (t1.firstrepayamt / rc.ccyminorccyunits) emi,
    t2.finrepaymethod repayment_mode,
    t1.fintype productflag,
    null businessdate,
    'n' processed_flag,
    null process_date,
    null segments,
    "substring"((t2.repayfrq), 1, 1) freq,
        case
            when (t1.finisactive = 1) then 'active'
            when (t1.closingstatus = ('c'(500))::bpchar) then 'cancelled'
            else 'closed'
        end loan_status,
    t1.maturitydate closuredate,
    t1.custcif cust_acct_no,
    t7.bankname,
    t6.micr micrcode,
    t6.branchdesc cust_bank_branch,
    t8.pccityname cust_bank_city,
    null business_year,
    t3.mandateid pdcid,
    null pcflag,
    null tie_up,
        case
            when (t2.repaymargin > (999)) then (999)
            else t2.repaymargin
        end margin,
    t2.repayspecialrate specialmargin,
    t2.numberofterms fixedtenor,
    null ceeffectivedate,
        case
            when (t2.effectiverateofreturn > (999)) then (999)
            else t2.effectiverateofreturn
        end eff_rate,
    t1.curreducingrate plrrate,
    null tie_up_with,
        case
            when (t1.finisactive = 0) then t1.latestrpydate
            else null::timestamp without time zone
        end date_of_closure,
    t3.inputdate pdcms_seq_generated_date,
    t3.inputdate instrument_data_entry_date,
    t2.finapproveddate payment_authorization_date,
    null batch_id
   from ((((((finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
     join mandates t3 on ((((t3.orgreference) = (t2.finreference)) and (t3.active = 1))))
     join bankbranches t6 on ((t6.bankbranchid = t3.bankbranchid)))
     join bmtbankdetail t7 on (((t7.bankcode) = (t6.bankcode))))
     left join rmtprovincevscity t8 on (((t8.pccity) = (t6.city))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="221_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_resch_details_daily_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="222_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finsusphead_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="222" author="murthy.y">
		<createView viewName="finsusphead_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.custid,
    t1.finsuspseq,
    t1.finisinsusp,
    t1.manualsusp,
    t1.finsuspdate,
    t1.finsusptrfdate,
    t1.finsuspamt,
    t1.fincursuspamt,
    t3.ccyeditfield lovdescfinformatter,
    t4.custcif lovdesccustcifname,
    t4.custshrtname lovdesccustshrtname,
    t1.version,
    t1.lastmnton,
    t1.lastmntby,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (((finsusphead t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join rmtcurrencies t3 on ((t2.finccy = t3.ccycode)))
     left join customers t4 on ((t1.custid = t4.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="222_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finsusphead_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="223_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'receipt_realization_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="223" author="murthy.y">
		<createView viewName="receipt_realization_view" replaceIfExists="true">
			<![CDATA[
				 select t4.custcif,
    t1.reference,
    t3.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t1.depositdate,
    t1.bankcode,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.bouncedate canceldate,
    t1.valuedate,
    t2.payagainstid,
    t1.bouncedate,
    t1.realizationdate,
    t1.cancelreason,
    t3.closingstatus,
    t3.finbranch,
    t3.fincurrassetvalue,
    t3.productcategory,
    t6.partnerbankcode,
    t1.transactionref,
    t1.partnerbankid fundingac,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.roledesc lovdescrequeststage,
    t1.receiptmode paymenttype,
    t1.receiptmodestatus,
    t1.actfinreceipt,
    t1.receiveddate
   from (((((finreceiptheader_temp t1
     left join finreceiptdetail_temp t2 on ((t1.receiptid = t2.receiptid)))
     left join financemain t3 on (((t1.reference) = (t3.finreference))))
     left join customers t4 on ((t3.custid = t4.custid)))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     left join partnerbanks t6 on ((t6.partnerbankid = t2.fundingac)))
union all
 select t4.custcif,
    t1.reference,
    t3.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t1.depositdate,
    t1.bankcode,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.bouncedate canceldate,
    t1.valuedate,
    t2.payagainstid,
    t1.bouncedate,
    t1.realizationdate,
    t1.cancelreason,
    t3.closingstatus,
    t3.finbranch,
    t3.fincurrassetvalue,
    t3.productcategory,
    t6.partnerbankcode,
    t1.transactionref,
    t1.partnerbankid fundingac,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.roledesc lovdescrequeststage,
    t1.receiptmode paymenttype,
    t1.receiptmodestatus,
    t1.actfinreceipt,
    t1.receiveddate
   from (((((finreceiptheader t1
     left join finreceiptdetail t2 on ((t1.receiptid = t2.receiptid)))
     left join financemain t3 on (((t1.reference) = (t3.finreference))))
     left join customers t4 on ((t3.custid = t4.custid)))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     left join partnerbanks t6 on ((t6.partnerbankid = t2.fundingac)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="223_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'receipt_realization_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="224_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_manualpaymentsdue_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="224" author="murthy.y">
		<createView viewName="rpt_manualpaymentsdue_view" replaceIfExists="true">
			<![CDATA[
				 select t2.branchdesc finbranch,
    t1.finbranch branchcode,
    t1.custcif,
    t4.custshrtname,
    t.finreference,
    t1.finccy,
    t.defschddate,
    c.ccyeditfield,
    t1.finisactive,
    t5.findivision,
    c.ccyisreceprocal,
    c.ccyspotrate,
    c.ccyminorccyunits,
    ( select rmtcurrencies.ccyspotrate targetccyspotrate
           from rmtcurrencies
          where (rmtcurrencies.ccycode in ( select smtparameters.sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = 'app_dft_curr')))) targetccyspotrate,
    t.profitschd,
    t.schdpftpaid,
    t.principalschd,
    t.schdpripaid,
    ( select (smtparameters.sysparmvalue)::date sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = 'app_next_bus_date')) bussdate
   from (((((finscheduledetails t
     join finpftdetails t1 on (((t.finreference) = (t1.finreference))))
     join rmtcurrencies c on ((c.ccycode = t1.finccy)))
     join rmtbranches t2 on (((t2.branchcode) = (t1.finbranch))))
     join customers t4 on ((t4.custid = t1.custid)))
     join rmtfinancetypes t5 on (((t5.fintype) = (t1.fintype))))
  where (((t1.finreference) ~~ '%0016%') and (t.defschddate < ( select (smtparameters.sysparmvalue)::date sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = 'app_next_bus_date'))) and (t.repayonschdate = 1) and (((t.profitschd - t.schdpftpaid) > (0)) or ((t.principalschd - t.schdpripaid) > (0))) and ((t1.closingstatus <> 'c'::bpchar) or (t1.closingstatus is null)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="224_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_manualpaymentsdue_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="225_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkdefermentfinance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="225" author="murthy.y">
		<createView viewName="bulkdefermentfinance_view" replaceIfExists="true">
			<![CDATA[
				 select f.finreference,
    f.fintype,
    f.finccy,
    c.custcif,
    c.custshrtname custname,
    f.finbranch,
    ft.fincategory productcode,
    s.schdate eventfromdate,
    bmt.intratebasisdesc profitdaybasisdesc,
    bmtschd.schdmethoddesc
   from (((((financemain f
     join rmtfinancetypes ft on (((f.fintype) = (ft.fintype))))
     join customers c on ((c.custid = f.custid)))
     join finscheduledetails s on (((f.finreference) = (s.finreference))))
     join bmtintratebasiscodes bmt on (((bmt.intratebasiscode) = (f.profitdaysbasis))))
     join bmtschdmethod bmtschd on (((bmtschd.schdmethod) = (f.schedulemethod))))
  where ((((s.profitschd - s.schdpftpaid) > (0)) or ((s.principalschd - s.schdpripaid) > (0))) and ((f.finreference) = any ( select findefermentheader.finreference
           from (( select findefermentheader_1.finreference,
                    count(findefermentheader_1.finreference) cnt
                   from findefermentheader findefermentheader_1
                  group by findefermentheader_1.finreference) findefermentheader
             join financemain a on (((a.finreference) = (findefermentheader.finreference))))
          where (findefermentheader.cnt < a.defferments))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="225_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkdefermentfinance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="226_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'manualadvise_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="226" author="murthy.y">
		<createView viewName="manualadvise_view" replaceIfExists="true">
			<![CDATA[
				 select t1.adviseid,
    t1.advisetype,
    t1.finreference,
    t1.feetypeid,
    t1.sequence,
    t1.adviseamount,
    t1.paidamount,
    t1.waivedamount,
    t1.remarks,
    t1.valuedate,
    t1.postdate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypedesc,
    t2.feetypecode,
    t1.bounceid,
    t1.receiptid,
    t3.bouncecode,
    t1.reservedamt,
    t1.balanceamt,
    t3.reason bouncecodedesc,
    coalesce((t2.taxapplicable)::integer, 0) taxapplicable,
    t2.taxcomponent,
    coalesce((t2.tdsreq)::integer, 0) tdsreq,
    t1.paidcgst,
    t1.paidsgst,
    t1.paidigst,
    t1.paidugst,
    t1.waivedcgst,
    t1.waivedsgst,
    t1.waivedugst,
    t1.waivedigst,
    t1.waivedcess,
    t1.paidcess,
    t1.finsource,
    t1.duecreation,
    t1.linkedtranid,
    t1.tdspaid,
    t1.holddue
   from ((manualadvise_temp t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join bouncereasons t3 on ((t1.bounceid = t3.bounceid)))
union all
 select t1.adviseid,
    t1.advisetype,
    t1.finreference,
    t1.feetypeid,
    t1.sequence,
    t1.adviseamount,
    t1.paidamount,
    t1.waivedamount,
    t1.remarks,
    t1.valuedate,
    t1.postdate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypedesc,
    t2.feetypecode,
    t1.bounceid,
    t1.receiptid,
    t3.bouncecode,
    t1.reservedamt,
    t1.balanceamt,
    t3.reason bouncecodedesc,
    coalesce((t2.taxapplicable)::integer, 0) taxapplicable,
    t2.taxcomponent,
    coalesce((t2.tdsreq)::integer, 0) tdsreq,
    t1.paidcgst,
    t1.paidsgst,
    t1.paidigst,
    t1.paidugst,
    t1.waivedcgst,
    t1.waivedsgst,
    t1.waivedugst,
    t1.waivedigst,
    t1.waivedcess,
    t1.paidcess,
    t1.finsource,
    t1.duecreation,
    t1.linkedtranid,
    t1.tdspaid,
    t1.holddue
   from ((manualadvise t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join bouncereasons t3 on ((t1.bounceid = t3.bounceid)))
  where (not (exists ( select 1
           from manualadvise_temp
          where (manualadvise_temp.adviseid = t1.adviseid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="226_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'manualadvise_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="227_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontractorastdtls_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="227" author="murthy.y">
		<createView viewName="fincontractorastdtls_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.contractorid,
    t1.custid,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t1.assetdesc,
    t1.assetvalue,
    t1.totclaimamt,
    t1.totadvanceamt,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.contractorname,
    t1.dftretentionperc,
    t1.retentiontilldate
   from (fincontractorastdtls t1
     left join customers t2 on ((t2.custid = t1.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="227_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontractorastdtls_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="228_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finadvancepayments_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="228" author="murthy.y">
		<createView viewName="finadvancepayments_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.paymentid,
    t1.paymentseq,
    t1.paymentdetail,
    t1.amttobereleased,
    t1.liabilityholdname,
    t1.transactionref,
    t1.beneficiaryname,
    t1.beneficiaryaccno,
    t1.reenterbeneficiaryaccno,
    t1.description,
    t1.paymenttype,
    t1.llreferenceno,
    t1.lldate,
    t1.custcontribution,
    t1.sellercontribution,
    t1.remarks,
    t1.disbdate,
    t1.disbseq,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.bankcode,
    t1.payableloc,
    t1.printingloc,
    t1.valuedate,
    t1.bankbranchid,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.clearingdate,
    t1.status,
    t1.active,
    t1.inputdate,
    t1.disbccy,
    t1.poissued,
    t3.bankcode branchbankcode,
    t31.bankname branchbankname,
    t3.branchcode,
    t3.branchdesc,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.partnerbankid,
    t5.partnerbankcode,
    t5.partnerbankname,
    t1.linkedtranid,
    t5.actype partnerbankactype,
    t5.accountno partnerbankac,
    t6.branchdesc printinglocdesc,
    t1.rejectreason,
    t1.realizationdate,
    t1.holddisbursement,
    t1.vasreference
   from (((((finadvancepayments_temp t1
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t31 on (((t31.bankcode) = (t3.bankcode))))
     left join bmtbankdetail t4 on (((t1.bankcode) = (t4.bankcode))))
     left join partnerbanks t5 on ((t5.partnerbankid = t1.partnerbankid)))
     left join bankbranches t6 on ((((t6.branchcode) = (t1.printingloc)) and ((t6.bankcode) = (t1.bankcode)))))
union all
 select t1.finreference,
    t1.paymentid,
    t1.paymentseq,
    t1.paymentdetail,
    t1.amttobereleased,
    t1.liabilityholdname,
    t1.transactionref,
    t1.beneficiaryname,
    t1.beneficiaryaccno,
    t1.reenterbeneficiaryaccno,
    t1.description,
    t1.paymenttype,
    t1.llreferenceno,
    t1.lldate,
    t1.custcontribution,
    t1.sellercontribution,
    t1.remarks,
    t1.disbdate,
    t1.disbseq,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.bankcode,
    t1.payableloc,
    t1.printingloc,
    t1.valuedate,
    t1.bankbranchid,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.clearingdate,
    t1.status,
    t1.active,
    t1.inputdate,
    t1.disbccy,
    t1.poissued,
    t3.bankcode branchbankcode,
    t31.bankname branchbankname,
    t3.branchcode,
    t3.branchdesc,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.partnerbankid,
    t5.partnerbankcode,
    t5.partnerbankname,
    t1.linkedtranid,
    t5.actype partnerbankactype,
    t5.accountno partnerbankac,
    t6.branchdesc printinglocdesc,
    t1.rejectreason,
    t1.realizationdate,
    t1.holddisbursement,
    t1.vasreference
   from (((((finadvancepayments t1
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t31 on (((t31.bankcode) = (t3.bankcode))))
     left join bmtbankdetail t4 on (((t1.bankcode) = (t4.bankcode))))
     left join partnerbanks t5 on ((t5.partnerbankid = t1.partnerbankid)))
     left join bankbranches t6 on ((((t6.branchcode) = (t1.printingloc)) and ((t6.bankcode) = (t1.bankcode)))))
  where (not (exists ( select 1
           from finadvancepayments_temp
          where (((finadvancepayments_temp.finreference) = (t1.finreference)) and (finadvancepayments_temp.paymentseq = t1.paymentseq)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="228_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finadvancepayments_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="229_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_soa_customer_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="229" author="murthy.y">
		<createView viewName="rpt_soa_customer_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finpurpose,
    t1.finstartdate,
    t4.branchdesc finbranch,
    t3.productdesc fintype,
    '' interest_type,
    t1.linkedfinref linked_agreement_no,
    t1.closedlinkedfinref closed_linked_agree_no,
    t.custshrtname,
    t.custcif,
    t.custid,
    t.custaddrhnbr,
    t.custflatnbr,
    (((((((t.custaddrstreet) || ' ') || (coalesce(t.custaddrline1, ''))) || ' ') || (coalesce(t.custaddrline2, ''))) || ' ') || (coalesce(t.custpobox, ''))) custaddrstreet,
    t.custaddrzip custpobox,
    t.custaddrcity,
    t.custaddrprovince,
    t.custaddrcountry,
    '' propertydetails,
    '' propertyaddress,
    t.phonecountrycode,
    t.phoneareacode,
    t.phonenumber,
    t.custemail,
    t.activecnt,
    t.closecnt,
    t.tot
   from ((((( select t1_1.custshrtname,
            t1_1.custcif,
            t1_1.custid,
            t2_1.custaddrhnbr,
            t2_1.custflatnbr,
            t2_1.custaddrstreet,
            t2_1.custaddrline1,
            t2_1.custaddrline2,
            t2_1.custpobox,
            t2_1.custaddrzip,
            rc.pccityname custaddrcity,
            rp.cpprovincename custaddrprovince,
            bc.countrydesc custaddrcountry,
            t3_1.phonecountrycode,
            t3_1.phoneareacode,
            t3_1.phonenumber,
            t4_1.custemail,
            t5.activecnt,
            t6.closecnt,
            (t5.activecnt + coalesce(t6.closecnt, (0))) tot
           from ((((((((customers t1_1
             left join customeraddresses t2_1 on (((t1_1.custid = t2_1.custid) and (t2_1.custaddrpriority = 5))))
             left join rmtprovincevscity rc on (((rc.pccity) = (t2_1.custaddrcity))))
             left join rmtcountryvsprovince rp on (((rp.cpprovince) = (t2_1.custaddrprovince))))
             left join bmtcountries bc on ((bc.countrycode = t2_1.custaddrcountry)))
             left join customerphonenumbers t3_1 on (((t1_1.custid = t3_1.phonecustid) and (t3_1.phonetypepriority = 5))))
             left join customeremails t4_1 on (((t4_1.custid = t1_1.custid) and (t4_1.custemailpriority = 5))))
             left join ( select finpftdetails.custid,
                    count(*) activecnt
                   from finpftdetails
                  where (finpftdetails.finisactive = 1)
                  group by finpftdetails.custid) t5 on ((t1_1.custid = t5.custid)))
             left join ( select finpftdetails.custid,
                    count(*) closecnt
                   from finpftdetails
                  where (finpftdetails.finisactive <> 1)
                  group by finpftdetails.custid) t6 on ((t1_1.custid = t6.custid)))) t
     left join finpftdetails t1 on ((t.custid = t1.custid)))
     join rmtfinancetypes t2 on (((t1.fintype) = (t2.fintype))))
     join bmtproduct t3 on (((t3.productcode) = (t2.fincategory))))
     join rmtbranches t4 on (((t4.branchcode) = (t1.finbranch))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="229_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_soa_customer_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="230_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_emrassetagingoddtl_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="230" author="murthy.y">
		<createView viewName="rpt_emrassetagingoddtl_view" replaceIfExists="true">
			<![CDATA[
				 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 0 to 7d' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7'::integer) and ((- t1.fincuroddays) <= 0))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 7d to 1m' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-30'::integer) and ((- t1.fincuroddays) < '-7'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1m to 3m' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-90'::integer) and ((- t1.fincuroddays) < '-30'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3m to 6m' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-180'::integer) and ((- t1.fincuroddays) < '-90'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 6m to 1y' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-365'::integer) and ((- t1.fincuroddays) < '-180'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1y to 3y' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1095'::integer) and ((- t1.fincuroddays) < '-365'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3y to 5y' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1825'::integer) and ((- t1.fincuroddays) < '-1095'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 5y to 10y' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-3650'::integer) and ((- t1.fincuroddays) < '-1825'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 10y to 20y' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7300'::integer) and ((- t1.fincuroddays) < '-3650'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due over 20y' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) < '-7300'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'not yet paid' clmn,
    'p' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) > 0))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 0 to 7d' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7'::integer) and ((- t1.fincuroddays) <= 0))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 7d to 1m' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-30'::integer) and ((- t1.fincuroddays) < '-7'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1m to 3m' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-90'::integer) and ((- t1.fincuroddays) < '-30'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3m to 6m' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-180'::integer) and ((- t1.fincuroddays) < '-90'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 6m to 1y' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-365'::integer) and ((- t1.fincuroddays) < '-180'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1y to 3y' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1095'::integer) and ((- t1.fincuroddays) < '-365'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3y to 5y' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1825'::integer) and ((- t1.fincuroddays) < '-1095'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 5y to 10y' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-3650'::integer) and ((- t1.fincuroddays) < '-1825'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 10y to 20y' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7300'::integer) and ((- t1.fincuroddays) < '-3650'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due over 20y' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) < '-7300'::integer))
  group by t2.finactype, t3.actypedesc
union all
 select t2.finactype,
    t3.actypedesc,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'not yet paid' clmn,
    'i' flag
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtaccounttypes t3 on (((t3.actype) = (t2.finactype))))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) > 0))
  group by t2.finactype, t3.actypedesc
			]]>
		</createView>
	</changeSet>
	<changeSet id="230_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_emrassetagingoddtl_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="231_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fcview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="231" author="murthy.y">
		<createView viewName="finreceiptheader_fcview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.module,
    t1.extreference,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.actfinreceipt,
    t1.reasoncode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t14.code closuretypedesc
   from ((((((((((((finreceiptheader_temp t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join closure_types t14 on ((t14.id = t1.closuretypeid)))
union all
 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.module,
    t1.extreference,
    t13.custcif customercif,
    t13.custshrtname customername,
    t1.actfinreceipt,
    t1.reasoncode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t14.code closuretypedesc
   from ((((((((((((finreceiptheader t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join customers t13 on ((((t13.custid)(20)) = (t1.reference))))
     left join closure_types t14 on ((t14.id = t1.closuretypeid)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="231_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fcview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="232_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'findisbursementdetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="232" author="murthy.y">
		<createView viewName="findisbursementdetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.disbdate,
    t1.disbseq,
    t1.disbdesc,
    t1.disbaccountid,
    t1.disbamount,
    t1.disbreqdate,
    t1.disbdisbursed,
    t1.disbisactive,
    t1.disbremarks,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.feechargeamt,
    t1.version,
    t1.disbstatus,
    t1.disbtype,
    t1.disbclaim,
    t1.disbexptype,
    t1.disbretperc,
    t1.disbretamount,
    t1.autodisb,
    t1.netadvdue,
    t1.netretdue,
    t1.disbretpaid,
    t1.retpaiddate,
    t2.expencetypename lovdescdisbexptype,
    t1.consultfeefrq,
    t1.consultfeestartdate,
    t1.consultfeeenddate,
    t1.contractorid,
    t1.insuranceamt,
    t1.instructionuid,
    t1.quickdisb,
    t1.instcalreq,
    t1.linkeddisbid
   from (findisbursementdetails t1
     left join amtexpensetype t2 on ((t2.expencetypeid = t1.disbexptype)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="232_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'findisbursementdetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="233_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralassignment_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="233" author="murthy.y">
		<createView viewName="collateralassignment_tview" replaceIfExists="true">
			<![CDATA[
				 select ca.module,
    ca.reference,
    ca.collateralref,
    ca.assignperc,
    cs.collateralccy,
    ca.active,
    ca.hostreference,
    cs.collateralvalue,
    cs.bankvaluation,
    (t.totassignperc - ca.assignperc) totassignperc,
    ((((fm.fincurrassetvalue - fm.downpayment) + fm.feechargeamt) + fm.insuranceamt) - fm.finrepaymentamount) utilizedamount,
    ca.version,
    ca.lastmntby,
    ca.lastmnton,
    ca.recordstatus,
    ca.rolecode,
    ca.nextrolecode,
    ca.taskid,
    ca.nexttaskid,
    ca.recordtype,
    ca.workflowid,
    cs.specialltv,
    cs.bankltv,
    cu.custcif depositorcif,
    cs.collateraltype
   from ((((collateralassignment_temp ca
     join collateralsetup cs on (((ca.collateralref) = (cs.collateralref))))
     join customers cu on ((cu.custid = cs.depositorid)))
     left join ( select t1.collateralref,
            sum(t1.assignperc) totassignperc
           from ( select collateralassignment_temp.reference,
                    collateralassignment_temp.collateralref,
                    collateralassignment_temp.assignperc
                   from collateralassignment_temp
                union
                 select ca_1.reference,
                    ca_1.collateralref,
                    ca_1.assignperc
                   from collateralassignment ca_1
                  where (not (exists ( select 1
                           from collateralassignment_temp
                          where (((collateralassignment_temp.collateralref) = (ca_1.collateralref)) and ((collateralassignment_temp.module) = (ca_1.module)) and ((collateralassignment_temp.reference) = (ca_1.reference))))))) t1
          group by t1.collateralref) t on (((t.collateralref) = (ca.collateralref))))
     left join financemain_temp fm on (((ca.reference) = (fm.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="233_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralassignment_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="234_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bundledproductsdetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="234" author="murthy.y">
		<createView viewName="bundledproductsdetail_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.cardproduct,
    t1.salesstaff,
    t1.embossingname,
    t1.statusofcust,
    t1.minrepay,
    t1.billingacc,
    t1.stmtaddress,
    t1.stmtemail,
    t1.physicaladdress,
    t1.contactnumber,
    t1.ref1name,
    t1.ref1phonenum,
    t1.ref1email,
    t1.ref2name,
    t1.ref2phonenum,
    t1.ref2email,
    t1.bankname,
    t1.chequeno,
    t1.chequeamt,
    t1.cardtype,
    t1.classtype,
    t1.limitrecommended,
    t1.limitapproved,
    t1.profitrate,
    t1.crosssellcard,
    t1.urgentissuance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (bundledproductsdetail_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="234_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bundledproductsdetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="235_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finjointaccountdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="235" author="murthy.y">
		<createView viewName="finjointaccountdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
    t1.includeincome,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname lovdesccifname,
    t3.custid,
    t3.custdob lovcustdob
   from ((finjointaccountdetails_temp t1
     left join secusers t2 on ((t1.lastmntby = t2.usrid)))
     join customers t3 on (((t1.custcif) = (t3.custcif))))
union all
 select t1.jointaccountid,
    t1.finreference,
    t1.custcif,
    t1.includerepay,
    t1.repayaccountid,
    t1.catofcoapplicant,
    t1.authoritysignatory,
    t1.sequence,
    t1.includeincome,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t3.custshrtname lovdesccifname,
    t3.custid,
    t3.custdob lovcustdob
   from ((finjointaccountdetails t1
     left join secusers t2 on ((t1.lastmntby = t2.usrid)))
     join customers t3 on (((t1.custcif) = (t3.custcif))))
  where (not (exists ( select 1
           from finjointaccountdetails_temp
          where (finjointaccountdetails_temp.jointaccountid = t1.jointaccountid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="235_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finjointaccountdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="236_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeerefundheader_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="236" author="murthy.y">
		<createView viewName="finfeerefundheader_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.linkedtranid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t2.custid,
    t2.finccy,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.fintypedesc,
    t5.branchdesc
   from ((((finfeerefundheader_temp t1
     left join financemain_view t2 on (((t2.finreference) = (t1.finreference))))
     left join customers t3 on ((t3.custid = t2.custid)))
     left join rmtfinancetypes t4 on (((t4.fintype) = (t2.fintype))))
     left join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="236_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeerefundheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="237_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mandates_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="237" author="murthy.y">
		<createView viewName="mandates_view" replaceIfExists="true">
			<![CDATA[
				 select t1.mandateid,
    t1.custid,
    t1.mandateref,
    t1.mandatetype,
    t1.bankbranchid,
    t1.accnumber,
    t1.accholdername,
    t1.jointaccholdername,
    t1.acctype,
    t1.openmandate,
    t1.startdate,
    t1.expirydate,
    t1.maxlimit,
    t1.periodicity,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.status,
    t1.approvalid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.reason,
    t1.mandateccy,
    t2.custcif,
    t2.custshrtname,
    t3.bankcode,
    t3.branchcode,
    t3.branchdesc,
    t3.micr,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.inputdate,
    t1.active,
    t1.defaultmandate,
    0 useexisting,
    t1.orgreference,
    t5.pccityname,
    t1.documentname,
    t1.documentref,
    t1.externalref,
    t1.entitycode,
    t6.entitydesc,
    t1.primarymandateid,
    t1.swapisactive,
    t1.barcodenumber,
    t7.partnerbankcode,
    t7.partnerbankname,
    t1.partnerbankid,
    t1.emandatesource,
    t1.emandatereferenceno,
    t8.fintype
   from (((((((mandates_temp t1
     join customers t2 on ((t1.custid = t2.custid)))
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t4 on (((t3.bankcode) = (t4.bankcode))))
     left join rmtprovincevscity t5 on (((t3.city) = (t5.pccity))))
     left join entity t6 on (((t1.entitycode) = (t6.entitycode))))
     left join partnerbanks t7 on ((t1.partnerbankid = t7.partnerbankid)))
     left join financemain t8 on (((t1.orgreference) = (t8.finreference))))
union all
 select t1.mandateid,
    t1.custid,
    t1.mandateref,
    t1.mandatetype,
    t1.bankbranchid,
    t1.accnumber,
    t1.accholdername,
    t1.jointaccholdername,
    t1.acctype,
    t1.openmandate,
    t1.startdate,
    t1.expirydate,
    t1.maxlimit,
    t1.periodicity,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.status,
    t1.approvalid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.reason,
    t1.mandateccy,
    t2.custcif,
    t2.custshrtname,
    t3.bankcode,
    t3.branchcode,
    t3.branchdesc,
    t3.micr,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.inputdate,
    t1.active,
    t1.defaultmandate,
    1 useexisting,
    t1.orgreference,
    t5.pccityname,
    t1.documentname,
    t1.documentref,
    t1.externalref,
    t1.entitycode,
    t6.entitydesc,
    t1.primarymandateid,
    t1.swapisactive,
    t1.barcodenumber,
    t7.partnerbankcode,
    t7.partnerbankname,
    t1.partnerbankid,
    t1.emandatesource,
    t1.emandatereferenceno,
    t8.fintype
   from (((((((mandates t1
     join customers t2 on ((t1.custid = t2.custid)))
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t4 on (((t3.bankcode) = (t4.bankcode))))
     left join rmtprovincevscity t5 on (((t3.city) = (t5.pccity))))
     left join entity t6 on (((t1.entitycode) = (t6.entitycode))))
     left join partnerbanks t7 on ((t1.partnerbankid = t7.partnerbankid)))
     left join financemain t8 on (((t1.orgreference) = (t8.finreference))))
  where (not (exists ( select 1
           from mandates_temp
          where (mandates_temp.mandateid = t1.mandateid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="237_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mandates_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="238_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralsetup_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="238" author="murthy.y">
		<createView viewName="collateralsetup_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.collateralref,
    t1.finreference,
    t1.depositorid,
    t1.collateraltype,
    t1.collateralccy,
    t1.maxcollateralvalue,
    t1.specialltv,
    t1.collateralloc,
    t1.valuator,
    t1.expirydate,
    t1.reviewfrequency,
    t1.nextreviewdate,
    t1.multiloanassignment,
    t1.thirdpartyassignment,
    t1.remarks,
    t1.collateralvalue,
    t1.bankltv,
    t1.bankvaluation,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.createdby,
    t1.createdon,
    t1.status,
    t2.custcif depositorcif,
    t3.collateraldesc collateraltypename,
    t2.custshrtname depositorname
   from ((collateralsetup_temp t1
     join customers t2 on ((t2.custid = t1.depositorid)))
     join collateralstructure t3 on (((t3.collateraltype) = (t1.collateraltype))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="238_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralsetup_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="239_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'feewaiverheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="239" author="murthy.y">
		<createView viewName="feewaiverheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.waiverid,
    t1.finreference,
    t1.event,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.postingdate,
    t1.valuedate
   from feewaiverheader_temp t1
union all
 select t1.waiverid,
    t1.finreference,
    t1.event,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.postingdate,
    t1.valuedate
   from feewaiverheader t1
  where (not (exists ( select 1
           from feewaiverheader_temp
          where (feewaiverheader_temp.waiverid = t1.waiverid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="239_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'feewaiverheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="240_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'legaldetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="240" author="murthy.y">
		<createView viewName="legaldetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.legalid,
    t1.legalreference,
    t1.loanreference,
    t1.collateralreference,
    t1.branch,
    t1.legaldate,
    t1.schedulelevelarea,
    t1.legaldecision,
    t1.legalremarks,
    t1.propertydetailmodt,
    t1.propertydetailecdate,
    t1.ecpropertyownername,
    t1.active,
    t1.module,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.branchdesc,
    t3.finbranch,
    t4.findivision,
    coalesce(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) requeststage,
    coalesce(t6.propertyownersname, t7.custshrtname) applicantname
   from ((((((legaldetails_temp t1
     join rmtbranches t2 on (((t1.branch) = (t2.branchcode))))
     join financemain_temp t3 on (((t3.finreference) = (t1.loanreference))))
     join rmtfinancetypes t4 on (((t4.fintype) = (t3.fintype))))
     join secroles t5 on (((t5.rolecd) = (t1.nextrolecode))))
     left join ( select ldt1.propertyownersname,
            ldt1.legalid
           from legalapplicantdetails_temp ldt1
          where (ldt1.legalapplicantid = ( select min(ldt2.legalapplicantid) min
                   from legalapplicantdetails_temp ldt2
                  where (ldt2.legalid = ldt1.legalid)))) t6 on ((t6.legalid = t1.legalid)))
     join customers t7 on ((t7.custid = t3.custid)))
union all
 select t1.legalid,
    t1.legalreference,
    t1.loanreference,
    t1.collateralreference,
    t1.branch,
    t1.legaldate,
    t1.schedulelevelarea,
    t1.legaldecision,
    t1.legalremarks,
    t1.propertydetailmodt,
    t1.propertydetailecdate,
    t1.ecpropertyownername,
    t1.active,
    t1.module,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.branchdesc,
    t3.finbranch,
    t4.findivision,
    coalesce(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) requeststage,
    coalesce(t6.propertyownersname, t7.custshrtname) applicantname
   from ((((((legaldetails t1
     join rmtbranches t2 on (((t1.branch) = (t2.branchcode))))
     join financemain_view t3 on (((t3.finreference) = (t1.loanreference))))
     join rmtfinancetypes t4 on (((t4.fintype) = (t3.fintype))))
     join secroles t5 on (((t5.rolecd) = (t1.nextrolecode))))
     left join ( select ldt1.propertyownersname,
            ldt1.legalid
           from legalapplicantdetails ldt1
          where (ldt1.legalapplicantid = ( select min(ldt2.legalapplicantid) min
                   from legalapplicantdetails ldt2
                  where (ldt2.legalid = ldt1.legalid)))) t6 on ((t6.legalid = t1.legalid)))
     join customers t7 on ((t7.custid = t3.custid)))
  where (not (exists ( select 1
           from legaldetails_temp
          where (legaldetails_temp.legalid = t1.legalid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="240_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'legaldetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="241_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finoddetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="241" author="murthy.y">
		<createView viewName="finoddetails_view" replaceIfExists="true">
			<![CDATA[
				 select od.finreference,
    od.finodschddate,
    od.finodfor,
    od.finbranch,
    od.fintype,
    od.custid,
    od.finodtilldate,
    od.fincurodamt,
    od.fincurodpri,
    od.fincurodpft,
    od.finmaxodamt,
    od.finmaxodpri,
    od.finmaxodpft,
    od.gracedays,
    od.incgracedays,
    od.fincuroddays,
    od.totpenaltyamt,
    od.totwaived,
    od.totpenaltypaid,
    od.lpiamt,
    od.lpipaid,
    od.lpibal,
    od.totpenaltybal,
    od.finlmdfdate,
    coalesce((pr.applyodpenalty)::integer, 0) applyodpenalty,
    coalesce((pr.odincgrcdays)::integer, 0) odincgrcdays,
    coalesce(pr.odchargetype, ''::bpchar) odchargetype,
    coalesce(pr.odgracedays, 0) odgracedays,
    coalesce(pr.odchargecalon, '') odchargecalon,
    coalesce(pr.odchargeamtorperc, (0)) odchargeamtorperc,
    coalesce((pr.odallowwaiver)::integer, 0) odallowwaiver,
    coalesce(pr.odmaxwaiverperc, (0)) odmaxwaiverperc,
    coalesce(pr.odrulecode, '') odrulecode,
    od.lockodrecalcal,
    od.lpptdspaid
   from (finoddetails od
     left join finodpenalty_latest_rates_view pr on (((od.finreference) = (pr.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="241_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finoddetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="242_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeescheduledetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="242" author="murthy.y">
		<createView viewName="finfeescheduledetail_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.feeid,
    t1.schdate,
    t1.schamount,
    t1.paidamount,
    t1.osamount,
    t1.waiveramount,
    t1.writeoffamount,
    t1.cgst,
    t1.sgst,
    t1.ugst,
    t1.igst,
    t2.finreference,
    t2.feetypeid,
    t2.finevent
   from (finfeescheduledetail_temp t1
     join finfeedetail_temp t2 on ((t1.feeid = t2.feeid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="242_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeescheduledetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="243_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_lea_doc_dtle_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="243" author="murthy.y">
		<createView viewName="dm_lea_doc_dtle_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t1.finreference), '-7'::integer, 7) agreementid,
    null applicable,
    "substring"((t2.finreference), '-7'::integer, 7) applid,
    null approved_by,
    null authdate,
    null authid,
    null awb_no,
    null branchstatus,
    null(8,0) constitution,
    null courier_name,
    'n' critical,
    'p' customer_type,
    c.custcorebank customerid,
    null date_branch_status,
    null datelastupdt,
    null doc_classfn,
    null doc_retrieval_status,
    null(8,0) docid,
    null doctype,
    null file_barcode,
    null makerdate,
    null makerid,
    null mc_status,
    null new_flag,
    null originals,
    null packet_tracker_no,
    null property_address,
    d.doccategory property_code,
    null reason,
        case
            when (d.document_status = 'completed') then 'y'
            else 'n'
        end received,
    null receiveddate,
    null rejection_reasons,
    null released_date,
    null released_remarks,
    d.description remarks,
    'pbd' stage,
    d.receivabledate targetdate,
    null title_document,
    null(8,0) txndocid,
    null validtilldate,
    null vap_loan_flag,
    null businessdate,
    'n' processflag,
    null processdate,
    null segment,
    null revised_target_date,
    null batch_id
   from (((( select t.finreference,
            t.covenanttype doccategory,
                case
                    when (t.alwwaiver = 1) then null::timestamp without time zone
                    else t.receivabledate
                end receivabledate,
                case
                    when (t.alwwaiver = 1) then 'waived'
                    else 'pending'
                end document_status,
            t.description
           from fincovenanttype t
          where (not (((t.finreference) || (t.covenanttype)) = any ( select ((dd.referenceid) || (dd.doccategory))
                   from documentdetails dd)))
        union all
         select dd.referenceid finreference,
            dd.doccategory,
            null::timestamp without time zone "timestamp",
            'completed' text,
            fc.description
           from (documentdetails dd
             left join fincovenanttype fc on ((((fc.finreference) = (dd.referenceid)) and ((fc.covenanttype) = (dd.doccategory)))))) d
     join finpftdetails t1 on (((t1.finreference) = (d.finreference))))
     join customers c on ((c.custid = t1.custid)))
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
  where ("substring"((t1.finreference), '-7'::integer, 7) is not null)
			]]>
		</createView>
	</changeSet>
	<changeSet id="243_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_lea_doc_dtle_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="244_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_dataview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="244" author="murthy.y">
		<createView viewName="financemain_dataview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.fintype,
    t2.custcif lovdesccustcif,
    t1.custid,
    t1.closingstatus,
    t1.finisactive,
    t1.maturitydate,
    t1.productcategory,
    t1.writeoffloan,
    t1.calcofsteps,
    t1.stepsappliedfor,
    t1.noofgrcsteps,
    t1.schdversion,
    t1.subventionfrom,
    t1.manufacturerdealerid,
    t3.dealername manufacturerdealername,
    t3.code manufacturerdealercode
   from ((financemain t1
     join customers t2 on ((t1.custid = t2.custid)))
     left join amtvehicledealer t3 on ((t1.manufacturerdealerid = t3.dealerid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="244_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_dataview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="245_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financechecklistref_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="245" author="murthy.y">
		<createView viewName="financechecklistref_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.questionid,
    t1.answer,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.checklistdesc lovdescquesdesc,
    t3.ansdesc lovdescanswerdesc,
    t1.instructionuid
   from ((financechecklistref t1
     join bmtchecklist t2 on ((t1.questionid = t2.checklistid)))
     join rmtchecklistdetails t3 on (((t1.questionid = t3.checklistid) and (t1.answer = t3.ansseqno))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="245_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financechecklistref_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="246_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'reinstatefinance_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="246" author="murthy.y">
		<createView viewName="reinstatefinance_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t2.fintype,
    t3.fintypedesc,
    t3.fincategory,
    t4.custcif,
    t2.finbranch,
    t5.branchdesc,
    t2.finstartdate,
    t2.numberofterms,
    t2.graceterms,
    t2.maturitydate,
    t2.finccy,
    t2.finamount,
    t2.finrepaymentamount,
    t2.schedulemethod,
    t2.feechargeamt,
    t2.downpaybank,
    t2.downpaysupl,
    t2.profitdaysbasis,
    t2.effectiverateofreturn,
    t2.totalprofit,
    t3.findivision lovdescfindivision,
    t2.finpreapprovedref,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((((reinstatefinance_temp t1
     join rejectfinancemain t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
     join customers t4 on ((t2.custid = t4.custid)))
     join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="246_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'reinstatefinance_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="247_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralsetup_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="247" author="murthy.y">
		<createView viewName="collateralsetup_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.collateralref,
    t1.finreference,
    t1.depositorid,
    t1.collateraltype,
    t1.collateralccy,
    t1.maxcollateralvalue,
    t1.specialltv,
    t1.collateralloc,
    t1.valuator,
    t1.expirydate,
    t1.reviewfrequency,
    t1.nextreviewdate,
    t1.multiloanassignment,
    t1.thirdpartyassignment,
    t1.remarks,
    t1.collateralvalue,
    t1.bankltv,
    t1.bankvaluation,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.createdby,
    t1.createdon,
    t1.status,
    t2.custcif depositorcif,
    t3.collateraldesc collateraltypename,
    t2.custshrtname depositorname
   from ((collateralsetup t1
     join customers t2 on ((t2.custid = t1.depositorid)))
     join collateralstructure t3 on (((t3.collateraltype) = (t1.collateraltype))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="247_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralsetup_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="248_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finguarantorsdetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="248" author="murthy.y">
		<createView viewName="finguarantorsdetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.guarantorid,
    t1.finreference,
    t1.bankcustomer,
    t1.guarantorcif,
    t1.guarantoridtype,
    t1.guarantoridnumber,
    t1.guranteepercentage,
    t1.mobileno,
    t1.emailid,
    t1.guarantorproof,
    t1.guarantorproofname,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.guarantorcifname,
    t1.remarks,
    t1.addrhnbr,
    t1.flatnbr,
    t1.addrstreet,
    t1.addrline1,
    t1.addrline2,
    t1.pobox,
    t1.addrcity,
    t1.addrprovince,
    t1.addrcountry,
    t1.addrzip,
    t1.guarantorgendercode,
    ( select bmtidentitytype.identitydesc
           from bmtidentitytype
          where ((bmtidentitytype.identitytype) = (t1.guarantoridtype))) guarantoridtypename,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    coalesce(t3.custid, (0)) custid,
    t3.custshrtname,
    t3.custdob lovcustdob
   from ((finguarantorsdetails_temp t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
     left join customers t3 on (((t1.guarantorcif) = (t3.custcif))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="248_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finguarantorsdetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="249_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'vasmovement_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="249" author="murthy.y">
		<createView viewName="vasmovement_view" replaceIfExists="true">
			<![CDATA[
				 select t1.vasmovementid,
    t1.finreference,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.finamount,
    t2.finstartdate,
    t2.maturitydate,
    t3.custcif,
    t2.fintype,
    t2.finccy,
    t2.finbranch,
    t2.numberofterms
   from ((vasmovement_temp t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
     join customers t3 on ((t3.custid = t2.custid)))
union all
 select t1.vasmovementid,
    t1.finreference,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.finamount,
    t2.finstartdate,
    t2.maturitydate,
    t3.custcif,
    t2.fintype,
    t2.finccy,
    t2.finbranch,
    t2.numberofterms
   from ((vasmovement t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
     join customers t3 on ((t3.custid = t2.custid)))
  where (not (exists ( select 1
           from vasmovement_temp
          where (vasmovement_temp.vasmovementid = t1.vasmovementid))))
union all
 select 0 vasmovementid,
    t1.finreference,
    0 version,
    0 lastmntby,
    null::timestamp without time zone lastmnton,
    null recordstatus,
    null rolecode,
    null nextrolecode,
    null taskid,
    null nexttaskid,
    null recordtype,
    0 workflowid,
    t1.finamount,
    t1.finstartdate,
    t1.maturitydate,
    t2.custcif,
    t1.fintype,
    t1.finccy,
    t1.finbranch,
    t1.numberofterms
   from (financemain t1
     join customers t2 on ((t2.custid = t1.custid)))
  where ((not ((t1.finreference) in ( select vasmovement_temp.finreference
           from vasmovement_temp))) and (not ((t1.finreference) in ( select vasmovement.finreference
           from vasmovement))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="249_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'vasmovement_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="250_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disb_imps_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="250" author="murthy.y">
		<createView viewName="int_disb_imps_view" replaceIfExists="true">
			<![CDATA[
				 select '' channelpartnerid,
    '' bcagentid,
    '' senderid,
    f.beneficiaryname receivername,
    (((coalesce(f.phonecountrycode, ''(500))) || (coalesce(f.phoneareacode, ''(500)))) || (coalesce(f.phonenumber, ''(500)))) receiver_mobile_no,
    b.ifsc ifscode,
    bb.bankname bank,
    b.city recevier_bank_city,
    b.branchcode recevier_bank_branch,
    f.beneficiaryaccno recevieraccountnumber,
    (f.amttobereleased / rc.ccyminorccyunits) amount,
    f.remarks,
    f.paymentseq channelpartnerrefno,
    '' pickup_flag,
    f.finreference agreementid,
    '' receiveremailid
   from ((((finadvancepayments f
     join bankbranches b on (((f.bankcode) = (b.bankcode))))
     join bmtbankdetail bb on (((bb.bankcode) = (f.bankcode))))
     join rmtcurrencies rc on ((rc.ccycode = (f.disbccy)::bpchar)))
     left join rmtprovincevscity rpc on (((rpc.pccity) = (b.city))))
  where (((f.paymenttype) = ('imps'(500))) and ((f.status) = ('approved'(500))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="250_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disb_imps_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="251_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincovenanttype_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="251" author="murthy.y">
		<createView viewName="fincovenanttype_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc covenanttypedesc,
    t5.code categorycode,
    t4.roledesc mandroledesc,
    t1.receivabledate,
    t1.internaluse,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd pddflag,
    t3.otc otcflag
   from ((((fincovenanttype_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
     join bmtdocumenttypes t3 on (((t3.doctypecode) = (t1.covenanttype))))
     left join documentcategory t5 on ((t5.id = t3.categoryid)))
     join secroles t4 on (((t4.rolecd) = (t1.mandrole))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="251_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincovenanttype_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="252_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintaxdetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="252" author="murthy.y">
		<createView viewName="fintaxdetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.applicablefor,
    t1.taxcustid,
    t1.taxexempted,
    t1.taxnumber,
    t1.addrline1,
    t1.addrline2,
    t1.addrline3,
    t1.addrline4,
    t1.country,
    t1.province,
    t1.city,
    t1.pincode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.countrydesc countryname,
    t3.cpprovincename provincename,
    t4.pccityname cityname,
    t5.areaname pincodename,
    t6.custcif,
    t6.custshrtname,
    t1.sezcertificateno,
    t1.sezvaluedate,
    t1.addressdetail,
    t1.pincodeid
   from (((((fintaxdetail t1
     left join bmtcountries t2 on (((t1.country)::bpchar = t2.countrycode)))
     left join rmtcountryvsprovince t3 on ((((t1.province) = (t3.cpprovince)) and ((t1.country)::bpchar = t3.cpcountry))))
     left join rmtprovincevscity t4 on ((((t1.city) = (t4.pccity)) and ((t1.province) = (t4.pcprovince)) and ((t1.country)::bpchar = t4.pccountry))))
     left join pincodes t5 on (((t1.pincodeid = t5.pincodeid) and ((t1.city) = (t5.city)))))
     join customers t6 on ((t1.taxcustid = (t6.custid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="252_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintaxdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="253_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'holddisbursement_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="253" author="murthy.y">
		<createView viewName="holddisbursement_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.hold,
    t1.totalloanamt,
    t1.disbursedamount,
    t1.holdlimitamount,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from holddisbursement t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="253_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'holddisbursement_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="254_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finassetevaluation_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="254" author="murthy.y">
		<createView viewName="finassetevaluation_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.typeofvaluation,
    t1.custawarevisit,
    t1.custreprename,
    t1.leased,
    t1.totalrevenue,
    t1.tenantcontactnum,
    t1.tenantawarevisit,
    t1.remarks,
    t1.panelfirm,
    t1.reureference,
    t1.propertydesc,
    t1.vendorinstructeddate,
    t1.reportdelivereddate,
    t1.inspectiondate,
    t1.finalreportdate,
    t1.marketvalueaed,
    t1.valuationdate,
    t1.status,
    t1.vendorvaluer,
    t1.valuerfee,
    t1.customerfee,
    t1.valuationcomments,
    t1.exprentalincome,
    t1.propisrented,
    t1.propertystatus,
    t1.percworkcompletion,
    t1.illegaldivalteration,
    t1.nocreqdevmunicipality,
    t1.reudecision,
    t3.fieldcodevalue vendorvaluerdesc,
    t1.unitvillasize,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finassetevaluation_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
     left join rmtlovfielddetail t3 on ((t1.vendorvaluer = t3.fieldcodeid)))
union all
 select t1.finreference,
    t1.typeofvaluation,
    t1.custawarevisit,
    t1.custreprename,
    t1.leased,
    t1.totalrevenue,
    t1.tenantcontactnum,
    t1.tenantawarevisit,
    t1.remarks,
    t1.panelfirm,
    t1.reureference,
    t1.propertydesc,
    t1.vendorinstructeddate,
    t1.reportdelivereddate,
    t1.inspectiondate,
    t1.finalreportdate,
    t1.marketvalueaed,
    t1.valuationdate,
    t1.status,
    t1.vendorvaluer,
    t1.valuerfee,
    t1.customerfee,
    t1.valuationcomments,
    t1.exprentalincome,
    t1.propisrented,
    t1.propertystatus,
    t1.percworkcompletion,
    t1.illegaldivalteration,
    t1.nocreqdevmunicipality,
    t1.reudecision,
    t3.fieldcodevalue vendorvaluerdesc,
    t1.unitvillasize,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finassetevaluation t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
     left join rmtlovfielddetail t3 on ((t1.vendorvaluer = t3.fieldcodeid)))
  where (not (exists ( select 1
           from finassetevaluation_temp
          where ((finassetevaluation_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="254_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finassetevaluation_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="255_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finocrdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="255" author="murthy.y">
		<createView viewName="finocrdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.detailid,
    t1.headerid,
    t2.finreference,
    t1.stepsequence,
    t1.customercontribution,
    t1.financercontribution,
    t1.contributor,
    t2.ocrid,
    t2.ocrdescription,
    t2.customerportion,
    t2.ocrtype,
    t2.totaldemand,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finocrdetails_temp t1
     join finocrheader_temp t2 on ((t1.headerid = t2.headerid)))
union all
 select t1.detailid,
    t1.headerid,
    t2.finreference,
    t1.stepsequence,
    t1.customercontribution,
    t1.financercontribution,
    t1.contributor,
    t2.ocrid,
    t2.ocrdescription,
    t2.customerportion,
    t2.ocrtype,
    t2.totaldemand,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finocrdetails t1
     join finocrheader t2 on ((t1.headerid = t2.headerid)))
  where (not (exists ( select 1
           from finocrdetails_temp
          where (finocrdetails_temp.headerid = t1.headerid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="255_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finocrdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="256_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rolledoverfinancedetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="256" author="murthy.y">
		<createView viewName="rolledoverfinancedetail_view" replaceIfExists="true">
			<![CDATA[
				 select r.newfinreference,
    r.finreference,
    r.rolloveramount,
    r.custpayment,
    p.totalpftbal,
    p.totalpribal,
    f.finstartdate startdate,
    f.finamount,
    f.effectiverateofreturn profitrate,
    f.totalprofit,
    f.nextrolloverdate rolloverdate
   from ((rolledoverfinancedetail_temp r
     join financemain f on (((r.finreference) = (f.finreference))))
     join finpftdetails p on (((f.finreference) = (p.finreference))))
union all
 select r.newfinreference,
    r.finreference,
    r.rolloveramount,
    r.custpayment,
    p.totalpftbal,
    p.totalpribal,
    f.finstartdate startdate,
    f.finamount,
    f.effectiverateofreturn profitrate,
    f.totalprofit,
    f.nextrolloverdate rolloverdate
   from ((rolledoverfinancedetail r
     join financemain f on (((r.finreference) = (f.finreference))))
     join finpftdetails p on (((f.finreference) = (p.finreference))))
  where (not (exists ( select 1
           from rolledoverfinancedetail_temp
          where (((rolledoverfinancedetail_temp.finreference) = (r.finreference)) and ((rolledoverfinancedetail_temp.newfinreference) = (r.newfinreference))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="256_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rolledoverfinancedetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="257_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkprocessdetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="257" author="murthy.y">
		<createView viewName="bulkprocessdetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.bulkprocessid,
    t1.finreference,
    f.fintype,
    f.finccy,
    t1.oldprofitrate,
    t1.newprofitrate,
    t1.deferedschddate,
    f.custid,
    f.finbranch,
    t1.profitchange,
    t1.alwprocess,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.recalstartdate,
    t1.recalenddate,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custshrtname custname,
    t3.intratebasisdesc profitdaybasisdesc,
    t4.schdmethoddesc
   from ((((bulkprocessdetails t1
     join financemain f on (((f.finreference) = (t1.finreference))))
     join customers t2 on ((t2.custid = f.custid)))
     join bmtintratebasiscodes t3 on (((t3.intratebasiscode) = (f.profitdaysbasis))))
     join bmtschdmethod t4 on (((t4.schdmethod) = (f.schedulemethod))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="257_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkprocessdetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="258_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'custpastduedetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="258" author="murthy.y">
		<createView viewName="custpastduedetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.custid,
    (sum(udf_convertcurrency(t1.fincurodamt, (t2.finccy), 'bhd')))(18,3) pastdueamount,
    max(t1.fincuroddays) duedays,
    min(t1.finodschddate) pastduefrom
   from (finoddetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
  where (t1.fincurodamt > (0))
  group by t1.custid
			]]>
		</createView>
	</changeSet>
	<changeSet id="258_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'custpastduedetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="259_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodcwaiverrecovery_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="259" author="murthy.y">
		<createView viewName="finodcwaiverrecovery_aview" replaceIfExists="true">
			<![CDATA[
				 select finod.finreference,
    finod.finodschddate,
    finod.finodfor,
    finod.movementdate,
    finod.seqno,
    finod.oddays,
    finod.fincurodamt,
    finod.fincurodpri,
    finod.fincurodpft,
    finod.penaltytype,
    finod.penaltycalon,
    finod.penaltyamtperc,
    finod.penalty,
    finod.maxwaiver,
    finod.waivedamt,
    finod.penaltypaid,
    finod.penaltybal,
    finod.rcdcandel,
    t2.finccy,
    t4.custcif
   from (((finodcrecovery finod
     join ( select t1.finreference,
            t1.fineffectdate,
            t1.applyodpenalty,
            t1.odincgrcdays,
            t1.odchargetype,
            t1.odgracedays,
            t1.odchargecalon,
            t1.odchargeamtorperc,
            t1.odallowwaiver,
            t1.odmaxwaiverperc
           from (( select finodpenaltyrates.finreference,
                    max(finodpenaltyrates.fineffectdate) maxfineffectdate
                   from finodpenaltyrates
                  group by finodpenaltyrates.finreference) t
             join finodpenaltyrates t1 on ((((t.finreference) = (t1.finreference)) and (t.maxfineffectdate = t1.fineffectdate))))
          where (t1.odmaxwaiverperc > (0))) finp on (((finp.finreference) = (finod.finreference))))
     join financemain t2 on (((finod.finreference) = (t2.finreference))))
     join customers t4 on ((t4.custid = t2.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="259_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodcwaiverrecovery_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="260_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finscheduledetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="260" author="murthy.y">
		<createView viewName="finscheduledetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.schseq,
    t1.schdate,
    t1.pftonschdate,
    t1.repayonschdate,
    t1.cpzonschdate,
    t1.rvwonschdate,
    t1.disbonschdate,
    t1.downpaymentonschdate,
    t1.balanceforpftcal,
    t1.baserate,
    t1.splrate,
    t1.actrate,
    t1.noofdays,
    t1.dayfactor,
    t1.profitcalc,
    t1.profitschd,
    t1.principalschd,
    t1.repayamount,
    t1.profitbalance,
    t1.disbamount,
    t1.cpzamount,
    t1.downpaymentamount,
    t1.closingbalance,
    t1.profitfraction,
    t1.prvrepayamount,
    t1.schdpftpaid,
    t1.schpftpaid,
    t1.schdpripaid,
    t1.schpripaid,
    t1.specifier,
    t1.defschddate,
    t1.schdmethod,
    t1.mrgrate,
    t1.calonindrate,
    t1.feechargeamt,
    t1.calculatedrate,
    t1.earlypaidbal,
    t1.earlypaid,
    t1.refundorwaiver,
    t1.writeoffprincipal,
    t1.writeoffprofit,
    t1.orgpft,
    t1.orgpri,
    t1.orgendbal,
    t1.orgplanpft,
    t1.feeschd,
    t1.schdfeepaid,
    t1.schdfeeos,
    t1.insschd,
    t1.schdinspaid,
    t1.advpftrate,
    t1.advprofit,
    t1.advrepayamount,
    t1.advbaserate,
    t1.advmargin,
    t1.advcalrate,
    t1.suplrent,
    t1.incrcost,
    t1.suplrentpaid,
    t1.incrcostpaid,
    t1.rolloveronschdate,
    t1.rolloveramount,
    t1.rolloveramountpaid,
    t1.tdsamount,
    t1.tdspaid,
    t1.pftdaysbasis,
    t1.writeoffins,
    t1.writeoffincrcost,
    t1.writeoffsuplrent,
    t1.writeoffschfee,
    t1.insuranceamt,
    t1.instnumber,
    t1.bpiorholiday,
    t1.frqdate,
    t1.presentmentid,
    t1.partialpaidamt,
    t1.feetax,
    t1.recallock,
    t1.tdsapplicable,
    t1.schdpftwaiver,
    t1.cpzbalance
   from finscheduledetails t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="260_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finscheduledetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="261_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'disb_other_cheque_dd_export');
			]]>
		</sql>
	</changeSet>
	<changeSet id="261" author="murthy.y">
		<createView viewName="disb_other_cheque_dd_export" replaceIfExists="true">
			<![CDATA[
				 select disb.paymenttype,
    fm.custid,
    disb.beneficiaryaccno,
    (disb.amttobereleased / (100)) amttobereleased,
    disb.beneficiaryname,
    disb.liabilityholdname,
    disb.payableloc,
    '' beneficiarycity,
    disb.printingloc,
    '' address1,
    '' address2,
    '' address3,
    '' address4,
    '' address5,
    disb.paymentid,
    disb.finreference,
    'bafl@bajajfinserve.com' baflmailid,
    '' paymentdetails1,
    '' paymentdetails2,
    '' paymentdetails3,
    '' paymentdetails4,
    '' paymentdetails5,
    '' paymentdetails6,
    '' paymentdetails7,
    disb.llreferenceno,
    disb.lldate,
    branch.micr,
    branch.ifsc,
    bank.bankname,
    branch.branchdesc,
    bny.email,
    bank.bankcode,
    '' ddcharges
   from ((((finadvancepayments disb
     join financemain fm on (((fm.finreference) = (disb.finreference))))
     left join beneficiary bny on ((((bny.accholdername) = (disb.beneficiaryname)) and ((bny.accnumber) = (disb.beneficiaryaccno)))))
     left join bankbranches branch on ((branch.bankbranchid = disb.bankbranchid)))
     left join bmtbankdetail bank on (((bank.bankcode) = (disb.bankcode))))
  where (((disb.status) = ('approved'(500))) and ((disb.paymenttype) = any (array[('cheque'(500)), ('dd'(500))])) and ((bank.bankcode) <> ('19'(500))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="261_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'disb_other_cheque_dd_export');
			]]>
		</sql>
	</changeSet>

	<changeSet id="262_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finirrdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="262" author="murthy.y">
		<createView viewName="finirrdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.irrid,
    t1.finreference,
    t2.irrcode,
    t2.irrcodedesc,
    t1.irr,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finirrdetails_temp t1
     join irrcodes t2 on ((t1.irrid = t2.irrid)))
union all
 select t1.irrid,
    t1.finreference,
    t2.irrcode,
    t2.irrcodedesc,
    t1.irr,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finirrdetails t1
     join irrcodes t2 on ((t1.irrid = t2.irrid)))
  where (not (exists ( select 1
           from finirrdetails_temp
          where (finirrdetails_temp.irrid = t1.irrid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="262_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finirrdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="263_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fin_options_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="263" author="murthy.y">
		<createView viewName="fin_options_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.optiontype,
    t1.currentoptiondate,
    t1.frequency,
    t1.noticeperioddays,
    t1.alertdays,
    t1.optionexercise,
    t1.nextoptiondate,
    t1.alerttype,
    t1.alerttoroles,
    t1.usertemplate,
    t1.customertemplate,
    ut.templatecode usertemplatecode,
    cust.templatecode customertemplatecode,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.remarks
   from ((fin_options t1
     left join templates ut on ((ut.templateid = t1.usertemplate)))
     left join templates cust on ((cust.templateid = t1.customertemplate)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="263_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fin_options_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="264_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finrepayinstruction_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="264" author="murthy.y">
		<createView viewName="finrepayinstruction_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.repaydate,
    t1.repayamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.repayschdmethod
   from finrepayinstruction_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="264_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finrepayinstruction_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="265_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'provisions_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="265" author="murthy.y">
		<createView viewName="provisions_view" replaceIfExists="true">
			<![CDATA[
				 select pa.id,
    pa.finreference,
    pa.closingbalance,
    pa.outstandprincipal,
    pa.outstandprofit,
    pa.profitaccruedanddue,
    pa.profitaccruedandnotdue,
    pa.collateralvalue,
    pa.duefromdate,
    pa.lastfullypaiddate,
    pa.currbucket,
    pa.duedays,
    pa.dpd,
    pa.provisiondate,
    pa.provisionedamt,
    pa.assetcode,
    pa.assetstageorder,
    pa.npa,
    pa.manualprovision,
    pa.linkedtranid,
    pa.chglinkedtranid,
    pa.version,
    pa.lastmntby,
    pa.lastmnton,
    pa.recordstatus,
    pa.rolecode,
    pa.nextrolecode,
    pa.taskid,
    pa.nexttaskid,
    pa.recordtype,
    pa.workflowid,
    fm.fintype,
    fm.finbranch,
    fm.finisactive,
    c.custid,
    c.custcif,
    c.custshrtname,
    pa.npatemplateid,
    np.code npatemplatecode,
    np.description npatemplatedesc
   from (((provisions_temp pa
     join financemain fm on (((fm.finreference) = (pa.finreference))))
     join customers c on ((c.custid = fm.custid)))
     left join npa_template_types np on ((np.id = pa.npatemplateid)))
union all
 select pa.id,
    pa.finreference,
    pa.closingbalance,
    pa.outstandprincipal,
    pa.outstandprofit,
    pa.profitaccruedanddue,
    pa.profitaccruedandnotdue,
    pa.collateralvalue,
    pa.duefromdate,
    pa.lastfullypaiddate,
    pa.currbucket,
    pa.duedays,
    pa.dpd,
    pa.provisiondate,
    pa.provisionedamt,
    pa.assetcode,
    pa.assetstageorder,
    pa.npa,
    pa.manualprovision,
    pa.linkedtranid,
    pa.chglinkedtranid,
    pa.version,
    pa.lastmntby,
    pa.lastmnton,
    pa.recordstatus,
    pa.rolecode,
    pa.nextrolecode,
    pa.taskid,
    pa.nexttaskid,
    pa.recordtype,
    pa.workflowid,
    fm.fintype,
    fm.finbranch,
    fm.finisactive,
    c.custid,
    c.custcif,
    c.custshrtname,
    pa.npatemplateid,
    np.code npatemplatecode,
    np.description npatemplatedesc
   from (((provisions pa
     join financemain fm on (((fm.finreference) = (pa.finreference))))
     join customers c on ((c.custid = fm.custid)))
     left join npa_template_types np on ((np.id = pa.npatemplateid)))
  where (not (exists ( select 1
           from provisions_temp
          where (provisions_temp.id = pa.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="265_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'provisions_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="266_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="266" author="murthy.y">
		<createView viewName="int_disbursement_request_view" replaceIfExists="true">
			<![CDATA[
				 select fa.paymentid,
    fa.finreference,
    fa.paymentdetail,
    'd'::bpchar channel,
    vs.manufacturerid providerid,
        case
            when ((fa.paymenttype) = 'neft') then 'n'
            when ((fa.paymenttype) = 'rtgs') then 'r'
            when ((fa.paymenttype) = 'dd') then 'd'
            when ((fa.paymenttype) = 'cheque') then 'c'
            when ((fa.paymenttype) = 'ift') then 'i'
            else fa.paymenttype
        end disbursement_type,
    fa.amttobereleased,
    fa.disbdate,
    fa.lldate,
    fa.payableloc,
    fa.printingloc,
    fa.llreferenceno cheque_number,
    cu.custcif,
    cu.custshrtname,
    '' customer_mobile,
    ce.custemail customer_email,
    cs.cpprovincename customer_state,
    cc.pccityname customer_city,
    '' customer_address1,
    '' customer_address2,
    '' customer_address3,
    '' customer_address4,
    '' customer_address5,
    bd.bankname,
    bb.branchcode,
    bb.branchdesc,
    pbd.cpprovincename benficiary_branch_state,
    pbd.pccityname benficiary_branch_city,
    bb.micr micr_code,
    bb.ifsc ifsc_code,
    fa.beneficiaryaccno,
        case
            when (((fa.paymenttype) = 'cheque') or ((fa.paymenttype) = 'dd')) then fa.liabilityholdname
            else fa.beneficiaryname
        end beneficiaryname,
    (((fa.phonecountrycode) || (fa.phoneareacode)) || (fa.phonenumber)) beneficiary_mobile,
    bce.custemail benficiry_email,
    brs.cpprovincename benficiary_state,
    brc.pccityname benficiary_city,
    (((((((brca.custaddrhnbr) || ',') || (brca.custaddrstreet)) || ',') || (brc.pccityname)) || ',') || (brs.cpprovincename)) benficiary_address1,
    '' benficiary_address2,
    '' benficiary_address3,
    '' benficiary_address4,
    brca.custaddrzip benficiary_address5,
    '' payment_detail1,
    '' payment_detail2,
    '' payment_detail3,
    '' payment_detail4,
    '' payment_detail5,
    fa.paymentdetail payment_detail6,
    '' payment_detail7,
    fa.status,
    fa.description remarks,
    fa.paymenttype,
    fm.fintype,
    pb.partnerbankid partnerbank_id,
    pb.partnerbankcode partnerbank_code,
    fa.inputdate,
    pb.alwfiledownload,
    pb.downloadtype,
    pb.filename,
    fm.finisactive,
    fm.finamount,
    smd.entitycode,
    fa.holddisbursement,
    pb.accountno partnerbank_account,
        case
            when (((fa.paymenttype) = 'neft') or ((fa.paymenttype) = 'rtgs')) then 'lbt'
            when ((fa.paymenttype) = 'imps') then 'bt'
            else ''
        end transaction_type_code
   from (((((((((((((((((((((finadvancepayments fa
     join ( select fmt.custid,
            fmt.finreference,
            fmt.fintype,
            fmt.finisactive,
            fmt.finamount
           from financemain_temp fmt
        union all
         select t2.custid,
            t2.finreference,
            t2.fintype,
            t2.finisactive,
            t2.finamount
           from financemain t2
          where (not (exists ( select 1
                   from financemain_temp t3
                  where ((t3.finreference) = (t2.finreference)))))) fm on (((fm.finreference) = (fa.finreference))))
     join customers cu on ((cu.custid = fm.custid)))
     join rmtcurrencies ccy on ((ccy.ccycode = (fa.disbccy)::bpchar)))
     join partnerbanks pb on ((pb.partnerbankid = fa.partnerbankid)))
     left join customeremails ce on (((ce.custid = cu.custid) and (ce.custemailpriority = 5))))
     left join customeraddresses ca on (((ca.custid = ce.custid) and (ca.custaddrpriority = 5))))
     left join rmtprovincevscity cc on (((cc.pccity) = (ca.custaddrcity))))
     left join rmtcountryvsprovince cs on (((cs.cpprovince) = (cc.pcprovince))))
     left join bankbranches bb on ((bb.bankbranchid = fa.bankbranchid)))
     left join bmtbankdetail bd on (((bd.bankcode) = (bb.bankcode))))
     left join ( select pb_1.partnerbankid,
            pbd_1.bankname,
            pbb.branchdesc,
            pbbrc.pccityname,
            pbbrs.cpprovincename
           from ((((partnerbanks pb_1
             join bankbranches pbb on ((((pbb.branchcode) = (pb_1.bankbranchcode)) and ((pbb.bankcode) = (pb_1.bankcode)))))
             join bmtbankdetail pbd_1 on (((pbd_1.bankcode) = (pbb.bankcode))))
             left join rmtprovincevscity pbbrc on (((pbbrc.pccity) = (pbb.city))))
             left join rmtcountryvsprovince pbbrs on (((pbbrs.cpprovince) = (pbbrc.pcprovince))))) pbd on ((pbd.partnerbankid = pb.partnerbankid)))
     left join beneficiary br on (((br.bankbranchid = fa.bankbranchid) and ((br.accnumber) = (fa.beneficiaryaccno)) and (br.custid = fm.custid))))
     left join customers bc on ((bc.custid = br.custid)))
     left join customeremails bce on (((bce.custid = cu.custid) and (bce.custemailpriority = 5))))
     left join customeraddresses brca on (((brca.custid = br.custid) and (brca.custaddrpriority = 5))))
     left join rmtprovincevscity brc on (((brc.pccity) = (brca.custaddrcity))))
     left join rmtcountryvsprovince brs on (((brs.cpprovince) = (brc.pcprovince))))
     left join rmtfinancetypes rft on (((fm.fintype) = (rft.fintype))))
     left join smtdivisiondetail smd on (((rft.findivision) = (smd.divisioncode))))
     left join vasrecording vr on (((vr.vasreference) = (fa.vasreference))))
     left join vasstructure vs on (((vs.productcode) = (vr.productcode))))
  where (((fa.status) = 'approved') and (not ((fa.paymentid) in ( select disbursement_requests.disbursement_id
           from disbursement_requests))) and (not (fa.paymentid in ( select finadvancepayments_temp.paymentid
           from finadvancepayments_temp))))
union all
 select pi.paymentinstructionid paymentid,
    ph.finreference,
    'cs' paymentdetail,
    ph.paymenttype channel,
    0 providerid,
        case
            when ((pi.paymenttype) = 'neft') then 'n'
            when ((pi.paymenttype) = 'rtgs') then 'r'
            when ((pi.paymenttype) = 'dd') then 'd'
            when ((pi.paymenttype) = 'cheque') then 'c'
            when ((pi.paymenttype) = 'ift') then 'i'
            else pi.paymenttype
        end disbursement_type,
    pi.paymentamount amttobereleased,
    pi.postdate disbdate,
    pi.postdate lldate,
    pi.payableloc,
    pi.printingloc,
    pi.favournumber cheque_number,
    cu.custcif,
    cu.custshrtname,
    '' customer_mobile,
    ce.custemail customer_email,
    cs.cpprovincename customer_state,
    cc.pccityname customer_city,
    '' customer_address1,
    '' customer_address2,
    '' customer_address3,
    '' customer_address4,
    '' customer_address5,
    bd.bankname,
    bb.branchcode,
    bb.branchdesc,
    bbrs.cpprovincename benficiary_branch_state,
    bbrc.pccityname benficiary_branch_city,
    bb.micr micr_code,
    bb.ifsc ifsc_code,
    pi.accountno beneficiaryaccno,
        case
            when (((pi.paymenttype) = 'cheque') or ((pi.paymenttype) = 'dd')) then pi.favourname
            else pi.acctholdername
        end beneficiaryname,
    ((pi.phonecountrycode) || (pi.phonenumber)) beneficiary_mobile,
    bce.custemail benficiry_email,
    brs.cpprovincename benficiary_state,
    brc.pccityname benficiary_city,
    '' benficiary_address1,
    '' benficiary_address2,
    '' benficiary_address3,
    '' benficiary_address4,
    brca.custaddrzip benficiary_address5,
    '' payment_detail1,
    '' payment_detail2,
    '' payment_detail3,
    '' payment_detail4,
    '' payment_detail5,
    '' payment_detail6,
    '' payment_detail7,
    pi.status,
    pi.remarks,
    pi.paymenttype,
    fm.fintype,
    pb.partnerbankid partnerbank_id,
    pb.partnerbankcode partnerbank_code,
    pi.postdate inputdate,
    pb.alwfiledownload,
    pb.downloadtype,
    pb.filename,
    fm.finisactive,
    fm.finamount,
    smd.entitycode,
    0 holddisbursement,
    pb.accountno partnerbank_account,
        case
            when (((pi.paymenttype) = 'neft') or ((pi.paymenttype) = 'rtgs')) then 'lbt'
            when ((pi.paymenttype) = 'imps') then 'bt'
            else ''
        end transaction_type_code
   from ((((((((((((((((((((((paymentinstructions pi
     join paymentheader ph on ((ph.paymentid = pi.paymentid)))
     join ( select fmm.custid,
            fmm.finreference,
            fmm.fintype,
            fmm.finisactive,
            fmm.finamount
           from financemain fmm
        union all
         select t2.custid,
            t2.finreference,
            t2.fintype,
            t2.finisactive,
            t2.finamount
           from financemain_temp t2
          where (not (exists ( select 1
                   from financemain_temp t3
                  where ((t3.finreference) = (t2.finreference)))))) fm on (((fm.finreference) = (ph.finreference))))
     join customers cu on ((cu.custid = fm.custid)))
     join rmtcurrencies ccy on ((ccy.ccycode = (pi.paymentccy)::bpchar)))
     join partnerbanks pb on ((pb.partnerbankid = pi.partnerbankid)))
     left join customeremails ce on (((ce.custid = cu.custid) and (ce.custemailpriority = 5))))
     left join customeraddresses ca on (((ca.custid = ce.custid) and (ca.custaddrpriority = 5))))
     left join rmtprovincevscity cc on (((cc.pccity) = (ca.custaddrcity))))
     left join rmtcountryvsprovince cs on (((cs.cpprovince) = (cc.pcprovince))))
     left join customerphonenumbers cm on (((cm.phonecustid = cu.custid) and ((cm.phonetypecode) = 'mobile1') and (cm.phonetypepriority = 5))))
     left join bankbranches bb on ((bb.bankbranchid = pi.bankbranchid)))
     left join bmtbankdetail bd on (((bd.bankcode) = (bb.bankcode))))
     left join rmtprovincevscity bbrc on (((bbrc.pccity) = (bb.city))))
     left join rmtcountryvsprovince bbrs on (((bbrs.cpprovince) = (bbrc.pcprovince))))
     left join beneficiary br on (((br.bankbranchid = pi.bankbranchid) and ((br.accnumber) = (pi.accountno)) and (br.custid = fm.custid))))
     left join customers bc on ((bc.custid = br.custid)))
     left join customeremails bce on (((bce.custid = cu.custid) and (bce.custemailpriority = 5))))
     left join customeraddresses brca on (((brca.custid = br.custid) and (brca.custaddrpriority = 5))))
     left join rmtprovincevscity brc on (((brc.pccity) = (brca.custaddrcity))))
     left join rmtcountryvsprovince brs on (((brs.cpprovince) = (brc.pcprovince))))
     left join rmtfinancetypes rft on (((fm.fintype) = (rft.fintype))))
     left join smtdivisiondetail smd on (((rft.findivision) = (smd.divisioncode))))
  where (((pi.status) = 'approved') and (not ((pi.paymentinstructionid) in ( select disbursement_requests.disbursement_id
           from disbursement_requests))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="266_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disbursement_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="267_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mtmcalculation_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="267" author="murthy.y">
		<createView viewName="mtmcalculation_view" replaceIfExists="true">
			<![CDATA[
				 select fpd.finreference,
    fpd.totalpribal totaloutstanding,
    ca.totalutlizdamt collateralvalue,
    fpd.finccy collateralccy,
    cu.custcif customercif,
    cu.custshrtname customername,
    cu.custid customerid,
    ft.fintype,
    ft.fintypedesc
   from (((finpftdetails fpd
     join ( select ca_1.reference,
            sum((ca_1.assignperc * cs.bankvaluation)) totalutlizdamt
           from (collateralassignment ca_1
             join collateralsetup cs on (((cs.collateralref) = (ca_1.collateralref))))
          group by ca_1.reference) ca on (((fpd.finreference) = (ca.reference))))
     join customers cu on ((cu.custid = fpd.custid)))
     join rmtfinancetypes ft on (((ft.fintype) = (fpd.fintype))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="267_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mtmcalculation_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="268_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontributorheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="268" author="murthy.y">
		<createView viewName="fincontributorheader_view" replaceIfExists="true">
			<![CDATA[
				 select fincontributorheader_temp.finreference,
    fincontributorheader_temp.mincontributors,
    fincontributorheader_temp.maxcontributors,
    fincontributorheader_temp.mincontributionamt,
    fincontributorheader_temp.maxcontributionamt,
    fincontributorheader_temp.curcontributors,
    fincontributorheader_temp.curcontributionamt,
    fincontributorheader_temp.curbankinvestment,
    fincontributorheader_temp.avgmudaribrate,
    fincontributorheader_temp.alwcontributorstoleave,
    fincontributorheader_temp.alwcontributorstojoin,
    fincontributorheader_temp.version,
    fincontributorheader_temp.lastmntby,
    fincontributorheader_temp.lastmnton,
    fincontributorheader_temp.recordstatus,
    fincontributorheader_temp.rolecode,
    fincontributorheader_temp.nextrolecode,
    fincontributorheader_temp.taskid,
    fincontributorheader_temp.nexttaskid,
    fincontributorheader_temp.recordtype,
    fincontributorheader_temp.workflowid
   from fincontributorheader_temp
union all
 select fincontributorheader.finreference,
    fincontributorheader.mincontributors,
    fincontributorheader.maxcontributors,
    fincontributorheader.mincontributionamt,
    fincontributorheader.maxcontributionamt,
    fincontributorheader.curcontributors,
    fincontributorheader.curcontributionamt,
    fincontributorheader.curbankinvestment,
    fincontributorheader.avgmudaribrate,
    fincontributorheader.alwcontributorstoleave,
    fincontributorheader.alwcontributorstojoin,
    fincontributorheader.version,
    fincontributorheader.lastmntby,
    fincontributorheader.lastmnton,
    fincontributorheader.recordstatus,
    fincontributorheader.rolecode,
    fincontributorheader.nextrolecode,
    fincontributorheader.taskid,
    fincontributorheader.nexttaskid,
    fincontributorheader.recordtype,
    fincontributorheader.workflowid
   from fincontributorheader
  where (not (exists ( select 1
           from fincontributorheader_temp
          where ((fincontributorheader_temp.finreference) = (fincontributorheader.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="268_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontributorheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="269_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="269" author="murthy.y">
		<createView viewName="finreceiptheader_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.extreference,
    t1.module,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    t2.finisactive,
    t1.waviedamt,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t1.actfinreceipt,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t14.code closuretypedesc
   from (((((((((((finreceiptheader_temp t1
     join financemain t2 on (((t1.reference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join closure_types t14 on ((t14.id = t1.closuretypeid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="269_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="270_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'vasmovement_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="270" author="murthy.y">
		<createView viewName="vasmovement_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.vasmovementid,
    t1.finreference,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from vasmovement t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="270_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'vasmovement_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="271_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="271" author="murthy.y">
		<createView viewName="presentmentdetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.presentmentid,
    t1.presentmentref,
    t1.finreference,
    t1.schdate,
    t1.mandateid,
    t1.schamtdue,
    t1.schpridue,
    t1.schpftdue,
    t1.schfeedue,
    t1.schinsdue,
    t1.schpenaltydue,
    t1.advanceamt,
    t1.excessid,
    t1.adviseamt,
    t1.presentmentamt,
    t1.excludereason,
    t1.tdsamount,
    t1.bounceid,
    t1.emino,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.mandatetype,
    t3.fintype,
    t4.fintypedesc,
    t5.custshrtname customername,
    t1.receiptid,
    t1.ecsreturn,
    t1.errorcode,
    t1.errordesc,
    t1.manualadviseid
   from ((((presentmentdetails t1
     join mandates t2 on ((t1.mandateid = t2.mandateid)))
     join financemain t3 on (((t1.finreference) = (t3.finreference))))
     join rmtfinancetypes t4 on (((t3.fintype) = (t4.fintype))))
     join customers t5 on ((t5.custid = t3.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="271_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="272_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinsteppolicydetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="272" author="murthy.y">
		<createView viewName="wiffinsteppolicydetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.stepno,
    t1.tenorsplitperc,
    t1.installments,
    t1.ratemargin,
    t1.emisplitperc,
    t1.steppedemi,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepspecifier,
    t1.stepstart,
    t1.stepend,
    t1.autocal
   from wiffinsteppolicydetail_temp t1
union all
 select t1.finreference,
    t1.stepno,
    t1.tenorsplitperc,
    t1.installments,
    t1.ratemargin,
    t1.emisplitperc,
    t1.steppedemi,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepspecifier,
    t1.stepstart,
    t1.stepend,
    t1.autocal
   from wiffinsteppolicydetail t1
  where (not (exists ( select 1
           from wiffinsteppolicydetail_temp
          where (((wiffinsteppolicydetail_temp.finreference) = (t1.finreference)) and (wiffinsteppolicydetail_temp.stepno = t1.stepno)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="272_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinsteppolicydetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="273_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'verification_legal_doc_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="273" author="murthy.y">
		<createView viewName="verification_legal_doc_view" replaceIfExists="true">
			<![CDATA[
				 select t.lvreq,
    t.doctype,
    t.code,
    t.description,
    t.custcif,
    t.finreference,
    t.documentid,
    t.documentsubid,
    t.docname,
    t.collateralref
   from ( select dt.lvreq,
            3 doctype,
            dt.doctypecode code,
            dt.doctypedesc description,
            c.custcif,
            fm.finreference,
            c.custid documentid,
            dd.custdoccategory documentsubid,
            dd.custdocname docname,
            '' collateralref
           from (((financemain_temp fm
             join customers c on ((c.custid = fm.custid)))
             join customerdocuments_view dd on ((dd.custid = c.custid)))
             join bmtdocumenttypes dt on (((dt.doctypecode) = (dd.custdoccategory))))
        union all
         select dt.lvreq,
            2 doctype,
            dt.doctypecode code,
            dt.doctypedesc description,
            c.custcif,
            fm.finreference,
            dd.docid documentid,
            ''(500) documentsubid,
            dd.docname,
            '' collateralref
           from (((financemain_temp fm
             join customers c on ((c.custid = fm.custid)))
             join documentdetails_view dd on (((dd.referenceid) = (fm.finreference))))
             join bmtdocumenttypes dt on (((dt.doctypecode) = (dd.doccategory))))
        union all
         select dt.lvreq,
            1 doctype,
            dt.doctypecode code,
            dt.doctypedesc description,
            c.custcif,
            fm.finreference,
            dd.docid documentid,
            ''(500) documentsubid,
            dd.docname,
            cs.collateralref
           from ((((financemain_temp fm
             join customers c on ((c.custid = fm.custid)))
             join collateralsetup cs on ((cs.depositorid = c.custid)))
             join documentdetails_view dd on (((dd.referenceid) = (cs.collateralref))))
             join bmtdocumenttypes dt on (((dt.doctypecode) = (dd.doccategory))))) t
			]]>
		</createView>
	</changeSet>
	<changeSet id="273_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'verification_legal_doc_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="274_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'paymenttransaction_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="274" author="murthy.y">
		<createView viewName="paymenttransaction_view" replaceIfExists="true">
			<![CDATA[
				 select fa.finreference,
    pt.tranmodule,
    fa.paymentid,
    pt.transtatus,
    pt.transactionid,
    pt.tranreference,
    pt.tranbatch,
    pt.statuscode,
    pt.statusdesc
   from (paymenttransaction pt
     join finadvancepayments fa on ((pt.paymentid = (fa.paymentid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="274_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'paymenttransaction_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="275_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'lockedfinances_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="275" author="murthy.y">
		<createView viewName="lockedfinances_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t2.usrlogin nextusrname,
    t2.usrmobile lovvalue,
    t1.recordtype,
    t1.recordstatus
   from (financemain_temp t1
     join secusers t2 on ((((t2.usrid)(20)) = (t1.nextuserid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="275_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'lockedfinances_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="276_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_lview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="276" author="murthy.y">
		<createView viewName="financemain_lview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t2.custpassportno lovdesccustpassportno,
    t2.custdob lovdesccustdob,
    t2.custcrcpr lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory lovdescproductcodename,
    t3.findivision lovdescfindivision,
    t3.product lovdescfinproduct,
    t3.fintypedesc lovdescfintypename,
    coalesce(t4.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
    t1.productcategory,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
    t1.offerproduct,
    t1.offeramount,
    t1.custsegmentation,
    t1.baseproduct,
    t1.processtype,
    t1.bureautimeseries,
    t1.campaignname,
    t1.existinglanrefno,
    t1.leadsource,
    t1.posource,
    t1.rsa,
    t1.verification,
    t1.sourcingbranch,
    t1.sourchannelcategory,
    t1.asmname,
    t1.offerid,
    t1.applicationno,
    t1.lastmnton,
    t1.version,
    t1.tdsapplicable,
    t2.custid,
    t1.instbasedschd,
    t1.allowsubvention,
    t1.tdstype,
    t1.writeoffloan,
    t1.restructure,
    t1.calcofsteps,
    t1.stepsappliedfor,
    t1.noofgrcsteps,
    t1.schdversion,
    t1.subventionfrom,
    t1.manufacturerdealerid,
    t5.dealername manufacturerdealername,
    t5.code manufacturerdealercode
   from ((((financemain_temp t1
     join customers t2 on ((t1.custid = t2.custid)))
     join rmtfinancetypes t3 on (((t3.fintype) = (t1.fintype))))
     left join secroles t4 on (((t1.nextrolecode) = (t4.rolecd))))
     left join amtvehicledealer t5 on ((t1.manufacturerdealerid = t5.dealerid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="276_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="277_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finadvancepayments_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="277" author="murthy.y">
		<createView viewName="finadvancepayments_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.paymentid,
    t1.paymentseq,
    t1.paymentdetail,
    t1.amttobereleased,
    t1.liabilityholdname,
    t1.transactionref,
    t1.beneficiaryname,
    t1.beneficiaryaccno,
    t1.reenterbeneficiaryaccno,
    t1.description,
    t1.paymenttype,
    t1.llreferenceno,
    t1.lldate,
    t1.custcontribution,
    t1.sellercontribution,
    t1.remarks,
    t1.disbdate,
    t1.disbseq,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.bankcode,
    t1.payableloc,
    t1.printingloc,
    t1.valuedate,
    t1.bankbranchid,
    t1.phonecountrycode,
    t1.phoneareacode,
    t1.phonenumber,
    t1.clearingdate,
    t1.status,
    t1.active,
    t1.inputdate,
    t1.disbccy,
    t1.poissued,
    t3.bankcode branchbankcode,
    t31.bankname branchbankname,
    t3.branchcode,
    t3.branchdesc,
    t3.ifsc,
    t3.city,
    t4.bankname,
    t1.partnerbankid,
    t5.partnerbankcode,
    t5.partnerbankname,
    t1.linkedtranid,
    t5.actype partnerbankactype,
    t5.accountno partnerbankac,
    t6.branchdesc printinglocdesc,
    t1.rejectreason,
    t1.realizationdate,
    t1.holddisbursement,
    t1.vasreference
   from (((((finadvancepayments_temp t1
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t31 on (((t31.bankcode) = (t3.bankcode))))
     left join bmtbankdetail t4 on (((t1.bankcode) = (t4.bankcode))))
     left join partnerbanks t5 on ((t5.partnerbankid = t1.partnerbankid)))
     left join bankbranches t6 on ((((t6.branchcode) = (t1.printingloc)) and ((t6.bankcode) = (t1.bankcode)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="277_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finadvancepayments_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="278_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkratechange_sview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="278" author="murthy.y">
		<createView viewName="bulkratechange_sview" replaceIfExists="true">
			<![CDATA[
				 select t1.bulkratechangeref,
    t1.finreference,
    t1.finbranch,
    t1.finccy,
    t1.custcif,
    t1.finamount,
    t1.oldprofitrate,
    t1.newprofitrate,
    t1.oldprofit,
    t1.newprofit,
    t1.allowratechange,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.status,
    t1.errormsg,
    t2.fintype,
    t3.schdate fromdate,
    t4.ccyeditfield lovdescfinformatter
   from (((bulkratechangedetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join finscheduledetails t3 on (((t3.finreference) = (t1.finreference))))
     join rmtcurrencies t4 on (((t1.finccy)::bpchar = t4.ccycode)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="278_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkratechange_sview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="279_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'findisbursementdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="279" author="murthy.y">
		<createView viewName="findisbursementdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.disbdate,
    t1.disbseq,
    t1.disbdesc,
    t1.disbaccountid,
    t1.disbamount,
    t1.disbreqdate,
    t1.disbdisbursed,
    t1.disbisactive,
    t1.disbremarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.feechargeamt,
    t1.disbstatus,
    t1.disbtype,
    t1.disbclaim,
    t1.disbexptype,
    t1.disbretperc,
    t1.disbretamount,
    t1.autodisb,
    t1.netadvdue,
    t1.netretdue,
    t1.disbretpaid,
    t1.retpaiddate,
    t2.expencetypename lovdescdisbexptype,
    t1.consultfeefrq,
    t1.consultfeestartdate,
    t1.consultfeeenddate,
    t1.contractorid,
    t1.insuranceamt,
    t1.instructionuid,
    t1.quickdisb,
    t1.instcalreq,
    t1.linkeddisbid
   from (findisbursementdetails_temp t1
     left join amtexpensetype t2 on ((t2.expencetypeid = t1.disbexptype)))
union all
 select t1.finreference,
    t1.disbdate,
    t1.disbseq,
    t1.disbdesc,
    t1.disbaccountid,
    t1.disbamount,
    t1.disbreqdate,
    t1.disbdisbursed,
    t1.disbisactive,
    t1.disbremarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.feechargeamt,
    t1.disbstatus,
    t1.disbtype,
    t1.disbclaim,
    t1.disbexptype,
    t1.disbretperc,
    t1.disbretamount,
    t1.autodisb,
    t1.netadvdue,
    t1.netretdue,
    t1.disbretpaid,
    t1.retpaiddate,
    t2.expencetypename lovdescdisbexptype,
    t1.consultfeefrq,
    t1.consultfeestartdate,
    t1.consultfeeenddate,
    t1.contractorid,
    t1.insuranceamt,
    t1.instructionuid,
    t1.quickdisb,
    t1.instcalreq,
    t1.linkeddisbid
   from (findisbursementdetails t1
     left join amtexpensetype t2 on ((t2.expencetypeid = t1.disbexptype)))
  where (not (exists ( select 1
           from findisbursementdetails_temp
          where ((findisbursementdetails_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="279_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'findisbursementdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="280_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_prepayment_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="280" author="murthy.y">
		<createView viewName="dm_prepayment_details_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t2.finreference), '-7'::integer, 7) applid,
    t1.finreference agreementno,
    t3.receiptid prepaymentid,
    null prepayment_rate,
    null prepayment_type,
    null prepayment_penalty_due,
    null prepayment_penalty_paid,
    null prepayment_amt,
    null businessdate,
    'n' processed_flag,
    null process_date,
    '' segments,
    '' prepayment_date,
    null(8,0) business_year,
    null batch_id
   from ((finpftdetails t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join finreceiptheader t3 on (((t3.reference) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="280_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_prepayment_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="281_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finocrheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="281" author="murthy.y">
		<createView viewName="finocrheader_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.ocrid,
    t1.ocrdescription,
    t1.customerportion,
    t1.ocrtype,
    t1.totaldemand,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from finocrheader t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="281_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finocrheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="282_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financeenquiry_hierarchy_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="282" author="murthy.y">
		<createView viewName="financeenquiry_hierarchy_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.calterms numberofterms,
    t1.custid,
    t1.finamount,
    t1.grcperiodenddate,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.allowgrcperiod,
    t1.downpayment,
    t1.migratedfinance,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.fincurrassetvalue,
    t1.blacklisted,
    t1.feechargeamt,
    t1.closingstatus,
    t1.graceterms,
    t1.alwmultidisb,
    t1.defferments,
    t1.finstatus,
    t1.mandateid,
    t1.finrepaymethod,
    t1.finassetvalue,
    (((t1.fincurrassetvalue + t1.totalcpz) + t1.feechargeamt) + t1.insuranceamt) financingamount,
    t1.totalcpz,
    ((((t1.fincurrassetvalue + t1.totalcpz) - t1.finrepaymentamount) + t1.feechargeamt) + t1.insuranceamt) curfinamount,
    t2.fintypedesc lovdescfintypename,
    t2.finscheduleon lovdescfinscheduleon,
    t2.findivision lovdescfindivision,
    t2.fincategory lovdescproductcodename,
    t2.finisalwdifferment lovdescfinalwdeferment,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.branchdesc lovdescfinbranchname,
    t5.custtypectg,
    coalesce(t9.noinst, (0)) noinst,
    h.reporting_to
   from ((((((financemain_temp t1
     join user_hierarchy h on (((t1.businessvertical = coalesce(h.business_vertical, t1.businessvertical)) and ((t1.fincategory) = (coalesce(h.product, t1.fincategory))) and ((t1.fintype) = (coalesce(h.fin_type, t1.fintype))) and ((t1.finbranch) = (coalesce(h.branch, t1.finbranch))))))
     join rmtfinancetypes t2 on (((t1.fintype) = (t2.fintype))))
     join customers t3 on ((t1.custid = t3.custid)))
     join rmtbranches t4 on (((t1.finbranch) = (t4.branchcode))))
     join rmtcusttypes t5 on (((t3.custtypecode) = (t5.custtypecode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="282_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financeenquiry_hierarchy_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="283_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finagreementdetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="283" author="murthy.y">
		<createView viewName="finagreementdetail_aview" replaceIfExists="true">
			<![CDATA[
				 select finagreementdetail.finreference,
    finagreementdetail.agrid,
    finagreementdetail.agrname,
    finagreementdetail.agrcontent,
    finagreementdetail.version,
    finagreementdetail.lastmntby,
    finagreementdetail.lastmnton,
    finagreementdetail.recordstatus,
    finagreementdetail.rolecode,
    finagreementdetail.nextrolecode,
    finagreementdetail.taskid,
    finagreementdetail.nexttaskid,
    finagreementdetail.recordtype,
    finagreementdetail.workflowid,
    lmtfinrefdetail_aaview.lovdescnamelov lovdescagrname,
    finagreementdetail.fintype
   from (finagreementdetail
     join lmtfinrefdetail_aaview on (((finagreementdetail.agrid = lmtfinrefdetail_aaview.finrefid) and ((finagreementdetail.fintype) = (lmtfinrefdetail_aaview.fintype)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="283_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finagreementdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="284_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincovenanttype_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="284" author="murthy.y">
		<createView viewName="fincovenanttype_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc covenanttypedesc,
    t5.code categorycode,
    t4.roledesc mandroledesc,
    t1.receivabledate,
    t1.internaluse,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd pddflag,
    t3.otc otcflag
   from (((fincovenanttype_temp t1
     join bmtdocumenttypes t3 on (((t3.doctypecode) = (t1.covenanttype))))
     left join documentcategory t5 on ((t5.id = t3.categoryid)))
     left join secroles t4 on (((t4.rolecd) = (t1.mandrole))))
union all
 select t1.finreference,
    t1.covenanttype,
    t1.description,
    t1.mandrole,
    t1.alwwaiver,
    t1.alwpostpone,
    t1.postponedays,
    t1.alwotc,
    t3.doctypedesc covenanttypedesc,
    t5.code categorycode,
    t4.roledesc mandroledesc,
    t1.receivabledate,
    t1.internaluse,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.pdd pddflag,
    t3.otc otcflag
   from (((fincovenanttype t1
     join bmtdocumenttypes t3 on (((t3.doctypecode) = (t1.covenanttype))))
     left join documentcategory t5 on ((t5.id = t3.categoryid)))
     left join secroles t4 on (((t4.rolecd) = (t1.mandrole))))
  where (not (exists ( select 1
           from fincovenanttype_temp
          where (((fincovenanttype_temp.finreference) = (t1.finreference)) and ((fincovenanttype_temp.covenanttype) = (t1.covenanttype))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="284_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincovenanttype_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="285_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeereceipts_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="285" author="murthy.y">
		<createView viewName="finfeereceipts_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.feeid,
    t1.receiptid,
    t1.paidamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.amount receiptamount,
    t2.transactionref,
    t2.favournumber,
    t3.feetypeid,
    t3.vasreference,
    t4.feetypecode,
    t4.feetypedesc,
    t3.finreference,
    t5.receiptmode receipttype,
    t1.paidtds
   from ((((finfeereceipts t1
     join finreceiptdetail t2 on ((t1.receiptid = t2.receiptid)))
     join finfeedetail_view t3 on ((t1.feeid = t3.feeid)))
     left join feetypes t4 on ((t3.feetypeid = t4.feetypeid)))
     join finreceiptheader t5 on ((t1.receiptid = t5.receiptid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="285_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeereceipts_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="286_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'interestcertificate_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="286" author="murthy.y">
		<createView viewName="interestcertificate_view" replaceIfExists="true">
			<![CDATA[
				 select t2.custshrtname custname,
    t3.custaddrhnbr,
    t3.custaddrstreet,
    t11.countrydesc,
    t12.cpprovincename custaddrstate,
    t13.pccityname custaddrcity,
    t3.custaddrzip,
    t8.finreference,
    t4.custemail,
    t5.phonenumber custphonenumber,
    t6.fintypedesc,
    t8.finassetvalue,
    t8.effectiverateofreturn effectiverate,
    t10.entitycode,
    t10.entitydesc,
    t10.pannumber entitypannumber,
    t10.entityaddrhnbr,
    t10.entityflatnbr,
    t10.entityaddrstreet,
    t14.cpprovincename entitystate,
    t15.pccityname entitycity,
    t10.pincode entityzip,
    t1.finpostdate,
    t1.finschdpftpaid,
    t1.finschdpripaid,
    t8.finccy,
    t8.finassetvalue finamount,
    t8.fintype,
    t3.custflatnbr,
    t8.fincurrassetvalue,
    t2.custsalutationcode custsalutation
   from (((((((((((((financemain t8
     left join finrepaydetails t1 on (((t8.finreference) = (t1.finreference))))
     join customers t2 on ((t2.custid = t8.custid)))
     left join customeraddresses t3 on (((t3.custid = t8.custid) and (t3.custaddrpriority = 5))))
     left join customeremails t4 on (((t4.custid = t8.custid) and (t4.custemailpriority = 5))))
     left join customerphonenumbers t5 on (((t5.phonecustid = t8.custid) and (t5.phonetypepriority = 5))))
     join rmtfinancetypes t6 on (((t6.fintype) = (t8.fintype))))
     join smtdivisiondetail t9 on (((t9.divisioncode) = (t6.findivision))))
     join entity t10 on (((t10.entitycode) = (t9.entitycode))))
     left join bmtcountries t11 on ((t11.countrycode = t3.custaddrcountry)))
     left join rmtcountryvsprovince t12 on (((t12.cpprovince) = (t3.custaddrprovince))))
     left join rmtprovincevscity t13 on (((t13.pccity) = (t3.custaddrcity))))
     left join rmtcountryvsprovince t14 on (((t14.cpprovince) = (t10.statecode))))
     join rmtprovincevscity t15 on (((t15.pccity) = (t10.citycode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="286_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'interestcertificate_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="287_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkratechange_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="287" author="murthy.y">
		<createView viewName="bulkratechange_view" replaceIfExists="true">
			<![CDATA[
				 select t1.fintype,
    t1.finreference,
    t1.custid,
    t4.custcif,
    t1.finbranch,
    t1.finccy,
    t5.findivision lovdescfindivision,
    t5.fincategory productcode,
    t1.effectiverateofreturn oldprofitrate,
    t1.totalprofit oldprofit,
    t1.finamount,
    t1.finisactive,
    t2.schdate fromdate,
    t3.ccyeditfield lovdescfinformatter,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.finstartdate,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.recordtype,
    t1.rcdmaintainsts
   from ((((financemain_temp t1
     join finscheduledetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtcurrencies t3 on ((t1.finccy = t3.ccycode)))
     join customers t4 on ((t1.custid = t4.custid)))
     join rmtfinancetypes t5 on (((t5.fintype) = (t1.fintype))))
union all
 select t1.fintype,
    t1.finreference,
    t1.custid,
    t4.custcif,
    t1.finbranch,
    t1.finccy,
    t5.findivision lovdescfindivision,
    t5.fincategory productcode,
    t1.effectiverateofreturn oldprofitrate,
    t1.totalprofit oldprofit,
    t1.finamount,
    t1.finisactive,
    t2.schdate fromdate,
    t3.ccyeditfield lovdescfinformatter,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.finstartdate,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.recordtype,
    t1.rcdmaintainsts
   from ((((financemain t1
     join finscheduledetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtcurrencies t3 on ((t1.finccy = t3.ccycode)))
     join customers t4 on ((t1.custid = t4.custid)))
     join rmtfinancetypes t5 on (((t5.fintype) = (t1.fintype))))
  where (not (exists ( select 1 expr1
           from financemain_temp
          where ((financemain_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="287_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkratechange_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="288_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_soa_finsmry_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="288" author="murthy.y">
		<createView viewName="rpt_soa_finsmry_view" replaceIfExists="true">
			<![CDATA[
				 select t.finreference,
    t.comp,
    t.due,
    t.receipt,
    t.waived,
    c.ccyminorccyunits,
    c.ccyeditfield,
    ( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_date'(500)))) app_date,
    t.ordrby
   from (( select t1.finreference,
            t2.finccy,
            'instalment amount' comp,
            sum(((t1.profitschd + t1.principalschd) + t1.feeschd)) due,
            sum(((t1.schdpripaid + t1.schdpftpaid) + t1.schdfeepaid)) receipt,
            0 waived,
            1 ordrby
           from (finscheduledetails t1
             join financemain t2 on (((t1.finreference) = (t2.finreference))))
          where (t1.schdate <= ( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = ('app_date'(500)))))
          group by t1.finreference, t2.finccy
        union all
         select t1.finreference,
            t2.finccy,
            'principal component' comp,
            sum(t1.principalschd) due,
            sum(t1.schdpripaid) receipt,
            0 waived,
            2 ordrby
           from (finscheduledetails t1
             join financemain t2 on (((t1.finreference) = (t2.finreference))))
          where (t1.schdate <= ( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = ('app_date'(500)))))
          group by t1.finreference, t2.finccy
        union all
         select t1.finreference,
            t2.finccy,
            'interest component' comp,
            sum(t1.profitschd) due,
            sum(t1.schdpftpaid) receipt,
            0 waived,
            3 ordrby
           from (finscheduledetails t1
             join financemain t2 on (((t1.finreference) = (t2.finreference))))
          where (t1.schdate <= ( select to_date((smtparameters.sysparmvalue), 'yyyy-mm-dd') sysparmvalue
                   from smtparameters
                  where ((smtparameters.sysparmcode) = ('app_date'(500)))))
          group by t1.finreference, t2.finccy
        union all
         select t1.finreference,
            t2.finccy,
            'late payment penalty' comp,
            sum(coalesce((t1.totpenaltyamt - t1.totwaived), (0))) due,
            sum(coalesce(t1.totpenaltypaid, (0))) receipt,
            sum(coalesce(t1.totwaived, (0))) waived,
            4 ordrby
           from (finoddetails t1
             join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
          group by t1.finreference, t2.finccy
        union all
         select t1.finreference,
            t1.finccy,
            'bounce charges' comp,
            coalesce(sum((t2.adviseamount - t2.waivedamount)), (0)) due,
            coalesce(sum(t2.paidamount), (0)) receipt,
            coalesce(sum(t2.waivedamount), (0)) waived,
            5 ordrby
           from (finpftdetails t1
             left join manualadvise t2 on ((((t1.finreference) = (t2.finreference)) and (t2.bounceid > 0))))
          group by t1.finreference, t1.finccy
        union all
         select t1.finreference,
            t1.finccy,
            'other receivables' comp,
            coalesce(sum((t2.adviseamount - t2.waivedamount)), (0)) due,
            coalesce(sum(t2.paidamount), (0)) receipt,
            coalesce(sum(t2.waivedamount), (0)) waived,
            6 ordrby
           from (finpftdetails t1
             left join manualadvise t2 on ((((t1.finreference) = (t2.finreference)) and (t2.advisetype = 1) and (t2.bounceid = 0))))
          group by t1.finreference, t1.finccy
        union all
         select t1.finreference,
            t1.finccy,
            'unadjusted amount' comp,
            coalesce(sum(t2.balanceamt), (0)) due,
            0,
            0 waived,
            7 ordrby
           from (finpftdetails t1
             left join finexcessamount t2 on (((t1.finreference) = (t2.finreference))))
          group by t1.finreference, t1.finccy
        union all
         select t1.finreference,
            t1.finccy,
            'other payables' comp,
            coalesce(sum(t2.balanceamt), (0)) due,
            0 receipt,
            0 waived,
            8 ordrby
           from (finpftdetails t1
             left join manualadvise t2 on ((((t1.finreference) = (t2.finreference)) and (t2.advisetype = 2))))
          group by t1.finreference, t1.finccy) t
     join rmtcurrencies c on ((c.ccycode = t.finccy)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="288_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_soa_finsmry_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="289_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'linkedfinances_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="289" author="murthy.y">
		<createView viewName="linkedfinances_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.linkedreference,
    f.fintype linkedfintype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    c.custshrtname,
    t1.status,
    f.quickdisb
   from ((linkedfinances_temp t1
     join financemain_temp f on ((((t1.linkedreference) = (f.finreference)) and (f.quickdisb = 1))))
     join customers c on ((f.custid = c.custid)))
union all
 select t1.id,
    t1.finreference,
    t1.linkedreference,
    f.fintype linkedfintype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    c.custshrtname,
    t1.status,
    f.quickdisb
   from ((linkedfinances_temp t1
     join financemain f on (((t1.linkedreference) = (f.finreference))))
     join customers c on ((f.custid = c.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="289_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'linkedfinances_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="290_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finschfrqinsurance_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="290" author="murthy.y">
		<createView viewName="finschfrqinsurance_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.insid,
    t3.reference,
    t3.module,
    t3.insurancetype,
    t3.insreference,
    t2.closingbalance,
    t1.insschdate,
    t1.insurancerate,
    t1.insurancefrq,
    t1.amount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from ((finschfrqinsurance_temp t1
     join fininsurances_temp t3 on ((t3.insid = t1.insid)))
     join finscheduledetails_temp t2 on (((t2.schdate = t1.insschdate) and ((t3.reference) = (t2.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="290_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finschfrqinsurance_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="291_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodpenalty_latest_rates_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="291" author="murthy.y">
		<createView viewName="finodpenalty_latest_rates_view" replaceIfExists="true">
			<![CDATA[
				 select odpr.finreference,
    odpr.fineffectdate,
    odpr.applyodpenalty,
    odpr.odincgrcdays,
    odpr.odchargetype,
    odpr.odgracedays,
    odpr.odchargecalon,
    odpr.odchargeamtorperc,
    odpr.odallowwaiver,
    odpr.odmaxwaiverperc,
    odpr.odrulecode
   from finodpenaltyrates odpr
  where (odpr.fineffectdate = ( select max(finodpenaltyrates.fineffectdate) expr1
           from finodpenaltyrates
          where ((finodpenaltyrates.finreference) = (odpr.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="291_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodpenalty_latest_rates_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="292_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finsteppolicydetail_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="292" author="murthy.y">
		<createView viewName="finsteppolicydetail_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.stepno,
    t1.tenorsplitperc,
    t1.installments,
    t1.ratemargin,
    t1.emisplitperc,
    t1.steppedemi,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepspecifier,
    t1.stepstart,
    t1.stepend,
    t1.autocal
   from finsteppolicydetail_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="292_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finsteppolicydetail_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="293_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'disbursement_download_file');
			]]>
		</sql>
	</changeSet>
	<changeSet id="293" author="murthy.y">
		<createView viewName="disbursement_download_file" replaceIfExists="true">
			<![CDATA[
				 select fa.paymenttype,
    fm.custid,
    fa.beneficiaryaccno,
    fa.amttobereleased,
    fa.beneficiaryname,
    fa.payableloc draweeloc,
    fa.payableloc printloc,
    '' adline1,
    '' adline2,
    '' adline3,
    '' adline4,
    '' adline5,
    '' irn,
    fa.finreference,
    '' pd1,
    '' pd2,
    '' pd3,
    '' pd4,
    '' pd5,
    '' pd6,
    '' pd7,
    fa.llreferenceno,
    fa.valuedate trandate,
    fa.bankbranchid micrnum,
    fa.bankbranchid ifsccode,
    fa.bankbranchid bbrnname,
    fa.bankbranchid bbankname,
    b.email benemail
   from ((finadvancepayments fa
     join financemain fm on (((fa.finreference) = (fm.finreference))))
     join ( select distinct beneficiary.custid,
            beneficiary.email
           from beneficiary) b on ((b.custid = fm.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="293_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'disbursement_download_file');
			]]>
		</sql>
	</changeSet>

	<changeSet id="294_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'manualadvise_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="294" author="murthy.y">
		<createView viewName="manualadvise_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.adviseid,
    t1.advisetype,
    t1.finreference,
    t1.feetypeid,
    t1.sequence,
    t1.adviseamount,
    t1.paidamount,
    t1.waivedamount,
    t1.remarks,
    t1.valuedate,
    t1.postdate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypedesc,
    t2.feetypecode,
    t1.bounceid,
    t1.receiptid,
    t3.bouncecode,
    t1.reservedamt,
    t1.balanceamt,
    t3.reason bouncecodedesc,
    coalesce((t2.taxapplicable)::integer, 0) taxapplicable,
    coalesce((t2.tdsreq)::integer, 0) tdsreq,
    t2.taxcomponent,
    t1.paidcgst,
    t1.paidsgst,
    t1.paidigst,
    t1.paidugst,
    t1.waivedcgst,
    t1.waivedsgst,
    t1.waivedugst,
    t1.waivedigst,
    t1.waivedcess,
    t1.paidcess,
    t1.finsource,
    t1.duecreation,
    t1.linkedtranid,
    t1.tdspaid,
    t1.holddue
   from ((manualadvise t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join bouncereasons t3 on ((t1.bounceid = t3.bounceid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="294_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'manualadvise_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="295_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financeeligibilitydetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="295" author="murthy.y">
		<createView viewName="financeeligibilitydetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.elgrulecode,
    t1.ruleresulttype,
    t1.ruleresult,
    t1.canoverride,
    t1.overrideperc,
    t1.useroverride,
    t2.rulecode lovdescelgrulecode,
    t2.rulecodedesc lovdescelgrulecodedesc
   from (financeeligibilitydetail t1
     join rules t2 on ((t1.elgrulecode = t2.ruleid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="295_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financeeligibilitydetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="296_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financescoreheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="296" author="murthy.y">
		<createView viewName="financescoreheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.groupid,
    t1.finreference,
    t1.minscore,
    t1.override,
    t1.overridescore,
    t1.creditworth,
    t2.scoregroupcode groupcode,
    t2.scoregroupname groupcodedesc,
    t1.custid
   from (financescoreheader t1
     join rmtscoringgroup t2 on ((t1.groupid = t2.scoregroupid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="296_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financescoreheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="297_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_loan_voucher_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="297" author="murthy.y">
		<createView viewName="dm_loan_voucher_details_view" replaceIfExists="true">
			<![CDATA[
				 select null moduleid,
        case
            when (dsm.fieldcodevalue_char is not null) then dsm.fieldcodevalue_char
            else 'x'(500)
        end stageid,
    ((p.linkedtranid || '-') || p.transorder) lea_voucherid,
    null fa_voucherid,
        case
            when (dsm.fieldcodevalue_char is not null) then dsm.fieldcodevalue_char
            else 'x'(500)
        end vouchertype,
    p.postdate voucherdate,
    p.valuedate,
    rb.bankrefno branchid,
    rb.branchcode branch_code,
    rb.branchdesc,
    rcp.businessarea business_area,
    am.profitcenterid profit_centre,
    fm.fintype product_flag,
    null schemeid,
    pm.promotiondesc schemedesc,
    null assignment,
    "substring"((fm.finreference), '-7'::integer, 7) agreementid,
    fm.finreference agreementno,
    fm.finapproveddate agreementdate,
    fp.firstdisbdate disbursaldate,
    fm.finisactive loan_status,
    fpr.npabucketid npa_stageid,
    "substring"((p.account), 1, 12) finnone_glid,
    at.actypedesc groupgldesc,
    am.hostaccount sapgl_code,
    am.costcenterid cost_centre,
    coalesce(
        case
            when ((p.drorcr) = ('d'(500))) then p.postamount
            else null
        end, (0)) dramt,
    coalesce(
        case
            when ((p.drorcr) = ('c'(500))) then p.postamount
            else null
        end, (0)) cramt,
    p.drorcr drcr_flag,
    p.postamount drcr_amt,
    p.trandesc narration,
    null chequeid,
    null businessdate,
    null processdate,
    null segment,
    'n' processed_flag,
    null batch_id
   from (((((((((postings p
     join financemain fm on (((fm.finreference) = (p.finreference))))
     join finpftdetails fp on (((fm.finreference) = (fp.finreference))))
     join rmtbranches rb on (((rb.branchcode) = (fm.finbranch))))
     left join rmtcountryvsprovince rcp on (((rcp.cpprovince) = (rb.branchprovince))))
     join accountmapping am on (((am.account) = (p.account))))
     join rmtaccounttypes at on (((at.actype) = (am.accounttype))))
     left join promotions pm on (((pm.promotioncode) = (fm.promotioncode))))
     left join finprovisions fpr on (((fpr.finreference) = (fm.promotioncode))))
     left join datamart_stage_mapping dsm on ((((dsm.fieldcode) = (p.finevent)) and ((dsm.fieldtype) = ('event'(500))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="297_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_loan_voucher_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="298_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financepremiumdetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="298" author="murthy.y">
		<createView viewName="financepremiumdetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.issuenumber,
    t1.noofunits,
    t1.facevalue,
    t1.premiumtype,
    t1.premiumvalue,
    t1.priceperunit,
    t1.yieldvalue,
    t1.lastcoupondate,
    t1.accruedprofit,
    t1.purchasedate,
    t1.fairvalueperunit,
    t1.fairvalueamount
   from financepremiumdetail t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="298_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financepremiumdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="299_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="299" author="murthy.y">
		<createView viewName="finreceiptheader_fview" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.actfinreceipt,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    coalesce(t1.fintype, t2.fintype) fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    coalesce(t2.finccy, t15.finccy) finccy,
    t1.realizationdate,
    t1.cancelreason,
    coalesce(t4.fintypedesc, t15.fintypedesc) fintypedesc,
    t6.branchdesc finbranchdesc,
    coalesce(t5.ccydesc, t14.ccydesc) finccydesc,
    t7.rejectdesc cancelreasondesc,
    coalesce((t2.finisactive)::integer, 0) finisactive,
    t2.schedulemethod,
    t2.profitdaysbasis pftdaysbasis,
    t1.waviedamt,
    coalesce(t3.custid, t10.custid, (0)) custid,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t2.productcategory,
    t2.promotioncode,
    t1.cashierbranch,
    t2.nextrepayrvwdate,
    t1.initiatedate,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.module,
    t1.instructionuid,
    t1.extreference,
    t10.custcif customercif,
    t10.custshrtname customername,
    t1.findivision,
    t1.postbranch,
    t11.divisioncodedesc findivisiondesc,
    t12.branchdesc postbranchdesc,
    t13.branchdesc cashierbranchdesc,
    t11.entitycode,
    coalesce(t3.custbaseccy, t10.custbaseccy) custbaseccy,
    t1.reasoncode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t2.tdsapplicable fintdsapplicable,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t16.code closuretypedesc
   from ((((((((((((((finreceiptheader_temp t1
     left join financemain_temp t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     left join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     left join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     left join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join customers t10 on ((((t10.custid)(20)) = (t1.reference))))
     left join smtdivisiondetail t11 on (((t1.findivision) = (t11.divisioncode))))
     left join rmtbranches t12 on (((t1.postbranch) = (t12.branchcode))))
     left join rmtbranches t13 on (((t1.cashierbranch) = (t13.branchcode))))
     left join rmtfinancetypes t15 on (((t1.fintype) = (t15.fintype))))
     left join rmtcurrencies t14 on ((t14.ccycode = t3.custbaseccy)))
     left join closure_types t16 on ((t16.id = t1.closuretypeid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="299_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="300_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeecharges_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="300" author="murthy.y">
		<createView viewName="finfeecharges_tview" replaceIfExists="true">
			<![CDATA[
				 select finfeecharges_temp.finreference,
    finfeecharges_temp.schdate,
    finfeecharges_temp.feecode,
    finfeecharges_temp.feecodedesc,
    finfeecharges_temp.feeorder,
    finfeecharges_temp.feeamount,
    finfeecharges_temp.waiveramount,
    finfeecharges_temp.paidamount,
    finfeecharges_temp.seqno,
    finfeecharges_temp.allowwaiver,
    finfeecharges_temp.waiverperc,
    finfeecharges_temp.excludefromrpt,
    finfeecharges_temp.calfeemodify,
    finfeecharges_temp.calfeeamount,
    finfeecharges_temp.feetofinance,
    finfeecharges_temp.finevent,
    finfeecharges_temp.feemethod,
    finfeecharges_temp.scheduleterms
   from finfeecharges_temp
			]]>
		</createView>
	</changeSet>
	<changeSet id="300_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeecharges_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="301_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finocrcapture_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="301" author="murthy.y">
		<createView viewName="finocrcapture_view" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.disbseq,
    t1.demandamount,
    t1.paidamount,
    t1.remarks,
    t1.receiptdate,
    t1.filename,
    t1.documentref,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from finocrcapture_temp t1
union all
 select t1.id,
    t1.finreference,
    t1.disbseq,
    t1.demandamount,
    t1.paidamount,
    t1.remarks,
    t1.receiptdate,
    t1.filename,
    t1.documentref,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from finocrcapture t1
  where (not (exists ( select 1 expr1
           from finocrcapture_temp
          where (finocrcapture_temp.id = t1.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="301_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finocrcapture_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="302_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontractorastdtls_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="302" author="murthy.y">
		<createView viewName="fincontractorastdtls_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.contractorid,
    t1.custid,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t1.assetdesc,
    t1.assetvalue,
    t1.totclaimamt,
    t1.totadvanceamt,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.contractorname,
    t1.dftretentionperc,
    t1.retentiontilldate
   from (fincontractorastdtls_temp t1
     left join customers t3 on ((t3.custid = t1.custid)))
union all
 select t1.finreference,
    t1.contractorid,
    t1.custid,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t1.assetdesc,
    t1.assetvalue,
    t1.totclaimamt,
    t1.totadvanceamt,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.contractorname,
    t1.dftretentionperc,
    t1.retentiontilldate
   from (fincontractorastdtls t1
     left join customers t3 on ((t3.custid = t1.custid)))
  where (not (exists ( select 1 expr1
           from fincontractorastdtls_temp
          where ((fincontractorastdtls_temp.contractorid = t1.contractorid) and ((fincontractorastdtls_temp.finreference) = (t1.finreference))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="302_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontractorastdtls_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="303_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincollaterals_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="303" author="murthy.y">
		<createView viewName="fincollaterals_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.collateralseq,
    t1.collateraltype,
    t1.custid,
    t1.reference,
    t1.ccy,
    t1.value,
    t1.coverage,
    t1.tenortype,
    t1.tenor,
    t1.rate,
    t1.maturitydate,
    t1.bankname,
    t1.firstchequeno,
    t1.startdate,
    t1.lastchequeno,
    t1.status,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from fincollaterals_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="303_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincollaterals_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="304_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'manualadvise_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="304" author="murthy.y">
		<createView viewName="manualadvise_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.adviseid,
    t1.advisetype,
    t1.finreference,
    t1.feetypeid,
    t1.sequence,
    t1.adviseamount,
    t1.paidamount,
    t1.waivedamount,
    t1.remarks,
    t1.valuedate,
    t1.postdate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.feetypedesc,
    t2.feetypecode,
    t1.bounceid,
    t1.receiptid,
    t3.bouncecode,
    t1.reservedamt,
    t1.balanceamt,
    t3.reason bouncecodedesc,
    coalesce((t2.taxapplicable)::integer, 0) taxapplicable,
    coalesce((t2.tdsreq)::integer, 0) tdsreq,
    t2.taxcomponent,
    t1.paidcgst,
    t1.paidsgst,
    t1.paidigst,
    t1.paidugst,
    t1.waivedcgst,
    t1.waivedsgst,
    t1.waivedugst,
    t1.waivedigst,
    t1.waivedcess,
    t1.paidcess,
    t1.finsource,
    t1.duecreation,
    t1.linkedtranid,
    t1.tdspaid,
    t1.holddue
   from ((manualadvise_temp t1
     left join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join bouncereasons t3 on ((t1.bounceid = t3.bounceid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="304_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'manualadvise_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="305_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_writeoff_details_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="305" author="murthy.y">
		<createView viewName="dm_writeoff_details_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t2.finreference), '-7'::integer, 7) applid,
    t2.finreference agreementno,
    t1.writeoffdate chargeoff_dt,
    null chargeoff_flg,
    t1.remarks chargeoff_reason,
    null settlement_loss,
    ((t1.writeoffprincipal + t1.writeoffprofit) / rc.ccyminorccyunits) gross_writeoff_amt,
    ((t1.writeoffprincipal + t1.writeoffprofit) / rc.ccyminorccyunits) net_writeoff_amt,
    null businessdate,
    'n' processed_flag,
    null process_date,
    null segments,
    null receipt_on_chargeoff,
    null business_year,
    null batch_id
   from ((finwriteoffdetail t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="305_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_writeoff_details_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="306_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincollaterals_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="306" author="murthy.y">
		<createView viewName="fincollaterals_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.collateralseq,
    t1.collateraltype,
    t1.custid,
    t1.reference,
    t1.ccy,
    t1.value,
    t1.coverage,
    t1.tenortype,
    t1.tenor,
    t1.rate,
    t1.maturitydate,
    t1.bankname,
    t1.firstchequeno,
    t1.startdate,
    t1.lastchequeno,
    t1.status,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from fincollaterals t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="306_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincollaterals_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="307_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'psldetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="307" author="murthy.y">
		<createView viewName="psldetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.categorycode,
    t1.weakersection,
    t1.landholding,
    t1.landarea,
    t1.sector,
    t1.amount,
    t1.subcategory,
    t1.purpose,
    t1.enduse,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.description weakersectionname,
    t3.description purposename,
    t4.description endusename,
    t1.eligibleamount,
    t1.loanpurpose,
    t5.loanpurposedesc loanpurposename
   from ((((psldetail_temp t1
     left join pslweakersection t2 on (((t2.code) = (t1.weakersection))))
     left join pslpurpose t3 on (((t3.code) = (t1.purpose))))
     left join pslenduse t4 on (((t4.code) = (t1.enduse))))
     left join loanpurposes t5 on (((t5.loanpurposecode) = (t1.loanpurpose))))
union all
 select t1.finreference,
    t1.categorycode,
    t1.weakersection,
    t1.landholding,
    t1.landarea,
    t1.sector,
    t1.amount,
    t1.subcategory,
    t1.purpose,
    t1.enduse,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.description weakersectionname,
    t3.description purposename,
    t4.description endusename,
    t1.eligibleamount,
    t1.loanpurpose,
    t5.loanpurposedesc loanpurposename
   from ((((psldetail t1
     left join pslweakersection t2 on (((t2.code) = (t1.weakersection))))
     left join pslpurpose t3 on (((t3.code) = (t1.purpose))))
     left join pslenduse t4 on (((t4.code) = (t1.enduse))))
     left join loanpurposes t5 on (((t5.loanpurposecode) = (t1.loanpurpose))))
  where (not (exists ( select 1
           from psldetail_temp
          where ((psldetail_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="307_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'psldetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="308_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finadvancepayments_custaview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="308" author="murthy.y">
		<createView viewName="finadvancepayments_custaview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.paymentid,
    t1.paymentseq,
    t1.beneficiaryname,
    t1.beneficiaryaccno,
    t1.paymenttype,
    t1.lldate,
    t1.disbseq,
    t1.bankbranchid,
    t1.status,
    t1.disbccy,
    t1.poissued,
    t3.bankcode branchbankcode,
    t31.bankname branchbankname,
    t3.branchcode,
    t3.branchdesc,
    t3.ifsc,
    t3.city,
    t3.micr,
    t1.partnerbankid,
    t5.partnerbankcode,
    t5.partnerbankname,
    t1.linkedtranid,
    t5.actype partnerbankactype,
    t5.accountno partnerbankac,
    t6.custid,
    t1.holddisbursement
   from (((((finadvancepayments t1
     left join bankbranches t3 on ((t1.bankbranchid = t3.bankbranchid)))
     left join bmtbankdetail t31 on (((t31.bankcode) = (t3.bankcode))))
     left join bmtbankdetail t4 on (((t1.bankcode) = (t4.bankcode))))
     left join partnerbanks t5 on ((t5.partnerbankid = t1.partnerbankid)))
     left join financemain t6 on (((t1.finreference) = (t6.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="308_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finadvancepayments_custaview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="309_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'findefermentdetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="309" author="murthy.y">
		<createView viewName="findefermentdetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.deferedrpydate,
    t1.defrpyschdpft,
    t1.defrpyschdpri,
    t1.defrpyschdpftbal,
    t1.defrpyschdpribal,
    t1.defpaidpfttilldate,
    t1.defpaidpritilldate,
    t1.defpftbalance,
    t1.defpribalance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from findefermentdetail t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="309_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'findefermentdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="310_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'commitmentmovements_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="310" author="murthy.y">
		<createView viewName="commitmentmovements_view" replaceIfExists="true">
			<![CDATA[
				 select t1.cmtreference,
    t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.movementdate,
    t1.movementorder,
    t1.movementtype,
    t1.movementamount,
    t1.cmtamount,
    t1.cmtutilizedamount,
    t1.cmtavailable,
    t1.linkedtranid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.cmtcharges
   from (commitmentmovements_temp t1
     join commitments_temp t2 on (((t1.cmtreference) = (t2.cmtreference))))
union all
 select t1.cmtreference,
    t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.movementdate,
    t1.movementorder,
    t1.movementtype,
    t1.movementamount,
    t1.cmtamount,
    t1.cmtutilizedamount,
    t1.cmtavailable,
    t1.linkedtranid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.cmtcharges
   from (commitmentmovements t1
     join commitments t2 on (((t1.cmtreference) = (t2.cmtreference))))
  where (not (exists ( select 1
           from commitmentmovements_temp
          where ((commitmentmovements_temp.cmtreference) = (t1.cmtreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="310_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'commitmentmovements_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="311_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bundledproductsdetail_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="311" author="murthy.y">
		<createView viewName="bundledproductsdetail_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.cardproduct,
    t1.salesstaff,
    t1.embossingname,
    t1.statusofcust,
    t1.minrepay,
    t1.billingacc,
    t1.stmtaddress,
    t1.stmtemail,
    t1.physicaladdress,
    t1.contactnumber,
    t1.ref1name,
    t1.ref1phonenum,
    t1.ref1email,
    t1.ref2name,
    t1.ref2phonenum,
    t1.ref2email,
    t1.bankname,
    t1.chequeno,
    t1.chequeamt,
    t1.cardtype,
    t1.classtype,
    t1.limitrecommended,
    t1.limitapproved,
    t1.profitrate,
    t1.crosssellcard,
    t1.urgentissuance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (bundledproductsdetail t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="311_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bundledproductsdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="312_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finmaintaininstructions_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="312" author="murthy.y">
		<createView viewName="finmaintaininstructions_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finmaintainid,
    t1.finreference,
    t1.event,
    t1.tdsapplicable,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from finmaintaininstructions_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="312_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finmaintaininstructions_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="313_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fincontributorheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="313" author="murthy.y">
		<createView viewName="fincontributorheader_aview" replaceIfExists="true">
			<![CDATA[
				 select fincontributorheader.finreference,
    fincontributorheader.mincontributors,
    fincontributorheader.maxcontributors,
    fincontributorheader.mincontributionamt,
    fincontributorheader.maxcontributionamt,
    fincontributorheader.curcontributors,
    fincontributorheader.curcontributionamt,
    fincontributorheader.curbankinvestment,
    fincontributorheader.avgmudaribrate,
    fincontributorheader.alwcontributorstoleave,
    fincontributorheader.alwcontributorstojoin,
    fincontributorheader.version,
    fincontributorheader.lastmntby,
    fincontributorheader.lastmnton,
    fincontributorheader.recordstatus,
    fincontributorheader.rolecode,
    fincontributorheader.nextrolecode,
    fincontributorheader.taskid,
    fincontributorheader.nexttaskid,
    fincontributorheader.recordtype,
    fincontributorheader.workflowid
   from fincontributorheader
			]]>
		</createView>
	</changeSet>
	<changeSet id="313_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fincontributorheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="314_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'foreclosure_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="314" author="murthy.y">
		<createView viewName="foreclosure_tview" replaceIfExists="true">
			<![CDATA[
				 select t3.custcif,
    t1.reference,
    t2.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t1.receiptpurpose,
    t2.finbranch,
    t2.fincurrassetvalue,
    t2.productcategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t4.roledesc lovdescrequeststage,
    t1.receiptmodestatus,
    t1.actfinreceipt,
    t1.receiveddate,
    t1.knockofftype
   from (((finreceiptheader_temp t1
     left join financemain t2 on (((t1.reference) = (t2.finreference))))
     left join customers t3 on ((t2.custid = t3.custid)))
     join secroles t4 on (((t1.nextrolecode) = (t4.rolecd))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="314_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'foreclosure_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="315_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finrepayinstruction_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="315" author="murthy.y">
		<createView viewName="finrepayinstruction_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.repaydate,
    t1.repayamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.repayschdmethod
   from finrepayinstruction_temp t1
union all
 select t1.finreference,
    t1.repaydate,
    t1.repayamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.repayschdmethod
   from finrepayinstruction t1
  where (not (exists ( select 1
           from finrepayinstruction_temp
          where ((finrepayinstruction_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="315_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finrepayinstruction_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="316_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'linkedfinances_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="316" author="murthy.y">
		<createView viewName="linkedfinances_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.finreference,
    t1.linkedreference,
    f.fintype linkedfintype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    c.custshrtname,
    t1.status
   from ((linkedfinances t1
     join financemain_temp f on ((((t1.linkedreference) = (f.finreference)) and (f.quickdisb = 1))))
     join customers c on ((f.custid = c.custid)))
union all
 select t1.id,
    t1.finreference,
    t1.linkedreference,
    f.fintype linkedfintype,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    c.custshrtname,
    t1.status
   from ((linkedfinances t1
     join financemain f on (((t1.linkedreference) = (f.finreference))))
     join customers c on ((f.custid = c.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="316_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'linkedfinances_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="317_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffindefermentheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="317" author="murthy.y">
		<createView viewName="wiffindefermentheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.defrecaltype,
    t1.deftilldate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from wiffindefermentheader_temp t1
union all
 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.defrecaltype,
    t1.deftilldate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from wiffindefermentheader t1
  where (not (exists ( select 1
           from wiffindefermentheader_temp
          where ((wiffindefermentheader_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="317_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffindefermentheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="318_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinscheduledetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="318" author="murthy.y">
		<createView viewName="wiffinscheduledetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.schseq,
    t1.schdate,
    t1.pftonschdate,
    t1.repayonschdate,
    t1.cpzonschdate,
    t1.rvwonschdate,
    t1.disbonschdate,
    t1.downpaymentonschdate,
    t1.balanceforpftcal,
    t1.baserate,
    t1.splrate,
    t1.actrate,
    t1.noofdays,
    t1.dayfactor,
    t1.profitcalc,
    t1.profitschd,
    t1.principalschd,
    t1.repayamount,
    t1.profitbalance,
    t1.disbamount,
    t1.cpzamount,
    t1.downpaymentamount,
    t1.closingbalance,
    t1.profitfraction,
    t1.prvrepayamount,
    t1.schdpftpaid,
    t1.schpftpaid,
    t1.schdpripaid,
    t1.schpripaid,
    t1.specifier,
    t1.defschddate,
    t1.schdmethod,
    t1.mrgrate,
    t1.calonindrate,
    t1.feechargeamt,
    t1.calculatedrate,
    t1.orgpft,
    t1.orgpri,
    t1.orgendbal,
    t1.orgplanpft,
    t1.feeschd,
    t1.schdfeepaid,
    t1.schdfeeos,
    t1.insschd,
    t1.schdinspaid,
    t1.advpftrate,
    t1.advprofit,
    t1.advrepayamount,
    t1.advbaserate,
    t1.advmargin,
    t1.advcalrate,
    t1.suplrent,
    t1.incrcost,
    t1.suplrentpaid,
    t1.incrcostpaid,
    t1.rolloveronschdate,
    t1.rolloveramount,
    t1.rolloveramountpaid,
    t1.tdsamount,
    t1.tdspaid,
    t1.pftdaysbasis,
    t1.insuranceamt,
    t1.instnumber,
    t1.bpiorholiday,
    t1.frqdate,
    t1.feetax,
    t1.recallock,
    t1.cpzbalance
   from wiffinscheduledetails_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="318_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinscheduledetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="319_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'presentmentdetails_pdcview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="319" author="murthy.y">
		<createView viewName="presentmentdetails_pdcview" replaceIfExists="true">
			<![CDATA[
				 select t1.id,
    t1.presentmentid,
    t1.presentmentref,
    t1.finreference,
    t1.schdate,
    t1.mandateid,
    t1.schamtdue,
    t1.schpridue,
    t1.schpftdue,
    t1.schfeedue,
    t1.schinsdue,
    t1.schpenaltydue,
    t1.advanceamt,
    t1.excessid,
    t1.adviseamt,
    t1.presentmentamt,
    t1.excludereason,
    t1.tdsamount,
    t1.bounceid,
    t1.emino,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.chequetype mandatetype,
    t3.fintype,
    t4.fintypedesc,
    t5.custshrtname customername,
    t1.receiptid,
    t1.ecsreturn,
    t1.errorcode,
    t1.errordesc,
    t1.manualadviseid
   from ((((presentmentdetails_temp t1
     join chequedetail t2 on ((t2.chequedetailsid = t1.mandateid)))
     join financemain t3 on (((t1.finreference) = (t3.finreference))))
     join rmtfinancetypes t4 on (((t3.fintype) = (t4.fintype))))
     join customers t5 on ((t5.custid = t3.custid)))
union all
 select t1.id,
    t1.presentmentid,
    t1.presentmentref,
    t1.finreference,
    t1.schdate,
    t1.mandateid,
    t1.schamtdue,
    t1.schpridue,
    t1.schpftdue,
    t1.schfeedue,
    t1.schinsdue,
    t1.schpenaltydue,
    t1.advanceamt,
    t1.excessid,
    t1.adviseamt,
    t1.presentmentamt,
    t1.excludereason,
    t1.tdsamount,
    t1.bounceid,
    t1.emino,
    t1.status,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.chequetype mandatetype,
    t3.fintype,
    t4.fintypedesc,
    t5.custshrtname customername,
    t1.receiptid,
    t1.ecsreturn,
    t1.errorcode,
    t1.errordesc,
    t1.manualadviseid
   from ((((presentmentdetails t1
     join chequedetail t2 on ((t2.chequedetailsid = t1.mandateid)))
     join financemain t3 on (((t1.finreference) = (t3.finreference))))
     join rmtfinancetypes t4 on (((t3.fintype) = (t4.fintype))))
     join customers t5 on ((t5.custid = t3.custid)))
  where (not (exists ( select 1
           from presentmentdetails_temp
          where (presentmentdetails_temp.id = t1.id))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="319_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'presentmentdetails_pdcview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="320_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'feerefundfinancemain_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="320" author="murthy.y">
		<createView viewName="feerefundfinancemain_view" replaceIfExists="true">
			<![CDATA[
				 select distinct fm.finreference,
    fm.fintype,
    fm.finccy,
    fm.finbranch,
    fm.closingstatus,
    fm.tdsapplicable
   from (financemain fm
     join finreceiptheader fr on ((((fr.reference) = (fm.finreference)) and ((fr.receiptpurpose) = 'feepayment') and (( select sum(fd.paidamount) sum
           from finfeedetail fd
          where ((fd.finreference) = (fm.finreference))) > (0)))))
  where (fm.closingstatus = 'c'::bpchar)
union all
 select distinct fm.finreference,
    fm.fintype,
    fm.finccy,
    fm.finbranch,
    fm.closingstatus,
    fm.tdsapplicable
   from (rejectfinancemain fm
     join finreceiptheader fr on ((((fm.finreference) = (fr.reference)) and ((fr.receiptpurpose) = 'feepayment'))))
  where ((fr.receiptmodestatus <> 'c'::bpchar) and (not (exists ( select 1
           from financemain
          where (((financemain.finreference) = (fm.finreference)) and (financemain.closingstatus = 'c'::bpchar))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="320_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'feerefundfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="321_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finchangecustomer_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="321" author="murthy.y">
		<createView viewName="finchangecustomer_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.oldcustid,
    t1.coapplicantid,
    c.custctgcode custcategory,
    c.custcif,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finchangecustomer t1
     join customers c on ((t1.oldcustid = c.custid)))
  where (not (exists ( select 1
           from finchangecustomer_temp
          where ((finchangecustomer_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="321_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finchangecustomer_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="322_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffindefermentdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="322" author="murthy.y">
		<createView viewName="wiffindefermentdetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.deferedrpydate,
    t1.defrpyschdpft,
    t1.defrpyschdpri,
    t1.defrpyschdpftbal,
    t1.defrpyschdpribal,
    t1.defpaidpfttilldate,
    t1.defpaidpritilldate,
    t1.defpftbalance,
    t1.defpribalance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from wiffindefermentdetail_temp t1
union all
 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.deferedrpydate,
    t1.defrpyschdpft,
    t1.defrpyschdpri,
    t1.defrpyschdpftbal,
    t1.defrpyschdpribal,
    t1.defpaidpfttilldate,
    t1.defpaidpritilldate,
    t1.defpftbalance,
    t1.defpribalance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from wiffindefermentdetail t1
  where (not (exists ( select 1
           from wiffindefermentdetail_temp
          where ((wiffindefermentdetail_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="322_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffindefermentdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="323_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finsteppolicydetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="323" author="murthy.y">
		<createView viewName="finsteppolicydetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.stepno,
    t1.tenorsplitperc,
    t1.installments,
    t1.ratemargin,
    t1.emisplitperc,
    t1.steppedemi,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepspecifier,
    t1.stepstart,
    t1.stepend,
    t1.autocal
   from finsteppolicydetail_temp t1
union all
 select t1.finreference,
    t1.stepno,
    t1.tenorsplitperc,
    t1.installments,
    t1.ratemargin,
    t1.emisplitperc,
    t1.steppedemi,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepspecifier,
    t1.stepstart,
    t1.stepend,
    t1.autocal
   from finsteppolicydetail t1
  where (not (exists ( select 1
           from finsteppolicydetail_temp
          where (((finsteppolicydetail_temp.finreference) = (t1.finreference)) and (finsteppolicydetail_temp.stepno = t1.stepno)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="323_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finsteppolicydetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="324_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'legaldetails_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="324" author="murthy.y">
		<createView viewName="legaldetails_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.legalid,
    t1.legalreference,
    t1.loanreference,
    t1.collateralreference,
    t1.branch,
    t1.legaldate,
    t1.schedulelevelarea,
    t1.legaldecision,
    t1.legalremarks,
    t1.propertydetailmodt,
    t1.propertydetailecdate,
    t1.ecpropertyownername,
    t1.active,
    t1.module,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.branchdesc,
    t3.finbranch,
    t4.findivision,
    coalesce(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) requeststage,
    coalesce(t6.propertyownersname, t7.custshrtname) applicantname
   from ((((((legaldetails t1
     join rmtbranches t2 on (((t1.branch) = (t2.branchcode))))
     join financemain t3 on (((t3.finreference) = (t1.loanreference))))
     join rmtfinancetypes t4 on (((t4.fintype) = (t3.fintype))))
     join secroles t5 on (((t5.rolecd) = (t1.nextrolecode))))
     left join ( select ldt1.propertyownersname,
            ldt1.legalid
           from legalapplicantdetails ldt1
          where (ldt1.legalapplicantid = ( select min(ldt2.legalapplicantid) min
                   from legalapplicantdetails ldt2
                  where (ldt2.legalid = ldt1.legalid)))) t6 on ((t6.legalid = t1.legalid)))
     join customers t7 on ((t7.custid = t3.custid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="324_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'legaldetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="325_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralassignment_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="325" author="murthy.y">
		<createView viewName="collateralassignment_aview" replaceIfExists="true">
			<![CDATA[
				 select ca.module,
    ca.reference,
    ca.collateralref,
    ca.assignperc,
    cs.collateralccy,
    ca.active,
    ca.hostreference,
    cs.collateralvalue,
    cs.bankvaluation,
    (t.totassignperc - ca.assignperc) totassignperc,
    coalesce(((((fm.fincurrassetvalue - fm.downpayment) + fm.feechargeamt) + fm.insuranceamt) - fm.finrepaymentamount), cm.cmtutilizedamount) utilizedamount,
    ca.version,
    ca.lastmntby,
    ca.lastmnton,
    ca.recordstatus,
    ca.rolecode,
    ca.nextrolecode,
    ca.taskid,
    ca.nexttaskid,
    ca.recordtype,
    ca.workflowid,
    cs.specialltv,
    cs.bankltv,
    cu.custcif depositorcif,
    cs.collateraltype
   from (((((collateralassignment ca
     join collateralsetup cs on (((ca.collateralref) = (cs.collateralref))))
     join customers cu on ((cu.custid = cs.depositorid)))
     left join ( select t1.collateralref,
            sum(t1.assignperc) totassignperc
           from ( select collateralassignment_temp.reference,
                    collateralassignment_temp.collateralref,
                    collateralassignment_temp.assignperc
                   from collateralassignment_temp
                union
                 select ca_1.reference,
                    ca_1.collateralref,
                    ca_1.assignperc
                   from collateralassignment ca_1
                  where (not (exists ( select 1
                           from collateralassignment_temp
                          where (((collateralassignment_temp.collateralref) = (ca_1.collateralref)) and ((collateralassignment_temp.module) = (ca_1.module)) and ((collateralassignment_temp.reference) = (ca_1.reference))))))) t1
          group by t1.collateralref) t on (((t.collateralref) = (ca.collateralref))))
     left join financemain fm on (((ca.reference) = (fm.finreference))))
     left join commitments cm on (((cm.cmtreference) = (ca.reference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="325_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralassignment_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="326_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_finjointactdtls_pvt_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="326" author="murthy.y">
		<createView viewName="rpt_finjointactdtls_pvt_view" replaceIfExists="true">
			<![CDATA[
				 select pvt.finreference,
    pvt.co_app1,
    pvt.co_app2,
    pvt.co_app3
   from crosstab('select row_number() over(partition by finreference order by finreference) row_num,finreference,custshrtname
					  from finjointaccountdetails fj inner join customers c on c.custcif = fj.custcif') pvt(finreference text, co_app1 text, co_app2 text, co_app3 text)
			]]>
		</createView>
	</changeSet>
	<changeSet id="326_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_finjointactdtls_pvt_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="327_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinfeecharges_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="327" author="murthy.y">
		<createView viewName="wiffinfeecharges_view" replaceIfExists="true">
			<![CDATA[
				 select wiffinfeecharges.finreference,
    wiffinfeecharges.schdate,
    wiffinfeecharges.feecode,
    wiffinfeecharges.feecodedesc,
    wiffinfeecharges.feeorder,
    wiffinfeecharges.feeamount,
    wiffinfeecharges.waiveramount,
    wiffinfeecharges.paidamount,
    wiffinfeecharges.seqno,
    wiffinfeecharges.allowwaiver,
    wiffinfeecharges.waiverperc,
    wiffinfeecharges.calfeemodify,
    wiffinfeecharges.calfeeamount,
    wiffinfeecharges.feetofinance,
    wiffinfeecharges.finevent,
    wiffinfeecharges.feemethod,
    wiffinfeecharges.scheduleterms
   from wiffinfeecharges
			]]>
		</createView>
	</changeSet>
	<changeSet id="327_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinfeecharges_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="328_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'findefermentdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="328" author="murthy.y">
		<createView viewName="findefermentdetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.deferedrpydate,
    t1.defrpyschdpft,
    t1.defrpyschdpri,
    t1.defrpyschdpftbal,
    t1.defrpyschdpribal,
    t1.defpaidpfttilldate,
    t1.defpaidpritilldate,
    t1.defpftbalance,
    t1.defpribalance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from findefermentdetail_temp t1
union all
 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.deferedrpydate,
    t1.defrpyschdpft,
    t1.defrpyschdpri,
    t1.defrpyschdpftbal,
    t1.defrpyschdpribal,
    t1.defpaidpfttilldate,
    t1.defpaidpritilldate,
    t1.defpftbalance,
    t1.defpribalance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from findefermentdetail t1
  where (not (exists ( select 1
           from findefermentdetail_temp
          where ((findefermentdetail_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="328_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'findefermentdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="329_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'pmay_lview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="329" author="murthy.y">
		<createView viewName="pmay_lview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.notifiedtown,
    t1.towncode,
    t4.townname,
    t1.centralassistance,
    t1.ownedhouse,
    t1.carpetarea,
    t1.householdannincome,
    t1.balancetransfer,
    t1.primaryapplicant,
    t1.transactionfintype,
    t1.product,
    t1.prprtyownedbywomen,
    t1.watersupply,
    t1.drinage,
    t1.electricity,
    t1.pmaycategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.custcif,
    t3.custshrtname,
    t2.fintype
   from (((pmay_temp t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     left join towncode t4 on ((t1.towncode = t4.towncode)))
  where (t2.finisactive = 1)
union all
 select t1.finreference,
    t1.notifiedtown,
    t1.towncode,
    t4.townname,
    t1.centralassistance,
    t1.ownedhouse,
    t1.carpetarea,
    t1.householdannincome,
    t1.balancetransfer,
    t1.primaryapplicant,
    t1.transactionfintype,
    t1.product,
    t1.prprtyownedbywomen,
    t1.watersupply,
    t1.drinage,
    t1.electricity,
    t1.pmaycategory,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t3.custcif,
    t3.custshrtname,
    t2.fintype
   from (((pmay t1
     join financemain t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     left join towncode t4 on ((t1.towncode = t4.towncode)))
  where ((not (exists ( select 1
           from pmay_temp
          where ((pmay_temp.finreference) = (t2.finreference))))) and (t2.finisactive = 1))
			]]>
		</createView>
	</changeSet>
	<changeSet id="329_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'pmay_lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="330_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'etihadcreditbureaudetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="330" author="murthy.y">
		<createView viewName="etihadcreditbureaudetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.bureauscore,
    t1.totoutstandingamt,
    t1.totoverdueamt,
    t1.defaultcontracts,
    t1.totmonthlyinst,
    t1.worstcurrpaydelay,
    t1.worstpaydelay,
    t1.worststatus,
    t1.oldconstartdate,
    t1.newconstartdate,
    t1.otherbankfintype,
    t1.noofinquiry,
    t1.noofcontractsinst,
    t1.noofcontractsnoninst,
    t1.noofcontractscredit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (etihadcreditbureaudetail_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
union all
 select t1.finreference,
    t1.bureauscore,
    t1.totoutstandingamt,
    t1.totoverdueamt,
    t1.defaultcontracts,
    t1.totmonthlyinst,
    t1.worstcurrpaydelay,
    t1.worstpaydelay,
    t1.worststatus,
    t1.oldconstartdate,
    t1.newconstartdate,
    t1.otherbankfintype,
    t1.noofinquiry,
    t1.noofcontractsinst,
    t1.noofcontractsnoninst,
    t1.noofcontractscredit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (etihadcreditbureaudetail t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
  where (not (exists ( select 1
           from etihadcreditbureaudetail_temp
          where ((etihadcreditbureaudetail_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="330_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'etihadcreditbureaudetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="331_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_delinquentbyproducts');
			]]>
		</sql>
	</changeSet>
	<changeSet id="331" author="murthy.y">
		<createView viewName="rpt_delinquentbyproducts" replaceIfExists="true">
			<![CDATA[
				 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    '<=30' dpd,
    'performing' classifications,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) delinquencyoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) delinquencyoutstandingusd,
    count(distinct t2.finreference) noofaccounts
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t2.curoddays <= 30) and ((t2.closingstatus <> 'c'::bpchar) or (t2.closingstatus is null)))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    '30> <=60' dpd,
    'average risk' classifications,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) delinquencyoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) delinquencyoutstandingusd,
    count(distinct t2.finreference) noofaccounts
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t2.curoddays > 30) and (t2.curoddays <= 60) and ((t2.closingstatus <> 'c'::bpchar) or (t2.closingstatus is null)))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    '60> <=90' dpd,
    'watch list' classifications,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) delinquencyoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) delinquencyoutstandingusd,
    count(distinct t2.finreference) noofaccounts
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t2.curoddays > 60) and (t2.curoddays <= 90) and ((t2.closingstatus <> 'c'::bpchar) or (t2.closingstatus is null)))
  group by t2.fintype, t3.fintypedesc, t3.findivision
union
 select t3.findivision,
    t2.fintype,
    t3.fintypedesc,
    '90>' dpd,
    'non-performing' classifications,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'INR')) delinquencyoutstandingbhd,
    sum(udf_convertcurrency((t1.fincurodpri + t1.fincurodpft), (t2.finccy), 'usd')) delinquencyoutstandingusd,
    count(distinct t2.finreference) noofaccounts
   from ((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join rmtfinancetypes t3 on (((t2.fintype) = (t3.fintype))))
  where ((t1.fincurodamt <> (0)) and (t2.curoddays > 90) and ((t2.closingstatus <> 'c'::bpchar) or (t2.closingstatus is null)))
  group by t2.fintype, t3.fintypedesc, t3.findivision
			]]>
		</createView>
	</changeSet>
	<changeSet id="331_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_delinquentbyproducts');
			]]>
		</sql>
	</changeSet>

	<changeSet id="332_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeerefundheader_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="332" author="murthy.y">
		<createView viewName="finfeerefundheader_aview" replaceIfExists="true">
			<![CDATA[
				 select t1.headerid,
    t1.finreference,
    t1.linkedtranid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t2.custid,
    t2.finccy,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.fintypedesc,
    t5.branchdesc
   from ((((finfeerefundheader t1
     left join financemain_view t2 on (((t2.finreference) = (t1.finreference))))
     left join customers t3 on ((t3.custid = t2.custid)))
     left join rmtfinancetypes t4 on (((t4.fintype) = (t2.fintype))))
     left join rmtbranches t5 on (((t2.finbranch) = (t5.branchcode))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="332_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeerefundheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="333_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financeenquiry_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="333" author="murthy.y">
		<createView viewName="financeenquiry_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.calterms numberofterms,
    t1.custid,
    t1.finamount,
    t1.grcperiodenddate,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.allowgrcperiod,
    t1.downpayment,
    t1.migratedfinance,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.fincurrassetvalue,
    t1.blacklisted,
    t1.feechargeamt,
    t1.closingstatus,
    t1.graceterms,
    t1.alwmultidisb,
    t1.defferments,
    t1.finstatus,
    t1.mandateid,
    t1.finrepaymethod,
    t1.finassetvalue,
    t1.insuranceamt,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    ((t1.fincurrassetvalue + t1.feechargeamt) + t1.insuranceamt) financingamount,
    (((t1.fincurrassetvalue - t1.finrepaymentamount) + t1.feechargeamt) + t1.insuranceamt) curfinamount,
    t2.fintypedesc lovdescfintypename,
    t2.finscheduleon lovdescfinscheduleon,
    t2.findivision lovdescfindivision,
    t2.fincategory lovdescproductcodename,
    t2.finisalwdifferment lovdescfinalwdeferment,
    t3.custcif lovdesccustcif,
    t3.custshrtname lovdesccustshrtname,
    t4.branchdesc lovdescfinbranchname,
    t5.custtypectg,
    coalesce(t9.noinst, (0)) noinst,
    t1.totalcpz,
    t1.finocrrequired,
    t1.alwgrcadj,
    t1.endgrcperiodaftrfulldisb,
    t1.autoincgrcenddate,
    t1.recordstatus,
    t1.writeoffloan,
    t1.restructure,
    t1.subventionfrom,
    t1.manufacturerdealerid,
    t10.dealername manufacturerdealername,
    t10.code manufacturerdealercode
   from ((((((financemain t1
     join rmtfinancetypes t2 on (((t1.fintype) = (t2.fintype))))
     join customers t3 on ((t1.custid = t3.custid)))
     join rmtbranches t4 on (((t1.finbranch) = (t4.branchcode))))
     join rmtcusttypes t5 on (((t3.custtypecode) = (t5.custtypecode))))
     left join finpftdetails t9 on (((t1.finreference) = (t9.finreference))))
     left join amtvehicledealer t10 on ((t1.manufacturerdealerid = t10.dealerid)))
			]]>
		</createView>
	</changeSet>
	<changeSet id="333_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financeenquiry_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="334_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="334" author="murthy.y">
		<createView viewName="finreceiptdetail_view" replaceIfExists="true">
			<![CDATA[
				 select t4.custcif,
    t1.reference,
    t3.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t2.depositdate,
    t2.bankcode,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.bouncedate canceldate,
    t2.valuedate,
    t2.payagainstid,
    t1.bouncedate,
    t1.realizationdate,
    t1.cancelreason,
    t3.closingstatus,
    t3.finbranch,
    t3.fincurrassetvalue,
    t3.productcategory,
    t6.partnerbankcode,
    t2.transactionref,
    t2.fundingac,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.roledesc lovdescrequeststage,
    t2.paymenttype,
    t6.actype partnerbankactype,
    t6.accountno partnerbankac,
    t7.bankname bankcodedesc,
    t6.partnerbankname fundingacdesc,
    t6.partnerbankcode fundingaccode,
    t2.logkey,
    t2.payorder,
    t2.status,
    t2.receiveddate,
    t2.chequeacno,
    t2.paymentref,
    t2.depositno,
    t2.favourname,
    t2.favournumber,
    t2.amount,
    t2.paymentto,
    t2.receipttype,
    t2.receiptseqid,
    t2.bankbranchid,
    t8.ifsc,
    t8.branchdesc
   from (((((((finreceiptheader_temp t1
     left join finreceiptdetail_temp t2 on ((t1.receiptid = t2.receiptid)))
     left join financemain t3 on (((t1.reference) = (t3.finreference))))
     left join customers t4 on ((t3.custid = t4.custid)))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     left join partnerbanks t6 on ((t6.partnerbankid = t2.fundingac)))
     left join bmtbankdetail t7 on (((t2.bankcode) = (t7.bankcode))))
     left join bankbranches t8 on ((t2.bankbranchid = t8.bankbranchid)))
union all
 select t4.custcif,
    t1.reference,
    t3.fintype,
    t1.receiptid,
    t1.receiptdate,
    t1.receiptamount,
    t2.depositdate,
    t2.bankcode,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.bouncedate canceldate,
    t2.valuedate,
    t2.payagainstid,
    t1.bouncedate,
    t1.realizationdate,
    t1.cancelreason,
    t3.closingstatus,
    t3.finbranch,
    t3.fincurrassetvalue,
    t3.productcategory,
    t6.partnerbankcode,
    t2.transactionref,
    t2.fundingac,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.roledesc lovdescrequeststage,
    t2.paymenttype,
    t6.actype partnerbankactype,
    t6.accountno partnerbankac,
    t7.bankname bankcodedesc,
    t6.partnerbankname fundingacdesc,
    t6.partnerbankcode fundingaccode,
    t2.logkey,
    t2.payorder,
    t2.status,
    t2.receiveddate,
    t2.chequeacno,
    t2.paymentref,
    t2.depositno,
    t2.favourname,
    t2.favournumber,
    t2.amount,
    t2.paymentto,
    t2.receipttype,
    t2.receiptseqid,
    t2.bankbranchid,
    t8.ifsc,
    t8.branchdesc
   from (((((((finreceiptheader t1
     left join finreceiptdetail t2 on ((t1.receiptid = t2.receiptid)))
     left join financemain t3 on (((t1.reference) = (t3.finreference))))
     left join customers t4 on ((t3.custid = t4.custid)))
     left join secroles t5 on (((t1.nextrolecode) = (t5.rolecd))))
     left join partnerbanks t6 on ((t6.partnerbankid = t2.fundingac)))
     left join bmtbankdetail t7 on (((t2.bankcode) = (t7.bankcode))))
     left join bankbranches t8 on ((t2.bankbranchid = t8.bankbranchid)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="334_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="335_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_noc_eligible_loans_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="335" author="murthy.y">
		<createView viewName="dm_noc_eligible_loans_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference agreementno,
    t1.finreference loanacctnum,
    t1.fintype productflag,
    t3.custemail email,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_date'(500)))) businessdate,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('value_date'(500)))) process_date,
    'n' processed_flag,
    null batch_id
   from (finpftdetails t1
     left join customeremails t3 on (((t3.custid = t1.custid) and (t3.custemailpriority = 5))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="335_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_noc_eligible_loans_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="336_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finlegalexpenses_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="336" author="murthy.y">
		<createView viewName="finlegalexpenses_view" replaceIfExists="true">
			<![CDATA[
				 select t1.expreference,
    t1.customerid,
    t1.bookingdate,
    t1.amount,
    t1.finreference,
    t1.transactiontype,
    t1.remarks,
    t1.recoveredamount,
    t1.amountdue,
    t1.isrecoverdfrommopa,
    t1.totalcharges,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finlegalexpenses_temp t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
union all
 select t1.expreference,
    t1.customerid,
    t1.bookingdate,
    t1.amount,
    t1.finreference,
    t1.transactiontype,
    t1.remarks,
    t1.recoveredamount,
    t1.amountdue,
    t1.isrecoverdfrommopa,
    t1.totalcharges,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t2.usrlogin,
    t2.usrfname,
    t2.usrmname,
    t2.usrlname,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (finlegalexpenses t1
     join secusers t2 on ((t1.lastmntby = t2.usrid)))
  where (not (exists ( select 1
           from finlegalexpenses_temp
          where (finlegalexpenses_temp.customerid = t1.customerid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="336_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finlegalexpenses_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="337_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'agreementfielddetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="337" author="murthy.y">
		<createView viewName="agreementfielddetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.custcity,
    t1.custpobox,
    t1.custcntamt,
    t1.sellername,
    t1.custnationality,
    t1.plotorunitno,
    t1.otherbankname,
    t1.propertytype,
    t1.sectororcommunity,
    t1.finamount,
    t1.proprtydesc,
    t1.propertylocation,
    t1.jointapplicant,
    t1.sellernationality,
    t1.sellerpobox,
    t1.propertyuse,
    t1.plotareainsqft,
    t1.builtupareainsqft,
    t1.ahbbranch,
    t1.fininstitution,
    t1.facilityname,
    t1.sellercntbamt,
    t1.otherbankamt,
    t1.propertyowner,
    t1.collateralauthority,
    t1.collateral1,
    t1.sellerinternal,
    t1.area,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (agreementfielddetails_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="337_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'agreementfielddetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="338_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finodcrecovery_amview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="338" author="murthy.y">
		<createView viewName="finodcrecovery_amview" replaceIfExists="true">
			<![CDATA[
				 select odr.finreference,
    odr.finodschddate,
    odr.finodfor,
    odr.movementdate,
    odr.oddays,
    odr.fincurodamt,
    odr.fincurodpri,
    odr.penaltytype,
    odr.fincurodpft,
    odr.penaltycalon,
    odr.penaltyamtperc,
    odr.penalty,
    odr.maxwaiver,
    odr.waivedamt,
    odr.penaltypaid,
    odr.penaltybal,
    odr.rcdcandel,
    odr.seqno
   from finodcrecovery odr
  where ((odr.seqno = ( select max(finodcrecovery_1.seqno) expr1
           from finodcrecovery finodcrecovery_1
          where (((finodcrecovery_1.finreference) = (odr.finreference)) and (finodcrecovery_1.finodschddate = odr.finodschddate) and ((finodcrecovery_1.finodfor) = (odr.finodfor))))) and (odr.movementdate = ( select max(finodcrecovery.movementdate) expr1
           from finodcrecovery
          where (((finodcrecovery.finreference) = (odr.finreference)) and (finodcrecovery.finodschddate = odr.finodschddate) and ((finodcrecovery.finodfor) = (odr.finodfor))))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="338_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finodcrecovery_amview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="339_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'holddisbursement_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="339" author="murthy.y">
		<createView viewName="holddisbursement_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.hold,
    t1.totalloanamt,
    t1.disbursedamount,
    t1.holdlimitamount,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from holddisbursement_temp t1
union all
 select t1.finreference,
    t1.hold,
    t1.totalloanamt,
    t1.disbursedamount,
    t1.holdlimitamount,
    t1.remarks,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from holddisbursement t1
  where (not (exists ( select 1
           from holddisbursement_temp
          where ((holddisbursement_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="339_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'holddisbursement_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="340_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="340" author="murthy.y">
		<createView viewName="finreceiptheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.extreference,
    t1.module,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    t2.finisactive,
    t1.waviedamt,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t1.actfinreceipt,
    t1.reasoncode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t13.code closuretypedesc
   from (((((((((((finreceiptheader_temp t1
     join financemain t2 on (((t1.reference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join closure_types t13 on ((t13.id = t1.closuretypeid)))
union all
 select t1.receiptid,
    t1.receiptdate,
    t1.receipttype,
    t1.recagainst,
    t1.reference,
    t1.receiptpurpose,
    t1.receiptmode,
    t1.excessadjustto,
    t1.allocationtype,
    t1.receiptamount,
    t1.effectschdmethod,
    t1.extreference,
    t1.module,
    t1.receiptmodestatus,
    t1.subreceiptmode,
    t1.receiptchannel,
    t1.receivedfrom,
    t1.pannumber,
    t1.collectionagentid,
    t9.code collectionagentcode,
    t9.description collectionagentdesc,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.fintype,
    t2.finbranch,
    t3.custcif,
    t3.custshrtname,
    t2.finccy,
    t1.realizationdate,
    t1.cancelreason,
    t4.fintypedesc,
    t6.branchdesc finbranchdesc,
    t5.ccydesc finccydesc,
    t7.rejectdesc cancelreasondesc,
    t2.finisactive,
    t1.waviedamt,
    t1.totfeeamount,
    t1.bouncedate,
    t1.remarks,
    t1.rcdmaintainsts,
    t1.gdravailable,
    t1.releasetype,
    t1.thirdpartyname,
    t1.thirdpartymobilenum,
    t1.depositprocess,
    t1.depositbranch,
    t1.lpiamount,
    t1.lppamount,
    t1.gstlpiamount,
    t1.gstlppamount,
    t2.productcategory,
    t2.promotioncode,
    t2.nextrepayrvwdate,
    t1.cashierbranch,
    t1.initiatedate,
    t1.instructionuid,
    t1.findivision,
    t1.postbranch,
    t10.divisioncodedesc findivisiondesc,
    t11.branchdesc postbranchdesc,
    t12.branchdesc cashierbranchdesc,
    t10.entitycode,
    t1.actfinreceipt,
    t1.reasoncode,
    t1.cancelremarks,
    t1.refwaiveramt,
    t1.source,
    t1.valuedate,
    t1.transactionref,
    t1.depositdate,
    t1.partnerbankid,
    t1.prvreceiptpurpose,
    t1.receiptsource,
    t1.recappdate,
    t1.receiveddate,
    t1.knockofftype,
    t1.sourceoffund,
    t1.tdsamount,
    t1.closuretypeid,
    t13.code closuretypedesc
   from (((((((((((finreceiptheader t1
     join financemain t2 on (((t1.reference) = (t2.finreference))))
     join customers t3 on ((t2.custid = t3.custid)))
     join rmtfinancetypes t4 on (((t2.fintype) = (t4.fintype))))
     join rmtcurrencies t5 on ((t2.finccy = t5.ccycode)))
     join rmtbranches t6 on (((t2.finbranch) = (t6.branchcode))))
     left join bmtrejectcodes t7 on (((t1.cancelreason) = (t7.rejectcode))))
     left join collectionagencies t9 on ((t1.collectionagentid = t9.id)))
     left join smtdivisiondetail t10 on (((t1.findivision) = (t10.divisioncode))))
     left join rmtbranches t11 on (((t1.postbranch) = (t11.branchcode))))
     left join rmtbranches t12 on (((t1.cashierbranch) = (t12.branchcode))))
     left join closure_types t13 on ((t13.id = t1.closuretypeid)))
  where (not (exists ( select 1
           from finreceiptheader_temp
          where (finreceiptheader_temp.receiptid = t1.receiptid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="340_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="341_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_loan_details_daily_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="341" author="murthy.y">
		<createView viewName="dm_loan_details_daily_view" replaceIfExists="true">
			<![CDATA[
				 select "substring"((t1.finreference), '-7'::integer, 7) applid,
    t1.finreference agreementno,
    t3.custid customerid,
    t1.effectiverateofreturn customer_yield,
        case
            when (t1.finisactive = 1) then 'active'
            when (t1.closingstatus = ('c'(500))::bpchar) then 'cancelled'
            else 'closed'
        end status,
    t4.npabucketid npa_stage,
    null lms_bucket,
    null coll_bucket,
    null insurance_applied_flg,
    null businessdate,
    'n' processed_flag,
    null process_date,
    'lms-dii' segments,
    t1.maturitydate closuredate,
    null topup_amt,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_date'(500)))) business_year,
    m.mandateid pdcid,
    null pcflag,
        case
            when ((t1.productcategory) = ('odfclity'(500))) then 'y'
            else 'n'
        end od_flag,
    t1.repaymargin margin,
    t1.repayspecialrate specialmargin,
    null fixedtenor,
    null ceeffectivedate,
    t1.repayprofitrate eff_rate,
    t2.curreducingrate plrrate,
    null party_code,
    (((((coalesce(t3.custfname, ''(500))) || ' ') || (coalesce(t3.custmname, ''(500)))) || ' ') || (coalesce(t3.custlname, ''(500)))) party_name,
    null zone,
    null collection_centre,
    null virtual_account_number,
        case
            when (((t1.schedulemethod) = ('equal'(500))) and (t1.stepfinance = 0)) then 'e'
            when ((t1.schedulemethod) = ('pft'(500))) then 't'
            when (((t1.schedulemethod) = ('pri_pft'(500))) and (t1.stepfinance = 0)) then 'p'
            when (((t1.schedulemethod) = ('equal'(500))) and (t1.stepfinance = 1)) then 'g'
            when (((t1.schedulemethod) = ('pri_pft'(500))) and (t1.stepfinance = 1)) then 'r'
            else null
        end installment_type,
    null companytype,
    (t1.totalprofit / rc.ccyminorccyunits) fianance_charges,
    t1.applicationno fileno,
    null no_of_pdcs,
    (t9.vasfeeamt / rc.ccyminorccyunits) lifeinsurance,
    (t6.remainingfee / rc.ccyminorccyunits) shortreceived,
    t3.custshrtname in_favour_off,
    null mktgid,
    (t7.balanceamt / rc.ccyminorccyunits) pre_emi_int_500071,
    null loan_purpose_dtl,
    null loan_purpose_desc,
    (t8.tot_fee / rc.ccyminorccyunits) login_fees,
    null vc_referral_cd,
    null vc_referral_name,
    null proc_fees2,
    t1.finrepaymethod instrument_type,
    null lan_barcode,
    t1.finstartdate intstart_date_regular,
    (t1.bpiamount / rc.ccyminorccyunits) bpi_receivable,
    null bpi_payable,
        case
            when (m.openmandate = 1) then 'y'
            else 'n'
        end open_facility_flag,
    null batch_id
   from (((((((((financemain t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on ((t3.custid = t1.custid)))
     join rmtcurrencies rc on ((rc.ccycode = t2.finccy)))
     left join finprovisions t4 on (((t4.finreference) = (t1.finreference))))
     left join mandates m on ((((m.orgreference) = (t1.finreference)) and (m.mandateid = t1.mandateid))))
     left join ( select t1_1.finreference,
            sum(t1_1.remainingfee) remainingfee
           from finfeedetail t1_1
          where ((t1_1.feeschedulemethod) = ('disb'(500)))
          group by t1_1.finreference) t6 on (((t1.finreference) = (t6.finreference))))
     left join ( select t1_1.finreference,
            sum(t1_1.balanceamt) balanceamt
           from finexcessamount t1_1
          where ((t1_1.amounttype) = ('a'(500)))
          group by t1_1.finreference) t7 on (((t1.finreference) = (t7.finreference))))
     left join ( select t1_1.finreference,
            sum((t1_1.actualamount - t1_1.waivedamount)) tot_fee
           from finfeedetail t1_1
          group by t1_1.finreference) t8 on (((t1.finreference) = (t8.finreference))))
     left join ( select t1_1.finreference,
            sum((t1_1.actualamount - t1_1.waivedamount)) vasfeeamt
           from ((finfeedetail t1_1
             left join feetypes t2_1 on ((t1_1.feetypeid = t2_1.feetypeid)))
             left join vasrecording t4_1 on (((t1_1.vasreference) = (t4_1.vasreference))))
          group by t1_1.finreference) t9 on (((t1.finreference) = (t9.finreference))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="341_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_loan_details_daily_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="342_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bulkprocessdetails_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="342" author="murthy.y">
		<createView viewName="bulkprocessdetails_view" replaceIfExists="true">
			<![CDATA[
				 select t1.bulkprocessid,
    t1.finreference,
    f.fintype,
    f.finccy,
    t1.oldprofitrate,
    t1.newprofitrate,
    t1.deferedschddate,
    f.custid,
    f.finbranch,
    t1.profitchange,
    t1.alwprocess,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.recalstartdate,
    t1.recalenddate,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custshrtname custname,
    t3.intratebasisdesc profitdaybasisdesc,
    t4.schdmethoddesc
   from ((((bulkprocessdetails_temp t1
     join financemain f on (((f.finreference) = (t1.finreference))))
     join customers t2 on ((t2.custid = f.custid)))
     join bmtintratebasiscodes t3 on (((t3.intratebasiscode) = (f.profitdaysbasis))))
     join bmtschdmethod t4 on (((t4.schdmethod) = (f.schedulemethod))))
union all
 select t1.bulkprocessid,
    t1.finreference,
    f.fintype,
    f.finccy,
    t1.oldprofitrate,
    t1.newprofitrate,
    t1.deferedschddate,
    f.custid,
    f.finbranch,
    t1.profitchange,
    t1.alwprocess,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.recalstartdate,
    t1.recalenddate,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custshrtname custname,
    t3.intratebasisdesc profitdaybasisdesc,
    t4.schdmethoddesc
   from ((((bulkprocessdetails t1
     join financemain f on (((f.finreference) = (t1.finreference))))
     join customers t2 on ((t2.custid = f.custid)))
     join bmtintratebasiscodes t3 on (((t3.intratebasiscode) = (f.profitdaysbasis))))
     join bmtschdmethod t4 on (((t4.schdmethod) = (f.schedulemethod))))
  where (not (exists ( select 1
           from bulkprocessdetails_temp
          where (bulkprocessdetails_temp.bulkprocessid = t1.bulkprocessid))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="342_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bulkprocessdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="343_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finscheduledetails_tview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="343" author="murthy.y">
		<createView viewName="finscheduledetails_tview" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.schseq,
    t1.schdate,
    t1.pftonschdate,
    t1.repayonschdate,
    t1.cpzonschdate,
    t1.rvwonschdate,
    t1.disbonschdate,
    t1.downpaymentonschdate,
    t1.balanceforpftcal,
    t1.baserate,
    t1.splrate,
    t1.actrate,
    t1.noofdays,
    t1.dayfactor,
    t1.profitcalc,
    t1.profitschd,
    t1.principalschd,
    t1.repayamount,
    t1.profitbalance,
    t1.disbamount,
    t1.cpzamount,
    t1.downpaymentamount,
    t1.closingbalance,
    t1.profitfraction,
    t1.prvrepayamount,
    t1.schdpftpaid,
    t1.schpftpaid,
    t1.schdpripaid,
    t1.schpripaid,
    t1.specifier,
    t1.defschddate,
    t1.schdmethod,
    t1.mrgrate,
    t1.calonindrate,
    t1.feechargeamt,
    t1.calculatedrate,
    t1.earlypaidbal,
    t1.earlypaid,
    t1.refundorwaiver,
    t1.writeoffprincipal,
    t1.writeoffprofit,
    t1.orgpft,
    t1.orgpri,
    t1.orgendbal,
    t1.orgplanpft,
    t1.feeschd,
    t1.schdfeepaid,
    t1.schdfeeos,
    t1.insschd,
    t1.schdinspaid,
    t1.advpftrate,
    t1.advprofit,
    t1.advrepayamount,
    t1.advbaserate,
    t1.advmargin,
    t1.advcalrate,
    t1.suplrent,
    t1.incrcost,
    t1.suplrentpaid,
    t1.incrcostpaid,
    t1.rolloveronschdate,
    t1.rolloveramount,
    t1.rolloveramountpaid,
    t1.tdsamount,
    t1.tdspaid,
    t1.pftdaysbasis,
    t1.writeoffins,
    t1.writeoffincrcost,
    t1.writeoffsuplrent,
    t1.writeoffschfee,
    t1.insuranceamt,
    t1.instnumber,
    t1.bpiorholiday,
    t1.frqdate,
    t1.presentmentid,
    t1.partialpaidamt,
    t1.feetax,
    t1.recallock,
    t1.tdsapplicable,
    t1.schdpftwaiver,
    t1.cpzbalance
   from finscheduledetails_temp t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="343_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finscheduledetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="344_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinrepayinstruction_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="344" author="murthy.y">
		<createView viewName="wiffinrepayinstruction_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.repaydate,
    t1.repayamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.repayschdmethod
   from wiffinrepayinstruction_temp t1
union all
 select t1.finreference,
    t1.repaydate,
    t1.repayamount,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.repayschdmethod
   from wiffinrepayinstruction t1
  where (not (exists ( select 1
           from wiffinrepayinstruction_temp
          where ((wiffinrepayinstruction_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="344_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinrepayinstruction_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="345_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'custfinanceexposure_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="345" author="murthy.y">
		<createView viewName="custfinanceexposure_view" replaceIfExists="true">
			<![CDATA[
				 select fm.finreference,
    fm.fincommitmentref,
    cmt.cmttitle,
    fm.custid,
    fm.numberofterms,
    fm.finstartdate,
    fm.fintype,
    (fm.finamount + fm.totalprofit) totaloriginal,
    cmt.cmtamount,
    cmt.cmtavailable,
    cmt.cmtexpdate cmtexpirydate,
    ((fm.finamount - fm.finrepaymentamount) + fpd.totalpftbal) totaloutstanding,
    fm.maturitydate,
    fm.totalrepayamt,
    fm.finstatus
   from ((financemain fm
     join finpftdetails fpd on (((fm.finreference) = (fpd.finreference))))
     left join commitments cmt on (((cmt.cmtreference) = (fm.fincommitmentref))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="345_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'custfinanceexposure_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="346_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bundledproductsdetail_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="346" author="murthy.y">
		<createView viewName="bundledproductsdetail_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.cardproduct,
    t1.salesstaff,
    t1.embossingname,
    t1.statusofcust,
    t1.minrepay,
    t1.billingacc,
    t1.stmtaddress,
    t1.stmtemail,
    t1.physicaladdress,
    t1.contactnumber,
    t1.ref1name,
    t1.ref1phonenum,
    t1.ref1email,
    t1.ref2name,
    t1.ref2phonenum,
    t1.ref2email,
    t1.bankname,
    t1.chequeno,
    t1.chequeamt,
    t1.cardtype,
    t1.classtype,
    t1.limitrecommended,
    t1.limitapproved,
    t1.profitrate,
    t1.crosssellcard,
    t1.urgentissuance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (bundledproductsdetail_temp t1
     join financemain_temp t2 on (((t2.finreference) = (t1.finreference))))
union all
 select t1.finreference,
    t1.cardproduct,
    t1.salesstaff,
    t1.embossingname,
    t1.statusofcust,
    t1.minrepay,
    t1.billingacc,
    t1.stmtaddress,
    t1.stmtemail,
    t1.physicaladdress,
    t1.contactnumber,
    t1.ref1name,
    t1.ref1phonenum,
    t1.ref1email,
    t1.ref2name,
    t1.ref2phonenum,
    t1.ref2email,
    t1.bankname,
    t1.chequeno,
    t1.chequeamt,
    t1.cardtype,
    t1.classtype,
    t1.limitrecommended,
    t1.limitapproved,
    t1.profitrate,
    t1.crosssellcard,
    t1.urgentissuance,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from (bundledproductsdetail t1
     join financemain t2 on (((t2.finreference) = (t1.finreference))))
  where (not (exists ( select 1
           from bundledproductsdetail_temp
          where ((bundledproductsdetail_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="346_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bundledproductsdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="347_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'dm_property_dtl_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="347" author="murthy.y">
		<createView viewName="dm_property_dtl_view" replaceIfExists="true">
			<![CDATA[
				 select null propertyid,
    t1.finreference applicationid,
    null address1,
    null address2,
    null address3,
    null city,
    null state,
    t1.fintype productflag,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('app_date'(500)))) businessdate,
    null property_type,
    null property_desc,
    null property_value,
    null zipcode,
    'n' processflag,
    ( select smtparameters.sysparmvalue
           from smtparameters
          where ((smtparameters.sysparmcode) = ('value_date'(500)))) process_date,
    null batch_id
   from finpftdetails t1
			]]>
		</createView>
	</changeSet>
	<changeSet id="347_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'dm_property_dtl_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="348_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeeconfig_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="348" author="murthy.y">
		<createView viewName="finfeeconfig_view" replaceIfExists="true">
			<![CDATA[
				 select t1.fintypefeeid,
    t1.finreference,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.feeschedulemethod,
    t1.calculationtype,
    t1.rulecode,
    t1.amount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.moduleid,
    t1.alwpreincomization,
    t2.feetypecode,
    t2.feetypedesc,
        case
            when (t3.rulecodedesc is not null) then t3.rulecodedesc
            when (t4.rulecodedesc is not null) then t4.rulecodedesc
            else ''
        end ruledesc,
    t1.referenceid,
    t2.taxapplicable,
    t2.taxcomponent,
    t1.perctype,
    t1.percrule,
    t1.percruleid
   from (((finfeeconfig t1
     join feetypes t2 on ((t1.feetypeid = t2.feetypeid)))
     left join rules t3 on ((t1.percruleid = t3.ruleid)))
     left join rules t4 on ((((t1.rulecode) = (t4.rulecode)) and ((t4.rulemodule) = 'fees') and ((t1.finevent) = (t4.ruleevent)))))
  where (((t1.finevent) = (t1.finevent)) and (t1.feetypeid = t1.feetypeid) and (t1.originationfee = t1.originationfee))
			]]>
		</createView>
	</changeSet>
	<changeSet id="348_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeeconfig_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="349_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rpt_emragingodgeographdtl_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="349" author="murthy.y">
		<createView viewName="rpt_emragingodgeographdtl_view" replaceIfExists="true">
			<![CDATA[
				 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 0 to 7d' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7'::integer) and ((- t1.fincuroddays) <= 0))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 7d to 1m' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-30'::integer) and ((- t1.fincuroddays) < '-7'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1m to 3m' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-90'::integer) and ((- t1.fincuroddays) < '-30'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3m to 6m' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-180'::integer) and ((- t1.fincuroddays) < '-90'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 6m to 1y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-365'::integer) and ((- t1.fincuroddays) < '-180'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1y to 3y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1095'::integer) and ((- t1.fincuroddays) < '-365'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3y to 5y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1825'::integer) and ((- t1.fincuroddays) < '-1095'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 5y to 10y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-3650'::integer) and ((- t1.fincuroddays) < '-1825'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 10y to 20y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7300'::integer) and ((- t1.fincuroddays) < '-3650'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'due over 20y' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) < '-7300'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpri, (t2.finccy), 'INR')) unpaidtotalamt,
    'not yet paid' clmn,
    'p' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) > 0))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 0 to 7d' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7'::integer) and ((- t1.fincuroddays) <= 0))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 7d to 1m' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-30'::integer) and ((- t1.fincuroddays) < '-7'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1m to 3m' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-90'::integer) and ((- t1.fincuroddays) < '-30'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3m to 6m' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-180'::integer) and ((- t1.fincuroddays) < '-90'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 6m to 1y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-365'::integer) and ((- t1.fincuroddays) < '-180'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 1y to 3y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1095'::integer) and ((- t1.fincuroddays) < '-365'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 3y to 5y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-1825'::integer) and ((- t1.fincuroddays) < '-1095'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 5y to 10y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-3650'::integer) and ((- t1.fincuroddays) < '-1825'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due 10y to 20y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) >= '-7300'::integer) and ((- t1.fincuroddays) < '-3650'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'due over 20y' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) < '-7300'::integer))
  group by t3.custresdcountry, t4.countrydesc
union all
 select t3.custresdcountry country,
    t4.countrydesc countryd04,
    sum(udf_convertcurrency(t1.fincurodpft, (t2.finccy), 'INR')) unpaidtotalamt,
    'not yet paid' clmn,
    'i' flag
   from (((finoddetails t1
     join finpftdetails t2 on (((t1.finreference) = (t2.finreference))))
     join customers t3 on (((t3.custcif) = (t2.custcif))))
     join bmtcountries t4 on ((t4.countrycode = t3.custresdcountry)))
  where (((t2.closingstatus <> ('c'(500))::bpchar) or (t2.closingstatus is null)) and (t2.finisactive = 1) and (t2.pftinsusp = 1) and (t1.fincurodamt <> (0)) and ((- t1.fincuroddays) > 0))
  group by t3.custresdcountry, t4.countrydesc
			]]>
		</createView>
	</changeSet>
	<changeSet id="349_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rpt_emragingodgeographdtl_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="350_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'findefermentheader_view');
			]]>
		</sql>
	</changeSet>
	<changeSet id="350" author="murthy.y">
		<createView viewName="findefermentheader_view" replaceIfExists="true">
			<![CDATA[
				 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.defrecaltype,
    t1.deftilldate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from findefermentheader_temp t1
union all
 select t1.finreference,
    t1.deferedschddate,
    t1.defschdprofit,
    t1.defschdprincipal,
    t1.defrecaltype,
    t1.deftilldate,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   from findefermentheader t1
  where (not (exists ( select 1
           from findefermentheader_temp
          where ((findefermentheader_temp.finreference) = (t1.finreference)))))
			]]>
		</createView>
	</changeSet>
	<changeSet id="350_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'findefermentheader_view');
			]]>
		</sql>
	</changeSet>



</databaseChangeLog>