<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<changeSet id="1" author="Prasad">
	 <dropTable tableName="AdtSecUserRoles"/>
	 </changeSet>
	 <changeSet id="2" author="Prasad">
	 <dropTable tableName="AdtPayOrderAuthDetail"/>
	 </changeSet>
	  <changeSet id="3" author="Prasad">
	 <dropTable tableName="AdtPayOrderAuthHeader"/>
	 </changeSet>
	  <changeSet id="4" author="Prasad">
	 <dropTable tableName="AdtLMTAircraftLoanDetail"/>
	 </changeSet>
	 <changeSet id="5" author="Prasad">
	 <dropTable tableName="AdtLMTChequeFinance"/>
	 </changeSet>
	 <changeSet id="6" author="Prasad">
	 <dropTable tableName="AdtLMTCarLoanDetail"/>
	 </changeSet>
	 <changeSet id="7" author="Prasad">
	 <dropTable tableName="AdtLMTEducationLoanDetail"/>
	 </changeSet>
	 <changeSet id="8" author="Prasad">
	 <dropTable tableName="AdtLMTEduExpenseDetail"/>
	 </changeSet>
	 <changeSet id="9" author="Prasad">
	 <dropTable tableName="AdtLMTEquipmentLoanDetail"/>
	 </changeSet>
	  <changeSet id="10" author="Prasad">
	 <dropTable tableName="AdtLMTFinancePurposeDetail"/>
	 </changeSet>
	  <changeSet id="11" author="Prasad">
	 <dropTable tableName="AdtLMTGenGoodsLoanDetail"/>
	 </changeSet>
	 <changeSet id="12" author="Prasad">
	 <dropTable tableName="AdtLMTGoodsLoanDetail"/>
	 </changeSet>
	 <changeSet id="13" author="Prasad">
	 <dropTable tableName="AdtLMTHomeLoanDetail"/>
	 </changeSet>
	 <changeSet id="14" author="Prasad">
	 <dropTable tableName="AdtLMTInvoiceFinance"/>
	 </changeSet>
	 <changeSet id="15" author="Prasad">
	 <dropTable tableName="AdtLMTMortgageLoanDetail"/>
	 </changeSet>
	 <changeSet id="16" author="Prasad">
	 <dropTable tableName="AdtLMTPartnershipHeader"/>
	 </changeSet>
	 <changeSet id="17" author="Prasad">
	 <dropTable tableName="AdtLMTPPCFinance"/>
	 </changeSet>
	  <changeSet id="18" author="Prasad">
	 <dropTable tableName="AdtLMTPSMortgageDetail"/>
	 </changeSet>
	 <changeSet id="19" author="Prasad">
	 <dropTable tableName="AdtLMTSharesDetail"/>
	 </changeSet>
	  <changeSet id="20" author="Prasad">
	 <dropTable tableName="AdtLMTShipLoanDetail"/>
	 </changeSet>
	   <changeSet id="21" author="Prasad">
	 <dropTable tableName="AdtLMTSukukLoanDetail"/>
	 </changeSet>
	   <changeSet id="22" author="Prasad">
	 <dropTable tableName="AdtLMTTakeoverDetail"/>
	 </changeSet>
	 
	 <changeSet id="23" author="Madhubabu">
	<addColumn tableName="ADTRMTFinanceTypes">
		<column name="AlwReage" type="boolean" defaultValue="0" />
		<column name="AlwUnPlanEmiHoliday" type="boolean" defaultValue="0" />
	</addColumn>
</changeSet>
	<changeSet id="24" author="Madhubabu">
		<sql>
			Update ADTRMTFinanceTypes set AlwReage=0 where AlwReage is null;
			Update ADTRMTFinanceTypes set AlwUnPlanEmiHoliday=0 where AlwUnPlanEmiHoliday is null;
		</sql>
	</changeSet>
	<changeSet id="25" author="pruthvi">
		<dropView viewName="AdtSubSectors_View" />
	</changeSet>
	<changeSet id="26" author="pruthvi">
		<dropView viewName="AdtSubSegments_View" />
	</changeSet>
	<changeSet id="27" author="pruthvi">
		<dropView viewName="AdtSukukBrokers_View" />
	</changeSet>
		<changeSet id="28" author="pruthvi">
		<dropView viewName="AdtSukukBonds_View" />
	</changeSet>
			<changeSet id="29" author="pruthvi">
		<dropView viewName="AdtLMTCommidityLoanHeader_view" />
	</changeSet>
				<changeSet id="30" author="pruthvi">
		<dropView viewName="AdtLMTCommidityLoanDetail_view" />
	</changeSet>
<changeSet id="31" author="pruthvi">
		<dropView viewName="ADTCARLOANDETAIL_VIEW" />
	</changeSet>
	<changeSet id="32" author="pruthvi">
		<dropView viewName="ADTEDUCATIONALEXPENSE_VIEW" />
	</changeSet>
		<changeSet id="33" author="pruthvi">
		<dropView viewName="ADTEDUCATIONALLOAN_VIEW" />
	</changeSet>
			<changeSet id="34" author="pruthvi">
		<dropView viewName="ADTHOMELOANDETAIL_VIEW" />
	</changeSet>
	<changeSet id="35" author="pruthvi">
		<dropView viewName="ADTLMTGOODSLOANDETAIL_VIEW" />
	</changeSet>
	<changeSet id="36" author="pruthvi">
		<dropView viewName="ADTMORTGAGELOANDETAIL_VIEW" />
	</changeSet>
	<changeSet id="37" author="pruthvi">
		<dropView viewName="ADTPAYORDERAUTHHEADER_VIEW" />
	</changeSet>
	<changeSet id="38" author="pruthvi">
		<dropView viewName="ADTSECURITYUSERROLES_VIEW" />
	</changeSet>
	<changeSet id="1-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="adtAcademics_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AcademicLevel AftAcademicLevel, Aft.AcademicDecipline AftAcademicDecipline, Aft.AcademicDesc AftAcademicDesc, 
						  Bef.AcademicLevel BefAcademicLevel, Bef.AcademicDecipline BefAcademicDecipline, Bef.AcademicDesc BefAcademicDesc 
	FROM          AuditHeader TH  INNER JOIN
						   AdtBMTAcademics AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTAcademics BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Academic')
	
	</createView>
		</changeSet>

<changeSet id="1-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="adtAcademics_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AS AuditTranType, 
						  Aft.AcademicLevel AftAcademicLevel, Aft.AcademicDecipline AftAcademicDecipline, Aft.AcademicDesc AftAcademicDesc, 
						  Bef.AcademicLevel BefAcademicLevel, Bef.AcademicDecipline BefAcademicDecipline, Bef.AcademicDesc BefAcademicDesc 
	FROM         AuditHeader TH INNER JOIN
						  AdtBMTAcademics AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  Adtbmtacademics Bef On Th.Auditid = Bef.Auditid And Th.Auditdate = Bef.Auditdate And Bef.Auditimage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Academic')
	</createView>
</changeSet>

<changeSet id="2-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAccountingSet_View">		
SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountSetid AftAccountSetid, Aft.EventCode AftEventCode,Aft.AccountSetCode AftAccountSetCode,
						  Aft.AccountSetCodeName AftAccountSetCodeName,
						  Bef.AccountSetid BefAccountSetid, Bef.EventCode BefEventCode, Bef.AccountSetCode BefAccountSetCode,
						  Bef.AccountSetCodeName BefAccountSetCodeName
	FROM          AuditHeader TH  INNER JOIN
						   AdtRMTAccountingSet AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTAccountingSet BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountingSet')
		</createView>
		</changeSet>

<changeSet id="2-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAccountingSet_View">		
SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime
			, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountSetid AftAccountSetid, Aft.EventCode AftEventCode,Aft.AccountSetCode AftAccountSetCode,
						  Aft.AccountSetCodeName AftAccountSetCodeName,
						  Bef.AccountSetid BefAccountSetid, Bef.EventCode BefEventCode, Bef.AccountSetCode BefAccountSetCode,
						  Bef.AccountSetCodeName BefAccountSetCodeName
	FROM          AuditHeader TH  INNER JOIN
						   AdtRMTAccountingSet AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTAccountingSet BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountingSet')
		</createView>
		</changeSet>		
		
	<changeSet id="3-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAccounts_View">		
SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountId AftAccountId, Aft.AcCcy AftAcCcy,Aft.AcType AftAcType,
						  Aft.AcBranch AftAcBranch, Aft.AcCustId AftAcCustId,Aft.AcFullName AftAcFullName,
						  Aft.AcShortName AftAcShortName, Aft.AcPurpose AftAcPurpose,Aft.InternalAc AftInternalAc,
						  Aft.CustSysAc AftCustSysAc, Aft.AcPrvDayBal AftAcPrvDayBal,Aft.AcTodayDr AftAcTodayDr,
						  Aft.AcTodayCr AftAcTodayCr, Aft.AcTodayNet AftAcTodayNet,Aft.AcAccrualBal AftAcAccrualBal,
						  Aft.AcTodayBal AftAcTodayBal, Aft.AcOpenDate AftAcOpenDate,Aft.AcCloseDate AftAcCloseDate,
						  Aft.AcLastCustTrnDate AftAcLastCustTrnDate, Aft.AcLastSysTrnDate AftAcLastSysTrnDate,Aft.AcActive AftAcActive,
						  Aft.AcBlocked AftAcBlocked, Aft.AcClosed AftAcClosed,Aft.HostAcNumber AftHostAcNumber,
						  
						  Bef.AccountId BefAccountId, Bef.AcCcy BefAcCcy, Bef.AcType BefAcType,
						  Bef.AcBranch BefAcBranch, Bef.AcCustId BefAcCustId, Bef.AcFullName BefAcFullName,
						  Bef.AcShortName BefAcShortName, Bef.AcPurpose BefAcPurpose, Bef.InternalAc BefInternalAc,
						  Bef.CustSysAc BefCustSysAc, Bef.AcPrvDayBal BefAcPrvDayBal, Bef.AcTodayDr BefAcTodayDr,
						  Bef.AcTodayCr BefAcTodayCr, Bef.AcTodayNet BefAcTodayNet, Bef.AcAccrualBal BefAcAccrualBal,
						  Bef.AcTodayBal BefAcTodayBal, Bef.AcOpenDate BefAcOpenDate, Bef.AcCloseDate BefAcCloseDate,
						  Bef.AcLastCustTrnDate BefAcLastCustTrnDate, Bef.AcLastSysTrnDate BefAcLastSysTrnDate, Bef.AcActive BefAcActive,
						  Bef.AcBlocked BefAcBlocked, Bef.AcClosed BefAcClosed, Bef.HostAcNumber BefHostAcNumber
						  
	FROM         AuditHeader TH   INNER JOIN
						  AdtAccounts AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtAccounts BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Accounts')
		</createView>
		</changeSet>
		
	<changeSet id="3-orcle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAccounts_View">		
				SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountId AftAccountId, Aft.AcCcy AftAcCcy,Aft.AcType AftAcType,
						  Aft.AcBranch AftAcBranch, Aft.AcCustId AftAcCustId,Aft.AcFullName AftAcFullName,
						  Aft.AcShortName AftAcShortName, Aft.AcPurpose AftAcPurpose,Aft.InternalAc AftInternalAc,
						  Aft.CustSysAc AftCustSysAc, Aft.AcPrvDayBal AftAcPrvDayBal,Aft.AcTodayDr AftAcTodayDr,
						  Aft.AcTodayCr AftAcTodayCr, Aft.AcTodayNet AftAcTodayNet,Aft.AcAccrualBal AftAcAccrualBal,
						  Aft.AcTodayBal AftAcTodayBal, Aft.AcOpenDate AftAcOpenDate,Aft.AcCloseDate AftAcCloseDate,
						  Aft.AcLastCustTrnDate AftAcLastCustTrnDate, Aft.AcLastSysTrnDate AftAcLastSysTrnDate,Aft.AcActive AftAcActive,
						  Aft.AcBlocked AftAcBlocked, Aft.AcClosed AftAcClosed,Aft.HostAcNumber AftHostAcNumber,
						  
						  Bef.AccountId BefAccountId, Bef.AcCcy BefAcCcy, Bef.AcType BefAcType,
						  Bef.AcBranch BefAcBranch, Bef.AcCustId BefAcCustId, Bef.AcFullName BefAcFullName,
						  Bef.AcShortName BefAcShortName, Bef.AcPurpose BefAcPurpose, Bef.InternalAc BefInternalAc,
						  Bef.CustSysAc BefCustSysAc, Bef.AcPrvDayBal BefAcPrvDayBal, Bef.AcTodayDr BefAcTodayDr,
						  Bef.AcTodayCr BefAcTodayCr, Bef.AcTodayNet BefAcTodayNet, Bef.AcAccrualBal BefAcAccrualBal,
						  Bef.AcTodayBal BefAcTodayBal, Bef.AcOpenDate BefAcOpenDate, Bef.AcCloseDate BefAcCloseDate,
						  Bef.AcLastCustTrnDate BefAcLastCustTrnDate, Bef.AcLastSysTrnDate BefAcLastSysTrnDate, Bef.AcActive BefAcActive,
						  Bef.AcBlocked BefAcBlocked, Bef.AcClosed BefAcClosed, Bef.HostAcNumber BefHostAcNumber
						  
	FROM         AuditHeader TH   INNER JOIN
						  AdtAccounts AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtAccounts BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Accounts')
		</createView>
		</changeSet>
		
		
		
			<changeSet id="4-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAccountTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AcType AftAcType, Aft.AcTypeDesc AftAcTypeDesc, Aft.AcPurpose AftAcPurpose,Aft.AcHeadCode AftAcHeadCode,
						  Aft.InternalAc AftInternalAc, Aft.CustSysAc AftCustSysAc, Aft.AcTypeIsActive AftAcTypeIsActive,
						  Bef.AcType BefAcType, Bef.AcTypeDesc BefAcTypeDesc, Bef.AcPurpose BefAcPurpose,Bef.AcHeadCode BefAcHeadCode,
						  Bef.InternalAc BefInternalAc, Bef.CustSysAc BefCustSysAc, Bef.AcTypeIsActive BefAcTypeIsActive
			FROM         AuditHeader  TH   INNER JOIN
								   AdtRMTAccountTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
								  AdtRMTAccountTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
			WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountType')
			</createView>
		</changeSet>
		
		<changeSet id="4-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAccountTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime,  to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AcType AftAcType, Aft.AcTypeDesc AftAcTypeDesc, Aft.AcPurpose AftAcPurpose,Aft.AcHeadCode AftAcHeadCode,
						  Aft.InternalAc AftInternalAc, Aft.CustSysAc AftCustSysAc, Aft.AcTypeIsActive AftAcTypeIsActive,
						  Bef.AcType BefAcType, Bef.AcTypeDesc BefAcTypeDesc, Bef.AcPurpose BefAcPurpose,Bef.AcHeadCode BefAcHeadCode,
						  Bef.InternalAc BefInternalAc, Bef.CustSysAc BefCustSysAc, Bef.AcTypeIsActive BefAcTypeIsActive
	FROM         AuditHeader  TH   INNER JOIN
						   AdtRMTAccountTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTAccountTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountType')
			</createView>
		</changeSet>
		
		
		<changeSet id="5-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAddressTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AddrTypeCode AftAddrTypeCode, Aft.AddrTypeDesc AftAddrTypeDesc, Aft.AddrTypePriority AftAddrTypePriority,
						  Aft.AddrTypeIsActive AftAddrTypeIsActive,						   
						  Bef.AddrTypeCode BefAddrTypeCode, Bef.AddrTypeDesc BefAddrTypeDesc, Bef.AddrTypePriority BefAddrTypePriority,
						  Bef.AddrTypeIsActive BefAddrTypeIsActive 						 
	FROM         AuditHeader TH   INNER JOIN
						  AdtBMTAddressTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTAddressTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AddressType')
		</createView>
		</changeSet>
		
		<changeSet id="5-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAddressTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AddrTypeCode AftAddrTypeCode, Aft.AddrTypeDesc AftAddrTypeDesc, Aft.AddrTypePriority AftAddrTypePriority,
						  Aft.AddrTypeIsActive AftAddrTypeIsActive,						   
						  Bef.AddrTypeCode BefAddrTypeCode, Bef.AddrTypeDesc BefAddrTypeDesc, Bef.AddrTypePriority BefAddrTypePriority,
						  Bef.AddrTypeIsActive BefAddrTypeIsActive 						 
	FROM         AuditHeader TH   INNER JOIN
						  AdtBMTAddressTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTAddressTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AddressType')
		</createView>
		</changeSet>
		
		<changeSet id="6-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAggrementDef_View">	
		SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AggId AftAggId, Aft.AggCode AftAggCode, Aft.AggName AftAggName,Aft.AggDesc AftAggDesc,
						  Aft.AggReportName AftAggReportName, Aft.AggReportPath AftAggReportPath, Aft.AggIsActive AftAggIsActive,						  
						  Bef.AggId BefAggId, Bef.AggCode BefAggCode, Bef.AggName BefAggName,Bef.AggDesc BefAggDesc,
						  Bef.AggReportName BefAggReportName, Bef.AggReportPath BefAggReportPath, Bef.AggIsActive BefAggIsActive
	FROM         AuditHeader TH   INNER JOIN
						 AdtBMTAggrementDef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						 AdtBMTAggrementDef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')
						 
		
			</createView>
		</changeSet>
		
		<changeSet id="6-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAggrementDef_View">	
		SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AggId AftAggId, Aft.AggCode AftAggCode, Aft.AggName AftAggName,Aft.AggDesc AftAggDesc,
						  Aft.AggReportName AftAggReportName, Aft.AggReportPath AftAggReportPath, Aft.AggIsActive AftAggIsActive,						  
						  Bef.AggId BefAggId, Bef.AggCode BefAggCode, Bef.AggName BefAggName,Bef.AggDesc BefAggDesc,
						  Bef.AggReportName BefAggReportName, Bef.AggReportPath BefAggReportPath, Bef.AggIsActive BefAggIsActive
	FROM         AuditHeader TH   INNER JOIN
						 AdtBMTAggrementDef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						 AdtBMTAggrementDef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')			 
			</createView>
		</changeSet>
		
				<changeSet id="7-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAgreementDefinition_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.AgrId AftAgrId,Aft.FinType AftFinType,
						  Aft.AgrName AftAgrName,Aft.AgrContent AftAgrContent,
						  	
						  Bef.FinReference BefFinReference, Bef.AgrId BefAgrId, Bef.FinType BefFinType,
						  Bef.AgrName BefAgrName, Bef.AgrContent BefAgrContent
						  
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtFinAgreementDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtFinAgreementDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')
		
			</createView>
		</changeSet>
		
		<changeSet id="7-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAgreementDefinition_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.AgrId AftAgrId,Aft.FinType AftFinType,
						  Aft.AgrName AftAgrName,Aft.AgrContent AftAgrContent,
						  	
						  Bef.FinReference BefFinReference, Bef.AgrId BefAgrId, Bef.FinType BefFinType,
						  Bef.AgrName BefAgrName, Bef.AgrContent BefAgrContent
						  
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtFinAgreementDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtFinAgreementDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')
		
			</createView>
		</changeSet>
		
		<changeSet id="8-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAMTAuthorization_view">		
		
		 SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.AuthUserId AftAuthUserId ,Aft.AuthType AftAuthType ,
		   Aft.AuthName AftAuthName ,Aft.AuthDept AftAuthDept ,Aft.AuthDesig AftAuthDesig ,
		   Aft.AuthSignature AftAuthSignature ,
		   Bef.AuthUserId BefAuthUserId ,Bef.AuthType BefAuthType ,
		   Bef.AuthName BefAuthName ,Bef.AuthDept BefAuthDept ,Bef.AuthDesig BefAuthDesig ,
		   Bef.AuthSignature BefAuthSignature
	FROM   AuditHeader TH   INNER JOIN
		  AdtAMTAuthorization AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtAMTAuthorization BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Authorization')
		</createView>
		</changeSet>
		<changeSet id="8-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAMTAuthorization_view">			
		 SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		 COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.AuthUserId AftAuthUserId ,Aft.AuthType AftAuthType ,
		   Aft.AuthName AftAuthName ,Aft.AuthDept AftAuthDept ,Aft.AuthDesig AftAuthDesig ,
		   Aft.AuthSignature AftAuthSignature ,
		   Bef.AuthUserId BefAuthUserId ,Bef.AuthType BefAuthType ,
		   Bef.AuthName BefAuthName ,Bef.AuthDept BefAuthDept ,Bef.AuthDesig BefAuthDesig ,
		   Bef.AuthSignature BefAuthSignature
	FROM   AuditHeader TH   INNER JOIN
		  AdtAMTAuthorization AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtAMTAuthorization BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Authorization')
		</createView>
		</changeSet>		
		
		
		<changeSet id="9-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAMTVehicleModel_View">	
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.VehicleModelId AftVehicleModelId,Aft.VehicleManufacturerId AftVehicleManufacturerId,Aft.VehicleModelDesc AftVehicleModelDesc,
			   Bef.VehicleModelId BefVehicleModelId,Bef.VehicleManufacturerId BefVehicleManufacturerId,Bef.VehicleModelDesc BefVehicleModelDesc
	FROM       AuditHeader TH   INNER JOIN
			  
			   AdtAMTVehicleModel AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtAMTVehicleModel BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleModel')
		
				</createView>
		</changeSet>
		<changeSet id="9-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAMTVehicleModel_View">	
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.VehicleModelId AftVehicleModelId,Aft.VehicleManufacturerId AftVehicleManufacturerId,Aft.VehicleModelDesc AftVehicleModelDesc,
			   Bef.VehicleModelId BefVehicleModelId,Bef.VehicleManufacturerId BefVehicleManufacturerId,Bef.VehicleModelDesc BefVehicleModelDesc
	FROM       AuditHeader TH   INNER JOIN
			  
			   AdtAMTVehicleModel AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtAMTVehicleModel BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleModel')
		
				</createView>
		</changeSet>
		
	<changeSet id="10-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBankBranches_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
                      Aft.BankBranchID AftBankBranchID, Aft.BankCode AftBankCode, Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.City AftCity, Aft.MICR AftMICR, Aft.IFSC AftIFSC, 
                      Bef.BankBranchID BefBankBranchID, Bef.BankCode BefBankCode, Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.City BefCity, Bef.MICR BefMICR, Bef.IFSC BefIFSC 
FROM         AuditHeader TH INNER JOIN
                                          ADTBankBranches AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                      ADTBankBranches BEF ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankBranch')
			
		</createView></changeSet>
		<changeSet id="10-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBankBranches_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
					COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
                      Aft.BankBranchID AftBankBranchID, Aft.BankCode AftBankCode, Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.City AftCity, Aft.MICR AftMICR, Aft.IFSC AftIFSC, 
                      Bef.BankBranchID BefBankBranchID, Bef.BankCode BefBankCode, Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.City BefCity, Bef.MICR BefMICR, Bef.IFSC BefIFSC 
FROM         AuditHeader TH INNER JOIN
                                          ADTBankBranches AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                      ADTBankBranches BEF ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankBranch')
			
		</createView></changeSet>
		
		
				<changeSet id="11-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBaseRateCodes_View">
			SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BRType AftBRType, Aft.BRTypeDesc AftBRTypeDesc,
						  Bef.BRType BefBRType, Bef.BRTypeDesc BefBRTypeDesc
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtRMTBaseRateCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRateCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRateCode')		
		
				</createView>
		</changeSet>
		
		<changeSet id="11-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBaseRateCodes_View">
			SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BRType AftBRType, Aft.BRTypeDesc AftBRTypeDesc,
						  Bef.BRType BefBRType, Bef.BRTypeDesc BefBRTypeDesc
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtRMTBaseRateCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRateCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRateCode')		
		
				</createView>
		</changeSet>
		
		
		<changeSet id="12-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBaseRates_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BRType AftBRType, Aft.BREffDate AftBREffDate, Aft.BRRate AftBRRate,
						  Bef.BRType BefBRType, Bef.BREffDate BefBREffDate, Bef.BRRate BefBRRate
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtRMTBaseRates AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRates BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRate')
		</createView>
		</changeSet>
		
		<changeSet id="12-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBaseRates_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BRType AftBRType, Aft.BREffDate AftBREffDate, Aft.BRRate AftBRRate,
						  Bef.BRType BefBRType, Bef.BREffDate BefBREffDate, Bef.BRRate BefBRRate
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtRMTBaseRates AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRates BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRate')
		</createView>
		</changeSet>
		
		
	<changeSet id="13-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBlackListCustomer_VIEW">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
		   Aft.CustCIF AftCustCIF ,Aft.CustFName AftCustFName ,Aft.CustLName AftCustLName ,Aft.CustDOB AftCustDOB ,
		   Aft.CustCRCPR AftCustCRCPR ,Aft.MobileNumber AftMobileNumber ,Aft.CustNationality AftCustNationality ,
		   Aft.CustPassportNo AftCustPassportNo ,Aft.Employer AftEmployer ,
           Bef.CustCIF BefCustCIF ,Bef.CustFName BefCustFName ,Bef.CustLName BefCustLName ,Bef.CustDOB BefCustDOB ,
           Bef.CustCRCPR BefCustCRCPR ,Bef.MobileNumber BefMobileNumber ,Bef.CustNationality BefCustNationality ,
           Bef.CustPassportNo BefCustPassportNo ,Bef.Employer BefEmployer  
	FROM   AuditHeader TH   INNER JOIN
		  
		   AdtBlackListCustomer AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBlackListCustomer BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListCustomers')
			</createView>
		</changeSet>
		
		<changeSet id="13-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBlackListCustomer_VIEW">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
		   Aft.CustCIF AftCustCIF ,Aft.CustFName AftCustFName ,Aft.CustLName AftCustLName ,Aft.CustDOB AftCustDOB ,
		   Aft.CustCRCPR AftCustCRCPR ,Aft.MobileNumber AftMobileNumber ,Aft.CustNationality AftCustNationality ,
		   Aft.CustPassportNo AftCustPassportNo ,Aft.Employer AftEmployer ,
           Bef.CustCIF BefCustCIF ,Bef.CustFName BefCustFName ,Bef.CustLName BefCustLName ,Bef.CustDOB BefCustDOB ,
           Bef.CustCRCPR BefCustCRCPR ,Bef.MobileNumber BefMobileNumber ,Bef.CustNationality BefCustNationality ,
           Bef.CustPassportNo BefCustPassportNo ,Bef.Employer BefEmployer  
	FROM   AuditHeader TH   INNER JOIN
		  
		   AdtBlackListCustomer AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBlackListCustomer BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListCustomers')
			</createView>
		</changeSet>
		
	<changeSet id="14-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBlackListRsnCodes_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BLRsnCode AftBLRsnCode, Aft.BLRsnDesc AftBLRsnDesc, Aft.BLIsActive AftBLIsActive,						  
						  Bef.BLRsnCode BefBLRsnCode, Bef.BLRsnDesc BefBLRsnDesc,Bef.BLIsActive BefBLIsActive
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
				</createView>
		</changeSet>
		
		
	<changeSet id="14-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBlackListRsnCodes_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BLRsnCode AftBLRsnCode, Aft.BLRsnDesc AftBLRsnDesc, Aft.BLIsActive AftBLIsActive,						  
						  Bef.BLRsnCode BefBLRsnCode, Bef.BLRsnDesc BefBLRsnDesc,Bef.BLIsActive BefBLIsActive
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
				</createView>
		</changeSet>
		
	<changeSet id="15-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBMTBankDetail_view">
		select    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BankCode AftBankCode ,Aft.BankName AftBankName ,Aft.Active AftActive ,
		   Bef.BankCode BefBankCode ,Bef.BankName BefBankName ,Bef.Active BefActive
	FROM   AuditHeader TH   INNER JOIN
		  
		   AdtBMTBankDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBankDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankDetail')
		
		</createView>
		</changeSet>
		
		<changeSet id="15-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBMTBankDetail_view">
		select    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BankCode AftBankCode ,Aft.BankName AftBankName ,Aft.Active AftActive ,
		   Bef.BankCode BefBankCode ,Bef.BankName BefBankName ,Bef.Active BefActive
	FROM   AuditHeader TH   INNER JOIN
		  
		   AdtBMTBankDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBankDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankDetail')
		
		</createView>
		</changeSet>
		
	<changeSet id="16-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBMTBlackListRsnCodes_VIEW">
SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BLRsnCode AftBLRsnCode ,Aft.BLRsnDesc AftBLRsnDesc ,Aft.BLIsActive AftBLIsActive ,
           Bef.BLRsnCode BefBLRsnCode ,Bef.BLRsnDesc BefBLRsnDesc ,Bef.BLIsActive BefBLIsActive 
	FROM   AuditHeader TH   INNER JOIN
		   
		   AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
					</createView>
		</changeSet>
		
		<changeSet id="16-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBMTBlackListRsnCodes_VIEW">
SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
 COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BLRsnCode AftBLRsnCode ,Aft.BLRsnDesc AftBLRsnDesc ,Aft.BLIsActive AftBLIsActive ,
           Bef.BLRsnCode BefBLRsnCode ,Bef.BLRsnDesc BefBLRsnDesc ,Bef.BLIsActive BefBLIsActive 
	FROM   AuditHeader TH   INNER JOIN
		   
		   AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
					</createView>
		</changeSet>
		
	<changeSet id="17-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBMTLovFieldCode_view">
		   SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.FieldCode AftFieldCode ,Aft.FieldCodeDesc AftFieldCodeDesc ,Aft.FieldCodeType AftFieldCodeType ,
		   Aft.FieldEdit AftFieldEdit ,Aft.isActive AftisActive ,
		   Bef.FieldCode BefFieldCode ,Bef.FieldCodeDesc BefFieldCodeDesc ,Bef.FieldCodeType BefFieldCodeType ,
		   Bef.FieldEdit BefFieldEdit ,Bef.isActive BefisActive
	FROM   AuditHeader TH   INNER JOIN
		   
		   AdtBMTLovFieldCode AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTLovFieldCode BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LovFieldCode')

					</createView>
		</changeSet>
		
		
	<changeSet id="17-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBMTLovFieldCode_view">
		   SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.FieldCode AftFieldCode ,Aft.FieldCodeDesc AftFieldCodeDesc ,Aft.FieldCodeType AftFieldCodeType ,
		   Aft.FieldEdit AftFieldEdit ,Aft.isActive AftisActive ,
		   Bef.FieldCode BefFieldCode ,Bef.FieldCodeDesc BefFieldCodeDesc ,Bef.FieldCodeType BefFieldCodeType ,
		   Bef.FieldEdit BefFieldEdit ,Bef.isActive BefisActive
	FROM   AuditHeader TH   INNER JOIN
		   
		   AdtBMTLovFieldCode AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTLovFieldCode BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LovFieldCode')

					</createView>
		</changeSet>
		
	<changeSet id="18-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBranches_View">	
SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.BranchAddrLine1 AftBranchAddrLine1,Aft.BranchAddrLine2 AftBranchAddrLine2,
						  Aft.BranchPOBox AftBranchPOBox, Aft.BranchCity AftBranchCity, Aft.BranchProvince AftBranchProvince,
						  Aft.BranchCountry AftBranchCountry, Aft.BranchFax AftBranchFax, Aft.BranchTel AftBranchTel,
						  Aft.BranchSwiftBankCde AftBranchSwiftBankCde, Aft.BranchSwiftCountry AftBranchSwiftCountry, Aft.BranchSwiftLocCode AftBranchSwiftLocCode,
						  Aft.BranchSwiftBrnCde AftBranchSwiftBrnCde, Aft.BranchSortCode AftBranchSortCode, Aft.BranchIsActive AftBranchIsActive,
						  Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.BranchAddrLine1 BefBranchAddrLine1,Bef.BranchAddrLine2 BefBranchAddrLine2,
						  Bef.BranchPOBox BefBranchPOBox, Bef.BranchCity BefBranchCity, Bef.BranchProvince BefBranchProvince,
						  Bef.BranchCountry BefBranchCountry, Bef.BranchFax BefBranchFax, Bef.BranchTel BefBranchTel,
						  Bef.BranchSwiftBankCde BefBranchSwiftBankCde, Bef.BranchSwiftCountry BefBranchSwiftCountry, Bef.BranchSwiftLocCode BefBranchSwiftLocCode,
						  Bef.BranchSwiftBrnCde BefBranchSwiftBrnCde, Bef.BranchSortCode BefBranchSortCode, Bef.BranchIsActive BefBranchIsActive
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtRMTBranches AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBranches BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Branch')
		</createView>
		</changeSet>	
		
		<changeSet id="18-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBranches_View">	
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.BranchAddrLine1 AftBranchAddrLine1,Aft.BranchAddrLine2 AftBranchAddrLine2,
						  Aft.BranchPOBox AftBranchPOBox, Aft.BranchCity AftBranchCity, Aft.BranchProvince AftBranchProvince,
						  Aft.BranchCountry AftBranchCountry, Aft.BranchFax AftBranchFax, Aft.BranchTel AftBranchTel,
						  Aft.BranchSwiftBankCde AftBranchSwiftBankCde, Aft.BranchSwiftCountry AftBranchSwiftCountry, Aft.BranchSwiftLocCode AftBranchSwiftLocCode,
						  Aft.BranchSwiftBrnCde AftBranchSwiftBrnCde, Aft.BranchSortCode AftBranchSortCode, Aft.BranchIsActive AftBranchIsActive,
						  Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.BranchAddrLine1 BefBranchAddrLine1,Bef.BranchAddrLine2 BefBranchAddrLine2,
						  Bef.BranchPOBox BefBranchPOBox, Bef.BranchCity BefBranchCity, Bef.BranchProvince BefBranchProvince,
						  Bef.BranchCountry BefBranchCountry, Bef.BranchFax BefBranchFax, Bef.BranchTel BefBranchTel,
						  Bef.BranchSwiftBankCde BefBranchSwiftBankCde, Bef.BranchSwiftCountry BefBranchSwiftCountry, Bef.BranchSwiftLocCode BefBranchSwiftLocCode,
						  Bef.BranchSwiftBrnCde BefBranchSwiftBrnCde, Bef.BranchSortCode BefBranchSortCode, Bef.BranchIsActive BefBranchIsActive
	FROM         AuditHeader TH   INNER JOIN
						  
						  AdtRMTBranches AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBranches BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Branch')
		</createView>
		</changeSet>	
		
	<changeSet id="19-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBrokerCommodityDtl_View">		
		
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.CommodityCode AftCommodityCode, 
						  Bef.BrokerCode BefBrokerCode, Bef.CommodityCode BefCommodityCode 
	FROM         AuditHeader TH   INNER JOIN
						 
						  AdtBrokerCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBrokerCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
			</createView>
		</changeSet>	


<changeSet id="19-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBrokerCommodityDtl_View">		
		
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.CommodityCode AftCommodityCode, 
						  Bef.BrokerCode BefBrokerCode, Bef.CommodityCode BefCommodityCode 
	FROM         AuditHeader TH   INNER JOIN
						 
						  AdtBrokerCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBrokerCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
			</createView>
		</changeSet>			
		
		<changeSet id="20-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCheckList_View">	
	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CheckListId AftCheckListId, Aft.CheckListDesc AftCheckListDesc,Aft.CheckMinCount AftCheckMinCount,
						  Aft.CheckMaxCount AftCheckMaxCount,Aft.Remarks AftRemarks,Aft.Active AftActive,
						  Bef.CheckListId BefCheckListId, Bef.CheckListDesc BefCheckListDesc, Bef.CheckMinCount BefCheckMinCount,
						  Bef.CheckMaxCount BefCheckMaxCount,Bef.Remarks BefRemarks,Bef.Active BefActive
	FROM         AuditHeader TH   INNER JOIN
						 
						  AdtBMTCheckList AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTCheckList BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CheckList')	
			</createView>
		</changeSet>
		
		<changeSet id="20-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCheckList_View">	
	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CheckListId AftCheckListId, Aft.CheckListDesc AftCheckListDesc,Aft.CheckMinCount AftCheckMinCount,
						  Aft.CheckMaxCount AftCheckMaxCount,Aft.Remarks AftRemarks,Aft.Active AftActive,
						  Bef.CheckListId BefCheckListId, Bef.CheckListDesc BefCheckListDesc, Bef.CheckMinCount BefCheckMinCount,
						  Bef.CheckMaxCount BefCheckMaxCount,Bef.Remarks BefRemarks,Bef.Active BefActive
	FROM         AuditHeader TH   INNER JOIN
						 
						  AdtBMTCheckList AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTCheckList BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CheckList')	
			</createView>
		</changeSet>
		
			<changeSet id="21-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtChequePurpose_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.Code Aftcode,Aft.Description AftDescription,Aft.Active AftActive,
			   BEF.Code BEFcode,BEF.Description BEFDescription,BEF.Active BEFActive
	FROM      AuditHeader TH   INNER JOIN
			  
			  AdtChequePurpose AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			  AdtChequePurpose BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ChequePurpose')
		
				</createView>
		</changeSet>
		
		<changeSet id="21-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtChequePurpose_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.Code Aftcode,Aft.Description AftDescription,Aft.Active AftActive,
			   BEF.Code BEFcode,BEF.Description BEFDescription,BEF.Active BEFActive
	FROM      AuditHeader TH   INNER JOIN
			  
			  AdtChequePurpose AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			  AdtChequePurpose BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ChequePurpose')
		
				</createView>
		</changeSet>
		
		
				<changeSet id="22-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommitmentMovements_view">
		
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.CmtReference AftCmtReference ,Aft.FinReference AftFinReference ,Aft.FinBranch AftFinBranch ,
		   Aft.FinType AftFinType ,Aft.MovementDate AftMovementDate ,Aft.MovementOrder AftMovementOrder ,
		   Aft.MovementType AftMovementType ,Aft.MovementAmount AftMovementAmount ,Aft.CmtAmount AftCmtAmount ,
		   Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,Aft.CmtCharges AftCmtCharges ,
		   Aft.LinkedTranId AftLinkedTranId ,
		   Bef.CmtReference BefCmtReference ,Bef.FinReference BefFinReference ,Bef.FinBranch BefFinBranch ,
		   Bef.FinType BefFinType ,Bef.MovementDate BefMovementDate ,Bef.MovementOrder BefMovementOrder ,
		   Bef.MovementType BefMovementType ,Bef.MovementAmount BefMovementAmount ,Bef.CmtAmount BefCmtAmount ,
		   Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,Bef.CmtCharges BefCmtCharges ,
		   Bef.LinkedTranId BefLinkedTranId
	FROM   AuditHeader TH   INNER JOIN
		   
		   AdtCommitmentMovements AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtCommitmentMovements BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
				</createView>
		</changeSet>
		
		<changeSet id="22-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommitmentMovements_view">
		
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   TH.AuditUsrId  AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.CmtReference AftCmtReference ,Aft.FinReference AftFinReference ,Aft.FinBranch AftFinBranch ,
		   Aft.FinType AftFinType ,Aft.MovementDate AftMovementDate ,Aft.MovementOrder AftMovementOrder ,
		   Aft.MovementType AftMovementType ,Aft.MovementAmount AftMovementAmount ,Aft.CmtAmount AftCmtAmount ,
		   Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,Aft.CmtCharges AftCmtCharges ,
		   Aft.LinkedTranId AftLinkedTranId ,
		   Bef.CmtReference BefCmtReference ,Bef.FinReference BefFinReference ,Bef.FinBranch BefFinBranch ,
		   Bef.FinType BefFinType ,Bef.MovementDate BefMovementDate ,Bef.MovementOrder BefMovementOrder ,
		   Bef.MovementType BefMovementType ,Bef.MovementAmount BefMovementAmount ,Bef.CmtAmount BefCmtAmount ,
		   Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,Bef.CmtCharges BefCmtCharges ,
		   Bef.LinkedTranId BefLinkedTranId
	FROM   AuditHeader TH   INNER JOIN
		   
		   AdtCommitmentMovements AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtCommitmentMovements BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
				</createView>
		</changeSet>
		<changeSet id="23-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommitments_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CmtReference AftCmtReference ,Aft.custID AftcustID ,Aft.CmtBranch AftCmtBranch ,
		   Aft.OpenAccount AftOpenAccount ,Aft.CmtAccount AftCmtAccount ,Aft.CmtCcy AftCmtCcy ,
		   Aft.FacilityRef AftFacilityRef ,Aft.CmtPftRateMin AftCmtPftRateMin ,Aft.CmtPftRateMax AftCmtPftRateMax ,
		   Aft.CmtAmount AftCmtAmount ,Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,
		   Aft.CmtPromisedDate AftCmtPromisedDate ,Aft.CmtStartDate AftCmtStartDate ,Aft.CmtExpDate AftCmtExpDate ,
		   Aft.CmtTitle AftCmtTitle ,Aft.CmtNotes AftCmtNotes ,Aft.Revolving AftRevolving ,Aft.SharedCmt AftSharedCmt ,
		   Aft.MultiBranch AftMultiBranch ,Aft.CmtStopRateRange AftCmtStopRateRange ,Aft.CmtActive AftCmtActive ,
		   Aft.NonPerforming AftNonPerforming ,Aft.CmtCharges AftCmtCharges ,Aft.ChargesAccount AftChargesAccount ,
		   Bef.CmtReference BefCmtReference ,Bef.custID BefcustID ,Bef.CmtBranch BefCmtBranch ,
		   Bef.OpenAccount BefOpenAccount ,Bef.CmtAccount BefCmtAccount ,Bef.CmtCcy BefCmtCcy ,
		   Bef.FacilityRef BefFacilityRef ,Bef.CmtPftRateMin BefCmtPftRateMin ,Bef.CmtPftRateMax BefCmtPftRateMax ,
		   Bef.CmtAmount BefCmtAmount ,Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,
		   Bef.CmtPromisedDate BefCmtPromisedDate ,Bef.CmtStartDate BefCmtStartDate ,Bef.CmtExpDate BefCmtExpDate ,
		   Bef.CmtTitle BefCmtTitle ,Bef.CmtNotes BefCmtNotes ,Bef.Revolving BefRevolving ,Bef.SharedCmt BefSharedCmt ,
		   Bef.MultiBranch BefMultiBranch ,Bef.CmtStopRateRange BefCmtStopRateRange ,Bef.CmtActive BefCmtActive ,
		   Bef.NonPerforming BefNonPerforming ,Bef.CmtCharges BefCmtCharges ,Bef.ChargesAccount BefChargesAccount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCommitments AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCommitments BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
		</createView>
</changeSet>

<changeSet id="23-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommitments_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CmtReference AftCmtReference ,Aft.custID AftcustID ,Aft.CmtBranch AftCmtBranch ,
		   Aft.OpenAccount AftOpenAccount ,Aft.CmtAccount AftCmtAccount ,Aft.CmtCcy AftCmtCcy ,
		   Aft.FacilityRef AftFacilityRef ,Aft.CmtPftRateMin AftCmtPftRateMin ,Aft.CmtPftRateMax AftCmtPftRateMax ,
		   Aft.CmtAmount AftCmtAmount ,Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,
		   Aft.CmtPromisedDate AftCmtPromisedDate ,Aft.CmtStartDate AftCmtStartDate ,Aft.CmtExpDate AftCmtExpDate ,
		   Aft.CmtTitle AftCmtTitle ,Aft.CmtNotes AftCmtNotes ,Aft.Revolving AftRevolving ,Aft.SharedCmt AftSharedCmt ,
		   Aft.MultiBranch AftMultiBranch ,Aft.CmtStopRateRange AftCmtStopRateRange ,Aft.CmtActive AftCmtActive ,
		   Aft.NonPerforming AftNonPerforming ,Aft.CmtCharges AftCmtCharges ,Aft.ChargesAccount AftChargesAccount ,
		   Bef.CmtReference BefCmtReference ,Bef.custID BefcustID ,Bef.CmtBranch BefCmtBranch ,
		   Bef.OpenAccount BefOpenAccount ,Bef.CmtAccount BefCmtAccount ,Bef.CmtCcy BefCmtCcy ,
		   Bef.FacilityRef BefFacilityRef ,Bef.CmtPftRateMin BefCmtPftRateMin ,Bef.CmtPftRateMax BefCmtPftRateMax ,
		   Bef.CmtAmount BefCmtAmount ,Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,
		   Bef.CmtPromisedDate BefCmtPromisedDate ,Bef.CmtStartDate BefCmtStartDate ,Bef.CmtExpDate BefCmtExpDate ,
		   Bef.CmtTitle BefCmtTitle ,Bef.CmtNotes BefCmtNotes ,Bef.Revolving BefRevolving ,Bef.SharedCmt BefSharedCmt ,
		   Bef.MultiBranch BefMultiBranch ,Bef.CmtStopRateRange BefCmtStopRateRange ,Bef.CmtActive BefCmtActive ,
		   Bef.NonPerforming BefNonPerforming ,Bef.CmtCharges BefCmtCharges ,Bef.ChargesAccount BefChargesAccount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCommitments AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCommitments BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
		</createView>
</changeSet>

<changeSet id="24-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommodityBrokerDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.BrokerCustID AftBrokerCustID,Aft.BrokerFrom AftBrokerFrom,
						  Aft.BrokerAddrHNbr AftBrokerAddrHNbr, Aft.BrokerAddrFlatNbr AftBrokerAddrFlatNbr,Aft.BrokerAddrStreet AftBrokerAddrStreet,
						  Aft.BrokerAddrLane1 AftBrokerAddrLane1, Aft.BrokerAddrLane2 AftBrokerAddrLane2,Aft.BrokerAddrPOBox AftBrokerAddrPOBox,
						  Aft.BrokerAddrCountry AftBrokerAddrCountry, Aft.BrokerAddrProvince AftBrokerAddrProvince,Aft.BrokerAddrCity AftBrokerAddrCity,
						  Aft.BrokerAddrZIP AftBrokerAddrZIP, Aft.BrokerAddrPhone AftBrokerAddrPhone,Aft.BrokerAddrFax AftBrokerAddrFax,
						  Aft.BrokerEmail AftBrokerEmail,Aft.AgreementRef AftAgreementRef,
						  
						  Bef.BrokerCode BefBrokerCode, Bef.BrokerCustID BefBrokerCustID, Bef.BrokerFrom BefBrokerFrom,
						  Bef.BrokerAddrHNbr BefBrokerAddrHNbr, Bef.BrokerAddrFlatNbr BefBrokerAddrFlatNbr, Bef.BrokerAddrStreet BefBrokerAddrStreet,
						  Bef.BrokerAddrLane1 BefBrokerAddrLane1, Bef.BrokerAddrLane2 BefBrokerAddrLane2, Bef.BrokerAddrPOBox BefBrokerAddrPOBox,
						  Bef.BrokerAddrCountry BefBrokerAddrCountry, Bef.BrokerAddrProvince BefBrokerAddrProvince, Bef.BrokerAddrCity BefBrokerAddrCity,
						  Bef.BrokerAddrZIP BefBrokerAddrZIP, Bef.BrokerAddrPhone BefBrokerAddrPhone, Bef.BrokerAddrFax BefBrokerAddrFax,
						  Bef.BrokerEmail BefBrokerEmail, Bef.AgreementRef BefAgreementRef
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTBrokerDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTBrokerDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
		</createView>
</changeSet>

<changeSet id="24-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommodityBrokerDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.BrokerCustID AftBrokerCustID,Aft.BrokerFrom AftBrokerFrom,
						  Aft.BrokerAddrHNbr AftBrokerAddrHNbr, Aft.BrokerAddrFlatNbr AftBrokerAddrFlatNbr,Aft.BrokerAddrStreet AftBrokerAddrStreet,
						  Aft.BrokerAddrLane1 AftBrokerAddrLane1, Aft.BrokerAddrLane2 AftBrokerAddrLane2,Aft.BrokerAddrPOBox AftBrokerAddrPOBox,
						  Aft.BrokerAddrCountry AftBrokerAddrCountry, Aft.BrokerAddrProvince AftBrokerAddrProvince,Aft.BrokerAddrCity AftBrokerAddrCity,
						  Aft.BrokerAddrZIP AftBrokerAddrZIP, Aft.BrokerAddrPhone AftBrokerAddrPhone,Aft.BrokerAddrFax AftBrokerAddrFax,
						  Aft.BrokerEmail AftBrokerEmail,Aft.AgreementRef AftAgreementRef,
						  
						  Bef.BrokerCode BefBrokerCode, Bef.BrokerCustID BefBrokerCustID, Bef.BrokerFrom BefBrokerFrom,
						  Bef.BrokerAddrHNbr BefBrokerAddrHNbr, Bef.BrokerAddrFlatNbr BefBrokerAddrFlatNbr, Bef.BrokerAddrStreet BefBrokerAddrStreet,
						  Bef.BrokerAddrLane1 BefBrokerAddrLane1, Bef.BrokerAddrLane2 BefBrokerAddrLane2, Bef.BrokerAddrPOBox BefBrokerAddrPOBox,
						  Bef.BrokerAddrCountry BefBrokerAddrCountry, Bef.BrokerAddrProvince BefBrokerAddrProvince, Bef.BrokerAddrCity BefBrokerAddrCity,
						  Bef.BrokerAddrZIP BefBrokerAddrZIP, Bef.BrokerAddrPhone BefBrokerAddrPhone, Bef.BrokerAddrFax BefBrokerAddrFax,
						  Bef.BrokerEmail BefBrokerEmail, Bef.AgreementRef BefAgreementRef
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTBrokerDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTBrokerDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
		</createView>
</changeSet>

<changeSet id="25-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommodityDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CommodityCode AftCommodityCode, Aft.CommodityName AftCommodityName,Aft.CommodityUnitCode AftCommodityUnitCode,
						  Aft.CommodityUnitName AftCommodityUnitName,
						  Bef.CommodityCode BefCommodityCode, Bef.CommodityName BefCommodityName, Bef.CommodityUnitCode BefCommodityUnitCode,
						  Bef.CommodityUnitName BefCommodityUnitName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityDetail')
		</createView>
</changeSet>

<changeSet id="25-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommodityDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CommodityCode AftCommodityCode, Aft.CommodityName AftCommodityName,Aft.CommodityUnitCode AftCommodityUnitCode,
						  Aft.CommodityUnitName AftCommodityUnitName,
						  Bef.CommodityCode BefCommodityCode, Bef.CommodityName BefCommodityName, Bef.CommodityUnitCode BefCommodityUnitCode,
						  Bef.CommodityUnitName BefCommodityUnitName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityDetail')
		</createView>
</changeSet>

<changeSet id="26-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtContributorDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.ContributorBaseNo AftContributorBaseNo,Aft.CustID AftCustID,
						  Aft.ContributorName AftContributorName, Aft.ContributorInvest AftContributorInvest,Aft.InvestAccount AftInvestAccount,
						  Aft.InvestDate AftInvestDate, Aft.RecordDate AftRecordDate,Aft.TotalInvestPerc AftTotalInvestPerc,
						  Aft.MudaribPerc AftMudaribPerc,
						  	
						  Bef.FinReference BefFinReference, Bef.ContributorBaseNo BefContributorBaseNo, Bef.CustID BefCustID,
						  Bef.ContributorName BefContributorName, Bef.ContributorInvest BefContributorInvest, Bef.InvestAccount BefInvestAccount,
						  Bef.InvestDate BefInvestDate, Bef.RecordDate BefRecordDate, Bef.TotalInvestPerc BefTotalInvestPerc,
						  Bef.MudaribPerc BefMudaribPerc
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="26-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtContributorDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.ContributorBaseNo AftContributorBaseNo,Aft.CustID AftCustID,
						  Aft.ContributorName AftContributorName, Aft.ContributorInvest AftContributorInvest,Aft.InvestAccount AftInvestAccount,
						  Aft.InvestDate AftInvestDate, Aft.RecordDate AftRecordDate,Aft.TotalInvestPerc AftTotalInvestPerc,
						  Aft.MudaribPerc AftMudaribPerc,
						  	
						  Bef.FinReference BefFinReference, Bef.ContributorBaseNo BefContributorBaseNo, Bef.CustID BefCustID,
						  Bef.ContributorName BefContributorName, Bef.ContributorInvest BefContributorInvest, Bef.InvestAccount BefInvestAccount,
						  Bef.InvestDate BefInvestDate, Bef.RecordDate BefRecordDate, Bef.TotalInvestPerc BefTotalInvestPerc,
						  Bef.MudaribPerc BefMudaribPerc
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="27-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtContributorHeader_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.MinContributors AftMinContributors,Aft.MaxContributors AftMaxContributors,
						  Aft.MinContributionAmt AftMinContributionAmt, Aft.MaxContributionAmt AftMaxContributionAmt,Aft.CurContributors AftCurContributors,
						  Aft.CurContributionAmt AftCurContributionAmt, Aft.CurBankInvestment AftCurBankInvestment,Aft.AvgMudaribRate AftAvgMudaribRate,
						  Aft.AlwContributorsToLeave AftAlwContributorsToLeave,Aft.AlwContributorsToJoin AftAlwContributorsToJoin,
						  	
						  Bef.FinReference BefFinReference, Bef.MinContributors BefMinContributors, Bef.MaxContributors BefMaxContributors,
						  Bef.MinContributionAmt BefMinContributionAmt, Bef.MaxContributionAmt BefMaxContributionAmt, Bef.CurContributors BefCurContributors,
						  Bef.CurContributionAmt BefCurContributionAmt, Bef.CurBankInvestment BefCurBankInvestment, Bef.AvgMudaribRate BefAvgMudaribRate,
						  Bef.AlwContributorsToLeave BefAlwContributorsToLeave,Bef.AlwContributorsToJoin BefAlwContributorsToJoin
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="27-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtContributorHeader_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.MinContributors AftMinContributors,Aft.MaxContributors AftMaxContributors,
						  Aft.MinContributionAmt AftMinContributionAmt, Aft.MaxContributionAmt AftMaxContributionAmt,Aft.CurContributors AftCurContributors,
						  Aft.CurContributionAmt AftCurContributionAmt, Aft.CurBankInvestment AftCurBankInvestment,Aft.AvgMudaribRate AftAvgMudaribRate,
						  Aft.AlwContributorsToLeave AftAlwContributorsToLeave,Aft.AlwContributorsToJoin AftAlwContributorsToJoin,
						  	
						  Bef.FinReference BefFinReference, Bef.MinContributors BefMinContributors, Bef.MaxContributors BefMaxContributors,
						  Bef.MinContributionAmt BefMinContributionAmt, Bef.MaxContributionAmt BefMaxContributionAmt, Bef.CurContributors BefCurContributors,
						  Bef.CurContributionAmt BefCurContributionAmt, Bef.CurBankInvestment BefCurBankInvestment, Bef.AvgMudaribRate BefAvgMudaribRate,
						  Bef.AlwContributorsToLeave BefAlwContributorsToLeave,Bef.AlwContributorsToJoin BefAlwContributorsToJoin
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="28-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCorpCustDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustId AftCustId, Aft.Name AftName,Aft.PhoneNumber AftPhoneNumber,
						  Aft.PhoneNumber1 AftPhoneNumber1, Aft.EmailId AftEmailId,Aft.BussCommenceDate AftBussCommenceDate,
						  Aft.ServCommenceDate AftServCommenceDate, Aft.BankRelationshipDate AftBankRelationshipDate,Aft.PaidUpCapital AftPaidUpCapital,
						  Aft.AuthorizedCapital AftAuthorizedCapital, Aft.ReservesAndSurPlus AftReservesAndSurPlus,Aft.IntangibleAssets AftIntangibleAssets,
						  Aft.TangibleNetWorth AftTangibleNetWorth, Aft.LongTermLiabilities AftLongTermLiabilities,Aft.CapitalEmployed AftCapitalEmployed,
						  Aft.Investments AftInvestments,Aft.NonCurrentAssets AftNonCurrentAssets,Aft.NetWorkingCapital AftNetWorkingCapital,
						  Aft.NetSales AftNetSales,Aft.OtherIncome AftOtherIncome,Aft.NetProfitAfterTax AftNetProfitAfterTax,
						  Aft.Depreciation AftDepreciation,Aft.CashAccurals AftCashAccurals,Aft.AnnualTurnover AftAnnualTurnover,
						  Aft.ReturnOnCapitalEmp AftReturnOnCapitalEmp,Aft.CurrentAssets AftCurrentAssets,Aft.CurrentLiabilities AftCurrentLiabilities,
						  Aft.CurrentBookValue AftCurrentBookValue,Aft.CurrentMarketValue AftCurrentMarketValue,Aft.PromotersShare AftPromotersShare,
						  Aft.AssociatesShare AftAssociatesShare,Aft.PublicShare AftPublicShare,Aft.FinInstShare AftFinInstShare,
						  Aft.Others AftOthers,						  
						  
						  Bef.CustId BefCustId, Bef.Name BefName, Bef.PhoneNumber BefPhoneNumber,
						  Bef.PhoneNumber1 BefPhoneNumber1, Bef.EmailId BefEmailId, Bef.BussCommenceDate BefBussCommenceDate,
						  Bef.ServCommenceDate BefServCommenceDate, Bef.BankRelationshipDate BefBankRelationshipDate, Bef.PaidUpCapital BefPaidUpCapital,
						  Bef.AuthorizedCapital BefAuthorizedCapital, Bef.ReservesAndSurPlus BefReservesAndSurPlus, Bef.IntangibleAssets BefIntangibleAssets,
						  Bef.TangibleNetWorth BefTangibleNetWorth, Bef.LongTermLiabilities BefLongTermLiabilities, Bef.CapitalEmployed BefCapitalEmployed,
						  Bef.Investments BefInvestments, Bef.NonCurrentAssets BefNonCurrentAssets, Bef.NetWorkingCapital BefNetWorkingCapital,
						  Bef.NetSales BefNetSales, Bef.OtherIncome BefOtherIncome, Bef.NetProfitAfterTax BefNetProfitAfterTax,
						  Bef.Depreciation BefDepreciation, Bef.CashAccurals BefCashAccurals, Bef.AnnualTurnover BefAnnualTurnover,
						  Bef.ReturnOnCapitalEmp BefReturnOnCapitalEmp, Bef.CurrentAssets BefCurrentAssets, Bef.CurrentLiabilities BefCurrentLiabilities,
						  Bef.CurrentBookValue BefCurrentBookValue, Bef.CurrentMarketValue BefCurrentMarketValue, Bef.PromotersShare BefPromotersShare,
						  Bef.AssociatesShare BefAssociatesShare, Bef.PublicShare BefPublicShare, Bef.FinInstShare BefFinInstShare,
						  Bef.Others BefOthers
						  						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerCorporateDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerCorporateDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorporateCustomerDetail')
		</createView>
</changeSet>

<changeSet id="28-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCorpCustDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustId AftCustId, Aft.Name AftName,Aft.PhoneNumber AftPhoneNumber,
						  Aft.PhoneNumber1 AftPhoneNumber1, Aft.EmailId AftEmailId,Aft.BussCommenceDate AftBussCommenceDate,
						  Aft.ServCommenceDate AftServCommenceDate, Aft.BankRelationshipDate AftBankRelationshipDate,Aft.PaidUpCapital AftPaidUpCapital,
						  Aft.AuthorizedCapital AftAuthorizedCapital, Aft.ReservesAndSurPlus AftReservesAndSurPlus,Aft.IntangibleAssets AftIntangibleAssets,
						  Aft.TangibleNetWorth AftTangibleNetWorth, Aft.LongTermLiabilities AftLongTermLiabilities,Aft.CapitalEmployed AftCapitalEmployed,
						  Aft.Investments AftInvestments,Aft.NonCurrentAssets AftNonCurrentAssets,Aft.NetWorkingCapital AftNetWorkingCapital,
						  Aft.NetSales AftNetSales,Aft.OtherIncome AftOtherIncome,Aft.NetProfitAfterTax AftNetProfitAfterTax,
						  Aft.Depreciation AftDepreciation,Aft.CashAccurals AftCashAccurals,Aft.AnnualTurnover AftAnnualTurnover,
						  Aft.ReturnOnCapitalEmp AftReturnOnCapitalEmp,Aft.CurrentAssets AftCurrentAssets,Aft.CurrentLiabilities AftCurrentLiabilities,
						  Aft.CurrentBookValue AftCurrentBookValue,Aft.CurrentMarketValue AftCurrentMarketValue,Aft.PromotersShare AftPromotersShare,
						  Aft.AssociatesShare AftAssociatesShare,Aft.PublicShare AftPublicShare,Aft.FinInstShare AftFinInstShare,
						  Aft.Others AftOthers,						  
						  
						  Bef.CustId BefCustId, Bef.Name BefName, Bef.PhoneNumber BefPhoneNumber,
						  Bef.PhoneNumber1 BefPhoneNumber1, Bef.EmailId BefEmailId, Bef.BussCommenceDate BefBussCommenceDate,
						  Bef.ServCommenceDate BefServCommenceDate, Bef.BankRelationshipDate BefBankRelationshipDate, Bef.PaidUpCapital BefPaidUpCapital,
						  Bef.AuthorizedCapital BefAuthorizedCapital, Bef.ReservesAndSurPlus BefReservesAndSurPlus, Bef.IntangibleAssets BefIntangibleAssets,
						  Bef.TangibleNetWorth BefTangibleNetWorth, Bef.LongTermLiabilities BefLongTermLiabilities, Bef.CapitalEmployed BefCapitalEmployed,
						  Bef.Investments BefInvestments, Bef.NonCurrentAssets BefNonCurrentAssets, Bef.NetWorkingCapital BefNetWorkingCapital,
						  Bef.NetSales BefNetSales, Bef.OtherIncome BefOtherIncome, Bef.NetProfitAfterTax BefNetProfitAfterTax,
						  Bef.Depreciation BefDepreciation, Bef.CashAccurals BefCashAccurals, Bef.AnnualTurnover BefAnnualTurnover,
						  Bef.ReturnOnCapitalEmp BefReturnOnCapitalEmp, Bef.CurrentAssets BefCurrentAssets, Bef.CurrentLiabilities BefCurrentLiabilities,
						  Bef.CurrentBookValue BefCurrentBookValue, Bef.CurrentMarketValue BefCurrentMarketValue, Bef.PromotersShare BefPromotersShare,
						  Bef.AssociatesShare BefAssociatesShare, Bef.PublicShare BefPublicShare, Bef.FinInstShare BefFinInstShare,
						  Bef.Others BefOthers
						  						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerCorporateDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerCorporateDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorporateCustomerDetail')
		</createView>
</changeSet>

<changeSet id="29-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCorpRelationCodes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CorpRelationCode AftCorpRelationCode, Aft.CorpRelationDesc AftCorpRelationDesc, Aft.CorpRelationIsActive AftCorpRelationIsActive,
						  Bef.CorpRelationCode BefCorpRelationCode, Bef.CorpRelationDesc BefCorpRelationDesc, Bef.CorpRelationIsActive BefCorpRelationIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCorpRelationCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCorpRelationCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorpRelationCode')
		</createView>
</changeSet>

<changeSet id="29-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCorpRelationCodes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CorpRelationCode AftCorpRelationCode, Aft.CorpRelationDesc AftCorpRelationDesc, Aft.CorpRelationIsActive AftCorpRelationIsActive,
						  Bef.CorpRelationCode BefCorpRelationCode, Bef.CorpRelationDesc BefCorpRelationDesc, Bef.CorpRelationIsActive BefCorpRelationIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCorpRelationCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCorpRelationCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorpRelationCode')
		</createView>
</changeSet>

<changeSet id="30-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCountries_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CountryCode AftCountryCode, Aft.CountryDesc AftCountryDesc, Aft.CountryParentLimit AftCountryParentLimit,
						  Aft.CountryResidenceLimit AftCountryResidenceLimit, Aft.CountryRiskLimit AftCountryRiskLimit, Aft.CountryIsActive AftCountryIsActive,
						  Bef.CountryCode BefCountryCode, Bef.CountryDesc BefCountryDesc, Bef.CountryParentLimit BefCountryParentLimit,
						  Bef.CountryResidenceLimit BefCountryResidenceLimit, Bef.CountryRiskLimit BefCountryRiskLimit, Bef.CountryIsActive BefCountryIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCountries AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCountries BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Country')
		</createView>
</changeSet>

<changeSet id="30-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCountries_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CountryCode AftCountryCode, Aft.CountryDesc AftCountryDesc, Aft.CountryParentLimit AftCountryParentLimit,
						  Aft.CountryResidenceLimit AftCountryResidenceLimit, Aft.CountryRiskLimit AftCountryRiskLimit, Aft.CountryIsActive AftCountryIsActive,
						  Bef.CountryCode BefCountryCode, Bef.CountryDesc BefCountryDesc, Bef.CountryParentLimit BefCountryParentLimit,
						  Bef.CountryResidenceLimit BefCountryResidenceLimit, Bef.CountryRiskLimit BefCountryRiskLimit, Bef.CountryIsActive BefCountryIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCountries AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCountries BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Country')
		</createView>
</changeSet>

<changeSet id="31-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCountryVsProvince_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CPCountry AftCPCountry, Aft.CPProvince AftCPProvince,Aft.CPProvinceName AftCPProvinceName,
						  Bef.CPCountry BefCPCountry, Bef.CPProvince BefCPProvince, Bef.CPProvinceName BefCPProvinceName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCountryVsProvince AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCountryVsProvince BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Province')
		</createView>
</changeSet>

<changeSet id="31-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCountryVsProvince_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CPCountry AftCPCountry, Aft.CPProvince AftCPProvince,Aft.CPProvinceName AftCPProvinceName,
						  Bef.CPCountry BefCPCountry, Bef.CPProvince BefCPProvince, Bef.CPProvinceName BefCPProvinceName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCountryVsProvince AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCountryVsProvince BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Province')
		</createView>
</changeSet>

<changeSet id="32-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCourse_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseName AftCourseName, Aft.CourseDesc AftCourseDesc,
						  Bef.CourseName BefCourseName, Bef.CourseDesc BefCourseDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourse AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourse BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Course')
		</createView>
</changeSet>

<changeSet id="32-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCourse_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseName AftCourseName, Aft.CourseDesc AftCourseDesc,
						  Bef.CourseName BefCourseName, Bef.CourseDesc BefCourseDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourse AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourse BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Course')
		</createView>
</changeSet>

<changeSet id="33-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCourseType_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseTypeCode AftCourseTypeCode, Aft.CourseTypeDesc AftCourseTypeDesc,
						  Bef.CourseTypeCode BefCourseTypeCode, Bef.CourseTypeDesc BefCourseTypeDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourseType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourseType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CourseType')
		</createView>
</changeSet>

<changeSet id="33-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCourseType_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseTypeCode AftCourseTypeCode, Aft.CourseTypeDesc AftCourseTypeDesc,
						  Bef.CourseTypeCode BefCourseTypeCode, Bef.CourseTypeDesc BefCourseTypeDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourseType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourseType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CourseType')
		</createView>
</changeSet>

<changeSet id="34-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCurrencies_View">
		SELECT       TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CcyCode AftCcyCode, Aft.CcyNumber AftCcyNumber, Aft.CcyDesc AftCcyDesc,
						  Aft.CcySwiftCode AftCcySwiftCode, Aft.CcyEditField AftCcyEditField, Aft.CcyMinorCcyUnits AftCcyMinorCcyUnits,
						  Aft.CcyDrRateBasisCode AftCcyDrRateBasisCode, Aft.CcyCrRateBasisCode AftCcyCrRateBasisCode, Aft.CcyIsIntRounding AftCcyIsIntRounding,
						  Aft.CcySpotRate AftCcySpotRate, Aft.CcyIsReceprocal AftCcyIsReceprocal, Aft.CcyUserRateBuy AftCcyUserRateBuy,
						  Aft.CcyUserRateSell AftCcyUserRateSell, Aft.CcyIsMember AftCcyIsMember, Aft.CcyIsGroup AftCcyIsGroup,
						  Aft.CcyIsAlwForLoans AftCcyIsAlwForLoans, Aft.CcyIsAlwForDepo AftCcyIsAlwForDepo, Aft.CcyIsAlwForAc AftCcyIsAlwForAc,
						  Aft.CcyIsActive AftCcyIsActive, Aft.CcyMinorCcyDesc AftCcyMinorCcyDesc, Aft.CcySymbol AftCcySymbol,
						  Bef.CcyCode BefCcyCode, Bef.CcyNumber BefCcyNumber, Bef.CcyDesc BefCcyDesc,
						  Bef.CcySwiftCode BefCcySwiftCode, Bef.CcyEditField BefCcyEditField, Bef.CcyMinorCcyUnits BefCcyMinorCcyUnits,
						  Bef.CcyDrRateBasisCode BefCcyDrRateBasisCode, Bef.CcyCrRateBasisCode BefCcyCrRateBasisCode, Bef.CcyIsIntRounding BefCcyIsIntRounding,
						  Bef.CcySpotRate BefCcySpotRate, Bef.CcyIsReceprocal BefCcyIsReceprocal, Bef.CcyUserRateBuy BefCcyUserRateBuy,
						  Bef.CcyUserRateSell BefCcyUserRateSell, Bef.CcyIsMember BefCcyIsMember, Bef.CcyIsGroup BefCcyIsGroup,
						  Bef.CcyIsAlwForLoans BefCcyIsAlwForLoans, Bef.CcyIsAlwForDepo BefCcyIsAlwForDepo, Bef.CcyIsAlwForAc BefCcyIsAlwForAc,
						  Bef.CcyIsActive BefCcyIsActive, Bef.CcyMinorCcyDesc BefCcyMinorCcyDesc, Bef.CcySymbol BefCcySymbol
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCurrencies AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCurrencies BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Currency')
		</createView>
</changeSet>

<changeSet id="34-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCurrencies_View">
		SELECT       TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CcyCode AftCcyCode, Aft.CcyNumber AftCcyNumber, Aft.CcyDesc AftCcyDesc,
						  Aft.CcySwiftCode AftCcySwiftCode, Aft.CcyEditField AftCcyEditField, Aft.CcyMinorCcyUnits AftCcyMinorCcyUnits,
						  Aft.CcyDrRateBasisCode AftCcyDrRateBasisCode, Aft.CcyCrRateBasisCode AftCcyCrRateBasisCode, Aft.CcyIsIntRounding AftCcyIsIntRounding,
						  Aft.CcySpotRate AftCcySpotRate, Aft.CcyIsReceprocal AftCcyIsReceprocal, Aft.CcyUserRateBuy AftCcyUserRateBuy,
						  Aft.CcyUserRateSell AftCcyUserRateSell, Aft.CcyIsMember AftCcyIsMember, Aft.CcyIsGroup AftCcyIsGroup,
						  Aft.CcyIsAlwForLoans AftCcyIsAlwForLoans, Aft.CcyIsAlwForDepo AftCcyIsAlwForDepo, Aft.CcyIsAlwForAc AftCcyIsAlwForAc,
						  Aft.CcyIsActive AftCcyIsActive, Aft.CcyMinorCcyDesc AftCcyMinorCcyDesc, Aft.CcySymbol AftCcySymbol,
						  Bef.CcyCode BefCcyCode, Bef.CcyNumber BefCcyNumber, Bef.CcyDesc BefCcyDesc,
						  Bef.CcySwiftCode BefCcySwiftCode, Bef.CcyEditField BefCcyEditField, Bef.CcyMinorCcyUnits BefCcyMinorCcyUnits,
						  Bef.CcyDrRateBasisCode BefCcyDrRateBasisCode, Bef.CcyCrRateBasisCode BefCcyCrRateBasisCode, Bef.CcyIsIntRounding BefCcyIsIntRounding,
						  Bef.CcySpotRate BefCcySpotRate, Bef.CcyIsReceprocal BefCcyIsReceprocal, Bef.CcyUserRateBuy BefCcyUserRateBuy,
						  Bef.CcyUserRateSell BefCcyUserRateSell, Bef.CcyIsMember BefCcyIsMember, Bef.CcyIsGroup BefCcyIsGroup,
						  Bef.CcyIsAlwForLoans BefCcyIsAlwForLoans, Bef.CcyIsAlwForDepo BefCcyIsAlwForDepo, Bef.CcyIsAlwForAc BefCcyIsAlwForAc,
						  Bef.CcyIsActive BefCcyIsActive, Bef.CcyMinorCcyDesc BefCcyMinorCcyDesc, Bef.CcySymbol BefCcySymbol
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCurrencies AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCurrencies BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Currency')
		</createView>
</changeSet>

<changeSet id="35-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustCategories_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustCtgDesc AftCustCtgDesc, Aft.CustCtgType AftCustCtgType,Aft.CustCtgIsActive AftCustCtgIsActive,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustCtgDesc BefCustCtgDesc, Bef.CustCtgType BefCustCtgType,Bef.CustCtgIsActive BefCustCtgIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustCategories AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustCategories BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="35-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustCategories_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustCtgDesc AftCustCtgDesc, Aft.CustCtgType AftCustCtgType,Aft.CustCtgIsActive AftCustCtgIsActive,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustCtgDesc BefCustCtgDesc, Bef.CustCtgType BefCustCtgType,Bef.CustCtgIsActive BefCustCtgIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustCategories AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustCategories BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="36-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustEmployeeDetail_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.EmpStatus AftEmpStatus ,Aft.EmpSector AftEmpSector ,Aft.Profession AftProfession ,
		   Aft.EmpName AftEmpName ,Aft.EmpNameForOthers AftEmpNameForOthers ,Aft.EmpDesg AftEmpDesg ,
		   Aft.EmpDept AftEmpDept ,Aft.EmpFrom AftEmpFrom ,Aft.MonthlyIncome AftMonthlyIncome ,
		   Aft.OtherIncome AftOtherIncome ,Aft.AdditionalIncome AftAdditionalIncome ,
		   Bef.CustID BefCustID ,Bef.EmpStatus BefEmpStatus ,Bef.EmpSector BefEmpSector ,Bef.Profession BefProfession ,
		   Bef.EmpName BefEmpName ,Bef.EmpNameForOthers BefEmpNameForOthers ,Bef.EmpDesg BefEmpDesg ,
		   Bef.EmpDept BefEmpDept ,Bef.EmpFrom BefEmpFrom ,Bef.MonthlyIncome BefMonthlyIncome ,
		   Bef.OtherIncome BefOtherIncome ,Bef.AdditionalIncome BefAdditionalIncome
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustEmployeeDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustEmployeeDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="36-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustEmployeeDetail_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.EmpStatus AftEmpStatus ,Aft.EmpSector AftEmpSector ,Aft.Profession AftProfession ,
		   Aft.EmpName AftEmpName ,Aft.EmpNameForOthers AftEmpNameForOthers ,Aft.EmpDesg AftEmpDesg ,
		   Aft.EmpDept AftEmpDept ,Aft.EmpFrom AftEmpFrom ,Aft.MonthlyIncome AftMonthlyIncome ,
		   Aft.OtherIncome AftOtherIncome ,Aft.AdditionalIncome AftAdditionalIncome ,
		   Bef.CustID BefCustID ,Bef.EmpStatus BefEmpStatus ,Bef.EmpSector BefEmpSector ,Bef.Profession BefProfession ,
		   Bef.EmpName BefEmpName ,Bef.EmpNameForOthers BefEmpNameForOthers ,Bef.EmpDesg BefEmpDesg ,
		   Bef.EmpDept BefEmpDept ,Bef.EmpFrom BefEmpFrom ,Bef.MonthlyIncome BefMonthlyIncome ,
		   Bef.OtherIncome BefOtherIncome ,Bef.AdditionalIncome BefAdditionalIncome
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustEmployeeDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustEmployeeDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="37-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustEmploymentDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEmpName AftCustEmpName,Aft.CustEmpFrom AftCustEmpFrom,
						  Aft.CustEmpDesg AftCustEmpDesg, Aft.CustEmpDept AftCustEmpDept,
						  Aft.CustEmpType AftCustEmpType,
	
						  Bef.CustID BefCustID, Bef.CustEmpName BefCustEmpName, Bef.CustEmpFrom BefCustEmpFrom,
						  Bef.CustEmpDesg BefCustEmpDesg, Bef.CustEmpDept BefCustEmpDept,
						  Bef.CustEmpType BefCustEmpType
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEmpDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEmpDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="37-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustEmploymentDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEmpName AftCustEmpName,Aft.CustEmpFrom AftCustEmpFrom,
						  Aft.CustEmpDesg AftCustEmpDesg, Aft.CustEmpDept AftCustEmpDept,
						  Aft.CustEmpType AftCustEmpType,
	
						  Bef.CustID BefCustID, Bef.CustEmpName BefCustEmpName, Bef.CustEmpFrom BefCustEmpFrom,
						  Bef.CustEmpDesg BefCustEmpDesg, Bef.CustEmpDept BefCustEmpDept,
						  Bef.CustEmpType BefCustEmpType
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEmpDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEmpDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="38-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustNotesTypes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustNotesTypeCode AftCustNotesTypeCode, Aft.CustNotesTypeDesc AftCustNotesTypeDesc, Aft.CustNotesTypeIsPerminent AftCustNotesTypeIsPerminent,
						  Aft.CustNotesTypeArchiveFrq AftCustNotesTypeArchiveFrq,Aft.CustNotesTypeIsActive AftCustNotesTypeIsActive,
						  Bef.CustNotesTypeCode BefCustNotesTypeCode, Bef.CustNotesTypeDesc BefCustNotesTypeDesc, Bef.CustNotesTypeIsPerminent BefCustNotesTypeIsPerminent,
						  Bef.CustNotesTypeArchiveFrq BefCustNotesTypeArchiveFrq,Bef.CustNotesTypeIsActive BefCustNotesTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustNotesTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustNotesTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="38-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustNotesTypes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustNotesTypeCode AftCustNotesTypeCode, Aft.CustNotesTypeDesc AftCustNotesTypeDesc, Aft.CustNotesTypeIsPerminent AftCustNotesTypeIsPerminent,
						  Aft.CustNotesTypeArchiveFrq AftCustNotesTypeArchiveFrq,Aft.CustNotesTypeIsActive AftCustNotesTypeIsActive,
						  Bef.CustNotesTypeCode BefCustNotesTypeCode, Bef.CustNotesTypeDesc BefCustNotesTypeDesc, Bef.CustNotesTypeIsPerminent BefCustNotesTypeIsPerminent,
						  Bef.CustNotesTypeArchiveFrq BefCustNotesTypeArchiveFrq,Bef.CustNotesTypeIsActive BefCustNotesTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustNotesTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustNotesTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>


<changeSet id="39-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomer_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustCIF AftCustCIF,Aft.CustCoreBank AftCustCoreBank,
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustTypeCode AftCustTypeCode,Aft.CustSalutationCode AftCustSalutationCode,
						  Aft.CustFName AftCustFName, Aft.CustMName AftCustMName,Aft.CustLName AftCustLName,
						  Aft.CustShrtName AftCustShrtName, Aft.CustFNameLclLng AftCustFNameLclLng,Aft.CustMNameLclLng AftCustMNameLclLng,
						  Aft.CustLNameLclLng AftCustLNameLclLng, Aft.CustShrtNameLclLng AftCustShrtNameLclLng,Aft.CustDftBranch AftCustDftBranch,
						  Aft.CustGenderCode AftCustGenderCode,Aft.CustDOB AftCustDOB,Aft.CustPOB AftCustPOB,
						  Aft.CustCOB AftCustCOB,Aft.CustPassportNo AftCustPassportNo,Aft.CustMotherMaiden AftCustMotherMaiden,
						  Aft.CustIsMinor AftCustIsMinor,Aft.CustReferedBy AftCustReferedBy,Aft.CustDSA AftCustDSA,
						  Aft.CustDSADept AftCustDSADept,Aft.CustRO1 AftCustRO1,Aft.CustRO2 AftCustRO2,
						  Aft.CustGroupID AftCustGroupID,Aft.CustSts AftCustSts,Aft.CustStsChgDate AftCustStsChgDate,
						  Aft.CustGroupSts AftCustGroupSts,Aft.CustIsBlocked AftCustIsBlocked,Aft.CustIsActive AftCustIsActive,
						  Aft.CustIsClosed AftCustIsClosed,Aft.CustInactiveReason AftCustInactiveReason,Aft.CustIsDecease AftCustIsDecease,
						  Aft.CustIsDormant AftCustIsDormant,Aft.CustIsDelinquent AftCustIsDelinquent,Aft.CustIsTradeFinCust AftCustIsTradeFinCust,
						  Aft.CustTradeLicenceNum AftCustTradeLicenceNum,Aft.CustVisaNum AftCustVisaNum,Aft.CustTradeLicenceExpiry AftCustTradeLicenceExpiry,
						  
						 	
	
						Bef.CustID BefCustID, Bef.CustCIF BefCustCIF, Bef.CustCoreBank BefCustCoreBank,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustTypeCode BefCustTypeCode, Bef.CustSalutationCode BefCustSalutationCode,
						  Bef.CustFName BefCustFName, Bef.CustMName BefCustMName, Bef.CustLName BefCustLName,
						  Bef.CustShrtName BefCustShrtName, Bef.CustFNameLclLng BefCustFNameLclLng, Bef.CustMNameLclLng BefCustMNameLclLng,
						  Bef.CustLNameLclLng BefCustLNameLclLng, Bef.CustShrtNameLclLng BefCustShrtNameLclLng, Bef.CustDftBranch BefCustDftBranch,
						  Bef.CustGenderCode BefCustGenderCode, Bef.CustDOB BefCustDOB, Bef.CustPOB BefCustPOB,
						  Bef.CustCOB BefCustCOB,Bef.CustPassportNo BefCustPassportNo,Bef.CustMotherMaiden BefCustMotherMaiden,
						  Bef.CustIsMinor BefCustIsMinor,Bef.CustReferedBy BefCustReferedBy,Bef.CustDSA BefCustDSA,
						  Bef.CustDSADept BefCustDSADept,Bef.CustRO1 BefCustRO1,Bef.CustRO2 BefCustRO2,
						  Bef.CustGroupID BefCustGroupID,Bef.CustSts BefCustSts,Bef.CustStsChgDate BefCustStsChgDate,
						  Bef.CustGroupSts BefCustGroupSts,Bef.CustIsBlocked BefCustIsBlocked,Bef.CustIsActive BefCustIsActive,
						  Bef.CustIsClosed BefCustIsClosed,Bef.CustInactiveReason BefCustInactiveReason,Bef.CustIsDecease BefCustIsDecease,
						  Bef.CustIsDormant BefCustIsDormant,Bef.CustIsDelinquent BefCustIsDelinquent,Bef.CustIsTradeFinCust BefCustIsTradeFinCust,
						  Bef.CustTradeLicenceNum BefCustTradeLicenceNum,Bef.CustVisaNum BefCustVisaNum,Bef.CustTradeLicenceExpiry BefCustTradeLicenceExpiry
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="39-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomer_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustCIF AftCustCIF,Aft.CustCoreBank AftCustCoreBank,
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustTypeCode AftCustTypeCode,Aft.CustSalutationCode AftCustSalutationCode,
						  Aft.CustFName AftCustFName, Aft.CustMName AftCustMName,Aft.CustLName AftCustLName,
						  Aft.CustShrtName AftCustShrtName, Aft.CustFNameLclLng AftCustFNameLclLng,Aft.CustMNameLclLng AftCustMNameLclLng,
						  Aft.CustLNameLclLng AftCustLNameLclLng, Aft.CustShrtNameLclLng AftCustShrtNameLclLng,Aft.CustDftBranch AftCustDftBranch,
						  Aft.CustGenderCode AftCustGenderCode,Aft.CustDOB AftCustDOB,Aft.CustPOB AftCustPOB,
						  Aft.CustCOB AftCustCOB,Aft.CustPassportNo AftCustPassportNo,Aft.CustMotherMaiden AftCustMotherMaiden,
						  Aft.CustIsMinor AftCustIsMinor,Aft.CustReferedBy AftCustReferedBy,Aft.CustDSA AftCustDSA,
						  Aft.CustDSADept AftCustDSADept,Aft.CustRO1 AftCustRO1,Aft.CustRO2 AftCustRO2,
						  Aft.CustGroupID AftCustGroupID,Aft.CustSts AftCustSts,Aft.CustStsChgDate AftCustStsChgDate,
						  Aft.CustGroupSts AftCustGroupSts,Aft.CustIsBlocked AftCustIsBlocked,Aft.CustIsActive AftCustIsActive,
						  Aft.CustIsClosed AftCustIsClosed,Aft.CustInactiveReason AftCustInactiveReason,Aft.CustIsDecease AftCustIsDecease,
						  Aft.CustIsDormant AftCustIsDormant,Aft.CustIsDelinquent AftCustIsDelinquent,Aft.CustIsTradeFinCust AftCustIsTradeFinCust,
						  Aft.CustTradeLicenceNum AftCustTradeLicenceNum,Aft.CustVisaNum AftCustVisaNum,Aft.CustTradeLicenceExpiry AftCustTradeLicenceExpiry,
						  
						 	
	
						Bef.CustID BefCustID, Bef.CustCIF BefCustCIF, Bef.CustCoreBank BefCustCoreBank,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustTypeCode BefCustTypeCode, Bef.CustSalutationCode BefCustSalutationCode,
						  Bef.CustFName BefCustFName, Bef.CustMName BefCustMName, Bef.CustLName BefCustLName,
						  Bef.CustShrtName BefCustShrtName, Bef.CustFNameLclLng BefCustFNameLclLng, Bef.CustMNameLclLng BefCustMNameLclLng,
						  Bef.CustLNameLclLng BefCustLNameLclLng, Bef.CustShrtNameLclLng BefCustShrtNameLclLng, Bef.CustDftBranch BefCustDftBranch,
						  Bef.CustGenderCode BefCustGenderCode, Bef.CustDOB BefCustDOB, Bef.CustPOB BefCustPOB,
						  Bef.CustCOB BefCustCOB,Bef.CustPassportNo BefCustPassportNo,Bef.CustMotherMaiden BefCustMotherMaiden,
						  Bef.CustIsMinor BefCustIsMinor,Bef.CustReferedBy BefCustReferedBy,Bef.CustDSA BefCustDSA,
						  Bef.CustDSADept BefCustDSADept,Bef.CustRO1 BefCustRO1,Bef.CustRO2 BefCustRO2,
						  Bef.CustGroupID BefCustGroupID,Bef.CustSts BefCustSts,Bef.CustStsChgDate BefCustStsChgDate,
						  Bef.CustGroupSts BefCustGroupSts,Bef.CustIsBlocked BefCustIsBlocked,Bef.CustIsActive BefCustIsActive,
						  Bef.CustIsClosed BefCustIsClosed,Bef.CustInactiveReason BefCustInactiveReason,Bef.CustIsDecease BefCustIsDecease,
						  Bef.CustIsDormant BefCustIsDormant,Bef.CustIsDelinquent BefCustIsDelinquent,Bef.CustIsTradeFinCust BefCustIsTradeFinCust,
						  Bef.CustTradeLicenceNum BefCustTradeLicenceNum,Bef.CustVisaNum BefCustVisaNum,Bef.CustTradeLicenceExpiry BefCustTradeLicenceExpiry
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="40-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerAddres_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustAddrType AftCustAddrType,Aft.CustAddrHNbr AftCustAddrHNbr,
						  Aft.CustFlatNbr AftCustFlatNbr, Aft.CustAddrStreet AftCustAddrStreet,Aft.CustAddrLine1 AftCustAddrLine1,
						  Aft.CustAddrLine2 AftCustAddrLine2, Aft.CustPOBox AftCustPOBox,Aft.CustAddrCity AftCustAddrCity,
						  Aft.CustAddrProvince AftCustAddrProvince, Aft.CustAddrCountry AftCustAddrCountry,Aft.CustAddrZIP AftCustAddrZIP,
						  Aft.CustAddrPhone AftCustAddrPhone, Aft.CustAddrFrom AftCustAddrFrom,
	
						Bef.CustID BefCustID, Bef.CustAddrType BefCustAddrType, Bef.CustAddrHNbr BefCustAddrHNbr,
						  Bef.CustFlatNbr BefCustFlatNbr, Bef.CustAddrStreet BefCustAddrStreet, Bef.CustAddrLine1 BefCustAddrLine1,
						  Bef.CustAddrLine2 BefCustAddrLine2, Bef.CustPOBox BefCustPOBox, Bef.CustAddrCity BefCustAddrCity,
						  Bef.CustAddrProvince BefCustAddrProvince, Bef.CustAddrCountry BefCustAddrCountry, Bef.CustAddrZIP BefCustAddrZIP,
						  Bef.CustAddrPhone BefCustAddrPhone, Bef.CustAddrFrom BefCustAddrFrom
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerAddresses AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerAddresses BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="40-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerAddres_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustAddrType AftCustAddrType,Aft.CustAddrHNbr AftCustAddrHNbr,
						  Aft.CustFlatNbr AftCustFlatNbr, Aft.CustAddrStreet AftCustAddrStreet,Aft.CustAddrLine1 AftCustAddrLine1,
						  Aft.CustAddrLine2 AftCustAddrLine2, Aft.CustPOBox AftCustPOBox,Aft.CustAddrCity AftCustAddrCity,
						  Aft.CustAddrProvince AftCustAddrProvince, Aft.CustAddrCountry AftCustAddrCountry,Aft.CustAddrZIP AftCustAddrZIP,
						  Aft.CustAddrPhone AftCustAddrPhone, Aft.CustAddrFrom AftCustAddrFrom,
	
						Bef.CustID BefCustID, Bef.CustAddrType BefCustAddrType, Bef.CustAddrHNbr BefCustAddrHNbr,
						  Bef.CustFlatNbr BefCustFlatNbr, Bef.CustAddrStreet BefCustAddrStreet, Bef.CustAddrLine1 BefCustAddrLine1,
						  Bef.CustAddrLine2 BefCustAddrLine2, Bef.CustPOBox BefCustPOBox, Bef.CustAddrCity BefCustAddrCity,
						  Bef.CustAddrProvince BefCustAddrProvince, Bef.CustAddrCountry BefCustAddrCountry, Bef.CustAddrZIP BefCustAddrZIP,
						  Bef.CustAddrPhone BefCustAddrPhone, Bef.CustAddrFrom BefCustAddrFrom
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerAddresses AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerAddresses BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="41-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerBalanceSheet_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.FinancialYear AftFinancialYear,Aft.TotalAssets AftTotalAssets,
						  Aft.TotalLiabilities AftTotalLiabilities, Aft.NetProfit AftNetProfit,Aft.NetSales AftNetSales,
						  Aft.NetIncome AftNetIncome, Aft.OperatingProfit AftOperatingProfit,Aft.CashFlow AftCashFlow,
						  Aft.BookValue AftBookValue, Aft.MarketValue AftMarketValue,
	
						  Bef.CustID BefCustID, Bef.FinancialYear BefFinancialYear, Bef.TotalAssets BefTotalAssets,
						  Bef.TotalLiabilities BefTotalLiabilities, Bef.NetProfit BefNetProfit, Bef.NetSales BefNetSales,
						  Bef.NetIncome BefNetIncome, Bef.OperatingProfit BefOperatingProfit, Bef.CashFlow BefCashFlow,
						  Bef.BookValue BefBookValue, Bef.MarketValue BefMarketValue
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerBalanceSheet AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerBalanceSheet BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="41-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerBalanceSheet_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.FinancialYear AftFinancialYear,Aft.TotalAssets AftTotalAssets,
						  Aft.TotalLiabilities AftTotalLiabilities, Aft.NetProfit AftNetProfit,Aft.NetSales AftNetSales,
						  Aft.NetIncome AftNetIncome, Aft.OperatingProfit AftOperatingProfit,Aft.CashFlow AftCashFlow,
						  Aft.BookValue AftBookValue, Aft.MarketValue AftMarketValue,
	
						  Bef.CustID BefCustID, Bef.FinancialYear BefFinancialYear, Bef.TotalAssets BefTotalAssets,
						  Bef.TotalLiabilities BefTotalLiabilities, Bef.NetProfit BefNetProfit, Bef.NetSales BefNetSales,
						  Bef.NetIncome BefNetIncome, Bef.OperatingProfit BefOperatingProfit, Bef.CashFlow BefCashFlow,
						  Bef.BookValue BefBookValue, Bef.MarketValue BefMarketValue
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerBalanceSheet AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerBalanceSheet BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="42-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerBankInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.BankName AftBankName ,Aft.AccountNumber AftAccountNumber ,
		   Aft.AccountType AftAccountType ,
           Bef.CustID BefCustID ,Bef.BankName BefBankName ,Bef.AccountNumber BefAccountNumber ,
           Bef.AccountType BefAccountType
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerBankInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerBankInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="42-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerBankInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.BankName AftBankName ,Aft.AccountNumber AftAccountNumber ,
		   Aft.AccountType AftAccountType ,
           Bef.CustID BefCustID ,Bef.BankName BefBankName ,Bef.AccountNumber BefAccountNumber ,
           Bef.AccountType BefAccountType
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerBankInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerBankInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="43-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerChequeInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.ChequeSeq AftChequeSeq ,Aft.MonthYear AftMonthYear ,
		   Aft.TotChequePayment AftTotChequePayment ,Aft.Salary AftSalary ,Aft.ReturnChequeAmt AftReturnChequeAmt ,
		   Aft.ReturnChequeCount AftReturnChequeCount ,
		   Bef.CustID BefCustID ,Bef.ChequeSeq BefChequeSeq ,Bef.MonthYear BefMonthYear ,
		   Bef.TotChequePayment BefTotChequePayment ,Bef.Salary BefSalary ,Bef.ReturnChequeAmt BefReturnChequeAmt ,
		   Bef.ReturnChequeCount BefReturnChequeCount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerChequeInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerChequeInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="43-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerChequeInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.ChequeSeq AftChequeSeq ,Aft.MonthYear AftMonthYear ,
		   Aft.TotChequePayment AftTotChequePayment ,Aft.Salary AftSalary ,Aft.ReturnChequeAmt AftReturnChequeAmt ,
		   Aft.ReturnChequeCount AftReturnChequeCount ,
		   Bef.CustID BefCustID ,Bef.ChequeSeq BefChequeSeq ,Bef.MonthYear BefMonthYear ,
		   Bef.TotChequePayment BefTotChequePayment ,Bef.Salary BefSalary ,Bef.ReturnChequeAmt BefReturnChequeAmt ,
		   Bef.ReturnChequeCount BefReturnChequeCount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerChequeInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerChequeInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="44-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerDocument_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustDocType AftCustDocType,Aft.CustDocTitle AftCustDocTitle,
						  Aft.CustDocSysName AftCustDocSysName, Aft.CustDocRcvdOn AftCustDocRcvdOn,Aft.CustDocExpDate AftCustDocExpDate,
						  Aft.CustDocIssuedOn AftCustDocIssuedOn, Aft.CustDocIssuedCountry AftCustDocIssuedCountry,Aft.CustDocIsVerified AftCustDocIsVerified,
						  Aft.CustDocVerifiedBy AftCustDocVerifiedBy, Aft.CustDocIsAcrive AftCustDocIsAcrive,
	
						Bef.CustID BefCustID, Bef.CustDocType BefCustDocType, Bef.CustDocTitle BefCustDocTitle,
						  Bef.CustDocSysName BefCustDocSysName, Bef.CustDocRcvdOn BefCustDocRcvdOn, Bef.CustDocExpDate BefCustDocExpDate,
						  Bef.CustDocIssuedOn BefCustDocIssuedOn, Bef.CustDocIssuedCountry BefCustDocIssuedCountry, Bef.CustDocIsVerified BefCustDocIsVerified,
						  Bef.CustDocVerifiedBy BefCustDocVerifiedBy, Bef.CustDocIsAcrive BefCustDocIsAcrive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerDocuments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerDocuments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="44-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerDocument_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustDocType AftCustDocType,Aft.CustDocTitle AftCustDocTitle,
						  Aft.CustDocSysName AftCustDocSysName, Aft.CustDocRcvdOn AftCustDocRcvdOn,Aft.CustDocExpDate AftCustDocExpDate,
						  Aft.CustDocIssuedOn AftCustDocIssuedOn, Aft.CustDocIssuedCountry AftCustDocIssuedCountry,Aft.CustDocIsVerified AftCustDocIsVerified,
						  Aft.CustDocVerifiedBy AftCustDocVerifiedBy, Aft.CustDocIsAcrive AftCustDocIsAcrive,
	
						Bef.CustID BefCustID, Bef.CustDocType BefCustDocType, Bef.CustDocTitle BefCustDocTitle,
						  Bef.CustDocSysName BefCustDocSysName, Bef.CustDocRcvdOn BefCustDocRcvdOn, Bef.CustDocExpDate BefCustDocExpDate,
						  Bef.CustDocIssuedOn BefCustDocIssuedOn, Bef.CustDocIssuedCountry BefCustDocIssuedCountry, Bef.CustDocIsVerified BefCustDocIsVerified,
						  Bef.CustDocVerifiedBy BefCustDocVerifiedBy, Bef.CustDocIsAcrive BefCustDocIsAcrive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerDocuments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerDocuments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="45-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerEMail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEMailTypeCode AftCustEMailTypeCode,Aft.CustEMailPriority AftCustEMailPriority,
						  Aft.CustEMail AftCustEMail,
	
						  Bef.CustID BefCustID, Bef.CustEMailTypeCode BefCustEMailTypeCode, Bef.CustEMailPriority BefCustEMailPriority,
						  Bef.CustEMail BefCustEMail
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEMails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEMails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="45-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerEMail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEMailTypeCode AftCustEMailTypeCode,Aft.CustEMailPriority AftCustEMailPriority,
						  Aft.CustEMail AftCustEMail,
	
						  Bef.CustID BefCustID, Bef.CustEMailTypeCode BefCustEMailTypeCode, Bef.CustEMailPriority BefCustEMailPriority,
						  Bef.CustEMail BefCustEMail
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEMails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEMails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="46-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerExtLiability_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.LiabilitySeq AftLiabilitySeq ,Aft.FinDate AftFinDate ,Aft.FinType AftFinType ,
		   Aft.BankName AftBankName ,Aft.OriginalAmount AftOriginalAmount ,Aft.InstalmentAmount AftInstalmentAmount ,
		   Aft.OutStandingBal AftOutStandingBal ,Aft.FinStatus AftFinStatus ,
		   Bef.CustID BefCustID ,Bef.LiabilitySeq BefLiabilitySeq ,Bef.FinDate BefFinDate ,Bef.FinType BefFinType ,
		   Bef.BankName BefBankName ,Bef.OriginalAmount BefOriginalAmount ,Bef.InstalmentAmount BefInstalmentAmount ,
		   Bef.OutStandingBal BefOutStandingBal ,Bef.FinStatus BefFinStatus
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerExtLiability AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerExtLiability BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="46-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerExtLiability_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    TH.AuditUsrId  AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.LiabilitySeq AftLiabilitySeq ,Aft.FinDate AftFinDate ,Aft.FinType AftFinType ,
		   Aft.BankName AftBankName ,Aft.OriginalAmount AftOriginalAmount ,Aft.InstalmentAmount AftInstalmentAmount ,
		   Aft.OutStandingBal AftOutStandingBal ,Aft.FinStatus AftFinStatus ,
		   Bef.CustID BefCustID ,Bef.LiabilitySeq BefLiabilitySeq ,Bef.FinDate BefFinDate ,Bef.FinType BefFinType ,
		   Bef.BankName BefBankName ,Bef.OriginalAmount BefOriginalAmount ,Bef.InstalmentAmount BefInstalmentAmount ,
		   Bef.OutStandingBal BefOutStandingBal ,Bef.FinStatus BefFinStatus
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerExtLiability AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerExtLiability BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="47-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerGroup_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustGrpID AftCustGrpID, Aft.CustGrpCode AftCustGrpCode,Aft.CustGrpDesc AftCustGrpDesc,
						  Aft.CustGrpRO1 AftCustGrpRO1, Aft.CustGrpLimit AftCustGrpLimit,Aft.CustGrpIsActive AftCustGrpIsActive,
						  	
						  Bef.CustGrpID BefCustGrpID, Bef.CustGrpCode BefCustGrpCode, Bef.CustGrpDesc BefCustGrpDesc,
						  Bef.CustGrpRO1 BefCustGrpRO1, Bef.CustGrpLimit BefCustGrpLimit, Bef.CustGrpIsActive BefCustGrpIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="47-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerGroup_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustGrpID AftCustGrpID, Aft.CustGrpCode AftCustGrpCode,Aft.CustGrpDesc AftCustGrpDesc,
						  Aft.CustGrpRO1 AftCustGrpRO1, Aft.CustGrpLimit AftCustGrpLimit,Aft.CustGrpIsActive AftCustGrpIsActive,
						  	
						  Bef.CustGrpID BefCustGrpID, Bef.CustGrpCode BefCustGrpCode, Bef.CustGrpDesc BefCustGrpDesc,
						  Bef.CustGrpRO1 BefCustGrpRO1, Bef.CustGrpLimit BefCustGrpLimit, Bef.CustGrpIsActive BefCustGrpIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="48-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerIdentity_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.IdCustID AftIdCustID, Aft.IdType AftIdType,Aft.IdIssuedBy AftIdIssuedBy,
						  Aft.IdRef AftIdRef, Aft.IdIssueCountry AftIdIssueCountry,Aft.IdIssuedOn AftIdIssuedOn,
						  Aft.IdExpiresOn AftIdExpiresOn, Aft.IdLocation AftIdLocation,
						  Bef.IdCustID BefIdCustID, Bef.IdType BefIdType, Bef.IdIssuedBy BefIdIssuedBy,
						  Bef.IdRef BefIdRef, Bef.IdIssueCountry BefIdIssueCountry, Bef.IdIssuedOn BefIdIssuedOn,
						  Bef.IdExpiresOn BefIdExpiresOn, Bef.IdLocation BefIdLocation
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustIdentities AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustIdentities BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="48-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerIdentity_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.IdCustID AftIdCustID, Aft.IdType AftIdType,Aft.IdIssuedBy AftIdIssuedBy,
						  Aft.IdRef AftIdRef, Aft.IdIssueCountry AftIdIssueCountry,Aft.IdIssuedOn AftIdIssuedOn,
						  Aft.IdExpiresOn AftIdExpiresOn, Aft.IdLocation AftIdLocation,
						  Bef.IdCustID BefIdCustID, Bef.IdType BefIdType, Bef.IdIssuedBy BefIdIssuedBy,
						  Bef.IdRef BefIdRef, Bef.IdIssueCountry BefIdIssueCountry, Bef.IdIssuedOn BefIdIssuedOn,
						  Bef.IdExpiresOn BefIdExpiresOn, Bef.IdLocation BefIdLocation
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustIdentities AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustIdentities BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="49-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerIncome_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustIncomeType AftCustIncomeType,Aft.CustIncome AftCustIncome,
						  Aft.Category AftCategory,
	
						  Bef.CustID BefCustID, Bef.CustIncomeType BefCustIncomeType, Bef.CustIncome BefCustIncome,
						  Bef.Category BefCategory
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerIncomes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerIncomes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')

		</createView>
</changeSet>

<changeSet id="49-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerIncome_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustIncomeType AftCustIncomeType,Aft.CustIncome AftCustIncome,
						  Aft.Category AftCategory,
	
						  Bef.CustID BefCustID, Bef.CustIncomeType BefCustIncomeType, Bef.CustIncome BefCustIncome,
						  Bef.Category BefCategory
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerIncomes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerIncomes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="50-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerPhoneNumber_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.PhoneCustID AftPhoneCustID, Aft.PhoneTypeCode AftPhoneTypeCode,Aft.PhoneCountryCode AftPhoneCountryCode,
						  Aft.PhoneAreaCode AftPhoneAreaCode, Aft.PhoneNumber AftPhoneNumber,
						  	
						  Bef.PhoneCustID BefPhoneCustID, Bef.PhoneTypeCode BefPhoneTypeCode, Bef.PhoneCountryCode BefPhoneCountryCode,
						  Bef.PhoneAreaCode BefPhoneAreaCode, Bef.PhoneNumber BefPhoneNumber
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerPhoneNumbers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerPhoneNumbers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="50-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerPhoneNumber_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  TH.AuditUsrId  AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.PhoneCustID AftPhoneCustID, Aft.PhoneTypeCode AftPhoneTypeCode,Aft.PhoneCountryCode AftPhoneCountryCode,
						  Aft.PhoneAreaCode AftPhoneAreaCode, Aft.PhoneNumber AftPhoneNumber,
						  	
						  Bef.PhoneCustID BefPhoneCustID, Bef.PhoneTypeCode BefPhoneTypeCode, Bef.PhoneCountryCode BefPhoneCountryCode,
						  Bef.PhoneAreaCode BefPhoneAreaCode, Bef.PhoneNumber BefPhoneNumber
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerPhoneNumbers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerPhoneNumbers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>
	</databaseChangeLog>
