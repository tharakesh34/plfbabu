<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.auditdb" value=" " dbms="postgresql" />
	<property name="call.refdb" value="PLFAVANSEDev.." dbms="mssql" />
	<property name="call.refdb" value=" " dbms="oracle" />
	<property name="call.refdb" value=" " dbms="postgresql" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />
	<property name="call.adtdate" value="CONVERT(varchar(20), TH.AuditDate, 106)"
		dbms="mssql" />
	<property name="call.adtdate" value="to_char(TH.AuditDate, 'DD-MON-YYYY')"
		dbms="oracle" />
	<property name="call.adtdate" value="to_char(TH.AuditDate, 'DD-MON-YYYY')"
		dbms="postgresql" />
	<property name="call.adttime" value="CONVERT(varchar(35), TH.AuditDate, 108)"
		dbms="mssql" />
	<property name="call.adttime" value="to_char( TH.AuditDate, 'HH24:MI:SS')"
		dbms="oracle" />
	<property name="call.adttime" value="to_char( TH.AuditDate, 'HH24:MI:SS')"
		dbms="postgresql" />
	<property name="call.replaceView" value="ALTER" dbms="mssql" />
	<property name="call.replaceView" value="CREATE OR REPLACE"
		dbms="oracle" />
	<property name="call.replaceView" value="CREATE OR REPLACE"
		dbms="postgresql" />
		<changeSet id="pre_run_for_pgp" author="Jayant" runAlways="true"
		dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>
		<changeSet id="01" author="Irfan">
		<sql>
			
			Insert into RBFieldDetails Values ('LPPRULE','LPPRULE','fm_productCategory','Product Category','nvarchar',8,'0','1',' ','static,global',' ');
			Insert into RBFieldDetails Values ('LPPRULE','LPPRULE','fm_finType','Loan Type','nvarchar',8,'0','1','RMTFinanceTypes','static,global,dbvalue','FinanceType');	
			Insert into RBFieldDetails Values ('LPPRULE','LPPRULE','ft_product', 'Product','nvarchar',8, 0,0, 'Product','static,global,dbvalue', 'Product');
		
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'LPPRule_Maker','WF Maker for Rules', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleCode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleCodeDesc'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleEvent'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'RuleDialog_returnType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'RuleDialog_active'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleModule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'RuleDialog_sqlRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'menuCat_RulesFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'LPPRule_Maker'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
						
			
			
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuItem_RulesFactory_LPPRule', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'menuItem_RulesFactory_LPPRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RuleList_NewLPPRule', 'RuleList', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Maker'), (Select RightID from SecRights where RightName = 'button_RuleList_NewLPPRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );			
			
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'LPPRule_Approver','WF Approver for Rules', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Approver'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'LPPRule_Approver'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Approver'), (Select RightID from SecRights where RightName = 'menuCat_RulesFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LPPRule_Approver'), (Select RightID from SecRights where RightName = 'menuItem_RulesFactory_LPPRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
		</sql>
	</changeSet>
	<changeSet id="02" author="Irfan">
		<addColumn tableName="RMTFINANCETYPES">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="03" author="Irfan">
		<addColumn tableName="RMTFINANCETYPES_Temp">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="04" author="Irfan">
		<addColumn tableName="RMTFINANCETYPES">
		<column name="AlwZeroIntAcc" type="boolean"/>
		</addColumn>
	</changeSet>
	<changeSet id="05" author="Irfan">
		<addColumn tableName="RMTFINANCETYPES_Temp">
		<column name="AlwZeroIntAcc" type="boolean"/>
		</addColumn>
	</changeSet>
	<changeSet id="06" author="Irfan">
		<sql>
			Update RMTFINANCETYPES set AlwZeroIntAcc=0 where AlwZeroIntAcc is null;
			Update RMTFINANCETYPES_Temp set AlwZeroIntAcc=0 where AlwZeroIntAcc is null;
		</sql>
	</changeSet>
	<changeSet id="07" author="Irfan">
	<createView viewName="rmtfinancetypes_view" replaceIfExists="true">
		  SELECT t1.fintype,
    t1.fincategory,
    t1.fintypedesc,
    t1.finccy,
    t1.findayscaltype,
    t1.finactype,
    t1.fincontingentactype,
    t1.finisgenref,
    t1.finmaxamount,
    t1.finminamount,
    t1.finisopennewfinac,
    t1.findftstmtfrq,
    t1.finisalwmd,
    t1.finschdmthd,
    t1.finisalwgrace,
    t1.finhistretension,
    t1.equalrepayment,
    t1.finratetype,
    t1.finbaserate,
    t1.finsplrate,
    t1.finintrate,
    t1.finminrate,
    t1.finmaxrate,
    t1.findftintfrq,
    t1.finisintcpz,
    t1.fincpzfrq,
    t1.finisrvwalw,
    t1.finrvwfrq,
    t1.fingrcratetype,
    t1.fingrcbaserate,
    t1.fingrcsplrate,
    t1.fingrcintrate,
    t1.fingrcminrate,
    t1.fingrcmaxrate,
    t1.fingrcdftintfrq,
    t1.fingrcisintcpz,
    t1.fingrccpzfrq,
    t1.fingrcisrvwalw,
    t1.fingrcrvwfrq,
    t1.finminterm,
    t1.finmaxterm,
    t1.findftterms,
    t1.finrpyfrq,
    t1.finrepaymethod,
    t1.finisalwpartialrpy,
    t1.finisalwdifferment,
    t1.finmaxdifferment,
    t1.finisalwearlyrpy,
    t1.finisalwearlysettle,
    t1.finodrpytries,
    t1.finearlypayrule,
    t1.finearlysettlerule,
    t1.findepositrestrictedto,
    t1.finaebuyorinception,
    t1.finaesellormaturity,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepfinance,
    t1.steppingmandatory,
    t1.alwmanualsteps,
    t1.alwdsteppolicies,
    t1.dftsteppolicy,
    t4.actypedesc AS lovdescfincontingentactypename,
    t5.actypedesc AS lovdescfinactypename,
    t1.finisdwpayrequired,
    t1.finrvwrateapplfor,
    t1.finalwratechangeanydate,
    t1.finisintcpzatgrcend,
    t1.finelgrulecode,
    t1.limitelgrulecode,
    t1.finschcalcodeonrvw,
    t1.alwplandeferment,
    t1.plandefercount,
    t1.finassettype,
    t1.pftpayactype,
    t1.finisopenpftpayacc,
    t31.actypedesc AS lovdescpftpayactypename,
    t1.finisalwgrcrepay,
    t1.fingrcschdmthd,
    t1.fingrcmargin,
    t1.finmargin,
    t1.finscheduleon,
    t1.fingrcscheduleon,
    t1.fincommitmentreq,
    t1.fincollateralreq,
    t1.findepreciationreq,
    t1.findepreciationfrq,
    t1.finbankcontingentactype,
    t1.finprovisionactype,
    t38.actypedesc AS lovdescfinbankcontactypename,
    t39.actypedesc AS lovdescfinprovisionactypename,
    t1.allowriainvestment,
    t1.overridelimit,
    t1.limitrequired,
    t1.fincommitmentovrride,
    t1.fincollateralovrride,
    t1.finpftunchanged,
    t1.applyodpenalty,
    t1.odincgrcdays,
    t1.odchargetype,
    t1.odgracedays,
    t1.odchargecalon,
    t1.odchargeamtorperc,
    t1.odallowwaiver,
    t1.odmaxwaiverperc,
    t1.findivision,
    t48.divisioncodedesc AS lovdescfindivisionname,
    t48.entitycode AS lovdescentitycode,
    t1.finsuspactype,
    t49.actypedesc AS lovdescfinsuspactypename,
    t1.product,
    t1.startdate,
    t1.enddate,
    t1.allowdownpaypgm,
    t1.fintypedesc AS lovdescpromofintypedesc,
    t1.remarks,
    t1.alwearlypaymethods,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.alwadvancerent,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.rolloverfinance,
    t1.rolloverfrq,
    t1.downpayrule,
    t59.rulecode AS downpayruledesc,
    t1.finsusptrigger,
    t1.finsuspremarks,
    t1.alwmultipartydisb,
    t1.collateraltype,
    t1.tdsapplicable,
    t1.manualschedule,
    t1.applygrcpricing,
    t1.grcpricingmethod,
    t1.applyrpypricing,
    t1.rpypricingmethod,
    t1.rpyhierarchy,
    t67.rulecode AS grcpricingmethoddesc,
    t68.rulecode AS rpypricingmethoddesc,
    t1.droplineod,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.finrepaypftonfrq,
    t1.alwbpi,
    t1.bpitreatment,
    t1.pftdueschon,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.fddlockperiod,
    t1.alwdrpymethods,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.roundingmode,
    t1.roundingtarget,
    t1.frequencydays,
    t1.quickdisb,
    t1.alwmaxdisbcheckreq,
    t1.alwreage,
    t1.alwunplanemiholiday,
    t1.profitcenterid,
    t69.profitcentercode,
    t69.profitcenterdesc,
    t1.productcategory,
    t2.productdesc AS fincategorydesc,
    t1.developerfinance,
    t1.costoffunds,
    t1.chequecapturereq,
    t1.finltvcheck,
    t1.partiallysecured,
    t1.alwadvemi,
    t1.advemiminterms,
    t1.advemimaxterms,
    t1.advemidftterms,
    t1.advemischdmthd,
    t1.bpipftdaysbasis,
    t1.eligibilitymethods,
    t1.alwhybridrate,
    t1.fixedratetenor,
    t1.odmincapamount,
	t1.ODRuleCode,
	t1.AlwZeroIntAcc
   FROM rmtfinancetypes_temp t1
     LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
     LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
     LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
     LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
     LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
     LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
     LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
     LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
     LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
     LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
     LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
     LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
UNION ALL
 SELECT t1.fintype,
    t1.fincategory,
    t1.fintypedesc,
    t1.finccy,
    t1.findayscaltype,
    t1.finactype,
    t1.fincontingentactype,
    t1.finisgenref,
    t1.finmaxamount,
    t1.finminamount,
    t1.finisopennewfinac,
    t1.findftstmtfrq,
    t1.finisalwmd,
    t1.finschdmthd,
    t1.finisalwgrace,
    t1.finhistretension,
    t1.equalrepayment,
    t1.finratetype,
    t1.finbaserate,
    t1.finsplrate,
    t1.finintrate,
    t1.finminrate,
    t1.finmaxrate,
    t1.findftintfrq,
    t1.finisintcpz,
    t1.fincpzfrq,
    t1.finisrvwalw,
    t1.finrvwfrq,
    t1.fingrcratetype,
    t1.fingrcbaserate,
    t1.fingrcsplrate,
    t1.fingrcintrate,
    t1.fingrcminrate,
    t1.fingrcmaxrate,
    t1.fingrcdftintfrq,
    t1.fingrcisintcpz,
    t1.fingrccpzfrq,
    t1.fingrcisrvwalw,
    t1.fingrcrvwfrq,
    t1.finminterm,
    t1.finmaxterm,
    t1.findftterms,
    t1.finrpyfrq,
    t1.finrepaymethod,
    t1.finisalwpartialrpy,
    t1.finisalwdifferment,
    t1.finmaxdifferment,
    t1.finisalwearlyrpy,
    t1.finisalwearlysettle,
    t1.finodrpytries,
    t1.finearlypayrule,
    t1.finearlysettlerule,
    t1.findepositrestrictedto,
    t1.finaebuyorinception,
    t1.finaesellormaturity,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepfinance,
    t1.steppingmandatory,
    t1.alwmanualsteps,
    t1.alwdsteppolicies,
    t1.dftsteppolicy,
    t4.actypedesc AS lovdescfincontingentactypename,
    t5.actypedesc AS lovdescfinactypename,
    t1.finisdwpayrequired,
    t1.finrvwrateapplfor,
    t1.finalwratechangeanydate,
    t1.finisintcpzatgrcend,
    t1.finelgrulecode,
    t1.limitelgrulecode,
    t1.finschcalcodeonrvw,
    t1.alwplandeferment,
    t1.plandefercount,
    t1.finassettype,
    t1.pftpayactype,
    t1.finisopenpftpayacc,
    t31.actypedesc AS lovdescpftpayactypename,
    t1.finisalwgrcrepay,
    t1.fingrcschdmthd,
    t1.fingrcmargin,
    t1.finmargin,
    t1.finscheduleon,
    t1.fingrcscheduleon,
    t1.fincommitmentreq,
    t1.fincollateralreq,
    t1.findepreciationreq,
    t1.findepreciationfrq,
    t1.finbankcontingentactype,
    t1.finprovisionactype,
    t38.actypedesc AS lovdescfinbankcontactypename,
    t39.actypedesc AS lovdescfinprovisionactypename,
    t1.allowriainvestment,
    t1.overridelimit,
    t1.limitrequired,
    t1.fincommitmentovrride,
    t1.fincollateralovrride,
    t1.finpftunchanged,
    t1.applyodpenalty,
    t1.odincgrcdays,
    t1.odchargetype,
    t1.odgracedays,
    t1.odchargecalon,
    t1.odchargeamtorperc,
    t1.odallowwaiver,
    t1.odmaxwaiverperc,
    t1.findivision,
    t48.divisioncodedesc AS lovdescfindivisionname,
    t48.entitycode AS lovdescentitycode,
    t1.finsuspactype,
    t49.actypedesc AS lovdescfinsuspactypename,
    t1.product,
    t1.startdate,
    t1.enddate,
    t1.allowdownpaypgm,
    t1.fintypedesc AS lovdescpromofintypedesc,
    t1.remarks,
    t1.alwearlypaymethods,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.alwadvancerent,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.rolloverfinance,
    t1.rolloverfrq,
    t1.downpayrule,
    t59.rulecode AS downpayruledesc,
    t1.finsusptrigger,
    t1.finsuspremarks,
    t1.alwmultipartydisb,
    t1.collateraltype,
    t1.tdsapplicable,
    t1.manualschedule,
    t1.applygrcpricing,
    t1.grcpricingmethod,
    t1.applyrpypricing,
    t1.rpypricingmethod,
    t1.rpyhierarchy,
    t67.rulecode AS grcpricingmethoddesc,
    t68.rulecode AS rpypricingmethoddesc,
    t1.droplineod,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.finrepaypftonfrq,
    t1.alwbpi,
    t1.bpitreatment,
    t1.pftdueschon,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.fddlockperiod,
    t1.alwdrpymethods,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.roundingmode,
    t1.roundingtarget,
    t1.frequencydays,
    t1.quickdisb,
    t1.alwmaxdisbcheckreq,
    t1.alwreage,
    t1.alwunplanemiholiday,
    t1.profitcenterid,
    t69.profitcentercode,
    t69.profitcenterdesc,
    t1.productcategory,
    t2.productdesc AS fincategorydesc,
    t1.developerfinance,
    t1.costoffunds,
    t1.chequecapturereq,
    t1.finltvcheck,
    t1.partiallysecured,
    t1.alwadvemi,
    t1.advemiminterms,
    t1.advemimaxterms,
    t1.advemidftterms,
    t1.advemischdmthd,
    t1.bpipftdaysbasis,
    t1.eligibilitymethods,
    t1.alwhybridrate,
    t1.fixedratetenor,
    t1.odmincapamount,
	t1.ODRuleCode,
	t1.AlwZeroIntAcc
   FROM rmtfinancetypes t1
     LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
     LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
     LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
     LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
     LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
     LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
     LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
     LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
     LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
     LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
     LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
     LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
  WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM rmtfinancetypes_temp
          WHERE rmtfinancetypes_temp.fintype = t1.fintype))
	</createView>
         </changeSet>
         <changeSet id="08_Pre" author="Jayant" dbms="postgresql">
         	<sql>
         		select deps_save_and_drop_dependencies('plf','rmtfinancetypes_aview');
         	</sql>
         </changeSet>
         <changeSet id="08" author="Irfan">
	<createView viewName="rmtfinancetypes_aview" replaceIfExists="true">
		 SELECT t1.fintype,
    t1.fincategory,
    t1.fintypedesc,
    t1.finccy,
    t1.findayscaltype,
    t1.finactype,
    t1.fincontingentactype,
    t1.finisgenref,
    t1.finmaxamount,
    t1.finminamount,
    t1.finisopennewfinac,
    t1.findftstmtfrq,
    t1.finisalwmd,
    t1.finschdmthd,
    t1.finisalwgrace,
    t1.finhistretension,
    t1.equalrepayment,
    t1.finratetype,
    t1.finbaserate,
    t1.finsplrate,
    t1.finintrate,
    t1.finminrate,
    t1.finmaxrate,
    t1.findftintfrq,
    t1.finisintcpz,
    t1.fincpzfrq,
    t1.finisrvwalw,
    t1.finrvwfrq,
    t1.fingrcratetype,
    t1.fingrcbaserate,
    t1.fingrcsplrate,
    t1.fingrcintrate,
    t1.fingrcminrate,
    t1.fingrcmaxrate,
    t1.fingrcdftintfrq,
    t1.fingrcisintcpz,
    t1.fingrccpzfrq,
    t1.fingrcisrvwalw,
    t1.fingrcrvwfrq,
    t1.finminterm,
    t1.finmaxterm,
    t1.findftterms,
    t1.finrpyfrq,
    t1.finrepaymethod,
    t1.finisalwpartialrpy,
    t1.finisalwdifferment,
    t1.finmaxdifferment,
    t1.finisalwearlyrpy,
    t1.finisalwearlysettle,
    t1.finodrpytries,
    t1.finearlypayrule,
    t1.finearlysettlerule,
    t1.findepositrestrictedto,
    t1.finaebuyorinception,
    t1.finaesellormaturity,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.stepfinance,
    t1.steppingmandatory,
    t1.alwmanualsteps,
    t1.alwdsteppolicies,
    t1.dftsteppolicy,
    t4.actypedesc AS lovdescfincontingentactypename,
    t5.actypedesc AS lovdescfinactypename,
    t1.finisdwpayrequired,
    t1.finrvwrateapplfor,
    t1.finalwratechangeanydate,
    t1.finisintcpzatgrcend,
    t1.finelgrulecode,
    t1.limitelgrulecode,
    t1.finschcalcodeonrvw,
    t1.alwplandeferment,
    t1.plandefercount,
    t1.finassettype,
    t1.pftpayactype,
    t1.finisopenpftpayacc,
    t31.actypedesc AS lovdescpftpayactypename,
    t1.finisalwgrcrepay,
    t1.fingrcschdmthd,
    t1.fingrcmargin,
    t1.finmargin,
    t1.finscheduleon,
    t1.fingrcscheduleon,
    t1.fincommitmentreq,
    t1.fincollateralreq,
    t1.findepreciationreq,
    t1.findepreciationfrq,
    t1.finbankcontingentactype,
    t1.finprovisionactype,
    t38.actypedesc AS lovdescfinbankcontactypename,
    t39.actypedesc AS lovdescfinprovisionactypename,
    t1.allowriainvestment,
    t1.overridelimit,
    t1.limitrequired,
    t1.fincommitmentovrride,
    t1.fincollateralovrride,
    t1.finpftunchanged,
    t1.applyodpenalty,
    t1.odincgrcdays,
    t1.odchargetype,
    t1.odgracedays,
    t1.odchargecalon,
    t1.odchargeamtorperc,
    t1.odallowwaiver,
    t1.odmaxwaiverperc,
    t1.findivision,
    t48.divisioncodedesc AS lovdescfindivisionname,
    t48.entitycode AS lovdescentitycode,
    t1.finsuspactype,
    t49.actypedesc AS lovdescfinsuspactypename,
    t1.product,
    t1.startdate,
    t1.enddate,
    t1.allowdownpaypgm,
    t1.remarks,
    t1.alwearlypaymethods,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.alwadvancerent,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.rolloverfinance,
    t1.rolloverfrq,
    t1.downpayrule,
    t59.rulecode AS downpayruledesc,
    t1.finsusptrigger,
    t1.finsuspremarks,
    t1.alwmultipartydisb,
    t1.collateraltype,
    t1.tdsapplicable,
    t1.manualschedule,
    t1.applygrcpricing,
    t1.grcpricingmethod,
    t1.applyrpypricing,
    t1.rpypricingmethod,
    t1.rpyhierarchy,
    t67.rulecode AS grcpricingmethoddesc,
    t68.rulecode AS rpypricingmethoddesc,
    t1.droplineod,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.finrepaypftonfrq,
    t1.alwbpi,
    t1.bpitreatment,
    t1.pftdueschon,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.fddlockperiod,
    t1.alwdrpymethods,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.roundingmode,
    t1.roundingtarget,
    t1.frequencydays,
    t1.quickdisb,
    t1.alwreage,
    t1.alwunplanemiholiday,
    t1.alwmaxdisbcheckreq,
    t1.fintypedesc AS lovdescpromofintypedesc,
    t1.profitcenterid,
    t69.profitcentercode,
    t69.profitcenterdesc,
    t1.productcategory,
    t2.productdesc AS fincategorydesc,
    t1.developerfinance,
    t1.costoffunds,
    t1.chequecapturereq,
    t1.finltvcheck,
    t1.partiallysecured,
    t1.alwadvemi,
    t1.advemiminterms,
    t1.advemimaxterms,
    t1.advemidftterms,
    t1.advemischdmthd,
    t1.bpipftdaysbasis,
    t1.eligibilitymethods,
    t1.alwhybridrate,
    t1.fixedratetenor,
	t1.odmincapamount,
    t1.ODRuleCode,
	t1.AlwZeroIntAcc
   FROM rmtfinancetypes t1
     LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
     LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
     LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
     LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
     LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
     LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
     LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
     LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
     LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
     LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
     LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
     LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
	</createView>
	</changeSet>
	 <changeSet id="08_Post" author="Jayant" dbms="postgresql">
         	<sql>
         		select deps_restore_dependencies('plf','rmtfinancetypes_aview');
         	</sql>
         </changeSet>
	<changeSet id="09" author="Irfan" >
	<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
	  SELECT t1.fintype,
    t1.fincategory,
    t1.fintypedesc,
    t1.finccy,
    t1.findayscaltype,
    t1.finactype,
    t1.fincontingentactype,
    t1.finisgenref,
    t1.finmaxamount,
    t1.finminamount,
    t1.finisopennewfinac,
    t1.finisalwmd,
    t1.finschdmthd,
    t1.finisalwgrace,
    t1.equalrepayment,
    t1.finratetype,
    t1.finbaserate,
    t1.finsplrate,
    t1.finintrate,
    t1.finminrate,
    t1.finmaxrate,
    t1.findftintfrq,
    t1.finisintcpz,
    t1.fincpzfrq,
    t1.finisrvwalw,
    t1.finrvwfrq,
    t1.fingrcratetype,
    t1.fingrcbaserate,
    t1.fingrcsplrate,
    t1.fingrcintrate,
    t1.fingrcminrate,
    t1.fingrcmaxrate,
    t1.fingrcdftintfrq,
    t1.fingrcisintcpz,
    t1.fingrccpzfrq,
    t1.fingrcisrvwalw,
    t1.fingrcrvwfrq,
    t1.finminterm,
    t1.finmaxterm,
    t1.findftterms,
    t1.finrpyfrq,
    t1.finrepaymethod,
    t1.finisalwdifferment,
    t1.finmaxdifferment,
    t1.finisactive,
    t1.stepfinance,
    t1.steppingmandatory,
    t1.alwmanualsteps,
    t1.alwdsteppolicies,
    t1.dftsteppolicy,
    t1.finisdwpayrequired,
    t1.finrvwrateapplfor,
    t1.finalwratechangeanydate,
    t1.finisintcpzatgrcend,
    t1.finschcalcodeonrvw,
    t1.alwplandeferment,
    t1.plandefercount,
    t1.pftpayactype,
    t1.finisopenpftpayacc,
    t1.finisalwgrcrepay,
    t1.fingrcschdmthd,
    t1.fingrcmargin,
    t1.finmargin,
    t1.fincommitmentreq,
    t1.fincollateralreq,
    t1.findepreciationreq,
    t1.findepreciationfrq,
    t1.finbankcontingentactype,
    t1.finprovisionactype,
    t1.allowriainvestment,
    t1.overridelimit,
    t1.limitrequired,
    t1.fincommitmentovrride,
    t1.fincollateralovrride,
    t1.finrepaypftonfrq,
    t1.finpftunchanged,
    t1.applyodpenalty,
    t1.odincgrcdays,
    t1.odchargetype,
    t1.odgracedays,
    t1.odchargecalon,
    t1.odchargeamtorperc,
    t1.odallowwaiver,
    t1.odmaxwaiverperc,
    t1.findivision,
    t3.divisioncodedesc AS lovdescfindivisionname,
    t1.finsuspactype,
    t1.product,
    t1.startdate,
    t1.enddate,
    t1.allowdownpaypgm,
    t1.fintypedesc AS lovdescpromofintypedesc,
    t1.remarks,
    t4.policydesc AS lovdescdftsteppolicyname,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.alwadvancerent,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.rolloverfinance,
    t1.rolloverfrq,
    t1.downpayrule,
    t1.alwmultipartydisb,
    t1.collateraltype,
    t1.tdsapplicable,
    t5.rulecode AS downpayruledesc,
    t1.applygrcpricing,
    t1.applyrpypricing,
    t6.rulecode AS grcpricingmethoddesc,
    t7.rulecode AS rpypricingmethoddesc,
    t1.droplineod,
    t1.droppingmethod,
    t1.ratechganyday,
    t4.steptype AS dftsteppolicytype,
    t1.manualschedule,
    t1.alwbpi,
    t1.bpitreatment,
    t1.pftdueschon,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.fddlockperiod,
    t1.alwdrpymethods,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.roundingmode,
    t1.roundingtarget,
    t1.frequencydays,
    t1.quickdisb,
    t1.alwreage,
    t1.alwunplanemiholiday,
    t1.alwmaxdisbcheckreq,
    t1.productcategory,
    t1.rpyhierarchy,
    t1.developerfinance,
    t3.entitycode AS lovdescentitycode,
    t8.entitydesc AS lovdescentitydesc,
    t1.costoffunds,
    t1.chequecapturereq,
    t1.finltvcheck,
    t1.partiallysecured,
    t1.alwadvemi,
    t1.advemiminterms,
    t1.advemimaxterms,
    t1.advemidftterms,
    t1.advemischdmthd,
    t1.bpipftdaysbasis,
    t1.eligibilitymethods,
    t1.alwhybridrate,
    t1.fixedratetenor,
    t1.odmincapamount,
    t1.ODRuleCode,
	t1.AlwZeroIntAcc
   FROM rmtfinancetypes t1
     JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
     LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
     LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
     LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
     LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
     LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
	
	</createView>
	</changeSet>
	<changeSet id="10" author="Irfan">
		<sql>
			Insert into BMTSCHDMETHOD (SCHDMETHOD,SCHDMETHODDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('POSINT','POS and Calculate Profit',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		</sql>
	</changeSet>
	<changeSet id="13" author="Irfan">
		<sql>
			Update bmtaeevents set odapplicable=1 where aeeventcode='INSTDATE';
			Update bmtaeevents set odapplicable=1 where aeeventcode='EARLYPAY';
		</sql>
	</changeSet>
	<changeSet id="14" author="Irfan">
		<sql>
			UpDate RBFIELDDETAILS set rbfldname = 'activeLoansOnFinType' where rbmodule='ELGRULE' and rbfldname = 'fm_activeLoansForLT';
 			UpDate RBFIELDDETAILS set rbfldname = 'totalLoansOnFinType' where rbmodule='ELGRULE' and rbfldname = 'fm_totalLoansForLT';
		</sql>
	</changeSet>
		<changeSet id="15" author="Irfan">
		<addColumn tableName="FINODPENALTYRATES">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="16" author="Irfan">
		<addColumn tableName="FINODPENALTYRATES_Temp">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="17" author="Irfan">
		<addColumn tableName="FINODPENALTYRATES_PA">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="18" author="Irfan">
		<addColumn tableName="REJECTFINODPENALTYRATES">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="19" author="Irfan">
		<createView viewName="finodpenaltyrates_tview" replaceIfExists="true">
			  SELECT finodpenaltyrates_temp.finreference,
    finodpenaltyrates_temp.fineffectdate,
    finodpenaltyrates_temp.applyodpenalty,
    finodpenaltyrates_temp.odincgrcdays,
    finodpenaltyrates_temp.odchargetype,
    finodpenaltyrates_temp.odgracedays,
    finodpenaltyrates_temp.odchargecalon,
    finodpenaltyrates_temp.odchargeamtorperc,
    finodpenaltyrates_temp.odallowwaiver,
    finodpenaltyrates_temp.odmaxwaiverperc,
    finodpenaltyrates_temp.ODRuleCode
   FROM finodpenaltyrates_temp
		</createView>
	</changeSet>
	<changeSet id="20" author="Irfan">
		<createView viewName="finodpenaltyrates_view" replaceIfExists="true">
			 SELECT finodpenaltyrates_temp.finreference,
    finodpenaltyrates_temp.fineffectdate,
    finodpenaltyrates_temp.applyodpenalty,
    finodpenaltyrates_temp.odincgrcdays,
    finodpenaltyrates_temp.odchargetype,
    finodpenaltyrates_temp.odgracedays,
    finodpenaltyrates_temp.odchargecalon,
    finodpenaltyrates_temp.odchargeamtorperc,
    finodpenaltyrates_temp.odallowwaiver,
    finodpenaltyrates_temp.odmaxwaiverperc,
    finodpenaltyrates_temp.ODRuleCode
   FROM finodpenaltyrates_temp
UNION
 SELECT finodpenaltyrates.finreference,
    finodpenaltyrates.fineffectdate,
    finodpenaltyrates.applyodpenalty,
    finodpenaltyrates.odincgrcdays,
    finodpenaltyrates.odchargetype,
    finodpenaltyrates.odgracedays,
    finodpenaltyrates.odchargecalon,
    finodpenaltyrates.odchargeamtorperc,
    finodpenaltyrates.odallowwaiver,
    finodpenaltyrates.odmaxwaiverperc,
    finodpenaltyrates.ODRuleCode
   FROM finodpenaltyrates
  WHERE NOT (EXISTS ( SELECT 1
           FROM finodpenaltyrates_temp
          WHERE finodpenaltyrates_temp.finreference = finodpenaltyrates.finreference))
		</createView>
	</changeSet>
	<changeSet id="21" author="Irfan">
		<createView viewName="finodpenaltyrates_aview" replaceIfExists="true">
			   SELECT finodpenaltyrates.finreference,
    finodpenaltyrates.fineffectdate,
    finodpenaltyrates.applyodpenalty,
    finodpenaltyrates.odincgrcdays,
    finodpenaltyrates.odchargetype,
    finodpenaltyrates.odgracedays,
    finodpenaltyrates.odchargecalon,
    finodpenaltyrates.odchargeamtorperc,
    finodpenaltyrates.odallowwaiver,
    finodpenaltyrates.odmaxwaiverperc,
    finodpenaltyrates.ODRuleCode
   FROM finodpenaltyrates
		</createView>
	</changeSet>
	 <changeSet id="22_Pre" author="Jayant" dbms="postgresql">
         	<sql>
         		select deps_save_and_drop_dependencies('plf','finodpenalty_latest_rates_view');
         	</sql>
         </changeSet>
	<changeSet id="22" author="Irfan">
		<createView viewName="finodpenalty_latest_rates_view" replaceIfExists="true">
		SELECT odpr.finreference,
    odpr.fineffectdate,
    odpr.applyodpenalty,
    odpr.odincgrcdays,
    odpr.odchargetype,
    odpr.odgracedays,
    odpr.odchargecalon,
    odpr.odchargeamtorperc,
    odpr.odallowwaiver,
    odpr.odmaxwaiverperc,
    odpr.ODRuleCode
   FROM finodpenaltyrates odpr
  WHERE odpr.fineffectdate = (( SELECT max(finodpenaltyrates.fineffectdate) AS expr1
           FROM finodpenaltyrates
          WHERE finodpenaltyrates.finreference = odpr.finreference))
		</createView>
	</changeSet>
	 <changeSet id="22_Post" author="Jayant" dbms="postgresql">
         	<sql>
         		select deps_restore_dependencies('plf','finodpenalty_latest_rates_view');
         	</sql>
         </changeSet>
	<changeSet id="23" author="Irfan">
		<sql>
			INSERT INTO ErrorDetails VALUES('ADM001','EN','E','Mandate ID {0} is not approved.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
			INSERT INTO ErrorDetails VALUES('ADM002','EN','E','Mandate ID {0} date is Expired.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		</sql>
	</changeSet>
	<changeSet id="24" author="Irfan">
		<createTable tableName="HoldDisbursement">
			<column name="FinReference" type="varchar(20)" />
			<column name="Hold" type="char" />
			<column name="TotalLoanAmt" type="decimal" />
			<column name="DisbursedAmount" type="decimal" />
			<column name="HoldLimitAmount" type="decimal" />
			<column name="Remarks" type="varchar(100)" />
			<column name="version" type="int" />
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
		<createTable tableName="HoldDisbursement_Temp">
			<column name="FinReference" type="varchar(20)" />
			<column name="Hold" type="char" />
			<column name="TotalLoanAmt" type="decimal" />
			<column name="DisbursedAmount" type="decimal" />
			<column name="HoldLimitAmount" type="decimal" />
			<column name="Remarks" type="varchar(100)" />
			<column name="version" type="int" />
			<column name="lastmntby" type="bigint" />
			<column name="lastmnton" type="datetime" />
			<column name="recordstatus" type="varchar(50)" />
			<column name="rolecode" type="varchar(100)" />
			<column name="nextrolecode" type="varchar(200)" />
			<column name="taskid" type="varchar(50)" />
			<column name="nexttaskid" type="varchar(200)" />
			<column name="recordtype" type="varchar(50)" />
			<column name="workflowid" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	
	<changeSet id="25" author="saikiran.v">
			<sql>
		INSERT INTO secGroups VALUES ((Select MAX(GrpID)+1 From secGroups),	'HOLDDISBURSEMENT_MAKER', 'WF Maker for HoldDisbursement', 0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
		INSERT INTO secGroups VALUES ((Select MAX(GrpID)+1 From secGroups),	'HOLDDISBURSEMENT_APPROVER', 'WF Maker for HoldDisbursement'	, 0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),0,'menuItem_Finance_HoldDisbursement','MENU',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From SecRights),0,'menuItem_Finance_HoldDisbursementEnquiry','MENU',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0);
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From SecRights),2,'button_HoldDisbursementList_PrintList','HoldDisbursementList',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),2,'button_HoldDisbursementList_NewHoldDisbursement','HoldDisbursementList',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From 	SecRights),2,'button_HoldDisbursementDialog_btnNew','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From 	SecRights),2,'button_HoldDisbursementDialog_btnEdit','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),2,'button_HoldDisbursementDialog_btnDelete','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),2,'button_HoldDisbursementDialog_btnSave','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From 	SecRights),3,'HoldDisbursementDialog_FinReference','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0);
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From 	SecRights),3,'HoldDisbursementDialog_Hold','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),3,'HoldDisbursementDialog_TotalLoanAmt','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),3,'HoldDisbursementDialog_DisbursedAmount','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),3,'HoldDisbursementDialog_HoldLimitAmount','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		INSERT INTO SecRights VALUES ((Select MAX(RightID)+1 From	SecRights),3,'HoldDisbursementDialog_Remarks','HoldDisbursementDialog',0,1000,current_timestamp,'Approved','	',' ',' ',' ',' ',0 );
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='menuItem_Finance_HoldDisbursementEnquiry'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='menuItem_Finance_HoldDisbursement'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='button_HoldDisbursementDialog_btnSave'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='button_HoldDisbursementDialog_btnDelete'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='button_HoldDisbursementDialog_btnEdit'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='button_HoldDisbursementDialog_btnNew'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='HoldDisbursementDialog_FinReference'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='HoldDisbursementDialog_Hold'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='HoldDisbursementDialog_TotalLoanAmt'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='HoldDisbursementDialog_DisbursedAmount'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='HoldDisbursementDialog_HoldLimitAmount'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_MAKER'),(select RightId from secRights where	RightName='HoldDisbursementDialog_Remarks'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_APPROVER'),(select RightId from secRights	where RightName='menuItem_Finance_HoldDisbursementEnquiry'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_APPROVER'),(select RightId from secRights	where RightName='menuItem_Finance_HoldDisbursement'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert Into secGrouprights values((select MAX(GrpRightID)+1 From	secGrouprights),(select GrpId from SecGroups where	Grpcode='HOLDDISBURSEMENT_APPROVER'),(select RightId from secRights	where	RightName='button_HoldDisbursementDialog_btnSave'),1,0,1000,current_timestamp,	'Approved','','','','','',0);
		Insert into secRoleGroups values((select MAX(RoleGrpID)+1 From	secRoleGroups),(select GrpID from SecGroups where	grpCode='HOLDDISBURSEMENT_MAKER'),(select RoleID from secRoles where	RoleCd='MSTGRP1_MAKER'),0,1000,current_timestamp,'Approved','','','','','',0);
		Insert into secRoleGroups values((select MAX(RoleGrpID)+1 From	secRoleGroups),(select GrpID from SecGroups where	grpCode='HOLDDISBURSEMENT_APPROVER'),(select RoleID from secRoles where	RoleCd='MSTGRP1_APPROVER'),0,1000,current_timestamp,'Approved','','','','','',0);
			
			</sql>
	</changeSet>
	
	<changeSet id="26_pre" author="Irfan" dbms="oracle,postgresql">
<addNotNullConstraint tableName="HoldDisbursement" columnName="FinReference"/>
</changeSet>
<changeSet id="26_pre" author="Irfan" dbms="mssql">
<addNotNullConstraint tableName="HoldDisbursement" columnName="FinReference" columnDataType="varchar(20)"/>
</changeSet>
	<changeSet id="26_pre.1" author="Irfan" dbms="oracle,postgresql">
<addNotNullConstraint tableName="HoldDisbursement_temp" columnName="FinReference"/>
</changeSet>
<changeSet id="26_pre.1" author="Irfan" dbms="mssql">
<addNotNullConstraint tableName="HoldDisbursement_TEMP" columnName="FinReference" columnDataType="varchar(20)"/>
</changeSet>
	<changeSet id="26" author="Irfan">
	
		 <addPrimaryKey tableName="HoldDisbursement" columnNames="FinReference" constraintName="pk_HoldDisb_FinReference"/>
		 <addPrimaryKey tableName="HoldDisbursement_Temp" columnNames="FinReference" constraintName="pk_HoldDisbTemp_FinReference"/>
	</changeSet>
	
	<changeSet id="27" author="Irfan">
		<comment>Hold Disbursement Error Details</comment>
		<sql>
			insert into errordetails  values('HD99018','EN','E','Disbursed amount is less than or equal to sanctioned amount.',null,'Approved',null,null,null,null,null,0,current_timestamp,1000,0);
		</sql>
	</changeSet> 
	
	<changeSet id="28" author="Irfan">
		<comment>Hold Disbursement Error Details</comment>
		<sql>
			insert into errordetails  values('HD99019','EN','E','Disbursement is in Hold',null,'Approved',null,null,null,null,null,0,current_timestamp,1000,0);
		</sql>
	</changeSet>
	<changeSet id="29" author="Irfan">
		<modifyDataType tableName="HoldDisbursement" columnName="Hold" newDataType="smallint"/>
		<modifyDataType tableName="HoldDisbursement" columnName="TotalLoanAmt" newDataType="Number(18,0)"/>
		<modifyDataType tableName="HoldDisbursement" columnName="DisbursedAmount" newDataType="Number(18,0)"/>
		<modifyDataType tableName="HoldDisbursement" columnName="HoldLimitAmount" newDataType="Number(18,0)"/>
		
		<modifyDataType tableName="HoldDisbursement_Temp" columnName="Hold" newDataType="smallint"/>
		<modifyDataType tableName="HoldDisbursement_Temp" columnName="TotalLoanAmt" newDataType="Number(18,0)"/>
		<modifyDataType tableName="HoldDisbursement_Temp" columnName="DisbursedAmount" newDataType="Number(18,0)"/>
		<modifyDataType tableName="HoldDisbursement_Temp" columnName="HoldLimitAmount" newDataType="Number(18,0)"/>
	</changeSet>
	<changeSet id="30" author="saikiran.v">
			<createView viewName="HoldDisbursement_AView"
				replaceIfExists="true">
					SELECT		T1.FinReference, T1.Hold, T1.TotalLoanAmt, T1.DisbursedAmount, T1.HoldLimitAmount, T1.Remarks		
								, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
					FROM    	HoldDisbursement T1 
		</createView>
			<createView viewName="HoldDisbursement_View"
				replaceIfExists="true">
				SELECT		 T1.FinReference, T1.Hold, T1.TotalLoanAmt, T1.DisbursedAmount, T1.HoldLimitAmount, T1.Remarks		
							, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
				FROM    	HoldDisbursement_Temp T1 
				UNION ALL
				
				SELECT		T1.FinReference, T1.Hold, T1.TotalLoanAmt, T1.DisbursedAmount, T1.HoldLimitAmount, T1.Remarks		
							, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
				FROM    	HoldDisbursement T1 
				WHERE     NOT EXISTS (SELECT 1 FROM HoldDisbursement_TEMP WHERE  FinReference = T1.FinReference)
		</createView>
	</changeSet>
	<changeSet id="31" author="Irfan">
		<comment>Hold Disbursement Error Details</comment>
		<sql>
			Delete from errordetails where code='HD99019';
			insert into errordetails  values('HD99019','EN','E','Loan disbursement not allowed due to hold process.',null,'Approved',null,null,null,null,null,0,current_timestamp,1000,0);
		</sql>
	</changeSet>
	<changeSet id="32" author="Irfan">
	<sql>
		delete from smtparameters where sysparmcode ='MAX_ODDAYS_ADDDISB';
		Insert into SMTPARAMETERS  values ('MAX_ODDAYS_ADDDISB','Max OD days for add disbursement','int',1,'30',8,0,null,null,'Max OD days for add disbursement',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
	</sql>
</changeSet>
<changeSet id="33" author="Irfan">
		<sql>
			delete from ErrorDetails where code ='ADM003';
			INSERT INTO ErrorDetails VALUES('ADM003','EN','E','Loan Reference {0}:  Overdue days is more than {2} days. so cannot process this record.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		</sql>
</changeSet>

<changeSet id="34" author="Irfan">
		<addColumn tableName="FinODDetails">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="35" author="Irfan">
		<addColumn tableName="FinODDetails_PD">
		<column name="ODRuleCode" type="Varchar2(8)"/>
		</addColumn>
	</changeSet>
	<changeSet id="36" author="Irfan">
		<createView viewName="FinODDetails_View" replaceIfExists="true">
			 SELECT od.finreference,
    od.finodschddate,
    od.finodfor,
    od.finbranch,
    od.fintype,
    od.custid,
    od.finodtilldate,
    od.fincurodamt,
    od.fincurodpri,
    od.fincurodpft,
    od.finmaxodamt,
    od.finmaxodpri,
    od.finmaxodpft,
    od.gracedays,
    od.incgracedays,
    od.fincuroddays,
    od.totpenaltyamt,
    od.totwaived,
    od.totpenaltypaid,
    od.lpiamt,
    od.lpipaid,
    od.lpibal,
    od.totpenaltybal,
    od.finlmdfdate,
    COALESCE(pr.applyodpenalty, 0) AS applyodpenalty,
    COALESCE(pr.odincgrcdays, 0) AS odincgrcdays,
    COALESCE(pr.odchargetype, '') AS odchargetype,
    COALESCE(pr.odgracedays, 0) AS odgracedays,
    COALESCE(pr.odchargecalon, '') AS odchargecalon,
    COALESCE(pr.odchargeamtorperc, 0) AS odchargeamtorperc,
    COALESCE(pr.odallowwaiver, 0) AS odallowwaiver,
    COALESCE(pr.odmaxwaiverperc, 0) AS odmaxwaiverperc,
    COALESCE(pr.odrulecode, '') AS odrulecode
   FROM finoddetails od
     LEFT JOIN finodpenalty_latest_rates_view pr ON od.finreference = pr.finreference
		</createView>
	</changeSet>
	<changeSet id="37" author="Irfan">
		<sql>
			Insert into RBFIELDDETAILS values ('LPPRULE','LPPRULE','fm_finBranch','Loan Branch','nvarchar',8,'0','1','RMTBranches','static,dbvalue','RMTBranches');
			Insert into RBFIELDDETAILS values ('LPPRULE','LPPRULE','fin_ODDays','Overdue Days','bigint',5,'0','1',' ','static,global,calvalue','  ');	
			Insert into RBFIELDDETAILS values ('LPPRULE','LPPRULE','fin_curODAmt','Current OD Amount','Decimal',18,'1','1',null,'static',null);
		</sql>
	</changeSet>
	<changeSet id="38" author="Irfan">
		<sql>
			Insert into SMTPARAMETERS  values ('CANCEL_LOAN_FOR_NODISB','Cancel loan for not add disbursement.','int',1,'30',8,0,null,null,'Cancel loan for not add disbursement.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		</sql>	
	</changeSet>
</databaseChangeLog>