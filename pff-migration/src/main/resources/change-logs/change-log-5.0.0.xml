<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />


	<changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1" author="vijaya.a">
		<comment>commodity file upload</comment>
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE';

				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'COLLETARAL_VALUE_UPDATE', 'Colletaral value update', 12, 'Colletaral', NULL, NULL, NULL , 0, 0, NULL, 'HSNCode,  CurrentValue, CommodityType, Code, Description', '', 'A', 'D:/Colletaral/Values', 'COLLETARAL_', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE'), 'COLLETARAL_VALUES',  0, 'HSNCode', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'HSNCode', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');
  				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'CurrentValue', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'CommodityType', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'Code', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'Description', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');

				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="2" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities" columnNames="HSNCode" />
	</changeSet>

	<changeSet id="2.1" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities_Temp" columnNames="HSNCode" />
	</changeSet>

	<changeSet id="2.2" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities" columnNames="CommodityType, Code, HSNCode" />
	</changeSet>

	<changeSet id="2.3" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities_Temp" columnNames="CommodityType, Code, HSNCode" />
	</changeSet>

	<changeSet id="1.1" author="vijaya.a">
		<dropDefaultValue columnName="Active" tableName="Commodities" />
		<dropDefaultValue columnName="Active" tableName="Commodities_temp" />
		<dropView viewName="COMMODITIES_VIEW" />
		<dropView viewName="COMMODITIES_AVIEW" />
		<dropColumn tableName="Commodities" columnName="Active" />
		<dropColumn tableName="Commodities_temp" columnName="Active" />
		<dropColumn tableName="Commodities" columnName="Version" />
		<dropColumn tableName="Commodities_temp" columnName="Version" />
		<dropColumn tableName="Commodities" columnName="LastMntBy" />
		<dropColumn tableName="Commodities_temp" columnName="LastMntBy" />
		<dropColumn tableName="Commodities" columnName="LastMntOn" />
		<dropColumn tableName="Commodities_temp" columnName="LastMntOn" />
		<dropColumn tableName="Commodities" columnName="RecordStatus" />
		<dropColumn tableName="Commodities_temp" columnName="RecordStatus" />
		<dropColumn tableName="Commodities" columnName="RoleCode" />
		<dropColumn tableName="Commodities_temp" columnName="RoleCode" />
		<dropColumn tableName="Commodities" columnName="NextRoleCode" />
		<dropColumn tableName="Commodities_temp" columnName="NextRoleCode" />
		<dropColumn tableName="Commodities" columnName="TaskId" />
		<dropColumn tableName="Commodities_temp" columnName="TaskId" />
		<dropColumn tableName="Commodities" columnName="NextTaskId" />
		<dropColumn tableName="Commodities_temp" columnName="NextTaskId" />
		<dropColumn tableName="Commodities" columnName="RecordType" />
		<dropColumn tableName="Commodities_temp" columnName="RecordType" />
		<dropColumn tableName="Commodities" columnName="WorkflowId" />
		<dropColumn tableName="Commodities_temp" columnName="WorkflowId" />
	</changeSet>

	<changeSet id="3" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_AlertToRoles','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_AlertsRequired','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_UserTemplate','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_CustomerTemplate','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_AlertType','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_AlertToRoles'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_AlertsRequired'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_UserTemplate'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_CustomerTemplate'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_AlertType'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="4" author="shinde.b">
		<addColumn tableName="Commodities">
			<column name="AlertsRequired" type="boolean" defaultValue="0">
				<constraints nullable="false" />
			</column>
			<column name="AlertType" type="varchar(10)" />
			<column name="AlertToRoles" type="varchar(1000)" />
			<column name="UserTemplate" type="bigint" />
			<column name="CustomerTemplate" type="bigint" />
			<column name="Active" type="boolean" defaultValue="1">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="4.1" author="shinde.b">
		<addColumn tableName="Commodities_temp">
			<column name="AlertsRequired" type="boolean" defaultValue="0">
				<constraints nullable="false" />
			</column>
			<column name="AlertType" type="varchar(10)" />
			<column name="AlertToRoles" type="varchar(1000)" />
			<column name="UserTemplate" type="bigint" />
			<column name="CustomerTemplate" type="bigint" />
			<column name="Active" type="boolean" defaultValue="1">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="4.2" author="shinde.b">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITIES_VIEW" replaceIfExists="true">
			  SELECT t1.id,
    			t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t1.alertsRequired,
    			t1.alertType,
    			t1.alertToRoles,
    			t1.UserTemplate,
    			T3.TemplateCode UserTemplateCode,
			  	T3.TemplateDesc UserTemplateName,
    			t1.CustomerTemplate,
    			T4.TemplateCode CustomerTemplateCode,
			  	T4.TemplateDesc CustomerTemplateName,
    			t2.unittype,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities_temp t1
     		  LEFT JOIN commodity_types t2 ON t2.id = t1.commoditytype
     		  LEFT JOIN TEMPLATES T3 ON T3.TemplateId = T1.UserTemplate
			  LEFT JOIN TEMPLATES T4 ON T4.TemplateId = T1.CustomerTemplate
			  UNION ALL
 			  SELECT t1.id,
 				t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t1.alertsRequired,
    			t1.alertType,
    			t1.alertToRoles,
    			t1.UserTemplate,
    			T3.TemplateCode UserTemplateCode,
			  	T3.TemplateDesc UserTemplateName,
    			t1.CustomerTemplate,
    			T4.TemplateCode CustomerTemplateCode,
			  	T4.TemplateDesc CustomerTemplateName,
    			t2.unittype,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,	
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities t1
     		  LEFT JOIN commodity_types t2 ON t2.id = t1.commoditytype
     		  LEFT JOIN TEMPLATES T3 ON T3.TemplateId = T1.UserTemplate
			  LEFT JOIN TEMPLATES T4 ON T4.TemplateId = T1.CustomerTemplate
  			  WHERE NOT (EXISTS ( SELECT 1
              FROM commodities_temp
              WHERE commodities_temp.id = t1.id))
		</createView>
	</changeSet>

	<changeSet id="4.3" author="shinde.b">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITIES_AVIEW" replaceIfExists="true">
			  SELECT t1.id,
 				t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t1.alertsRequired,
    			t1.alertType,
    			t1.alertToRoles,
    			t1.UserTemplate,
    			T3.TemplateCode UserTemplateCode,
			  	T3.TemplateDesc UserTemplateName,
    			t1.CustomerTemplate,
    			T4.TemplateCode CustomerTemplateCode,
			  	T4.TemplateDesc CustomerTemplateName,
    			t2.unittype,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities t1
     		  JOIN commodity_types t2 ON t2.id = t1.commoditytype
     		  LEFT JOIN TEMPLATES T3 ON T3.TemplateId = T1.UserTemplate
			  LEFT JOIN TEMPLATES T4 ON T4.TemplateId = T1.CustomerTemplate
		</createView>
	</changeSet>

	<changeSet id="4.4" author="shinde.b">
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_USER_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities" baseColumnNames="UserTemplate" />
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_CUST_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities" baseColumnNames="CustomerTemplate" />
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_T_USER_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities_temp" baseColumnNames="UserTemplate" />
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_T_CUST_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities_temp" baseColumnNames="CustomerTemplate" />
	</changeSet>

	<changeSet id="5.0" author="VijayKumar.L ">
		<comment> Included finrefernce from finfeedetail table </comment>
		<createView viewName="finfeereceipts_view" replaceIfExists="true">
			  SELECT t1.id,
			    t1.feeid,
			    t1.receiptid,
			    t1.paidamount,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.amount AS receiptamount,
			    t2.transactionref,
			    t2.favournumber,
			    t3.feetypeid,
			    t3.vasreference,
			    t4.feetypecode,
			    t4.feetypedesc,
			    t3.finreference,
			    t5.receiptmode AS receipttype
			   FROM finfeereceipts_temp t1
			     JOIN finreceiptdetail t2 ON t1.receiptid = t2.receiptid
			     JOIN finfeedetail_temp t3 ON t1.feeid = t3.feeid
			     LEFT JOIN feetypes t4 ON t3.feetypeid = t4.feetypeid
			     JOIN finreceiptheader t5 ON t1.receiptid = t5.receiptid
			UNION ALL
			 SELECT t1.id,
			    t1.feeid,
			    t1.receiptid,
			    t1.paidamount,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.amount AS receiptamount,
			    t2.transactionref,
			    t2.favournumber,
			    t3.feetypeid,
			    t3.vasreference,
			    t4.feetypecode,
			    t4.feetypedesc,
			    t3.finreference,
			    t5.receiptmode AS receipttype
			   FROM finfeereceipts t1
			     JOIN finreceiptdetail t2 ON t1.receiptid = t2.receiptid
			     JOIN finfeedetail t3 ON t1.feeid = t3.feeid
			     LEFT JOIN feetypes t4 ON t3.feetypeid = t4.feetypeid
			     JOIN finreceiptheader t5 ON t1.receiptid = t5.receiptid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM finfeereceipts_temp
			          WHERE finfeereceipts_temp.id = t1.id))
		</createView>
	</changeSet>

	<changeSet id="6" author="Shinde.b">
		<sql>
			<![CDATA[
				DELETE FROM TEMPLATEFIELDS WHERE EVENT = 'CollateralLTVBreachs';
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'fm_finReference', 'Loan Reference Number', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'fm_finType', 'Loan Type', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'fm_lovDescFinTypeName', 'Loan Type Description', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'ct_custShrtName', 'Customer Name', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_type', 'Commodity Type', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_collateralRef', 'Collateral Reference', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_callateralValue', 'Collateral Value', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_bankLtv', 'Bank LTV', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_collateralType', 'Collateral Type', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_outStandingPrincipal', 'Principle OutStanding', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_bankValuation', 'Bank Valuation', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_thresholdLtv', 'Threshold LTV', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_valueDate', 'Value Date', 'A', 'CollateralLTVBreachs');
			]]>
		</sql>
	</changeSet>

	<changeSet id="7" author="shinde.b">
		<createTable tableName="COLLATERAL_LTV_BREACHES">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_COLLATERAL_LTV_BREACHES_ID" />
			</column>
			<column name="BatchId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="CollateralType" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="CollateralRef" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Collateralccy" type="char(3)">
				<constraints nullable="false" />
			</column>
			<column name="MarketValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="UnitPrice" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="NoOfUnits" type="int">
				<constraints nullable="false" />
			</column>
			<column name="CollateralValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentCollateralValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="BankLTV" type="decimal(5,2)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentBankLTV" type="decimal(5,2)">
				<constraints nullable="false" />
			</column>
			<column name="BankValuation" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentBankValuation" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="ThresholdLTV" type="decimal(5,2)">
				<constraints nullable="false" />
			</column>
			<column name="Pos" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="CommodityId" type="bigint" />
			<column name="ValueDate" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="SendAlert" type="boolean">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="7.1" author="shinde.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_CURRENTBANKLTV DEFAULT 0 FOR CURRENTBANKLTV;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_UNITPRICE DEFAULT 0 FOR UNITPRICE;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_NOOFUNITS DEFAULT 0 FOR NOOFUNITS;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_CURRENTCOLLATERALVALUE DEFAULT 0 FOR CURRENTCOLLATERALVALUE;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_CURRENTBANKVALUATION DEFAULT 0 FOR CURRENTBANKVALUATION;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_SENDALERT DEFAULT 0 FOR SENDALERT;
			]]>
		</sql>
	</changeSet>

	<changeSet id="7.1" author="shinde.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="CURRENTBANKLTV" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="UNITPRICE" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="NOOFUNITS" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="CURRENTCOLLATERALVALUE" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="CURRENTBANKVALUATION" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="SENDALERT" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
	</changeSet>

	<changeSet id="7.2" author="shinde.b">
		<createIndex tableName="COLLATERAL_LTV_BREACHES" indexName="IDX_BATCH_CA_LTV_BR_BID_SA">
			<column name="BatchId" />
			<column name="SendAlert" />
		</createIndex>
	</changeSet>

	<changeSet id="8" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				Delete from reportlist where code = 'Commodity';
				INSERT INTO ReportList VALUES ('Commodity', 'Commodity', 'listheader_CommodityType.label,listheader_Code.label,listheader_CurrentValue.label,listheader_Description.label,listheader_HSNCode.label,listheader_Active.label',  'CommodityTypeCode,Code,CurrentValue,Description,HSNCode,Active', 'String,String,BigDecimal,String,String,String', ' ', 'ReportList06', 'Commodities', 'Application Masters', 1, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0, 0); 
			]]>
		</sql>
	</changeSet>

	<changeSet id="9" author="vijaya.a">
		<comment>commodity file upload</comment>
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE';

				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'COLLETARAL_VALUE_UPDATE', 'Colletaral value update', 12, 'Colletaral', NULL, NULL, NULL , 0, 0, NULL, 'CommodityTypeCode,  Code, Description, CurrentValue, HSNCode, Active',  '', 'C', '/opt/SPFinance/PFF/Colletaral', 'COLLETARAL_', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE'), 'COLLETARAL_VALUES',  0, 'HSNCode', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'CommodityTypeCode', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'Code', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'Description', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'CurrentValue', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'HSNCode', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');
				
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="10" author="aditya.a">
		<comment>New column added for Account Types</comment>
		<sql>
			INSERT INTO SecRights Values ((select max(RightId)+1 from
			SecRights),3,'AccountTypeDialog_isControlAc','AccountTypeDialog',1,1000,current_timestamp,'Approved','',' ','',' ','
			',0);
		</sql>
	</changeSet>

	<changeSet id="11" author="aditya.a">
		<comment>New column added for Account Types</comment>
		<addColumn tableName="rmtaccounttypes">
			<column name="ControlAc" type="boolean" defaultValueBoolean="false" />
		</addColumn>
	</changeSet>

	<changeSet id="12" author="aditya.a">
		<comment>New column added for Account Types</comment>
		<addColumn tableName="rmtaccounttypes_temp">
			<column name="ControlAc" type="boolean" defaultValueBoolean="false" />
		</addColumn>
	</changeSet>

	<changeSet id="13" author="aditya.a">
		<createView viewName="rmtaccounttypes_aview" replaceIfExists="true">
 SELECT t1.actype,
    t1.actypedesc,
    t1.acpurpose,
    t1.acheadcode,
    t1.internalac,
    t1.custsysac,
    t1.controlac,
    t1.aclmtcategory,
    t1.actypeisactive,
    t1.profitcenterid,
    t1.costcenterid,
    t1.taxapplicable,
    t1.accaddlvar1,
    t1.accaddlvar2,
    t1.accaddlchar1,
    t1.accaddlvar3,
    t1.accaddlvar4,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.assertorliability,
    t1.onbalancesheet,
    t1.allowoverdraw,
    t1.actypegrpid,
    t1.extractiontype,
    t2.groupcode,
    t2.groupdescription,
    t2.accttypelevel,
    t3.costcentercode,
    t3.costcenterdesc,
    t4.profitcentercode,
    t4.profitcenterdesc
   FROM rmtaccounttypes t1
     LEFT JOIN accounttypegroup t2 ON t1.actypegrpid = t2.groupid
     LEFT JOIN costcenters t3 ON t1.costcenterid = t3.costcenterid
     JOIN profitcenters t4 ON t1.profitcenterid = t4.profitcenterid
</createView>
	</changeSet>

	<changeSet id="14" author="aditya.a">
		<createView viewName="rmtaccounttypes_view" replaceIfExists="true">
 SELECT t1.actype,
    t1.actypedesc,
    t1.acpurpose,
    t1.acheadcode,
    t1.internalac,
    t1.custsysac,
    t1.controlac,
    t1.aclmtcategory,
    t1.actypeisactive,
    t1.profitcenterid,
    t1.costcenterid,
    t1.taxapplicable,
    t1.accaddlvar1,
    t1.accaddlvar2,
    t1.accaddlchar1,
    t1.accaddlvar3,
    t1.accaddlvar4,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.assertorliability,
    t1.onbalancesheet,
    t1.allowoverdraw,
    t1.actypegrpid,
    t1.extractiontype,
    t2.groupcode,
    t2.groupdescription,
    t2.accttypelevel,
    t3.costcentercode,
    t3.costcenterdesc,
    t4.profitcentercode,
    t4.profitcenterdesc
   FROM rmtaccounttypes_temp t1
     LEFT JOIN accounttypegroup t2 ON t1.actypegrpid = t2.groupid
     LEFT JOIN costcenters t3 ON t1.costcenterid = t3.costcenterid
     JOIN profitcenters t4 ON t1.profitcenterid = t4.profitcenterid
UNION ALL
 SELECT t1.actype,
    t1.actypedesc,
    t1.acpurpose,
    t1.acheadcode,
    t1.internalac,
    t1.custsysac,
    t1.controlac,
    t1.aclmtcategory,
    t1.actypeisactive,
    t1.profitcenterid,
    t1.costcenterid,
    t1.taxapplicable,
    t1.accaddlvar1,
    t1.accaddlvar2,
    t1.accaddlchar1,
    t1.accaddlvar3,
    t1.accaddlvar4,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.assertorliability,
    t1.onbalancesheet,
    t1.allowoverdraw,
    t1.actypegrpid,
    t1.extractiontype,
    t2.groupcode,
    t2.groupdescription,
    t2.accttypelevel,
    t3.costcentercode,
    t3.costcenterdesc,
    t4.profitcentercode,
    t4.profitcenterdesc
   FROM rmtaccounttypes t1
     LEFT JOIN accounttypegroup t2 ON t1.actypegrpid = t2.groupid
     LEFT JOIN costcenters t3 ON t1.costcenterid = t3.costcenterid
     JOIN profitcenters t4 ON t1.profitcenterid = t4.profitcenterid
  WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM rmtaccounttypes_temp
          WHERE rmtaccounttypes_temp.actype = t1.actype))
</createView>
	</changeSet>

	<changeSet id="15_pre" author="aditya.a">
		<sql>
			<![CDATA[
				UPDATE RMTAccountTypes SET ControlAc = 0 where ControlAc is null;
				UPDATE RMTAccountTypes_temp SET ControlAc = 0 where ControlAc is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="16" author="satyanarayana.g">
		<createView viewName="RMTFINANCETYPES_ORGVIEW" replaceIfExists="true">
 	 		SELECT T1.FINTYPE,
					T1.FINCATEGORY,
					T1.FINTYPEDESC,
					T1.FINCCY,
					T1.FINDAYSCALTYPE,
					T1.FINACTYPE,
					T1.FINCONTINGENTACTYPE,
					T1.FINISGENREF,
					T1.FINMAXAMOUNT,
					T1.FINMINAMOUNT,
					T1.FINISOPENNEWFINAC,
					T1.FINISALWMD,
					T1.FINSCHDMTHD,
					T1.FINISALWGRACE,
					T1.EQUALREPAYMENT,
					T1.FINRATETYPE,
					T1.FINBASERATE,
					T1.FINSPLRATE,
					T1.FININTRATE,
					T1.FINMINRATE,
					T1.FINMAXRATE,
					T1.FINDFTINTFRQ,
					T1.FINISINTCPZ,
					T1.FINCPZFRQ,
					T1.FINISRVWALW,
					T1.FINRVWFRQ,
					T1.FINGRCRATETYPE,
					T1.FINGRCBASERATE,
					T1.FINGRCSPLRATE,
					T1.FINGRCINTRATE,
					T1.FINGRCMINRATE,
					T1.FINGRCMAXRATE,
					T1.FINGRCDFTINTFRQ,
					T1.FINGRCISINTCPZ,
					T1.FINGRCCPZFRQ,
					T1.FINGRCISRVWALW,
					T1.FINGRCRVWFRQ,
					T1.FINMINTERM,
					T1.FINMAXTERM,
					T1.FINDFTTERMS,
					T1.FINRPYFRQ,
					T1.FINREPAYMETHOD,
					T1.FINISALWDIFFERMENT,
					T1.FINMAXDIFFERMENT,
					T1.FINISACTIVE,
					T1.STEPFINANCE,
					T1.STEPPINGMANDATORY,
					T1.ALWMANUALSTEPS,
					T1.ALWDSTEPPOLICIES,
					T1.DFTSTEPPOLICY,
					T1.FINISDWPAYREQUIRED,
					T1.FINRVWRATEAPPLFOR,
					T1.FINALWRATECHANGEANYDATE,
					T1.FINISINTCPZATGRCEND,
					T1.FINSCHCALCODEONRVW,
					T1.ALWPLANDEFERMENT,
					T1.PLANDEFERCOUNT,
					T1.PFTPAYACTYPE,
					T1.FINISOPENPFTPAYACC,
					T1.FINISALWGRCREPAY,
					T1.FINGRCSCHDMTHD,
					T1.FINGRCMARGIN,
					T1.FINMARGIN,
					T1.FINCOMMITMENTREQ,
					T1.FINCOLLATERALREQ,
					T1.FINDEPRECIATIONREQ,
					T1.FINDEPRECIATIONFRQ,
					T1.FINBANKCONTINGENTACTYPE,
					T1.FINPROVISIONACTYPE,
					T1.ALLOWRIAINVESTMENT,
					T1.OVERRIDELIMIT,
					T1.LIMITREQUIRED,
					T1.FINCOMMITMENTOVRRIDE,
					T1.FINCOLLATERALOVRRIDE,
					T1.FINREPAYPFTONFRQ,
					T1.FINPFTUNCHANGED,
					T1.APPLYODPENALTY,
					T1.ODINCGRCDAYS,
					T1.ODCHARGETYPE,
					T1.ODGRACEDAYS,
					T1.ODCHARGECALON,
					T1.ODCHARGEAMTORPERC,
					T1.ODALLOWWAIVER,
					T1.ODMAXWAIVERPERC,
					T1.FINDIVISION,
					T3.DIVISIONCODEDESC AS LOVDESCFINDIVISIONNAME,
					T1.FINSUSPACTYPE,
					T1.PRODUCT,
					T1.STARTDATE,
					T1.ENDDATE,
					T1.ALLOWDOWNPAYPGM,
					T1.FINTYPEDESC AS LOVDESCPROMOFINTYPEDESC,
					T1.REMARKS,
					T4.POLICYDESC AS LOVDESCDFTSTEPPOLICYNAME,
					T1.PASTDUEPFTCALMTHD,
					T1.PASTDUEPFTMARGIN,
					T1.ALWADVANCERENT,
					T1.GRCADVBASERATE,
					T1.GRCADVMARGIN,
					T1.GRCADVPFTRATE,
					T1.RPYADVBASERATE,
					T1.RPYADVMARGIN,
					T1.RPYADVPFTRATE,
					T1.ROLLOVERFINANCE,
					T1.ROLLOVERFRQ,
					T1.DOWNPAYRULE,
					T1.ALWMULTIPARTYDISB,
					T1.COLLATERALTYPE,
					T1.TDSAPPLICABLE,
					T5.RULECODE     AS DOWNPAYRULECODE,
					T5.RULECODEDESC AS DOWNPAYRULEDESC,
					T1.APPLYGRCPRICING,
					T1.APPLYRPYPRICING,
					T6.RULECODE AS GRCPRICINGMETHODDESC,
					T7.RULECODE AS RPYPRICINGMETHODDESC,
					T1.DROPLINEOD,
					T1.DROPPINGMETHOD,
					T1.RATECHGANYDAY,
					T4.STEPTYPE AS DFTSTEPPOLICYTYPE,
					T1.MANUALSCHEDULE,
					T1.ALWBPI,
					T1.BPITREATMENT,
					T1.PFTDUESCHON,
					T1.PLANEMIHALW,
					T1.PLANEMIHMETHOD,
					T1.PLANEMIHMAXPERYEAR,
					T1.PLANEMIHMAX,
					T1.PLANEMIHLOCKPERIOD,
					T1.PLANEMICPZ,
					T1.UNPLANEMIHLOCKPERIOD,
					T1.UNPLANEMICPZ,
					T1.REAGECPZ,
					T1.FDDLOCKPERIOD,
					T1.ALWDRPYMETHODS,
					T1.MAXUNPLANNEDEMI,
					T1.MAXREAGEHOLIDAYS,
					T1.ROUNDINGMODE,
					T1.ROUNDINGTARGET,
					T1.FREQUENCYDAYS,
					T1.QUICKDISB,
					T1.ALWREAGE,
					T1.ALWUNPLANEMIHOLIDAY,
					T1.ALWMAXDISBCHECKREQ,
					T1.PRODUCTCATEGORY,
					T1.RPYHIERARCHY,
					T1.DEVELOPERFINANCE,
					T3.ENTITYCODE AS LOVDESCENTITYCODE,
					T8.ENTITYDESC AS LOVDESCENTITYDESC,
					T1.COSTOFFUNDS,
					T1.CHEQUECAPTUREREQ,
					T1.FINLTVCHECK,
					T1.PARTIALLYSECURED,
					T1.ALWADVEMI,
					T1.ADVEMIMINTERMS,
					T1.ADVEMIMAXTERMS,
					T1.ADVEMIDFTTERMS,
					T1.ADVEMISCHDMTHD,
					T1.BPIPFTDAYSBASIS,
					T1.ELIGIBILITYMETHODS,
					T1.ALWHYBRIDRATE,
					T1.FIXEDRATETENOR,
					T1.ODMINCAPAMOUNT,
					T1.ODRULECODE,
					T1.ALWZEROINTACC,
					T1.FINISALWPARTIALRPY,
					T1.AUTOREJECTIONDAYS,
					T1.TAXNOMAND,
					T1.PUTCALLREQUIRED,
					T1.GRCADVINTERSETREQ,
					T1.GRCADVTYPE,
					T1.GRCADVMINTERMS,
					T1.GRCADVMAXTERMS,
					T1.GRCADVDEFAULTTERMS,
					T1.ADVINTERSETREQ,
					T1.ADVTYPE,
					T1.ADVMINTERMS,
					T1.ADVMAXTERMS,
					T1.ADVDEFAULTTERMS,
					T1.ADVSTAGE,
					T1.DSFREQ,
					T1.CASHCOLLATERALREQ,
					T1.ALWEARLYPAYMETHODS
					FROM RMTFINANCETYPES T1
					JOIN SMTDIVISIONDETAIL T3 ON T1.FINDIVISION = T3.DIVISIONCODE
					LEFT JOIN STEPPOLICYHEADER T4 ON T1.DFTSTEPPOLICY = T4.POLICYCODE
					LEFT JOIN RULES T5 ON T1.DOWNPAYRULE = T5.RULEID
					LEFT JOIN RULES T6 ON T1.GRCPRICINGMETHOD = T6.RULEID
					LEFT JOIN RULES T7 ON T1.RPYPRICINGMETHOD = T7.RULEID
					LEFT JOIN ENTITY T8 ON T3.ENTITYCODE = T8.ENTITYCODE
 	 	</createView>
	</changeSet>

	<changeSet id="17" author="vijaya.a">
		<sql>
			<![CDATA[
				Update DATA_ENGINE_CONFIG set SKIPHEADERROW = 1 where NAME = 'COLLETARAL_VALUE_UPDATE';
			]]>
		</sql>
	</changeSet>
	<changeSet id="17" author="saikiran.v">
		<addColumn tableName="fintaxdetail">
			<column name="sezCertificateNo" type="varchar(20)" />
			<column name="sezValueDate" type="datetime" />
		</addColumn>
	</changeSet>
	<changeSet id="18" author="saikiran.v">
		<addColumn tableName="Fintaxdetail_Temp">
			<column name="sezCertificateNo" type="varchar(20)" />
			<column name="sezValueDate" type="datetime" />
		</addColumn>
	</changeSet>
	<changeSet id="19" author="saikiran.v">
		<createView viewName="fintaxdetail_aview" replaceIfExists="true">
			SELECT t1.finreference,
		    t1.applicablefor,
		    t1.taxcustid,
		    t1.taxexempted,
		    t1.taxnumber,
		    t1.addrline1,
		    t1.addrline2,
		    t1.addrline3,
		    t1.addrline4,
		    t1.country,
		    t1.province,
		    t1.city,
		    t1.pincode,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.countrydesc countryname,
		    t3.cpprovincename provincename,
		    t4.pccityname cityname,
		    t5.areaname pincodename,
		    t6.custcif,
		    t6.custshrtname,
		     t1.sezCertificateNo ,
			t1.sezValueDate
		   FROM fintaxdetail t1
		     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
		     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
		     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
		     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
		     INNER JOIN customers t6 ON t1.taxcustid = t6.custid
	 </createView>
	</changeSet>
	<changeSet id="20" author="saikiran.v">
		<createView viewName="fintaxdetail_tview" replaceIfExists="true">
				 SELECT t1.finreference,
			    t1.applicablefor,
			    t1.taxcustid,
			    t1.taxexempted,
			    t1.taxnumber,
			    t1.addrline1,
			    t1.addrline2,
			    t1.addrline3,
			    t1.addrline4,
			    t1.country,
			    t1.province,
			    t1.city,
			    t1.pincode,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.countrydesc countryname,
			    t3.cpprovincename provincename,
			    t4.pccityname  cityname,
			    t5.areaname pincodename,
			    t6.custcif,
			    t6.custshrtname,
		    	t1.sezCertificateNo ,
				t1.sezValueDate
			   FROM fintaxdetail_temp t1
			     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
			     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
			     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
			     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
			     JOIN customers t6 ON t1.taxcustid = t6.custid
		</createView>
	</changeSet>
	<changeSet id="21" author="saikiran.v">
		<createView viewName="fintaxdetail_view" replaceIfExists="true">
					SELECT t1.finreference,
				    t1.applicablefor,
				    t1.taxcustid,
				    t1.taxexempted,
				    t1.taxnumber,
				    t1.addrline1,
				    t1.addrline2,
				    t1.addrline3,
				    t1.addrline4,
				    t1.country,
				    t1.province,
				    t1.city,
				    t1.pincode,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.countrydesc countryname,
				    t3.cpprovincename provincename,
				    t4.pccityname cityname,
				    t5.areaname pincodename,
				    t6.custcif,
				    t6.custshrtname,
				    t1.sezCertificateNo ,
			     	t1.sezValueDate
				   FROM fintaxdetail_temp t1
				     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
				     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
				     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
				     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
				     INNER JOIN customers t6 ON t1.taxcustid = t6.custid
				UNION ALL
				 SELECT t1.finreference,
				    t1.applicablefor,
				    t1.taxcustid,
				    t1.taxexempted,
				    t1.taxnumber,
				    t1.addrline1,
				    t1.addrline2,
				    t1.addrline3,
				    t1.addrline4,
				    t1.country,
				    t1.province,
				    t1.city,
				    t1.pincode,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.countrydesc countryname,
				    t3.cpprovincename provincename,
				    t4.pccityname cityname,
				    t5.areaname pincodename,
				    t6.custcif,
				    t6.custshrtname,
				    t1.sezCertificateNo,
			     	t1.sezValueDate
				   FROM fintaxdetail t1
				     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
				     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
				     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
				     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
				     INNER JOIN customers t6 ON t1.taxcustid = t6.custid
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM fintaxdetail_temp
				          WHERE fintaxdetail_temp.finreference = t1.finreference))
		</createView>
	</changeSet>
	<changeSet id="22" author="saikiran.v">
		<sql>
			<![CDATA[
				INSERT INTO SecGroups SELECT (select (SeqNo+1) from SeqSecGroups), 'FinanceTaxDetailDialog', 'Finance Tax Detail Dialog', 0,1000,'2017-01-03 12:41:37','Approved',NULL,NULL,NULL,NULL,NULL,0 FROM SeqSecGroups WHERE 0=0;
							
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'FinanceTaxDetailDialog_SEZCertificateNumber','FinanceTaxDetailDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'FinanceTaxDetailDialog_SEZValueDatee','FinanceTaxDetailDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FinanceTaxDetailDialog'), (Select RightID from SecRights where RightName = 'FinanceTaxDetailDialog_SEZCertificateNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FinanceTaxDetailDialog'), (Select RightID from SecRights where RightName = 'FinanceTaxDetailDialog_SEZValueDatee'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="17.1" author="shinde.b">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				
				INSERT INTO SecGroups Values ((Select max(GrpID)+1 From SecGroups), 'LTV_BREACHES_REPORTS', 'Group for LTV Reports', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menu_Item_LTVBreachReport', 'MENU', 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LTV_BREACHES_REPORTS'), (Select RightID from SecRights where RightName = 'menu_Item_LTVBreachReport'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
			]]>
		</sql>
	</changeSet>

	<changeSet id="24" author="shinde.b">
		<sql>
			<![CDATA[
			     delete from REPORTFILTERFIELDS where reportid in (select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_LTVBreachReport');
	             delete from REPORTCONFIGURATION where menuitemcode='menu_Item_LTVBreachReport';
	
                 Insert into REPORTCONFIGURATION values ((Select MAX(reportid)+1 from reportconfiguration),'Excel:LTV Breach Report','LTV Breach Report',1,'LTVBreachReport','Datasource',1,'menu_Item_LTVBreachReport',1,1000,null,null,null,null,null,null,0,current_timestamp,0,1);
                 Insert into REPORTFILTERFIELDS values ((select reportid from reportconfiguration where menuitemcode ='menu_Item_LTVBreachReport'),1,'FinType','LOVSEARCH','Loan Type','fm.FinType',null,'FinanceType','getFinType','getFinTypeDesc',1,0,0,0,1,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
                 Insert into REPORTFILTERFIELDS values ((select reportid from reportconfiguration where menuitemcode ='menu_Item_LTVBreachReport'),2,'CustCIF','LOVSEARCH','Customer Number','cus.CustCIF',null,'Customer','getCustCIF','getCustShrtName',1,0,0,0,2,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			]]>
		</sql>
	</changeSet>

	<changeSet id="24.1" author="shinde.b">
		<sql>
		<![CDATA[
		    UPDATE REPORTCONFIGURATION SET DATASOURCENAME='dataSource' WHERE REPORTID=(select reportid from reportconfiguration where menuitemcode ='menu_Item_LTVBreachReport');
	     ]]>
		</sql>
	</changeSet>

	<changeSet id="25.0" author="satyanarayana.g">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='ADD_DISB_DUES_WARNG';
			   	INSERT INTO SMTPARAMETERS VALUES ('ADD_DISB_DUES_WARNG', 'Add Disbursement Dues Warning', 'String', 1, 'N', 1, 0, NULL, NULL,'Add Disbursement Dues Warning', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="26" author="Saikiran.V">
		<sql>
			<![CDATA[
				delete from TEMPLATEFIELDS where FIELD='rc_effectiveDate';
				Insert into TEMPLATEFIELDS (MODULE,FIELD,FIELDDESC,FIELDFORMAT,EVENT) values ('FIN','rc_effectiveDate','Effective Date','A','AddRateChange');
				delete from TEMPLATEFIELDS where FIELD='rc_finReference';
				Insert into TEMPLATEFIELDS (MODULE,FIELD,FIELDDESC,FIELDFORMAT,EVENT) values ('FIN','rc_finReference','Loan Account Number','A','AddRateChange');
				delete from TEMPLATEFIELDS where FIELD='rc_oldRate';
				Insert into TEMPLATEFIELDS (MODULE,FIELD,FIELDDESC,FIELDFORMAT,EVENT) values ('FIN','rc_oldRate','Old Interest Rate','A','AddRateChange');
				delete from TEMPLATEFIELDS where FIELD='rc_newRate';
				Insert into TEMPLATEFIELDS (MODULE,FIELD,FIELDDESC,FIELDFORMAT,EVENT) values ('FIN','rc_newRate','Old Interest Rate','A','AddRateChange');
			]]>
		</sql>
	</changeSet>

	<changeSet id="27" author="DurgaPrasad.G">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='ALLOW_AMT_FLD_INTEGRAL_PART_DEF_VAL_ZERO';
				INSERT INTO SMTPARAMETERS VALUES ('ALLOW_AMT_FLD_INTEGRAL_PART_DEF_VAL_ZERO', 'Amount field integral part default value requires zero or not', 'String', 1, 'N', 1, 0, NULL, NULL,'Amount field integral part default value requires zero or not', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="28_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'extendedfielddetail');
				select deps_save_and_drop_dependencies ('plf', 'extendedfielddetail_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="28" author="DurgaPrasad.G">
		<modifyDataType tableName="EXTENDEDFIELDDETAIL" columnName="FIELDDEFAULTVALUE" newDataType="varchar(200)" />
		<modifyDataType tableName="EXTENDEDFIELDDETAIL_TEMP" columnName="FIELDDEFAULTVALUE" newDataType="varchar(200)" />
	</changeSet>

	<changeSet id="28_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'extendedfielddetail');
				select deps_restore_dependencies ('plf', 'extendedfielddetail_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="27" author="Saikiran.v">
		<createTable tableName="LMSServiceLog">
			<column name="Event" type="varchar(50)" />
			<column name="FinReference" type="varchar(20)" />
			<column name="OldRate" type="decimal(13,9)" />
			<column name="NewRate" type="decimal(13,9)" />
			<column name="EffectiveDate" type="datetime" />
			<column name="NotificationFlag" type="varchar(1)" />
		</createTable>
	</changeSet>

	<changeSet id="28" author="Saikiran.v">
		<sql>
			<![CDATA[
			   DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='LMS_SERVICE_LOG_REQ';
			   INSERT INTO SMTPARAMETERS VALUES ('LMS_SERVICE_LOG_REQ', 'LMS Service log required or not.', 'String', 1, 'N', 1, 0, NULL, NULL,'LMS Service log required or not.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="29" author="Saikiran.v">
		<sql>
		<![CDATA[
			delete from TEMPLATEFIELDS where FIELD='rc_newRate';
			Insert into TEMPLATEFIELDS (MODULE, FIELD, FIELDDESC, FIELDFORMAT, EVENT) values ('FIN', 'rc_newRate', 'New Interest Rate', 'A', 'AddRateChange');
		]]>
		</sql>
	</changeSet>

	<changeSet id="29.1" author="Saikiran.v">
		<addColumn tableName="LMSServiceLog">
			<column name="id" type="bigint">
				<constraints primaryKeyName="LMSServiceLog_id" primaryKey="true" nullable="false" />
			</column>
		</addColumn>
	</changeSet>

	<changeSet id="30" author="Saikiran.v">
		<createSequence sequenceName="seqLMSServiceLog" />
	</changeSet>

	<changeSet id="29" author="satyanarayana.g">
		<addColumn tableName="LIMITHEADER">
			<column name="ValidateMaturityDate" type="boolean" />
		</addColumn>

		<addColumn tableName="LIMITHEADER_TEMP">
			<column name="ValidateMaturityDate" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="29.1" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE LIMITHEADER set VALIDATEMATURITYDATE =0 where VALIDATEMATURITYDATE is null;
				UPDATE LIMITHEADER_TEMP set VALIDATEMATURITYDATE =0 where VALIDATEMATURITYDATE is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="29.2" author="satyanarayana.g" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE LIMITHEADER ADD CONSTRAINT DF_LIMITHEADER_VALIDATEMATURITYDATE DEFAULT 0 FOR VALIDATEMATURITYDATE;
				ALTER TABLE LIMITHEADER_TEMP ADD CONSTRAINT DF_LIMITHEADER_TEMP_VALIDATEMATURITYDATE DEFAULT 0 FOR VALIDATEMATURITYDATE;
			]]>
		</sql>
	</changeSet>

	<changeSet id="29.3" author="satyanarayana.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="VALIDATEMATURITYDATE" tableName="LIMITHEADER" defaultValue="0" />
		<addDefaultValue columnName="VALIDATEMATURITYDATE" tableName="LIMITHEADER_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="30" author="satyanarayana.g">
		<createView viewName="LIMITHEADER_VIEW" replaceIfExists="true">
      		SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE
					FROM LIMITHEADER_TEMP T1
					JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
					LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
					LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
					LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
					LEFT JOIN RMTBRANCHES T9  ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
					LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
					UNION ALL
					SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE
					FROM LIMITHEADER T1
					JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
					LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
					LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
					LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
					LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
					LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
					WHERE NOT (EXISTS
					(SELECT 1 FROM LIMITHEADER_TEMP
					WHERE LIMITHEADER_TEMP.HEADERID = T1.HEADERID
					))
      	</createView>
	</changeSet>

	<changeSet id="31" author="satyanarayana.g">
		<createView viewName="LIMITHEADER_TVIEW" replaceIfExists="true">
      		SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE
					FROM LIMITHEADER_TEMP T1
					JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
					LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
					LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
					LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
					LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
					LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
      	</createView>
	</changeSet>

	<changeSet id="32" author="satyanarayana.g">
		<createView viewName="LIMITHEADER_AVIEW" replaceIfExists="true">
      		SELECT T1.HEADERID,
				    T1.RULECODE,
				    T1.RULEVALUE,
				    T8.QUERYDESC,
				    T1.CUSTOMERGROUP,
				    T3.CUSTGRPCODE,
				    T3.CUSTGRPDESC AS GROUPNAME,
				    T3.CUSTGRPRO1,
				    T1.CUSTOMERID,
				    T4.CUSTCIF,
				    T4.CUSTSHRTNAME,
				    T4.CUSTFNAME,
				    T4.CUSTMNAME,
				    T4.CUSTLNAME AS CUSTFULLNAME,
				    T4.CUSTCOREBANK,
				    T4.CUSTSALUTATIONCODE,
				    T4.CUSTDFTBRANCH,
				    T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
				    T1.RESPONSIBLEBRANCH,
				    T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
				    T1.LIMITCCY,
				    T1.LIMITEXPIRYDATE,
				    T1.LIMITRVWDATE,
				    T1.LIMITSTRUCTURECODE,
				    T6.STRUCTURENAME,
				    T6.SHOWLIMITSIN,
				    T1.LIMITSETUPREMARKS,
				    T1.REBUILD,
				    T1.ACTIVE,
				    T1.VERSION,
				    T1.CREATEDBY,
				    T1.CREATEDON,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T2.USRLOGIN,
				    T2.USRFNAME,
				    T2.USRMNAME,
				    T2.USRLNAME,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.VALIDATEMATURITYDATE
				  FROM LIMITHEADER T1
				  JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
				  LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
				  LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
				  LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
				  LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
				  LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
				  LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
      	</createView>
	</changeSet>

	<changeSet id="33" author="Varaprasad.K">
		<createTable tableName="verification_pd">
			<column name="VerificationId" type="bigint">
				<constraints nullable="false" primaryKey="true" primaryKeyName="pk_verification_pd_verf_id" />
			</column>
			<column name="AgentCode" type="varchar(20)" />
			<column name="AgentName" type="varchar(50)" />
			<column name="Type" type="int" defaultValue="0" />
			<column name="VerifiedDate" type="datetime" />
			<column name="Status" type="int" defaultValue="0" />
			<column name="Reason" type="bigint" />
			<column name="SummaryRemarks" type="varchar(500)" />
			<column name="Version" type="int" defaultValue="0">
				<constraints nullable="false" primaryKey="true" primaryKeyName="df_verfctions_pd_ver" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
			<column name="AddressType" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="Name" type="varchar(200)">
				<constraints nullable="false" />
			</column>
			<column name="HouseNumber" type="varchar(50)" />
			<column name="FlatNumber" type="varchar(50)" />
			<column name="Street" type="varchar(50)" />
			<column name="AddressLine1" type="varchar(50)" />
			<column name="AddressLine2" type="varchar(50)" />
			<column name="AddressLine3" type="varchar(50)" />
			<column name="AddressLine4" type="varchar(50)" />
			<column name="AddressLine5" type="varchar(50)" />
			<column name="Country" type="char(2)" />
			<column name="Province" type="varchar(8)" />
			<column name="City" type="varchar(8)" />
			<column name="ContactNumber1" type="varchar(20)" />
			<column name="ContactNumber2" type="varchar(20)" />
			<column name="PoBox" type="varchar(20)" />
			<column name="ZipCode" type="varchar(20)" />
			<column name="OwnershipStatus" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_Owner" />
			</column>
			<column name="YearsAtPresentAddress" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_YearsAt" />
			</column>
			<column name="PersonMet" type="varchar(50)" />
			<column name="Relationship" type="varchar(8)" />
			<column name="ContactNumber" type="varchar(20)" />
			<column name="NeighbourhoodFeedBack" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_nhf" />
			</column>
			<column name="LivingStandard" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_lsd" />
			</column>
			<column name="NegativeCheck" type="smallint">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_ncheck" />
			</column>
			<column name="NoofAttempts" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_noofat" />
			</column>
			<column name="ObservationRemarks" type="varchar(500)" />
		</createTable>
	</changeSet>

	<changeSet id="34" author="Varaprasad">
		<addForeignKeyConstraint constraintName="fk_verification_pd_country" referencedTableName="bmtcountries"
			referencedColumnNames="countrycode" baseTableName="Verification_pd" baseColumnNames="Country" />
		<addForeignKeyConstraint constraintName="fk_verification_pd_province" referencedTableName="rmtcountryvsprovince"
			referencedColumnNames="cpcountry,cpprovince" baseTableName="Verification_pd" baseColumnNames="Country, Province" />
		<addForeignKeyConstraint constraintName="fk_verification_pd_city" referencedTableName="rmtprovincevscity"
			referencedColumnNames="pccity" baseTableName="Verification_pd" baseColumnNames="City" />
	</changeSet>

	<changeSet id="35" author="Varaprasad.K" dbms="postgresql, oracle">
		<addDefaultValue columnName="OwnershipStatus" tableName="verification_pd" defaultValue="0" />
		<addDefaultValue columnName="YearsAtPresentAddress" tableName="verification_pd" defaultValue="0" />
		<addDefaultValue columnName="NeighbourhoodFeedBack" tableName="verification_pd" defaultValue="0" />
		<addDefaultValue columnName="LivingStandard" tableName="verification_pd" defaultValue="0" />
		<addDefaultValue columnName="NegativeCheck" tableName="verification_pd" defaultValue="0" />
		<addDefaultValue columnName="NoofAttempts" tableName="verification_pd" defaultValue="0" />
	</changeSet>

	<changeSet id="36" author="Varaprasad.K" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE VERIFICATION_PD ADD CONSTRAINT DF_VERFCTIONS_PD_OWNER DEFAULT 0 FOR OWNERSHIPSTATUS;
				ALTER TABLE VERIFICATION_PD ADD CONSTRAINT DF_VERFCTIONS_PD_YEARSAT DEFAULT 0 FOR YEARSATPRESENTADDRESS;
				ALTER TABLE VERIFICATION_PD ADD CONSTRAINT DF_VERFCTIONS_PD_NHF DEFAULT 0 FOR NEIGHBOURHOODFEEDBACK;
				ALTER TABLE VERIFICATION_PD ADD CONSTRAINT DF_VERFCTIONS_PD_LSD DEFAULT 0 FOR LIVINGSTANDARD;
				ALTER TABLE VERIFICATION_PD ADD CONSTRAINT DF_VERFCTIONS_PD_NCHECK DEFAULT 0 FOR NEGATIVECHECK;
				ALTER TABLE VERIFICATION_PD ADD CONSTRAINT DF_VERFCTIONS_PD_NOOFAT DEFAULT 0 FOR NOOFATTEMPTS;
			]]>
		</sql>
	</changeSet>

	<changeSet id="37" author="Varaprasad.K">
		<createTable tableName="verification_pd_temp">
			<column name="VerificationId" type="bigint">
				<constraints nullable="false" primaryKey="true" primaryKeyName="pk_verification_pd_tmp_verf_id" />
			</column>
			<column name="AgentCode" type="varchar(20)" />
			<column name="AgentName" type="varchar(50)" />
			<column name="Type" type="int" defaultValue="0" />
			<column name="VerifiedDate" type="datetime" />
			<column name="Status" type="int" defaultValue="0" />
			<column name="Reason" type="bigint" />
			<column name="SummaryRemarks" type="varchar(500)" />
			<column name="Version" type="int">
				<constraints nullable="false" primaryKey="true" primaryKeyName="df_verfctions_pd_tmp_ver" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
			<column name="AddressType" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="Name" type="varchar(200)">
				<constraints nullable="false" />
			</column>
			<column name="HouseNumber" type="varchar(50)" />
			<column name="FlatNumber" type="varchar(50)" />
			<column name="Street" type="varchar(50)" />
			<column name="AddressLine1" type="varchar(50)" />
			<column name="AddressLine2" type="varchar(50)" />
			<column name="AddressLine3" type="varchar(50)" />
			<column name="AddressLine4" type="varchar(50)" />
			<column name="AddressLine5" type="varchar(50)" />
			<column name="Country" type="char(2)" />
			<column name="Province" type="varchar(8)" />
			<column name="City" type="varchar(8)" />
			<column name="ContactNumber1" type="varchar(20)" />
			<column name="ContactNumber2" type="varchar(20)" />
			<column name="PoBox" type="varchar(20)" />
			<column name="ZipCode" type="varchar(20)" />
			<column name="OwnershipStatus" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_tmp_Owner" />
			</column>
			<column name="YearsAtPresentAddress" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_tmp_YearsAt" />
			</column>
			<column name="PersonMet" type="varchar(50)" />
			<column name="Relationship" type="varchar(8)" />
			<column name="ContactNumber" type="varchar(20)" />
			<column name="NeighbourhoodFeedBack" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_tmp_nhf" />
			</column>
			<column name="LivingStandard" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_tmp_lsd" />
			</column>
			<column name="NegativeCheck" type="smallint">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_tmp_ncheck" />
			</column>
			<column name="NoofAttempts" type="int">
				<constraints primaryKey="true" primaryKeyName="df_verfctions_pd_tmp_noofat" />
			</column>
			<column name="ObservationRemarks" type="varchar(500)" />
		</createTable>
	</changeSet>

	<changeSet id="39" author="Varaprasad">
		<addForeignKeyConstraint constraintName="fk_verification_pd_tmp_country" referencedTableName="bmtcountries"
			referencedColumnNames="countrycode" baseTableName="Verification_pd_temp" baseColumnNames="Country" />
		<addForeignKeyConstraint constraintName="fk_verification_pd_tmp_prvince" referencedTableName="rmtcountryvsprovince"
			referencedColumnNames="cpcountry, 
		cpprovince" baseTableName="Verification_pd_temp" baseColumnNames="Country, Province" />
		<addForeignKeyConstraint constraintName="fk_verification_pd_tmp_city" referencedTableName="rmtprovincevscity"
			referencedColumnNames="pccity" baseTableName="Verification_pd_temp" baseColumnNames="City" />
	</changeSet>

	<changeSet id="40" author="Varaprasad.K" dbms="postgresql, oracle">
		<addDefaultValue columnName="OwnershipStatus" tableName="verification_pd_temp" defaultValue="0" />
		<addDefaultValue columnName="YearsAtPresentAddress" tableName="verification_pd_temp" defaultValue="0" />
		<addDefaultValue columnName="NeighbourhoodFeedBack" tableName="verification_pd_temp" defaultValue="0" />
		<addDefaultValue columnName="LivingStandard" tableName="verification_pd_temp" defaultValue="0" />
		<addDefaultValue columnName="NegativeCheck" tableName="verification_pd_temp" defaultValue="0" />
		<addDefaultValue columnName="NoofAttempts" tableName="verification_pd_temp" defaultValue="0" />
	</changeSet>

	<changeSet id="41" author="Varaprasad.K" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE VERIFICATION_PD_TEMP ADD CONSTRAINT DF_VERFCTIONS_PD_T_OWNER DEFAULT 0 FOR OWNERSHIPSTATUS;
				ALTER TABLE VERIFICATION_PD_TEMP ADD CONSTRAINT DF_VERFCTIONS_PD_T_YEARSAT DEFAULT 0 FOR YEARSATPRESENTADDRESS;
				ALTER TABLE VERIFICATION_PD_TEMP ADD CONSTRAINT DF_VERFCTIONS_PD_T_NHF DEFAULT 0 FOR NEIGHBOURHOODFEEDBACK;
				ALTER TABLE VERIFICATION_PD_TEMP ADD CONSTRAINT DF_VERFCTIONS_PD_T_LSD DEFAULT 0 FOR LIVINGSTANDARD;
				ALTER TABLE VERIFICATION_PD_TEMP ADD CONSTRAINT DF_VERFCTIONS_PD_T_NCHECK DEFAULT 0 FOR NEGATIVECHECK;
				ALTER TABLE VERIFICATION_PD_TEMP ADD CONSTRAINT DF_VERFCTIONS_PD_T_NOOFAT DEFAULT 0 FOR NOOFATTEMPTS;
			]]>
		</sql>
	</changeSet>

	<changeSet id="42" author="Varaprasad.K">
		<createView viewName="verification_pd_aview" replaceIfExists="true">
			SELECT pd.verificationid,
				pd.agentcode,
				pd.agentname,
				pd.type,
				pd.verifieddate,
				pd.status,
				pd.reason,
				r1.code reasoncode,
				r1.description reasondesc,
				pd.summaryremarks,
				pd.version,
				pd.lastmntby,
				pd.lastmnton,
				pd.recordstatus,
				pd.rolecode,
				pd.nextrolecode,
				pd.taskid,
				pd.nexttaskid,
				pd.recordtype,
				pd.workflowid,
				pd.addresstype,
				pd.name,
				pd.housenumber,
				pd.flatnumber,
				pd.street,
				pd.addressline1,
				pd.addressline2,
				pd.addressline3,
				pd.addressline4,
				pd.addressline5,
				pd.country,
				pd.province,
				pd.city,
				pd.contactnumber1,
				pd.contactnumber2,
				pd.pobox,
				pd.zipcode,
				pd.ownershipstatus,
				pd.yearsatpresentaddress,
				pd.personmet,
				pd.relationship,
				r2.prelationdesc lovrelationdesc,
				pd.contactnumber,
				pd.neighbourhoodfeedback,
				pd.livingstandard,
				pd.negativecheck,
				pd.noofattempts,
				pd.observationremarks,
				c.custcif cif,
				v.custid,
				v.keyreference,
				v.createdon,
				v.agency,
				v.verificationdate,
				a.dealername agencyname,
				v.reinitid,
				a.dealertype,
				r1.reasontypecode,
				country.countrydesc,
				p.cpprovincename provincedesc,
				city.pccityname  citydesc
			   FROM verification_pd pd
				 JOIN verifications v ON v.id = pd.verificationid
				 LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
				 JOIN bmtcountries country ON country.countrycode = pd.country
				 JOIN rmtcountryvsprovince p ON p.cpprovince = pd.province
				 JOIN rmtprovincevscity city ON city.pccity = pd.city
				 LEFT JOIN customers c ON c.custid = v.custid
				 LEFT JOIN reasons_aview r1 ON r1.id = pd.reason
				 LEFT JOIN bmtprelationcodes r2 ON r2.prelationcode = pd.relationship
		</createView>
	</changeSet>

	<changeSet id="43" author="Varaprasad.K">
		<createView viewName="verification_pd_view" replaceIfExists="true">
			SELECT pd.verificationid,
				pd.agentcode,
				pd.agentname,
				pd.type,
				pd.verifieddate,
				pd.status,
				pd.reason,
				r1.code reasoncode,
				r1.description reasondesc,
				pd.summaryremarks,
				pd.version,
				pd.lastmntby,
				pd.lastmnton,
				pd.recordstatus,
				pd.rolecode,
				pd.nextrolecode,
				pd.taskid,
				pd.nexttaskid,
				pd.recordtype,
				pd.workflowid,
				pd.addresstype,
				pd.name,
				pd.housenumber,
				pd.flatnumber,
				pd.street,
				pd.addressline1,
				pd.addressline2,
				pd.addressline3,
				pd.addressline4,
				pd.addressline5,
				pd.country,
				pd.province,
				pd.city,
				pd.contactnumber1,
				pd.contactnumber2,
				pd.pobox,
				pd.zipcode,
				pd.ownershipstatus,
				pd.yearsatpresentaddress,
				pd.personmet,
				pd.relationship,
				r2.prelationdesc lovrelationdesc,
				pd.contactnumber,
				pd.neighbourhoodfeedback,
				pd.livingstandard,
				pd.negativecheck,
				pd.noofattempts,
				pd.observationremarks,
				c.custcif cif,
				v.custid,
				v.keyreference,
				v.createdon,
				v.agency,
				v.verificationdate,
				a.dealername agencyname,
				v.reinitid,
				a.dealertype,
				r1.reasontypecode,
				country.countrydesc,
				p.cpprovincename provincedesc,
				city.pccityname  citydesc
			   FROM verification_pd_temp pd
				 JOIN verifications v ON v.id = pd.verificationid
				 LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
				 JOIN bmtcountries country ON country.countrycode = pd.country
				 JOIN rmtcountryvsprovince p ON p.cpprovince = pd.province
				 JOIN rmtprovincevscity city ON city.pccity = pd.city
				 LEFT JOIN customers c ON c.custid = v.custid
				 LEFT JOIN reasons_aview r1 ON r1.id = pd.reason
				 LEFT JOIN bmtprelationcodes r2 ON r2.prelationcode = pd.relationship
			UNION ALL
			 SELECT pd.verificationid,
				pd.agentcode,
				pd.agentname,
				pd.type,
				pd.verifieddate,
				pd.status,
				pd.reason,
				r1.code reasoncode,
				r1.description reasondesc,
				pd.summaryremarks,
				pd.version,
				pd.lastmntby,
				pd.lastmnton,
				pd.recordstatus,
				pd.rolecode,
				pd.nextrolecode,
				pd.taskid,
				pd.nexttaskid,
				pd.recordtype,
				pd.workflowid,
				pd.addresstype,
				pd.name,
				pd.housenumber,
				pd.flatnumber,
				pd.street,
				pd.addressline1,
				pd.addressline2,
				pd.addressline3,
				pd.addressline4,
				pd.addressline5,
				pd.country,
				pd.province,
				pd.city,
				pd.contactnumber1,
				pd.contactnumber2,
				pd.pobox,
				pd.zipcode,
				pd.ownershipstatus,
				pd.yearsatpresentaddress,
				pd.personmet,
				pd.relationship,
				r2.prelationdesc lovrelationdesc,
				pd.contactnumber,
				pd.neighbourhoodfeedback,
				pd.livingstandard,
				pd.negativecheck,
				pd.noofattempts,
				pd.observationremarks,
				c.custcif cif,
				v.custid,
				v.keyreference,
				v.createdon,
				v.agency,
				v.verificationdate,
				a.dealername agencyname,
				v.reinitid,
				a.dealertype,
				r1.reasontypecode,
				country.countrydesc,
				p.cpprovincename provincedesc,
				city.pccityname  citydesc
			   FROM verification_pd pd
				 JOIN verifications v ON v.id = pd.verificationid
				 LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
				 JOIN bmtcountries country ON country.countrycode = pd.country
				 JOIN rmtcountryvsprovince p ON p.cpprovince = pd.province
				 JOIN rmtprovincevscity city ON city.pccity = pd.city
				 LEFT JOIN customers c ON c.custid = v.custid
				 LEFT JOIN reasons_aview r1 ON r1.id = pd.reason
				 LEFT JOIN bmtprelationcodes r2 ON r2.prelationcode = pd.relationship
		</createView>
	</changeSet>

	<changeSet id="44" author="Varaprasad.K">
		<sql>
			<![CDATA[
			    delete from secrolegroups where grpid = (select grpid from secgroups where grpcode='PersonalDiscussion_MAKER') and roleid = (select roleid from secroles where rolecd='MSTGRP1_MAKER');
				delete from secrolegroups where grpid = (select grpid from secgroups where grpcode='PersonalDiscussion_APPROVER') and roleid = (select roleid from secroles where rolecd='MSTGRP1_APPROVER');
				
				delete from secgrouprights where grpid = (select grpid from secgroups where grpcode='PersonalDiscussion_MAKER');
				delete from secgrouprights where grpid = (select grpid from secgroups where grpcode='PersonalDiscussion_APPROVER');
				
				delete from secgroups where grpcode = 'PersonalDiscussion_VIEW';
				delete from secgroups where grpcode = 'PersonalDiscussion_MAKER';
				delete from secgroups where grpcode = 'PersonalDiscussion_APPROVER';
				
				--SecGroups
				update seqsecgroups set seqno=(select max(grpid) from secgroups_view);
				insert into secgroups values((select max(grpid)+1 from secgroups),'PersonalDiscussion_VIEW','Allow to view PersonalDiscussion',0,1000,current_timestamp,'Approved','','','','','',0);
				insert into secgroups values((select max(grpid)+1 from secgroups),'PersonalDiscussion_MAKER','WF Maker for PersonalDiscussion',0,1000,current_timestamp,'Approved','','','','','',0);
				insert into secgroups values((select max(grpid)+1 from secgroups),'PersonalDiscussion_APPROVER','WF Approver for PersonalDiscussion',0,1000,current_timestamp,'Approved','','','','','',0);
				update seqsecgroups set seqno=(select max(grpid) from secgroups_view);
				
				--SecRoleGroups
				update seqsecrolegroups set seqno=(select max(rolegrpid) from secrolegroups_view);
				insert into secrolegroups values ((select max(rolegrpid)+1 from secrolegroups), (select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'), (select roleid from secroles where rolecd='MSTGRP1_MAKER'), 0,1000, current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
				insert into secrolegroups values ((select max(rolegrpid)+1 from secrolegroups), (select grpid from secgroups where grpcode='PersonalDiscussion_APPROVER'), (select roleid from secroles where rolecd='MSTGRP1_APPROVER'), 0,1000, current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
				update seqsecrolegroups set seqno=(select max(rolegrpid) from secrolegroups_view);
				
				delete from secrights where rightname in (
				'menuItem_Verification_PersonalDiscussion',
				'button_PersonalDiscussionList_btnNew',
				'button_PersonalDiscussionDialog_btnEdit',
				'button_PersonalDiscussionDialog_btnDelete',
				'button_PersonalDiscussionDialog_btnSave',
				'PersonalDiscussionDialog_Date',
				'PersonalDiscussionDialog_VerificationType',
				'PersonalDiscussionDialog_YearsAtPresentAddress',
				'PersonalDiscussionDialog_PersonMet',
				'PersonalDiscussionDialog_OwnershipStatus',
				'PersonalDiscussionDialog_Relationship',
				'PersonalDiscussionDialog_NeighborhoodCheck',
				'PersonalDiscussionDialog_contactNo',
				'PersonalDiscussionDialog_Remarks',
				'PersonalDiscussionDialog_LivingStandard',
				'PersonalDiscussionDialog_NegativeCheck',
				'PersonalDiscussionDialog_NoofAttempts',
				'PersonalDiscussionDialog_AgentCode',
				'PersonalDiscussionDialog_AgentName',
				'PersonalDiscussionDialog_Recommendations',
				'PersonalDiscussionDialog_Reason',
				'PersonalDiscussionDialog_AgentRemarks',
				'PersonalDiscussionDialog_LivingStandard'	
				); 
				
				update seqsecrights set seqno=(select max(rightid)+1 from secrights_view);
                Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				insert into secrights values ((select max(rightid)+1 from secrights), 0, 'menuItem_Verification_PersonalDiscussion', 	'PersonalDiscussionList', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 2, 'button_PersonalDiscussionList_btnNew', 		'PersonalDiscussionList', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 2, 'button_PersonalDiscussionDialog_btnEdit', 	'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 2, 'button_PersonalDiscussionDialog_btnDelete', 	'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 2, 'button_PersonalDiscussionDialog_btnSave', 	'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				
				--Observation rights
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_Date', 					'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_VerificationType', 		'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_YearsAtPresentAddress', 	'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_PersonMet', 				'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_OwnershipStatus', 		'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_Relationship', 			'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_NeighborhoodCheck', 		'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_contactNo', 				'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_Remarks', 				'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_LivingStandard', 		'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_NegativeCheck', 			'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_NoofAttempts', 			'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				
				-- Summary Rights
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_AgentCode', 				'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_AgentName', 				'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_Recommendations', 		'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_Reason', 				'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				insert into secrights values ((select max(rightid)+1 from secrights), 3, 'PersonalDiscussionDialog_AgentRemarks', 			'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				update seqsecrights set seqno=(select max(rightid)+1 from secrights_view);
               
				
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='button_PersonalDiscussionDialog_btnEdit'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='button_PersonalDiscussionDialog_btnDelete') ,1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='button_PersonalDiscussionDialog_btnSave') ,1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='menuItem_Verification_PersonalDiscussion'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_Date'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_VerificationType'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_YearsAtPresentAddress') ,1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_PersonMet'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_Relationship'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_NeighborhoodCheck') ,1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_contactNo'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_Remarks'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_NegativeCheck'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_NoofAttempts'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_AgentCode'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_AgentName'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_Recommendations'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_Reason'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_MAKER'),(select rightid from secrights where rightname='PersonalDiscussionDialog_AgentRemarks'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into SECGROUPRIGHTS values((select max(GRPRIGHTID)+1 from SECGROUPRIGHTS),(select GRPID from SECGROUPS where GRPCODE='PersonalDiscussion_MAKER'),(select RIGHTID from SECRIGHTS where RIGHTNAME='PersonalDiscussionDialog_OwnershipStatus'),1, 0,1000,current_timestamp, 'Approved','','','','','',0);
				insert into SECGROUPRIGHTS values((select max(GRPRIGHTID)+1 from SECGROUPRIGHTS),(select GRPID from SECGROUPS where GRPCODE='PersonalDiscussion_MAKER'),(select RIGHTID from SECRIGHTS where RIGHTNAME='PersonalDiscussionDialog_LivingStandard'),1, 0,1000,current_timestamp, 'Approved','','','','','',0);
				
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_APPROVER'),(select rightid from secrights where rightname='button_PersonalDiscussionDialog_btnSave'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				insert into secgrouprights values((select max(grprightid)+1 from secgrouprights),(select grpid from secgroups where grpcode='PersonalDiscussion_APPROVER'),(select rightid from secrights where rightname='menuItem_Verification_PersonalDiscussion'),1 ,0, 1000,current_timestamp, 'Approved','','','','','',0);
				
				 Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
			]]>
		</sql>
	</changeSet>

	<changeSet id="45" author="Varaprasad">
		<sql>
			<![CDATA[
				delete from  LimitCodeDetail where LimitCode = 'PDINIT';
				delete from  LimitCodeDetail where LimitCode = 'PDAPPR';
		
				INSERT INTO limitcodedetail VALUES ((select coalesce(max(limitid), 0) +1 from limitcodedetail),'PDINIT','Personal Discussion Initiation',1);
				INSERT INTO limitcodedetail VALUES ((select coalesce(max(limitid), 0) +1 from limitcodedetail),'PDAPPR','Personal Discussion Approval',1);
			]]>
		</sql>
	</changeSet>

	<changeSet id="46" author="Varaprasad.K">
		<sql>
			<![CDATA[	
				Delete from secGrouprights where rightid in(SELECT rightid from secrights WHERE rightname='PersonalDiscussionDialog_PersonalDiscussionExtFields');
				delete from secrights where rightname='PersonalDiscussionDialog_PersonalDiscussionExtFields';
				Insert into Secrights Values((Select MAX(RightID)+1 From SecRights), 3, 'PersonalDiscussionDialog_PersonalDiscussionExtFields', 'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
				Insert Into secGrouprights values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='PersonalDiscussion_MAKER'),(select RightId from secRights where RightName='PersonalDiscussionDialog_PersonalDiscussionExtFields'),1,0,1000,current_timestamp, 'Approved','','','','','',0);
	        ]]>
		</sql>
	</changeSet>

	<changeSet id="47" author="Varaprasad.K">
		<sql>
			<![CDATA[
					Delete from Secgrouprights where grpid in(Select grpid from secgroups where grpcode IN('PersonalDiscussion_MAKER','PersonalDiscussion_APPROVER')) and rightid in(Select rightid from SecRights where RightName ='PersonalDiscussionDialog_Documents');
					Delete from SecRights where RightName = 'PersonalDiscussionDialog_Documents';
					Insert into SecRights Values((Select MAX(RightID)+1 From SecRights), 3, 'PersonalDiscussionDialog_Documents', 'PersonalDiscussionDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
					Insert Into secGrouprights values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='PersonalDiscussion_MAKER'),(select RightId from secRights where RightName='PersonalDiscussionDialog_Documents'),1,0,1000,current_timestamp, 'Approved','','','','','',0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="48" author="Varaprasad.K">
		<sql>
		<![CDATA[
			Insert Into DocumentCategory values ((Select MAX(id)+1 From DocumentCategory),'VERIFICATION_PD','Personal Discussion Verification Documents');
		]]>
		</sql>
	</changeSet>

	<changeSet id="49" author="satyanarayana.g">
		<sql>
			<![CDATA[
			   INSERT INTO ErrorDetails VALUES('60317', 'EN', 'E', 'Limit expiry Date: {0} is Less than Loan Maturity Date: {1}.', '', 'Approved', '', '', '', '', '', 0, CURRENT_TIMESTAMP, 1000, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="50" author="murthy.y">
		<dropTable tableName="LMSServiceLog" />
		<dropSequence sequenceName="SeqLMSServiceLog" />
	</changeSet>

	<changeSet id="51" author="murthy.y">
		<createTable tableName="LMSServiceLog">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints primaryKey="true" />
			</column>
			<column name="Event" type="varchar(50)" />
			<column name="FinReference" type="varchar(20)" />
			<column name="OldRate" type="decimal(13,9)" />
			<column name="NewRate" type="decimal(13,9)" />
			<column name="EffectiveDate" type="datetime" />
			<column name="NotificationFlag" type="varchar(1)" />
		</createTable>
	</changeSet>

	<changeSet id="50" author="Durgaprasad G">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT
			MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
			UPDATE SEQSECROLEGROUPS
			SET SEQNO= (SELECT MAX(Rolegrpid) FROM SECROLEGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid)
			FROM SECGROUPRIGHTS);


			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0,
			'menuItem_CustomerTemplates_ScheduleRateReport','ScheduleRateReport',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ','
			',0 FROM SEQSECRIGHTS WHERE 0=0;

			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS),
			'SCHEDULE_RATE_REPORT', 'Schedule Rate Report Role',
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM
			SEQSECGROUPS WHERE 0=0;

			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT
			GRPID FROM SECGROUPS WHERE
			GRPCODE='SCHEDULE_RATE_REPORT') ,(SELECT RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='menuItem_CustomerTemplates_ScheduleRateReport'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SECROLES SELECT (SELECT MAX(ROLEID)+1 FROM SECROLES), 1, 'SCHEDULE_RATE_REPORT', 'Schedule Rate Report
			Role', null, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;

			INSERT INTO SecRoleGroups
			values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId From SecGroups Where
			GrpCode='SCHEDULE_RATE_REPORT'), (Select RoleID From SecRoles Where
			RoleCd='SCHEDULE_RATE_REPORT'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			UPDATE SEQSECRIGHTS SET SEQNO=
			(SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM
			SECGROUPS);
			UPDATE
			SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES);
			UPDATE SEQSECROLEGROUPS SET SEQNO=
			(SELECT MAX(Rolegrpid)
			FROM SECROLEGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>


	<changeSet id="53" author="DurgaPrasad.G">
		<sql>
			<![CDATA[
			UPDATE SMTPARAMETERS SET SYSPARMVALUE='Y' WHERE SYSPARMCODE='ALLOW_AMT_FLD_INTEGRAL_PART_DEF_VAL_ZERO';
			]]>
		</sql>
	</changeSet>

	<changeSet id="52" author="Manoj">
		<comment>Added column for diff presentment and representment</comment>
		<addColumn tableName="PRESENTMENTHEADER">
			<column name="PRESENTMENTTYPE" type="Char(1)" />
		</addColumn>
	</changeSet>

	<changeSet id="53" author="Manoj">
		<comment>Added column for diff presentment and representment</comment>
		<addColumn tableName="PRESENTMENTHEADER_TEMP">
			<column name="PRESENTMENTTYPE" type="Char(1)" />
		</addColumn>
	</changeSet>

	<changeSet id="54" author="Manoj">
		<sql>
			<![CDATA[
			  UPDATE PRESENTMENTHEADER_TEMP SET PRESENTMENTTYPE = 'P' WHERE  PRESENTMENTTYPE IS NULL;
			  UPDATE PRESENTMENTHEADER  SET PRESENTMENTTYPE = 'P' WHERE  PRESENTMENTTYPE IS NULL;
			]]>
		</sql>
	</changeSet>

	<changeSet id="55" author="Manoj">
		<createView viewName="PRESENTMENTHEADER_AVIEW" replaceIfExists="true">
			 SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS  ,T3.BANKNAME ,T1.ENTITYCODE, T1.PRESENTMENTTYPE             
           				 FROM    	PRESENTMENTHEADER  T1 
						LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
       					LEFT JOIN   BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE						
			</createView>
	</changeSet>

	<changeSet id="56" author="Manoj">
		<createView viewName="PRESENTMENTHEADER_VIEW" replaceIfExists="true">
						SELECT T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS ,T3.BANKNAME,T1.ENTITYCODE, T1.PRESENTMENTTYPE   
            FROM    	PRESENTMENTHEADER_Temp  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
      		LEFT JOIN   BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
			UNION ALL
			
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS ,T3.BANKNAME,T1.ENTITYCODE, T1.PRESENTMENTTYPE         
            FROM    	PRESENTMENTHEADER  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
     		LEFT JOIN   BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
			WHERE     NOT EXISTS (SELECT 1 FROM PRESENTMENTHEADER_TEMP WHERE ID = T1.ID)			
			</createView>
	</changeSet>

	<changeSet id="33_postgresql_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'verification_pd');
			]]>
		</sql>
	</changeSet>

	<changeSet id="33.1" author="Varaprasad.K" dbms="postgresql">
		<modifyDataType tableName="Verification_pd" columnName="Country" newDataType="citext" />
		<modifyDataType tableName="Verification_pd" columnName="Province" newDataType="citext" />
		<modifyDataType tableName="Verification_pd" columnName="City" newDataType="citext" />
	</changeSet>

	<changeSet id="33_postgresql_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'verification_pd');
			]]>
		</sql>
	</changeSet>

	<changeSet id="38_postgresql_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'Verification_pd_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="38" author="Varaprasad.K" dbms="postgresql">
		<modifyDataType tableName="Verification_pd_temp" columnName="Country" newDataType="citext" />
		<modifyDataType tableName="Verification_pd_temp" columnName="Province" newDataType="citext" />
		<modifyDataType tableName="Verification_pd_temp" columnName="City" newDataType="citext" />
	</changeSet>

	<changeSet id="38_postgresql_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'Verification_pd_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="39" author="Varaprasad.k">
		<createView viewName="finexcessamount_lovview" replaceIfExists="true">
        SELECT finexcessamount.excessid,
               finexcessamount.finreference,
               finexcessamount.amounttype,
               round(finexcessamount.amount / 100,2) AS amount,
               round(finexcessamount.utilisedamt / 100,2) AS utilisedamt,
               round(finexcessamount.reservedamt / 100,2) AS reservedamt,
               round(finexcessamount.balanceamt / 100,2) AS balanceamt
        FROM finexcessamount           
    </createView>
	</changeSet>

	<!-- 5.0.0 is Under QC please use 5.0.5 -->
</databaseChangeLog>