<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />


	<changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1" author="vijaya.a">
		<comment>commodity file upload</comment>
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE';

				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'COLLETARAL_VALUE_UPDATE', 'Colletaral value update', 12, 'Colletaral', NULL, NULL, NULL , 0, 0, NULL, 'HSNCode,  CurrentValue, CommodityType, Code, Description', '', 'A', 'D:/Colletaral/Values', 'COLLETARAL_', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE'), 'COLLETARAL_VALUES',  0, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'HSNCode', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'M');
  				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'CurrentValue', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'M');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'CommodityType', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'Code', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')), 'Description', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');

				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>


	<changeSet id="2" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities" columnNames="HSNCode" />
	</changeSet>

	<changeSet id="2.1" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities_Temp" columnNames="HSNCode" />
	</changeSet>

	<changeSet id="2.2" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities" columnNames="CommodityType, Code, HSNCode" />
	</changeSet>

	<changeSet id="2.3" author="vijaya.a">
		<addUniqueConstraint tableName="Commodities_Temp" columnNames="CommodityType, Code, HSNCode" />
	</changeSet>

	<changeSet id="1.1" author="vijaya.q">
		<dropDefaultValue columnName="Active" tableName="Commodities" />
		<dropDefaultValue columnName="Active" tableName="Commodities_temp" />
		<dropView viewName="COMMODITIES_VIEW" />
		<dropView viewName="COMMODITIES_AVIEW" />
		<dropColumn tableName="Commodities" columnName="Active" />
		<dropColumn tableName="Commodities_temp" columnName="Active" />
		<dropColumn tableName="Commodities" columnName="Version" />
		<dropColumn tableName="Commodities_temp" columnName="Version" />
		<dropColumn tableName="Commodities" columnName="LastMntBy" />
		<dropColumn tableName="Commodities_temp" columnName="LastMntBy" />
		<dropColumn tableName="Commodities" columnName="LastMntOn" />
		<dropColumn tableName="Commodities_temp" columnName="LastMntOn" />
		<dropColumn tableName="Commodities" columnName="RecordStatus" />
		<dropColumn tableName="Commodities_temp" columnName="RecordStatus" />
		<dropColumn tableName="Commodities" columnName="RoleCode" />
		<dropColumn tableName="Commodities_temp" columnName="RoleCode" />
		<dropColumn tableName="Commodities" columnName="NextRoleCode" />
		<dropColumn tableName="Commodities_temp" columnName="NextRoleCode" />
		<dropColumn tableName="Commodities" columnName="TaskId" />
		<dropColumn tableName="Commodities_temp" columnName="TaskId" />
		<dropColumn tableName="Commodities" columnName="NextTaskId" />
		<dropColumn tableName="Commodities_temp" columnName="NextTaskId" />
		<dropColumn tableName="Commodities" columnName="RecordType" />
		<dropColumn tableName="Commodities_temp" columnName="RecordType" />
		<dropColumn tableName="Commodities" columnName="WorkflowId" />
		<dropColumn tableName="Commodities_temp" columnName="WorkflowId" />
	</changeSet>

	<changeSet id="3" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_AlertToRoles','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_AlertsRequired','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_UserTemplate','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_CustomerTemplate','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_AlertType','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_AlertToRoles'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_AlertsRequired'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_UserTemplate'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_CustomerTemplate'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_AlertType'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				
			]]>
		</sql>
	</changeSet>

	<changeSet id="4" author="shinde.b">
		<addColumn tableName="Commodities">
			<column name="AlertsRequired" type="boolean" defaultValue="0">
				<constraints nullable="false" />
			</column>
			<column name="AlertType" type="varchar(10)" />
			<column name="AlertToRoles" type="varchar(1000)" />
			<column name="UserTemplate" type="bigint" />
			<column name="CustomerTemplate" type="bigint" />
			<column name="Active" type="boolean" defaultValue="1">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="4.1" author="shinde.b">
		<addColumn tableName="Commodities_temp">
			<column name="AlertsRequired" type="boolean" defaultValue="0">
				<constraints nullable="false" />
			</column>
			<column name="AlertType" type="varchar(10)" />
			<column name="AlertToRoles" type="varchar(1000)" />
			<column name="UserTemplate" type="bigint" />
			<column name="CustomerTemplate" type="bigint" />
			<column name="Active" type="boolean" defaultValue="1">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="4.2" author="shinde.b">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITIES_VIEW" replaceIfExists="true">
			  SELECT t1.id,
    			t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t1.alertsRequired,
    			t1.alertType,
    			t1.alertToRoles,
    			t1.UserTemplate,
    			T3.TemplateCode UserTemplateCode,
			  	T3.TemplateDesc UserTemplateName,
    			t1.CustomerTemplate,
    			T4.TemplateCode CustomerTemplateCode,
			  	T4.TemplateDesc CustomerTemplateName,
    			t2.unittype,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities_temp t1
     		  LEFT JOIN commodity_types t2 ON t2.id = t1.commoditytype
     		  LEFT JOIN TEMPLATES T3 ON T3.TemplateId = T1.UserTemplate
			  LEFT JOIN TEMPLATES T4 ON T4.TemplateId = T1.CustomerTemplate
			  UNION ALL
 			  SELECT t1.id,
 				t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t1.alertsRequired,
    			t1.alertType,
    			t1.alertToRoles,
    			t1.UserTemplate,
    			T3.TemplateCode UserTemplateCode,
			  	T3.TemplateDesc UserTemplateName,
    			t1.CustomerTemplate,
    			T4.TemplateCode CustomerTemplateCode,
			  	T4.TemplateDesc CustomerTemplateName,
    			t2.unittype,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,	
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities t1
     		  LEFT JOIN commodity_types t2 ON t2.id = t1.commoditytype
     		  LEFT JOIN TEMPLATES T3 ON T3.TemplateId = T1.UserTemplate
			  LEFT JOIN TEMPLATES T4 ON T4.TemplateId = T1.CustomerTemplate
  			  WHERE NOT (EXISTS ( SELECT 1
              FROM commodities_temp
              WHERE commodities_temp.id = t1.id))
		</createView>
	</changeSet>

	<changeSet id="4.3" author="shinde.b">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITIES_AVIEW" replaceIfExists="true">
			  SELECT t1.id,
 				t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t1.alertsRequired,
    			t1.alertType,
    			t1.alertToRoles,
    			t1.UserTemplate,
    			T3.TemplateCode UserTemplateCode,
			  	T3.TemplateDesc UserTemplateName,
    			t1.CustomerTemplate,
    			T4.TemplateCode CustomerTemplateCode,
			  	T4.TemplateDesc CustomerTemplateName,
    			t2.unittype,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities t1
     		  JOIN commodity_types t2 ON t2.id = t1.commoditytype
     		  LEFT JOIN TEMPLATES T3 ON T3.TemplateId = T1.UserTemplate
			  LEFT JOIN TEMPLATES T4 ON T4.TemplateId = T1.CustomerTemplate
		</createView>
	</changeSet>

	<changeSet id="4.4" author="shinde.b">
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_USER_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities" baseColumnNames="UserTemplate" />
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_CUST_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities" baseColumnNames="CustomerTemplate" />
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_T_USER_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities_temp" baseColumnNames="UserTemplate" />
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_T_CUST_TEMPLATE" referencedTableName="TEMPLATES"
			referencedColumnNames="TemplateId" baseTableName="commodities_temp" baseColumnNames="CustomerTemplate" />
	</changeSet>

	<changeSet id="5.0" author="VijayKumar.L ">
		<comment> Included finrefernce from finfeedetail table </comment>
		<createView viewName="finfeereceipts_view" replaceIfExists="true">
			  SELECT t1.id,
			    t1.feeid,
			    t1.receiptid,
			    t1.paidamount,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.amount AS receiptamount,
			    t2.transactionref,
			    t2.favournumber,
			    t3.feetypeid,
			    t3.vasreference,
			    t4.feetypecode,
			    t4.feetypedesc,
			    t3.finreference,
			    t5.receiptmode AS receipttype
			   FROM finfeereceipts_temp t1
			     JOIN finreceiptdetail t2 ON t1.receiptid = t2.receiptid
			     JOIN finfeedetail_temp t3 ON t1.feeid = t3.feeid
			     LEFT JOIN feetypes t4 ON t3.feetypeid = t4.feetypeid
			     JOIN finreceiptheader t5 ON t1.receiptid = t5.receiptid
			UNION ALL
			 SELECT t1.id,
			    t1.feeid,
			    t1.receiptid,
			    t1.paidamount,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.amount AS receiptamount,
			    t2.transactionref,
			    t2.favournumber,
			    t3.feetypeid,
			    t3.vasreference,
			    t4.feetypecode,
			    t4.feetypedesc,
			    t3.finreference,
			    t5.receiptmode AS receipttype
			   FROM finfeereceipts t1
			     JOIN finreceiptdetail t2 ON t1.receiptid = t2.receiptid
			     JOIN finfeedetail t3 ON t1.feeid = t3.feeid
			     LEFT JOIN feetypes t4 ON t3.feetypeid = t4.feetypeid
			     JOIN finreceiptheader t5 ON t1.receiptid = t5.receiptid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM finfeereceipts_temp
			          WHERE finfeereceipts_temp.id = t1.id))
		</createView>
	</changeSet>

	<changeSet id="6" author="Shinde.b">
		<sql>
			<![CDATA[
				DELETE FROM TEMPLATEFIELDS WHERE EVENT = 'CollateralLTVBreachs';
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'fm_finReference', 'Loan Reference Number', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'fm_finType', 'Loan Type', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'fm_lovDescFinTypeName', 'Loan Type Description', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'ct_custShrtName', 'Customer Name', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_type', 'Commodity Type', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_collateralRef', 'Collateral Reference', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_callateralValue', 'Collateral Value', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_bankLtv', 'Bank LTV', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_collateralType', 'Collateral Type', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_outStandingPrincipal', 'Principle OutStanding', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_bankValuation', 'Bank Valuation', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_thresholdLtv', 'Threshold LTV', 'A', 'CollateralLTVBreachs');
				INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'cltvb_valueDate', 'Value Date', 'A', 'CollateralLTVBreachs');
			]]>
		</sql>
	</changeSet>

	<changeSet id="7" author="shinde.b">
		<createTable tableName="COLLATERAL_LTV_BREACHES">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_COLLATERAL_LTV_BREACHES_ID" />
			</column>
			<column name="BatchId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="CollateralType" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="CollateralRef" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Collateralccy" type="char(3)">
				<constraints nullable="false" />
			</column>
			<column name="MarketValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="UnitPrice" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="NoOfUnits" type="int">
				<constraints nullable="false" />
			</column>
			<column name="CollateralValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentCollateralValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="BankLTV" type="decimal(5,2)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentBankLTV" type="decimal(5,2)">
				<constraints nullable="false" />
			</column>
			<column name="BankValuation" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentBankValuation" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="ThresholdLTV" type="decimal(5,2)">
				<constraints nullable="false" />
			</column>
			<column name="Pos" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="CommodityId" type="bigint" />
			<column name="ValueDate" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="SendAlert" type="boolean">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="7.1" author="shinde.b" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_CURRENTBANKLTV DEFAULT 0 FOR CURRENTBANKLTV;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_UNITPRICE DEFAULT 0 FOR UNITPRICE;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_NOOFUNITS DEFAULT 0 FOR NOOFUNITS;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_CURRENTCOLLATERALVALUE DEFAULT 0 FOR CURRENTCOLLATERALVALUE;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_CURRENTBANKVALUATION DEFAULT 0 FOR CURRENTBANKVALUATION;
				ALTER TABLE COLLATERAL_LTV_BREACHES ADD CONSTRAINT DF_COLLATERAL_LTV_BREACHES_SENDALERT DEFAULT 0 FOR SENDALERT;
			]]>
		</sql>
	</changeSet>

	<changeSet id="7.1" author="shinde.b" dbms="postgresql, oracle">
		<addDefaultValue columnName="CURRENTBANKLTV" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="UNITPRICE" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="NOOFUNITS" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="CURRENTCOLLATERALVALUE" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="CURRENTBANKVALUATION" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
		<addDefaultValue columnName="SENDALERT" tableName="COLLATERAL_LTV_BREACHES" defaultValue="0" />
	</changeSet>

	<changeSet id="7.2" author="shinde.b">
		<createIndex tableName="COLLATERAL_LTV_BREACHES" indexName="IDX_BATCH_CA_LTV_BR_BID_SA">
			<column name="BatchId" />
			<column name="SendAlert" />
		</createIndex>
	</changeSet>

	<changeSet id="8" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				Delete from reportlist where code = 'Commodity';
				INSERT INTO ReportList VALUES ('Commodity', 'Commodity', 'listheader_CommodityType.label,listheader_Code.label,listheader_CurrentValue.label,listheader_Description.label,listheader_HSNCode.label,listheader_Active.label',  'CommodityTypeCode,Code,CurrentValue,Description,HSNCode,Active', 'String,String,BigDecimal,String,String,String', ' ', 'ReportList06', 'Commodities', 'Application Masters', 1, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0, 0); 
			]]>
		</sql>
	</changeSet>

	<changeSet id="9" author="vijaya.a">
		<comment>commodity file upload</comment>
		<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE';

				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'COLLETARAL_VALUE_UPDATE', 'Colletaral value update', 12, 'Colletaral', NULL, NULL, NULL , 0, 0, NULL, 'CommodityTypeCode,  Code, Description, CurrentValue, HSNCode, Active',  '', 'C', '/opt/SPFinance/PFF/Colletaral', 'COLLETARAL_', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE'), 'COLLETARAL_VALUES',  0, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'CommodityTypeCode', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'Code', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'Description', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'CurrentValue', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'HSNCode', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');
				
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
		</sql>
	</changeSet>

	<changeSet id="10" author="aditya.a">
		<comment>New column added for Account Types</comment>
		<sql>
			INSERT INTO SecRights Values ((select max(RightId)+1 from
			SecRights),3,'AccountTypeDialog_isControlAc','AccountTypeDialog',1,1000,current_timestamp,'Approved','',' ','',' ','
			',0);
		</sql>
	</changeSet>

	<changeSet id="11" author="aditya.a">
		<comment>New column added for Account Types</comment>
		<addColumn tableName="rmtaccounttypes">
			<column name="ControlAc" type="boolean" defaultValueBoolean="false" />
		</addColumn>
	</changeSet>

	<changeSet id="12" author="aditya.a">
		<comment>New column added for Account Types</comment>
		<addColumn tableName="rmtaccounttypes_temp">
			<column name="ControlAc" type="boolean" defaultValueBoolean="false" />
		</addColumn>
	</changeSet>

	<changeSet id="13" author="aditya.a">
		<createView viewName="rmtaccounttypes_aview" replaceIfExists="true">
 SELECT t1.actype,
    t1.actypedesc,
    t1.acpurpose,
    t1.acheadcode,
    t1.internalac,
    t1.custsysac,
    t1.controlac,
    t1.aclmtcategory,
    t1.actypeisactive,
    t1.profitcenterid,
    t1.costcenterid,
    t1.taxapplicable,
    t1.accaddlvar1,
    t1.accaddlvar2,
    t1.accaddlchar1,
    t1.accaddlvar3,
    t1.accaddlvar4,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.assertorliability,
    t1.onbalancesheet,
    t1.allowoverdraw,
    t1.actypegrpid,
    t1.extractiontype,
    t2.groupcode,
    t2.groupdescription,
    t2.accttypelevel,
    t3.costcentercode,
    t3.costcenterdesc,
    t4.profitcentercode,
    t4.profitcenterdesc
   FROM rmtaccounttypes t1
     LEFT JOIN accounttypegroup t2 ON t1.actypegrpid = t2.groupid
     LEFT JOIN costcenters t3 ON t1.costcenterid = t3.costcenterid
     JOIN profitcenters t4 ON t1.profitcenterid = t4.profitcenterid
</createView>
	</changeSet>

	<changeSet id="14" author="aditya.a">
		<createView viewName="rmtaccounttypes_view" replaceIfExists="true">
 SELECT t1.actype,
    t1.actypedesc,
    t1.acpurpose,
    t1.acheadcode,
    t1.internalac,
    t1.custsysac,
    t1.controlac,
    t1.aclmtcategory,
    t1.actypeisactive,
    t1.profitcenterid,
    t1.costcenterid,
    t1.taxapplicable,
    t1.accaddlvar1,
    t1.accaddlvar2,
    t1.accaddlchar1,
    t1.accaddlvar3,
    t1.accaddlvar4,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.assertorliability,
    t1.onbalancesheet,
    t1.allowoverdraw,
    t1.actypegrpid,
    t1.extractiontype,
    t2.groupcode,
    t2.groupdescription,
    t2.accttypelevel,
    t3.costcentercode,
    t3.costcenterdesc,
    t4.profitcentercode,
    t4.profitcenterdesc
   FROM rmtaccounttypes_temp t1
     LEFT JOIN accounttypegroup t2 ON t1.actypegrpid = t2.groupid
     LEFT JOIN costcenters t3 ON t1.costcenterid = t3.costcenterid
     JOIN profitcenters t4 ON t1.profitcenterid = t4.profitcenterid
UNION ALL
 SELECT t1.actype,
    t1.actypedesc,
    t1.acpurpose,
    t1.acheadcode,
    t1.internalac,
    t1.custsysac,
    t1.controlac,
    t1.aclmtcategory,
    t1.actypeisactive,
    t1.profitcenterid,
    t1.costcenterid,
    t1.taxapplicable,
    t1.accaddlvar1,
    t1.accaddlvar2,
    t1.accaddlchar1,
    t1.accaddlvar3,
    t1.accaddlvar4,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.assertorliability,
    t1.onbalancesheet,
    t1.allowoverdraw,
    t1.actypegrpid,
    t1.extractiontype,
    t2.groupcode,
    t2.groupdescription,
    t2.accttypelevel,
    t3.costcentercode,
    t3.costcenterdesc,
    t4.profitcentercode,
    t4.profitcenterdesc
   FROM rmtaccounttypes t1
     LEFT JOIN accounttypegroup t2 ON t1.actypegrpid = t2.groupid
     LEFT JOIN costcenters t3 ON t1.costcenterid = t3.costcenterid
     JOIN profitcenters t4 ON t1.profitcenterid = t4.profitcenterid
  WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM rmtaccounttypes_temp
          WHERE rmtaccounttypes_temp.actype = t1.actype))
</createView>
	</changeSet>

	<changeSet id="15_pre" author="aditya.a">
		<sql>
			<![CDATA[
				UPDATE RMTAccountTypes SET ControlAc = 0 where ControlAc is null;
				UPDATE RMTAccountTypes_temp SET ControlAc = 0 where ControlAc is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="16" author="satyanarayana.g">
		<createView viewName="RMTFINANCETYPES_ORGVIEW" replaceIfExists="true">
 	 		SELECT T1.FINTYPE,
					T1.FINCATEGORY,
					T1.FINTYPEDESC,
					T1.FINCCY,
					T1.FINDAYSCALTYPE,
					T1.FINACTYPE,
					T1.FINCONTINGENTACTYPE,
					T1.FINISGENREF,
					T1.FINMAXAMOUNT,
					T1.FINMINAMOUNT,
					T1.FINISOPENNEWFINAC,
					T1.FINISALWMD,
					T1.FINSCHDMTHD,
					T1.FINISALWGRACE,
					T1.EQUALREPAYMENT,
					T1.FINRATETYPE,
					T1.FINBASERATE,
					T1.FINSPLRATE,
					T1.FININTRATE,
					T1.FINMINRATE,
					T1.FINMAXRATE,
					T1.FINDFTINTFRQ,
					T1.FINISINTCPZ,
					T1.FINCPZFRQ,
					T1.FINISRVWALW,
					T1.FINRVWFRQ,
					T1.FINGRCRATETYPE,
					T1.FINGRCBASERATE,
					T1.FINGRCSPLRATE,
					T1.FINGRCINTRATE,
					T1.FINGRCMINRATE,
					T1.FINGRCMAXRATE,
					T1.FINGRCDFTINTFRQ,
					T1.FINGRCISINTCPZ,
					T1.FINGRCCPZFRQ,
					T1.FINGRCISRVWALW,
					T1.FINGRCRVWFRQ,
					T1.FINMINTERM,
					T1.FINMAXTERM,
					T1.FINDFTTERMS,
					T1.FINRPYFRQ,
					T1.FINREPAYMETHOD,
					T1.FINISALWDIFFERMENT,
					T1.FINMAXDIFFERMENT,
					T1.FINISACTIVE,
					T1.STEPFINANCE,
					T1.STEPPINGMANDATORY,
					T1.ALWMANUALSTEPS,
					T1.ALWDSTEPPOLICIES,
					T1.DFTSTEPPOLICY,
					T1.FINISDWPAYREQUIRED,
					T1.FINRVWRATEAPPLFOR,
					T1.FINALWRATECHANGEANYDATE,
					T1.FINISINTCPZATGRCEND,
					T1.FINSCHCALCODEONRVW,
					T1.ALWPLANDEFERMENT,
					T1.PLANDEFERCOUNT,
					T1.PFTPAYACTYPE,
					T1.FINISOPENPFTPAYACC,
					T1.FINISALWGRCREPAY,
					T1.FINGRCSCHDMTHD,
					T1.FINGRCMARGIN,
					T1.FINMARGIN,
					T1.FINCOMMITMENTREQ,
					T1.FINCOLLATERALREQ,
					T1.FINDEPRECIATIONREQ,
					T1.FINDEPRECIATIONFRQ,
					T1.FINBANKCONTINGENTACTYPE,
					T1.FINPROVISIONACTYPE,
					T1.ALLOWRIAINVESTMENT,
					T1.OVERRIDELIMIT,
					T1.LIMITREQUIRED,
					T1.FINCOMMITMENTOVRRIDE,
					T1.FINCOLLATERALOVRRIDE,
					T1.FINREPAYPFTONFRQ,
					T1.FINPFTUNCHANGED,
					T1.APPLYODPENALTY,
					T1.ODINCGRCDAYS,
					T1.ODCHARGETYPE,
					T1.ODGRACEDAYS,
					T1.ODCHARGECALON,
					T1.ODCHARGEAMTORPERC,
					T1.ODALLOWWAIVER,
					T1.ODMAXWAIVERPERC,
					T1.FINDIVISION,
					T3.DIVISIONCODEDESC AS LOVDESCFINDIVISIONNAME,
					T1.FINSUSPACTYPE,
					T1.PRODUCT,
					T1.STARTDATE,
					T1.ENDDATE,
					T1.ALLOWDOWNPAYPGM,
					T1.FINTYPEDESC AS LOVDESCPROMOFINTYPEDESC,
					T1.REMARKS,
					T4.POLICYDESC AS LOVDESCDFTSTEPPOLICYNAME,
					T1.PASTDUEPFTCALMTHD,
					T1.PASTDUEPFTMARGIN,
					T1.ALWADVANCERENT,
					T1.GRCADVBASERATE,
					T1.GRCADVMARGIN,
					T1.GRCADVPFTRATE,
					T1.RPYADVBASERATE,
					T1.RPYADVMARGIN,
					T1.RPYADVPFTRATE,
					T1.ROLLOVERFINANCE,
					T1.ROLLOVERFRQ,
					T1.DOWNPAYRULE,
					T1.ALWMULTIPARTYDISB,
					T1.COLLATERALTYPE,
					T1.TDSAPPLICABLE,
					T5.RULECODE     AS DOWNPAYRULECODE,
					T5.RULECODEDESC AS DOWNPAYRULEDESC,
					T1.APPLYGRCPRICING,
					T1.APPLYRPYPRICING,
					T6.RULECODE AS GRCPRICINGMETHODDESC,
					T7.RULECODE AS RPYPRICINGMETHODDESC,
					T1.DROPLINEOD,
					T1.DROPPINGMETHOD,
					T1.RATECHGANYDAY,
					T4.STEPTYPE AS DFTSTEPPOLICYTYPE,
					T1.MANUALSCHEDULE,
					T1.ALWBPI,
					T1.BPITREATMENT,
					T1.PFTDUESCHON,
					T1.PLANEMIHALW,
					T1.PLANEMIHMETHOD,
					T1.PLANEMIHMAXPERYEAR,
					T1.PLANEMIHMAX,
					T1.PLANEMIHLOCKPERIOD,
					T1.PLANEMICPZ,
					T1.UNPLANEMIHLOCKPERIOD,
					T1.UNPLANEMICPZ,
					T1.REAGECPZ,
					T1.FDDLOCKPERIOD,
					T1.ALWDRPYMETHODS,
					T1.MAXUNPLANNEDEMI,
					T1.MAXREAGEHOLIDAYS,
					T1.ROUNDINGMODE,
					T1.ROUNDINGTARGET,
					T1.FREQUENCYDAYS,
					T1.QUICKDISB,
					T1.ALWREAGE,
					T1.ALWUNPLANEMIHOLIDAY,
					T1.ALWMAXDISBCHECKREQ,
					T1.PRODUCTCATEGORY,
					T1.RPYHIERARCHY,
					T1.DEVELOPERFINANCE,
					T3.ENTITYCODE AS LOVDESCENTITYCODE,
					T8.ENTITYDESC AS LOVDESCENTITYDESC,
					T1.COSTOFFUNDS,
					T1.CHEQUECAPTUREREQ,
					T1.FINLTVCHECK,
					T1.PARTIALLYSECURED,
					T1.ALWADVEMI,
					T1.ADVEMIMINTERMS,
					T1.ADVEMIMAXTERMS,
					T1.ADVEMIDFTTERMS,
					T1.ADVEMISCHDMTHD,
					T1.BPIPFTDAYSBASIS,
					T1.ELIGIBILITYMETHODS,
					T1.ALWHYBRIDRATE,
					T1.FIXEDRATETENOR,
					T1.ODMINCAPAMOUNT,
					T1.ODRULECODE,
					T1.ALWZEROINTACC,
					T1.FINISALWPARTIALRPY,
					T1.AUTOREJECTIONDAYS,
					T1.TAXNOMAND,
					T1.PUTCALLREQUIRED,
					T1.GRCADVINTERSETREQ,
					T1.GRCADVTYPE,
					T1.GRCADVMINTERMS,
					T1.GRCADVMAXTERMS,
					T1.GRCADVDEFAULTTERMS,
					T1.ADVINTERSETREQ,
					T1.ADVTYPE,
					T1.ADVMINTERMS,
					T1.ADVMAXTERMS,
					T1.ADVDEFAULTTERMS,
					T1.ADVSTAGE,
					T1.DSFREQ,
					T1.CASHCOLLATERALREQ,
					T1.ALWEARLYPAYMETHODS
					FROM RMTFINANCETYPES T1
					JOIN SMTDIVISIONDETAIL T3 ON T1.FINDIVISION = T3.DIVISIONCODE
					LEFT JOIN STEPPOLICYHEADER T4 ON T1.DFTSTEPPOLICY = T4.POLICYCODE
					LEFT JOIN RULES T5 ON T1.DOWNPAYRULE = T5.RULEID
					LEFT JOIN RULES T6 ON T1.GRCPRICINGMETHOD = T6.RULEID
					LEFT JOIN RULES T7 ON T1.RPYPRICINGMETHOD = T7.RULEID
					LEFT JOIN ENTITY T8 ON T3.ENTITYCODE = T8.ENTITYCODE
 	 	</createView>
	</changeSet>

	<changeSet id="17" author="vijaya.a">
		<sql>
			<![CDATA[
				Update DATA_ENGINE_CONFIG set SKIPHEADERROW = 1 where NAME = 'COLLETARAL_VALUE_UPDATE';
			]]>
		</sql>
	</changeSet>
	<changeSet id="17" author="saikiran.v">
		<addColumn tableName="fintaxdetail">
			<column name="sezCertificateNo" type="varchar(20)" />
			<column name="sezValueDate" type="datetime" />
		</addColumn>
	</changeSet>
	<changeSet id="18" author="saikiran.v">
		<addColumn tableName="Fintaxdetail_Temp">
			<column name="sezCertificateNo" type="varchar(20)" />
			<column name="sezValueDate" type="datetime" />
		</addColumn>
	</changeSet>
	<changeSet id="19" author="saikiran.v">
		<createView viewName="fintaxdetail_aview" replaceIfExists="true">
			SELECT t1.finreference,
		    t1.applicablefor,
		    t1.taxcustid,
		    t1.taxexempted,
		    t1.taxnumber,
		    t1.addrline1,
		    t1.addrline2,
		    t1.addrline3,
		    t1.addrline4,
		    t1.country,
		    t1.province,
		    t1.city,
		    t1.pincode,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.countrydesc countryname,
		    t3.cpprovincename provincename,
		    t4.pccityname cityname,
		    t5.areaname pincodename,
		    t6.custcif,
		    t6.custshrtname,
		     t1.sezCertificateNo ,
			t1.sezValueDate
		   FROM fintaxdetail t1
		     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
		     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
		     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
		     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
		     INNER JOIN customers t6 ON t1.taxcustid = t6.custid;
	 </createView>
	</changeSet>
	<changeSet id="20" author="saikiran.v">
		<createView viewName="fintaxdetail_tview" replaceIfExists="true">
				 SELECT t1.finreference,
			    t1.applicablefor,
			    t1.taxcustid,
			    t1.taxexempted,
			    t1.taxnumber,
			    t1.addrline1,
			    t1.addrline2,
			    t1.addrline3,
			    t1.addrline4,
			    t1.country,
			    t1.province,
			    t1.city,
			    t1.pincode,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.countrydesc countryname,
			    t3.cpprovincename provincename,
			    t4.pccityname  cityname,
			    t5.areaname pincodename,
			    t6.custcif,
			    t6.custshrtname,
		    	t1.sezCertificateNo ,
				t1.sezValueDate
			   FROM fintaxdetail_temp t1
			     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
			     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
			     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
			     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
			     JOIN customers t6 ON t1.taxcustid = t6.custid;
		</createView>
	</changeSet>
	<changeSet id="21" author="saikiran.v">
		<createView viewName="fintaxdetail_view" replaceIfExists="true">
					SELECT t1.finreference,
				    t1.applicablefor,
				    t1.taxcustid,
				    t1.taxexempted,
				    t1.taxnumber,
				    t1.addrline1,
				    t1.addrline2,
				    t1.addrline3,
				    t1.addrline4,
				    t1.country,
				    t1.province,
				    t1.city,
				    t1.pincode,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.countrydesc countryname,
				    t3.cpprovincename provincename,
				    t4.pccityname cityname,
				    t5.areaname pincodename,
				    t6.custcif,
				    t6.custshrtname,
				    t1.sezCertificateNo ,
			     	t1.sezValueDate
				   FROM fintaxdetail_temp t1
				     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
				     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
				     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
				     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
				     INNER JOIN customers t6 ON t1.taxcustid = t6.custid
				UNION ALL
				 SELECT t1.finreference,
				    t1.applicablefor,
				    t1.taxcustid,
				    t1.taxexempted,
				    t1.taxnumber,
				    t1.addrline1,
				    t1.addrline2,
				    t1.addrline3,
				    t1.addrline4,
				    t1.country,
				    t1.province,
				    t1.city,
				    t1.pincode,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.countrydesc countryname,
				    t3.cpprovincename provincename,
				    t4.pccityname cityname,
				    t5.areaname pincodename,
				    t6.custcif,
				    t6.custshrtname,
				    t1.sezCertificateNo,
			     	t1.sezValueDate
				   FROM fintaxdetail t1
				     LEFT JOIN bmtcountries t2 ON t1.country = t2.countrycode
				     LEFT JOIN rmtcountryvsprovince t3 ON t1.province = t3.cpprovince AND t1.country = t3.cpcountry
				     LEFT JOIN rmtprovincevscity t4 ON t1.city = t4.pccity AND t1.province = t4.pcprovince AND t1.country = t4.pccountry
				     LEFT JOIN pincodes t5 ON t1.pincode = t5.pincode AND t1.city = t5.city
				     INNER JOIN customers t6 ON t1.taxcustid = t6.custid
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM fintaxdetail_temp
				          WHERE fintaxdetail_temp.finreference = t1.finreference));
		</createView>
	</changeSet>
	<changeSet id="22" author="saikiran.v">
		<sql>
			<![CDATA[
				INSERT INTO SecGroups SELECT (select (SeqNo+1) from SeqSecGroups), 'FinanceTaxDetailDialog', 'Finance Tax Detail Dialog', 0,1000,'2017-01-03 12:41:37','Approved',NULL,NULL,NULL,NULL,NULL,0 FROM SeqSecGroups WHERE 0=0;
							
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'FinanceTaxDetailDialog_SEZCertificateNumber','FinanceTaxDetailDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'FinanceTaxDetailDialog_SEZValueDatee','FinanceTaxDetailDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FinanceTaxDetailDialog'), (Select RightID from SecRights where RightName = 'FinanceTaxDetailDialog_SEZCertificateNumber'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FinanceTaxDetailDialog'), (Select RightID from SecRights where RightName = 'FinanceTaxDetailDialog_SEZValueDatee'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="17.1" author="shinde.b">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				
				INSERT INTO SecGroups Values ((Select max(GrpID)+1 From SecGroups), 'LTV_BREACHES_REPORTS', 'Group for LTV Reports', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menu_Item_LTVBreachReport', 'MENU', 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'LTV_BREACHES_REPORTS'), (Select RightID from SecRights where RightName = 'menu_Item_LTVBreachReport'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
			]]>
		</sql>
	</changeSet>

	<changeSet id="24" author="shinde.b">
		<sql>
			<![CDATA[
			     delete from REPORTFILTERFIELDS where reportid in (select reportid from REPORTCONFIGURATION where menuitemcode='menu_Item_LTVBreachReport');
	             delete from REPORTCONFIGURATION where menuitemcode='menu_Item_LTVBreachReport';
	
                 Insert into REPORTCONFIGURATION values ((Select MAX(reportid)+1 from reportconfiguration),'Excel:LTV Breach Report','LTV Breach Report',1,'LTVBreachReport','Datasource',1,'menu_Item_LTVBreachReport',1,1000,null,null,null,null,null,null,0,current_timestamp,0,1);
                 Insert into REPORTFILTERFIELDS values ((select reportid from reportconfiguration where menuitemcode ='menu_Item_LTVBreachReport'),1,'FinType','LOVSEARCH','Loan Type','fm.FinType',null,'FinanceType','getFinType','getFinTypeDesc',1,0,0,0,1,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
                 Insert into REPORTFILTERFIELDS values ((select reportid from reportconfiguration where menuitemcode ='menu_Item_LTVBreachReport'),2,'CustCIF','LOVSEARCH','Customer Number','cus.CustCIF',null,'Customer','getCustCIF','getCustShrtName',1,0,0,0,2,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			]]>
		</sql>
	</changeSet>

	<changeSet id="24.1" author="shinde.b">
	  <sql>
		<![CDATA[
		    UPDATE REPORTCONFIGURATION SET DATASOURCENAME='dataSource' WHERE REPORTID=(select reportid from reportconfiguration where menuitemcode ='menu_Item_LTVBreachReport');
	     ]]>
	  </sql>
	</changeSet>
	
	<changeSet id="25" author="satyanarayana.g">
		<sql>
			<![CDATA[
			   DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='ADD_DISB_DUES_WARNG' AND SYSPARMVALUE='N';
			   INSERT INTO SMTPARAMETERS VALUES ('ADD_DISB_DUES_WARNG', 'Add Disbursement Dues Warning', 'String', 1, 'N', 1, 0, NULL, NULL,'Add Disbursement Dues Warning', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
    </changeSet>

</databaseChangeLog>