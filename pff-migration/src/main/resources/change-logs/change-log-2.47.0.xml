<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

<changeSet id="1" author="Madhubabu">
<sql>
	Delete From smtparameters where sysparmcode = 'AHB_DOWNPAY_AC';
</sql>
</changeSet>

<changeSet id="2" author="satish">
<sql>
delete from SMTHolidayMaster;
delete from SMTWeekendMaster;

</sql>
</changeSet>
<changeSet id="3" author="satish">
		<createView replaceIfExists="true" viewName="Mandates_View">
SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference
FROM    	Mandates_Temp T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode 
            
UNION ALL

SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active,1 useExisting,T1.OrgReference
FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode 
			WHERE     NOT EXISTS (SELECT 1 FROM Mandates_TEMP WHERE MandateID = T1.MandateID)
		</createView>
		<createView replaceIfExists="true" viewName="Mandates_TView">
SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference
FROM    	Mandates_Temp  T1 INNER JOIN
			Customers  T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches  T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail  T4  ON T3.BankCode=T4.BankCode 
		</createView>
		<createView replaceIfExists="true" viewName="Mandates_AView">
SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 1 useExisting,T1.OrgReference
FROM    	Mandates  T1 INNER JOIN
			Customers  T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches  T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail  T4  ON T3.BankCode=T4.BankCode 
		</createView>
	</changeSet>
	
	<changeSet id="4"  author="Siva" >
	<sql>
			delete from ErrorDetails where ErrorCode = '30577';
		INSERT INTO ErrorDetails VALUES('30577','EN','E','Partial Settlement with more amounts are not allowed as Future Disbursements are being removed.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
</changeSet>


<changeSet id="5"  author="DurgaPrasad G" >
<sql>
	UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
	UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
	UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
	UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
	UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
	UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);

	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_HDFC_CHQ_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_HDFC_NEFT_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_OTHER_CHQ_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_OTHER_NEFT_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'MANDATES_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_RESPONSE','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'MANDATES_IMPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'ALM_REQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'CONTROL_DUMP_REQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'POSIDEX_UPDATE_EODREQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'POSIDEX_CUSTOMER_UPDATEREQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_HDFC_CHQ_EXPORT','Disbursement hdfc chq export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_HDFC_NEFT_EXPORT','Disbursement hdfc neft export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_OTHER_CHQ_EXPORT','Disbursement other  export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_OTHER_NEFT_EXPORT','Disbursement other  neft export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'MANDATES_EXPORT','Mandates  download',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_RESPONSE','Disbursement response import',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'MANDATES_IMPORT','Mandate response import',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'ALM_REQUEST','ALM Request',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'CONTROL_DUMP_REQUEST','Control dump request',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'POSIDEX_UPDATE_EODREQUEST','Posidex update eodrequest',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'POSIDEX_CUSTOMER_UPDATEREQUEST','Posidex customer updaterequest',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_CHQ_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_HDFC_CHQ_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_NEFT_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_HDFC_NEFT_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_CHQ_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_OTHER_CHQ_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_NEFT_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_OTHER_NEFT_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='MANDATES_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_RESPONSE'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_RESPONSE'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_IMPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='MANDATES_IMPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);																																		
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='ALM_REQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='ALM_REQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='CONTROL_DUMP_REQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='CONTROL_DUMP_REQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_UPDATE_EODREQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='POSIDEX_UPDATE_EODREQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_CUSTOMER_UPDATEREQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='POSIDEX_CUSTOMER_UPDATEREQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_HDFC_CHQ_EXPORT','Disbursement hdfc chq download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_HDFC_NEFT_EXPORT','Disbursement hdfc neft download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_OTHER_CHQ_EXPORT','Disbursement other chq download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_OTHER_NEFT_EXPORT','Disbursement other neft download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'MANDATES_EXPORT','Mandates download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_RESPONSE','Disbursement upload','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'MANDATES_IMPORT','Mandate upload','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'ALM_REQUEST','ALM Request','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'CONTROL_DUMP_REQUEST','Control dump request','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'POSIDEX_UPDATE_EODREQUEST','Posidex update eodrequest','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'POSIDEX_CUSTOMER_UPDATEREQUEST','Posidex customer updaterequest','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_CHQ_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_HDFC_CHQ_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_NEFT_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_HDFC_NEFT_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_CHQ_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_OTHER_CHQ_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_NEFT_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_OTHER_NEFT_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='MANDATES_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_RESPONSE'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_RESPONSE'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_IMPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='MANDATES_IMPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='ALM_REQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='ALM_REQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='CONTROL_DUMP_REQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='CONTROL_DUMP_REQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_UPDATE_EODREQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='POSIDEX_UPDATE_EODREQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_CUSTOMER_UPDATEREQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='POSIDEX_CUSTOMER_UPDATEREQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_HDFC_CHQ_EXPORT','Disbursement hdfc chq export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_HDFC_NEFT_EXPORT','Disbursement hdfc neft export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_OTHER_CHQ_EXPORT','Disbursement other  export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_OTHER_NEFT_EXPORT','Disbursement other  neft export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'MANDATES_EXPORT','Mandates  download',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_RESPONSE','Disbursement response import',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'MANDATES_IMPORT','Mandate response import',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'ALM_REQUEST','ALM Request',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'CONTROL_DUMP_REQUEST','Control dump request',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'POSIDEX_UPDATE_EODREQUEST','Posidex update eodrequest',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'POSIDEX_CUSTOMER_UPDATEREQUEST','Posidex customer updaterequest',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );

	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_HDFC_CHQ_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_HDFC_CHQ_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_HDFC_NEFT_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_HDFC_NEFT_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_OTHER_CHQ_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_OTHER_CHQ_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_OTHER_NEFT_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_OTHER_NEFT_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='MANDATES_EXPORT'), (select RoleID from SecRoles where RoleCd='MANDATES_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_RESPONSE'), (select RoleID from SecRoles where RoleCd='DISB_RESPONSE'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='MANDATES_IMPORT'), (select RoleID from SecRoles where RoleCd='MANDATES_IMPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='ALM_REQUEST'), (select RoleID from SecRoles where RoleCd='ALM_REQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='CONTROL_DUMP_REQUEST'), (select RoleID from SecRoles where RoleCd='CONTROL_DUMP_REQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='POSIDEX_UPDATE_EODREQUEST'), (select RoleID from SecRoles where RoleCd='POSIDEX_UPDATE_EODREQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='POSIDEX_CUSTOMER_UPDATEREQUEST'), (select RoleID from SecRoles where RoleCd='POSIDEX_CUSTOMER_UPDATEREQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)

	UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
	UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
	UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
	UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
	UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
	UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
</sql>
</changeSet>

     	 	  	
<changeSet id="6" author="DurgaPrasad G" dbms="oracle">	
   		<sql splitStatements="false">
     		 begin
         	 execute immediate 'CREATE SEQUENCE SEQ_DATA_ENGINE_PROCESS_LOG START WITH 1 INCREMENT BY 1 MAXVALUE 9223372036854775807 NOCYCLE';  
     		 end;  
     	 </sql>
 </changeSet>
 
 <changeSet id="7" author="DurgaPrasad G" dbms="postgresql">	
   		<sql splitStatements="false">
   			do $$
			 begin
			 execute 'CREATE SEQUENCE SEQ_DATA_ENGINE_PROCESS_LOG START  1 INCREMENT BY 1 ';  
			 end;  
			$$;
	    </sql>
 </changeSet>
 
 <changeSet id="8" author="DurgaPrasad G" dbms="mssql">
		<sql splitStatements="false">
			CREATE TABLE SEQ_DATA_ENGINE_PROCESS_LOG(
			SeqNo 				bigint IDENTITY(1,1) NOT NULL,
			Value 				int NOT NULL
			);	
		</sql>
</changeSet>



<changeSet id="9" author="DurgaPrasad G">
	<dropTable tableName="ALM" />
</changeSet>

<changeSet id="10" author="DurgaPrasad G">
<createTable tableName="ALM">
			<column name="AGREEMENTID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(12)">
				<constraints nullable="false" />
			</column>
			<column name="NPA_STAGEID" type="varchar(12)"/>
			<column name="INSTLAMT" type="NUMBER (16,2)"/>
			<column name="PRINCOMP" type="NUMBER (16,2)"/>
			<column name="INTCOMP" type="NUMBER (16,2)"/>
			<column name="DUEDATE" type="datetime" />
			<column name="ACCRUEDAMT" type="NUMBER (16,2)"/>
			<column name="ACCRUEDON" type="datetime" />
			<column name="CUMULATIVEACCRUALAMT" type="NUMBER (16,2)"/>
			<column name="ADVFLAG" type="char(1)"/>
</createTable>
</changeSet>

<changeSet  id="11" author="DurgaPrasad G" >
<createView viewName="INT_ALM_VIEW" replaceIfExists="true">
	Select Right(F.FinReference,8) AGREEMENTID,F.ApplicationNo AGREEMENTNO,F.FinType PRODUCTFLAG,'' NPA_STAGEID ,
	(FP.TotalPriBal+Fp.TotalPftBal)/CcyMinorCcyUnits INSTLAMT,FP.TotalPriBal/CcyMinorCcyUnits PRINCOMP,Fp.TotalPftBal/CcyMinorCcyUnits INTCOMP,Fp.FirstRepayDate DUEDATE,
	Fp.AccruePft/CcyMinorCcyUnits ACCRUEDAMT,NULL ACCRUEDON,Fp.AccruePft/CcyMinorCcyUnits CUMULATIVE_ACCRUAL_AMT,'N' ADVFLAG
	from FinanceMain F
	Inner join FinPftDetails FP on Fp.FinReference=F.FinReference
	Inner Join RMTCurrencies RC on RC.CcyCode=F.FinCcy
</createView>
</changeSet>


<changeSet id="12" author="DurgaPrasad G">
	<dropTable tableName="ALM" />
</changeSet>

<changeSet id="13" author="DurgaPrasad G">
<createTable tableName="ALM">
			<column name="AGREEMENTID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(12)">
				<constraints nullable="false" />
			</column>
			<column name="NPA_STAGEID" type="varchar(12)"/>
			<column name="INSTLAMT" type="NUMBER (16,2)"/>
			<column name="PRINCOMP" type="NUMBER (16,2)"/>
			<column name="INTCOMP" type="NUMBER (16,2)"/>
			<column name="DUEDATE" type="datetime" />
			<column name="ACCRUEDAMT" type="NUMBER (16,2)"/>
			<column name="ACCRUEDON" type="datetime" />
			<column name="CUMULATIVE_ACCRUAL_AMT" type="NUMBER (16,2)"/>
			<column name="ADVFLAG" type="char(1)"/>
</createTable>
</changeSet>


<changeSet  id="15" author="Siva" >
<createView viewName="CollateralAssignment_View" replaceIfExists="true">
	
 Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment_Temp CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain_Temp FM on CA.Reference = FM.FinReference
        left join Commitments_Temp CM on CM.CmtReference =CA.Reference
        union all 
  Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain FM on CA.Reference = FM.FinReference
        left join Commitments CM on CM.CmtReference =CA.Reference
	  WHERE     NOT EXISTS
 (SELECT 1 FROM CollateralAssignment_Temp 
  WHERE CollateralRef = CA.CollateralRef and Module =CA.Module and Reference=CA.Reference)

</createView>
</changeSet>

<changeSet  id="16" author="Siva" >
<createView viewName="CollateralAssignment_TView" replaceIfExists="true">
	
 Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  (FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount) UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment_Temp CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain_Temp FM on CA.Reference = FM.FinReference  


</createView>
</changeSet>

<changeSet  id="17" author="Siva" >
<createView viewName="CollateralAssignment_AView" replaceIfExists="true">
	
  Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain FM on CA.Reference = FM.FinReference
        left join Commitments CM on CM.CmtReference =CA.Reference

</createView>
</changeSet>

<changeSet id="18" author="DurgaPrasad G">
	<createTable tableName="PSX_UCIN_REVERSE_FEED">
				<column name="CUSTOMER_NO" type="int"/>
				<column name="DATASOURCE" type="varchar(3)"/>
				<column name="UCIN_NO" type="varchar(20)">
					<constraints nullable="false" />
				</column>
				<column name="SEGMENT" type="varchar(5)">
					<constraints nullable="false" />
				</column>
				<column name="BATCH_ID" type="varchar(12)"/>
				<column name="BASE_TYPE_FLAG" type="varchar(20)">
					<constraints nullable="false" />
				</column>
				<column name="PSX_BATCH_ID" type="bigint" />
				<column name="PROCESSED_FLAG" type="char(1)">
					<constraints nullable="false" />
				</column>
				<column name="CUSTOMER_ID"  type="varchar(20)" />
				<column name="SOURCE_SYS_ID" type="int"/>
	</createTable>
</changeSet>

 <changeSet id="19" author="DurgaPrasad G">
	<dropTable tableName="CF_CONTROL_DUMP" />
</changeSet>

<changeSet  id="20" author="DurgaPrasad G" >
<createTable tableName="CF_CONTROL_DUMP">
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="SCHEMEID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="BRANCHID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="NPA_STAGEID" type="char(2)">
				<constraints nullable="false" />
			</column>
			<column name="LOAN_STATUS" type="char(1)">
				<constraints nullable="false" />
			</column>
			<column name="DISB_STATUS" type="char(2)">
				<constraints nullable="false" />
			</column>
			<column name="FIRST_DUE_DATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="MATURITY_DATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="AMTFIN" type="int" />
			<column name="DISBURSED_AMOUNT" type="decimal(18,2)" />
			<column name="EMI_DUE" type="decimal(18,2)" />
			<column name="PRINCIPAL_DUE" type="decimal(18,2)"  />
			<column name="INTEREST_DUE" type="decimal(18,2)"  />
			<column name="EMI_RECEIVED" type="decimal(18,2)" />
			<column name="PRINCIPAL_RECEIVED" type="decimal(18,2)" />
			<column name="INTEREST_RECEIVED" type="decimal(18,2)" />
			<column name="EMI_OS" type="decimal(18,2)" />
			<column name="PRINCIPAL_OS" type="decimal(18,2)" />
			<column name="INTEREST_OS" type="decimal(18,2)" />
			<column name="BULK_REFUND" type="decimal(18,2)" />
			<column name="PRINCIPAL_WAIVED" type="decimal(18,2)" />
			<column name="EMI_PRINCIPAL_WAIVED" type="decimal(18,2)" />
			<column name="EMI_INTEREST_WAIVED" type="decimal(18,2)" />
			<column name="PRINCIPAL_AT_TERM" type="decimal(18,2)" />
			<column name="ADVANCE_EMI" type="decimal(18,2)" />
			<column name="ADVANCE_EMI_BILLED" type="decimal(18,2)" />
			<column name="MIGRATED_ADVANCE_EMI" type="decimal(18,2)" />
			<column name="MIGRATED_ADVANCE_EMI_BILLED" type="decimal(18,2)" />
			<column name="MIGRATED_ADVANCE_EMI_UNBILLED" type="decimal(18,2)" />
			<column name="CLOSED_CAN_ADV_EMI" type="decimal(18,2)" />
			<column name="PRINCIPAL_BALANCE" type="decimal(18,2)" />
			<column name="INTEREST_BALANCE" type="decimal(18,2)" />
			<column name="SOH_BALANCE" type="decimal(18,2)" />
			<column name="NO_OF_UNBILLED_EMI" type="decimal(18,2)" />
			<column name="TOTAL_INTEREST" type="decimal(18,2)" />
			<column name="ACCRUED_AMOUNT" type="decimal(18,2)" />
			<column name="BALANCE_UMFC" type="decimal(18,2)" />
			<column name="EMI_IN_ADVANCE_RECEIVED_MAKER" type="decimal(18,2)" />
			<column name="EMI_IN_ADVANCE_BILLED" type="decimal(18,2)" />
			<column name="EMI_IN_ADVANCE_UNBILLED" type="decimal(18,2)" />
			<column name="MIG_ADV_EMI_BILLED_PRIN_COMP" type="decimal(18,2)" />
			<column name="MIG_ADV_EMI_BILLED_INTCOMP" type="decimal(18,2)" />
			<column name="MIG_ADV_EMI_UNBILLED_PRINCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_BILLED_PRINCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_BILLED_INTCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_UNBILLED_PRINCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_UNBILLED_INTCOMP" type="decimal(18,2)" />
			<column name="CLOS_CAN_ADV_EMI_PRINCOMP" type="decimal(18,2)" />
			<column name="CLOS_CAN_ADV_EMI_INTCOMP" type="decimal(18,2)" />
			<column name="SECURITY_DEPOSIT" type="decimal(18,2)" />
			<column name="SECURITY_DEPOSIT_ADJUSTED" type="decimal(18,2)" />
			<column name="ROUNDING_DIFF_RECEIVABLE" type="decimal(18,2)" />
			<column name="ROUNDING_DIFF_RECEIVED" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_RECEIVABLE" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_RECEIVED" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_PAYABLE" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_PAID" type="decimal(18,2)" />
			<column name="WRITEOFF_DUE" type="decimal(18,2)" />
			<column name="WRITEOFF_RECEIVED" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_RECEIVABLE" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_RECEIVED" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_PAYABLE" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_PAID" type="decimal(18,2)" />
			<column name="NET_EXCESS_RECEIVED" type="decimal(18,2)" />
			<column name="NET_EXCESS_ADJUSTED" type="decimal(18,2)" />
			<column name="LPP_CHARGES_RECEIVABLE" type="decimal(18,2)" />
			<column name="LPP_CHARGES_RECEIVED" type="decimal(18,2)" />			
			<column name="PDC_SWAP_CHARGESRECEIVABLE" type="decimal(18,2)" />			
			<column name="PDC_SWAP_CHARGESRECEIVED" type="decimal(18,2)" />			
			<column name="REPO_CHARGES_RECEIVABLE" type="decimal(18,2)" />
			<column name="REPO_CHARGES_RECEIVED" type="decimal(18,2)" />
			<column name="FORECLOSURE_CHARGES_DUE" type="decimal(18,2)" />
			<column name="FORECLOSURE_CHARGES_RECEIVED" type="decimal(18,2)" />
			<column name="BOUNCE_CHARGES_DUE" type="decimal(18,2)" />
			<column name="BOUNCE_CHARGES_RECEIVED" type="decimal(18,2)" />
			<column name="INSUR_RENEW_CHARGE" type="decimal(18,2)" />
			<column name="INSUR_RENEW_CHARGE_RECD" type="decimal(18,2)" />
			<column name="INSUR_RECEIVABLE" type="decimal(18,2)" />
			<column name="INSUR_RECEIVED" type="decimal(18,2)" />
			<column name="INSUR_PAYABLE" type="decimal(18,2)" />
			<column name="INSUR_PAID" type="decimal(18,2)" />
			<column name="CUSTOMERID" type="bigint" />
			<column name="CUSTOMERNAME" type="varchar(300)" />
			<column name="SANCTIONED_TENURE" type="int" />
			<column name="LOAN_EMI" type="decimal(18,2)" />
			<column name="FLAT_RATE" type="Number(10,7)" />
			<column name="EFFECTIVE_RATE" type="Number(10,7)" />
			<column name="AGREEMENTDATE" type="datetime" />
			<column name="DISBURSALDATE" type="datetime" />
			<column name="CLOSUREDATE" type="datetime" />
			<column name="NO_OF_ADVANCE_EMIS" type="Number(3)" />
			<column name="ASSETCOST" type="Number(16,2)" />
			<column name="NO_OF_EMI_OS" type="int" />
			<column name="DPD" type="int" />
			<column name="CURRENT_BUCKET" type="int" />
			<column name="BRANCH_NAME" type="varchar(600)" />
			<column name="SCHEME_NAME" type="varchar(200)" />
			<column name="DERIVED_BUCKET" type="Number" />
			<column name="ASSETDESC" type="varchar(150)" />
			<column name="MAKE" type="varchar(35)" />
			<column name="CHASISNUM" type="varchar(50)" />
			<column name="REGDNUM" type="varchar(30)" />
			<column name="ENGINENUM" type="varchar(30)" />
			<column name="INVOICEAMT" type="Number(16,2)" />
			<column name="SUPPLIERDESC" type="varchar(300)" />
			<column name="INSTRUMENT" type="char(1)" />
			<column name="REPO_DATE" type="datetime" />
			<column name="LOCAL_OUTSTATION_FLAG" type="char(1)" />
			<column name="FIRST_REPAYDUE_DATE" type="datetime" />
</createTable>
</changeSet>


<changeSet  id="21" author="DurgaPrasad G" >
<createView viewName="INT_POSIDEX_UPDATE_EOD_VIEW" replaceIfExists="true">
Select '' BATCHID, C.CustCIF CUSTOMER_NO,'' SOURCE_SYS_ID,
	   C.CustFName FIRST_NAME, C.CustMName MIDDLE_NAME, C.CustLName LAST_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustDOB else '' end DOB,
	   Case when C.CustCtgCode='RETAIL' then CDPAN.CustDocTitle else '' end PAN,
	   Case when C.CustCtgCode='RETAIL' then CDDLN.CustDocTitle else '' end DRIVING_LICENSE_NUMBER,
	   Case when C.CustCtgCode='RETAIL' then CDVTR.CustDocTitle else '' end VOTER_ID,
	   Case when C.CustCtgCode='CORP' then CustDOB else '' end DATE_OF_INCORPORATION,
	   Case when C.CustCtgCode='CORP' then CDTAN.CustDocTitle else '' end TAN_NO,
	   '' PROCESS_TYPE,Case when C.CustCtgCode='RETAIL' then 'I' else 'C' end APPLICANT_TYPE,
	   Case when C.CustCtgCode='RETAIL' then EmpName else '' end EMPOYER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustMotherMaiden else '' end FATHER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CDPPT.CustDocTitle else '' end PASSPORT_NO,
	   '' ACCOUNT_NUMBER, '' CREDIT_CARD_NUMBER, 'N' PROCESS_FLAG,'' ERROR_CODE, '' ERROR_DESC,
	   C.CustCIF CUSTOMER_ID, '' SOURCE_SYSTEM, ''PSX_BATCH_ID, '' UCIN_FLAG,'' EOD_BATCH_ID,
	   CURRENT_TIMESTAMP INSERT_TS,
	   Case when C.CustCtgCode='RETAIL' then CustGenderCode else '' end GENDER,
	   Case when C.CustCtgCode='RETAIL' then CDADR.CustDocTitle else '' end AADHAR_NO,
	   Case when C.CustCtgCode='CORP' then CDCIN.CustDocTitle else '' end CIN,
	   Case when C.CustCtgCode='CORP' then CDDIN.CustDocTitle else '' end DIN,
	   Case when C.CustCtgCode='CORP' then CDRGNO.CustDocTitle else '' end REGISTRATION_NO,
	   Case when C.CustCtgCode='CORP' then CDCANO.CustDocTitle else '' end CA_NUMBER,
	   'CF' SEGMENT,'' BATCHID_2, C.CustCIF CUSTOMER_NO_2,'' SOURCE_SYS_ID_2,'CF' SEGMENT_2,
	   '' ADDRESS_TYPE, CA.CustAddrHNbr  ADDRESS_1,CA.CustFlatNbr ADDRESS_2,CA.CustAddrLine1 ADDRESS_3,
	   CA.CUSTADDRPROVINCE STATE, CA.CUSTADDRCITY CITY, CA.CUSTADDRZIP PIN,
	   CPLND1.PhoneCountryCode+CPLND1.PhoneAreaCode+CPLND1.PhoneNumber LANDLINE_1,
	   CPLND2.PhoneCountryCode+CPLND2.PhoneAreaCode+CPLND2.PhoneNumber LANDLINE_2,
	   CPMOB.PhoneCountryCode+CPMOB.PhoneAreaCode+CPMOB.PhoneNumber MOBILE,
	   CA.CustAddrStreet AREA, CA.CustAddrLine1 LANDMARK,'' STD,'' PROCESS_TYPE_2,
	   CEM.custEmail, 'N' PROCESS_FLAG_2,'' ERROR_CODE_2,'' ERROR_DESC_2,
	   C.custcif CUSTOMER_ID_2, '' SOURCE_SYSTEM_2,'' PSX_BATCH_ID_2,'' EOD_BATCH_ID_2,
	   '' BATCHID_3,'' STATUS,'' INSERT_TIMESTAMP,'' COMPLETION_TIMESTAMP,'' ERR_DESCRIPTION,
	   '' ERROR_CODE_3,'' BATCHID_4,C.CustCIF CUSTOMER_NO_3,'' SOURCE_SYS_ID_3,'CF' SEGMENT_3,
	   FM.FinReference DEAL_ID,FM.FinReference LAN_NO,'' CUSTOMER_TYPE, FM.FinReference APPLN_NO,
	   FM.FinType PRODUCT_CODE, '' PROCESS_TYPE_3,'N' PROCESS_FLAG_3,'' ERROR_CODE_4,
	   '' ERROR_DESC_3,'' PSX_BATCH_ID_3, '' PSX_ID, c.CustCIF CUSTOMER_ID_3,
	   '' SOURCE_SYSTEM_3,'' EOD_BATCH_ID_3,C.LastMntOn	   
from Customers C 
	 left join CustomerDocuments CDPAN on CDPAN.CustID = C.CustID and CDPAN.CustDocCategory='03'
	 left join CustomerDocuments CDDLN on CDDLN.CustID = C.CustID and CDDLN.CustDocCategory='04'
	 left join CustomerDocuments CDVTR on CDVTR.CustID = C.CustID and CDVTR.CustDocCategory='05'
	 left join CustomerDocuments CDTAN on CDTAN.CustID = C.CustID and CDTAN.CustDocCategory='15'
	 left join CustomerDocuments CDPPT on CDPPT.CustID = C.CustID and CDPPT.CustDocCategory='02'
	 left join CustomerDocuments CDADR on CDADR.CustID = C.CustID and CDADR.CustDocCategory='01'
	 left join CustomerDocuments CDCIN on CDCIN.CustID = C.CustID and CDCIN.CustDocCategory='16'
	 left join CustomerDocuments CDDIN on CDDIN.CustID = C.CustID and CDDIN.CustDocCategory='17'
	 left join CustomerDocuments CDRGNO on CDRGNO.CustID = C.CustID and CDRGNO.CustDocCategory='18'
	 left join CustomerDocuments CDCANO on CDCANO.CustID = C.CustID and CDCANO.CustDocCategory='19'
	 left join CustEmployeeDetail CE on CE.CustID = C.CustID 
	 left join CustomerAddresses CA on CA.CustID = C.CustID and custAddrPriority=5
	 left join CustomerPhoneNumbers CPLND1 on CPLND1.PhoneCustID = C.CustID and CPLND1.PhoneTypeCode='HOME'
	 left join CustomerPhoneNumbers CPLND2 on CPLND2.PhoneCustID = C.CustID and CPLND2.PhoneTypeCode='MOBILE2'
	 left join CustomerPhoneNumbers CPMOB on CPMOB.PhoneCustID = C.CustID and CPMOB.PhoneTypeCode='MOBILE1'
	 left join CustomerEMails CEM on CEM.CustID = C.CustID and CEM.CustEmailPriority=5
	 left join FinanceMain FM on FM.custid = C.CustID
	 where C.custAddlvar1 is null
</createView>
</changeSet>

<changeSet  id="22" author="DurgaPrasad G" >
<sql>
	Update SecRights set RightName = 'DISB_HDFC_EXPORT' Where RightName = 'DISB_HDFC_CHQ_EXPORT';
	Update SecRights set RightName = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where RightName = 'DISB_OTHER_CHQ_EXPORT';
	Update SecRights set RightName = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where RightName = 'DISB_OTHER_NEFT_EXPORT';
	
	Update SecGroups set GrpCode = 'DISB_HDFC_EXPORT' Where GrpCode = 'DISB_HDFC_CHQ_EXPORT';
	Update SecGroups set GrpCode = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where GrpCode = 'DISB_OTHER_CHQ_EXPORT';
	Update SecGroups set GrpCode = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where GrpCode = 'DISB_OTHER_NEFT_EXPORT';
	
	Update SecRoles set RoleCd = 'DISB_HDFC_EXPORT' Where RoleCd = 'DISB_HDFC_CHQ_EXPORT';
	Update SecRoles set RoleCd = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where RoleCd = 'DISB_OTHER_CHQ_EXPORT';
	Update SecRoles set RoleCd = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where RoleCd = 'DISB_OTHER_NEFT_EXPORT';
	
	Update SecOperations set OprCode = 'DISB_HDFC_EXPORT' Where OprCode = 'DISB_HDFC_CHQ_EXPORT';
	Update SecOperations set OprCode = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where OprCode = 'DISB_OTHER_CHQ_EXPORT';
	Update SecOperations set OprCode = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where OprCode = 'DISB_OTHER_NEFT_EXPORT';
	
	
	Delete from SecOperationRoles Where OprID = (Select OprID from SecOperations Where OprCode = 'DISB_HDFC_NEFT_EXPORT');
	Delete from SecOperations   Where OprCode = 'DISB_HDFC_NEFT_EXPORT';
	
	Delete from SecRoleGroups Where RoleID = (Select RoleID from SecRoles Where RoleCd = 'DISB_HDFC_NEFT_EXPORT');
	Delete from SecRoles  Where RoleCd = 'DISB_HDFC_NEFT_EXPORT';
	
	Delete from SecGroupRights Where GrpID = (Select GrpID from SecGroups Where GrpCode = 'DISB_HDFC_NEFT_EXPORT');
	Delete from SecGroups  Where GrpCode = 'DISB_HDFC_NEFT_EXPORT';
	
	Delete from SecRights  Where RightName = 'DISB_HDFC_NEFT_EXPORT';
</sql>
</changeSet>
</databaseChangeLog>
