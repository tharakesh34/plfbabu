<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

<changeSet id="1" author="Madhubabu">
<sql>
	Delete From smtparameters where sysparmcode = 'AHB_DOWNPAY_AC';
</sql>
</changeSet>

<changeSet id="2" author="satish">
<sql>
delete from SMTHolidayMaster;
delete from SMTWeekendMaster;

</sql>
</changeSet>
<changeSet id="3" author="satish">
		<createView replaceIfExists="true" viewName="Mandates_View">
SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference
FROM    	Mandates_Temp T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode 
            
UNION ALL

SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active,1 useExisting,T1.OrgReference
FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode 
			WHERE     NOT EXISTS (SELECT 1 FROM Mandates_TEMP WHERE MandateID = T1.MandateID)
		</createView>
		<createView replaceIfExists="true" viewName="Mandates_TView">
SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference
FROM    	Mandates_Temp  T1 INNER JOIN
			Customers  T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches  T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail  T4  ON T3.BankCode=T4.BankCode 
		</createView>
		<createView replaceIfExists="true" viewName="Mandates_AView">
SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 1 useExisting,T1.OrgReference
FROM    	Mandates  T1 INNER JOIN
			Customers  T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches  T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail  T4  ON T3.BankCode=T4.BankCode 
		</createView>
	</changeSet>
	
	<changeSet id="4"  author="Siva" >
	<sql>
			delete from ErrorDetails where ErrorCode = '30577';
		INSERT INTO ErrorDetails VALUES('30577','EN','E','Partial Settlement with more amounts are not allowed as Future Disbursements are being removed.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
</changeSet>


<changeSet id="5"  author="DurgaPrasad G" >
<sql>
	UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
	UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
	UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
	UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
	UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
	UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);

	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_HDFC_CHQ_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_HDFC_NEFT_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_OTHER_CHQ_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_OTHER_NEFT_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'MANDATES_EXPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'DISB_RESPONSE','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'MANDATES_IMPORT','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'ALM_REQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'CONTROL_DUMP_REQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'POSIDEX_UPDATE_EODREQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'POSIDEX_CUSTOMER_UPDATEREQUEST','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_HDFC_CHQ_EXPORT','Disbursement hdfc chq export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_HDFC_NEFT_EXPORT','Disbursement hdfc neft export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_OTHER_CHQ_EXPORT','Disbursement other  export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_OTHER_NEFT_EXPORT','Disbursement other  neft export',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'MANDATES_EXPORT','Mandates  download',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'DISB_RESPONSE','Disbursement response import',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'MANDATES_IMPORT','Mandate response import',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'ALM_REQUEST','ALM Request',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'CONTROL_DUMP_REQUEST','Control dump request',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'POSIDEX_UPDATE_EODREQUEST','Posidex update eodrequest',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'POSIDEX_CUSTOMER_UPDATEREQUEST','Posidex customer updaterequest',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_CHQ_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_HDFC_CHQ_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_NEFT_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_HDFC_NEFT_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_CHQ_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_OTHER_CHQ_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_NEFT_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_OTHER_NEFT_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_EXPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='MANDATES_EXPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_RESPONSE'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='DISB_RESPONSE'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_IMPORT'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='MANDATES_IMPORT'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);																																		
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='ALM_REQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='ALM_REQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='CONTROL_DUMP_REQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='CONTROL_DUMP_REQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_UPDATE_EODREQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='POSIDEX_UPDATE_EODREQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_CUSTOMER_UPDATEREQUEST'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='POSIDEX_CUSTOMER_UPDATEREQUEST'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_HDFC_CHQ_EXPORT','Disbursement hdfc chq download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_HDFC_NEFT_EXPORT','Disbursement hdfc neft download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_OTHER_CHQ_EXPORT','Disbursement other chq download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_OTHER_NEFT_EXPORT','Disbursement other neft download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'MANDATES_EXPORT','Mandates download','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'DISB_RESPONSE','Disbursement upload','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'MANDATES_IMPORT','Mandate upload','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'ALM_REQUEST','ALM Request','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'CONTROL_DUMP_REQUEST','Control dump request','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'POSIDEX_UPDATE_EODREQUEST','Posidex update eodrequest','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'POSIDEX_CUSTOMER_UPDATEREQUEST','Posidex customer updaterequest','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_CHQ_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_HDFC_CHQ_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_HDFC_NEFT_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_HDFC_NEFT_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_CHQ_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_OTHER_CHQ_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_OTHER_NEFT_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_OTHER_NEFT_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_EXPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='MANDATES_EXPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='DISB_RESPONSE'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='DISB_RESPONSE'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='MANDATES_IMPORT'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='MANDATES_IMPORT'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='ALM_REQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='ALM_REQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='CONTROL_DUMP_REQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='CONTROL_DUMP_REQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_UPDATE_EODREQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='POSIDEX_UPDATE_EODREQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
	INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='POSIDEX_CUSTOMER_UPDATEREQUEST'), (SELECT ROLEID FROM SECROLES WHERE ROLECD='POSIDEX_CUSTOMER_UPDATEREQUEST'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);

	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_HDFC_CHQ_EXPORT','Disbursement hdfc chq export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_HDFC_NEFT_EXPORT','Disbursement hdfc neft export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_OTHER_CHQ_EXPORT','Disbursement other  export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_OTHER_NEFT_EXPORT','Disbursement other  neft export',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'MANDATES_EXPORT','Mandates  download',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'DISB_RESPONSE','Disbursement response import',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'MANDATES_IMPORT','Mandate response import',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'ALM_REQUEST','ALM Request',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'CONTROL_DUMP_REQUEST','Control dump request',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'POSIDEX_UPDATE_EODREQUEST','Posidex update eodrequest',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
	INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'POSIDEX_CUSTOMER_UPDATEREQUEST','Posidex customer updaterequest',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );

	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_HDFC_CHQ_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_HDFC_CHQ_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_HDFC_NEFT_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_HDFC_NEFT_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_OTHER_CHQ_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_OTHER_CHQ_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_OTHER_NEFT_EXPORT'), (select RoleID from SecRoles where RoleCd='DISB_OTHER_NEFT_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='MANDATES_EXPORT'), (select RoleID from SecRoles where RoleCd='MANDATES_EXPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='DISB_RESPONSE'), (select RoleID from SecRoles where RoleCd='DISB_RESPONSE'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='MANDATES_IMPORT'), (select RoleID from SecRoles where RoleCd='MANDATES_IMPORT'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='ALM_REQUEST'), (select RoleID from SecRoles where RoleCd='ALM_REQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='CONTROL_DUMP_REQUEST'), (select RoleID from SecRoles where RoleCd='CONTROL_DUMP_REQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='POSIDEX_UPDATE_EODREQUEST'), (select RoleID from SecRoles where RoleCd='POSIDEX_UPDATE_EODREQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)
	INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='POSIDEX_CUSTOMER_UPDATEREQUEST'), (select RoleID from SecRoles where RoleCd='POSIDEX_CUSTOMER_UPDATEREQUEST'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0)

	UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
	UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
	UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
	UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
	UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
	UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
</sql>
</changeSet>

     	 	  	
<changeSet id="6" author="DurgaPrasad G" dbms="oracle">	
   		<sql splitStatements="false">
     		 begin
         	 execute immediate 'CREATE SEQUENCE SEQ_DATA_ENGINE_PROCESS_LOG START WITH 1 INCREMENT BY 1 MAXVALUE 9223372036854775807 NOCYCLE';  
     		 end;  
     	 </sql>
 </changeSet>
 
 <changeSet id="7" author="DurgaPrasad G" dbms="postgresql">	
   		<sql splitStatements="false">
   			do $$
			 begin
			 execute 'CREATE SEQUENCE SEQ_DATA_ENGINE_PROCESS_LOG START  1 INCREMENT BY 1 ';  
			 end;  
			$$;
	    </sql>
 </changeSet>
 
 <changeSet id="8" author="DurgaPrasad G" dbms="mssql">
		<sql splitStatements="false">
			CREATE TABLE SEQ_DATA_ENGINE_PROCESS_LOG(
			SeqNo 				bigint IDENTITY(1,1) NOT NULL,
			Value 				int NOT NULL
			);	
		</sql>
</changeSet>



<changeSet id="9" author="DurgaPrasad G">
	<dropTable tableName="ALM" />
</changeSet>

<changeSet id="10" author="DurgaPrasad G">
<createTable tableName="ALM">
			<column name="AGREEMENTID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(12)">
				<constraints nullable="false" />
			</column>
			<column name="NPA_STAGEID" type="varchar(12)"/>
			<column name="INSTLAMT" type="NUMBER (16,2)"/>
			<column name="PRINCOMP" type="NUMBER (16,2)"/>
			<column name="INTCOMP" type="NUMBER (16,2)"/>
			<column name="DUEDATE" type="datetime" />
			<column name="ACCRUEDAMT" type="NUMBER (16,2)"/>
			<column name="ACCRUEDON" type="datetime" />
			<column name="CUMULATIVEACCRUALAMT" type="NUMBER (16,2)"/>
			<column name="ADVFLAG" type="char(1)"/>
</createTable>
</changeSet>

<changeSet  id="11" author="DurgaPrasad G" dbms="mssql">
<createView viewName="INT_ALM_VIEW" replaceIfExists="true">
	Select Right(F.FinReference,8) AGREEMENTID,F.ApplicationNo AGREEMENTNO,F.FinType PRODUCTFLAG,'' NPA_STAGEID ,
	(FP.TotalPriBal+Fp.TotalPftBal)/CcyMinorCcyUnits INSTLAMT,FP.TotalPriBal/CcyMinorCcyUnits PRINCOMP,Fp.TotalPftBal/CcyMinorCcyUnits INTCOMP,Fp.FirstRepayDate DUEDATE,
	Fp.AccruePft/CcyMinorCcyUnits ACCRUEDAMT,NULL ACCRUEDON,Fp.AccruePft/CcyMinorCcyUnits CUMULATIVE_ACCRUAL_AMT,'N' ADVFLAG
	from FinanceMain F
	Inner join FinPftDetails FP on Fp.FinReference=F.FinReference
	Inner Join RMTCurrencies RC on RC.CcyCode=F.FinCcy
</createView>
</changeSet>
<changeSet  id="11" author="DurgaPrasad G" dbms="oracle">
<createView viewName="INT_ALM_VIEW" replaceIfExists="true">
	Select substr(F.FinReference,length(F.FinReference)-7,length(F.FinReference)) AGREEMENTID,F.ApplicationNo AGREEMENTNO,F.FinType PRODUCTFLAG,'' NPA_STAGEID ,
	(FP.TotalPriBal+Fp.TotalPftBal)/CcyMinorCcyUnits INSTLAMT,FP.TotalPriBal/CcyMinorCcyUnits PRINCOMP,Fp.TotalPftBal/CcyMinorCcyUnits INTCOMP,Fp.FirstRepayDate DUEDATE,
	Fp.AccruePft/CcyMinorCcyUnits ACCRUEDAMT,NULL ACCRUEDON,Fp.AccruePft/CcyMinorCcyUnits CUMULATIVE_ACCRUAL_AMT,'N' ADVFLAG
	from FinanceMain F
	Inner join FinPftDetails FP on Fp.FinReference=F.FinReference
	Inner Join RMTCurrencies RC on RC.CcyCode=F.FinCcy
</createView>
</changeSet>



<changeSet id="12" author="DurgaPrasad G">
	<dropTable tableName="ALM" />
</changeSet>

<changeSet id="13" author="DurgaPrasad G">
<createTable tableName="ALM">
			<column name="AGREEMENTID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(12)">
				<constraints nullable="false" />
			</column>
			<column name="NPA_STAGEID" type="varchar(12)"/>
			<column name="INSTLAMT" type="NUMBER (16,2)"/>
			<column name="PRINCOMP" type="NUMBER (16,2)"/>
			<column name="INTCOMP" type="NUMBER (16,2)"/>
			<column name="DUEDATE" type="datetime" />
			<column name="ACCRUEDAMT" type="NUMBER (16,2)"/>
			<column name="ACCRUEDON" type="datetime" />
			<column name="CUMULATIVE_ACCRUAL_AMT" type="NUMBER (16,2)"/>
			<column name="ADVFLAG" type="char(1)"/>
</createTable>
</changeSet>


<changeSet  id="15" author="Siva" >
<createView viewName="CollateralAssignment_View" replaceIfExists="true">
	
 Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment_Temp CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain_Temp FM on CA.Reference = FM.FinReference
        left join Commitments_Temp CM on CM.CmtReference =CA.Reference
        union all 
  Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain FM on CA.Reference = FM.FinReference
        left join Commitments CM on CM.CmtReference =CA.Reference
	  WHERE     NOT EXISTS
 (SELECT 1 FROM CollateralAssignment_Temp 
  WHERE CollateralRef = CA.CollateralRef and Module =CA.Module and Reference=CA.Reference)

</createView>
</changeSet>

<changeSet  id="16" author="Siva" >
<createView viewName="CollateralAssignment_TView" replaceIfExists="true">
	
 Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  (FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount) UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment_Temp CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain_Temp FM on CA.Reference = FM.FinReference  


</createView>
</changeSet>

<changeSet  id="17" author="Siva" >
<createView viewName="CollateralAssignment_AView" replaceIfExists="true">
	
  Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , 
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain FM on CA.Reference = FM.FinReference
        left join Commitments CM on CM.CmtReference =CA.Reference

</createView>
</changeSet>

<changeSet id="18" author="DurgaPrasad G">
	<createTable tableName="PSX_UCIN_REVERSE_FEED">
				<column name="CUSTOMER_NO" type="int"/>
				<column name="DATASOURCE" type="varchar(3)"/>
				<column name="UCIN_NO" type="varchar(20)">
					<constraints nullable="false" />
				</column>
				<column name="SEGMENT" type="varchar(5)">
					<constraints nullable="false" />
				</column>
				<column name="BATCH_ID" type="varchar(12)"/>
				<column name="BASE_TYPE_FLAG" type="varchar(20)">
					<constraints nullable="false" />
				</column>
				<column name="PSX_BATCH_ID" type="bigint" />
				<column name="PROCESSED_FLAG" type="char(1)">
					<constraints nullable="false" />
				</column>
				<column name="CUSTOMER_ID"  type="varchar(20)" />
				<column name="SOURCE_SYS_ID" type="int"/>
	</createTable>
</changeSet>

 <changeSet id="19" author="DurgaPrasad G">
	<dropTable tableName="CF_CONTROL_DUMP" />
</changeSet>

<changeSet  id="20" author="DurgaPrasad G" >
<createTable tableName="CF_CONTROL_DUMP">
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="SCHEMEID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="BRANCHID" type="int">
				<constraints nullable="false" />
			</column>
			<column name="NPA_STAGEID" type="char(2)">
				<constraints nullable="false" />
			</column>
			<column name="LOAN_STATUS" type="char(1)">
				<constraints nullable="false" />
			</column>
			<column name="DISB_STATUS" type="char(2)">
				<constraints nullable="false" />
			</column>
			<column name="FIRST_DUE_DATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="MATURITY_DATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="AMTFIN" type="int" />
			<column name="DISBURSED_AMOUNT" type="decimal(18,2)" />
			<column name="EMI_DUE" type="decimal(18,2)" />
			<column name="PRINCIPAL_DUE" type="decimal(18,2)"  />
			<column name="INTEREST_DUE" type="decimal(18,2)"  />
			<column name="EMI_RECEIVED" type="decimal(18,2)" />
			<column name="PRINCIPAL_RECEIVED" type="decimal(18,2)" />
			<column name="INTEREST_RECEIVED" type="decimal(18,2)" />
			<column name="EMI_OS" type="decimal(18,2)" />
			<column name="PRINCIPAL_OS" type="decimal(18,2)" />
			<column name="INTEREST_OS" type="decimal(18,2)" />
			<column name="BULK_REFUND" type="decimal(18,2)" />
			<column name="PRINCIPAL_WAIVED" type="decimal(18,2)" />
			<column name="EMI_PRINCIPAL_WAIVED" type="decimal(18,2)" />
			<column name="EMI_INTEREST_WAIVED" type="decimal(18,2)" />
			<column name="PRINCIPAL_AT_TERM" type="decimal(18,2)" />
			<column name="ADVANCE_EMI" type="decimal(18,2)" />
			<column name="ADVANCE_EMI_BILLED" type="decimal(18,2)" />
			<column name="MIGRATED_ADVANCE_EMI" type="decimal(18,2)" />
			<column name="MIGRATED_ADVANCE_EMI_BILLED" type="decimal(18,2)" />
			<column name="MIGRATED_ADVANCE_EMI_UNBILLED" type="decimal(18,2)" />
			<column name="CLOSED_CAN_ADV_EMI" type="decimal(18,2)" />
			<column name="PRINCIPAL_BALANCE" type="decimal(18,2)" />
			<column name="INTEREST_BALANCE" type="decimal(18,2)" />
			<column name="SOH_BALANCE" type="decimal(18,2)" />
			<column name="NO_OF_UNBILLED_EMI" type="decimal(18,2)" />
			<column name="TOTAL_INTEREST" type="decimal(18,2)" />
			<column name="ACCRUED_AMOUNT" type="decimal(18,2)" />
			<column name="BALANCE_UMFC" type="decimal(18,2)" />
			<column name="EMI_IN_ADVANCE_RECEIVED_MAKER" type="decimal(18,2)" />
			<column name="EMI_IN_ADVANCE_BILLED" type="decimal(18,2)" />
			<column name="EMI_IN_ADVANCE_UNBILLED" type="decimal(18,2)" />
			<column name="MIG_ADV_EMI_BILLED_PRIN_COMP" type="decimal(18,2)" />
			<column name="MIG_ADV_EMI_BILLED_INTCOMP" type="decimal(18,2)" />
			<column name="MIG_ADV_EMI_UNBILLED_PRINCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_BILLED_PRINCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_BILLED_INTCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_UNBILLED_PRINCOMP" type="decimal(18,2)" />
			<column name="EMI_IN_ADV_UNBILLED_INTCOMP" type="decimal(18,2)" />
			<column name="CLOS_CAN_ADV_EMI_PRINCOMP" type="decimal(18,2)" />
			<column name="CLOS_CAN_ADV_EMI_INTCOMP" type="decimal(18,2)" />
			<column name="SECURITY_DEPOSIT" type="decimal(18,2)" />
			<column name="SECURITY_DEPOSIT_ADJUSTED" type="decimal(18,2)" />
			<column name="ROUNDING_DIFF_RECEIVABLE" type="decimal(18,2)" />
			<column name="ROUNDING_DIFF_RECEIVED" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_RECEIVABLE" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_RECEIVED" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_PAYABLE" type="decimal(18,2)" />
			<column name="MIG_DIFFERENCE_PAID" type="decimal(18,2)" />
			<column name="WRITEOFF_DUE" type="decimal(18,2)" />
			<column name="WRITEOFF_RECEIVED" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_RECEIVABLE" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_RECEIVED" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_PAYABLE" type="decimal(18,2)" />
			<column name="SOLD_SEIZE_PAID" type="decimal(18,2)" />
			<column name="NET_EXCESS_RECEIVED" type="decimal(18,2)" />
			<column name="NET_EXCESS_ADJUSTED" type="decimal(18,2)" />
			<column name="LPP_CHARGES_RECEIVABLE" type="decimal(18,2)" />
			<column name="LPP_CHARGES_RECEIVED" type="decimal(18,2)" />			
			<column name="PDC_SWAP_CHARGESRECEIVABLE" type="decimal(18,2)" />			
			<column name="PDC_SWAP_CHARGESRECEIVED" type="decimal(18,2)" />			
			<column name="REPO_CHARGES_RECEIVABLE" type="decimal(18,2)" />
			<column name="REPO_CHARGES_RECEIVED" type="decimal(18,2)" />
			<column name="FORECLOSURE_CHARGES_DUE" type="decimal(18,2)" />
			<column name="FORECLOSURE_CHARGES_RECEIVED" type="decimal(18,2)" />
			<column name="BOUNCE_CHARGES_DUE" type="decimal(18,2)" />
			<column name="BOUNCE_CHARGES_RECEIVED" type="decimal(18,2)" />
			<column name="INSUR_RENEW_CHARGE" type="decimal(18,2)" />
			<column name="INSUR_RENEW_CHARGE_RECD" type="decimal(18,2)" />
			<column name="INSUR_RECEIVABLE" type="decimal(18,2)" />
			<column name="INSUR_RECEIVED" type="decimal(18,2)" />
			<column name="INSUR_PAYABLE" type="decimal(18,2)" />
			<column name="INSUR_PAID" type="decimal(18,2)" />
			<column name="CUSTOMERID" type="bigint" />
			<column name="CUSTOMERNAME" type="varchar(300)" />
			<column name="SANCTIONED_TENURE" type="int" />
			<column name="LOAN_EMI" type="decimal(18,2)" />
			<column name="FLAT_RATE" type="Number(10,7)" />
			<column name="EFFECTIVE_RATE" type="Number(10,7)" />
			<column name="AGREEMENTDATE" type="datetime" />
			<column name="DISBURSALDATE" type="datetime" />
			<column name="CLOSUREDATE" type="datetime" />
			<column name="NO_OF_ADVANCE_EMIS" type="Number(3)" />
			<column name="ASSETCOST" type="Number(16,2)" />
			<column name="NO_OF_EMI_OS" type="int" />
			<column name="DPD" type="int" />
			<column name="CURRENT_BUCKET" type="int" />
			<column name="BRANCH_NAME" type="varchar(600)" />
			<column name="SCHEME_NAME" type="varchar(200)" />
			<column name="DERIVED_BUCKET" type="Number" />
			<column name="ASSETDESC" type="varchar(150)" />
			<column name="MAKE" type="varchar(35)" />
			<column name="CHASISNUM" type="varchar(50)" />
			<column name="REGDNUM" type="varchar(30)" />
			<column name="ENGINENUM" type="varchar(30)" />
			<column name="INVOICEAMT" type="Number(16,2)" />
			<column name="SUPPLIERDESC" type="varchar(300)" />
			<column name="INSTRUMENT" type="char(1)" />
			<column name="REPO_DATE" type="datetime" />
			<column name="LOCAL_OUTSTATION_FLAG" type="char(1)" />
			<column name="FIRST_REPAYDUE_DATE" type="datetime" />
</createTable>
</changeSet>


<changeSet  id="21" author="DurgaPrasad G" >
<createView viewName="INT_POSIDEX_UPDATE_EOD_VIEW" replaceIfExists="true">
Select '' BATCHID, C.CustCIF CUSTOMER_NO,'' SOURCE_SYS_ID,
	   C.CustFName FIRST_NAME, C.CustMName MIDDLE_NAME, C.CustLName LAST_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustDOB else '' end DOB,
	   Case when C.CustCtgCode='RETAIL' then CDPAN.CustDocTitle else '' end PAN,
	   Case when C.CustCtgCode='RETAIL' then CDDLN.CustDocTitle else '' end DRIVING_LICENSE_NUMBER,
	   Case when C.CustCtgCode='RETAIL' then CDVTR.CustDocTitle else '' end VOTER_ID,
	   Case when C.CustCtgCode='CORP' then CustDOB else '' end DATE_OF_INCORPORATION,
	   Case when C.CustCtgCode='CORP' then CDTAN.CustDocTitle else '' end TAN_NO,
	   '' PROCESS_TYPE,Case when C.CustCtgCode='RETAIL' then 'I' else 'C' end APPLICANT_TYPE,
	   Case when C.CustCtgCode='RETAIL' then EmpName else '' end EMPOYER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustMotherMaiden else '' end FATHER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CDPPT.CustDocTitle else '' end PASSPORT_NO,
	   '' ACCOUNT_NUMBER, '' CREDIT_CARD_NUMBER, 'N' PROCESS_FLAG,'' ERROR_CODE, '' ERROR_DESC,
	   C.CustCIF CUSTOMER_ID, '' SOURCE_SYSTEM, ''PSX_BATCH_ID, '' UCIN_FLAG,'' EOD_BATCH_ID,
	   CURRENT_TIMESTAMP INSERT_TS,
	   Case when C.CustCtgCode='RETAIL' then CustGenderCode else '' end GENDER,
	   Case when C.CustCtgCode='RETAIL' then CDADR.CustDocTitle else '' end AADHAR_NO,
	   Case when C.CustCtgCode='CORP' then CDCIN.CustDocTitle else '' end CIN,
	   Case when C.CustCtgCode='CORP' then CDDIN.CustDocTitle else '' end DIN,
	   Case when C.CustCtgCode='CORP' then CDRGNO.CustDocTitle else '' end REGISTRATION_NO,
	   Case when C.CustCtgCode='CORP' then CDCANO.CustDocTitle else '' end CA_NUMBER,
	   'CF' SEGMENT,'' BATCHID_2, C.CustCIF CUSTOMER_NO_2,'' SOURCE_SYS_ID_2,'CF' SEGMENT_2,
	   '' ADDRESS_TYPE, CA.CustAddrHNbr  ADDRESS_1,CA.CustFlatNbr ADDRESS_2,CA.CustAddrLine1 ADDRESS_3,
	   CA.CUSTADDRPROVINCE STATE, CA.CUSTADDRCITY CITY, CA.CUSTADDRZIP PIN,
	   CPLND1.PhoneCountryCode+CPLND1.PhoneAreaCode+CPLND1.PhoneNumber LANDLINE_1,
	   CPLND2.PhoneCountryCode+CPLND2.PhoneAreaCode+CPLND2.PhoneNumber LANDLINE_2,
	   CPMOB.PhoneCountryCode+CPMOB.PhoneAreaCode+CPMOB.PhoneNumber MOBILE,
	   CA.CustAddrStreet AREA, CA.CustAddrLine1 LANDMARK,'' STD,'' PROCESS_TYPE_2,
	   CEM.custEmail, 'N' PROCESS_FLAG_2,'' ERROR_CODE_2,'' ERROR_DESC_2,
	   C.custcif CUSTOMER_ID_2, '' SOURCE_SYSTEM_2,'' PSX_BATCH_ID_2,'' EOD_BATCH_ID_2,
	   '' BATCHID_3,'' STATUS,'' INSERT_TIMESTAMP,'' COMPLETION_TIMESTAMP,'' ERR_DESCRIPTION,
	   '' ERROR_CODE_3,'' BATCHID_4,C.CustCIF CUSTOMER_NO_3,'' SOURCE_SYS_ID_3,'CF' SEGMENT_3,
	   FM.FinReference DEAL_ID,FM.FinReference LAN_NO,'' CUSTOMER_TYPE, FM.FinReference APPLN_NO,
	   FM.FinType PRODUCT_CODE, '' PROCESS_TYPE_3,'N' PROCESS_FLAG_3,'' ERROR_CODE_4,
	   '' ERROR_DESC_3,'' PSX_BATCH_ID_3, '' PSX_ID, c.CustCIF CUSTOMER_ID_3,
	   '' SOURCE_SYSTEM_3,'' EOD_BATCH_ID_3,C.LastMntOn	   
from Customers C 
	 left join CustomerDocuments CDPAN on CDPAN.CustID = C.CustID and CDPAN.CustDocCategory='03'
	 left join CustomerDocuments CDDLN on CDDLN.CustID = C.CustID and CDDLN.CustDocCategory='04'
	 left join CustomerDocuments CDVTR on CDVTR.CustID = C.CustID and CDVTR.CustDocCategory='05'
	 left join CustomerDocuments CDTAN on CDTAN.CustID = C.CustID and CDTAN.CustDocCategory='15'
	 left join CustomerDocuments CDPPT on CDPPT.CustID = C.CustID and CDPPT.CustDocCategory='02'
	 left join CustomerDocuments CDADR on CDADR.CustID = C.CustID and CDADR.CustDocCategory='01'
	 left join CustomerDocuments CDCIN on CDCIN.CustID = C.CustID and CDCIN.CustDocCategory='16'
	 left join CustomerDocuments CDDIN on CDDIN.CustID = C.CustID and CDDIN.CustDocCategory='17'
	 left join CustomerDocuments CDRGNO on CDRGNO.CustID = C.CustID and CDRGNO.CustDocCategory='18'
	 left join CustomerDocuments CDCANO on CDCANO.CustID = C.CustID and CDCANO.CustDocCategory='19'
	 left join CustEmployeeDetail CE on CE.CustID = C.CustID 
	 left join CustomerAddresses CA on CA.CustID = C.CustID and custAddrPriority=5
	 left join CustomerPhoneNumbers CPLND1 on CPLND1.PhoneCustID = C.CustID and CPLND1.PhoneTypeCode='HOME'
	 left join CustomerPhoneNumbers CPLND2 on CPLND2.PhoneCustID = C.CustID and CPLND2.PhoneTypeCode='MOBILE2'
	 left join CustomerPhoneNumbers CPMOB on CPMOB.PhoneCustID = C.CustID and CPMOB.PhoneTypeCode='MOBILE1'
	 left join CustomerEMails CEM on CEM.CustID = C.CustID and CEM.CustEmailPriority=5
	 left join FinanceMain FM on FM.custid = C.CustID
	 where C.custAddlvar1 is null
</createView>
</changeSet>

<changeSet  id="22" author="DurgaPrasad G" >
<sql>
	Update SecRights set RightName = 'DISB_HDFC_EXPORT' Where RightName = 'DISB_HDFC_CHQ_EXPORT';
	Update SecRights set RightName = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where RightName = 'DISB_OTHER_CHQ_EXPORT';
	Update SecRights set RightName = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where RightName = 'DISB_OTHER_NEFT_EXPORT';
	
	Update SecGroups set GrpCode = 'DISB_HDFC_EXPORT' Where GrpCode = 'DISB_HDFC_CHQ_EXPORT';
	Update SecGroups set GrpCode = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where GrpCode = 'DISB_OTHER_CHQ_EXPORT';
	Update SecGroups set GrpCode = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where GrpCode = 'DISB_OTHER_NEFT_EXPORT';
	
	Update SecRoles set RoleCd = 'DISB_HDFC_EXPORT' Where RoleCd = 'DISB_HDFC_CHQ_EXPORT';
	Update SecRoles set RoleCd = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where RoleCd = 'DISB_OTHER_CHQ_EXPORT';
	Update SecRoles set RoleCd = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where RoleCd = 'DISB_OTHER_NEFT_EXPORT';
	
	Update SecOperations set OprCode = 'DISB_HDFC_EXPORT' Where OprCode = 'DISB_HDFC_CHQ_EXPORT';
	Update SecOperations set OprCode = 'DISB_OTHER_CHEQUE_DD_EXPORT' Where OprCode = 'DISB_OTHER_CHQ_EXPORT';
	Update SecOperations set OprCode = 'DISB_OTHER_NEFT_RTGS_EXPORT' Where OprCode = 'DISB_OTHER_NEFT_EXPORT';
	
	
	Delete from SecOperationRoles Where OprID = (Select OprID from SecOperations Where OprCode = 'DISB_HDFC_NEFT_EXPORT');
	Delete from SecOperations   Where OprCode = 'DISB_HDFC_NEFT_EXPORT';
	
	Delete from SecRoleGroups Where RoleID = (Select RoleID from SecRoles Where RoleCd = 'DISB_HDFC_NEFT_EXPORT');
	Delete from SecRoles  Where RoleCd = 'DISB_HDFC_NEFT_EXPORT';
	
	Delete from SecGroupRights Where GrpID = (Select GrpID from SecGroups Where GrpCode = 'DISB_HDFC_NEFT_EXPORT');
	Delete from SecGroups  Where GrpCode = 'DISB_HDFC_NEFT_EXPORT';
	
	Delete from SecRights  Where RightName = 'DISB_HDFC_NEFT_EXPORT';
</sql>
</changeSet>

 <changeSet author="Siva" id="23">
	<addColumn tableName="FinDisbursementDetails">
		<column name="DisbStatus" type="char(1)"/>
	</addColumn>
	</changeSet>
	
 <changeSet author="Siva" id="24">
	<addColumn tableName="FinDisbursementDetails_Temp">
		<column name="DisbStatus" type="char(1)"/>
	</addColumn>
	</changeSet>
	
	<changeSet  id="25" author="Siva" >
<createView viewName="FinDisbursementDetails_TView" replaceIfExists="true">
	
  SELECT     T1.FinReference, T1.DisbDate, T1.DisbSeq, T1.DisbDesc, T1.DisbAccountId, T1.DisbAmount, T1.DisbReqDate, T1.DisbDisbursed, T1.DisbIsActive, T1.DisbRemarks, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T1.FeeChargeAmt, T1.DisbStatus,  T1.DisbType, T1.DisbClaim, T1.DisbExpType, T1.DisbRetPerc, T1.DisbRetAmount, T1.AutoDisb, T1.NetAdvDue, T1.NetRetDue, T1.DisbRetPaid, T1.RetPaidDate, 
                    T2.ExpenceTypeName  lovDescDisbExpType, T1.ConsultFeeFrq,T1.ConsultFeeStartDate,T1.ConsultFeeEndDate, T1.ContractorId,T1.InsuranceAmt
FROM          FinDisbursementDetails_Temp  T1 LEFT OUTER JOIN
                       AMTExpenseType  T2 ON T2.ExpenceTypeId = T1.DisbExpType

</createView>
</changeSet>

	<changeSet  id="26" author="Siva" >
<createView viewName="FinDisbursementDetails_View" replaceIfExists="true">
	
SELECT     T1.FinReference, T1.DisbDate, T1.DisbSeq, T1.DisbDesc, T1.DisbAccountId, T1.DisbAmount, T1.DisbReqDate, T1.DisbDisbursed, T1.DisbIsActive, T1.DisbRemarks, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T1.FeeChargeAmt,  T1.DisbStatus, T1.DisbType, T1.DisbClaim, T1.DisbExpType, T1.DisbRetPerc, T1.DisbRetAmount, T1.AutoDisb, T1.NetAdvDue, T1.NetRetDue, T1.DisbRetPaid, T1.RetPaidDate, 
                    T2.ExpenceTypeName  lovDescDisbExpType, T1.ConsultFeeFrq,T1.ConsultFeeStartDate,T1.ConsultFeeEndDate, T1.ContractorId,T1.InsuranceAmt
FROM          FinDisbursementDetails_Temp  T1 LEFT OUTER JOIN
                       AMTExpenseType  T2 ON T2.ExpenceTypeId = T1.DisbExpType 
UNION ALL
SELECT     T1.FinReference, T1.DisbDate, T1.DisbSeq, T1.DisbDesc, T1.DisbAccountId, T1.DisbAmount, T1.DisbReqDate, T1.DisbDisbursed, T1.DisbIsActive, T1.DisbRemarks, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T1.FeeChargeAmt,   T1.DisbStatus, T1.DisbType, T1.DisbClaim, T1.DisbExpType, T1.DisbRetPerc, T1.DisbRetAmount, T1.AutoDisb, T1.NetAdvDue, T1.NetRetDue, T1.DisbRetPaid, T1.RetPaidDate, 
                    T2.ExpenceTypeName  lovDescDisbExpType, T1.ConsultFeeFrq,T1.ConsultFeeStartDate,T1.ConsultFeeEndDate, T1.ContractorId,T1.InsuranceAmt
FROM          FinDisbursementDetails  T1 LEFT OUTER JOIN
                       AMTExpenseType  T2 ON T2.ExpenceTypeId = T1.DisbExpType
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinDisbursementDetails_Temp
                            WHERE      FinReference = T1.FinReference)

</createView>
</changeSet>

	<changeSet  id="27" author="Siva" >
<createView viewName="FinDisbursementDetails_AView" replaceIfExists="true">
SELECT     T1.FinReference, T1.DisbDate, T1.DisbSeq, T1.DisbDesc, T1.DisbAccountId, T1.DisbAmount, T1.DisbReqDate, T1.DisbDisbursed, T1.DisbIsActive, T1.DisbRemarks, 
                      T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.FeeChargeAmt, 
                      T1.Version, T1.DisbStatus ,T1.DisbType, T1.DisbClaim, T1.DisbExpType, T1.DisbRetPerc, T1.DisbRetAmount, T1.AutoDisb, T1.NetAdvDue, T1.NetRetDue, T1.DisbRetPaid, 
                      T1.RetPaidDate, T2.ExpenceTypeName lovDescDisbExpType, 
                      T1.ConsultFeeFrq,T1.ConsultFeeStartDate,T1.ConsultFeeEndDate, T1.ContractorId,T1.InsuranceAmt
FROM          FinDisbursementDetails T1  LEFT OUTER JOIN
                       AMTExpenseType T2 ON T2.ExpenceTypeId = T1.DisbExpType

</createView>
</changeSet>
<changeSet id="28" author="Chaitanya.ch">
<dropForeignKeyConstraint baseTableName="CustomerBankInfo" constraintName="FK_CustBankInfo_RMTAccTypes"/>
</changeSet>

<changeSet  id="29" author="Kesav" >
	<sql>
		Update FinTypeFees set ModuleId = 1 where ModuleId is null;
		Update FinTypeInsurances set ModuleId = 1 where ModuleId is null;
		Update FinTypeAccounting set ModuleId = 1 where ModuleId is null;	
	</sql>
</changeSet>
	
	<changeSet author="Siva" id="30">
		<addColumn tableName="CollateralAssignment">
			<column name="Active" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet author="Siva" id="31">
		<addColumn tableName="CollateralAssignment_Temp">
			<column name="Active" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet author="Siva" id="32">
		<sql>
			Update CollateralAssignment Set Active = 1;
			Update CollateralAssignment_Temp Set Active = 1;
		</sql>
	</changeSet>
	
		
	<changeSet  id="33" author="Kesav">
		<sql>
			Update FinTypeFees_Temp set ModuleId = 1 where ModuleId is null;
			Update FinTypeAccounting_Temp set ModuleId = 1 where ModuleId is null;
			Update FinTypeInsurances_Temp set ModuleId = 1 where ModuleId is null;	
		</sql>
	</changeSet>
	
	<changeSet id="34" author="Kesav">
		<addNotNullConstraint tableName="FinTypeFees_Temp" columnName="ModuleId" columnDataType="int"/>
	</changeSet>
	
	<changeSet id="35" author="Kesav">
		<addNotNullConstraint tableName="FinTypeAccounting_Temp" columnName="ModuleId" columnDataType="int"/>
	</changeSet>
	
	<changeSet id="36" author="Kesav">
		<addNotNullConstraint tableName="FinTypeInsurances_Temp" columnName="ModuleId" columnDataType="int"/>
	</changeSet>
	
	<changeSet id="37" author="Kesav">
		<addNotNullConstraint tableName="FinTypeFees" columnName="ModuleId" columnDataType="int"/>
	</changeSet>
	
	<changeSet id="38" author="Kesav">
		<addNotNullConstraint tableName="FinTypeInsurances" columnName="ModuleId" columnDataType="int"/>
	</changeSet>
	
	<changeSet id="39" author="Kesav">
		<addNotNullConstraint tableName="FinTypeAccounting" columnName="ModuleId" columnDataType="int"/>
	</changeSet>
	

<changeSet id="40" author="DurgaPrasad G">
	<dropTable tableName="DEDUP_EOD_CUST_DEMO_DTL" />
</changeSet>

<changeSet id="41" author="DurgaPrasad G">
<createTable tableName="DEDUP_EOD_CUST_DEMO_DTL">	
			<column name="BATCHID" type="decimal(12,0)">
				<constraints nullable="false" />
			</column>
			 <column name="CUSTOMER_NO" type="decimal(8,0)"/>
	        <column name="SOURCE_SYS_ID" type="varchar(5)"/>
			<column name="FIRST_NAME" type="varchar(90)"/>
			<column name="MIDDLE_NAME" type="varchar(90)"/>
			<column name="LAST_NAME" type="varchar(90)"/>
			<column name="DOB" type="datetime"/>
			<column name="PAN" type="varchar(30)"/>
			<column name="DRIVING_LICENSE_NUMBER" type="varchar(45)"/>
			<column name="VOTER_ID" type="varchar(20)"/>
			<column name="DATE_OF_INCORPORATION" type="datetime"/>
			<column name="TAN_NO" type="varchar(15)"/>					
			<column name="PROCESS_TYPE" type="varchar(2)">
				<constraints nullable="false" />
			</column>
			<column name="APPLICANT_TYPE" type="varchar(1)">
				<constraints nullable="false" />
			</column>
			 <column name="EMPOYER_NAME" type="varchar(105)"/>
			<column name="FATHER_NAME" type="varchar(105)"/>
			<column name="PASSPORT_NO" type="varchar(45)"/>
			<column name="ACCOUNT_NUMBER" type="varchar(20)"/>
			<column name="CREDIT_CARD_NUMBER" type="varchar(60)"/>
			<column name="PROCESS_FLAG" type="varchar(1)">
			<constraints nullable="false" />
			</column>
			<column name="ERROR_CODE" type="varchar(1)"/>
			<column name="ERROR_DESC" type="varchar(100)"/>
			<column name="CUSTOMER_ID" type="varchar(20)">
			<constraints nullable="false" />
			</column>
			<column name="SOURCE_SYSTEM" type="varchar(20)">
			<constraints nullable="false" />
			</column>
			<column name="PSX_BATCH_ID" type="decimal(18,0)"/>
			<column name="UCIN_FLAG" type="varchar(10)"/>
			<column name="EOD_BATCH_ID" type="decimal(18,0)"/>
			<column name="INSERT_TS" type="datetime">
			<constraints nullable="false" />
			</column>			
			 <column name="GENDER" type="varchar(20)"/>
			<column name="AADHAR_NO" type="varchar(12)"/>
			<column name="CIN" type="varchar(100)"/>
			<column name="DIN" type="varchar(20)"/>
			<column name="REGISTRATION_NO" type="varchar(20)"/>
			<column name="CA_NUMBER" type="varchar(100)"/>
			<column name="SEGMENT" type="varchar(5)">
			<constraints nullable="false" />
			</column>
</createTable>
</changeSet>

<changeSet id="42" author="DurgaPrasad G">
	<dropTable tableName="DEDUP_EOD_CUST_ADDR_DTL" />
</changeSet>	

<changeSet id="43" author="DurgaPrasad G">	
<createTable tableName="DEDUP_EOD_CUST_ADDR_DTL">		
			<column name="BATCHID" type="decimal(12,0)">
			<constraints nullable="false" />
			</column>
			<column name="CUSTOMER_NO" type="decimal(8,0)"/>
			<column name="SOURCE_SYS_ID" type="varchar(5)">
			<constraints nullable="false" />
			</column>
			<column name="SEGMENT" type="varchar(5)">
			<constraints nullable="false" />
			</column>
			<column name="ADDRESS_TYPE" type="varchar(24)">
			<constraints nullable="false" />
			</column>
			<column name="ADDRESS_1" type="varchar(255)">
			<constraints nullable="false" />
			</column>
			<column name="ADDRESS_2" type="varchar(255)"/>
			<column name="ADDRESS_3" type="varchar(255)"/>
			
			<column name="STATE" type="varchar(100)">
			<constraints nullable="false" />
			</column>
			<column name="CITY" type="varchar(105)">
			<constraints nullable="false" />
			</column>
			<column name="PIN" type="varchar(24)">
			<constraints nullable="false" />
			</column>
			
			<column name="LANDLINE_1" type="varchar(48)"/>
			<column name="LANDLINE_2" type="varchar(48)"/>
			<column name="MOBILE" type="varchar(105)"/>
			<column name="AREA" type="varchar(120)"/>
			
			<column name="LANDMARK" type="varchar(105)"/>
			<column name="STD" type="varchar(48)"/>
			<column name="PROCESS_TYPE" type="varchar(2)"/>
			<column name="EMAIL" type="varchar(105)"/>
			
			<column name="PROCESS_FLAG" type="varchar(1)">
			<constraints nullable="false" />
			</column>
			<column name="ERROR_CODE" type="varchar(1)"/>
			<column name="ERROR_DESC" type="varchar(100)"/>
			<column name="CUSTOMER_ID" type="varchar(20)">
			<constraints nullable="false" />
			</column>
			<column name="SOURCE_SYSTEM" type="varchar(20)">
			<constraints nullable="false" />
			</column>
			<column name="PSX_BATCH_ID" type="decimal(18,0)"/>
			<column name="EOD_BATCH_ID" type="decimal(18,0)"/>
			
</createTable>	
</changeSet>

<changeSet id="44" author="DurgaPrasad G">
	<dropTable tableName="PUSH_PULL_CONTROL_T" />
</changeSet>

<changeSet id="45" author="DurgaPrasad G">
<createTable tableName="PUSH_PULL_CONTROL_T">	
<column name="BATCHID" type="decimal(12,0)">
			<constraints nullable="false" />
			</column>
			<column name="STATUS" type="varchar(1)">
			<constraints nullable="false" />
			</column>
			<column name="INSERT_TIMESTAMP" type="datetime">
			<constraints nullable="false" />
			</column>
			<column name="COMPLETION_TIMESTAMP" type="datetime"/>
			<column name="ERR_DESCRIPTION" type="varchar(500)"/>
			<column name="ERROR_CODE" type="varchar(500)"/>
</createTable>	
</changeSet>

<changeSet id="46" author="DurgaPrasad G">
	<dropTable tableName="DEDUP_EOD_CUST_LOAN_DTL" />
</changeSet>

<changeSet id="47" author="DurgaPrasad G">
<createTable tableName="DEDUP_EOD_CUST_LOAN_DTL">	
			<column name="BATCHID" type="decimal(12,0)">
			<constraints nullable="false" />
			</column>
			<column name="CUSTOMER_NO" type="decimal(8,0)"/>
			<column name="SOURCE_SYS_ID" type="varchar(5)">
			<constraints nullable="false" />
			</column>
			<column name="SEGMENT" type="varchar(5)">
			<constraints nullable="false" />
			</column>
			<column name="DEAL_ID" type="varchar(20)"/>
			<column name="LAN_NO" type="varchar(20)">
			<constraints nullable="false" />
			</column>
			<column name="CUSTOMER_TYPE" type="varchar(1)">
			<constraints nullable="false" />
			</column>
			<column name="APPLN_NO" type="decimal(10,0)">
			<constraints nullable="false" />
			</column>
			<column name="PRODUCT_CODE" type="varchar(10)">
			<constraints nullable="false" />
			</column>
			<column name="PROCESS_TYPE" type="varchar(2)">
			<constraints nullable="false" />
			</column>
			<column name="PROCESS_FLAG" type="varchar(1)">
			<constraints nullable="false" />
			</column>
			<column name="ERROR_CODE" type="varchar(1)"/>
			<column name="ERROR_DESC" type="varchar(100)"/>
			<column name="PSX_BATCH_ID" type="decimal(18,0)"/>
			<column name="PSX_ID" type="decimal(12,0)"/>
			<column name="CUSTOMER_ID" type="varchar(20)">
			<constraints nullable="false" />
			</column>
			<column name="SOURCE_SYSTEM" type="varchar(20)">
			<constraints nullable="false" />
			</column>
			<column name="EOD_BATCH_ID" type="decimal(18,0)"/>
</createTable>	
</changeSet>
<changeSet author="Irfan" id="48">
	<addColumn tableName="FinanceMain">
		<column name="BpiAmount" type="decimal(18,0)"/>
		<column name="DeductFeeDisb" type="decimal(18,0)"/>
	</addColumn>
</changeSet>
<changeSet author="Irfan" id="49">
	<addColumn tableName="FinanceMain_Temp">
		<column name="BpiAmount" type="decimal(18,0)"/>
		<column name="DeductFeeDisb" type="decimal(18,0)"/>
	</addColumn>
</changeSet>
<changeSet author="Irfan" id="50">
	<addColumn tableName="FinanceMain_PA">
		<column name="BpiAmount" type="decimal(18,0)"/>
		<column name="DeductFeeDisb" type="decimal(18,0)"/>
	</addColumn>
</changeSet>
<changeSet author="Irfan" id="51">
	<addColumn tableName="RejectFinanceMain">
		<column name="BpiAmount" type="decimal(18,0)"/>
		<column name="DeductFeeDisb" type="decimal(18,0)"/>
	</addColumn>
</changeSet>

<changeSet author="Irfan" id="52">
	<createView viewName="FinanceMain_View" replaceIfExists="true">

SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR, 
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.BpiAmount, T1.DeductFeeDisb
						FROM         FinanceMain_Temp T1   INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
			 
	UNION ALL
			SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                     T7.FinTypeDesc lovDescFinTypeName, 
                      T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, 
                     T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, 
                        T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR,  
                     T1.JointAccount, T1.JointCustId, 
                      T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,  T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                     T1.SupplementRent, T1.IncreasedCost,  T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					 T1.TDSApplicable, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH,
					  T1.BpiAmount, T1.DeductFeeDisb
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment  INNER JOIN 
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode 
						WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          FinanceMain_Temp
                            WHERE      (FINREFERENCE = T1.FINREFERENCE)))
							
	</createView>
</changeSet>
<changeSet author="Irfan" id="53">
	<createView viewName="FinanceMain_TView" replaceIfExists="true">
	  SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount,  T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.FinTypeDesc lovDescFinTypeName, T2.FinMaxAmount lovDescFinMaxAmt, T2.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T4.BranchDesc lovDescFinBranchName, T1.LastRepayDate,  T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate,  T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,  
                      T1.TotalRepayAmt,T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                       T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose,T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T1.CustDSR,
                      T1.JointAccount, T1.JointCustId, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral,  T1.Approved,   T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T2.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.LinkedFinRef, T1.NextUserId, T1.Priority, T5.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                     T1.DeviationApproval,T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T1.SupplementRent, T1.IncreasedCost, T1.CreditInsAmt, T1.RolloverFrq, 
                      T1.NextRolloverDate,  T1.ShariaStatus, T1.InitiateDate, T1.FinPreApprovedRef, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc, T6.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T7.ROfficerDesc DSACodeDesc,
					  T1.TDSApplicable, T3.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T8.ROfficerDesc ReferralIdDesc, T1.DmaCode , T9.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T10.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH,
					  T1.BpiAmount, T1.DeductFeeDisb
			FROM         FinanceMain_Temp T1 INNER JOIN
                      RMTFinanceTypes T2 ON T1.FinType = T2.FinType  INNER JOIN
                      BMTProduct T3 ON T2.FinCategory = T3.ProductCode INNER JOIN
                      RMTBranches T4 ON T1.FinBranch = T4.BranchCode LEFT OUTER JOIN
                      StepPolicyHeader T5 ON T1.StepPolicy = T5.PolicyCode LEFT OUTER JOIN
                      RMTGenDepartments T6 ON T1.AccountsOfficer = T6.GenDepartment LEFT OUTER JOIN
					  RelationshipOfficers T7 ON T1.DSACode = T7.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T8 ON T1.ReferralId = T8.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T9 ON T1.DmaCode = T9.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T10 ON T1.SalesDepartment = T10.GenDepartment
	</createView>
</changeSet>
<changeSet author="Irfan" id="54">
	<createView viewName="FinanceMain_AView" replaceIfExists="true">
	SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment  lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T7.FinTypeDesc  lovDescFinTypeName, T7.FinMaxAmount  lovDescFinMaxAmt, T7.FinMinAmount  lovDescFinMinAmount, 
                      T1.MinDownpayPerc, T7.FinIsAlwDifferment  lovDescFinAlwDeferment, T7.FinIsDwPayRequired  lovDescDwnPayReq, 
                      T7.FinMaxDifferment  lovDescFinMaxDifferment,T12.BranchDesc  lovDescFinBranchName, T1.LastRepayDate, T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, 
                       T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef, T1.DepreciationFrq, T1.FinContractDate, 
                      T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,   T17.AcrTillLBD  lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, 
                      T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                     T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose, 
                     T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.bankName, T1.iban, T1.accountType, T1.DdaReferenceNo, 
                      T7.FinScheduleOn  LovDescFinScheduleOn, T1.CustDSR,
                      T1.JointAccount, T1.JointCustId, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, T1.SecurityCollateral, 
                       T1.Approved,   T1.Discrepancy, T1.LimitApproved, T1.InvestmentRef, T1.GraceTerms, 
                      T7.FinDivision  lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps,  T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc  LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T1.DeviationApproval, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                    T1.SupplementRent, T1.IncreasedCost, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId,T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T29.AgreeName,T29.MMAReference LovDescMMAReference,
					  T1.DSACode,T30.ROfficerDesc DSACodeDesc,T1.TDSApplicable,  T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.AvailedUnPlanEmi, T1.AvailedReAgeH,
					  T1.BpiAmount, T1.DeductFeeDisb
						FROM         FinanceMain T1 INNER JOIN
                      RMTFinanceTypes  T7 ON T1.FinType = T7.FinType  LEFT OUTER JOIN
                      RMTBranches  T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FinPftDetails  T17 ON T17.FinReference = T1.FinReference LEFT OUTER JOIN
                      StepPolicyHeader  T24 ON T1.StepPolicy = T24.PolicyCode  LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN 
					  RMTGENDEPARTMENTS T28 ON T1.ACCOUNTSOFFICER = T28.GENDEPARTMENT LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGENDEPARTMENTS T35 ON T1.SalesDepartment = T35.GENDEPARTMENT  INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode
	</createView>
</changeSet>

<changeSet author="Irfan" id="55">
	<addColumn tableName="WIFFinanceMain">
		<column name="BpiAmount" type="decimal(18,0)"/>
		<column name="DeductFeeDisb" type="decimal(18,0)"/>
		<column name="FeeChargeAmt" type="decimal(18,0)"/>
	</addColumn>
</changeSet>
<changeSet author="Irfan" id="56">
	<addColumn tableName="WIFFinanceMain_Temp">
		<column name="BpiAmount" type="decimal(18,0)"/>
		<column name="DeductFeeDisb" type="decimal(18,0)"/>
		<column name="FeeChargeAmt" type="decimal(18,0)"/>
	</addColumn>
</changeSet>
<changeSet author="Irfan" id="57">
	<createView viewName="WIFFinanceMain_View" replaceIfExists="true">
	SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, T1.FinType, 
                      T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, T1.FinStartDate, 
                      T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  T15.CustCIF lovDescCustCIF, 
                     T7.FinTypeDesc lovDescFinTypeName, T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId, T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.DepreciationFrq, T1.FinCommitmentRef, T1.FinCurrAssetValue, T1.FinContractDate, T1.NextDepDate, 
                      T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,    
                        T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, 
                      T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, 
                      T1.EffectiveRateOfReturn, T1.DownPayBank, T1.DownPaySupl, T7.FinDivision LovDescFinDivisionName, T1.GraceTerms, 
                      T14.FacilityType, T15.CustShrtName lovDescCustShrtName, T16.BranchDesc lovDescFinBranchName,
                      T1.TotalGrossGrcPft, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps, 
                     T1.LinkedFinRef, T7. Product LovDescFinProduct, 
                      T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate,  T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
                      T1.RpyAdvMargin, T1.RpyAdvPftRate,T1.SupplementRent, T1.IncreasedCost, 
                     T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb, T1.BpiAmount, T1.DeductFeeDisb, T1.FeeChargeAmt
FROM          WIFFinanceMain_Temp T1 LEFT OUTER JOIN
                       WIFIndicativeTermDetail_Temp T14 ON T14.FinReference = T1.FinReference LEFT OUTER JOIN
                       Customers T15 ON T15.CustID = T1.CustID INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                       RMTBranches T16 ON T1.FinBranch = T16.BranchCode 
UNION ALL
SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, T1.FinType, 
                      T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, T1.FinStartDate, 
                      T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  T15.CustCIF lovDescCustCIF, 
                     T7.FinTypeDesc lovDescFinTypeName,T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId, T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.DepreciationFrq, T1.FinCommitmentRef, T1.FinCurrAssetValue, T1.FinContractDate, T1.NextDepDate, 
                      T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,    
                        T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, 
                      T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, 
                      T1.EffectiveRateOfReturn, T1.DownPayBank, T1.DownPaySupl, T7.FinDivision LovDescFinDivisionName, T1.GraceTerms, 
                      T14.FacilityType, T15.CustShrtName lovDescCustShrtName, T16.BranchDesc lovDescFinBranchName,
                      T1.TotalGrossGrcPft, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps, 
                     T1.LinkedFinRef, T7. Product LovDescFinProduct, 
                      T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
                      T1.RpyAdvMargin, T1.RpyAdvPftRate,T1.SupplementRent, T1.IncreasedCost, 
                       T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb, T1.BpiAmount, T1.DeductFeeDisb, T1.FeeChargeAmt
FROM          WIFFinanceMain T1 LEFT OUTER JOIN
                       WIFIndicativeTermDetail_Temp T14 ON T14.FinReference = T1.FinReference LEFT OUTER JOIN
                       Customers T15 ON T15.CustID = T1.CustID INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                       RMTBranches T16 ON T1.FinBranch = T16.BranchCode 
                      WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          WIFFinanceMain_Temp
                            WHERE      (FinReference = T1.FinReference)))
	</createView>
</changeSet>
<changeSet author="Irfan" id="58">
	<createView viewName="WIFFinanceMain_AView" replaceIfExists="true">
	
	SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  
                     T7.FinTypeDesc lovDescFinTypeName, T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId,  T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.NextDepDate, T1.LastDepDate, T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.DownPayBank, T1.DownPaySupl, T1.GraceTerms, T1.GrcProfitDaysBasis, 
                      T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps,  T1.LinkedFinRef, T7.Product LovDescFinProduct, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, 
                      T1.RpyMaxRate,T1.ManualSchedule, T1.TakeOverFinance, 
                      T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T1.SupplementRent, T1.IncreasedCost, T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb, T1.BpiAmount, T1.DeductFeeDisb, T1.FeeChargeAmt
FROM          WIFFinanceMain T1 INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType
	</createView>
</changeSet>

	<changeSet  id="59" author="Siva" >
<createView viewName="CollateralAssignment_View" replaceIfExists="true">
Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , CA.Active,
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment_Temp CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain_Temp FM on CA.Reference = FM.FinReference
        left join Commitments_Temp CM on CM.CmtReference =CA.Reference
        union all 
  Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy , CA.Active,
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain FM on CA.Reference = FM.FinReference
        left join Commitments CM on CM.CmtReference =CA.Reference
	  WHERE     NOT EXISTS
 (SELECT 1 FROM CollateralAssignment_Temp 
  WHERE CollateralRef = CA.CollateralRef and Module =CA.Module and Reference=CA.Reference)

</createView>
</changeSet>

	<changeSet  id="60" author="Siva" >
<createView viewName="CollateralAssignment_TView" replaceIfExists="true">
Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy ,  CA.Active,
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  (FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount) UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment_Temp CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain_Temp FM on CA.Reference = FM.FinReference

</createView>
</changeSet>

<changeSet  id="61" author="Siva" >
<createView viewName="CollateralAssignment_AView" replaceIfExists="true">
Select CA.Module, CA.Reference, CA.CollateralRef, CA.AssignPerc, CS.CollateralCcy ,  CA.Active,
  CS.CollateralValue,CS.BankValuation,	(TotAssignPerc-CA.AssignPerc)TotAssignPerc, 
  Coalesce((FinCurrAssetValue-DownPayment+FeeChargeAmt+InsuranceAmt-FinRepaymentAmount),CmtUtilizedAmount)UtilizedAmount, CA.Version,
   CA.LastMntBy, CA.LastMntOn,   CA.RecordStatus, CA.RoleCode, CA.NextRoleCode, CA.TaskId, 
   CA.NextTaskId, CA.RecordType, CA.WorkflowId  from CollateralAssignment CA 
   inner join CollateralSetUp CS on CA.CollateralRef = CS.CollateralRef   Left join 
   ( 	Select CollateralRef,SUM(AssignPerc) TotAssignPerc from (Select Reference,CollateralRef, AssignPerc 
     from CollateralAssignment_Temp	union Select Reference,CollateralRef, AssignPerc  from CollateralAssignment CA  
     where NOT EXISTS (SELECT 1 FROM CollateralAssignment_Temp  WHERE CollateralRef = CA.CollateralRef and
       Module =CA.Module and Reference=CA.Reference))T1 group by CollateralRef)T   
       on T.CollateralRef = CA.CollateralRef   Left Join FinanceMain FM on CA.Reference = FM.FinReference
        left join Commitments CM on CM.CmtReference =CA.Reference

</createView>
</changeSet>
<changeSet id="62" author="Irfan">
<sql>
 Update FinanceMain set BpiAmount=0;
 Update FinanceMain set DeductFeeDisb=0; 
 Update FinanceMain_Temp set BpiAmount=0;
 Update FinanceMain_Temp set DeductFeeDisb=0;
 Update FinanceMain_PA set BpiAmount=0;
 Update FinanceMain_PA set DeductFeeDisb=0; 
 Update RejectFinanceMain set BpiAmount=0;
 Update RejectFinanceMain set DeductFeeDisb=0; 
 Update WIFFinanceMain set BpiAmount=0;
 Update WIFFinanceMain set DeductFeeDisb=0;
 Update WIFFinanceMain set FeeChargeAmt=0;
 Update WIFFinanceMain_Temp set BpiAmount=0;
 Update WIFFinanceMain_Temp set DeductFeeDisb=0; 
 Update WIFFinanceMain_Temp set FeeChargeAmt=0; 
 </sql>
</changeSet>

	<changeSet author="Kesav" id="63">
		<dropPrimaryKey tableName="FinTypeFees" constraintName="PK_FINTYPEFEES"/>
	</changeSet>
	
	<changeSet author="Kesav" id="64">
		<addPrimaryKey tableName="FinTypeFees" constraintName="PK_FINTYPEFEES" columnNames="FinType, OriginationFee, FinEvent, FeeTypeID, ModuleId"/>
	</changeSet>
	
	<changeSet author="Kesav" id="65">
		<dropPrimaryKey tableName="FinTypeFees_Temp" constraintName="PK_FINTYPEFEES_TEMP"/>
	</changeSet>
	
	<changeSet author="Kesav" id="66">
		<addPrimaryKey tableName="FinTypeFees_Temp" constraintName="PK_FINTYPEFEES_TEMP" columnNames="FinType, OriginationFee, FinEvent, FeeTypeID, ModuleId"/>
	</changeSet>
	
	<changeSet author="Kesav" id="67">
		<dropPrimaryKey tableName="FinTypeAccounting" constraintName="PK_FinTypeAccounting"/>
	</changeSet>
	
	<changeSet author="Kesav" id="68">
		<addPrimaryKey tableName="FinTypeAccounting" constraintName="PK_FinTypeAccounting" columnNames="FinType, Event, ModuleId"/>
	</changeSet>
	
	<changeSet author="Kesav" id="69">
		<dropPrimaryKey tableName="FinTypeAccounting_Temp" constraintName="PK_FinTypeAccounting_Temp"/>
	</changeSet>
	
	<changeSet author="Kesav" id="70">
		<addPrimaryKey tableName="FinTypeAccounting_Temp" constraintName="PK_FinTypeAccounting_Temp" columnNames="FinType, Event, ModuleId"/>
	</changeSet>
	
	<changeSet author="Kesav" id="71">
		<dropPrimaryKey tableName="FinTypeInsurances" constraintName="PK_FinTypeInsurances"/>
	</changeSet>
	
	<changeSet author="Kesav" id="72">
		<addPrimaryKey tableName="FinTypeInsurances" constraintName="PK_FinTypeInsurances" columnNames="FinType, InsuranceType, ModuleId"/>
	</changeSet>
	
	<changeSet author="Kesav" id="73">
		<dropPrimaryKey tableName="FinTypeInsurances_Temp" constraintName="PK_FinTypeInsurances_Temp"/>
	</changeSet>
	
	<changeSet author="Kesav" id="74">
		<addPrimaryKey tableName="FinTypeInsurances_Temp" constraintName="PK_FinTypeInsurances_Temp" columnNames="FinType, InsuranceType, ModuleId"/>
	</changeSet>
	
	<changeSet author="Kesav" id="76"> 
		<dropView viewName="PromotionFees_TView"/>
	</changeSet>
	
	<changeSet author="Kesav" id="77"> 
		<dropView viewName="PromotionFees_AView"/>
	</changeSet>
	
	<changeSet author="Kesav" id="78"> 
		<dropView viewName="PromotionFees_View"/>
	</changeSet>
	
	<changeSet author="Kesav" id="79"> 
		<dropView viewName="PromotionInsurances_TView"/>
	</changeSet>
	
	<changeSet author="Kesav" id="80"> 
		<dropView viewName="PromotionInsurances_AView"/>
	</changeSet>
	
	<changeSet author="Kesav" id="81"> 
		<dropView viewName="PromotionInsurances_View"/>
	</changeSet>
	
	<changeSet author="Kesav" id="82"> 
		<dropTable tableName="PromotionAccounting" /> 
		<dropTable tableName="PromotionAccounting_Temp" /> 
	</changeSet>
	
	<changeSet author="Kesav" id="83"> 
		<dropTable tableName="PromotionFees" /> 
		<dropTable tableName="PromotionFees_Temp" /> 
	</changeSet>	
	
	<changeSet author="Kesav" id="84"> 
		<dropTable tableName="PromotionInsurances" /> 
		<dropTable tableName="PromotionInsurances_Temp" /> 
	</changeSet>	


	<changeSet id="86" author="madhubabu">
		<createView replaceIfExists="true" viewName="Customers_TView">
SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName,  
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName, T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, 
                      T1.DedupFound, T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID,T1.SalariedCustomer,T31.TargetDesc lovDescTargetName,T1.custRelation,T1.custSuspSts,T1.custSuspDate,T1.custSuspTrigger
FROM          Customers_Temp T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode INNER JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
		</createView>
	</changeSet>
		<changeSet id="87" author="pruthvi">
		<createView replaceIfExists="true" viewName="INT_POSIDEX_UPDATE_EOD_VIEW">
		 Select cast(null as numeric(12,0)) BATCHID, C.custid CUSTOMER_NO,'' SOURCE_SYS_ID,
	   C.CustFName FIRST_NAME, C.CustMName MIDDLE_NAME, C.CustLName LAST_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustDOB else Null end DOB,
	   Case when C.CustCtgCode='RETAIL' then CDPAN.CustDocTitle else '' end PAN,
	   Case when C.CustCtgCode='RETAIL' then CDDLN.CustDocTitle else '' end DRIVING_LICENSE_NUMBER,
	   Case when C.CustCtgCode='RETAIL' then CDVTR.CustDocTitle else '' end VOTER_ID,
	   Case when C.CustCtgCode='CORP' then CustDOB else null end DATE_OF_INCORPORATION,
	   Case when C.CustCtgCode='CORP' then CDTAN.CustDocTitle else '' end TAN_NO,
	   '' PROCESS_TYPE,Case when C.CustCtgCode='RETAIL' then 'I' else 'C' end APPLICANT_TYPE,
	   Case when C.CustCtgCode='RETAIL' then cast(EmpName as varchar(105)) else null end EMPOYER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustMotherMaiden else '' end FATHER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CDPPT.CustDocTitle else '' end PASSPORT_NO,
	   '' ACCOUNT_NUMBER, '' CREDIT_CARD_NUMBER, 'N' PROCESS_FLAG,'' ERROR_CODE, '' ERROR_DESC,
	   C.CustCIF CUSTOMER_ID, '' SOURCE_SYSTEM, cast(null as numeric(18,0)) PSX_BATCH_ID, '' UCIN_FLAG,cast(null as numeric(18,0)) EOD_BATCH_ID,
	   ${call.date} INSERT_TS,
	   Case when C.CustCtgCode='RETAIL' then CustGenderCode else '' end GENDER,
	   Case when C.CustCtgCode='RETAIL' then CDADR.CustDocTitle else '' end AADHAR_NO,
	   Case when C.CustCtgCode='CORP' then CDCIN.CustDocTitle else '' end CIN,
	   Case when C.CustCtgCode='CORP' then CDDIN.CustDocTitle else '' end DIN,
	   Case when C.CustCtgCode='CORP' then CDRGNO.CustDocTitle else '' end REGISTRATION_NO,
	   Case when C.CustCtgCode='CORP' then CDCANO.CustDocTitle else '' end CA_NUMBER,
	   'CF' SEGMENT,cast(null as numeric(12,0)) BATCHID_2, C.custid CUSTOMER_NO_2,'' SOURCE_SYS_ID_2,'CF' SEGMENT_2,
	   '' ADDRESS_TYPE, CA.CustAddrHNbr  ADDRESS_1,CA.CustFlatNbr ADDRESS_2,CA.CustAddrLine1 ADDRESS_3,
	   CA.CUSTADDRPROVINCE STATE, CA.CUSTADDRCITY CITY, CA.CUSTADDRZIP PIN,
	   cast(CPLND1.PhoneCountryCode+CPLND1.PhoneAreaCode+CPLND1.PhoneNumber as varchar(48)) LANDLINE_1,
	   cast(CPLND2.PhoneCountryCode+CPLND2.PhoneAreaCode+CPLND2.PhoneNumber as varchar(48)) LANDLINE_2,
	   cast(CPMOB.PhoneCountryCode+CPMOB.PhoneAreaCode+CPMOB.PhoneNumber as varchar(105)) MOBILE,
	   CA.CustAddrStreet AREA, CA.CustAddrLine1 LANDMARK,'' STD,'' PROCESS_TYPE_2,
	   CEM.custEmail, 'N' PROCESS_FLAG_2,'' ERROR_CODE_2,'' ERROR_DESC_2,
	   C.custcif CUSTOMER_ID_2, '' SOURCE_SYSTEM_2,cast(null as numeric(18,0)) PSX_BATCH_ID_2,cast(null as numeric(18,0)) EOD_BATCH_ID_2,
	   cast(null as numeric(12,0)) BATCHID_3,'' STATUS,${call.date} INSERT_TIMESTAMP,${call.date} COMPLETION_TIMESTAMP,'' ERR_DESCRIPTION,
	   '' ERROR_CODE_3,cast(null as numeric(12,0)) BATCHID_4,C.CustID CUSTOMER_NO_3,'' SOURCE_SYS_ID_3,'CF' SEGMENT_3,
	   FM.FinReference DEAL_ID,FM.FinReference LAN_NO,'' CUSTOMER_TYPE, cast(null as numeric(10,0)) APPLN_NO,
	   FM.FinType PRODUCT_CODE, '' PROCESS_TYPE_3,'N' PROCESS_FLAG_3,'' ERROR_CODE_4,
	   '' ERROR_DESC_3,cast(null as numeric(18,0)) PSX_BATCH_ID_3, cast(null as numeric(12,0)) PSX_ID, c.CustCIF CUSTOMER_ID_3,
	   '' SOURCE_SYSTEM_3,cast(null as numeric(18,0)) EOD_BATCH_ID_3,C.LastMntOn	   
from Customers C 
	 left join CustomerDocuments CDPAN on CDPAN.CustID = C.CustID and CDPAN.CustDocCategory='03'
	 left join CustomerDocuments CDDLN on CDDLN.CustID = C.CustID and CDDLN.CustDocCategory='04'
	 left join CustomerDocuments CDVTR on CDVTR.CustID = C.CustID and CDVTR.CustDocCategory='05'
	 left join CustomerDocuments CDTAN on CDTAN.CustID = C.CustID and CDTAN.CustDocCategory='15'
	 left join CustomerDocuments CDPPT on CDPPT.CustID = C.CustID and CDPPT.CustDocCategory='02'
	 left join CustomerDocuments CDADR on CDADR.CustID = C.CustID and CDADR.CustDocCategory='01'
	 left join CustomerDocuments CDCIN on CDCIN.CustID = C.CustID and CDCIN.CustDocCategory='16'
	 left join CustomerDocuments CDDIN on CDDIN.CustID = C.CustID and CDDIN.CustDocCategory='17'
	 left join CustomerDocuments CDRGNO on CDRGNO.CustID = C.CustID and CDRGNO.CustDocCategory='18'
	 left join CustomerDocuments CDCANO on CDCANO.CustID = C.CustID and CDCANO.CustDocCategory='19'
	 left join CustEmployeeDetail CE on CE.CustID = C.CustID 
	 left join CustomerAddresses CA on CA.CustID = C.CustID and custAddrPriority=5
	 left join CustomerPhoneNumbers CPLND1 on CPLND1.PhoneCustID = C.CustID and CPLND1.PhoneTypeCode='HOME'
	 left join CustomerPhoneNumbers CPLND2 on CPLND2.PhoneCustID = C.CustID and CPLND2.PhoneTypeCode='MOBILE2'
	 left join CustomerPhoneNumbers CPMOB on CPMOB.PhoneCustID = C.CustID and CPMOB.PhoneTypeCode='MOBILE1'
	 left join CustomerEMails CEM on CEM.CustID = C.CustID and CEM.CustEmailPriority=5
	 left join FinanceMain FM on FM.custid = C.CustID
	 where C.custAddlvar1 is null
	 </createView>
	 </changeSet>
		

	<changeSet  id="88" author="DurgaPrasad G" dbms="mssql">

<createView viewName="INT_ALM_VIEW" replaceIfExists="true">
	Select Right(F.FinReference,8) AGREEMENTID,F.FinReference AGREEMENTNO,F.FinType PRODUCTFLAG,'' NPA_STAGEID ,
	(FP.TotalPriBal+Fp.TotalPftBal)/CcyMinorCcyUnits INSTLAMT,FP.TotalPriBal/CcyMinorCcyUnits PRINCOMP,Fp.TotalPftBal/CcyMinorCcyUnits INTCOMP,Fp.FirstRepayDate DUEDATE,
	Fp.AccruePft/CcyMinorCcyUnits ACCRUEDAMT,NULL ACCRUEDON,Fp.AccruePft/CcyMinorCcyUnits CUMULATIVE_ACCRUAL_AMT,'N' ADVFLAG
	from FinanceMain F
	Inner join FinPftDetails FP on Fp.FinReference=F.FinReference
	Inner Join RMTCurrencies RC on RC.CcyCode=F.FinCcy
</createView>
</changeSet>

<changeSet  id="88" author="DurgaPrasad G" dbms="oracle">
<createView viewName="INT_ALM_VIEW" replaceIfExists="true">
	Select substr(F.FinReference,length(F.FinReference)-7,length(F.FinReference)) AGREEMENTID,F.FinReference AGREEMENTNO,F.FinType PRODUCTFLAG,'' NPA_STAGEID ,
	(FP.TotalPriBal+Fp.TotalPftBal)/CcyMinorCcyUnits INSTLAMT,FP.TotalPriBal/CcyMinorCcyUnits PRINCOMP,Fp.TotalPftBal/CcyMinorCcyUnits INTCOMP,Fp.FirstRepayDate DUEDATE,
	Fp.AccruePft/CcyMinorCcyUnits ACCRUEDAMT,NULL ACCRUEDON,Fp.AccruePft/CcyMinorCcyUnits CUMULATIVE_ACCRUAL_AMT,'N' ADVFLAG
	from FinanceMain F
	Inner join FinPftDetails FP on Fp.FinReference=F.FinReference
	Inner Join RMTCurrencies RC on RC.CcyCode=F.FinCcy
</createView>
</changeSet>
<changeSet id="89" author="madhubabu">
	<sql>
	INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'SecurityUserDialog_UsrAcExpDt','SecurityUserDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='SECURITYUSER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='SecurityUserDialog_UsrAcExpDt'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
	</sql>
	</changeSet>
	<changeSet id="90" author="satish">
	<createView viewName="PayOrderIssueHeader_View" replaceIfExists="true">
	SELECT     T1.FinReference,T4.CustCIF,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy ,T2.CustID,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.FinIsActive
FROM        PayOrderIssueHeader_Temp   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,FinReference,FinisActive
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,FinReference,FinisActive
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  
 union all
 SELECT     T1.FinReference,T4.CustCIF,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy,T2.CustID,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.FinIsActive
FROM        PayOrderIssueHeader  T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,FinReference,FinisActive
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,FinReference,FinisActive
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  
 WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          PayOrderIssueHeader_Temp
                            WHERE      FinReference = T1.FinReference)     
	
	</createView>
	
	</changeSet>
	<changeSet id="91" author="madhubabu">
	<sql>
	insert into BMTLovFieldCode values ('CA','Current Account','String',0,1,1,1007,CURRENT_TIMESTAMP,'Approved','','','','','',0);
	insert into BMTLovFieldCode values ('SA','Savings Account','String',0,1,1,1007,CURRENT_TIMESTAMP,'Approved','','','','','',0);
	</sql>
	</changeSet>
	<changeSet id="92" author="madhubabu">
	<sql>
		delete from BMTLovFieldCode where FieldCode in('CA','SA')
	</sql>
	</changeSet>
	<changeSet id="93" author="madhubabu">
	<sql>
		insert into BMTLovFieldCode values ('ACC_TYPE',' Account Types','String',0,1,1,1007,CURRENT_TIMESTAMP,'Approved','','','','','',0);
	</sql>
	</changeSet>
	<changeSet id="94" author="madhubabu">
	<sql>
		insert into RMTLovFieldDetail  values((select max(fieldcodeid)+1 from RMTLovFieldDetail),'ACC_TYPE','SA','Savings Account',1,1,1000,current_timestamp,'Approved','','','','','',0,0);
		insert into RMTLovFieldDetail  values((select max(fieldcodeid)+1 from RMTLovFieldDetail),'ACC_TYPE','CA','Current Account',1,1,1000,current_timestamp,'Approved','','','','','',0,0);
	</sql>
	</changeSet>

			<changeSet id="95" author="madhubabu">
	<createView replaceIfExists="true" viewName="CustomerBankInfo_View">
			SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
				     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
				     T3.BankName lovDescBankName,T4.ValueDesc lovDescAccountType
		  FROM       CustomerBankInfo_Temp T1 INNER JOIN 
		             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
		             RMTLovFieldDetail T4 ON T4.FieldCodeValue = T1.AccountType 
		UNION ALL
		
		  SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
				     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
				     T3.BankName lovDescBankName,T4.ValueDesc lovDescAccountType
		  FROM       CustomerBankInfo T1 INNER JOIN 
		             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
		             RMTLovFieldDetail T4 ON T4.FieldCodeValue = T1.AccountType
		WHERE     NOT EXISTS (SELECT 1 FROM CustomerBankInfo_TEMP WHERE BankId = T1.BankId)
	</createView>
	</changeSet>
	<changeSet id="96" author="madhubabu">
	<createView replaceIfExists="true" viewName="CustomerBankInfo_AView">
			SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
		     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		     T3.BankName lovDescBankName,T4.ValueDesc lovDescAccountType
  FROM       CustomerBankInfo T1 INNER JOIN 
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             RMTLovFieldDetail T4 ON T4.FieldCodeValue = T1.AccountType
	</createView>
	</changeSet>
	
	<changeSet id="97" author="pruthvi">
	<createView viewName="INT_CF_CONTROL_VIEW" replaceIfExists="true">
	select  ApplicationNo AGREEMENTNO,cast(null as numeric(8,0)) AGREEMENTID,T2.FinType PRODUCTFLAG,
		cast(T10.PromotionCode as numeric(8,0)) SCHEMEID,cast(T2.FinBranch as numeric(8,0)) BRANCHID,'' NPA_STAGEID,cast(T2.FinIsActive as varchar(1)) LOAN_STATUS,
		case when FinCurrAssetValue>0 then 'PD' else 'FD' end DISB_STATUS,
		FirstRepayDate FIRST_DUE_DATE,T2.MaturityDate MATURITY_DATE,T1.FinAmount/CcyMinorCcyUnits AMTFIN,cast(null as numeric(8,0))  DISBURSED_AMOUNT,
		(T2.ODPrincipal+T2.ODProfit)/CcyMinorCcyUnits EMI_DUE,
		T2.ODPrincipal/CcyMinorCcyUnits PRINCIPAL_DUE,T2.ODProfit/CcyMinorCcyUnits INTEREST_DUE,
		(T2.TotalPriPaid+T2.TotalPftPaid)/CcyMinorCcyUnits  EMI_RECEIVED,
		T2.TotalPriPaid/CcyMinorCcyUnits PRINCIPAL_RECEIVED,T2.TotalPftPaid/CcyMinorCcyUnits INTEREST_RECEIVED,
		(T2.TotalPriBal+T2.TotalPftBal)/CcyMinorCcyUnits EMI_OS,
		T2.TotalPriBal/CcyMinorCcyUnits PRINCIPAL_OS,T2.TotalPftBal/CcyMinorCcyUnits INTEREST_OS,
		cast(null as numeric(8,0))  BULK_REFUND,cast(null as numeric(8,0))  PRINCIPAL_WAIVED,cast(null as numeric(8,0))  EMI_PRINCIPAL_WAIVED,cast(null as numeric(8,0))  EMI_INTEREST_WAIVED,
		cast(null as numeric(8,0))  PRINCIPAL_AT_TERM,cast(null as numeric(8,0))  ADVANCE_EMI,cast(null as numeric(8,0))  ADVANCE_EMI_BILLED,cast(null as numeric(8,0))  MIGRATED_ADVANCE_EMI,
		cast(null as numeric(8,0))  MIGR_ADV_EMI_BILLED,cast(null as numeric(8,0))  MIGRATED_ADVANCE_EMI_UNBILLED,cast(null as numeric(8,0))  CLOSED_CAN_ADV_EMI,
		T2.TotalPriBal/CcyMinorCcyUnits PRINCIPAL_BALANCE,T2.TotalPftBal/CcyMinorCcyUnits INTEREST_BALANCE,
		(T2.TotalPriBal+T2.TotalPftBal)/CcyMinorCcyUnits SOH_BALANCE,(NOInst-NOPaidInst) NO_OF_UNBILLED_EMI,
		T2.TotalPftSchd/CcyMinorCcyUnits TOTAL_INTEREST,T2.TdPftAccrued/CcyMinorCcyUnits ACCRUED_AMOUNT,Unearned/CcyMinorCcyUnits BALANCE_UMFC,
		cast(null as numeric(8,0))  EMI_IN_ADV_RCVD_MAKER,cast(null as numeric(8,0))  EMI_IN_ADVANCE_BILLED,cast(null as numeric(8,0)) EMI_IN_ADVANCE_UNBILLED,
		cast(null as numeric(8,0))  MIG_ADV_EMI_BILLED_PRINCOMP,cast(null as numeric(8,0))  MIG_ADV_EMI_BILLED_INTCOMP,cast(null as numeric(8,0))  MIG_ADV_EMI_UNBILLED_PRINCOMP,
		cast(null as numeric(8,0))  MIG_ADV_EMI_UNBILLED_INTCOMP,cast(null as numeric(8,0)) EMI_IN_ADV_BILLED_PRINCOMP,
		cast(null as numeric(8,0)) EMI_IN_ADV_BILLED_INTCOMP,cast(null as numeric(8,0)) EMI_IN_ADV_UNBILLED_PRINCOMP,cast(null as numeric(8,0)) EMI_IN_ADV_UNBILLED_INTCOMP,
		cast(null as numeric(8,0)) CLOS_CAN_ADV_EMI_PRINCOMP,cast(null as numeric(8,0)) CLOS_CAN_ADV_EMI_INTCOMP,cast(null as numeric(8,0)) SECURITY_DEPOSIT,
		cast(null as numeric(8,0)) SECURITY_DEPOSIT_ADJUSTED,cast(null as numeric(8,0)) ROUNDING_DIFF_RECEIVABLE,cast(null as numeric(8,0)) ROUNDING_DIFF_RECEIVED,
		cast(null as numeric(8,0)) MIG_DIFFERENCE_RECEIVABLE,cast(null as numeric(8,0)) MIG_DIFFERENCE_RECEIVED,cast(null as numeric(8,0)) MIG_DIFFERENCE_PAYABLE,cast(null as numeric(8,0)) MIG_DIFFERENCE_PAID,
		(UnPaidSchdPri+UnPaidSchdPft)/CcyMinorCcyUnits WRITEOFF_DUE,
		 ((WriteoffPrincipal+WriteoffProfit)-(UnPaidSchdPri+UnPaidSchdPft))/CcyMinorCcyUnits WRITEOFF_RECEIVED,
		cast(null as numeric(8,0)) SOLD_SEIZE_RECEIVABLE,cast(null as numeric(8,0)) SOLD_SEIZE_RECEIVED,cast(null as numeric(8,0)) SOLD_SEIZE_PAYABLE,cast(null as numeric(8,0)) SOLD_SEIZE_PAID,
		cast(null as numeric(8,0)) NET_EXCESS_RECEIVED,cast(null as numeric(8,0)) NET_EXCESS_ADJUSTED,PenaltyBal/CcyMinorCcyUnits LPP_CHARGES_RECEIVABLE,
		T4.PenaltyPaid/CcyMinorCcyUnits LPP_CHARGES_RECEIVED,cast(null as numeric(8,0)) PDC_SWAP_CHARGES_RECEIVABLE,cast(null as numeric(8,0)) PDC_SWAP_CHARGES_RECEIVED,
		cast(null as numeric(8,0)) REPO_CHARGES_RECEIVABLE,cast(null as numeric(8,0)) REPO_CHARGES_RECEIVED,cast(null as numeric(8,0)) FORECLOSURE_CHARGES_DUE,cast(null as numeric(8,0)) FORECLOSURE_CHARGES_RCVD,
		cast(null as numeric(8,0)) BOUNCE_CHARGES_DUE,cast(null as numeric(8,0)) BOUNCE_CHARGES_RCVD,cast(null as numeric(8,0)) INSUR_RENEW_CHARGE,cast(null as numeric(8,0)) INSUR_RENEW_CHARGE_RECD,
		cast(null as numeric(8,0)) INSUR_RECEIVABLE,cast(null as numeric(8,0)) INSUR_RECEIVED,cast(null as numeric(8,0)) INSUR_PAYABLE,cast(null as numeric(8,0)) INSUR_PAID,
		T5.CustID CUSTOMERID,(coalesce(CustFName,'')+coalesce(CustMName,'')+coalesce(CustLName,'')) CUSTOMERNAME,
		T2.NOInst SANCTIONED_TENURE,T13.RepayAmount LOAN_EMI,RepayBaseRate FLAT_RATE,
		T1.EffectiveRateOfReturn EFFECTIVE_RATE,T1.FinContractDate AGREEMENTDATE,T6.DisbDate DISBURSALDATE,
		(select LatestRpyDate from FinPftDetails where FinIsActive='0') CLOSUREDATE,cast(null as numeric(8,0)) NO_OF_ADVANCE_EMIS,cast(null as numeric(8,0)) ASSETCOST,
		(NOInst-NOPaidInst) NO_OF_EMI_OS,T2.ODDays DPD,cast(null as numeric(3,0)) CURRENT_BUCKET,
		T2.FinBranch BRANCH_NAME,FinTypeDesc SCHEME_NAME,cast(null as numeric(3,0)) DERIVED_BUCKET,'' ASSETDESC,
		'' MAKE,'' CHASISNUM,'' REGDNUM,'' ENGINENUM,cast(null as numeric(16,2)) INVOICEAMT,'' SUPPLIERDESC,
		'' INSTRUMENT,${call.date}  REPO_DATE,'' LOCAL_OUTSTATION_FLAG,
		T2.FirstODDate FIRST_REPAYDUE_DATE
 from   FinanceMain T1 Inner join
		FinPftDetails T2 on T2.FinReference=T1.FinReference Inner join
		FinWriteoffDetail T3 on T3.FinReference=T1.FinReference Inner join
		FinODCRecovery T4 on T4.FinReference=T1.Finreference Inner join
		Customers T5 on T5.CustID=T1.CustID Inner jOin
		(select FinReference,MIN(DisbDate) DisbDate from FinDisbursementDetails
		 group by FinReference)T6 on T6.FinReference=T1.FinReference Inner Join
		FinStatusDetail T7 on T7.FinReference=T1.FinReference Inner Join
		RMTFinanceTypes T8 on T8.FinType=T1.FinType Inner join
		RMTCurrencies T9 on T9.CcyCode=T1.FinCcy Left Join 
		Promotions T10 On t10.FinType=T2.FinType Inner join
		(select T11.FinReference,RepayAmount from FinPftDetails T11 
		Inner Join FinScheduleDetails T12 on T11.FinReference=T12.FinReference
		where T11.NextRpySchDate=T12.SchDate) T13 on T1.FinReference=T13.FinReference
	</createView>
	</changeSet>
	
	<changeSet id="98" author="SreeRavali">
		<sql>
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		
		-- Security Groups Creation
		
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FIN_HOLDEMI_MAKER', 'HOLD EMI', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FIN_HOLDEMI_APPROVER', 'HOLD EMI', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			
		-- Security Role Groups
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FIN_HOLDEMI_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_OFFICER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FIN_HOLDEMI_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_MANAGER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
		--Sec rights
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_FinanceMainDialog_btnHoldEMI','FinanceMainDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinanceManagement_HoldEMI','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		-- Security Group Rights
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_HOLDEMI_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnHoldEMI'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_HOLDEMI_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_HOLDEMI_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_HOLDEMI_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_HoldEMI'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_HOLDEMI_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_HOLDEMI_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_HoldEMI'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_HOLDEMI_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
	 <changeSet id="99" author="SreeRavali">
		<modifyDataType tableName="overdraftmovements"
			columnName="DroplineFrq" newDataType="varchar(5)" />
	</changeSet>
	<changeSet id="100" author="Madhubabu">
		<addColumn tableName="RejectFinDisbursementdetails">
			<column name="DisbStatus" type="char(1)" />
		</addColumn>
	</changeSet>

	<changeSet id="101" author="Kesav">
		<sql>
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'SUBHEADRULE_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
			Delete from SecGroups where GrpCode = 'SUBHEADRULE_MAKER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SUBHEADRULE_MAKER','WF Maker for Rules', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'RuleDialog_ruleCode');
			Delete from SecRights where RightName = 'RuleDialog_ruleCode';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RuleDialog_ruleCode', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleCode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'SUBHEADRULE_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'RuleDialog_ruleCodeDesc');
			Delete from SecRights where RightName = 'RuleDialog_ruleCodeDesc';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RuleDialog_ruleCodeDesc', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleCodeDesc'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'RuleDialog_ruleEvent');
			Delete from SecRights where RightName = 'RuleDialog_ruleEvent';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RuleDialog_ruleEvent', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleEvent'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'RuleDialog_returnType');
			Delete from SecRights where RightName = 'RuleDialog_returnType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RuleDialog_returnType', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'RuleDialog_returnType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'RuleDialog_active');
			Delete from SecRights where RightName = 'RuleDialog_active';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RuleDialog_active', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'RuleDialog_active'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'RuleDialog_ruleModule');
			Delete from SecRights where RightName = 'RuleDialog_ruleModule';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RuleDialog_ruleModule', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'RuleDialog_ruleModule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'RuleDialog_sqlRule');
			Delete from SecRights where RightName = 'RuleDialog_sqlRule';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RuleDialog_sqlRule', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'RuleDialog_sqlRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_RuleDialog_btnNew');
			Delete from SecRights where RightName = 'button_RuleDialog_btnNew';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RuleDialog_btnNew', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_RuleDialog_btnEdit');
			Delete from SecRights where RightName = 'button_RuleDialog_btnEdit';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RuleDialog_btnEdit', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_RuleDialog_btnDelete');
			Delete from SecRights where RightName = 'button_RuleDialog_btnDelete';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RuleDialog_btnDelete', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_RuleDialog_btnSave');
			Delete from SecRights where RightName = 'button_RuleDialog_btnSave';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RuleDialog_btnSave', 'RuleDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuCat_RulesFactory');
			Delete from SecRights where RightName = 'menuCat_RulesFactory';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuCat_RulesFactory', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'menuCat_RulesFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuItem_RulesFactory_SubHeadRules');
			Delete from SecRights where RightName = 'menuItem_RulesFactory_SubHeadRules';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuItem_RulesFactory_SubHeadRules', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_RulesFactory_SubHeadRules'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_RuleList_NewSubHeadRule');
			Delete from SecRights where RightName = 'button_RuleList_NewSubHeadRule';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RuleList_NewSubHeadRule', 'RuleList', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_MAKER'), (Select RightID from SecRights where RightName = 'button_RuleList_NewSubHeadRule'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_APPROVER');
			Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'SUBHEADRULE_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
			Delete from SecGroups where GrpCode = 'SUBHEADRULE_APPROVER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'SUBHEADRULE_APPROVER','WF Approver for Rules', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);

			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_APPROVER'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'SUBHEADRULE_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);

			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_APPROVER'), (Select RightID from SecRights where RightName = 'menuCat_RulesFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'SUBHEADRULE_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_RulesFactory_SubHeadRules'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>
	
<changeSet id="102" author="Siva" dbms="oracle">	
   		<sql splitStatements="false">
     		 begin
         	 execute immediate 'CREATE SEQUENCE SeqCollateralMovement START WITH 1 INCREMENT BY 1 MAXVALUE 9223372036854775807 NOCYCLE';  
     		 end;  
     	 </sql>
 </changeSet>
 
 <changeSet id="103" author="Siva" dbms="postgresql">	
   		<sql splitStatements="false">
   			do $$
			 begin
			 execute 'CREATE SEQUENCE SeqCollateralMovement START  1 INCREMENT BY 1 ';  
			 end;  
			$$;
	    </sql>
 </changeSet>
 
 <changeSet id="104" author="Siva" dbms="mssql">
		<sql splitStatements="false">
			CREATE TABLE SeqCollateralMovement(
			SeqNo 				bigint IDENTITY(1,1) NOT NULL,
			Value 				int NOT NULL
			);	
		</sql>
</changeSet>

<changeSet id="105" author="DurgaPrasad G">
<createTable tableName="CollateralMovement">
	<column name="MovementSeq" type="bigint">
		<constraints nullable="false" primaryKey="true"/>
	</column>
	<column name="CollateralRef" type="varchar(20)">
		<constraints nullable="false" />
	</column>
	<column name="Reference" type="varchar(20)">
		<constraints nullable="false" />
	</column>
	<column name="AssignPerc" type="NUMBER (5,2)"/>
	<column name="ValueDate" type="datetime" />
	<column name="Process" type="char(1)"/>
</createTable>
</changeSet>

 <changeSet author="Siva" id="106">
	<addColumn tableName="CollateralMovement">
		<column name="Module" type="varchar(20)"/>
	</addColumn>
	</changeSet>
	<changeSet author="SreeRavali" id="107">
		<sql>
			INSERT INTO SMTparameters VALUES ('HOLDEMI_MAXDAYS', 'Number of Days the
			EMI can Hold', 'int', '0', '10', 2, 0, NULL, NULL, 'Number of
			Days the EMI can Hold', 1, 1000, CURRENT_TIMESTAMP,'Approved','null','null','null','null','null',0);
		</sql>
	</changeSet>
	<changeSet author="SreeRavali" id="108">
		<sql>
		   delete from bmtproduct where ProductCode='ODFCLITY';
			insert into bmtproduct values('ODFCLITY','Overdraft Facility',1,1000,CURRENT_TIMESTAMP,'Approved','null','null','null','null','null',0,'ODFCLITY')
		</sql>
	</changeSet>
	<!-- <changeSet id="102" author="Irfan">
	<dropView viewName="SponsorBank_View"/>
		<dropView viewName="SponsorBank_AView"/> 
		<dropTable tableName="SponsorBank"/>
		<dropTable tableName="SponsorBank_Temp"/>
	</changeSet>
	 -->
	<changeSet author="Irfan" id="103">
	
	<createTable tableName="PartnerBank">
		<column name="PartnerBankCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="PartnerBankName" type="varchar(50)">
		<constraints nullable="false"/>
		</column>
		<column name="BankCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="BankBranchCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="BranchMICRCode" type="varchar(20)"/>
		<column name="BranchIFSCCode" type="varchar(20)"/>
		<column name="BranchCity" type="varchar(50)" />
		<column name="UtilityCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="AccountNo" type="varchar(50)">
		<constraints nullable="false"/>
		</column>
		<column name="usage" type="char(1)">
		<constraints nullable="false"/>
		</column>
		<column name="AcType" type="varchar(20)"/>
		<column name="AlwFileDownload" type="bit"/>
		<column name="DisbDownload" type="bit"/>
		<column name="InFavourLength" type="int"/>
		<column name="AccountCategory" type="char(1)"/>
		<column name="Active" type="bit"/>
		<column name="Version" type="int" >
		<constraints nullable="false"/>
		</column>
		<column name="LastMntBy" type="bigint"/>
		<column name="LastMntOn" type="datetime"/>
		<column name="RecordStatus" type="varchar(50)"/>
		<column name="RoleCode" type="varchar(100)"/>
		<column name="NextRoleCode" type="varchar(200)"/>
		<column name="TaskId" type="varchar(50)"/>
		<column name="NextTaskId" type="varchar(200)"/>
		<column name="RecordType" type="varchar(50)"/>
		<column name="WorkflowId" type="bigint"/>
	</createTable>

	<createTable tableName="PartnerBank_Temp">
		<column name="PartnerBankCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="PartnerBankName" type="varchar(50)">
		<constraints nullable="false"/>
		</column>
		<column name="BankCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="BankBranchCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="BranchMICRCode" type="varchar(20)"/>
		<column name="BranchIFSCCode" type="varchar(20)"/>
		<column name="BranchCity" type="varchar(50)" />
		<column name="UtilityCode" type="varchar(8)">
		<constraints nullable="false"/>
		</column>
		<column name="AccountNo" type="varchar(50)">
		<constraints nullable="false"/>
		</column>
		<column name="Usage" type="char(1)">
		<constraints nullable="false"/>
		</column>
		<column name="AcType" type="varchar(20)"/>
		<column name="AlwFileDownload" type="bit"/>
		<column name="DisbDownload" type="bit"/>
		<column name="InFavourLength" type="int"/>
		<column name="AccountCategory" type="char(1)"/>
		<column name="Active" type="bit"/>
		<column name="Version" type="int" >
		<constraints nullable="false"/>
		</column>
		<column name="LastMntBy" type="bigint"/>
		<column name="LastMntOn" type="datetime"/>
		<column name="RecordStatus" type="varchar(50)"/>
		<column name="RoleCode" type="varchar(100)"/>
		<column name="NextRoleCode" type="varchar(200)"/>
		<column name="TaskId" type="varchar(50)"/>
		<column name="NextTaskId" type="varchar(200)"/>
		<column name="RecordType" type="varchar(50)"/>
		<column name="WorkflowId" type="bigint"/>
	</createTable>
</changeSet>
<changeSet id="104" author="Irfan" dbms="postgresql">
		<sql>
			 alter table PartnerBank add PartnerBankId bigint;
		</sql>
</changeSet>
<changeSet id="104.1" author="Irfan" dbms="mssql">
<sql splitStatements="false">
alter table PartnerBank add PartnerBankId bigint;
alter table PartnerBank alter column PartnerBankId bigint not null;
</sql>
</changeSet>
<changeSet id="104.2" author="Irfan" dbms="mssql">
<sql splitStatements="false">
alter table PartnerBank_Temp add PartnerBankId bigint;
alter table PartnerBank_Temp alter column PartnerBankId bigint not null;
</sql>
</changeSet>
<changeSet id="104" author="Irfan" dbms="postgresql">
		<sql>
			 alter table PartnerBank add PartnerBankId bigint;
			 alter table PartnerBank alter column PartnerBankId bigint not null;
		</sql>
	</changeSet>
<changeSet id="104.1" author="Irfan" dbms="postgresql">	
   		<sql splitStatements="false">
   			do $$
			 declare ex integer;
			 begin
			
			  Select MAX(PartnerBankId)+1 from PartnerBank into ex;
			 execute 'CREATE SEQUENCE SEQPartnerBank START  ' || ex || ' INCREMENT BY 1 ';  
			 end;  
			$$;
     	</sql>
     	</changeSet>
 	<changeSet id="104" author="Irfan" dbms="oracle">
		<sql>
			 alter table PartnerBank add PartnerBankId number(19,0);
			alter table PartnerBank modify PartnerBankId not null;
		</sql>
	</changeSet>
	<changeSet id="104.1" author="Irfan" dbms="oracle">	
   		<sql splitStatements="false">   			
			 
			 begin
			 execute immediate 'CREATE SEQUENCE SEQPartnerBank  INCREMENT BY 1 MAXVALUE 9223372036854775807 NOCYCLE';  
			 end;  			
     	</sql>
     	</changeSet>
	<changeSet id="109.1" author="Irfan" dbms="oracle">	
   		<sql>   			
			alter table PartnerBank_Temp add PartnerBankId number(19,0);
			alter table PartnerBank_Temp modify PartnerBankId not null;	
     	</sql>
     	</changeSet>

<changeSet author="Irfan" id="110">
	<createView replaceIfExists="true" viewName="PartnerBank_View">
		SELECT T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active	
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
			T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName
			FROM    	PARTNERBANK_Temp  T1 INNER JOIN
						BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode
			           
			UNION ALL
			
			SELECT		 T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
						T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName
			FROM    	PartnerBank  T1 INNER JOIN
			           BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode
						
			WHERE     NOT EXISTS (SELECT 1 FROM PartnerBank_TEMP WHERE PartnerBankCode = T1.PartnerBankCode)
	</createView>		
</changeSet>

<changeSet author="Irfan" id="111">
	<createView replaceIfExists="true" viewName="PartnerBank_AView">
		SELECT T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
			T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName
			FROM    	PartnerBank  T1 INNER JOIN
						BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode
	</createView>
</changeSet>
<changeSet author="Irfan" id="112">
	<sql>
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
	
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_partnerbank_PartnerBank','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PartnerBankDialog_btnDelete','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PartnerBankDialog_btnEdit','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PartnerBankDialog_btnNew','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PartnerBankDialog_btnSave','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_AccountNo','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_AccountType','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_Active','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_BankBranchCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_BankCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_BranchCity','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_BranchIFSCCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_BranchMICRCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_PartnerBankCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_PartnerBankName','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_UtilityCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	
	INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'PARTNERBANK_MAKER', 'Partner Bank Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'PARTNERBANK_APPROVER', 'Partner Bank Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	
	
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_partnerbank_PartnerBank'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PartnerBankDialog_btnDelete'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PartnerBankDialog_btnEdit'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PartnerBankDialog_btnNew'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PartnerBankDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_AccountNo'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_AccountType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_Active'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_BankBranchCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_BankCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_BranchCity'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_BranchIFSCCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_BranchMICRCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_PartnerBankCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_PartnerBankName'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_UtilityCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_partnerbank_PartnerBank'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PartnerBankDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='PARTNERBANK_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 			
	
	INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='PARTNERBANK_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
	
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);

	</sql>
</changeSet>
<changeSet author="Irfan" id="113">
	<createView replaceIfExists="true" viewName="PartnerBank_AView">
		SELECT T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
			T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName
			FROM    	PartnerBank  T1 INNER JOIN
						BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode
	</createView>
</changeSet>	
<changeSet id="132" author="Madhubabu" dbms="oracle">
		<dropForeignKeyConstraint baseTableName="CUSTOMERBANKINFO_TEMP"
			constraintName="FK_CUSTBANKINFO_TMP_RMTACCTYPE" />
	</changeSet>

	<changeSet author="Kesav" id="109">
		<sql>
			Delete From RMTTRANSACTIONENTRY where ACCOUNTSETID in (SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE in ('BJDISBO', 'BJRATCHG', 'BJSCDCHG'));
			Delete From RMTACCOUNTINGSET where ACCOUNTSETCODE in ('BJDISBO', 'BJRATCHG', 'BJSCDCHG');
			Delete From BMTTRANSACTIONCODE where TranCode In ('010', '510');
			Delete From BMTAMOUNTCODES;
			Delete From RMTACCOUNTTYPES;
			
			Insert into BMTTRANSACTIONCODE (TRANCODE,TRANDESC,TRANTYPE,TRANISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('010','DEBIT','D',1,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTTRANSACTIONCODE (TRANCODE,TRANDESC,TRANTYPE,TRANISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('510','CREDIT','C',1,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);

			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'DEDUCTFEEDISB','Deducted Fee from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'DEDUCTINSDISB','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'DISBURSE','Disbursement Date','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'BPI','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'PFT','TOTALPFT','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DOWNPAY','Downpayment Amount','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DEDUCTFEEDISB','Deducted Fee from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DEDUCTINSDISB','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DISBURSE','Disbursement Date','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'BPI','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'ADDFEETOFINANCE','add Fee To Finance','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'PAIDFEE','Paid Fee','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'WAIVEDFEE','Waived Fee','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'PFT','TOTALPFT','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('RATCHG',0,'PFTCHG','Profit Change','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('SCDCHG',0,'PFTCHG','Profit Change','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);

			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('BAGSHOF','BAGIC SHOP AND OFFICE INSURANCE','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('BANK','BANK','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('BHELIA','BAGIC HEALTH INSURANCE LIABILITY ACCOUNT','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('DECLAPAY','DEATH CLAIM PAYBLE ACCOUNT','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('MISCINC','MISCELLANEOUS INCOME A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('BAGCC','BAGIC COMPREHENSIVE CARE ','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('BAGMH','BAGIC MY HOME','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('BALICLA','BALIC LAIBILITY ACCOUNT','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('CANIN','CANCELLATION CHARGES INCOME A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('DISB','DISBURSEMENT CONTROL A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('DISC','DISCOUNTING CHARGED PAID','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('ELCFEE','EMERGENCY LOAN CARD FEES','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('FCLIN','INCOME ON FORECLOSURE A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('GCPPINS','GROUP CREDIT PROTECT PLUS','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('INITI','INITIAL MONEY RECEBLE','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('INSUI','ICICI LOMBARD INSURANCE PREMIUM A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('INTEX','INTEREST WAIVEOFF A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('INTIN','EMI INTEREST INCOME A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('INTRE','INTEREST RECEIVABLE A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('KNOCK','KNOCK OFF CONTROL A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('LOAN','PO LOAN A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('MAXBHI','MAX BUPA HEALTH INSURANCE','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('PENIN','PENAL INTEREST A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('PROIN','PROCESSING FEE A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('SERIN','SERVICE CHG INCOME A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('SOAIN','SOA CHARGES INCOME A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('TERMI','TERMINATION CONTROL A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('UPTIN','UPFRONT FEES A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('XCESS','EXCESS MONEY A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('TDS14_15','TDS REFUND ACCOUNT 14-15','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('TDS15_16','TDS REFUND ACCOUNT 15-16','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('TDS16_17','TDS REFUND ACCOUNT 16-17','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('UMFC','UMFC A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');
			Insert into RMTACCOUNTTYPES (ACTYPE,ACTYPEDESC,ACPURPOSE,ACHEADCODE,INTERNALAC,CUSTSYSAC,ACLMTCATEGORY,ACTYPEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ASSERTORLIABILITY,ONBALANCESHEET,ALLOWOVERDRAW) values ('PREIN','PRE EMI INTEREST A/C','L',null,1,0,null,1,1,1001,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,null,0,'0');

			Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET),'ADDDBSP','BJDISBO','Disbursement Past for Originatio',0,0,14,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET),'RATCHG','BJRATCHG','Rate Change',0,0,1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET),'SCDCHG','BJSCDCHG','Schedule Change ',0,0,3,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			UPDATE SeqRMTACCOUNTINGSET Set SeqNo = ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET));

			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),90,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = SERVFEE_C - SERVFEE_W;',null,'SERVFEE','D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),140,'Document Fees ','C',0,'DISC',null,'BUILD','GLCODE','510','010','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P;',null,'DOCFEE','D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),60,'INITIAL MONEY RECEIVABLE','C',0,'INITI',null,'BUILD','GLCODE','510','010','Result = DEDUCTFEEDISB + PAIDFEE + ADDFEETOFINANCE + BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),70,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = PROCFEE_C - PROCFEE_W ;',null,'PROCFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),80,'PROCESSING FEES','C',0,'PROIN',null,'BUILD','GLCODE','510','010','Result = PROCFEE_C - PROCFEE_W;',null,'PROCFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),100,'SERVICING FEES','C',0,'SERIN',null,'BUILD','GLCODE','510','010','Result = SERVFEE_C - SERVFEE_W;',null,'SERVFEE','D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),110,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = BPI;',null,null,'D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),120,'PRE EMI INTEREST','C',0,'PREIN',null,'BUILD','GLCODE','510','010','Result = BPI;',null,null,'D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),50,'DISBURSEMENT CONTROL A/C','D',0,'DISB',null,'BUILD','GLCODE','010','510','Result = DEDUCTFEEDISB + PAIDFEE + ADDFEETOFINANCE + BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),130,'Initial Money Receivable','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P;',null,'DOCFEE','D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),40,'UMFC A/C','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = PFT - BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),30,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = PFT - BPI;',null,null,'D',0,0,5,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),10,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = DISBURSE + ADDFEETOFINANCE;',null,null,'D',0,0,7,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),20,'DISBURSEMENT CONTROL A/C','C',0,'DISB',null,'BUILD','GLCODE','510','010','Result = DISBURSE + ADDFEETOFINANCE;',null,null,'D',0,0,7,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJRATCHG'),20,'Change in Interest','C',0,'LOAN',null,'BUILD',null,'510','010','Result = PFTCHG;',null,null,'D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJRATCHG'),10,'Change in Interest','D',0,'UMFC',null,'BUILD',null,'010','510','Result = PFTCHG;',null,null,'D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJSCDCHG'),10,'Change in Interest','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = PFTCHG;',null,null,'D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJSCDCHG'),20,'Change in Interest','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = PFTCHG;',null,null,'D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			
		</sql>
	</changeSet>
	<changeSet id="114" author="Surekha">
		<createTable tableName="AccountTypeGroup">
			<column name="Level" type="int" />
			<column name="GroupId" type="varchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="GroupDescription" type="varchar(100)" />
			<column name="ParentGroup" type="varchar(20)" />
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	<changeSet id="115" author="Surekha">
		<createTable tableName="AccountTypeGroup_Temp">
			<column name="Level" type="int"/>
			<column name="GroupId" type="varchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="GroupDescription" type="varchar(100)" />
			<column name="ParentGroup" type="varchar(20)" />
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	<changeSet id="116" author="SreeRavali">
	<sql>
		insert into BMTAEEVENTS values ('HLDEMI','HOLDEMI',1,1007,CURRENT_TIMESTAMP,'Approved','','','','','',0,1)

	</sql>
</changeSet>
<changeSet id="117" author="Madhubabu">
	<sql>
		delete from secgrouprights where grpid in (select grpid from secgroups where grpcode='CL_ORIGINATION_MAKER') and rightid in (select rightid from secrights where rightname='FinanceMainDialog_finBranch');
	</sql>
</changeSet>
<changeSet id="118" author="Irfan">
	<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_AccType','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_AlwFileDownload','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_DisbDownload','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_AccountCategory','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'PartnerBankDialog_InFavourLength','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_AccType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_AlwFileDownload'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_DisbDownload'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_AccountCategory'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PartnerBankDialog_InFavourLength'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
		
	
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
	</sql>
</changeSet>
<changeSet id="119" author="SreeRavali">
	<sql>
		Insert into RMTACCOUNTINGSET values ((Select MAX(ACCOUNTSETID) + 1
		from
		RMTACCOUNTINGSET),'HLDEMI','Default','Default',0,1,0,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
	</sql>
</changeSet>

<changeSet id="120" author="Irfan">
	<createView replaceIfExists="true" viewName="PartnerBank_View">
	SELECT T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active	
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
			T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName,T4.AcTypeDesc AcTypeName
			FROM    	PARTNERBANK_Temp  T1 INNER JOIN
						BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode INNER JOIN
						RMTAccountTypes T4 ON T1.AcType = T4.AcType
			UNION ALL
			SELECT		 T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
						T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName,T4.AcTypeDesc AcTypeName
			FROM    	PartnerBank  T1 INNER JOIN
			           BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode INNER JOIN
						RMTAccountTypes T4 ON T1.AcType = T4.AcType
						
			WHERE     NOT EXISTS (SELECT 1 FROM PartnerBank_TEMP WHERE PartnerBankCode = T1.PartnerBankCode)
			</createView>
</changeSet>
<changeSet author="Irfan" id="121">
	<createView replaceIfExists="true" viewName="PartnerBank_AView">
		SELECT T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
			T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName,T4.AcTypeDesc AcTypeName
			FROM    	PartnerBank  T1 INNER JOIN
						BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode INNER JOIN
						RMTAccountTypes T4 ON T1.AcType = T4.AcType
	</createView>
</changeSet>
<changeSet author="Surekha" id="117.1">
	<renameColumn  columnDataType="int" newColumnName="AcctTypeLevel" oldColumnName="Level" tableName="AccountTypeGroup_Temp"/>
	<renameColumn  columnDataType="int" newColumnName="AcctTypeLevel" oldColumnName="Level" tableName="AccountTypeGroup"/>
</changeSet>
<changeSet author="Surekha" id="118.1">
<createView replaceIfExists="true" viewName="AccountTypeGroup_View">
		SELECT AcctTypeLevel, GroupId, GroupDescription, ParentGroup 	
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM   AccountTypeGroup_Temp  
			           
			UNION ALL
			SELECT AcctTypeLevel, GroupId, GroupDescription, ParentGroup	
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM    AccountTypeGroup  
						
			WHERE    NOT EXISTS (SELECT 1 FROM AccountTypeGroup_Temp WHERE GroupId = AccountTypeGroup.GroupId)
	</createView>	
</changeSet>	
<changeSet author="Surekha" id="119.1">
<createView replaceIfExists="true" viewName="AccountTypeGroup_AView">
		SELECT AcctTypeLevel, GroupId, GroupDescription, ParentGroup 	
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM   AccountTypeGroup
			           
	</createView>	
</changeSet>	
<changeSet author="Surekha" id="122">
	<sql>
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
	
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_accounttypegroup_AccountTypeGroup','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_AccountTypeGroupDialog_btnDelete','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_AccountTypeGroupDialog_btnEdit','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_AccountTypeGroupDialog_btnNew','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_AccountTypeGroupDialog_btnSave','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeGroupDialog_AcctTypeLevel','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeGroupDialog_GroupId','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeGroupDialog_GroupDescription','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeGroupDialog_ParentGroup','AccountTypeGroupDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	
	INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'AccountTypeGroup_MAKER', 'Account Type Group  Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'AccountTypeGroup_APPROVER', 'Account Type Group  Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	
	
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_accounttypeGroup_AccountTypegroup'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AccountTypeGroupDialog_btnDelete'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AccountTypeGroupDialog_btnEdit'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AccountTypeGroupDialog_btnNew'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AccountTypeGroupDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountTypeGroupDialog_AcctTypeLevel'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountTypeGroupDialog_GroupId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountTypeGroupDialog_GroupDescription'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountTypeGroupDialog_ParentGroup'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_accounttypeGroup_AccountTypegroup'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountTypeGroup_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AccountTypeGroupDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																		
	INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='AccountTypeGroup_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 			
	
	INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='AccountTypeGroup_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
	
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);

	</sql>
</changeSet>

	<changeSet author="Kesav" id="123">
		<sql>
		Delete From RMTTRANSACTIONENTRY where ACCOUNTSETID in (SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE in ('BJDISBO', 'BJRATCHG', 'BJSCDCHG'));
			Delete From RMTACCOUNTINGSET where ACCOUNTSETCODE in ('BJDISBO', 'BJRATCHG', 'BJSCDCHG');
			
			Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET),'ADDDBSP','BJDISBO','Disbursement Past for Originatio',0,0,15,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET),'RATCHG','BJRATCHG','Rate Change',0,0,1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET),'SCDCHG','BJSCDCHG','Schedule Change ',0,0,3,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			UPDATE SeqRMTACCOUNTINGSET Set SeqNo = ((Select MAX(ACCOUNTSETID) + 1 from RMTACCOUNTINGSET));
			
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),90,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = SERVFEE_C - SERVFEE_W;',null,'SERVFEE','D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),140,'Document Fees ','C',0,'DISC',null,'BUILD','GLCODE','510','010','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P;',null,'DOCFEE','D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),60,'INITIAL MONEY RECEIVABLE','C',0,'INITI',null,'BUILD','GLCODE','510','010','Result = DEDUCTFEEDISB + PAIDFEE + ADDFEETOFINANCE + BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),70,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = PROCFEE_C - PROCFEE_W ;',null,'PROCFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),80,'PROCESSING FEES','C',0,'PROIN',null,'BUILD','GLCODE','510','010','Result = PROCFEE_C - PROCFEE_W;',null,'PROCFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),100,'SERVICING FEES','C',0,'SERIN',null,'BUILD','GLCODE','510','010','Result = SERVFEE_C - SERVFEE_W;',null,'SERVFEE','D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),110,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = BPI;',null,null,'D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),120,'PRE EMI INTEREST','C',0,'PREIN',null,'BUILD','GLCODE','510','010','Result = BPI;',null,null,'D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),50,'DISBURSEMENT CONTROL A/C','D',0,'DISB',null,'BUILD','GLCODE','010','510','Result = DEDUCTFEEDISB + PAIDFEE + ADDFEETOFINANCE + BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),130,'Initial Money Receivable','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P;',null,'DOCFEE','D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),40,'UMFC A/C','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = PFT - BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),30,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = PFT - BPI;',null,null,'D',0,0,5,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),10,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = DISBURSE + ADDFEETOFINANCE;',null,null,'D',0,0,7,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJDISBO'),20,'DISBURSEMENT CONTROL A/C','C',0,'DISB',null,'BUILD','GLCODE','510','010','Result = DISBURSE + ADDFEETOFINANCE;',null,null,'D',0,0,7,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJRATCHG'),20,'Change in Interest','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = PFTCHG;',null,null,'D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJRATCHG'),10,'Change in Interest','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = PFTCHG;',null,null,'D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJSCDCHG'),20,'Change in Interest','C',0,'LOAN',null,'BUILD',null,'510','010','Result = PFTCHG;',null,null,'D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE = 'BJSCDCHG'),10,'Change in Interest','D',0,'UMFC',null,'BUILD',null,'010','510','Result = PFTCHG;',null,null,'D',0,0,1,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
		
			</sql>
	</changeSet>
	<changeSet id="124" author="Irfan">
	<createView replaceIfExists="true" viewName="PartnerBank_View">
	SELECT T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active	
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
			T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName,T4.AcTypeDesc AcTypeName
			FROM    	PARTNERBANK_Temp  T1 INNER JOIN
						BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode INNER JOIN
						RMTAccountTypes T4 ON T1.AcType = T4.AcType
			UNION ALL
			SELECT		 T1.PartnerBankId, T1.PartnerBankCode, T1.PartnerBankName, T1.BankCode, T1.BankBranchCode, T1.BranchMICRCode, T1.BranchIFSCCode, T1.BranchCity, T1.UtilityCode, T1.AccountNo, T1.Usage, T1.AcType, T1.AlwFileDownload, T1.DisbDownload, T1.InFavourLength, T1.AccountCategory, T1.Active, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
						T1.RecordType, T1.WorkflowId,T2.BankName BankCodeName,T3.BranchDesc BankBranchCodeName,T4.AcTypeDesc AcTypeName
			FROM    	PartnerBank  T1 INNER JOIN
			           BMTBankDetail T2  ON T1.BankCode=T2.BankCode INNER JOIN
						BankBranches T3  ON T1.BankBranchCode = T3.BranchCode INNER JOIN
						RMTAccountTypes T4 ON T1.AcType = T4.AcType
						
			WHERE     NOT EXISTS (SELECT 1 FROM PartnerBank_TEMP WHERE PartnerBankId = T1.PartnerBankId)
			</createView>
	</changeSet>
	<changeSet author="Irfan" id="125">
		<dropNotNullConstraint tableName="PartnerBank" columnName="PartnerBankName" columnDataType="varchar(50)"/>
		<dropNotNullConstraint tableName="PartnerBank" columnName="UtilityCode" columnDataType="varchar(8)"/>
		<dropNotNullConstraint tableName="PartnerBank_Temp" columnName="PartnerBankName" columnDataType="varchar(50)"/>
		<dropNotNullConstraint tableName="PartnerBank_Temp" columnName="UtilityCode" columnDataType="varchar(8)"/>
</changeSet>

		<changeSet author="Kesav" id="126">
		<sql>
			Delete From RMTTRANSACTIONENTRY where ACCOUNTSETID in (SELECT ACCOUNTSETID From RMTACCOUNTINGSET where ACCOUNTSETCODE in ('BJDISBO'));
			
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),10,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = DISBURSE + ADDFEETOFINANCE;',null,null,'D',0,0,7,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),20,'DISBURSEMENT CONTROL A/C','C',0,'DISB',null,'BUILD','GLCODE','510','010','Result = DISBURSE + ADDFEETOFINANCE;',null,null,'D',0,0,7,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),30,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = PFT - BPI;',null,null,'D',0,0,5,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),40,'UMFC A/C','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = PFT - BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),50,'DISBURSEMENT CONTROL A/C','D',0,'DISB',null,'BUILD','GLCODE','010','510','Result = DEDUCTFEEDISB + PAIDFEE + ADDFEETOFINANCE + BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),60,'INITIAL MONEY RECEIVABLE','C',0,'INITI',null,'BUILD','GLCODE','510','010','Result = DEDUCTFEEDISB + PAIDFEE + ADDFEETOFINANCE + BPI;',null,null,'D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),70,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = PROCFEE_C - PROCFEE_W - PROCFEE_P - PROCFEE_SCH;',null,'PROCFEE','D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),80,'PROCESSING FEES','C',0,'PROIN',null,'BUILD','GLCODE','510','010','Result = PROCFEE_C - PROCFEE_W - PROCFEE_P - PROCFEE_SCH;',null,'PROCFEE','D',0,0,4,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),90,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = SERVFEE_C - SERVFEE_W - SERVFEE_P - SERVFEE_SCH;',null,'SERVFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),100,'SERVICING FEES','C',0,'SERIN',null,'BUILD','GLCODE','510','010','Result = SERVFEE_C - SERVFEE_W - SERVFEE_P - SERVFEE_SCH;',null,'SERVFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),110,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = BPI;',null,null,'D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),120,'PRE EMI INTEREST','C',0,'PREIN',null,'BUILD','GLCODE','510','010','Result = BPI;',null,null,'D',0,0,2,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),130,'Initial Money Receivable','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P - DOCFEE_SCH;',null,'DOCFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select AccountSetID from RMTAccountingSet where AccountsetCode = 'BJDISBO'),140,'Document Fees ','C',0,'DISC',null,'BUILD','GLCODE','510','010','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P - DOCFEE_SCH;',null,'DOCFEE','D',0,0,3,0,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0,'E',0);
			</sql>
	</changeSet>
	<changeSet id="123.1" author="surekha">
  <sql>
  	update SECRIGHTS set page='AccountTypeGroupDialog' where Rightname='button_AccountTypeGroupDialog_btnSave'
  </sql>
</changeSet>
<!-- <changeSet id="127" author="Irfan">
	<sql>
		INSERT INTO ReportList Values('PartnerBank','PartnerBank','label_PartnerBankDialog_PartnerBankCode.value,label_PartnerBankDialog_PartnerBankName.value,label_PartnerBankDialog_BankBranchCode.value,listheader_RecordStatus.label,listheader_RecordType.label','partnerBankCode,partnerBankName,bankBranchCode,recordStatus,recordType','String,String,String,String,String','','ReportList05','Partner Bank Details','Application Masters',0,1000,CURRENT_TIMESTAMP,'Approved','','','','','',0,0);	
	</sql>
</changeSet> -->
<changeSet id="128" author="Irfan">
	<sql>
		Delete from ReportList where Code='PartnerBank';
		INSERT INTO ReportList Values('PartnerBank','PartnerBank','label_PartnerBankDialog_PartnerBankCode.value,label_PartnerBankDialog_PartnerBankName.value,label_PartnerBankDialog_BankBranchCode.value,listheader_RecordStatus.label,listheader_RecordType.label','partnerBankCode,partnerBankName,bankBranchCode,recordStatus,recordType','String,String,String,String,String','','ReportList05','Partner Bank Details','Application Masters',0,1000,CURRENT_TIMESTAMP,'Approved','','','','','',0,0);	
	</sql>
</changeSet>
<changeSet id="129" author="chaitanya">
	<sql>
	delete from BMTAmountCodes;
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'ACCRUE', 'Accrued Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'CPZCHG', 'Capitalization Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'DOWNPAYB', 'Down Payment to Bank', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'DOWNPAYS', 'Down Payment to Supplier/ Vendor', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSF', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'ACCRUE', 'Accrued Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'ASTVALO', 'Original Asset Value', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'CPZCHG', 'Capitalization Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'DEDUCTFEEDISB', 'Deduct Fee From Disbursment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'DOWNPAYB', 'Down Payment to Bank', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'DOWNPAYS', 'Down Payment to Supplier/ Vendor', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBS', '0', 'PFTCHG', 'Interest Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSP', '0', 'ACCRUE', 'Accrued Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSP', '0', 'ASTVALO', 'Original Asset Value', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSP', '0', 'CPZCHG', 'Capitalization Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSP', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSP', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSP', '0', 'DOWNPAYB', 'Down Payment to Bank', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('ADDDBSP', '0', 'DOWNPAYS', 'Down Payment to Supplier/ Vendor', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMENDMNT', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMENDMNT', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'PFT', 'Total Finance Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'PFTAB', 'Actual Interest Balance till maturity', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'PFTAP', 'Actual Interest Paid till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'PFTS', 'Scheduled Interest  till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'PFTSB', 'Scheduled Interest Balance till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('AMZ', '0', 'PFTSP', 'Scheduled Interest payment till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('CANCEL', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('CANCEL', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('CANFI', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('CANFI', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('CANFI', '0', 'NACCRUE', 'Accrue Till NBD', '1', 0, 1000, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('CANFI', '0', 'PFTAB', 'Accrue Till NBD', '1', 0, 1000, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('CANFI', '0', 'RPPRI', 'Repay Principal', '1', 0, 1000, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'ACCRBAL', 'Accrued Amount before Purchase Date', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'PFTS', 'Scheduled Interest  till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'INSTPRI', 'Installment Principal', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'INSTTOT', 'Installment Total', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'PFTS', 'Scheduled Interest  till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'PFTSB', 'Scheduled Interest Balance till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'PFTSP', 'Scheduled Interest payment till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'PRIS', 'Scheduled Principal till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'PRISB', 'Scheduled Principal balance till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'PRISP', 'Scheduled Principal payment till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);

INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '0', 'PENALTY', 'OverDue Charge Fee', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '0', 'WAIVER', 'Waiver', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '1', 'BPNLTY', 'Overdue Charge Fee - Bank', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '1', 'BWAIVER', 'Overdue Charge Waiver - Bank', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '1', 'FPNLTY', 'Overdue Charge Fee - Finance', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '1', 'FWAIVER', 'Overdue Charge Waiver - Finance', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '1', 'IPNLTY', 'Overdue Charge Fee - Investor', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('LATEPAY', '1', 'IWAIVER', 'Overdue Charge Waiver - Investor', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);

INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('M_AMZ', '0', 'SUSPRLS', 'Amortization amount Released From Suspense Now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('M_AMZ', '1', 'SUSPRLS', 'Amortization amount Released From Suspense Now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('M_NONAMZ', '0', 'SUSPNOW', 'Amortization amount Suspended Now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('M_NONAMZ', '1', 'SUSPNOW', 'Amortization amount Suspended Now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('MATURITY', '0', 'PFT', 'Total Finance Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('MATURITY', '0', 'PRI', 'Total Finance Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('MNTCMT', '0', 'CHGAMT', 'Charge Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('MNTCMT', '0', 'CMTAMT', 'Commitment Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('MNTCMT', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('MNTCMT', '0', 'RPPRI', 'Repayment Principal', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('NEWCMT', '0', 'CHGAMT', 'Charge Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('NEWCMT', '0', 'CMTAMT', 'Commitment Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('NEWCMT', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('NEWCMT', '0', 'RPPRI', 'Repayment Principal', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('NORM_PD', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('NORM_PD', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PD_NORM', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PD_NORM', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PD_PIS', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PD_PIS', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PIS_PD', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PIS_PD', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PRGCLAIM', '0', 'PFT', 'Total Finance Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PRGCLAIM', '0', 'PRI', 'Total Finance Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PROVS', '0', 'PROVAMT', 'Actual Provisioned Amount Till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('PROVS', '0', 'PROVDUE', 'Provision Due Amount Till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('RATCHG', '0', 'CPZCHG', 'Capitalization Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('RATCHG', '0', 'PFTCHG', 'Interest Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'ACCRBAL', 'Accrued Amount before Purchase Date', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'PFTS', 'Scheduled Interest  till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'PFTSB', 'Scheduled Interest Balance till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'PFTSP', 'Scheduled Interest payment till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'PRIS', 'Scheduled Principal till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'PRISB', 'Scheduled Principal balance till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'PRISP', 'Scheduled Principal payment till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'PRMAMZ', 'Premium/Discount Amortization Value', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'REFUND', 'Refund Allowed', '1', 0, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'RPPFT', 'Repayment Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'RPPRI', 'Repayment Principal', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '0', 'RPTOT', 'Repayment amount total', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '1', 'BREFUND', 'Refund Interest - Bank', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '1', 'FREFUND', 'Refund Interest - Finance', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('REPAY', '1', 'IREFUND', 'Refund Interest - Investor', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('SCDCHG', '0', 'CPZCHG', 'Capitalization Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('SCDCHG', '0', 'PFTCHG', 'Interest Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('SEGCHG', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('SEGCHG', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('SEGMENT', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('SEGMENT', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, '', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '0', 'ASTVALO', 'Original Asset Value', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '0', 'DEDUCTFEEDISB', 'Deduct Fee From Disbursment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '0', 'DOWNPAYB', 'Down Payment to Bank', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '0', 'DOWNPAYS', 'Down Payment to Supplier/ Vendor', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '0', 'PFTCHG', 'Interest Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('STAGE', '1', 'DISBURSE', 'Disbursement - Finance', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEBK', '0', 'PFTAB', 'Actual Interest Balance till maturity ', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEBK', '0', 'PRIAB', 'Actual Principal Balance till maturity ', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEBK', '0', 'PROVAMT', 'Actual Provisioned Amount Till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEBK', '0', 'WOPAYAMT', 'WriteoffPayAmount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'PFT', 'Total Finance Interest', '1', 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'PFTAB', 'Actual Interest Balance till maturity ', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'PFTAP', 'Actual Interest Paid till now', '1', 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'PRI', 'Total Finance Principal', '1', 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'PRIAB', 'Actual Principal Balance till maturity ', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'PRIAP', 'Total Principal Paid Till now', '1', 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('WRITEOFF', '0', 'PROVAMT', 'Actual Provisioned Amount Till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'PFTSB', 'Scheduled Interest Balance till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'PFTSP', 'Scheduled Interest payment till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'PRIS', 'Scheduled Principal till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'PRISB', 'Scheduled Principal balance till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'PRISP', 'Scheduled Principal payment till now', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'PRMAMZ', 'Premium/Discount Amortization Value', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'REFUND', 'Refund Allowed', '1', 0, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'RPPFT', 'Repayment Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'RPPRI', 'Repayment Principal', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('EARLYSTL', '0', 'RPTOT', 'Repayment amount total', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'ACCRUE', 'Accrued Interest', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'ASTVALO', 'Original Asset Value', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'CPZCHG', 'Capitalization Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'DEDUCTFEEDISB', 'Deduct Fee From Disbursment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'DISBURSE', 'Disbursement Amount', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'DOWNPAY', 'Down Payment', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'DOWNPAYB', 'Down Payment to Bank', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'DOWNPAYS', 'Down Payment to Supplier/ Vendor', '1', 1, 1005, NULL, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'FEEAMOUNT', 'Total Fee Amount', '1', 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'NACCRUE', 'Accrual Till NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '0', 'PFTCHG', 'Interest Change', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('GRACEEND', '1', 'DISBURSE', 'Disbursement - Finance', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
INSERT INTO BMTAmountCodes (AllowedEvent, AllowedRIA, AmountCode, AmountCodeDesc, AmountCodeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) VALUES ('INSTDATE', '0', 'DACCRUE', 'Accrual from Today to NBD', '1', 1, 1005, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0);
--Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DOWNPAY','Downpayment Amount','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DEDUCTFEEDISB','Deducted Fee from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DEDUCTINSDISB','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'DISBURSE','Disbursement Amount','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'BPI','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'ADDFEETOFINANCE','add Fee To Finance','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'PAIDFEE','Paid Fee','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'WAIVEDFEE','Waived Fee','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSP',0,'PFT','TOTALPFT','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
--Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'DOWNPAY','Downpayment Amount','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'DEDUCTFEEDISB','Deducted Fee from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'DEDUCTINSDISB','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
--Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'DISBURSE','Disbursement Amount','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'BPI','Deducted Insurance from Disb','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'ADDFEETOFINANCE','add Fee To Finance','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'PAIDFEE','Paid Fee','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'WAIVEDFEE','Waived Fee','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ADDDBSF',0,'PFT','TOTALPFT','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
 
 </sql>
 </changeSet>
 <changeSet id="130" author="chaitanya">
	<sql>
	delete from Rules where rulemodule='SUBHEAD' and ruleevent='SUBHEAD' and rulecode='GLCODE';
		Insert into Rules Values((select max(RuleID) + 1 from Rules),'SUBHEAD', 'SUBHEAD', 'GLCODE','Account Creation', 
null, 0, null, 'if (reqFinAcType == ''BANK'') {	Result = DISBURSE ; return;  } else {	Result = reqFinType + reqFinAcType ; return; }',
'(|if|FIELDLIST|reqFinAcType| |==|STATICTEXT|BANK| |1|0|1|1|1|DISBURSE|DISBURSE|~)|~(|else|0|0|0|1|1|reqFinType + reqFinAcType|reqFinType,reqFinAcType|~)|',
'0', 'C', '0', 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0, 0, null, 0, null, 1, 'F','1', 'reqFinType,reqFinAcType,DISBURSE',
null);
	</sql>
</changeSet>

 <changeSet author="Siva" id="131">
	<addColumn tableName="FinDisbursementDetails_Log">
		<column name="DisbStatus" type="char(1)"/>
	</addColumn>
	</changeSet>
	
	
	<changeSet id="133" author="Madhubabu" dbms="mssql">
		<dropForeignKeyConstraint baseTableName="CustomerBankInfo_Temp"
			constraintName="fk_custbnkinfo_tmp_rmtacctypes" />
	</changeSet>
	<changeSet id="s01" author="Surekha">
		<createTable tableName="SeqAccountTypeGroup">
			<column name="SeqNo" type="bigint"/>
		</createTable>
	</changeSet>
	<changeSet id="s02" author="Surekha">
		<sql>
			INSERT INTO  SeqAccountTypeGroup VALUES(0);
		</sql>
	</changeSet>
	<changeSet author="Surekha" id="s03">
	 <dropTable tableName="AccountTypeGroup"/>
	 <dropTable tableName="AccountTypeGroup_Temp"/>
</changeSet>
<changeSet id="s04" author="Surekha">
	<createTable tableName="AccountTypeGroup">
		<column name="GroupId" type="bigint">
			<constraints nullable="false" />
		</column>
		<column name="GroupCode" type="varchar(20)">
			<constraints primaryKey="true" nullable="false" />
		</column>
		<column name="GroupDescription" type="varchar(100)" />
		<column name="AcctTypeLevel" type="int" />
		<column name="ParentGroup" type="varchar(20)" />
		<column name="Version" type="int">
			<constraints nullable="false" />
		</column>
		<column name="LastMntBy" type="bigint" />
		<column name="LastMntOn" type="datetime" />
		<column name="RecordStatus" type="varchar(50)" />
		<column name="RoleCode" type="varchar(100)" />
		<column name="NextRoleCode" type="varchar(200)" />
		<column name="TaskId" type="varchar(50)" />
		<column name="NextTaskId" type="varchar(200)" />
		<column name="RecordType" type="varchar(50)" />
		<column name="WorkflowId" type="bigint" />
	</createTable>
</changeSet>
	<changeSet id="s05" author="Surekha">
		<createTable tableName="AccountTypeGroup_Temp">
			<column name="GroupId" type="bigint">
			<constraints nullable="false" />
		</column>
		<column name="GroupCode" type="varchar(20)">
			<constraints primaryKey="true" nullable="false" />
		</column>
		<column name="GroupDescription" type="varchar(100)" />
		<column name="AcctTypeLevel" type="int" />
		<column name="ParentGroup" type="varchar(20)" />
		<column name="Version" type="int">
			<constraints nullable="false" />
		</column>
		<column name="LastMntBy" type="bigint" />
		<column name="LastMntOn" type="datetime" />
		<column name="RecordStatus" type="varchar(50)" />
		<column name="RoleCode" type="varchar(100)" />
		<column name="NextRoleCode" type="varchar(200)" />
		<column name="TaskId" type="varchar(50)" />
		<column name="NextTaskId" type="varchar(200)" />
		<column name="RecordType" type="varchar(50)" />
		<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	<changeSet author="Surekha" id="s06">
<createView replaceIfExists="true" viewName="AccountTypeGroup_View">
		SELECT GroupId,GroupCode, GroupDescription, AcctTypeLevel, ParentGroup 	
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM   AccountTypeGroup_Temp  
			           
			UNION ALL
			SELECT GroupId,GroupCode, GroupDescription, AcctTypeLevel, ParentGroup	
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM    AccountTypeGroup  
						
			WHERE    NOT EXISTS (SELECT 1 FROM AccountTypeGroup_Temp WHERE GroupId = AccountTypeGroup.GroupId)
	</createView>	
</changeSet>	
<changeSet author="Surekha" id="s07">
<createView replaceIfExists="true" viewName="AccountTypeGroup_AView">
		SELECT GroupId,GroupCode, GroupDescription, AcctTypeLevel, ParentGroup
			, Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM   AccountTypeGroup
			           
	</createView>	
</changeSet>

<changeSet id="134" author="Madhubabu">
		<addColumn tableName="FinAdvancePayments_Temp">
			<column name="PartnerBankId" type="bigint" />
		</addColumn>
	</changeSet>
	<changeSet id="135" author="Madhubabu">
		<addColumn tableName="FinAdvancePayments">
			<column name="PartnerBankId" type="bigint"/>
		</addColumn>
	</changeSet>
	<changeSet id="136" author="sai">
		<addPrimaryKey columnNames="PARTNERBANKID" constraintName="PK_partnerbank_Temp"
			tableName="partnerbank_temp" />
	</changeSet>
	<changeSet id="137" author="Madhubabu">
		<addForeignKeyConstraint constraintName="FK_FinAdvPayment_PartnerBnkId"
			referencedTableName="Partnerbank_temp" referencedColumnNames="PartnerBankId"
			baseTableName="FinAdvancePayments" baseColumnNames="PartnerBankId" />
	</changeSet>
	<changeSet id="138" author="Madhubabu">
		<addPrimaryKey columnNames="PARTNERBANKID" constraintName="PK_partnerbank"
			tableName="partnerbank" />
	</changeSet>
	
	<changeSet id="139" author="Madhubabu">
		<dropForeignKeyConstraint baseTableName="FinAdvancePayments"
			constraintName="FK_FinAdvPayment_PartnerBnkId" />
	</changeSet>
	<changeSet id="140" author="Madhubabu">
		<addForeignKeyConstraint constraintName="FK_FinAdvPayment_PartnerBnkId"
			referencedTableName="Partnerbank" referencedColumnNames="PartnerBankId"
			baseTableName="FinAdvancePayments" baseColumnNames="PartnerBankId" />
	</changeSet>
	<changeSet id="141" author="Madhubabu">
		<createView replaceIfExists="true" viewName="FINADVANCEPAYMENTS_VIEW">
SELECT   T1.FinReference,T1.paymentId, T1.PaymentSeq, T1.PaymentDetail, T1.AmtToBeReleased, T1.LiabilityHoldName,
         T1.BeneficiaryName, T1.BeneficiaryAccNo, T1.Description, T1.PaymentType, T1.LLReferenceNo,
         T1.LLDate, T1.CustContribution, T1.SellerContribution, T1.Remarks,T1.DisbDate,T1.DisbSeq,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.BankCode,T1.PayableLoc,T1.PrintingLoc,
		 T1.ValueDate,T1.BankBranchID,T1.PhoneCountryCode,T1.PhoneAreaCode,T1.PhoneNumber,T1.ClearingDate,T1.Status,T1.Active,
		 T1.InputDate,T1.DisbCCy,T1.POIssued,
		 T3.BankCode BranchBankCode,T31.BankName BranchBankName,T3.BranchCode,T3.BranchDesc,T3.IFSC,T3.City, 
		 T4.BankName,T1.PartnerbankId,T5.partnerbankCode,T5.PartnerBankName   
		 FROM  FinAdvancePayments_Temp T1 LEFT OUTER JOIN
		 BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
		 BMTBankDetail T31 ON T31.BankCode=T3.BankCode LEFT OUTER JOIN		 
		 BMTBankDetail T4  ON T1.BankCode=T4.BankCode	LEFT OUTER JOIN
		 PARTNERBANK T5 ON T5.PartnerBankId=T1.PartnerbankId
    
UNION ALL
SELECT   T1.FinReference,T1.paymentId, T1.PaymentSeq, T1.PaymentDetail, T1.AmtToBeReleased, T1.LiabilityHoldName,
         T1.BeneficiaryName, T1.BeneficiaryAccNo, T1.Description, T1.PaymentType, T1.LLReferenceNo,
         T1.LLDate, T1.CustContribution, T1.SellerContribution, T1.Remarks,T1.DisbDate,T1.DisbSeq,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.BankCode,T1.PayableLoc,T1.PrintingLoc,
		 T1.ValueDate,T1.BankBranchID,T1.PhoneCountryCode,T1.PhoneAreaCode,T1.PhoneNumber,T1.ClearingDate,T1.Status,T1.Active,
		 T1.InputDate,T1.DisbCCy,T1.POIssued,
		 T3.BankCode BranchBankCode,T31.BankName BranchBankName,T3.BranchCode,T3.BranchDesc,T3.IFSC,T3.City, 
		 T4.BankName,T1.PartnerbankId,T5.partnerbankCode,T5.PartnerBankName   	 	
		 FROM  FinAdvancePayments T1  LEFT OUTER JOIN
		 BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
		 BMTBankDetail T31 ON T31.BankCode=T3.BankCode LEFT OUTER JOIN		 
		 BMTBankDetail T4  ON T1.BankCode=T4.BankCode		LEFT OUTER JOIN
         PARTNERBANK T5 ON T5.PartnerBankId=T1.PartnerbankId	
WHERE NOT EXISTS 
                 (SELECT 1 FROM  FinAdvancePayments_Temp WHERE FinReference = T1.FinReference and PaymentSeq = T1.PaymentSeq)
		</createView>
		
<createView replaceIfExists="true" viewName="FINADVANCEPAYMENTS_TVIEW">
SELECT   T1.FinReference,T1.PaymentId, T1.PaymentSeq, T1.PaymentDetail, T1.AmtToBeReleased, T1.LiabilityHoldName,
         T1.BeneficiaryName, T1.BeneficiaryAccNo, T1.Description, T1.PaymentType, T1.LLReferenceNo,
         T1.LLDate, T1.CustContribution, T1.SellerContribution, T1.Remarks,T1.DisbDate,T1.DisbSeq,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.BankCode,T1.PayableLoc,T1.PrintingLoc,
		 T1.ValueDate,T1.BankBranchID,T1.PhoneCountryCode,T1.PhoneAreaCode,T1.PhoneNumber,T1.ClearingDate,T1.Status,T1.Active,
		 T1.InputDate,T1.DisbCCy,T1.POIssued,
		 T3.BankCode BranchBankCode,T31.BankName BranchBankName,T3.BranchCode,T3.BranchDesc,T3.IFSC,T3.City, 
		 T4.BankName,T1.PartnerbankId,T5.partnerbankCode,T5.PartnerBankName 	     
		 FROM FinAdvancePayments_Temp T1 LEFT OUTER JOIN
		 BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
		 BMTBankDetail T31 ON T31.BankCode=T3.BankCode LEFT OUTER JOIN		 
		 BMTBankDetail T4  ON T1.BankCode=T4.BankCode LEFT OUTER JOIN
		 PARTNERBANK T5 ON T5.PartnerBankId=T1.PartnerbankId		
		</createView>
		
<createView replaceIfExists="true" viewName="FINADVANCEPAYMENTS_AVIEW">
SELECT   T1.FinReference,T1.paymentid, T1.PaymentSeq, T1.PaymentDetail, T1.AmtToBeReleased, T1.LiabilityHoldName,
         T1.BeneficiaryName, T1.BeneficiaryAccNo, T1.Description, T1.PaymentType, T1.LLReferenceNo,
         T1.LLDate, T1.CustContribution, T1.SellerContribution, T1.Remarks,T1.DisbDate,T1.DisbSeq,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.BankCode,T1.PayableLoc,T1.PrintingLoc,
		 T1.ValueDate,T1.BankBranchID,T1.PhoneCountryCode,T1.PhoneAreaCode,T1.PhoneNumber,T1.ClearingDate,T1.Status,T1.Active,
		 T1.InputDate,T1.DisbCCy,T1.POIssued,
		 T3.BankCode BranchBankCode,T31.BankName BranchBankName,T3.BranchCode,T3.BranchDesc,T3.IFSC,T3.City, 
		 T4.BankName,T1.PartnerbankId,T5.partnerbankCode,T5.PartnerBankName  	     
		 FROM  FinAdvancePayments T1 LEFT OUTER JOIN
		 BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
		 BMTBankDetail T31 ON T31.BankCode=T3.BankCode LEFT OUTER JOIN		 
		BMTBankDetail T4  ON T1.BankCode=T4.BankCode LEFT OUTER JOIN
		 PARTNERBANK T5 ON T5.PartnerBankId=T1.PartnerbankId	
		</createView>			
				
		</changeSet>
<changeSet id="142" author="Madhubabu">
<sql>
INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 3, 'FinAdvancePaymentsDialog_partnerBankID','FinAdvancePaymentsDialog',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='FinAdvancePayments_Maker'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='FinAdvancePaymentsDialog_partnerBankID'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='CL_ORIGINATION_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='FinAdvancePaymentsDialog_partnerBankID'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
</sql>

</changeSet>		
 <changeSet id="143" author="durgaprasad G ">
		<modifyDataType tableName="DEDUP_EOD_CUST_DEMO_DTL" columnName="AADHAR_NO"
			newDataType="varchar(16)" />
</changeSet>
			
<changeSet id="144" author="durgaprasad G ">
		<createView replaceIfExists="true" viewName="INT_POSIDEX_UPDATE_EOD_VIEW">
		 Select cast(null as numeric(12,0)) BATCHID, C.custid CUSTOMER_NO,'' SOURCE_SYS_ID,
	   C.CustFName FIRST_NAME, C.CustMName MIDDLE_NAME, C.CustLName LAST_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustDOB else Null end DOB,
	   Case when C.CustCtgCode='RETAIL' then CDPAN.CustDocTitle else '' end PAN,
	   Case when C.CustCtgCode='RETAIL' then CDDLN.CustDocTitle else '' end DRIVING_LICENSE_NUMBER,
	   Case when C.CustCtgCode='RETAIL' then CDVTR.CustDocTitle else '' end VOTER_ID,
	   Case when C.CustCtgCode='CORP' then CustDOB else null end DATE_OF_INCORPORATION,
	   Case when C.CustCtgCode='CORP' then CDTAN.CustDocTitle else '' end TAN_NO,
	   '' PROCESS_TYPE,Case when C.CustCtgCode='RETAIL' then 'I' else 'C' end APPLICANT_TYPE,
	   Case when C.CustCtgCode='RETAIL' then cast(EmpName as varchar(105)) else null end EMPOYER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CustMotherMaiden else '' end FATHER_NAME,
	   Case when C.CustCtgCode='RETAIL' then CDPPT.CustDocTitle else '' end PASSPORT_NO,
	   '' ACCOUNT_NUMBER, '' CREDIT_CARD_NUMBER, 'N' PROCESS_FLAG,'' ERROR_CODE, '' ERROR_DESC,
	   C.CustCIF CUSTOMER_ID, '' SOURCE_SYSTEM, cast(null as numeric(18,0)) PSX_BATCH_ID, '' UCIN_FLAG,cast(null as numeric(18,0)) EOD_BATCH_ID,
	   ${call.date} INSERT_TS,
	   Case when C.CustCtgCode='RETAIL' then CustGenderCode else '' end GENDER,
	   Case when C.CustCtgCode='RETAIL' then CDADR.CustDocTitle else '' end AADHAR_NO,
	   Case when C.CustCtgCode='CORP' then CDCIN.CustDocTitle else '' end CIN,
	   Case when C.CustCtgCode='CORP' then CDDIN.CustDocTitle else '' end DIN,
	   Case when C.CustCtgCode='CORP' then CDRGNO.CustDocTitle else '' end REGISTRATION_NO,
	   Case when C.CustCtgCode='CORP' then CDCANO.CustDocTitle else '' end CA_NUMBER,
	   'CF' SEGMENT,cast(null as numeric(12,0)) BATCHID_2, C.custid CUSTOMER_NO_2,'' SOURCE_SYS_ID_2,'CF' SEGMENT_2,
	   '' ADDRESS_TYPE, CA.CustAddrHNbr  ADDRESS_1,CA.CustFlatNbr ADDRESS_2,CA.CustAddrLine1 ADDRESS_3,
	   CA.CUSTADDRPROVINCE STATE, CA.CUSTADDRCITY CITY, CA.CUSTADDRZIP PIN,
	   cast(CPLND1.PhoneCountryCode+CPLND1.PhoneAreaCode+CPLND1.PhoneNumber as varchar(48)) LANDLINE_1,
	   cast(CPLND2.PhoneCountryCode+CPLND2.PhoneAreaCode+CPLND2.PhoneNumber as varchar(48)) LANDLINE_2,
	   cast(CPMOB.PhoneCountryCode+CPMOB.PhoneAreaCode+CPMOB.PhoneNumber as varchar(105)) MOBILE,
	   CA.CustAddrStreet AREA, CA.CustAddrLine1 LANDMARK,'' STD,'' PROCESS_TYPE_2,
	   CEM.custEmail Email, 'N' PROCESS_FLAG_2,'' ERROR_CODE_2,'' ERROR_DESC_2,
	   C.custcif CUSTOMER_ID_2, '' SOURCE_SYSTEM_2,cast(null as numeric(18,0)) PSX_BATCH_ID_2,cast(null as numeric(18,0)) EOD_BATCH_ID_2,
	   cast(null as numeric(12,0)) BATCHID_3,'' STATUS,${call.date} INSERT_TIMESTAMP,${call.date} COMPLETION_TIMESTAMP,'' ERR_DESCRIPTION,
	   '' ERROR_CODE_3,cast(null as numeric(12,0)) BATCHID_4,C.CustID CUSTOMER_NO_3,'' SOURCE_SYS_ID_3,'CF' SEGMENT_3,
	   FM.FinReference DEAL_ID,FM.FinReference LAN_NO,'' CUSTOMER_TYPE, cast(null as numeric(10,0)) APPLN_NO,
	   FM.FinType PRODUCT_CODE, '' PROCESS_TYPE_3,'N' PROCESS_FLAG_3,'' ERROR_CODE_4,
	   '' ERROR_DESC_3,cast(null as numeric(18,0)) PSX_BATCH_ID_3, cast(null as numeric(12,0)) PSX_ID, c.CustCIF CUSTOMER_ID_3,
	   '' SOURCE_SYSTEM_3,cast(null as numeric(18,0)) EOD_BATCH_ID_3,C.LastMntOn	   
from Customers C 
	 left join CustomerDocuments CDPAN on CDPAN.CustID = C.CustID and CDPAN.CustDocCategory='03'
	 left join CustomerDocuments CDDLN on CDDLN.CustID = C.CustID and CDDLN.CustDocCategory='04'
	 left join CustomerDocuments CDVTR on CDVTR.CustID = C.CustID and CDVTR.CustDocCategory='05'
	 left join CustomerDocuments CDTAN on CDTAN.CustID = C.CustID and CDTAN.CustDocCategory='15'
	 left join CustomerDocuments CDPPT on CDPPT.CustID = C.CustID and CDPPT.CustDocCategory='02'
	 left join CustomerDocuments CDADR on CDADR.CustID = C.CustID and CDADR.CustDocCategory='01'
	 left join CustomerDocuments CDCIN on CDCIN.CustID = C.CustID and CDCIN.CustDocCategory='16'
	 left join CustomerDocuments CDDIN on CDDIN.CustID = C.CustID and CDDIN.CustDocCategory='17'
	 left join CustomerDocuments CDRGNO on CDRGNO.CustID = C.CustID and CDRGNO.CustDocCategory='18'
	 left join CustomerDocuments CDCANO on CDCANO.CustID = C.CustID and CDCANO.CustDocCategory='19'
	 left join CustEmployeeDetail CE on CE.CustID = C.CustID 
	 left join CustomerAddresses CA on CA.CustID = C.CustID and custAddrPriority=5
	 left join CustomerPhoneNumbers CPLND1 on CPLND1.PhoneCustID = C.CustID and CPLND1.PhoneTypeCode='HOME'
	 left join CustomerPhoneNumbers CPLND2 on CPLND2.PhoneCustID = C.CustID and CPLND2.PhoneTypeCode='MOBILE2'
	 left join CustomerPhoneNumbers CPMOB on CPMOB.PhoneCustID = C.CustID and CPMOB.PhoneTypeCode='MOBILE1'
	 left join CustomerEMails CEM on CEM.CustID = C.CustID and CEM.CustEmailPriority=5
	 left join FinanceMain FM on FM.custid = C.CustID
	 where C.custAddlvar1 is null
	 </createView>
	 </changeSet>
	 <changeSet id="s08" author="Surekha">
		<renameColumn tableName="AccountTypeGroup" oldColumnName="ParentGroup" newColumnName="ParentGroupId"/>
		<renameColumn tableName="AccountTypeGroup_Temp" oldColumnName="ParentGroup" newColumnName="ParentGroupId"/>
	</changeSet>
	<changeSet author="Surekha" id="s09">
<createView replaceIfExists="true" viewName="AccountTypeGroup_View">
		SELECT T1.GroupId, T1.GroupCode, T1.GroupDescription, T1.AcctTypeLevel, T1.ParentGroupId , T2.GroupCode  ParentGroup, T2.GroupDescription ParentGroupDesc	
			,T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM   AccountTypeGroup_Temp T1 INNER JOIN
					AccountTypeGroup T2 ON T1.GroupCode = T2.GroupCode
			           
			UNION ALL
			SELECT T1.GroupId, T1.GroupCode, T1.GroupDescription, T1.AcctTypeLevel, T1.ParentGroupId , T2.GroupCode  ParentGroup, T2.GroupDescription ParentGroupDesc	
			,T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM    AccountTypeGroup T1 INNER JOIN
					AccountTypeGroup T2 ON T1.GroupCode = T2.GroupCode
						
			WHERE    NOT EXISTS (SELECT 1 FROM AccountTypeGroup_Temp WHERE GroupId = T1.GroupId)
	</createView>	
</changeSet>	
<changeSet author="Surekha" id="s10">
<createView replaceIfExists="true" viewName="AccountTypeGroup_AView">
		SELECT T1.GroupId, T1.GroupCode, T1.GroupDescription, T1.AcctTypeLevel, T1.ParentGroupId , T2.GroupCode  ParentGroup, T2.GroupDescription ParentGroupDesc	
			,T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM   AccountTypeGroup T1 INNER JOIN
					AccountTypeGroup T2 ON T1.GroupCode = T2.GroupCode
			           
	</createView>	
</changeSet>
<changeSet id="145" author="chaitanya.ch">
	<sql>
		Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER');
Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
Delete from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER';
INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONWORKFLOW_MAKER','Group of Rights for promotions to Maker Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_FinanceWorkFlow'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'button_FinanceWorkFlowDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'button_FinanceWorkFlowDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'FinanceWorkFlowDialog_workFlowType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'FinanceWorkFlowDialog_finEvent'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);


----APPROVER 
Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER');
Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
Delete from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER';
INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONWORKFLOW_APPROVER','Group of Rights for promotions to Approver Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_FinanceWorkFlow'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'button_FinanceWorkFlowDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
 
Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);


--PROCESS EDITOR 
Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER');
Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
Delete from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER';
INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTION_REFERENCEDETAIL_MAKER','Group of Rights for Promotions Process Editor to Approver Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_FinanceReferenceDetail'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'button_FinanceReferenceDetailDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_finRefType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_finRefId'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_isActive'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_showInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_mandInputInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_allowInputInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
</sql>
</changeSet>
<changeSet id="146" author="chaitanya.ch">
<sql>
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER');
	Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
	Delete from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER';
	INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONWORKFLOW_MAKER','Group of Rights for promotions to Maker Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_PromotionWorkFlow'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'button_FinanceWorkFlowDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'button_FinanceWorkFlowDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'FinanceWorkFlowDialog_workFlowType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'FinanceWorkFlowDialog_finEvent'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	
	----APPROVER 
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER');
	Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
	Delete from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER';
	INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONWORKFLOW_APPROVER','Group of Rights for promotions to Approver Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_PromotionWorkFlow'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'button_FinanceWorkFlowDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	 
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	
	--PROCESS EDITOR 
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER');
	Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
	Delete from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER';
	INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTION_REFERENCEDETAIL_MAKER','Group of Rights for Promotions Process Editor to Approver Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_PromotionReferenceDetail'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'button_FinanceReferenceDetailDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_finRefType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_finRefId'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_isActive'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_showInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_mandInputInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_allowInputInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
</sql>
</changeSet>
<changeSet id="147" author="chaitanya.ch">
	<createView viewName="LMTPROMOTIONWORKFLOWDEF_VIEW" replaceIfExists="true">
		SELECT   T1.FinType,T1.FinType TypeCode, T4.FinTypeDesc lovDescFinTypeName , null CollateralDesc,null VasProductDesc,
						 null CommitmentTypeDesc, null lovDescFacilityTypeName ,
						 T1.ScreenCode, T1.WorkFlowType ,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T4.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName, 
						 T2.Active FinIsActive,
						 T2.FinType	LovDescProductName,T4.FinAssetType,
				         T1.FinEvent, T5.ProductCategory
				FROM     LMTFinanceWorkFlowDef_Temp T1 
						 LEFT JOIN Promotions T2 ON T1.FinType = T2.PromotionCode 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType
						 AND T3.WorkFlowActive = 1 
						 INNER JOIN RMTFINANCETYPES T4 ON T2.FinType = T4.FinType
 						 INNER JOIN BMTProduct T5 ON T4.FinCategory = T5.ProductCode
				UNION ALL
				SELECT   T1.FinType,T1.FinType TypeCode, T4.FinTypeDesc lovDescFinTypeName , null CollateralDesc,null VasProductDesc,
						null CommitmentTypeDesc, null lovDescFacilityTypeName ,
						 T1.ScreenCode, T1.WorkFlowType ,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T4.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName, 
						 T2.Active FinIsActive,
						 T2.FinType	LovDescProductName,T4.FinAssetType,
				         T1.FinEvent, T5.ProductCategory
				FROM     LMTFinanceWorkFlowDef  T1 
						 LEFT JOIN Promotions T2 ON T1.FinType = T2.PromotionCode 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType 
						 AND T3.WorkFlowActive = 1 
						 INNER JOIN RMTFINANCETYPES T4 ON T2.FinType = T4.FinType
 						 INNER JOIN BMTProduct T5 ON T4.FinCategory = T5.ProductCode
				WHERE    (NOT EXISTS
				                          (SELECT     1 Expr1
				                            FROM          LMTFinanceWorkFlowDef_Temp
				                            WHERE      (FinType = T1.FinType AND FinEvent = T1.FinEvent AND ModuleName = T1.ModuleName)))
	
	
	</createView>
</changeSet>
<changeSet id="148" author="chaitanya.ch">
<createView viewName="LMTPROMOTIONWORKFLOWDEF_AVIEW" replaceIfExists="true">
SELECT   T1.FinType,T1.FinType TypeCode, T4.FinTypeDesc lovDescFinTypeName , null CollateralDesc,null VasProductDesc,
						null CommitmentTypeDesc, null lovDescFacilityTypeName ,
						 T1.ScreenCode, T1.WorkFlowType ,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T4.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName, 
						 T2.Active FinIsActive,
						 T2.FinType	LovDescProductName,T4.FinAssetType,
				         T1.FinEvent, T5.ProductCategory
				FROM     LMTFinanceWorkFlowDef  T1 
						 LEFT JOIN Promotions T2 ON T1.FinType = T2.PromotionCode 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType 
						 AND T3.WorkFlowActive = 1 
						 INNER JOIN RMTFINANCETYPES T4 ON T2.FinType = T4.FinType
 						 INNER JOIN BMTProduct T5 ON T4.FinCategory = T5.ProductCode
</createView>
</changeSet>
<changeSet id="149" author="chaitanya.ch">
<createView viewName="LMTPROMOTIONWORKFLOWDEF_AVIEW" replaceIfExists="true">
SELECT T1.FinType , T1.FinType TypeCode, T4.FinTypeDesc lovDescFinTypeName  ,
		null CollateralDesc,null VasProductDesc,null CommitmentTypeDesc,
          T1.FinType lovDescPromotionCode  ,
          T2.PromotionDesc lovDescPromotionName  ,
          null lovDescFacilityTypeName  ,
          T1.ScreenCode ,
          T1.WorkFlowType ,
          T3.WorkFlowDesc lovDescWorkFlowTypeName  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T3.WorkFlowRoles LovDescWorkFlowRolesName  ,
          T4.FinCategory LovdescProductCodeName  ,
          T4.FinDivision lovDescFinDivisionName  ,
          T3.FirstTaskOwner LovDescFirstTaskOwner  ,
          T1.ModuleName ,
          T2.Active FinIsActive, 
          T5.PRODUCTDESC LovDescProductName  ,
          T4.FinTypeDesc lovDescPromoFinTypeDesc ,
          T4.FinAssetType ,
          T2.StartDate ,
          T2.EndDate ,
          T1.FinEvent,
          T5.ProductCategory
		  FROM LMTFinanceWorkFlowDef  T1 
		 LEFT JOIN Promotions T2 ON T1.FinType = T2.PromotionCode 
		 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType 
		 AND T3.WorkFlowActive = 1 
		 INNER JOIN RMTFINANCETYPES T4 ON T2.FinType = T4.FinType
 		 INNER JOIN BMTProduct T5 ON T4.FinCategory = T5.ProductCode
 

</createView>
</changeSet>
 
	<changeSet id="150" author="chaitanya.ch">
<sql>
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER');
	Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
	Delete from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER';
	INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONWORKFLOW_MAKER','Group of Rights for promotions to Maker Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_PromotionWorkFlow'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionWorkFlowDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'button_PromotionWorkFlowDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'PromotionWorkFlowDialog_workFlowType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_MAKER'), (Select RightID from SecRights where RightName = 'PromotionWorkFlowDialog_finEvent'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	
	----APPROVER 
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER');
	Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
	Delete from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER';
	INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTIONWORKFLOW_APPROVER','Group of Rights for promotions to Approver Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_PromotionWorkFlow'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'button_PromotionWorkFlowDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTIONWORKFLOW_APPROVER'), (Select RightID from SecRights where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	 
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	
	--PROCESS EDITOR 
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	
	Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER');
	Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
	Delete from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER';
	INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PROMOTION_REFERENCEDETAIL_MAKER','Group of Rights for Promotions Process Editor to Approver Role ', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_SolutionFactory_PromotionReferenceDetail'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'button_FinanceReferenceDetailDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_finRefType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_finRefId'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_isActive'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_showInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_mandInputInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PROMOTION_REFERENCEDETAIL_MAKER'), (Select RightID from SecRights where RightName = 'FinanceReferenceDetailDialog_allowInputInStage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
	
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
	Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
	Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
</sql>
</changeSet>
 



</databaseChangeLog>