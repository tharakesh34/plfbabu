<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="1" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_SystemMaster');
			delete from secrights where rightname='menuCat_SystemMaster';
		</sql>
	</changeSet>
	<changeSet id="2" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_ApplicationMaster');
			delete from secrights where rightname='menuCat_ApplicationMaster';
		</sql>
	</changeSet>
	<changeSet id="3" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_CustomerMasters');
			delete from secrights where rightname='menuCat_CustomerMasters';
		</sql>
	</changeSet>
	<changeSet id="4" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_eod');
			delete from secrights where rightname='menuCat_eod';
		</sql>
	</changeSet>
	<changeSet id="5" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_Mandates');
			delete from secrights where rightname='menuCat_Mandates';
		</sql>
	</changeSet>
	<changeSet id="6" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_Disbursement');
			delete from secrights where rightname='menuCat_Disbursement';
		</sql>
	</changeSet>
	<changeSet id="7" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_SAPGL');
			delete from secrights where rightname='menuCat_SAPGL';
		</sql>
	</changeSet>
	<changeSet id="8" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menu_Category_CIBIL');
			delete from secrights where rightname='menu_Category_CIBIL';
		</sql>
	</changeSet>
	<changeSet id="9" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_RulesFactory');
			delete from secrights where rightname='menuCat_RulesFactory';
		</sql>
	</changeSet>
	<changeSet id="10" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_SolutionFactory');
			delete from secrights where rightname='menuCat_SolutionFactory';
		</sql>
	</changeSet>
	<changeSet id="11" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_Finance');
			delete from secrights where rightname='menuCat_Finance';
		</sql>
	</changeSet>
	<changeSet id="12" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_Administration');
			delete from secrights where rightname='menuCat_Administration';
		</sql>
	</changeSet>
	<changeSet id="13" author="Prakash">
		<sql>
			delete from secrights where rightname='menuCat_StaticParms';
		</sql>
	</changeSet>
	<changeSet id="14" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_FinanceManagement');
			delete from secrights where rightname='menuCat_FinanceManagement';
		</sql>
	</changeSet>
	<changeSet id="15" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_FinanceEnquiry');
			delete from secrights where rightname='menuCat_FinanceEnquiry';
		</sql>
	</changeSet>
	<changeSet id="16" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_CustomerEnquiry');
			delete from secrights where rightname='menuCat_CustomerEnquiry';
		</sql>
	</changeSet>
	<changeSet id="17" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_Reports');
			delete from secrights where rightname='menuCat_Reports';
		</sql>
	</changeSet>
	<changeSet id="18" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_CustomerTemplates');
			delete from secrights where rightname='menuCat_CustomerTemplates';
		</sql>
	</changeSet>
	<changeSet id="19" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_CreditReports');
			delete from secrights where rightname='menuCat_CreditReports';
		</sql>
	</changeSet>
	<changeSet id="20" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_DelinquencyReports');
			delete from secrights where rightname='menuCat_DelinquencyReports';
		</sql>
	</changeSet>
	<changeSet id="21" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_FinReports');
			delete from secrights where rightname='menuCat_FinReports';
		</sql>
	</changeSet>
	<changeSet id="22" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_FinDeptReports');
			delete from secrights where rightname='menuCat_FinDeptReports';
		</sql>
	</changeSet>
	<changeSet id="23" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_Limit');
			delete from secrights where rightname='menuCat_Limit';
		</sql>
	</changeSet>
	<changeSet id="24" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_LimitEnquiry');
			delete from secrights where rightname='menuCat_LimitEnquiry';
		</sql>
	</changeSet>
	<changeSet id="25" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_PresentmentDetails');
			delete from secrights where rightname='menuCat_PresentmentDetails';
		</sql>
	</changeSet>
	<changeSet id="26" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_payment_PaymentInstructions');
			delete from secrights where
			rightname='menuCat_payment_PaymentInstructions';
		</sql>
	</changeSet>
	<changeSet id="27" author="Prakash">
		<sql>
			delete from SecGroupRights where rightid in (select rightid from secrights
			where rightname ='menuCat_DashBoard');
			delete from secrights where rightname='menuCat_DashBoard';
		</sql>
	</changeSet>


	<changeSet id="28" author="DurgaPrasad G">
		<createView viewName="EXTENDEDFIELDHEADER_VIEW"
			replaceIfExists="true">
		SELECT		T1.ModuleId, T1.ModuleName, T1.SubModuleName, T1.TabHeading, T1.NumberOfColumns		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			,POSTVALIDATION,PREVALIDATION,POSTVALIDATIONREQ,PREVALIDATIONREQ
			FROM    	ExtendedFieldHeader_TEMP T1
		UNION ALL
		SELECT		T1.ModuleId, T1.ModuleName, T1.SubModuleName, T1.TabHeading, T1.NumberOfColumns		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			,POSTVALIDATION,PREVALIDATION,POSTVALIDATIONREQ,PREVALIDATIONREQ
			FROM    	ExtendedFieldHeader T1
		WHERE     NOT EXISTS (SELECT 1 FROM ExtendedFieldHeader_TEMP WHERE ModuleId = T1.ModuleId)
	</createView>
	</changeSet>

	<changeSet id="29" author="DurgaPrasad G">
		<createView viewName="EXTENDEDFIELDHEADER_AVIEW"
			replaceIfExists="true">
	SELECT     ModuleId, ModuleName, SubModuleName, TabHeading, NumberOfColumns, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, 
                      TaskId, NextTaskId, RecordType, WorkflowId
					  ,POSTVALIDATION,PREVALIDATION,POSTVALIDATIONREQ,PREVALIDATIONREQ
	FROM         ExtendedFieldHeader
	</createView>
	</changeSet>

	<changeSet id="30" author="Durgaprasad.g">
		<sql>
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from
			SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from
			SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from
			SecRoleGroups);

			Delete from SecGroups where GrpCode = 'EXTENDEDFIELD_CONFIGURATION_MAKER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups),
			'EXTENDEDFIELD_CONFIGURATION_MAKER','WF Maker for extendedfield
			configuration', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL,
			NULL, NULL,0);
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from
			SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select MAX(RoleID) from
			SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP,
			NULL, NULL, NULL, NULL, NULL, NULL, 0);

			Delete from SecGroupRights where RightID In (Select RightID from SecRights
			where RightName = 'menuCat_SolutionFactory');
			Delete from SecRights where RightName = 'menuCat_SolutionFactory';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0,
			'menuCat_SolutionFactory', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null,
			null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000,
			CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights
			where RightName =
			'menuItem_SolutionFactory_ExtendedFieldConfiguration');
			Delete from SecRights where RightName =
			'menuItem_SolutionFactory_ExtendedFieldConfiguration';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0,
			'menuItem_SolutionFactory_ExtendedFieldConfiguration', 'MENU', 1,
			1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName =
			'menuItem_SolutionFactory_ExtendedFieldConfiguration'), 1, 1, 1000,
			CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights
			where RightName =
			'button_ExtendedFieldConfigList_NewExtendedFieldConfig');
			Delete from SecRights where RightName =
			'button_ExtendedFieldConfigList_NewExtendedFieldConfig';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2,
			'button_ExtendedFieldConfigList_NewExtendedFieldConfig',
			'ExtendedFieldConfigList', 1, 1000, CURRENT_TIMESTAMP, null, null,
			null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName =
			'button_ExtendedFieldConfigList_NewExtendedFieldConfig'), 1, 1, 1000,
			CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from SecRights
			where RightName = 'button_ExtendedFieldConfigDialog_btnSave');
			Delete from SecRights where RightName =
			'button_ExtendedFieldConfigDialog_btnSave';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2,
			'button_ExtendedFieldConfigDialog_btnSave',
			'ExtendedFieldConfigDialog', 1, 1000, CURRENT_TIMESTAMP, null, null,
			null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName = 'button_ExtendedFieldConfigDialog_btnSave'), 1, 1,
			1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from
			SecRights where RightName = 'ExtendedFieldConfigDialog_tabHeading');
			Delete from SecRights where RightName =
			'ExtendedFieldConfigDialog_tabHeading';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3,
			'ExtendedFieldConfigDialog_tabHeading', 'ExtendedFieldConfigDialog',
			1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName = 'ExtendedFieldConfigDialog_tabHeading'), 1, 1,
			1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from
			SecRights where RightName =
			'ExtendedFieldConfigDialog_preValidationReq');
			Delete from SecRights where RightName =
			'ExtendedFieldConfigDialog_preValidationReq';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3,
			'ExtendedFieldConfigDialog_preValidationReq',
			'ExtendedFieldConfigDialog', 1, 1000, CURRENT_TIMESTAMP, null, null,
			null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName = 'ExtendedFieldConfigDialog_preValidationReq'), 1,
			1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from
			SecRights where RightName =
			'ExtendedFieldConfigDialog_postValidationReq');
			Delete from SecRights where RightName =
			'ExtendedFieldConfigDialog_postValidationReq';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3,
			'ExtendedFieldConfigDialog_postValidationReq',
			'ExtendedFieldConfigDialog', 1, 1000, CURRENT_TIMESTAMP, null, null,
			null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName = 'ExtendedFieldConfigDialog_postValidationReq'), 1,
			1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from
			SecRights where RightName =
			'ExtendedFieldConfigDialog_preValidation');
			Delete from SecRights where RightName =
			'ExtendedFieldConfigDialog_preValidation';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3,
			'ExtendedFieldConfigDialog_preValidation',
			'ExtendedFieldConfigDialog', 1, 1000, CURRENT_TIMESTAMP, null, null,
			null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName = 'ExtendedFieldConfigDialog_preValidation'), 1, 1,
			1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Delete from SecGroupRights where RightID In (Select RightID from
			SecRights where RightName =
			'ExtendedFieldConfigDialog_postValidation');
			Delete from SecRights where RightName =
			'ExtendedFieldConfigDialog_postValidation';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3,
			'ExtendedFieldConfigDialog_postValidation',
			'ExtendedFieldConfigDialog', 1, 1000, CURRENT_TIMESTAMP, null, null,
			null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_MAKER'), (Select RightID from SecRights
			where RightName = 'ExtendedFieldConfigDialog_postValidation'), 1, 1,
			1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );


			Delete from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_APPROVER';
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups),
			'EXTENDEDFIELD_CONFIGURATION_APPROVER','WF Approver for extendedfield
			configuration', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL,
			NULL, NULL,0);
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from
			SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_APPROVER'), (Select MAX(RoleID) from
			SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000,
			CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);

			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_APPROVER'), (Select RightID from
			SecRights where RightName = 'menuCat_SolutionFactory'), 1, 1, 1000,
			CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_APPROVER'), (Select RightID from
			SecRights where RightName =
			'menuItem_SolutionFactory_ExtendedFieldConfiguration'), 1, 1, 1000,
			CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from
			SecGroupRights), (Select GrpID from SecGroups where GrpCode =
			'EXTENDEDFIELD_CONFIGURATION_APPROVER'), (Select RightID from
			SecRights where RightName =
			'button_ExtendedFieldConfigDialog_btnSave'), 1, 1, 1000,
			CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from
			SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from
			SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from
			SecRoleGroups);
		</sql>
	</changeSet>

	<changeSet id="28.2" author="Jayant">
		<addColumn tableName="Extendedfieldheader">
			<column name="POSTVALIDATION" type="NCLOB"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.3" author="Jayant">
		<addColumn tableName="Extendedfieldheader">
			<column name="PREVALIDATION" type="NCLOB"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.4" author="Jayant">
		<addColumn tableName="Extendedfieldheader">
			<column name="POSTVALIDATIONREQ" type="SMALLINT"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.5" author="Jayant">
		<addColumn tableName="Extendedfieldheader">
			<column name="PREVALIDATIONREQ" type="SMALLINT"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.6" author="Jayant">
		<addColumn tableName="Extendedfieldheader_temp">
			<column name="POSTVALIDATION" type="NCLOB"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.7" author="Jayant">
		<addColumn tableName="Extendedfieldheader_temp">
			<column name="PREVALIDATION" type="NCLOB"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.8" author="Jayant">
		<addColumn tableName="Extendedfieldheader_temp">
			<column name="POSTVALIDATIONREQ" type="SMALLINT"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.9" author="Jayant">
		<addColumn tableName="Extendedfieldheader_temp">
			<column name="PREVALIDATIONREQ" type="SMALLINT"></column>
		</addColumn>
	</changeSet>
	<changeSet id="28.10" author="Jayant">
		<sql>
			Update Extendedfieldheader set PREVALIDATIONREQ = 0,POSTVALIDATIONREQ = 0;
			Update Extendedfieldheader_temp set PREVALIDATIONREQ =
			0,POSTVALIDATIONREQ = 0;
		</sql>
	</changeSet>
	<changeSet id="31" author="Ganesh.p">
	<sql>
		Delete from ErrorDetails where ErrorCode = '90351';
		INSERT INTO ErrorDetails VALUES('90351','EN','E','No extended field details configured against given module and submodule.',
		'test','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="32" author="Srikanth">
	<sql>
	Delete from ErrorDetails where ErrorCode = '90337';
	INSERT INTO ErrorDetails VALUES('90337','EN','E','{0} is invalid, applicable values are {1}.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>

	<changeSet id="33" author="Ganesh.p">
		<addColumn tableName="EXTENDEDFIELDDETAIL">
			<column name="PARENTTAG" type="VARCHAR(18)"></column>
			<column name="INPUTELEMENT" type="BOOLEAN" defaultValue="true">
				<constraints nullable="false" />
			</column>
		</addColumn>
	</changeSet>
	<changeSet id="34" author="Ganesh.p">
		<addColumn tableName="EXTENDEDFIELDDETAIL_TEMP">
			<column name="PARENTTAG" type="VARCHAR(18)"></column>
			<column name="INPUTELEMENT" type="BOOLEAN" defaultValue="true">
				<constraints nullable="false" />
			</column>
		</addColumn>
	</changeSet>
	<changeSet id="35" author="Ganesh.p">
		<createView viewName="EXTENDEDFIELDDETAIL_VIEW" replaceIfExists="true">
		  SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                      T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.MultiLine,T1.ParentTag,T1.InputElement
		FROM         ExtendedFieldDetail_TEMP  T1 INNER JOIN
                      ExtendedFieldHeader_TEMP  T2 ON T1.ModuleId = T2.ModuleId
			UNION ALL
		SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                     T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId , T1.MultiLine,T1.ParentTag,T1.InputElement
		FROM         ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId
			WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          ExtendedFieldDetail_TEMP
                            WHERE      ModuleId = T1.ModuleId AND FieldName = T1.FieldName)

		</createView> 
	</changeSet>
	<changeSet id="36" author="Ganesh.p">
		<createView viewName="EXTENDEDFIELDDETAIL_AVIEW" replaceIfExists="true">
  			SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, T1.FieldType, 
                      T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, 
                      T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.MultiLine, T1.ParentTag, T1.InputElement
			FROM         		  ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId


		</createView> 
	</changeSet>
	<changeSet id="37" author="Ganesh.p">
		<sql>
			Insert into SECRIGHTS (RIGHTID,RIGHTTYPE,RIGHTNAME,PAGE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) 
		values ((Select MAX(RightID)+1 From SecRights),3,'ExtendedFieldDetailDialog_parentTag','ExtendedFieldDetailDialog',1,1000,CURRENT_timestamp,'','','','','','',0);
		</sql>
	</changeSet>
	<changeSet id="38" author="Ganesh.p">
		<sql>
		Insert Into secGrouprights (GrpRightID,GrpID,RightID,AccessType,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,TaskId,NextTaskId,RecordType,WorkflowId)
		values((select MAX(GrpRightID)+1 From secGrouprights),(select GrpId from SecGroups where Grpcode='EXTENDEDFIELDDETAIL_MAKER'),(select RightId from secRights where RightName='ExtendedFieldDetailDialog_parentTag')
		,1,0,1000,CURRENT_timestamp, '','','','','','',0);

		</sql>
	</changeSet>
	<changeSet id="39" author="Ganesh.p">
		<sql>
			update SMTParameters set sysparmvalue = 'N' where sysparmcode = 'GCD_FINONE_PROC_REQD';
		</sql>
	</changeSet>
	
	<changeSet id="40" author="Ganesh.p">
		<dropView viewName="EXTENDEDFIELDDETAIL_VIEW" />
		<dropView viewName="EXTENDEDFIELDDETAIL_AVIEW"/>
	</changeSet>
	<changeSet id="41" author="Ganesh.p">
		<modifyDataType tableName="EXTENDEDFIELDDETAIL" columnName="PARENTTAG" newDataType="VARCHAR(50)"/>
		<modifyDataType tableName="EXTENDEDFIELDDETAIL_TEMP" columnName="PARENTTAG" newDataType="VARCHAR(50)"/>
	</changeSet>
	<changeSet id="42" author="Ganesh.p">
		<createView viewName="EXTENDEDFIELDDETAIL_VIEW" replaceIfExists="true">
		  SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                      T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.MultiLine,T1.ParentTag,T1.InputElement
		FROM         ExtendedFieldDetail_TEMP  T1 INNER JOIN
                      ExtendedFieldHeader_TEMP  T2 ON T1.ModuleId = T2.ModuleId
			UNION ALL
		SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                     T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId , T1.MultiLine,T1.ParentTag,T1.InputElement
		FROM         ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId
			WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          ExtendedFieldDetail_TEMP
                            WHERE      ModuleId = T1.ModuleId AND FieldName = T1.FieldName)

		</createView> 
	</changeSet>
	<changeSet id="43" author="Ganesh.p">
		<createView viewName="EXTENDEDFIELDDETAIL_AVIEW" replaceIfExists="true">
  			SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, T1.FieldType, 
                      T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, 
                      T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.MultiLine, T1.ParentTag, T1.InputElement
			FROM         		  ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId


		</createView> 
	</changeSet>
	<changeSet id="44" author="Jayant" dbms="postgresql">
		<createView viewName="rpt_finguarantordtls_pvt_view"
			replaceIfExists="true">
			SELECT pvt.finreference,
				pvt.co_gur1,
				pvt.co_gur2,
				pvt.co_gur3
			   FROM crosstab('Select row_number() over(partition by Finreference order by Finreference) row_num,Finreference,custshrtname
					  from FinGuarantorsDetails fj inner join customers c on c.custcif = fj.GUarantorcif '::text) pvt(finreference text, co_gur1 text, co_gur2 text, co_gur3 text)
	</createView>
</changeSet>

<changeSet id="45" author="Jayant" dbms="postgresql">
		<createView viewName="rpt_finjointactdtls_pvt_view"
			replaceIfExists="true">
			 SELECT pvt.finreference,
				pvt.co_app1,
				pvt.co_app2,
				pvt.co_app3
			   FROM crosstab('Select row_number() over(partition by Finreference order by Finreference) row_num,Finreference,custshrtname
					  from FinJointAccountDetails fj inner join customers c on c.custcif = fj.custcif'::text) pvt(finreference text, co_app1 text, co_app2 text, co_app3 text)

	</createView>
</changeSet>

<changeSet id="46" author="Jayant" dbms="postgresql">
		<createView viewName="rpt_transactionentry_view"
			replaceIfExists="true">
			 SELECT t2.fintype AS product_code,
    t2.finbranch AS loan_branch,
    t1.loan_ref,
    t1.txndate,
    t1.particlulars,
    t1.txnamount,
    t1.event,
    t1.ordby,
    c.ccyminorccyunits,
    c.ccyeditfield
   FROM ( SELECT t1_1.finreference AS loan_ref,
            t1_1.finapproveddate AS txndate,
            'Disbursed Amount'::text AS particlulars,
            t1_1.finamount AS txnamount,
            'ADDDISB' AS event,
            1 AS ordby
           FROM financemain t1_1
          WHERE t1_1.finamount <> 0
        UNION ALL
         SELECT t2_1.finreference,
            t2_1.lastmnton,
            t3.feetypedesc::text || ' Deduct from Disbursement Amount'::text,
            t2_1.actualamount,
            t2_1.finevent,
            2 AS ordby
           FROM financemain t1_1
             JOIN finfeedetail t2_1 ON t1_1.finreference = t2_1.finreference
             JOIN feetypes t3 ON t2_1.feetypeid = t3.feetypeid
          WHERE t2_1.actualamount <> 0 AND t2_1.feeschedulemethod = 'DISB'
        UNION ALL
         SELECT t2_1.finreference,
            t2_1.lastmnton,
            t3.feetypedesc::text || ' Add to Loan Amount '::text,
            t2_1.actualamount,
            t2_1.finevent,
            2 AS ordby
           FROM financemain t1_1
             JOIN finfeedetail t2_1 ON t1_1.finreference = t2_1.finreference
             JOIN feetypes t3 ON t2_1.feetypeid = t3.feetypeid
          WHERE t2_1.actualamount <> 0 AND t2_1.feeschedulemethod = 'POSP'
        UNION ALL
         SELECT t2_1.finreference,
            t2_1.lastmnton,
            t3.feetypedesc::text || ' Schedule to First Installment Amount'::text,
            t2_1.actualamount,
            t2_1.finevent,
            2 AS ordby
           FROM financemain t1_1
             JOIN finfeedetail t2_1 ON t1_1.finreference = t2_1.finreference
             JOIN feetypes t3 ON t2_1.feetypeid = t3.feetypeid
          WHERE t2_1.actualamount <> 0 AND t2_1.feeschedulemethod = 'STFI'
        UNION ALL
         SELECT t2_1.finreference,
            t2_1.lastmnton,
            t3.feetypedesc::text || ' Schedule to Entire Tenor'::text,
            t2_1.actualamount,
            t2_1.finevent,
            2 AS ordby
           FROM financemain t1_1
             JOIN finfeedetail t2_1 ON t1_1.finreference = t2_1.finreference
             JOIN feetypes t3 ON t2_1.feetypeid = t3.feetypeid
          WHERE t2_1.actualamount <> 0 AND t2_1.feeschedulemethod = 'STET'
        UNION ALL
         SELECT t2_1.finreference,
            t2_1.lastmnton,
            t3.feetypedesc::text || ' Schedule to N Terms'::text,
            t2_1.actualamount,
            t2_1.finevent,
            2 AS ordby
           FROM financemain t1_1
             JOIN finfeedetail t2_1 ON t1_1.finreference = t2_1.finreference
             JOIN feetypes t3 ON t2_1.feetypeid = t3.feetypeid
          WHERE t2_1.actualamount <> 0 AND t2_1.feeschedulemethod = 'STNI'
        UNION ALL
         SELECT t2_1.finreference,
            t2_1.lastmnton,
            t3.feetypedesc::text || ' Paid Amount'::text,
            t2_1.paidamount,
            t2_1.finevent,
            2 AS ordby
           FROM financemain t1_1
             JOIN finfeedetail t2_1 ON t1_1.finreference = t2_1.finreference
             JOIN feetypes t3 ON t2_1.feetypeid = t3.feetypeid
          WHERE t2_1.paidamount <> 0 AND t2_1.feeschedulemethod = 'PBCU'
        UNION ALL
         SELECT t2_1.finreference,
            t2_1.lastmnton,
            t3.feetypedesc::text || ' Waived'::text,
            t2_1.waivedamount,
            t2_1.finevent,
            2 AS ordby
           FROM financemain t1_1
             JOIN finfeedetail t2_1 ON t1_1.finreference = t2_1.finreference
             JOIN feetypes t3 ON t2_1.feetypeid = t3.feetypeid
          WHERE t2_1.waivedamount <> 0 AND t2_1.feeschedulemethod = 'WVEB'
        UNION ALL
         SELECT t1_1.finreference,
            t1_1.lastmnton,
            'Payment to customer vide '::text || t1_1.paymenttype::text,
            t1_1.amttobereleased,
            'DISBINS' AS event,
            3 AS ordby
           FROM finadvancepayments t1_1
             JOIN financemain t2_1 ON t2_1.finreference = t1_1.finreference
          WHERE (t1_1.status <> 'CANCELED' OR t1_1.status IS NULL) AND t1_1.amttobereleased <> 0
        UNION ALL
         SELECT t1_1.reference,
            t1_1.lastmnton,
            t5.feetypedesc::text || ' Paid'::text,
            t3.paidamount,
                CASE
                    WHEN t1_1.receiptpurpose = 'EarlySettlement' THEN 'EARLYSTL'
                    WHEN t1_1.receiptpurpose = 'SchdlRepayment' THEN 'REPAY'
                    WHEN t1_1.receiptpurpose = 'EarlyPayment' THEN 'EARLYPAY'
                    ELSE t1_1.receiptpurpose
                END AS event,
            4 AS ordby
           FROM finreceiptheader t1_1
             JOIN receiptallocationdetail t3 ON t3.receiptid = t1_1.receiptid
             JOIN finfeedetail t4 ON t4.feeid = t3.allocationto
             JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
          WHERE ((t1_1.receiptmodestatus <> ALL (ARRAY['C', 'B'])) OR t1_1.receiptmodestatus IS NULL) AND t3.allocationid = 1 AND t3.allocationtype = 'FEE' AND t1_1.lastmnton IS NOT NULL AND t3.paidamount <> 0
        UNION ALL
         SELECT t1_1.reference,
            t1_1.lastmnton,
            'Principal Paid'::text AS text,
            t3.paidamount,
                CASE
                    WHEN t1_1.receiptpurpose = 'EarlySettlement' THEN 'EARLYSTL'
                    WHEN t1_1.receiptpurpose = 'SchdlRepayment' THEN 'REPAY'
                    WHEN t1_1.receiptpurpose = 'EarlyPayment' THEN 'EARLYPAY'
                    ELSE t1_1.receiptpurpose
                END AS event,
            4 AS ordby
           FROM finreceiptheader t1_1
             JOIN receiptallocationdetail t3 ON t3.receiptid = t1_1.receiptid
          WHERE ((t1_1.receiptmodestatus <> ALL (ARRAY['C', 'B'])) OR t1_1.receiptmodestatus IS NULL) AND t3.allocationid = 1 AND t3.allocationtype = 'PRI' AND t1_1.lastmnton IS NOT NULL AND t3.paidamount <> 0
        UNION ALL
         SELECT t1_1.reference,
            t1_1.lastmnton,
            'Interest Paid'::text AS text,
            t3.paidamount,
                CASE
                    WHEN t1_1.receiptpurpose = 'EarlySettlement' THEN 'EARLYSTL'
                    WHEN t1_1.receiptpurpose = 'SchdlRepayment' THEN 'REPAY'
                    WHEN t1_1.receiptpurpose = 'EarlyPayment' THEN 'EARLYPAY'
                    ELSE t1_1.receiptpurpose
                END AS event,
            4 AS ordby
           FROM finreceiptheader t1_1
             JOIN receiptallocationdetail t3 ON t3.receiptid = t1_1.receiptid
          WHERE ((t1_1.receiptmodestatus <> ALL (ARRAY['C', 'B'])) OR t1_1.receiptmodestatus IS NULL) AND t3.allocationid = 1 AND t3.allocationtype = 'PFT' AND t1_1.lastmnton IS NOT NULL AND t3.paidamount <> 0
        UNION ALL
         SELECT t1_1.reference,
            t1_1.lastmnton,
            'Penalty/Late Pay Charges Paid'::text AS text,
            t3.paidamount,
                CASE
                    WHEN t1_1.receiptpurpose = 'EarlySettlement' THEN 'EARLYSTL'
                    WHEN t1_1.receiptpurpose = 'SchdlRepayment' THEN 'REPAY'
                    WHEN t1_1.receiptpurpose = 'EarlyPayment' THEN 'EARLYPAY'
                    ELSE t1_1.receiptpurpose
                END AS event,
            4 AS ordby
           FROM finreceiptheader t1_1
             JOIN receiptallocationdetail t3 ON t3.receiptid = t1_1.receiptid
          WHERE ((t1_1.receiptmodestatus <> ALL (ARRAY['C', 'B'])) OR t1_1.receiptmodestatus IS NULL) AND t3.allocationid = 1 AND t3.allocationtype = 'ODC' AND t1_1.lastmnton IS NOT NULL AND t3.paidamount <> 0
        UNION ALL
         SELECT t1_1.reference,
            t1_1.lastmnton,
            'Late Payment Interest Paid'::text AS text,
            t3.paidamount,
                CASE
                    WHEN t1_1.receiptpurpose = 'EarlySettlement' THEN 'EARLYSTL'
                    WHEN t1_1.receiptpurpose = 'SchdlRepayment' THEN 'REPAY'
                    WHEN t1_1.receiptpurpose = 'EarlyPayment' THEN 'EARLYPAY'
                    ELSE t1_1.receiptpurpose
                END AS event,
            4 AS ordby
           FROM finreceiptheader t1_1
             JOIN receiptallocationdetail t3 ON t3.receiptid = t1_1.receiptid
          WHERE ((t1_1.receiptmodestatus <> ALL (ARRAY['C', 'B'])) OR t1_1.receiptmodestatus IS NULL) AND t3.allocationid = 1 AND t3.allocationtype = 'LPFT' AND t1_1.lastmnton IS NOT NULL AND t3.paidamount <> 0
        UNION ALL
         SELECT t1_1.reference,
            t1_1.lastmnton,
            t5.feetypedesc::text || '-Receivable Paid'::text,
            t3.paidamount,
                CASE
                    WHEN t1_1.receiptpurpose = 'EarlySettlement' THEN 'EARLYSTL'
                    WHEN t1_1.receiptpurpose = 'SchdlRepayment' THEN 'REPAY'
                    WHEN t1_1.receiptpurpose = 'EarlyPayment' THEN 'EARLYPAY'
                    ELSE t1_1.receiptpurpose
                END AS event,
            4 AS ordby
           FROM finreceiptheader t1_1
             JOIN receiptallocationdetail t3 ON t3.receiptid = t1_1.receiptid
             JOIN manualadvise t4 ON t4.adviseid = t3.allocationto
             JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
          WHERE ((t1_1.receiptmodestatus <> ALL (ARRAY['C', 'B'])) OR t1_1.receiptmodestatus IS NULL) AND t3.allocationid = 1 AND t3.allocationtype = 'MANADV' AND t4.advisetype = 1 AND t1_1.lastmnton IS NOT NULL AND t3.paidamount <> 0
        UNION ALL
         SELECT t1_1.reference,
            t1_1.lastmnton,
            'Bounce Charges Paid'::text AS text,
            t3.paidamount,
                CASE
                    WHEN t1_1.receiptpurpose = 'EarlySettlement' THEN 'EARLYSTL'
                    WHEN t1_1.receiptpurpose = 'SchdlRepayment' THEN 'REPAY'
                    WHEN t1_1.receiptpurpose = 'EarlyPayment' THEN 'EARLYPAY'
                    ELSE t1_1.receiptpurpose
                END AS event,
            4 AS ordby
           FROM finreceiptheader t1_1
             JOIN receiptallocationdetail t3 ON t3.receiptid = t1_1.receiptid
          WHERE ((t1_1.receiptmodestatus <> ALL (ARRAY['C', 'B'])) OR t1_1.receiptmodestatus IS NULL) AND t3.allocationid = 1 AND t3.allocationtype = 'BOUNCE' AND t1_1.lastmnton IS NOT NULL AND t3.paidamount <> 0) t1
     JOIN finpftdetails t2 ON t2.finreference = t1.loan_ref
     JOIN rmtcurrencies c ON c.ccycode = t2.finccy
  WHERE t1.txnamount <> 0

	</createView>
</changeSet>
</databaseChangeLog>