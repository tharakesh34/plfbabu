<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
<property name="call.concatenate" value="+" dbms="mssql" />
<property name="call.concatenate" value="||" dbms="oracle" />
<property name="call.maindb" value="PFFBFS.." dbms="mssql"/>
<property name="call.maindb" value="PLF." dbms="oracle"/>
	<changeSet author="kesava" id="1">
		<addColumn tableName="AdtNotifications">
			<column name="TemplateTypeFields" type="varchar(1000)" />
			<column name="RuleReciepentFields" type="varchar(1000)" />
			<column name="RuleAttachmentFields" type="varchar(1000)" />
		</addColumn>
	</changeSet>
		<changeSet id="2" author="satish">
	<addColumn tableName="AdtFinAdvancePayments">
			<column name="DisbDate" type="datetime"></column>
			<column name="DisbSeq" type="int"></column>
	</addColumn>
	
	</changeSet>
	 <changeSet author="Siva" id="3" >
		<sql>
			UPDATE AdtRMTFinanceTypes SET DroppingMethod ='C' WHERE DroppingMethod = 'Constant';
		</sql>
	</changeSet>
	 <changeSet author="Siva" id="4" >
		<modifyDataType tableName="AdtRMTFinanceTypes" columnName="DroppingMethod" newDataType="char(1)"/>
	</changeSet>
	<changeSet author="Madhubabu" id="5">
		<dropColumn columnName="IndustryLimit" tableName="ADTBMTIndustries" />
	</changeSet>
	
	<changeSet id="6" author="Irfan">
	<modifyDataType tableName="AdtFinFeeDetail" columnName="FInEvent" newDataType="varchar(20)"/>
	</changeSet>
	<changeSet id="177-oracle" author="Pruthvi" dbms="mssql">
				<createView replaceIfExists="true" viewName="SecUsers_View">		  
	SELECT     T1.UsrID, T1.UsrLogin,T1.UsrFName, T1.UsrMName, T1.UsrLName 
						 
	FROM         ${call.maindb}SecUsers T1			 
			 			 
	</createView>
</changeSet>	
<changeSet id="177-oracle" author="Pruthvi" dbms="oracle">
				<createView replaceIfExists="true" viewName="SecUsers_View">		  
	SELECT     T1.UsrID, T1.UsrLogin,T1.UsrFName, T1.UsrMName, T1.UsrLName 
						 
	FROM         ${call.maindb}SecUsers T1			 
			 			 
	</createView>
</changeSet>	

<changeSet id="176-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="RMTCurrencies_View">

Select CcyCode,CcyDesc,CcySwiftCode,CcyEditField,CcyMinorCcyUnits,
CcySpotRate,CcyIsReceprocal,RecordStatus from ${call.maindb}RMTCurrencies
			 
	</createView>
		</changeSet>

<changeSet id="176-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="RMTCurrencies_View">		  
Select CcyCode,CcyDesc,CcySwiftCode,CcyEditField,CcyMinorCcyUnits,
CcySpotRate,CcyIsReceprocal,RecordStatus from ${call.maindb}RMTCurrencies
			 			 
	</createView>
</changeSet>

	<changeSet id="1-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="adtAcademics_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AcademicLevel AftAcademicLevel, Aft.AcademicDecipline AftAcademicDecipline, Aft.AcademicDesc AftAcademicDesc, 
						  Bef.AcademicLevel BefAcademicLevel, Bef.AcademicDecipline BefAcademicDecipline, Bef.AcademicDesc BefAcademicDesc 
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTAcademics AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTAcademics BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Academic')
	
	</createView>
		</changeSet>

<changeSet id="1-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="adtAcademics_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
  ${add.schema}FN_TranType(TH.AuditTranType) AS AuditTranType, 
						  Aft.AcademicLevel AftAcademicLevel, Aft.AcademicDecipline AftAcademicDecipline, Aft.AcademicDesc AftAcademicDesc, 
						  Bef.AcademicLevel BefAcademicLevel, Bef.AcademicDecipline BefAcademicDecipline, Bef.AcademicDesc BefAcademicDesc 
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtBMTAcademics AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  Adtbmtacademics Bef On Th.Auditid = Bef.Auditid And Th.Auditdate = Bef.Auditdate And Bef.Auditimage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Academic')
	</createView>
</changeSet>

<changeSet id="2-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAccountingSet_View">		
SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountSetid AftAccountSetid, Aft.EventCode AftEventCode,Aft.AccountSetCode AftAccountSetCode,
						  Aft.AccountSetCodeName AftAccountSetCodeName,
						  Bef.AccountSetid BefAccountSetid, Bef.EventCode BefEventCode, Bef.AccountSetCode BefAccountSetCode,
						  Bef.AccountSetCodeName BefAccountSetCodeName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTAccountingSet AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTAccountingSet BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountingSet')
		</createView>
		</changeSet>

<changeSet id="2-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAccountingSet_View">		
SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime
			, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountSetid AftAccountSetid, Aft.EventCode AftEventCode,Aft.AccountSetCode AftAccountSetCode,
						  Aft.AccountSetCodeName AftAccountSetCodeName,
						  Bef.AccountSetid BefAccountSetid, Bef.EventCode BefEventCode, Bef.AccountSetCode BefAccountSetCode,
						  Bef.AccountSetCodeName BefAccountSetCodeName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTAccountingSet AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTAccountingSet BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountingSet')
		</createView>
		</changeSet>		
		
	<changeSet id="3-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAccounts_View">		
SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountId AftAccountId, Aft.AcCcy AftAcCcy,Aft.AcType AftAcType,
						  Aft.AcBranch AftAcBranch, Aft.AcCustId AftAcCustId,Aft.AcFullName AftAcFullName,
						  Aft.AcShortName AftAcShortName, Aft.AcPurpose AftAcPurpose,Aft.InternalAc AftInternalAc,
						  Aft.CustSysAc AftCustSysAc, Aft.AcPrvDayBal AftAcPrvDayBal,Aft.AcTodayDr AftAcTodayDr,
						  Aft.AcTodayCr AftAcTodayCr, Aft.AcTodayNet AftAcTodayNet,Aft.AcAccrualBal AftAcAccrualBal,
						  Aft.AcTodayBal AftAcTodayBal, Aft.AcOpenDate AftAcOpenDate,Aft.AcCloseDate AftAcCloseDate,
						  Aft.AcLastCustTrnDate AftAcLastCustTrnDate, Aft.AcLastSysTrnDate AftAcLastSysTrnDate,Aft.AcActive AftAcActive,
						  Aft.AcBlocked AftAcBlocked, Aft.AcClosed AftAcClosed,Aft.HostAcNumber AftHostAcNumber,
						  
						  Bef.AccountId BefAccountId, Bef.AcCcy BefAcCcy, Bef.AcType BefAcType,
						  Bef.AcBranch BefAcBranch, Bef.AcCustId BefAcCustId, Bef.AcFullName BefAcFullName,
						  Bef.AcShortName BefAcShortName, Bef.AcPurpose BefAcPurpose, Bef.InternalAc BefInternalAc,
						  Bef.CustSysAc BefCustSysAc, Bef.AcPrvDayBal BefAcPrvDayBal, Bef.AcTodayDr BefAcTodayDr,
						  Bef.AcTodayCr BefAcTodayCr, Bef.AcTodayNet BefAcTodayNet, Bef.AcAccrualBal BefAcAccrualBal,
						  Bef.AcTodayBal BefAcTodayBal, Bef.AcOpenDate BefAcOpenDate, Bef.AcCloseDate BefAcCloseDate,
						  Bef.AcLastCustTrnDate BefAcLastCustTrnDate, Bef.AcLastSysTrnDate BefAcLastSysTrnDate, Bef.AcActive BefAcActive,
						  Bef.AcBlocked BefAcBlocked, Bef.AcClosed BefAcClosed, Bef.HostAcNumber BefHostAcNumber
						  
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtAccounts AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtAccounts BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Accounts')
		</createView>
		</changeSet>
		
	<changeSet id="3-orcle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAccounts_View">		
				SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AccountId AftAccountId, Aft.AcCcy AftAcCcy,Aft.AcType AftAcType,
						  Aft.AcBranch AftAcBranch, Aft.AcCustId AftAcCustId,Aft.AcFullName AftAcFullName,
						  Aft.AcShortName AftAcShortName, Aft.AcPurpose AftAcPurpose,Aft.InternalAc AftInternalAc,
						  Aft.CustSysAc AftCustSysAc, Aft.AcPrvDayBal AftAcPrvDayBal,Aft.AcTodayDr AftAcTodayDr,
						  Aft.AcTodayCr AftAcTodayCr, Aft.AcTodayNet AftAcTodayNet,Aft.AcAccrualBal AftAcAccrualBal,
						  Aft.AcTodayBal AftAcTodayBal, Aft.AcOpenDate AftAcOpenDate,Aft.AcCloseDate AftAcCloseDate,
						  Aft.AcLastCustTrnDate AftAcLastCustTrnDate, Aft.AcLastSysTrnDate AftAcLastSysTrnDate,Aft.AcActive AftAcActive,
						  Aft.AcBlocked AftAcBlocked, Aft.AcClosed AftAcClosed,Aft.HostAcNumber AftHostAcNumber,
						  
						  Bef.AccountId BefAccountId, Bef.AcCcy BefAcCcy, Bef.AcType BefAcType,
						  Bef.AcBranch BefAcBranch, Bef.AcCustId BefAcCustId, Bef.AcFullName BefAcFullName,
						  Bef.AcShortName BefAcShortName, Bef.AcPurpose BefAcPurpose, Bef.InternalAc BefInternalAc,
						  Bef.CustSysAc BefCustSysAc, Bef.AcPrvDayBal BefAcPrvDayBal, Bef.AcTodayDr BefAcTodayDr,
						  Bef.AcTodayCr BefAcTodayCr, Bef.AcTodayNet BefAcTodayNet, Bef.AcAccrualBal BefAcAccrualBal,
						  Bef.AcTodayBal BefAcTodayBal, Bef.AcOpenDate BefAcOpenDate, Bef.AcCloseDate BefAcCloseDate,
						  Bef.AcLastCustTrnDate BefAcLastCustTrnDate, Bef.AcLastSysTrnDate BefAcLastSysTrnDate, Bef.AcActive BefAcActive,
						  Bef.AcBlocked BefAcBlocked, Bef.AcClosed BefAcClosed, Bef.HostAcNumber BefHostAcNumber
						  
	FROM        AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtAccounts AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtAccounts BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Accounts')
		</createView>
		</changeSet>
		
		
		
			<changeSet id="4-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAccountTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AcType AftAcType, Aft.AcTypeDesc AftAcTypeDesc, Aft.AcPurpose AftAcPurpose,Aft.AcHeadCode AftAcHeadCode,
						  Aft.InternalAc AftInternalAc, Aft.CustSysAc AftCustSysAc, Aft.AcTypeIsActive AftAcTypeIsActive,
						  Bef.AcType BefAcType, Bef.AcTypeDesc BefAcTypeDesc, Bef.AcPurpose BefAcPurpose,Bef.AcHeadCode BefAcHeadCode,
						  Bef.InternalAc BefInternalAc, Bef.CustSysAc BefCustSysAc, Bef.AcTypeIsActive BefAcTypeIsActive
			FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
								   AdtRMTAccountTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
								  AdtRMTAccountTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
			WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountType')
			</createView>
		</changeSet>
		
		<changeSet id="4-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAccountTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime,  to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AcType AftAcType, Aft.AcTypeDesc AftAcTypeDesc, Aft.AcPurpose AftAcPurpose,Aft.AcHeadCode AftAcHeadCode,
						  Aft.InternalAc AftInternalAc, Aft.CustSysAc AftCustSysAc, Aft.AcTypeIsActive AftAcTypeIsActive,
						  Bef.AcType BefAcType, Bef.AcTypeDesc BefAcTypeDesc, Bef.AcPurpose BefAcPurpose,Bef.AcHeadCode BefAcHeadCode,
						  Bef.InternalAc BefInternalAc, Bef.CustSysAc BefCustSysAc, Bef.AcTypeIsActive BefAcTypeIsActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTAccountTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTAccountTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountType')
			</createView>
		</changeSet>
		
		
		<changeSet id="5-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAddressTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AddrTypeCode AftAddrTypeCode, Aft.AddrTypeDesc AftAddrTypeDesc, Aft.AddrTypePriority AftAddrTypePriority,
						  Aft.AddrTypeIsActive AftAddrTypeIsActive,						   
						  Bef.AddrTypeCode BefAddrTypeCode, Bef.AddrTypeDesc BefAddrTypeDesc, Bef.AddrTypePriority BefAddrTypePriority,
						  Bef.AddrTypeIsActive BefAddrTypeIsActive 						 
	FROM        AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtBMTAddressTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTAddressTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AddressType')
		</createView>
		</changeSet>
		
		<changeSet id="5-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAddressTypes_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AddrTypeCode AftAddrTypeCode, Aft.AddrTypeDesc AftAddrTypeDesc, Aft.AddrTypePriority AftAddrTypePriority,
						  Aft.AddrTypeIsActive AftAddrTypeIsActive,						   
						  Bef.AddrTypeCode BefAddrTypeCode, Bef.AddrTypeDesc BefAddrTypeDesc, Bef.AddrTypePriority BefAddrTypePriority,
						  Bef.AddrTypeIsActive BefAddrTypeIsActive 						 
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtBMTAddressTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTAddressTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AddressType')
		</createView>
		</changeSet>
		
		<changeSet id="6-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAggrementDef_View">	
		SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AggId AftAggId, Aft.AggCode AftAggCode, Aft.AggName AftAggName,Aft.AggDesc AftAggDesc,
						  Aft.AggReportName AftAggReportName, Aft.AggReportPath AftAggReportPath, Aft.AggIsActive AftAggIsActive,						  
						  Bef.AggId BefAggId, Bef.AggCode BefAggCode, Bef.AggName BefAggName,Bef.AggDesc BefAggDesc,
						  Bef.AggReportName BefAggReportName, Bef.AggReportPath BefAggReportPath, Bef.AggIsActive BefAggIsActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 AdtBMTAggrementDef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						 AdtBMTAggrementDef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')
						 
		
			</createView>
		</changeSet>
		
		<changeSet id="6-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAggrementDef_View">	
		SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.AggId AftAggId, Aft.AggCode AftAggCode, Aft.AggName AftAggName,Aft.AggDesc AftAggDesc,
						  Aft.AggReportName AftAggReportName, Aft.AggReportPath AftAggReportPath, Aft.AggIsActive AftAggIsActive,						  
						  Bef.AggId BefAggId, Bef.AggCode BefAggCode, Bef.AggName BefAggName,Bef.AggDesc BefAggDesc,
						  Bef.AggReportName BefAggReportName, Bef.AggReportPath BefAggReportPath, Bef.AggIsActive BefAggIsActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 AdtBMTAggrementDef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						 AdtBMTAggrementDef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')			 
			</createView>
		</changeSet>
		
				<changeSet id="7-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAgreementDefinition_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.AgrId AftAgrId,Aft.FinType AftFinType,
						  Aft.AgrName AftAgrName,Aft.AgrContent AftAgrContent,
						  	
						  Bef.FinReference BefFinReference, Bef.AgrId BefAgrId, Bef.FinType BefFinType,
						  Bef.AgrName BefAgrName, Bef.AgrContent BefAgrContent
						  
	FROM       AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtFinAgreementDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtFinAgreementDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')
		
			</createView>
		</changeSet>
		
		<changeSet id="7-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAgreementDefinition_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.AgrId AftAgrId,Aft.FinType AftFinType,
						  Aft.AgrName AftAgrName,Aft.AgrContent AftAgrContent,
						  	
						  Bef.FinReference BefFinReference, Bef.AgrId BefAgrId, Bef.FinType BefFinType,
						  Bef.AgrName BefAgrName, Bef.AgrContent BefAgrContent
						  
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtFinAgreementDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtFinAgreementDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AgreementDefinition')
		
			</createView>
		</changeSet>
		
		<changeSet id="8-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAMTAuthorization_view">		
		
		 SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.AuthUserId AftAuthUserId ,Aft.AuthType AftAuthType ,
		   Aft.AuthName AftAuthName ,Aft.AuthDept AftAuthDept ,Aft.AuthDesig AftAuthDesig ,
		   Aft.AuthSignature AftAuthSignature ,
		   Bef.AuthUserId BefAuthUserId ,Bef.AuthType BefAuthType ,
		   Bef.AuthName BefAuthName ,Bef.AuthDept BefAuthDept ,Bef.AuthDesig BefAuthDesig ,
		   Bef.AuthSignature BefAuthSignature
	FROM  AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		  AdtAMTAuthorization AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtAMTAuthorization BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Authorization')
		</createView>
		</changeSet>
		<changeSet id="8-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAMTAuthorization_view">			
		 SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		 COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.AuthUserId AftAuthUserId ,Aft.AuthType AftAuthType ,
		   Aft.AuthName AftAuthName ,Aft.AuthDept AftAuthDept ,Aft.AuthDesig AftAuthDesig ,
		   Aft.AuthSignature AftAuthSignature ,
		   Bef.AuthUserId BefAuthUserId ,Bef.AuthType BefAuthType ,
		   Bef.AuthName BefAuthName ,Bef.AuthDept BefAuthDept ,Bef.AuthDesig BefAuthDesig ,
		   Bef.AuthSignature BefAuthSignature
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		  AdtAMTAuthorization AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtAMTAuthorization BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Authorization')
		</createView>
		</changeSet>		
		
		
		<changeSet id="9-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtAMTVehicleModel_View">	
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.VehicleModelId AftVehicleModelId,Aft.VehicleManufacturerId AftVehicleManufacturerId,Aft.VehicleModelDesc AftVehicleModelDesc,
			   Bef.VehicleModelId BefVehicleModelId,Bef.VehicleManufacturerId BefVehicleManufacturerId,Bef.VehicleModelDesc BefVehicleModelDesc
	FROM       AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			  
			   AdtAMTVehicleModel AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtAMTVehicleModel BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleModel')
		
				</createView>
		</changeSet>
		<changeSet id="9-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtAMTVehicleModel_View">	
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.VehicleModelId AftVehicleModelId,Aft.VehicleManufacturerId AftVehicleManufacturerId,Aft.VehicleModelDesc AftVehicleModelDesc,
			   Bef.VehicleModelId BefVehicleModelId,Bef.VehicleManufacturerId BefVehicleManufacturerId,Bef.VehicleModelDesc BefVehicleModelDesc
	FROM       AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			  
			   AdtAMTVehicleModel AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtAMTVehicleModel BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleModel')
		
				</createView>
		</changeSet>
		
	<changeSet id="10-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBankBranches_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
                      Aft.BankBranchID AftBankBranchID, Aft.BankCode AftBankCode, Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.City AftCity, Aft.MICR AftMICR, Aft.IFSC AftIFSC, 
                      Bef.BankBranchID BefBankBranchID, Bef.BankCode BefBankCode, Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.City BefCity, Bef.MICR BefMICR, Bef.IFSC BefIFSC 
FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
                                          ADTBankBranches AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                      ADTBankBranches BEF ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankBranch')
			
		</createView></changeSet>
		<changeSet id="10-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBankBranches_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
					COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
                      Aft.BankBranchID AftBankBranchID, Aft.BankCode AftBankCode, Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.City AftCity, Aft.MICR AftMICR, Aft.IFSC AftIFSC, 
                      Bef.BankBranchID BefBankBranchID, Bef.BankCode BefBankCode, Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.City BefCity, Bef.MICR BefMICR, Bef.IFSC BefIFSC 
FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
                                          ADTBankBranches AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                      ADTBankBranches BEF ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankBranch')
			
		</createView></changeSet>
		
		
				<changeSet id="11-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBaseRateCodes_View">
			SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BRType AftBRType, Aft.BRTypeDesc AftBRTypeDesc,
						  Bef.BRType BefBRType, Bef.BRTypeDesc BefBRTypeDesc
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtRMTBaseRateCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRateCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRateCode')		
		
				</createView>
		</changeSet>
		
		<changeSet id="11-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBaseRateCodes_View">
			SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BRType AftBRType, Aft.BRTypeDesc AftBRTypeDesc,
						  Bef.BRType BefBRType, Bef.BRTypeDesc BefBRTypeDesc
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtRMTBaseRateCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRateCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRateCode')		
		
				</createView>
		</changeSet>
		
		
		<changeSet id="12-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBaseRates_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BRType AftBRType, Aft.BREffDate AftBREffDate, Aft.BRRate AftBRRate,
						  Bef.BRType BefBRType, Bef.BREffDate BefBREffDate, Bef.BRRate BefBRRate
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtRMTBaseRates AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRates BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRate')
		</createView>
		</changeSet>
		
		<changeSet id="12-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBaseRates_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BRType AftBRType, Aft.BREffDate AftBREffDate, Aft.BRRate AftBRRate,
						  Bef.BRType BefBRType, Bef.BREffDate BefBREffDate, Bef.BRRate BefBRRate
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtRMTBaseRates AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBaseRates BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BaseRate')
		</createView>
		</changeSet>
		
		
	<changeSet id="13-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBlackListCustomer_VIEW">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
		   Aft.CustCIF AftCustCIF ,Aft.CustFName AftCustFName ,Aft.CustLName AftCustLName ,Aft.CustDOB AftCustDOB ,
		   Aft.CustCRCPR AftCustCRCPR ,Aft.MobileNumber AftMobileNumber ,Aft.CustNationality AftCustNationality ,
		   Aft.CustPassportNo AftCustPassportNo ,Aft.Employer AftEmployer ,
           Bef.CustCIF BefCustCIF ,Bef.CustFName BefCustFName ,Bef.CustLName BefCustLName ,Bef.CustDOB BefCustDOB ,
           Bef.CustCRCPR BefCustCRCPR ,Bef.MobileNumber BefMobileNumber ,Bef.CustNationality BefCustNationality ,
           Bef.CustPassportNo BefCustPassportNo ,Bef.Employer BefEmployer  
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		  
		   AdtBlackListCustomer AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBlackListCustomer BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListCustomers')
			</createView>
		</changeSet>
		
		<changeSet id="13-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBlackListCustomer_VIEW">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
		   Aft.CustCIF AftCustCIF ,Aft.CustFName AftCustFName ,Aft.CustLName AftCustLName ,Aft.CustDOB AftCustDOB ,
		   Aft.CustCRCPR AftCustCRCPR ,Aft.MobileNumber AftMobileNumber ,Aft.CustNationality AftCustNationality ,
		   Aft.CustPassportNo AftCustPassportNo ,Aft.Employer AftEmployer ,
           Bef.CustCIF BefCustCIF ,Bef.CustFName BefCustFName ,Bef.CustLName BefCustLName ,Bef.CustDOB BefCustDOB ,
           Bef.CustCRCPR BefCustCRCPR ,Bef.MobileNumber BefMobileNumber ,Bef.CustNationality BefCustNationality ,
           Bef.CustPassportNo BefCustPassportNo ,Bef.Employer BefEmployer  
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		  
		   AdtBlackListCustomer AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBlackListCustomer BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListCustomers')
			</createView>
		</changeSet>
		
	<changeSet id="14-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBlackListRsnCodes_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BLRsnCode AftBLRsnCode, Aft.BLRsnDesc AftBLRsnDesc, Aft.BLIsActive AftBLIsActive,						  
						  Bef.BLRsnCode BefBLRsnCode, Bef.BLRsnDesc BefBLRsnDesc,Bef.BLIsActive BefBLIsActive
	FROM        AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
				</createView>
		</changeSet>
		
		
	<changeSet id="14-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBlackListRsnCodes_View">
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,  
						  Aft.BLRsnCode AftBLRsnCode, Aft.BLRsnDesc AftBLRsnDesc, Aft.BLIsActive AftBLIsActive,						  
						  Bef.BLRsnCode BefBLRsnCode, Bef.BLRsnDesc BefBLRsnDesc,Bef.BLIsActive BefBLIsActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
				</createView>
		</changeSet>
		
	<changeSet id="15-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBMTBankDetail_view">
		select    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BankCode AftBankCode ,Aft.BankName AftBankName ,Aft.Active AftActive ,
		   Bef.BankCode BefBankCode ,Bef.BankName BefBankName ,Bef.Active BefActive
	FROM  AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		  
		   AdtBMTBankDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBankDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankDetail')
		
		</createView>
		</changeSet>
		
		<changeSet id="15-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBMTBankDetail_view">
		select    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BankCode AftBankCode ,Aft.BankName AftBankName ,Aft.Active AftActive ,
		   Bef.BankCode BefBankCode ,Bef.BankName BefBankName ,Bef.Active BefActive
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		  
		   AdtBMTBankDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBankDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BankDetail')
		
		</createView>
		</changeSet>
		
	<changeSet id="16-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBMTBlackListRsnCodes_VIEW">
SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BLRsnCode AftBLRsnCode ,Aft.BLRsnDesc AftBLRsnDesc ,Aft.BLIsActive AftBLIsActive ,
           Bef.BLRsnCode BefBLRsnCode ,Bef.BLRsnDesc BefBLRsnDesc ,Bef.BLIsActive BefBLIsActive 
	FROM  AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		   
		   AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
					</createView>
		</changeSet>
		
		<changeSet id="16-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBMTBlackListRsnCodes_VIEW">
SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
 COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.BLRsnCode AftBLRsnCode ,Aft.BLRsnDesc AftBLRsnDesc ,Aft.BLIsActive AftBLIsActive ,
           Bef.BLRsnCode BefBLRsnCode ,Bef.BLRsnDesc BefBLRsnDesc ,Bef.BLIsActive BefBLIsActive 
	FROM  AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		   
		   AdtBMTBlackListRsnCodes AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTBlackListRsnCodes BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'BlackListReasonCode')
					</createView>
		</changeSet>
		
	<changeSet id="17-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBMTLovFieldCode_view">
		   SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.FieldCode AftFieldCode ,Aft.FieldCodeDesc AftFieldCodeDesc ,Aft.FieldCodeType AftFieldCodeType ,
		   Aft.FieldEdit AftFieldEdit ,Aft.isActive AftisActive ,
		   Bef.FieldCode BefFieldCode ,Bef.FieldCodeDesc BefFieldCodeDesc ,Bef.FieldCodeType BefFieldCodeType ,
		   Bef.FieldEdit BefFieldEdit ,Bef.isActive BefisActive
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		   
		   AdtBMTLovFieldCode AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTLovFieldCode BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LovFieldCode')

					</createView>
		</changeSet>
		
		
	<changeSet id="17-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBMTLovFieldCode_view">
		   SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.FieldCode AftFieldCode ,Aft.FieldCodeDesc AftFieldCodeDesc ,Aft.FieldCodeType AftFieldCodeType ,
		   Aft.FieldEdit AftFieldEdit ,Aft.isActive AftisActive ,
		   Bef.FieldCode BefFieldCode ,Bef.FieldCodeDesc BefFieldCodeDesc ,Bef.FieldCodeType BefFieldCodeType ,
		   Bef.FieldEdit BefFieldEdit ,Bef.isActive BefisActive
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		   
		   AdtBMTLovFieldCode AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtBMTLovFieldCode BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LovFieldCode')

					</createView>
		</changeSet>
		
	<changeSet id="18-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBranches_View">	
SELECT    TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.BranchAddrLine1 AftBranchAddrLine1,Aft.BranchAddrLine2 AftBranchAddrLine2,
						  Aft.BranchPOBox AftBranchPOBox, Aft.BranchCity AftBranchCity, Aft.BranchProvince AftBranchProvince,
						  Aft.BranchCountry AftBranchCountry, Aft.BranchFax AftBranchFax, Aft.BranchTel AftBranchTel,
						  Aft.BranchSwiftBankCde AftBranchSwiftBankCde, Aft.BranchSwiftCountry AftBranchSwiftCountry, Aft.BranchSwiftLocCode AftBranchSwiftLocCode,
						  Aft.BranchSwiftBrnCde AftBranchSwiftBrnCde, Aft.BranchSortCode AftBranchSortCode, Aft.BranchIsActive AftBranchIsActive,
						  Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.BranchAddrLine1 BefBranchAddrLine1,Bef.BranchAddrLine2 BefBranchAddrLine2,
						  Bef.BranchPOBox BefBranchPOBox, Bef.BranchCity BefBranchCity, Bef.BranchProvince BefBranchProvince,
						  Bef.BranchCountry BefBranchCountry, Bef.BranchFax BefBranchFax, Bef.BranchTel BefBranchTel,
						  Bef.BranchSwiftBankCde BefBranchSwiftBankCde, Bef.BranchSwiftCountry BefBranchSwiftCountry, Bef.BranchSwiftLocCode BefBranchSwiftLocCode,
						  Bef.BranchSwiftBrnCde BefBranchSwiftBrnCde, Bef.BranchSortCode BefBranchSortCode, Bef.BranchIsActive BefBranchIsActive
	FROM        AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtRMTBranches AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBranches BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Branch')
		</createView>
		</changeSet>	
		
		<changeSet id="18-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBranches_View">	
			SELECT    TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
			COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BranchCode AftBranchCode, Aft.BranchDesc AftBranchDesc, Aft.BranchAddrLine1 AftBranchAddrLine1,Aft.BranchAddrLine2 AftBranchAddrLine2,
						  Aft.BranchPOBox AftBranchPOBox, Aft.BranchCity AftBranchCity, Aft.BranchProvince AftBranchProvince,
						  Aft.BranchCountry AftBranchCountry, Aft.BranchFax AftBranchFax, Aft.BranchTel AftBranchTel,
						  Aft.BranchSwiftBankCde AftBranchSwiftBankCde, Aft.BranchSwiftCountry AftBranchSwiftCountry, Aft.BranchSwiftLocCode AftBranchSwiftLocCode,
						  Aft.BranchSwiftBrnCde AftBranchSwiftBrnCde, Aft.BranchSortCode AftBranchSortCode, Aft.BranchIsActive AftBranchIsActive,
						  Bef.BranchCode BefBranchCode, Bef.BranchDesc BefBranchDesc, Bef.BranchAddrLine1 BefBranchAddrLine1,Bef.BranchAddrLine2 BefBranchAddrLine2,
						  Bef.BranchPOBox BefBranchPOBox, Bef.BranchCity BefBranchCity, Bef.BranchProvince BefBranchProvince,
						  Bef.BranchCountry BefBranchCountry, Bef.BranchFax BefBranchFax, Bef.BranchTel BefBranchTel,
						  Bef.BranchSwiftBankCde BefBranchSwiftBankCde, Bef.BranchSwiftCountry BefBranchSwiftCountry, Bef.BranchSwiftLocCode BefBranchSwiftLocCode,
						  Bef.BranchSwiftBrnCde BefBranchSwiftBrnCde, Bef.BranchSortCode BefBranchSortCode, Bef.BranchIsActive BefBranchIsActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  
						  AdtRMTBranches AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtRMTBranches BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Branch')
		</createView>
		</changeSet>	
		
	<changeSet id="19-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtBrokerCommodityDtl_View">		
		
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.CommodityCode AftCommodityCode, 
						  Bef.BrokerCode BefBrokerCode, Bef.CommodityCode BefCommodityCode 
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 
						  AdtBrokerCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBrokerCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
			</createView>
		</changeSet>	


<changeSet id="19-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtBrokerCommodityDtl_View">		
		
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.CommodityCode AftCommodityCode, 
						  Bef.BrokerCode BefBrokerCode, Bef.CommodityCode BefCommodityCode 
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 
						  AdtBrokerCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBrokerCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
			</createView>
		</changeSet>			
		
		<changeSet id="20-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCheckList_View">	
	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CheckListId AftCheckListId, Aft.CheckListDesc AftCheckListDesc,Aft.CheckMinCount AftCheckMinCount,
						  Aft.CheckMaxCount AftCheckMaxCount,Aft.Remarks AftRemarks,Aft.Active AftActive,
						  Bef.CheckListId BefCheckListId, Bef.CheckListDesc BefCheckListDesc, Bef.CheckMinCount BefCheckMinCount,
						  Bef.CheckMaxCount BefCheckMaxCount,Bef.Remarks BefRemarks,Bef.Active BefActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 
						  AdtBMTCheckList AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTCheckList BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CheckList')	
			</createView>
		</changeSet>
		
		<changeSet id="20-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCheckList_View">	
	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
				COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CheckListId AftCheckListId, Aft.CheckListDesc AftCheckListDesc,Aft.CheckMinCount AftCheckMinCount,
						  Aft.CheckMaxCount AftCheckMaxCount,Aft.Remarks AftRemarks,Aft.Active AftActive,
						  Bef.CheckListId BefCheckListId, Bef.CheckListDesc BefCheckListDesc, Bef.CheckMinCount BefCheckMinCount,
						  Bef.CheckMaxCount BefCheckMaxCount,Bef.Remarks BefRemarks,Bef.Active BefActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 
						  AdtBMTCheckList AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTCheckList BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CheckList')	
			</createView>
		</changeSet>
		
			<changeSet id="21-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtChequePurpose_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.Code Aftcode,Aft.Description AftDescription,Aft.Active AftActive,
			   BEF.Code BEFcode,BEF.Description BEFDescription,BEF.Active BEFActive
	FROM      AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			  
			  AdtChequePurpose AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			  AdtChequePurpose BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ChequePurpose')
		
				</createView>
		</changeSet>
		
		<changeSet id="21-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtChequePurpose_View">	
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.Code Aftcode,Aft.Description AftDescription,Aft.Active AftActive,
			   BEF.Code BEFcode,BEF.Description BEFDescription,BEF.Active BEFActive
	FROM      AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			  
			  AdtChequePurpose AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			  AdtChequePurpose BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ChequePurpose')
		
				</createView>
		</changeSet>
		
		
				<changeSet id="22-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommitmentMovements_view">
		
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.CmtReference AftCmtReference ,Aft.FinReference AftFinReference ,Aft.FinBranch AftFinBranch ,
		   Aft.FinType AftFinType ,Aft.MovementDate AftMovementDate ,Aft.MovementOrder AftMovementOrder ,
		   Aft.MovementType AftMovementType ,Aft.MovementAmount AftMovementAmount ,Aft.CmtAmount AftCmtAmount ,
		   Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,Aft.CmtCharges AftCmtCharges ,
		   Aft.LinkedTranId AftLinkedTranId ,
		   Bef.CmtReference BefCmtReference ,Bef.FinReference BefFinReference ,Bef.FinBranch BefFinBranch ,
		   Bef.FinType BefFinType ,Bef.MovementDate BefMovementDate ,Bef.MovementOrder BefMovementOrder ,
		   Bef.MovementType BefMovementType ,Bef.MovementAmount BefMovementAmount ,Bef.CmtAmount BefCmtAmount ,
		   Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,Bef.CmtCharges BefCmtCharges ,
		   Bef.LinkedTranId BefLinkedTranId
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		   
		   AdtCommitmentMovements AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtCommitmentMovements BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
				</createView>
		</changeSet>
		
		<changeSet id="22-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommitmentMovements_view">
		
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
			    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		   Aft.CmtReference AftCmtReference ,Aft.FinReference AftFinReference ,Aft.FinBranch AftFinBranch ,
		   Aft.FinType AftFinType ,Aft.MovementDate AftMovementDate ,Aft.MovementOrder AftMovementOrder ,
		   Aft.MovementType AftMovementType ,Aft.MovementAmount AftMovementAmount ,Aft.CmtAmount AftCmtAmount ,
		   Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,Aft.CmtCharges AftCmtCharges ,
		   Aft.LinkedTranId AftLinkedTranId ,
		   Bef.CmtReference BefCmtReference ,Bef.FinReference BefFinReference ,Bef.FinBranch BefFinBranch ,
		   Bef.FinType BefFinType ,Bef.MovementDate BefMovementDate ,Bef.MovementOrder BefMovementOrder ,
		   Bef.MovementType BefMovementType ,Bef.MovementAmount BefMovementAmount ,Bef.CmtAmount BefCmtAmount ,
		   Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,Bef.CmtCharges BefCmtCharges ,
		   Bef.LinkedTranId BefLinkedTranId
	FROM   AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		   
		   AdtCommitmentMovements AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		   AdtCommitmentMovements BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
				</createView>
		</changeSet>
		
			<changeSet id="23-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommitments_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CmtReference AftCmtReference ,Aft.custID AftcustID ,Aft.CmtBranch AftCmtBranch ,
		   Aft.OpenAccount AftOpenAccount ,Aft.CmtAccount AftCmtAccount ,Aft.CmtCcy AftCmtCcy ,
		   Aft.FacilityRef AftFacilityRef ,Aft.CmtPftRateMin AftCmtPftRateMin ,Aft.CmtPftRateMax AftCmtPftRateMax ,
		   Aft.CmtAmount AftCmtAmount ,Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,
		   Aft.CmtPromisedDate AftCmtPromisedDate ,Aft.CmtStartDate AftCmtStartDate ,Aft.CmtExpDate AftCmtExpDate ,
		   Aft.CmtTitle AftCmtTitle ,Aft.CmtNotes AftCmtNotes ,Aft.Revolving AftRevolving ,Aft.SharedCmt AftSharedCmt ,
		   Aft.MultiBranch AftMultiBranch ,Aft.CmtStopRateRange AftCmtStopRateRange ,Aft.CmtActive AftCmtActive ,
		   Aft.NonPerforming AftNonPerforming ,Aft.CmtCharges AftCmtCharges ,Aft.ChargesAccount AftChargesAccount ,
		   Bef.CmtReference BefCmtReference ,Bef.custID BefcustID ,Bef.CmtBranch BefCmtBranch ,
		   Bef.OpenAccount BefOpenAccount ,Bef.CmtAccount BefCmtAccount ,Bef.CmtCcy BefCmtCcy ,
		   Bef.FacilityRef BefFacilityRef ,Bef.CmtPftRateMin BefCmtPftRateMin ,Bef.CmtPftRateMax BefCmtPftRateMax ,
		   Bef.CmtAmount BefCmtAmount ,Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,
		   Bef.CmtPromisedDate BefCmtPromisedDate ,Bef.CmtStartDate BefCmtStartDate ,Bef.CmtExpDate BefCmtExpDate ,
		   Bef.CmtTitle BefCmtTitle ,Bef.CmtNotes BefCmtNotes ,Bef.Revolving BefRevolving ,Bef.SharedCmt BefSharedCmt ,
		   Bef.MultiBranch BefMultiBranch ,Bef.CmtStopRateRange BefCmtStopRateRange ,Bef.CmtActive BefCmtActive ,
		   Bef.NonPerforming BefNonPerforming ,Bef.CmtCharges BefCmtCharges ,Bef.ChargesAccount BefChargesAccount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCommitments AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCommitments BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
		</createView>
</changeSet>

<changeSet id="23-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommitments_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CmtReference AftCmtReference ,Aft.custID AftcustID ,Aft.CmtBranch AftCmtBranch ,
		   Aft.OpenAccount AftOpenAccount ,Aft.CmtAccount AftCmtAccount ,Aft.CmtCcy AftCmtCcy ,
		   Aft.FacilityRef AftFacilityRef ,Aft.CmtPftRateMin AftCmtPftRateMin ,Aft.CmtPftRateMax AftCmtPftRateMax ,
		   Aft.CmtAmount AftCmtAmount ,Aft.CmtUtilizedAmount AftCmtUtilizedAmount ,Aft.CmtAvailable AftCmtAvailable ,
		   Aft.CmtPromisedDate AftCmtPromisedDate ,Aft.CmtStartDate AftCmtStartDate ,Aft.CmtExpDate AftCmtExpDate ,
		   Aft.CmtTitle AftCmtTitle ,Aft.CmtNotes AftCmtNotes ,Aft.Revolving AftRevolving ,Aft.SharedCmt AftSharedCmt ,
		   Aft.MultiBranch AftMultiBranch ,Aft.CmtStopRateRange AftCmtStopRateRange ,Aft.CmtActive AftCmtActive ,
		   Aft.NonPerforming AftNonPerforming ,Aft.CmtCharges AftCmtCharges ,Aft.ChargesAccount AftChargesAccount ,
		   Bef.CmtReference BefCmtReference ,Bef.custID BefcustID ,Bef.CmtBranch BefCmtBranch ,
		   Bef.OpenAccount BefOpenAccount ,Bef.CmtAccount BefCmtAccount ,Bef.CmtCcy BefCmtCcy ,
		   Bef.FacilityRef BefFacilityRef ,Bef.CmtPftRateMin BefCmtPftRateMin ,Bef.CmtPftRateMax BefCmtPftRateMax ,
		   Bef.CmtAmount BefCmtAmount ,Bef.CmtUtilizedAmount BefCmtUtilizedAmount ,Bef.CmtAvailable BefCmtAvailable ,
		   Bef.CmtPromisedDate BefCmtPromisedDate ,Bef.CmtStartDate BefCmtStartDate ,Bef.CmtExpDate BefCmtExpDate ,
		   Bef.CmtTitle BefCmtTitle ,Bef.CmtNotes BefCmtNotes ,Bef.Revolving BefRevolving ,Bef.SharedCmt BefSharedCmt ,
		   Bef.MultiBranch BefMultiBranch ,Bef.CmtStopRateRange BefCmtStopRateRange ,Bef.CmtActive BefCmtActive ,
		   Bef.NonPerforming BefNonPerforming ,Bef.CmtCharges BefCmtCharges ,Bef.ChargesAccount BefChargesAccount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCommitments AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCommitments BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Commitment')
		</createView>
</changeSet>

<changeSet id="24-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommodityBrokerDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.BrokerCustID AftBrokerCustID,Aft.BrokerFrom AftBrokerFrom,
						  Aft.BrokerAddrHNbr AftBrokerAddrHNbr, Aft.BrokerAddrFlatNbr AftBrokerAddrFlatNbr,Aft.BrokerAddrStreet AftBrokerAddrStreet,
						  Aft.BrokerAddrLane1 AftBrokerAddrLane1, Aft.BrokerAddrLane2 AftBrokerAddrLane2,Aft.BrokerAddrPOBox AftBrokerAddrPOBox,
						  Aft.BrokerAddrCountry AftBrokerAddrCountry, Aft.BrokerAddrProvince AftBrokerAddrProvince,Aft.BrokerAddrCity AftBrokerAddrCity,
						  Aft.BrokerAddrZIP AftBrokerAddrZIP, Aft.BrokerAddrPhone AftBrokerAddrPhone,Aft.BrokerAddrFax AftBrokerAddrFax,
						  Aft.BrokerEmail AftBrokerEmail,Aft.AgreementRef AftAgreementRef,
						  
						  Bef.BrokerCode BefBrokerCode, Bef.BrokerCustID BefBrokerCustID, Bef.BrokerFrom BefBrokerFrom,
						  Bef.BrokerAddrHNbr BefBrokerAddrHNbr, Bef.BrokerAddrFlatNbr BefBrokerAddrFlatNbr, Bef.BrokerAddrStreet BefBrokerAddrStreet,
						  Bef.BrokerAddrLane1 BefBrokerAddrLane1, Bef.BrokerAddrLane2 BefBrokerAddrLane2, Bef.BrokerAddrPOBox BefBrokerAddrPOBox,
						  Bef.BrokerAddrCountry BefBrokerAddrCountry, Bef.BrokerAddrProvince BefBrokerAddrProvince, Bef.BrokerAddrCity BefBrokerAddrCity,
						  Bef.BrokerAddrZIP BefBrokerAddrZIP, Bef.BrokerAddrPhone BefBrokerAddrPhone, Bef.BrokerAddrFax BefBrokerAddrFax,
						  Bef.BrokerEmail BefBrokerEmail, Bef.AgreementRef BefAgreementRef
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTBrokerDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTBrokerDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
		</createView>
</changeSet>

<changeSet id="24-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommodityBrokerDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.BrokerCode AftBrokerCode, Aft.BrokerCustID AftBrokerCustID,Aft.BrokerFrom AftBrokerFrom,
						  Aft.BrokerAddrHNbr AftBrokerAddrHNbr, Aft.BrokerAddrFlatNbr AftBrokerAddrFlatNbr,Aft.BrokerAddrStreet AftBrokerAddrStreet,
						  Aft.BrokerAddrLane1 AftBrokerAddrLane1, Aft.BrokerAddrLane2 AftBrokerAddrLane2,Aft.BrokerAddrPOBox AftBrokerAddrPOBox,
						  Aft.BrokerAddrCountry AftBrokerAddrCountry, Aft.BrokerAddrProvince AftBrokerAddrProvince,Aft.BrokerAddrCity AftBrokerAddrCity,
						  Aft.BrokerAddrZIP AftBrokerAddrZIP, Aft.BrokerAddrPhone AftBrokerAddrPhone,Aft.BrokerAddrFax AftBrokerAddrFax,
						  Aft.BrokerEmail AftBrokerEmail,Aft.AgreementRef AftAgreementRef,
						  
						  Bef.BrokerCode BefBrokerCode, Bef.BrokerCustID BefBrokerCustID, Bef.BrokerFrom BefBrokerFrom,
						  Bef.BrokerAddrHNbr BefBrokerAddrHNbr, Bef.BrokerAddrFlatNbr BefBrokerAddrFlatNbr, Bef.BrokerAddrStreet BefBrokerAddrStreet,
						  Bef.BrokerAddrLane1 BefBrokerAddrLane1, Bef.BrokerAddrLane2 BefBrokerAddrLane2, Bef.BrokerAddrPOBox BefBrokerAddrPOBox,
						  Bef.BrokerAddrCountry BefBrokerAddrCountry, Bef.BrokerAddrProvince BefBrokerAddrProvince, Bef.BrokerAddrCity BefBrokerAddrCity,
						  Bef.BrokerAddrZIP BefBrokerAddrZIP, Bef.BrokerAddrPhone BefBrokerAddrPhone, Bef.BrokerAddrFax BefBrokerAddrFax,
						  Bef.BrokerEmail BefBrokerEmail, Bef.AgreementRef BefAgreementRef
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTBrokerDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTBrokerDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityBrokerDetail')
		</createView>
</changeSet>

<changeSet id="25-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCommodityDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CommodityCode AftCommodityCode, Aft.CommodityName AftCommodityName,Aft.CommodityUnitCode AftCommodityUnitCode,
						  Aft.CommodityUnitName AftCommodityUnitName,
						  Bef.CommodityCode BefCommodityCode, Bef.CommodityName BefCommodityName, Bef.CommodityUnitCode BefCommodityUnitCode,
						  Bef.CommodityUnitName BefCommodityUnitName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityDetail')
		</createView>
</changeSet>

<changeSet id="25-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCommodityDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CommodityCode AftCommodityCode, Aft.CommodityName AftCommodityName,Aft.CommodityUnitCode AftCommodityUnitCode,
						  Aft.CommodityUnitName AftCommodityUnitName,
						  Bef.CommodityCode BefCommodityCode, Bef.CommodityName BefCommodityName, Bef.CommodityUnitCode BefCommodityUnitCode,
						  Bef.CommodityUnitName BefCommodityUnitName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityDetail')
		</createView>
</changeSet>

<changeSet id="26-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtContributorDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.ContributorBaseNo AftContributorBaseNo,Aft.CustID AftCustID,
						  Aft.ContributorName AftContributorName, Aft.ContributorInvest AftContributorInvest,Aft.InvestAccount AftInvestAccount,
						  Aft.InvestDate AftInvestDate, Aft.RecordDate AftRecordDate,Aft.TotalInvestPerc AftTotalInvestPerc,
						  Aft.MudaribPerc AftMudaribPerc,
						  	
						  Bef.FinReference BefFinReference, Bef.ContributorBaseNo BefContributorBaseNo, Bef.CustID BefCustID,
						  Bef.ContributorName BefContributorName, Bef.ContributorInvest BefContributorInvest, Bef.InvestAccount BefInvestAccount,
						  Bef.InvestDate BefInvestDate, Bef.RecordDate BefRecordDate, Bef.TotalInvestPerc BefTotalInvestPerc,
						  Bef.MudaribPerc BefMudaribPerc
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="26-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtContributorDetail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.ContributorBaseNo AftContributorBaseNo,Aft.CustID AftCustID,
						  Aft.ContributorName AftContributorName, Aft.ContributorInvest AftContributorInvest,Aft.InvestAccount AftInvestAccount,
						  Aft.InvestDate AftInvestDate, Aft.RecordDate AftRecordDate,Aft.TotalInvestPerc AftTotalInvestPerc,
						  Aft.MudaribPerc AftMudaribPerc,
						  	
						  Bef.FinReference BefFinReference, Bef.ContributorBaseNo BefContributorBaseNo, Bef.CustID BefCustID,
						  Bef.ContributorName BefContributorName, Bef.ContributorInvest BefContributorInvest, Bef.InvestAccount BefInvestAccount,
						  Bef.InvestDate BefInvestDate, Bef.RecordDate BefRecordDate, Bef.TotalInvestPerc BefTotalInvestPerc,
						  Bef.MudaribPerc BefMudaribPerc
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="27-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtContributorHeader_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.MinContributors AftMinContributors,Aft.MaxContributors AftMaxContributors,
						  Aft.MinContributionAmt AftMinContributionAmt, Aft.MaxContributionAmt AftMaxContributionAmt,Aft.CurContributors AftCurContributors,
						  Aft.CurContributionAmt AftCurContributionAmt, Aft.CurBankInvestment AftCurBankInvestment,Aft.AvgMudaribRate AftAvgMudaribRate,
						  Aft.AlwContributorsToLeave AftAlwContributorsToLeave,Aft.AlwContributorsToJoin AftAlwContributorsToJoin,
						  	
						  Bef.FinReference BefFinReference, Bef.MinContributors BefMinContributors, Bef.MaxContributors BefMaxContributors,
						  Bef.MinContributionAmt BefMinContributionAmt, Bef.MaxContributionAmt BefMaxContributionAmt, Bef.CurContributors BefCurContributors,
						  Bef.CurContributionAmt BefCurContributionAmt, Bef.CurBankInvestment BefCurBankInvestment, Bef.AvgMudaribRate BefAvgMudaribRate,
						  Bef.AlwContributorsToLeave BefAlwContributorsToLeave,Bef.AlwContributorsToJoin BefAlwContributorsToJoin
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="27-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtContributorHeader_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.FinReference AftFinReference, Aft.MinContributors AftMinContributors,Aft.MaxContributors AftMaxContributors,
						  Aft.MinContributionAmt AftMinContributionAmt, Aft.MaxContributionAmt AftMaxContributionAmt,Aft.CurContributors AftCurContributors,
						  Aft.CurContributionAmt AftCurContributionAmt, Aft.CurBankInvestment AftCurBankInvestment,Aft.AvgMudaribRate AftAvgMudaribRate,
						  Aft.AlwContributorsToLeave AftAlwContributorsToLeave,Aft.AlwContributorsToJoin AftAlwContributorsToJoin,
						  	
						  Bef.FinReference BefFinReference, Bef.MinContributors BefMinContributors, Bef.MaxContributors BefMaxContributors,
						  Bef.MinContributionAmt BefMinContributionAmt, Bef.MaxContributionAmt BefMaxContributionAmt, Bef.CurContributors BefCurContributors,
						  Bef.CurContributionAmt BefCurContributionAmt, Bef.CurBankInvestment BefCurBankInvestment, Bef.AvgMudaribRate BefAvgMudaribRate,
						  Bef.AlwContributorsToLeave BefAlwContributorsToLeave,Bef.AlwContributorsToJoin BefAlwContributorsToJoin
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinContributorHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinContributorHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
		</createView>
</changeSet>

<changeSet id="28-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCorpCustDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustId AftCustId, Aft.Name AftName,Aft.PhoneNumber AftPhoneNumber,
						  Aft.PhoneNumber1 AftPhoneNumber1, Aft.EmailId AftEmailId,Aft.BussCommenceDate AftBussCommenceDate,
						  Aft.ServCommenceDate AftServCommenceDate, Aft.BankRelationshipDate AftBankRelationshipDate,Aft.PaidUpCapital AftPaidUpCapital,
						  Aft.AuthorizedCapital AftAuthorizedCapital, Aft.ReservesAndSurPlus AftReservesAndSurPlus,Aft.IntangibleAssets AftIntangibleAssets,
						  Aft.TangibleNetWorth AftTangibleNetWorth, Aft.LongTermLiabilities AftLongTermLiabilities,Aft.CapitalEmployed AftCapitalEmployed,
						  Aft.Investments AftInvestments,Aft.NonCurrentAssets AftNonCurrentAssets,Aft.NetWorkingCapital AftNetWorkingCapital,
						  Aft.NetSales AftNetSales,Aft.OtherIncome AftOtherIncome,Aft.NetProfitAfterTax AftNetProfitAfterTax,
						  Aft.Depreciation AftDepreciation,Aft.CashAccurals AftCashAccurals,Aft.AnnualTurnover AftAnnualTurnover,
						  Aft.ReturnOnCapitalEmp AftReturnOnCapitalEmp,Aft.CurrentAssets AftCurrentAssets,Aft.CurrentLiabilities AftCurrentLiabilities,
						  Aft.CurrentBookValue AftCurrentBookValue,Aft.CurrentMarketValue AftCurrentMarketValue,Aft.PromotersShare AftPromotersShare,
						  Aft.AssociatesShare AftAssociatesShare,Aft.PublicShare AftPublicShare,Aft.FinInstShare AftFinInstShare,
						  Aft.Others AftOthers,						  
						  
						  Bef.CustId BefCustId, Bef.Name BefName, Bef.PhoneNumber BefPhoneNumber,
						  Bef.PhoneNumber1 BefPhoneNumber1, Bef.EmailId BefEmailId, Bef.BussCommenceDate BefBussCommenceDate,
						  Bef.ServCommenceDate BefServCommenceDate, Bef.BankRelationshipDate BefBankRelationshipDate, Bef.PaidUpCapital BefPaidUpCapital,
						  Bef.AuthorizedCapital BefAuthorizedCapital, Bef.ReservesAndSurPlus BefReservesAndSurPlus, Bef.IntangibleAssets BefIntangibleAssets,
						  Bef.TangibleNetWorth BefTangibleNetWorth, Bef.LongTermLiabilities BefLongTermLiabilities, Bef.CapitalEmployed BefCapitalEmployed,
						  Bef.Investments BefInvestments, Bef.NonCurrentAssets BefNonCurrentAssets, Bef.NetWorkingCapital BefNetWorkingCapital,
						  Bef.NetSales BefNetSales, Bef.OtherIncome BefOtherIncome, Bef.NetProfitAfterTax BefNetProfitAfterTax,
						  Bef.Depreciation BefDepreciation, Bef.CashAccurals BefCashAccurals, Bef.AnnualTurnover BefAnnualTurnover,
						  Bef.ReturnOnCapitalEmp BefReturnOnCapitalEmp, Bef.CurrentAssets BefCurrentAssets, Bef.CurrentLiabilities BefCurrentLiabilities,
						  Bef.CurrentBookValue BefCurrentBookValue, Bef.CurrentMarketValue BefCurrentMarketValue, Bef.PromotersShare BefPromotersShare,
						  Bef.AssociatesShare BefAssociatesShare, Bef.PublicShare BefPublicShare, Bef.FinInstShare BefFinInstShare,
						  Bef.Others BefOthers
						  						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerCorporateDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerCorporateDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorporateCustomerDetail')
		</createView>
</changeSet>

<changeSet id="28-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCorpCustDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustId AftCustId, Aft.Name AftName,Aft.PhoneNumber AftPhoneNumber,
						  Aft.PhoneNumber1 AftPhoneNumber1, Aft.EmailId AftEmailId,Aft.BussCommenceDate AftBussCommenceDate,
						  Aft.ServCommenceDate AftServCommenceDate, Aft.BankRelationshipDate AftBankRelationshipDate,Aft.PaidUpCapital AftPaidUpCapital,
						  Aft.AuthorizedCapital AftAuthorizedCapital, Aft.ReservesAndSurPlus AftReservesAndSurPlus,Aft.IntangibleAssets AftIntangibleAssets,
						  Aft.TangibleNetWorth AftTangibleNetWorth, Aft.LongTermLiabilities AftLongTermLiabilities,Aft.CapitalEmployed AftCapitalEmployed,
						  Aft.Investments AftInvestments,Aft.NonCurrentAssets AftNonCurrentAssets,Aft.NetWorkingCapital AftNetWorkingCapital,
						  Aft.NetSales AftNetSales,Aft.OtherIncome AftOtherIncome,Aft.NetProfitAfterTax AftNetProfitAfterTax,
						  Aft.Depreciation AftDepreciation,Aft.CashAccurals AftCashAccurals,Aft.AnnualTurnover AftAnnualTurnover,
						  Aft.ReturnOnCapitalEmp AftReturnOnCapitalEmp,Aft.CurrentAssets AftCurrentAssets,Aft.CurrentLiabilities AftCurrentLiabilities,
						  Aft.CurrentBookValue AftCurrentBookValue,Aft.CurrentMarketValue AftCurrentMarketValue,Aft.PromotersShare AftPromotersShare,
						  Aft.AssociatesShare AftAssociatesShare,Aft.PublicShare AftPublicShare,Aft.FinInstShare AftFinInstShare,
						  Aft.Others AftOthers,						  
						  
						  Bef.CustId BefCustId, Bef.Name BefName, Bef.PhoneNumber BefPhoneNumber,
						  Bef.PhoneNumber1 BefPhoneNumber1, Bef.EmailId BefEmailId, Bef.BussCommenceDate BefBussCommenceDate,
						  Bef.ServCommenceDate BefServCommenceDate, Bef.BankRelationshipDate BefBankRelationshipDate, Bef.PaidUpCapital BefPaidUpCapital,
						  Bef.AuthorizedCapital BefAuthorizedCapital, Bef.ReservesAndSurPlus BefReservesAndSurPlus, Bef.IntangibleAssets BefIntangibleAssets,
						  Bef.TangibleNetWorth BefTangibleNetWorth, Bef.LongTermLiabilities BefLongTermLiabilities, Bef.CapitalEmployed BefCapitalEmployed,
						  Bef.Investments BefInvestments, Bef.NonCurrentAssets BefNonCurrentAssets, Bef.NetWorkingCapital BefNetWorkingCapital,
						  Bef.NetSales BefNetSales, Bef.OtherIncome BefOtherIncome, Bef.NetProfitAfterTax BefNetProfitAfterTax,
						  Bef.Depreciation BefDepreciation, Bef.CashAccurals BefCashAccurals, Bef.AnnualTurnover BefAnnualTurnover,
						  Bef.ReturnOnCapitalEmp BefReturnOnCapitalEmp, Bef.CurrentAssets BefCurrentAssets, Bef.CurrentLiabilities BefCurrentLiabilities,
						  Bef.CurrentBookValue BefCurrentBookValue, Bef.CurrentMarketValue BefCurrentMarketValue, Bef.PromotersShare BefPromotersShare,
						  Bef.AssociatesShare BefAssociatesShare, Bef.PublicShare BefPublicShare, Bef.FinInstShare BefFinInstShare,
						  Bef.Others BefOthers
						  						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerCorporateDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerCorporateDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorporateCustomerDetail')
		</createView>
</changeSet>

<changeSet id="29-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCorpRelationCodes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CorpRelationCode AftCorpRelationCode, Aft.CorpRelationDesc AftCorpRelationDesc, Aft.CorpRelationIsActive AftCorpRelationIsActive,
						  Bef.CorpRelationCode BefCorpRelationCode, Bef.CorpRelationDesc BefCorpRelationDesc, Bef.CorpRelationIsActive BefCorpRelationIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCorpRelationCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCorpRelationCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorpRelationCode')
		</createView>
</changeSet>

<changeSet id="29-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCorpRelationCodes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CorpRelationCode AftCorpRelationCode, Aft.CorpRelationDesc AftCorpRelationDesc, Aft.CorpRelationIsActive AftCorpRelationIsActive,
						  Bef.CorpRelationCode BefCorpRelationCode, Bef.CorpRelationDesc BefCorpRelationDesc, Bef.CorpRelationIsActive BefCorpRelationIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCorpRelationCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCorpRelationCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CorpRelationCode')
		</createView>
</changeSet>

<changeSet id="30-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCountries_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CountryCode AftCountryCode, Aft.CountryDesc AftCountryDesc, Aft.CountryParentLimit AftCountryParentLimit,
						  Aft.CountryResidenceLimit AftCountryResidenceLimit, Aft.CountryRiskLimit AftCountryRiskLimit, Aft.CountryIsActive AftCountryIsActive,
						  Bef.CountryCode BefCountryCode, Bef.CountryDesc BefCountryDesc, Bef.CountryParentLimit BefCountryParentLimit,
						  Bef.CountryResidenceLimit BefCountryResidenceLimit, Bef.CountryRiskLimit BefCountryRiskLimit, Bef.CountryIsActive BefCountryIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCountries AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCountries BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Country')
		</createView>
</changeSet>

<changeSet id="30-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCountries_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CountryCode AftCountryCode, Aft.CountryDesc AftCountryDesc, Aft.CountryParentLimit AftCountryParentLimit,
						  Aft.CountryResidenceLimit AftCountryResidenceLimit, Aft.CountryRiskLimit AftCountryRiskLimit, Aft.CountryIsActive AftCountryIsActive,
						  Bef.CountryCode BefCountryCode, Bef.CountryDesc BefCountryDesc, Bef.CountryParentLimit BefCountryParentLimit,
						  Bef.CountryResidenceLimit BefCountryResidenceLimit, Bef.CountryRiskLimit BefCountryRiskLimit, Bef.CountryIsActive BefCountryIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCountries AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCountries BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Country')
		</createView>
</changeSet>

<changeSet id="31-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCountryVsProvince_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CPCountry AftCPCountry, Aft.CPProvince AftCPProvince,Aft.CPProvinceName AftCPProvinceName,
						  Bef.CPCountry BefCPCountry, Bef.CPProvince BefCPProvince, Bef.CPProvinceName BefCPProvinceName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCountryVsProvince AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCountryVsProvince BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Province')
		</createView>
</changeSet>

<changeSet id="31-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCountryVsProvince_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CPCountry AftCPCountry, Aft.CPProvince AftCPProvince,Aft.CPProvinceName AftCPProvinceName,
						  Bef.CPCountry BefCPCountry, Bef.CPProvince BefCPProvince, Bef.CPProvinceName BefCPProvinceName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCountryVsProvince AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCountryVsProvince BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Province')
		</createView>
</changeSet>

<changeSet id="32-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCourse_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseName AftCourseName, Aft.CourseDesc AftCourseDesc,
						  Bef.CourseName BefCourseName, Bef.CourseDesc BefCourseDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourse AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourse BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Course')
		</createView>
</changeSet>

<changeSet id="32-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCourse_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseName AftCourseName, Aft.CourseDesc AftCourseDesc,
						  Bef.CourseName BefCourseName, Bef.CourseDesc BefCourseDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourse AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourse BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Course')
		</createView>
</changeSet>

<changeSet id="33-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCourseType_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseTypeCode AftCourseTypeCode, Aft.CourseTypeDesc AftCourseTypeDesc,
						  Bef.CourseTypeCode BefCourseTypeCode, Bef.CourseTypeDesc BefCourseTypeDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourseType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourseType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CourseType')
		</createView>
</changeSet>

<changeSet id="33-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCourseType_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CourseTypeCode AftCourseTypeCode, Aft.CourseTypeDesc AftCourseTypeDesc,
						  Bef.CourseTypeCode BefCourseTypeCode, Bef.CourseTypeDesc BefCourseTypeDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTCourseType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTCourseType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CourseType')
		</createView>
</changeSet>

<changeSet id="34-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCurrencies_View">
		SELECT       TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CcyCode AftCcyCode, Aft.CcyNumber AftCcyNumber, Aft.CcyDesc AftCcyDesc,
						  Aft.CcySwiftCode AftCcySwiftCode, Aft.CcyEditField AftCcyEditField, Aft.CcyMinorCcyUnits AftCcyMinorCcyUnits,
						  Aft.CcyDrRateBasisCode AftCcyDrRateBasisCode, Aft.CcyCrRateBasisCode AftCcyCrRateBasisCode, Aft.CcyIsIntRounding AftCcyIsIntRounding,
						  Aft.CcySpotRate AftCcySpotRate, Aft.CcyIsReceprocal AftCcyIsReceprocal, Aft.CcyUserRateBuy AftCcyUserRateBuy,
						  Aft.CcyUserRateSell AftCcyUserRateSell, Aft.CcyIsMember AftCcyIsMember, Aft.CcyIsGroup AftCcyIsGroup,
						  Aft.CcyIsAlwForLoans AftCcyIsAlwForLoans, Aft.CcyIsAlwForDepo AftCcyIsAlwForDepo, Aft.CcyIsAlwForAc AftCcyIsAlwForAc,
						  Aft.CcyIsActive AftCcyIsActive, Aft.CcyMinorCcyDesc AftCcyMinorCcyDesc, Aft.CcySymbol AftCcySymbol,
						  Bef.CcyCode BefCcyCode, Bef.CcyNumber BefCcyNumber, Bef.CcyDesc BefCcyDesc,
						  Bef.CcySwiftCode BefCcySwiftCode, Bef.CcyEditField BefCcyEditField, Bef.CcyMinorCcyUnits BefCcyMinorCcyUnits,
						  Bef.CcyDrRateBasisCode BefCcyDrRateBasisCode, Bef.CcyCrRateBasisCode BefCcyCrRateBasisCode, Bef.CcyIsIntRounding BefCcyIsIntRounding,
						  Bef.CcySpotRate BefCcySpotRate, Bef.CcyIsReceprocal BefCcyIsReceprocal, Bef.CcyUserRateBuy BefCcyUserRateBuy,
						  Bef.CcyUserRateSell BefCcyUserRateSell, Bef.CcyIsMember BefCcyIsMember, Bef.CcyIsGroup BefCcyIsGroup,
						  Bef.CcyIsAlwForLoans BefCcyIsAlwForLoans, Bef.CcyIsAlwForDepo BefCcyIsAlwForDepo, Bef.CcyIsAlwForAc BefCcyIsAlwForAc,
						  Bef.CcyIsActive BefCcyIsActive, Bef.CcyMinorCcyDesc BefCcyMinorCcyDesc, Bef.CcySymbol BefCcySymbol
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCurrencies AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCurrencies BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Currency')
		</createView>
</changeSet>

<changeSet id="34-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCurrencies_View">
		SELECT       TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CcyCode AftCcyCode, Aft.CcyNumber AftCcyNumber, Aft.CcyDesc AftCcyDesc,
						  Aft.CcySwiftCode AftCcySwiftCode, Aft.CcyEditField AftCcyEditField, Aft.CcyMinorCcyUnits AftCcyMinorCcyUnits,
						  Aft.CcyDrRateBasisCode AftCcyDrRateBasisCode, Aft.CcyCrRateBasisCode AftCcyCrRateBasisCode, Aft.CcyIsIntRounding AftCcyIsIntRounding,
						  Aft.CcySpotRate AftCcySpotRate, Aft.CcyIsReceprocal AftCcyIsReceprocal, Aft.CcyUserRateBuy AftCcyUserRateBuy,
						  Aft.CcyUserRateSell AftCcyUserRateSell, Aft.CcyIsMember AftCcyIsMember, Aft.CcyIsGroup AftCcyIsGroup,
						  Aft.CcyIsAlwForLoans AftCcyIsAlwForLoans, Aft.CcyIsAlwForDepo AftCcyIsAlwForDepo, Aft.CcyIsAlwForAc AftCcyIsAlwForAc,
						  Aft.CcyIsActive AftCcyIsActive, Aft.CcyMinorCcyDesc AftCcyMinorCcyDesc, Aft.CcySymbol AftCcySymbol,
						  Bef.CcyCode BefCcyCode, Bef.CcyNumber BefCcyNumber, Bef.CcyDesc BefCcyDesc,
						  Bef.CcySwiftCode BefCcySwiftCode, Bef.CcyEditField BefCcyEditField, Bef.CcyMinorCcyUnits BefCcyMinorCcyUnits,
						  Bef.CcyDrRateBasisCode BefCcyDrRateBasisCode, Bef.CcyCrRateBasisCode BefCcyCrRateBasisCode, Bef.CcyIsIntRounding BefCcyIsIntRounding,
						  Bef.CcySpotRate BefCcySpotRate, Bef.CcyIsReceprocal BefCcyIsReceprocal, Bef.CcyUserRateBuy BefCcyUserRateBuy,
						  Bef.CcyUserRateSell BefCcyUserRateSell, Bef.CcyIsMember BefCcyIsMember, Bef.CcyIsGroup BefCcyIsGroup,
						  Bef.CcyIsAlwForLoans BefCcyIsAlwForLoans, Bef.CcyIsAlwForDepo BefCcyIsAlwForDepo, Bef.CcyIsAlwForAc BefCcyIsAlwForAc,
						  Bef.CcyIsActive BefCcyIsActive, Bef.CcyMinorCcyDesc BefCcyMinorCcyDesc, Bef.CcySymbol BefCcySymbol
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCurrencies AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCurrencies BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Currency')
		</createView>
</changeSet>

<changeSet id="35-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustCategories_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustCtgDesc AftCustCtgDesc, Aft.CustCtgType AftCustCtgType,Aft.CustCtgIsActive AftCustCtgIsActive,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustCtgDesc BefCustCtgDesc, Bef.CustCtgType BefCustCtgType,Bef.CustCtgIsActive BefCustCtgIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustCategories AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustCategories BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="35-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustCategories_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustCtgDesc AftCustCtgDesc, Aft.CustCtgType AftCustCtgType,Aft.CustCtgIsActive AftCustCtgIsActive,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustCtgDesc BefCustCtgDesc, Bef.CustCtgType BefCustCtgType,Bef.CustCtgIsActive BefCustCtgIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustCategories AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustCategories BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="36-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustEmployeeDetail_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.EmpStatus AftEmpStatus ,Aft.EmpSector AftEmpSector ,Aft.Profession AftProfession ,
		   Aft.EmpName AftEmpName ,Aft.EmpNameForOthers AftEmpNameForOthers ,Aft.EmpDesg AftEmpDesg ,
		   Aft.EmpDept AftEmpDept ,Aft.EmpFrom AftEmpFrom ,Aft.MonthlyIncome AftMonthlyIncome ,
		   Aft.OtherIncome AftOtherIncome ,Aft.AdditionalIncome AftAdditionalIncome ,
		   Bef.CustID BefCustID ,Bef.EmpStatus BefEmpStatus ,Bef.EmpSector BefEmpSector ,Bef.Profession BefProfession ,
		   Bef.EmpName BefEmpName ,Bef.EmpNameForOthers BefEmpNameForOthers ,Bef.EmpDesg BefEmpDesg ,
		   Bef.EmpDept BefEmpDept ,Bef.EmpFrom BefEmpFrom ,Bef.MonthlyIncome BefMonthlyIncome ,
		   Bef.OtherIncome BefOtherIncome ,Bef.AdditionalIncome BefAdditionalIncome
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustEmployeeDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustEmployeeDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="36-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustEmployeeDetail_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.EmpStatus AftEmpStatus ,Aft.EmpSector AftEmpSector ,Aft.Profession AftProfession ,
		   Aft.EmpName AftEmpName ,Aft.EmpNameForOthers AftEmpNameForOthers ,Aft.EmpDesg AftEmpDesg ,
		   Aft.EmpDept AftEmpDept ,Aft.EmpFrom AftEmpFrom ,Aft.MonthlyIncome AftMonthlyIncome ,
		   Aft.OtherIncome AftOtherIncome ,Aft.AdditionalIncome AftAdditionalIncome ,
		   Bef.CustID BefCustID ,Bef.EmpStatus BefEmpStatus ,Bef.EmpSector BefEmpSector ,Bef.Profession BefProfession ,
		   Bef.EmpName BefEmpName ,Bef.EmpNameForOthers BefEmpNameForOthers ,Bef.EmpDesg BefEmpDesg ,
		   Bef.EmpDept BefEmpDept ,Bef.EmpFrom BefEmpFrom ,Bef.MonthlyIncome BefMonthlyIncome ,
		   Bef.OtherIncome BefOtherIncome ,Bef.AdditionalIncome BefAdditionalIncome
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustEmployeeDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustEmployeeDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="37-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustEmploymentDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEmpName AftCustEmpName,Aft.CustEmpFrom AftCustEmpFrom,
						  Aft.CustEmpDesg AftCustEmpDesg, Aft.CustEmpDept AftCustEmpDept,
						  Aft.CustEmpType AftCustEmpType,
	
						  Bef.CustID BefCustID, Bef.CustEmpName BefCustEmpName, Bef.CustEmpFrom BefCustEmpFrom,
						  Bef.CustEmpDesg BefCustEmpDesg, Bef.CustEmpDept BefCustEmpDept,
						  Bef.CustEmpType BefCustEmpType
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEmpDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEmpDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="37-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustEmploymentDtl_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEmpName AftCustEmpName,Aft.CustEmpFrom AftCustEmpFrom,
						  Aft.CustEmpDesg AftCustEmpDesg, Aft.CustEmpDept AftCustEmpDept,
						  Aft.CustEmpType AftCustEmpType,
	
						  Bef.CustID BefCustID, Bef.CustEmpName BefCustEmpName, Bef.CustEmpFrom BefCustEmpFrom,
						  Bef.CustEmpDesg BefCustEmpDesg, Bef.CustEmpDept BefCustEmpDept,
						  Bef.CustEmpType BefCustEmpType
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEmpDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEmpDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="38-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustNotesTypes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustNotesTypeCode AftCustNotesTypeCode, Aft.CustNotesTypeDesc AftCustNotesTypeDesc, Aft.CustNotesTypeIsPerminent AftCustNotesTypeIsPerminent,
						  Aft.CustNotesTypeArchiveFrq AftCustNotesTypeArchiveFrq,Aft.CustNotesTypeIsActive AftCustNotesTypeIsActive,
						  Bef.CustNotesTypeCode BefCustNotesTypeCode, Bef.CustNotesTypeDesc BefCustNotesTypeDesc, Bef.CustNotesTypeIsPerminent BefCustNotesTypeIsPerminent,
						  Bef.CustNotesTypeArchiveFrq BefCustNotesTypeArchiveFrq,Bef.CustNotesTypeIsActive BefCustNotesTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustNotesTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustNotesTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="38-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustNotesTypes_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustNotesTypeCode AftCustNotesTypeCode, Aft.CustNotesTypeDesc AftCustNotesTypeDesc, Aft.CustNotesTypeIsPerminent AftCustNotesTypeIsPerminent,
						  Aft.CustNotesTypeArchiveFrq AftCustNotesTypeArchiveFrq,Aft.CustNotesTypeIsActive AftCustNotesTypeIsActive,
						  Bef.CustNotesTypeCode BefCustNotesTypeCode, Bef.CustNotesTypeDesc BefCustNotesTypeDesc, Bef.CustNotesTypeIsPerminent BefCustNotesTypeIsPerminent,
						  Bef.CustNotesTypeArchiveFrq BefCustNotesTypeArchiveFrq,Bef.CustNotesTypeIsActive BefCustNotesTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTCustNotesTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTCustNotesTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>


<changeSet id="39-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomer_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustCIF AftCustCIF,Aft.CustCoreBank AftCustCoreBank,
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustTypeCode AftCustTypeCode,Aft.CustSalutationCode AftCustSalutationCode,
						  Aft.CustFName AftCustFName, Aft.CustMName AftCustMName,Aft.CustLName AftCustLName,
						  Aft.CustShrtName AftCustShrtName, Aft.CustFNameLclLng AftCustFNameLclLng,Aft.CustMNameLclLng AftCustMNameLclLng,
						  Aft.CustLNameLclLng AftCustLNameLclLng, Aft.CustShrtNameLclLng AftCustShrtNameLclLng,Aft.CustDftBranch AftCustDftBranch,
						  Aft.CustGenderCode AftCustGenderCode,Aft.CustDOB AftCustDOB,Aft.CustPOB AftCustPOB,
						  Aft.CustCOB AftCustCOB,Aft.CustPassportNo AftCustPassportNo,Aft.CustMotherMaiden AftCustMotherMaiden,
						  Aft.CustIsMinor AftCustIsMinor,Aft.CustReferedBy AftCustReferedBy,Aft.CustDSA AftCustDSA,
						  Aft.CustDSADept AftCustDSADept,Aft.CustRO1 AftCustRO1,Aft.CustRO2 AftCustRO2,
						  Aft.CustGroupID AftCustGroupID,Aft.CustSts AftCustSts,Aft.CustStsChgDate AftCustStsChgDate,
						  Aft.CustGroupSts AftCustGroupSts,Aft.CustIsBlocked AftCustIsBlocked,Aft.CustIsActive AftCustIsActive,
						  Aft.CustIsClosed AftCustIsClosed,Aft.CustInactiveReason AftCustInactiveReason,Aft.CustIsDecease AftCustIsDecease,
						  Aft.CustIsDormant AftCustIsDormant,Aft.CustIsDelinquent AftCustIsDelinquent,Aft.CustIsTradeFinCust AftCustIsTradeFinCust,
						  Aft.CustTradeLicenceNum AftCustTradeLicenceNum,Aft.CustVisaNum AftCustVisaNum,Aft.CustTradeLicenceExpiry AftCustTradeLicenceExpiry,
						  
						 	
	
						Bef.CustID BefCustID, Bef.CustCIF BefCustCIF, Bef.CustCoreBank BefCustCoreBank,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustTypeCode BefCustTypeCode, Bef.CustSalutationCode BefCustSalutationCode,
						  Bef.CustFName BefCustFName, Bef.CustMName BefCustMName, Bef.CustLName BefCustLName,
						  Bef.CustShrtName BefCustShrtName, Bef.CustFNameLclLng BefCustFNameLclLng, Bef.CustMNameLclLng BefCustMNameLclLng,
						  Bef.CustLNameLclLng BefCustLNameLclLng, Bef.CustShrtNameLclLng BefCustShrtNameLclLng, Bef.CustDftBranch BefCustDftBranch,
						  Bef.CustGenderCode BefCustGenderCode, Bef.CustDOB BefCustDOB, Bef.CustPOB BefCustPOB,
						  Bef.CustCOB BefCustCOB,Bef.CustPassportNo BefCustPassportNo,Bef.CustMotherMaiden BefCustMotherMaiden,
						  Bef.CustIsMinor BefCustIsMinor,Bef.CustReferedBy BefCustReferedBy,Bef.CustDSA BefCustDSA,
						  Bef.CustDSADept BefCustDSADept,Bef.CustRO1 BefCustRO1,Bef.CustRO2 BefCustRO2,
						  Bef.CustGroupID BefCustGroupID,Bef.CustSts BefCustSts,Bef.CustStsChgDate BefCustStsChgDate,
						  Bef.CustGroupSts BefCustGroupSts,Bef.CustIsBlocked BefCustIsBlocked,Bef.CustIsActive BefCustIsActive,
						  Bef.CustIsClosed BefCustIsClosed,Bef.CustInactiveReason BefCustInactiveReason,Bef.CustIsDecease BefCustIsDecease,
						  Bef.CustIsDormant BefCustIsDormant,Bef.CustIsDelinquent BefCustIsDelinquent,Bef.CustIsTradeFinCust BefCustIsTradeFinCust,
						  Bef.CustTradeLicenceNum BefCustTradeLicenceNum,Bef.CustVisaNum BefCustVisaNum,Bef.CustTradeLicenceExpiry BefCustTradeLicenceExpiry
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="39-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomer_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustCIF AftCustCIF,Aft.CustCoreBank AftCustCoreBank,
						  Aft.CustCtgCode AftCustCtgCode, Aft.CustTypeCode AftCustTypeCode,Aft.CustSalutationCode AftCustSalutationCode,
						  Aft.CustFName AftCustFName, Aft.CustMName AftCustMName,Aft.CustLName AftCustLName,
						  Aft.CustShrtName AftCustShrtName, Aft.CustFNameLclLng AftCustFNameLclLng,Aft.CustMNameLclLng AftCustMNameLclLng,
						  Aft.CustLNameLclLng AftCustLNameLclLng, Aft.CustShrtNameLclLng AftCustShrtNameLclLng,Aft.CustDftBranch AftCustDftBranch,
						  Aft.CustGenderCode AftCustGenderCode,Aft.CustDOB AftCustDOB,Aft.CustPOB AftCustPOB,
						  Aft.CustCOB AftCustCOB,Aft.CustPassportNo AftCustPassportNo,Aft.CustMotherMaiden AftCustMotherMaiden,
						  Aft.CustIsMinor AftCustIsMinor,Aft.CustReferedBy AftCustReferedBy,Aft.CustDSA AftCustDSA,
						  Aft.CustDSADept AftCustDSADept,Aft.CustRO1 AftCustRO1,Aft.CustRO2 AftCustRO2,
						  Aft.CustGroupID AftCustGroupID,Aft.CustSts AftCustSts,Aft.CustStsChgDate AftCustStsChgDate,
						  Aft.CustGroupSts AftCustGroupSts,Aft.CustIsBlocked AftCustIsBlocked,Aft.CustIsActive AftCustIsActive,
						  Aft.CustIsClosed AftCustIsClosed,Aft.CustInactiveReason AftCustInactiveReason,Aft.CustIsDecease AftCustIsDecease,
						  Aft.CustIsDormant AftCustIsDormant,Aft.CustIsDelinquent AftCustIsDelinquent,Aft.CustIsTradeFinCust AftCustIsTradeFinCust,
						  Aft.CustTradeLicenceNum AftCustTradeLicenceNum,Aft.CustVisaNum AftCustVisaNum,Aft.CustTradeLicenceExpiry AftCustTradeLicenceExpiry,
						  
						 	
	
						Bef.CustID BefCustID, Bef.CustCIF BefCustCIF, Bef.CustCoreBank BefCustCoreBank,
						  Bef.CustCtgCode BefCustCtgCode, Bef.CustTypeCode BefCustTypeCode, Bef.CustSalutationCode BefCustSalutationCode,
						  Bef.CustFName BefCustFName, Bef.CustMName BefCustMName, Bef.CustLName BefCustLName,
						  Bef.CustShrtName BefCustShrtName, Bef.CustFNameLclLng BefCustFNameLclLng, Bef.CustMNameLclLng BefCustMNameLclLng,
						  Bef.CustLNameLclLng BefCustLNameLclLng, Bef.CustShrtNameLclLng BefCustShrtNameLclLng, Bef.CustDftBranch BefCustDftBranch,
						  Bef.CustGenderCode BefCustGenderCode, Bef.CustDOB BefCustDOB, Bef.CustPOB BefCustPOB,
						  Bef.CustCOB BefCustCOB,Bef.CustPassportNo BefCustPassportNo,Bef.CustMotherMaiden BefCustMotherMaiden,
						  Bef.CustIsMinor BefCustIsMinor,Bef.CustReferedBy BefCustReferedBy,Bef.CustDSA BefCustDSA,
						  Bef.CustDSADept BefCustDSADept,Bef.CustRO1 BefCustRO1,Bef.CustRO2 BefCustRO2,
						  Bef.CustGroupID BefCustGroupID,Bef.CustSts BefCustSts,Bef.CustStsChgDate BefCustStsChgDate,
						  Bef.CustGroupSts BefCustGroupSts,Bef.CustIsBlocked BefCustIsBlocked,Bef.CustIsActive BefCustIsActive,
						  Bef.CustIsClosed BefCustIsClosed,Bef.CustInactiveReason BefCustInactiveReason,Bef.CustIsDecease BefCustIsDecease,
						  Bef.CustIsDormant BefCustIsDormant,Bef.CustIsDelinquent BefCustIsDelinquent,Bef.CustIsTradeFinCust BefCustIsTradeFinCust,
						  Bef.CustTradeLicenceNum BefCustTradeLicenceNum,Bef.CustVisaNum BefCustVisaNum,Bef.CustTradeLicenceExpiry BefCustTradeLicenceExpiry
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="40-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerAddres_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustAddrType AftCustAddrType,Aft.CustAddrHNbr AftCustAddrHNbr,
						  Aft.CustFlatNbr AftCustFlatNbr, Aft.CustAddrStreet AftCustAddrStreet,Aft.CustAddrLine1 AftCustAddrLine1,
						  Aft.CustAddrLine2 AftCustAddrLine2, Aft.CustPOBox AftCustPOBox,Aft.CustAddrCity AftCustAddrCity,
						  Aft.CustAddrProvince AftCustAddrProvince, Aft.CustAddrCountry AftCustAddrCountry,Aft.CustAddrZIP AftCustAddrZIP,
						  Aft.CustAddrPhone AftCustAddrPhone, Aft.CustAddrFrom AftCustAddrFrom,
	
						Bef.CustID BefCustID, Bef.CustAddrType BefCustAddrType, Bef.CustAddrHNbr BefCustAddrHNbr,
						  Bef.CustFlatNbr BefCustFlatNbr, Bef.CustAddrStreet BefCustAddrStreet, Bef.CustAddrLine1 BefCustAddrLine1,
						  Bef.CustAddrLine2 BefCustAddrLine2, Bef.CustPOBox BefCustPOBox, Bef.CustAddrCity BefCustAddrCity,
						  Bef.CustAddrProvince BefCustAddrProvince, Bef.CustAddrCountry BefCustAddrCountry, Bef.CustAddrZIP BefCustAddrZIP,
						  Bef.CustAddrPhone BefCustAddrPhone, Bef.CustAddrFrom BefCustAddrFrom
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerAddresses AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerAddresses BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="40-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerAddres_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustAddrType AftCustAddrType,Aft.CustAddrHNbr AftCustAddrHNbr,
						  Aft.CustFlatNbr AftCustFlatNbr, Aft.CustAddrStreet AftCustAddrStreet,Aft.CustAddrLine1 AftCustAddrLine1,
						  Aft.CustAddrLine2 AftCustAddrLine2, Aft.CustPOBox AftCustPOBox,Aft.CustAddrCity AftCustAddrCity,
						  Aft.CustAddrProvince AftCustAddrProvince, Aft.CustAddrCountry AftCustAddrCountry,Aft.CustAddrZIP AftCustAddrZIP,
						  Aft.CustAddrPhone AftCustAddrPhone, Aft.CustAddrFrom AftCustAddrFrom,
	
						Bef.CustID BefCustID, Bef.CustAddrType BefCustAddrType, Bef.CustAddrHNbr BefCustAddrHNbr,
						  Bef.CustFlatNbr BefCustFlatNbr, Bef.CustAddrStreet BefCustAddrStreet, Bef.CustAddrLine1 BefCustAddrLine1,
						  Bef.CustAddrLine2 BefCustAddrLine2, Bef.CustPOBox BefCustPOBox, Bef.CustAddrCity BefCustAddrCity,
						  Bef.CustAddrProvince BefCustAddrProvince, Bef.CustAddrCountry BefCustAddrCountry, Bef.CustAddrZIP BefCustAddrZIP,
						  Bef.CustAddrPhone BefCustAddrPhone, Bef.CustAddrFrom BefCustAddrFrom
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerAddresses AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerAddresses BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="41-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerBalanceSheet_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.FinancialYear AftFinancialYear,Aft.TotalAssets AftTotalAssets,
						  Aft.TotalLiabilities AftTotalLiabilities, Aft.NetProfit AftNetProfit,Aft.NetSales AftNetSales,
						  Aft.NetIncome AftNetIncome, Aft.OperatingProfit AftOperatingProfit,Aft.CashFlow AftCashFlow,
						  Aft.BookValue AftBookValue, Aft.MarketValue AftMarketValue,
	
						  Bef.CustID BefCustID, Bef.FinancialYear BefFinancialYear, Bef.TotalAssets BefTotalAssets,
						  Bef.TotalLiabilities BefTotalLiabilities, Bef.NetProfit BefNetProfit, Bef.NetSales BefNetSales,
						  Bef.NetIncome BefNetIncome, Bef.OperatingProfit BefOperatingProfit, Bef.CashFlow BefCashFlow,
						  Bef.BookValue BefBookValue, Bef.MarketValue BefMarketValue
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerBalanceSheet AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerBalanceSheet BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="41-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerBalanceSheet_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.FinancialYear AftFinancialYear,Aft.TotalAssets AftTotalAssets,
						  Aft.TotalLiabilities AftTotalLiabilities, Aft.NetProfit AftNetProfit,Aft.NetSales AftNetSales,
						  Aft.NetIncome AftNetIncome, Aft.OperatingProfit AftOperatingProfit,Aft.CashFlow AftCashFlow,
						  Aft.BookValue AftBookValue, Aft.MarketValue AftMarketValue,
	
						  Bef.CustID BefCustID, Bef.FinancialYear BefFinancialYear, Bef.TotalAssets BefTotalAssets,
						  Bef.TotalLiabilities BefTotalLiabilities, Bef.NetProfit BefNetProfit, Bef.NetSales BefNetSales,
						  Bef.NetIncome BefNetIncome, Bef.OperatingProfit BefOperatingProfit, Bef.CashFlow BefCashFlow,
						  Bef.BookValue BefBookValue, Bef.MarketValue BefMarketValue
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerBalanceSheet AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerBalanceSheet BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="42-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerBankInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.BankName AftBankName ,Aft.AccountNumber AftAccountNumber ,
		   Aft.AccountType AftAccountType ,
           Bef.CustID BefCustID ,Bef.BankName BefBankName ,Bef.AccountNumber BefAccountNumber ,
           Bef.AccountType BefAccountType
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerBankInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerBankInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="42-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerBankInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.BankName AftBankName ,Aft.AccountNumber AftAccountNumber ,
		   Aft.AccountType AftAccountType ,
           Bef.CustID BefCustID ,Bef.BankName BefBankName ,Bef.AccountNumber BefAccountNumber ,
           Bef.AccountType BefAccountType
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerBankInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerBankInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="43-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerChequeInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.ChequeSeq AftChequeSeq ,Aft.MonthYear AftMonthYear ,
		   Aft.TotChequePayment AftTotChequePayment ,Aft.Salary AftSalary ,Aft.ReturnChequeAmt AftReturnChequeAmt ,
		   Aft.ReturnChequeCount AftReturnChequeCount ,
		   Bef.CustID BefCustID ,Bef.ChequeSeq BefChequeSeq ,Bef.MonthYear BefMonthYear ,
		   Bef.TotChequePayment BefTotChequePayment ,Bef.Salary BefSalary ,Bef.ReturnChequeAmt BefReturnChequeAmt ,
		   Bef.ReturnChequeCount BefReturnChequeCount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerChequeInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerChequeInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="43-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerChequeInfo_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.ChequeSeq AftChequeSeq ,Aft.MonthYear AftMonthYear ,
		   Aft.TotChequePayment AftTotChequePayment ,Aft.Salary AftSalary ,Aft.ReturnChequeAmt AftReturnChequeAmt ,
		   Aft.ReturnChequeCount AftReturnChequeCount ,
		   Bef.CustID BefCustID ,Bef.ChequeSeq BefChequeSeq ,Bef.MonthYear BefMonthYear ,
		   Bef.TotChequePayment BefTotChequePayment ,Bef.Salary BefSalary ,Bef.ReturnChequeAmt BefReturnChequeAmt ,
		   Bef.ReturnChequeCount BefReturnChequeCount
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerChequeInfo AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerChequeInfo BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="44-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerDocument_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustDocType AftCustDocType,Aft.CustDocTitle AftCustDocTitle,
						  Aft.CustDocSysName AftCustDocSysName, Aft.CustDocRcvdOn AftCustDocRcvdOn,Aft.CustDocExpDate AftCustDocExpDate,
						  Aft.CustDocIssuedOn AftCustDocIssuedOn, Aft.CustDocIssuedCountry AftCustDocIssuedCountry,Aft.CustDocIsVerified AftCustDocIsVerified,
						  Aft.CustDocVerifiedBy AftCustDocVerifiedBy, Aft.CustDocIsAcrive AftCustDocIsAcrive,
	
						Bef.CustID BefCustID, Bef.CustDocType BefCustDocType, Bef.CustDocTitle BefCustDocTitle,
						  Bef.CustDocSysName BefCustDocSysName, Bef.CustDocRcvdOn BefCustDocRcvdOn, Bef.CustDocExpDate BefCustDocExpDate,
						  Bef.CustDocIssuedOn BefCustDocIssuedOn, Bef.CustDocIssuedCountry BefCustDocIssuedCountry, Bef.CustDocIsVerified BefCustDocIsVerified,
						  Bef.CustDocVerifiedBy BefCustDocVerifiedBy, Bef.CustDocIsAcrive BefCustDocIsAcrive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerDocuments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerDocuments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="44-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerDocument_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustDocType AftCustDocType,Aft.CustDocTitle AftCustDocTitle,
						  Aft.CustDocSysName AftCustDocSysName, Aft.CustDocRcvdOn AftCustDocRcvdOn,Aft.CustDocExpDate AftCustDocExpDate,
						  Aft.CustDocIssuedOn AftCustDocIssuedOn, Aft.CustDocIssuedCountry AftCustDocIssuedCountry,Aft.CustDocIsVerified AftCustDocIsVerified,
						  Aft.CustDocVerifiedBy AftCustDocVerifiedBy, Aft.CustDocIsAcrive AftCustDocIsAcrive,
	
						Bef.CustID BefCustID, Bef.CustDocType BefCustDocType, Bef.CustDocTitle BefCustDocTitle,
						  Bef.CustDocSysName BefCustDocSysName, Bef.CustDocRcvdOn BefCustDocRcvdOn, Bef.CustDocExpDate BefCustDocExpDate,
						  Bef.CustDocIssuedOn BefCustDocIssuedOn, Bef.CustDocIssuedCountry BefCustDocIssuedCountry, Bef.CustDocIsVerified BefCustDocIsVerified,
						  Bef.CustDocVerifiedBy BefCustDocVerifiedBy, Bef.CustDocIsAcrive BefCustDocIsAcrive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerDocuments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerDocuments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="45-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerEMail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEMailTypeCode AftCustEMailTypeCode,Aft.CustEMailPriority AftCustEMailPriority,
						  Aft.CustEMail AftCustEMail,
	
						  Bef.CustID BefCustID, Bef.CustEMailTypeCode BefCustEMailTypeCode, Bef.CustEMailPriority BefCustEMailPriority,
						  Bef.CustEMail BefCustEMail
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEMails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEMails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="45-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerEMail_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustEMailTypeCode AftCustEMailTypeCode,Aft.CustEMailPriority AftCustEMailPriority,
						  Aft.CustEMail AftCustEMail,
	
						  Bef.CustID BefCustID, Bef.CustEMailTypeCode BefCustEMailTypeCode, Bef.CustEMailPriority BefCustEMailPriority,
						  Bef.CustEMail BefCustEMail
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerEMails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerEMails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="46-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerExtLiability_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20),TH.AuditDate,106) AuditDate,
		   CONVERT(varchar(35), TH.AuditDate, 108)AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.LiabilitySeq AftLiabilitySeq ,Aft.FinDate AftFinDate ,Aft.FinType AftFinType ,
		   Aft.BankName AftBankName ,Aft.OriginalAmount AftOriginalAmount ,Aft.InstalmentAmount AftInstalmentAmount ,
		   Aft.OutStandingBal AftOutStandingBal ,Aft.FinStatus AftFinStatus ,
		   Bef.CustID BefCustID ,Bef.LiabilitySeq BefLiabilitySeq ,Bef.FinDate BefFinDate ,Bef.FinType BefFinType ,
		   Bef.BankName BefBankName ,Bef.OriginalAmount BefOriginalAmount ,Bef.InstalmentAmount BefInstalmentAmount ,
		   Bef.OutStandingBal BefOutStandingBal ,Bef.FinStatus BefFinStatus
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerExtLiability AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerExtLiability BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="46-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerExtLiability_view">
		SELECT TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
		   COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,
		    ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
		    ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType,
		   Aft.CustID AftCustID ,Aft.LiabilitySeq AftLiabilitySeq ,Aft.FinDate AftFinDate ,Aft.FinType AftFinType ,
		   Aft.BankName AftBankName ,Aft.OriginalAmount AftOriginalAmount ,Aft.InstalmentAmount AftInstalmentAmount ,
		   Aft.OutStandingBal AftOutStandingBal ,Aft.FinStatus AftFinStatus ,
		   Bef.CustID BefCustID ,Bef.LiabilitySeq BefLiabilitySeq ,Bef.FinDate BefFinDate ,Bef.FinType BefFinType ,
		   Bef.BankName BefBankName ,Bef.OriginalAmount BefOriginalAmount ,Bef.InstalmentAmount BefInstalmentAmount ,
		   Bef.OutStandingBal BefOutStandingBal ,Bef.FinStatus BefFinStatus
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtCustomerExtLiability AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtCustomerExtLiability BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="47-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerGroup_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustGrpID AftCustGrpID, Aft.CustGrpCode AftCustGrpCode,Aft.CustGrpDesc AftCustGrpDesc,
						  Aft.CustGrpRO1 AftCustGrpRO1, Aft.CustGrpLimit AftCustGrpLimit,Aft.CustGrpIsActive AftCustGrpIsActive,
						  	
						  Bef.CustGrpID BefCustGrpID, Bef.CustGrpCode BefCustGrpCode, Bef.CustGrpDesc BefCustGrpDesc,
						  Bef.CustGrpRO1 BefCustGrpRO1, Bef.CustGrpLimit BefCustGrpLimit, Bef.CustGrpIsActive BefCustGrpIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="47-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerGroup_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustGrpID AftCustGrpID, Aft.CustGrpCode AftCustGrpCode,Aft.CustGrpDesc AftCustGrpDesc,
						  Aft.CustGrpRO1 AftCustGrpRO1, Aft.CustGrpLimit AftCustGrpLimit,Aft.CustGrpIsActive AftCustGrpIsActive,
						  	
						  Bef.CustGrpID BefCustGrpID, Bef.CustGrpCode BefCustGrpCode, Bef.CustGrpDesc BefCustGrpDesc,
						  Bef.CustGrpRO1 BefCustGrpRO1, Bef.CustGrpLimit BefCustGrpLimit, Bef.CustGrpIsActive BefCustGrpIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="48-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerIdentity_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.IdCustID AftIdCustID, Aft.IdType AftIdType,Aft.IdIssuedBy AftIdIssuedBy,
						  Aft.IdRef AftIdRef, Aft.IdIssueCountry AftIdIssueCountry,Aft.IdIssuedOn AftIdIssuedOn,
						  Aft.IdExpiresOn AftIdExpiresOn, Aft.IdLocation AftIdLocation,
						  Bef.IdCustID BefIdCustID, Bef.IdType BefIdType, Bef.IdIssuedBy BefIdIssuedBy,
						  Bef.IdRef BefIdRef, Bef.IdIssueCountry BefIdIssueCountry, Bef.IdIssuedOn BefIdIssuedOn,
						  Bef.IdExpiresOn BefIdExpiresOn, Bef.IdLocation BefIdLocation
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustIdentities AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustIdentities BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="48-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerIdentity_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.IdCustID AftIdCustID, Aft.IdType AftIdType,Aft.IdIssuedBy AftIdIssuedBy,
						  Aft.IdRef AftIdRef, Aft.IdIssueCountry AftIdIssueCountry,Aft.IdIssuedOn AftIdIssuedOn,
						  Aft.IdExpiresOn AftIdExpiresOn, Aft.IdLocation AftIdLocation,
						  Bef.IdCustID BefIdCustID, Bef.IdType BefIdType, Bef.IdIssuedBy BefIdIssuedBy,
						  Bef.IdRef BefIdRef, Bef.IdIssueCountry BefIdIssueCountry, Bef.IdIssuedOn BefIdIssuedOn,
						  Bef.IdExpiresOn BefIdExpiresOn, Bef.IdLocation BefIdLocation
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustIdentities AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustIdentities BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="49-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerIncome_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustIncomeType AftCustIncomeType,Aft.CustIncome AftCustIncome,
						  Aft.Category AftCategory,
	
						  Bef.CustID BefCustID, Bef.CustIncomeType BefCustIncomeType, Bef.CustIncome BefCustIncome,
						  Bef.Category BefCategory
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerIncomes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerIncomes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')

		</createView>
</changeSet>

<changeSet id="49-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerIncome_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustIncomeType AftCustIncomeType,Aft.CustIncome AftCustIncome,
						  Aft.Category AftCategory,
	
						  Bef.CustID BefCustID, Bef.CustIncomeType BefCustIncomeType, Bef.CustIncome BefCustIncome,
						  Bef.Category BefCategory
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerIncomes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerIncomes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="50-sql" author="Prasad" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerPhoneNumber_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
						  AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.PhoneCustID AftPhoneCustID, Aft.PhoneTypeCode AftPhoneTypeCode,Aft.PhoneCountryCode AftPhoneCountryCode,
						  Aft.PhoneAreaCode AftPhoneAreaCode, Aft.PhoneNumber AftPhoneNumber,
						  	
						  Bef.PhoneCustID BefPhoneCustID, Bef.PhoneTypeCode BefPhoneTypeCode, Bef.PhoneCountryCode BefPhoneCountryCode,
						  Bef.PhoneAreaCode BefPhoneAreaCode, Bef.PhoneNumber BefPhoneNumber
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerPhoneNumbers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerPhoneNumbers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>

<changeSet id="50-oracle" author="Prasad" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerPhoneNumber_View">
		SELECT     TH.AuditId, TH.AuditDate AuditDateTime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,  ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.PhoneCustID AftPhoneCustID, Aft.PhoneTypeCode AftPhoneTypeCode,Aft.PhoneCountryCode AftPhoneCountryCode,
						  Aft.PhoneAreaCode AftPhoneAreaCode, Aft.PhoneNumber AftPhoneNumber,
						  	
						  Bef.PhoneCustID BefPhoneCustID, Bef.PhoneTypeCode BefPhoneTypeCode, Bef.PhoneCountryCode BefPhoneCountryCode,
						  Bef.PhoneAreaCode BefPhoneAreaCode, Bef.PhoneNumber BefPhoneNumber
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerPhoneNumbers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerPhoneNumbers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
		</createView>
</changeSet>
<changeSet id="51-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerPRelation_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.PRRelationCode AftPRRelationCode,Aft.PRRelationCustID AftPRRelationCustID,
						  Aft.PRisGuardian AftPRisGuardian, Aft.PRFName AftPRFName,Aft.PRMName AftPRMName,
						  Aft.PRLName AftPRLName, Aft.PRSName AftPRSName,Aft.PRFNameLclLng AftPRFNameLclLng,
						  Aft.PRMNameLclLng AftPRMNameLclLng, Aft.PRLNameLclLng AftPRLNameLclLng,Aft.PRDOB AftPRDOB,
						  Aft.PRAddrHNbr AftPRAddrHNbr, Aft.PRAddrFNbr AftPRAddrFNbr,Aft.PRAddrStreet AftPRAddrStreet,
						  Aft.PRAddrLine1 AftPRAddrLine1, Aft.PRAddrLine2 AftPRAddrLine2,Aft.PRAddrPOBox AftPRAddrPOBox,
						  Aft.PRAddrCity AftPRAddrCity, Aft.PRAddrProvince AftPRAddrProvince,Aft.PRAddrCountry AftPRAddrCountry,
						  Aft.PRAddrZIP AftPRAddrZIP, Aft.PRPhone AftPRPhone,Aft.PRMail AftPRMail,
	
						  Bef.PRRelationCode BefPRRelationCode, Bef.PRRelationCustID BefPRRelationCustID,
						  Bef.PRisGuardian BefPRisGuardian, Bef.PRFName BefPRFName, Bef.PRMName BefPRMName,
						  Bef.PRLName BefPRLName, Bef.PRSName BefPRSName, Bef.PRFNameLclLng BefPRFNameLclLng,
						  Bef.PRMNameLclLng BefPRMNameLclLng, Bef.PRLNameLclLng BefPRLNameLclLng,Bef.PRDOB BefPRDOB,
						  Bef.PRAddrHNbr BefPRAddrHNbr, Bef.PRAddrFNbr BefPRAddrFNbr, Bef.PRAddrStreet BefPRAddrStreet,
						  Bef.PRAddrLine1 BefPRAddrLine1, Bef.PRAddrLine2 BefPRAddrLine2, Bef.PRAddrPOBox BefPRAddrPOBox,
						  Bef.PRAddrCity BefPRAddrCity, Bef.PRAddrProvince BefPRAddrProvince, Bef.PRAddrCountry BefPRAddrCountry,
						  Bef.PRAddrZIP BefPRAddrZIP, Bef.PRPhone BefPRPhone, Bef.PRMail BefPRMail
						  
	FROM         AuditHeader TH  INNER JOIN
						   SecUsers_View T1   on TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtCustomersPRelations AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtCustomersPRelations BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
						
	</createView>
		</changeSet>

<changeSet id="51-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerPRelation_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,
  ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
									 						 Aft.PRRelationCode AftPRRelationCode,Aft.PRRelationCustID AftPRRelationCustID,
						  Aft.PRisGuardian AftPRisGuardian, Aft.PRFName AftPRFName,Aft.PRMName AftPRMName,
						  Aft.PRLName AftPRLName, Aft.PRSName AftPRSName,Aft.PRFNameLclLng AftPRFNameLclLng,
						  Aft.PRMNameLclLng AftPRMNameLclLng, Aft.PRLNameLclLng AftPRLNameLclLng,Aft.PRDOB AftPRDOB,
						  Aft.PRAddrHNbr AftPRAddrHNbr, Aft.PRAddrFNbr AftPRAddrFNbr,Aft.PRAddrStreet AftPRAddrStreet,
						  Aft.PRAddrLine1 AftPRAddrLine1, Aft.PRAddrLine2 AftPRAddrLine2,Aft.PRAddrPOBox AftPRAddrPOBox,
						  Aft.PRAddrCity AftPRAddrCity, Aft.PRAddrProvince AftPRAddrProvince,Aft.PRAddrCountry AftPRAddrCountry,
						  Aft.PRAddrZIP AftPRAddrZIP, Aft.PRPhone AftPRPhone,Aft.PRMail AftPRMail,
	
						  Bef.PRRelationCode BefPRRelationCode, Bef.PRRelationCustID BefPRRelationCustID,
						  Bef.PRisGuardian BefPRisGuardian, Bef.PRFName BefPRFName, Bef.PRMName BefPRMName,
						  Bef.PRLName BefPRLName, Bef.PRSName BefPRSName, Bef.PRFNameLclLng BefPRFNameLclLng,
						  Bef.PRMNameLclLng BefPRMNameLclLng, Bef.PRLNameLclLng BefPRLNameLclLng,Bef.PRDOB BefPRDOB,
						  Bef.PRAddrHNbr BefPRAddrHNbr, Bef.PRAddrFNbr BefPRAddrFNbr, Bef.PRAddrStreet BefPRAddrStreet,
						  Bef.PRAddrLine1 BefPRAddrLine1, Bef.PRAddrLine2 BefPRAddrLine2, Bef.PRAddrPOBox BefPRAddrPOBox,
						  Bef.PRAddrCity BefPRAddrCity, Bef.PRAddrProvince BefPRAddrProvince, Bef.PRAddrCountry BefPRAddrCountry,
						  Bef.PRAddrZIP BefPRAddrZIP, Bef.PRPhone BefPRPhone, Bef.PRMail BefPRMail
						  
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtCustomersPRelations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtCustomersPRelations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
	</createView>
</changeSet>

<changeSet id="52-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustomerRating_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, 
			   ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustRatingType AftCustRatingType,Aft.CustRatingCode AftCustRatingCode,
						  Aft.CustRating AftCustRating, Aft.ValueType AftValueType,						  	
						  Bef.CustID BefCustID, Bef.CustRatingType BefCustRatingType, Bef.CustRatingCode BefCustRatingCode,
						  Bef.CustRating BefCustRating, Bef.ValueType BefValueType						  
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtCustomerRatings AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtCustomerRatings BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
						
	</createView>
		</changeSet>

<changeSet id="52-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustomerRating_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.CustID AftCustID, Aft.CustRatingType AftCustRatingType,Aft.CustRatingCode AftCustRatingCode,
						  Aft.CustRating AftCustRating, Aft.ValueType AftValueType,						  	
						  Bef.CustID BefCustID, Bef.CustRatingType BefCustRatingType, Bef.CustRatingCode BefCustRatingCode,
						  Bef.CustRating BefCustRating, Bef.ValueType BefValueType						  
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtCustomerRatings AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtCustomerRatings BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
	</createView>
</changeSet>

<changeSet id="53-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustrAdditionalDtl_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId, ${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.CustID AftCustID, Aft.CustAcademicLevel AftCustAcademicLevel,Aft.AcademicDecipline AftAcademicDecipline,
						  Aft.CustRefCustID AftCustRefCustID,Aft.CustRefStaffID AftCustRefStaffID,
						  Bef.CustID BefCustID, Bef.CustAcademicLevel BefCustAcademicLevel, Bef.AcademicDecipline BefAcademicDecipline,
						  Bef.CustRefCustID BefCustRefCustID,Bef.CustRefStaffID BefCustRefStaffID
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 AdtCustAdditionalDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtCustAdditionalDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
						
	</createView>
		</changeSet>

<changeSet id="53-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustrAdditionalDtl_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.CustID AftCustID, Aft.CustAcademicLevel AftCustAcademicLevel,Aft.AcademicDecipline AftAcademicDecipline,
						  Aft.CustRefCustID AftCustRefCustID,Aft.CustRefStaffID AftCustRefStaffID,
						  Bef.CustID BefCustID, Bef.CustAcademicLevel BefCustAcademicLevel, Bef.AcademicDecipline BefAcademicDecipline,
						  Bef.CustRefCustID BefCustRefCustID,Bef.CustRefStaffID BefCustRefStaffID
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						 AdtCustAdditionalDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtCustAdditionalDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
	</createView>
</changeSet>

<changeSet id="54-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustStatusCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.CustStsCode AftCustStsCode, Aft.CustStsDescription AftCustStsDescription, Aft.DueDays AftDueDays,
						  Aft.CustStsIsActive AftCustStsIsActive,
						  Bef.CustStsCode BefCustStsCode, Bef.CustStsDescription BefCustStsDescription, Bef.DueDays BefDueDays,
						  Bef.CustStsIsActive BefCustStsIsActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtBMTCustStatusCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTCustStatusCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
						
	</createView>
		</changeSet>

<changeSet id="54-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustStatusCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
									 Aft.CustStsCode AftCustStsCode, Aft.CustStsDescription AftCustStsDescription, Aft.DueDays AftDueDays,
						  Aft.CustStsIsActive AftCustStsIsActive,
						  Bef.CustStsCode BefCustStsCode, Bef.CustStsDescription BefCustStsDescription, Bef.DueDays BefDueDays,
						  Bef.CustStsIsActive BefCustStsIsActive
	FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtBMTCustStatusCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						  AdtBMTCustStatusCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
	</createView>
</changeSet>

<changeSet id="55-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtCustTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.CustTypeCode AftCustTypeCode, Aft.CustTypeDesc AftCustTypeDesc, Aft.CustTypeIsActive AftCustTypeIsActive,
						  Bef.CustTypeCode BefCustTypeCode, Bef.CustTypeDesc BefCustTypeDesc, Bef.CustTypeIsActive BefCustTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCustTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCustTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
					
						
	</createView>
		</changeSet>

<changeSet id="55-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtCustTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.CustTypeCode AftCustTypeCode, Aft.CustTypeDesc AftCustTypeDesc, Aft.CustTypeIsActive AftCustTypeIsActive,
						  Bef.CustTypeCode BefCustTypeCode, Bef.CustTypeDesc BefCustTypeDesc, Bef.CustTypeIsActive BefCustTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTCustTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTCustTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CustomerDetails')
	</createView>
</changeSet>

<changeSet id="56-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDedupParams_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.QueryCode AftQueryCode, Aft.QueryModule AftQueryModule, Aft.QuerySubCode AftQuerySubCode,
							  Aft.QueryDesc AftQueryDesc, Aft.SQLQuery AftSQLQuery, Aft.ActualBlock AftActualBlock,
							  Bef.QueryCode BefQueryCode, Bef.QueryModule BefQueryModule, Bef.QuerySubCode BefQuerySubCode,
							  Bef.QueryDesc BefQueryDesc,Bef.SQLQuery BefSQLQuery,Bef.ActualBlock BefActualBlock
		FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
							 AdtDedupParams AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
							  AdtDedupParams BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
		WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DedupParm')
					
						
	</createView>
		</changeSet>

<changeSet id="56-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDedupParams_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.QueryCode AftQueryCode, Aft.QueryModule AftQueryModule, Aft.QuerySubCode AftQuerySubCode,
							  Aft.QueryDesc AftQueryDesc, Aft.SQLQuery AftSQLQuery, Aft.ActualBlock AftActualBlock,
							  Bef.QueryCode BefQueryCode, Bef.QueryModule BefQueryModule, Bef.QuerySubCode BefQuerySubCode,
							  Bef.QueryDesc BefQueryDesc,Bef.SQLQuery BefSQLQuery,Bef.ActualBlock BefActualBlock
		FROM         AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
							 AdtDedupParams AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
							  AdtDedupParams BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
		WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DedupParm')
	</createView>
</changeSet>

<changeSet id="57-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDefermentDetail_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.FinReference AftFinReference, Aft.DeferedSchdDate AftDeferedSchdDate,Aft.DefSchdProfit AftDefSchdProfit,
						  Aft.DefSchdPrincipal AftDefSchdPrincipal, Aft.DeferedRpyDate AftDeferedRpyDate,Aft.DefRpySchdPft AftDefRpySchdPft,
						  Aft.DefRpySchdPri AftDefRpySchdPri, Aft.DefRpySchdPftBal AftDefRpySchdPftBal,Aft.DefRpySchdPriBal AftDefRpySchdPriBal,
						  Aft.DefPaidPftTillDate AftDefPaidPftTillDate, Aft.DefPaidPriTillDate AftDefPaidPriTillDate,Aft.DefPftBalance AftDefPftBalance,
						  Aft.DefPriBalance AftDefPriBalance,
						  	
						  Bef.FinReference BefFinReference, Bef.DeferedSchdDate BefDeferedSchdDate, Bef.DefSchdProfit BefDefSchdProfit,
						  Bef.DefSchdPrincipal BefDefSchdPrincipal, Bef.DeferedRpyDate BefDeferedRpyDate, Bef.DefRpySchdPft BefDefRpySchdPft,
						  Bef.DefRpySchdPri BefDefRpySchdPri, Bef.DefRpySchdPftBal BefDefRpySchdPftBal, Bef.DefRpySchdPriBal BefDefRpySchdPriBal,
						  Bef.DefPaidPftTillDate BefDefPaidPftTillDate, Bef.DefPaidPriTillDate BefDefPaidPriTillDate, Bef.DefPftBalance BefDefPftBalance,
						  Bef.DefPriBalance BefDefPriBalance
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtFinDefermentDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinDefermentDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DefermentDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="57-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDefermentDetail_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.FinReference AftFinReference, Aft.DeferedSchdDate AftDeferedSchdDate,Aft.DefSchdProfit AftDefSchdProfit,
						  Aft.DefSchdPrincipal AftDefSchdPrincipal, Aft.DeferedRpyDate AftDeferedRpyDate,Aft.DefRpySchdPft AftDefRpySchdPft,
						  Aft.DefRpySchdPri AftDefRpySchdPri, Aft.DefRpySchdPftBal AftDefRpySchdPftBal,Aft.DefRpySchdPriBal AftDefRpySchdPriBal,
						  Aft.DefPaidPftTillDate AftDefPaidPftTillDate, Aft.DefPaidPriTillDate AftDefPaidPriTillDate,Aft.DefPftBalance AftDefPftBalance,
						  Aft.DefPriBalance AftDefPriBalance,
						  	
						  Bef.FinReference BefFinReference, Bef.DeferedSchdDate BefDeferedSchdDate, Bef.DefSchdProfit BefDefSchdProfit,
						  Bef.DefSchdPrincipal BefDefSchdPrincipal, Bef.DeferedRpyDate BefDeferedRpyDate, Bef.DefRpySchdPft BefDefRpySchdPft,
						  Bef.DefRpySchdPri BefDefRpySchdPri, Bef.DefRpySchdPftBal BefDefRpySchdPftBal, Bef.DefRpySchdPriBal BefDefRpySchdPriBal,
						  Bef.DefPaidPftTillDate BefDefPaidPftTillDate, Bef.DefPaidPriTillDate BefDefPaidPriTillDate, Bef.DefPftBalance BefDefPftBalance,
						  Bef.DefPriBalance BefDefPriBalance
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						  AdtFinDefermentDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinDefermentDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DefermentDetail')
	</createView>
</changeSet>

<changeSet id="58-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDefermentHeader_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.FinReference AftFinReference, Aft.DeferedSchdDate AftDeferedSchdDate,Aft.DefSchdProfit AftDefSchdProfit,
						  Aft.DefSchdPrincipal AftDefSchdPrincipal, Aft.DefRecalType AftDefRecalType,Aft.DefTillDate AftDefTillDate,
						  	
						  Bef.FinReference BefFinReference, Bef.DeferedSchdDate BefDeferedSchdDate, Bef.DefSchdProfit BefDefSchdProfit,
						  Bef.DefSchdPrincipal BefDefSchdPrincipal, Bef.DefRecalType BefDefRecalType,Bef.DefTillDate BefDefTillDate
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinDefermentHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinDefermentHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DefermentHeader')
					
						
	</createView>
		</changeSet>

<changeSet id="58-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDefermentHeader_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 					 Aft.FinReference AftFinReference, Aft.DeferedSchdDate AftDeferedSchdDate,Aft.DefSchdProfit AftDefSchdProfit,
						  Aft.DefSchdPrincipal AftDefSchdPrincipal, Aft.DefRecalType AftDefRecalType,Aft.DefTillDate AftDefTillDate,
						  	
						  Bef.FinReference BefFinReference, Bef.DeferedSchdDate BefDeferedSchdDate, Bef.DefSchdProfit BefDefSchdProfit,
						  Bef.DefSchdPrincipal BefDefSchdPrincipal, Bef.DefRecalType BefDefRecalType,Bef.DefTillDate BefDefTillDate
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinDefermentHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinDefermentHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DefermentHeader')
	</createView>
</changeSet>

<changeSet id="59-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDepartments_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.DeptCode AftDeptCode, Aft.DeptDesc AftDeptDesc, Aft.DeptIsActive AftDeptIsActive,
						  Bef.DeptCode BefDeptCode, Bef.DeptDesc BefDeptDesc, Bef.DeptIsActive BefDeptIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDepartments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDepartments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Department')
					
						
	</createView>
		</changeSet>

<changeSet id="59-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDepartments_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.DeptCode AftDeptCode, Aft.DeptDesc AftDeptDesc, Aft.DeptIsActive AftDeptIsActive,
						  Bef.DeptCode BefDeptCode, Bef.DeptDesc BefDeptDesc, Bef.DeptIsActive BefDeptIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDepartments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDepartments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Department')
	</createView>
</changeSet>

<changeSet id="60-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDesignations_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.DesgCode AftDesgCode, Aft.DesgDesc AftDesgDesc, Aft.DesgIsActive AftDesgIsActive,
						  Bef.DesgCode BefDesgCode, Bef.DesgDesc BefDesgDesc, Bef.DesgIsActive BefDesgIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDesignations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDesignations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Designation')
					
						
	</createView>
		</changeSet>

<changeSet id="60-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDesignations_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
								Aft.DesgCode AftDesgCode, Aft.DesgDesc AftDesgDesc, Aft.DesgIsActive AftDesgIsActive,
						  Bef.DesgCode BefDesgCode, Bef.DesgDesc BefDesgDesc, Bef.DesgIsActive BefDesgIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDesignations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDesignations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Designation')
	</createView>
</changeSet>

<changeSet id="61-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDirectorDetail_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.DirectorId AftDirectorId, Aft.CustID AftCustID,Aft.FirstName AftFirstName,
						  Aft.MiddleName AftMiddleName, Aft.LastName AftLastName,Aft.ShortName AftShortName,
						  Aft.CustGenderCode AftCustGenderCode, Aft.CustSalutationCode AftCustSalutationCode,Aft.CustAddrHNbr AftCustAddrHNbr,
						  Aft.CustFlatNbr AftCustFlatNbr, Aft.CustAddrStreet AftCustAddrStreet,Aft.CustAddrLine1 AftCustAddrLine1,
						  Aft.CustAddrLine2 AftCustAddrLine2, Aft.CustPOBox AftCustPOBox,Aft.CustAddrCity AftCustAddrCity,
						  Aft.CustAddrProvince AftCustAddrProvince, Aft.CustAddrCountry AftCustAddrCountry,Aft.CustAddrZIP AftCustAddrZIP,
						  Aft.CustAddrPhone AftCustAddrPhone, Aft.CustAddrFrom AftCustAddrFrom,
	
						  Bef.DirectorId BefDirectorId, Bef.CustID BefCustID, Bef.FirstName BefFirstName,
						  Bef.MiddleName BefMiddleName, Bef.LastName BefLastName, Bef.ShortName BefShortName,
						  Bef.CustGenderCode BefCustGenderCode, Bef.CustSalutationCode BefCustSalutationCode, Bef.CustAddrHNbr BefCustAddrHNbr,
						  Bef.CustFlatNbr BefCustFlatNbr, Bef.CustAddrStreet BefCustAddrStreet, Bef.CustAddrLine1 BefCustAddrLine1,
						  Bef.CustAddrLine2 BefCustAddrLine2, Bef.CustPOBox BefCustPOBox, Bef.CustAddrCity BefCustAddrCity,
						  Bef.CustAddrProvince BefCustAddrProvince, Bef.CustAddrCountry BefCustAddrCountry, Bef.CustAddrZIP BefCustAddrZIP,
						  Bef.CustAddrPhone BefCustAddrPhone, Bef.CustAddrFrom BefCustAddrFrom
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerDirectorDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerDirectorDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType!= 'W') AND (TH.AuditModule = 'DirectorDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="61-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDirectorDetail_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.DirectorId AftDirectorId, Aft.CustID AftCustID,Aft.FirstName AftFirstName,
						  Aft.MiddleName AftMiddleName, Aft.LastName AftLastName,Aft.ShortName AftShortName,
						  Aft.CustGenderCode AftCustGenderCode, Aft.CustSalutationCode AftCustSalutationCode,Aft.CustAddrHNbr AftCustAddrHNbr,
						  Aft.CustFlatNbr AftCustFlatNbr, Aft.CustAddrStreet AftCustAddrStreet,Aft.CustAddrLine1 AftCustAddrLine1,
						  Aft.CustAddrLine2 AftCustAddrLine2, Aft.CustPOBox AftCustPOBox,Aft.CustAddrCity AftCustAddrCity,
						  Aft.CustAddrProvince AftCustAddrProvince, Aft.CustAddrCountry AftCustAddrCountry,Aft.CustAddrZIP AftCustAddrZIP,
						  Aft.CustAddrPhone AftCustAddrPhone, Aft.CustAddrFrom AftCustAddrFrom,
	
						  Bef.DirectorId BefDirectorId, Bef.CustID BefCustID, Bef.FirstName BefFirstName,
						  Bef.MiddleName BefMiddleName, Bef.LastName BefLastName, Bef.ShortName BefShortName,
						  Bef.CustGenderCode BefCustGenderCode, Bef.CustSalutationCode BefCustSalutationCode, Bef.CustAddrHNbr BefCustAddrHNbr,
						  Bef.CustFlatNbr BefCustFlatNbr, Bef.CustAddrStreet BefCustAddrStreet, Bef.CustAddrLine1 BefCustAddrLine1,
						  Bef.CustAddrLine2 BefCustAddrLine2, Bef.CustPOBox BefCustPOBox, Bef.CustAddrCity BefCustAddrCity,
						  Bef.CustAddrProvince BefCustAddrProvince, Bef.CustAddrCountry BefCustAddrCountry, Bef.CustAddrZIP BefCustAddrZIP,
						  Bef.CustAddrPhone BefCustAddrPhone, Bef.CustAddrFrom BefCustAddrFrom
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtCustomerDirectorDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtCustomerDirectorDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType!= 'W') AND (TH.AuditModule = 'DirectorDetail')
	</createView>
</changeSet>

<changeSet id="62-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDispatchModes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.DispatchModeCode AftDispatchModeCode, Aft.DispatchModeDesc AftDispatchModeDesc, Aft.DispatchModeIsActive AftDispatchModeIsActive,
						  Bef.DispatchModeCode BefDispatchModeCode, Bef.DispatchModeDesc BefDispatchModeDesc, Bef.DispatchModeIsActive BefDispatchModeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDispatchModes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDispatchModes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DispatchMode')
					
						
	</createView>
		</changeSet>

<changeSet id="62-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDispatchModes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.DispatchModeCode AftDispatchModeCode, Aft.DispatchModeDesc AftDispatchModeDesc, Aft.DispatchModeIsActive AftDispatchModeIsActive,
						  Bef.DispatchModeCode BefDispatchModeCode, Bef.DispatchModeDesc BefDispatchModeDesc, Bef.DispatchModeIsActive BefDispatchModeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDispatchModes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDispatchModes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DispatchMode')
	</createView>
</changeSet>

<changeSet id="63-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDocumentDetails_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.DocId AftDocId ,Aft.DocModule AftDocModule ,Aft.DocCategory AftDocCategory ,
		   Aft.ReferenceId AftReferenceId ,Aft.Doctype AftDoctype ,
		   Aft.DocName AftDocName ,Aft.DocImage AftDocImage ,
		   Bef.DocId BefDocId ,Bef.DocModule BefDocModule ,Bef.DocCategory BefDocCategory ,
		   Bef.ReferenceId BefReferenceId ,Bef.Doctype BefDoctype ,
		   Bef.DocName BefDocName ,Bef.DocImage BefDocImage 
	FROM    AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtDocumentDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtDocumentDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="63-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDocumentDetails_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
											 Aft.DocId AftDocId ,Aft.DocModule AftDocModule ,Aft.DocCategory AftDocCategory ,
		   Aft.ReferenceId AftReferenceId ,Aft.Doctype AftDoctype ,
		   Aft.DocName AftDocName ,Aft.DocImage AftDocImage ,
		   Bef.DocId BefDocId ,Bef.DocModule BefDocModule ,Bef.DocCategory BefDocCategory ,
		   Bef.ReferenceId BefReferenceId ,Bef.Doctype BefDoctype ,
		   Bef.DocName BefDocName ,Bef.DocImage BefDocImage 
	FROM    AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtDocumentDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtDocumentDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
	</createView>
</changeSet>


<changeSet id="64-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtDocumentTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.DocTypeCode AftDocTypeCode, Aft.DocTypeDesc AftDocTypeDesc, Aft.DocIsMandatory AftDocIsMandatory,
						  Aft.DocTypeIsActive AftDocTypeIsActive,
						  Bef.DocTypeCode BefDocTypeCode, Bef.DocTypeDesc BefDocTypeDesc, Bef.DocIsMandatory BefDocIsMandatory,
						  Bef.DocTypeIsActive BefDocTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDocumentTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDocumentTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DocumentType')
					
						
	</createView>
		</changeSet>

<changeSet id="64-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtDocumentTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.DocTypeCode AftDocTypeCode, Aft.DocTypeDesc AftDocTypeDesc, Aft.DocIsMandatory AftDocIsMandatory,
						  Aft.DocTypeIsActive AftDocTypeIsActive,
						  Bef.DocTypeCode BefDocTypeCode, Bef.DocTypeDesc BefDocTypeDesc, Bef.DocIsMandatory BefDocIsMandatory,
						  Bef.DocTypeIsActive BefDocTypeIsActive
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTDocumentTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTDocumentTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DocumentType')
	</createView>
</changeSet>

<changeSet id="65-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtEmailTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.EmailTypeCode AftEmailTypeCode, Aft.EmailTypeDesc AftEmailTypeDesc, Aft.EmailTypePriority AftEmailTypePriority,
						  Aft.EmailTypeIsActive AftEmailTypeIsActive,
						  Bef.EmailTypeCode BefEmailTypeCode, Bef.EmailTypeDesc BefEmailTypeDesc, Bef.EmailTypePriority BefEmailTypePriority,
						  Bef.EmailTypeIsActive BefEmailTypeIsActive
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTEMailTypes AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTEMailTypes BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EMailType')
					
						
	</createView>
		</changeSet>

<changeSet id="65-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtEmailTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.EmailTypeCode AftEmailTypeCode, Aft.EmailTypeDesc AftEmailTypeDesc, Aft.EmailTypePriority AftEmailTypePriority,
						  Aft.EmailTypeIsActive AftEmailTypeIsActive,
						  Bef.EmailTypeCode BefEmailTypeCode, Bef.EmailTypeDesc BefEmailTypeDesc, Bef.EmailTypePriority BefEmailTypePriority,
						  Bef.EmailTypeIsActive BefEmailTypeIsActive
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTEMailTypes AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTEMailTypes BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EMailType')
	</createView>
</changeSet>

<changeSet id="66-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtEmployerDetail_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.EmployerId AftEmployerId ,Aft.EmpIndustry AftEmpIndustry ,Aft.EmpName AftEmpName ,
		   Aft.EstablishDate AftEstablishDate ,Aft.EmpAddrHNbr AftEmpAddrHNbr ,Aft.EmpFlatNbr AftEmpFlatNbr ,
		   Aft.EmpAddrStreet AftEmpAddrStreet ,Aft.EmpAddrLine1 AftEmpAddrLine1 ,Aft.EmpAddrLine2 AftEmpAddrLine2 ,
		   Aft.EmpPOBox AftEmpPOBox ,Aft.EmpCountry AftEmpCountry ,Aft.EmpProvince AftEmpProvince ,
		   Aft.EmpCity AftEmpCity ,Aft.EmpPhone AftEmpPhone ,Aft.EmpFax AftEmpFax ,Aft.EmpTelexNo AftEmpTelexNo ,
		   Aft.EmpEmailId AftEmpEmailId ,Aft.EmpWebSite AftEmpWebSite ,Aft.ContactPersonName AftContactPersonName ,
		   Aft.ContactPersonNo AftContactPersonNo ,Aft.EmpAlocationType AftEmpAlocationType ,
		   Bef.EmployerId BefEmployerId ,Bef.EmpIndustry BefEmpIndustry ,Bef.EmpName BefEmpName ,
		   Bef.EstablishDate BefEstablishDate ,Bef.EmpAddrHNbr BefEmpAddrHNbr ,Bef.EmpFlatNbr BefEmpFlatNbr ,
		   Bef.EmpAddrStreet BefEmpAddrStreet ,Bef.EmpAddrLine1 BefEmpAddrLine1 ,Bef.EmpAddrLine2 BefEmpAddrLine2 ,
		   Bef.EmpPOBox BefEmpPOBox ,Bef.EmpCountry BefEmpCountry ,Bef.EmpProvince BefEmpProvince ,
		   Bef.EmpCity BefEmpCity ,Bef.EmpPhone BefEmpPhone ,Bef.EmpFax BefEmpFax ,Bef.EmpTelexNo BefEmpTelexNo ,
		   Bef.EmpEmailId BefEmpEmailId ,Bef.EmpWebSite BefEmpWebSite ,Bef.ContactPersonName BefContactPersonName ,
		   Bef.ContactPersonNo BefContactPersonNo ,Bef.EmpAlocationType BefEmpAlocationType
	FROM    AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtEmployerDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtEmployerDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EmployerDetail')

					
						
	</createView>
		</changeSet>

<changeSet id="66-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtEmployerDetail_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.EmployerId AftEmployerId ,Aft.EmpIndustry AftEmpIndustry ,Aft.EmpName AftEmpName ,
		   Aft.EstablishDate AftEstablishDate ,Aft.EmpAddrHNbr AftEmpAddrHNbr ,Aft.EmpFlatNbr AftEmpFlatNbr ,
		   Aft.EmpAddrStreet AftEmpAddrStreet ,Aft.EmpAddrLine1 AftEmpAddrLine1 ,Aft.EmpAddrLine2 AftEmpAddrLine2 ,
		   Aft.EmpPOBox AftEmpPOBox ,Aft.EmpCountry AftEmpCountry ,Aft.EmpProvince AftEmpProvince ,
		   Aft.EmpCity AftEmpCity ,Aft.EmpPhone AftEmpPhone ,Aft.EmpFax AftEmpFax ,Aft.EmpTelexNo AftEmpTelexNo ,
		   Aft.EmpEmailId AftEmpEmailId ,Aft.EmpWebSite AftEmpWebSite ,Aft.ContactPersonName AftContactPersonName ,
		   Aft.ContactPersonNo AftContactPersonNo ,Aft.EmpAlocationType AftEmpAlocationType ,
		   Bef.EmployerId BefEmployerId ,Bef.EmpIndustry BefEmpIndustry ,Bef.EmpName BefEmpName ,
		   Bef.EstablishDate BefEstablishDate ,Bef.EmpAddrHNbr BefEmpAddrHNbr ,Bef.EmpFlatNbr BefEmpFlatNbr ,
		   Bef.EmpAddrStreet BefEmpAddrStreet ,Bef.EmpAddrLine1 BefEmpAddrLine1 ,Bef.EmpAddrLine2 BefEmpAddrLine2 ,
		   Bef.EmpPOBox BefEmpPOBox ,Bef.EmpCountry BefEmpCountry ,Bef.EmpProvince BefEmpProvince ,
		   Bef.EmpCity BefEmpCity ,Bef.EmpPhone BefEmpPhone ,Bef.EmpFax BefEmpFax ,Bef.EmpTelexNo BefEmpTelexNo ,
		   Bef.EmpEmailId BefEmpEmailId ,Bef.EmpWebSite BefEmpWebSite ,Bef.ContactPersonName BefContactPersonName ,
		   Bef.ContactPersonNo BefContactPersonNo ,Bef.EmpAlocationType BefEmpAlocationType
	FROM    AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtEmployerDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtEmployerDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EmployerDetail')
	</createView>
</changeSet>

<changeSet id="67-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtEmpStsCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.EmpStsCode AftEmpStsCode, Aft.EmpStsDesc AftEmpStsDesc,Aft.EmpStsIsActive AftEmpStsIsActive,
						  Bef.EmpStsCode BefEmpStsCode, Bef.EmpStsDesc BefEmpStsDesc, Bef.EmpStsIsActive BefEmpStsIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTEmpStsCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTEmpStsCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EmpStsCode')

					
						
	</createView>
		</changeSet>

<changeSet id="67-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtEmpStsCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.EmpStsCode AftEmpStsCode, Aft.EmpStsDesc AftEmpStsDesc,Aft.EmpStsIsActive AftEmpStsIsActive,
						  Bef.EmpStsCode BefEmpStsCode, Bef.EmpStsDesc BefEmpStsDesc, Bef.EmpStsIsActive BefEmpStsIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTEmpStsCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTEmpStsCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EmpStsCode')
	</createView>
</changeSet>

<changeSet id="68-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtEmpTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.EmpType AftEmpType, Aft.EmpTypeDesc AftEmpTypeDesc,
						  Bef.EmpType BefEmpType, Bef.EmpTypeDesc BefEmpTypeDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTEmpTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTEmpTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EmploymentType')

					
						
	</createView>
		</changeSet>

<changeSet id="68-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtEmpTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.EmpType AftEmpType, Aft.EmpTypeDesc AftEmpTypeDesc,
						  Bef.EmpType BefEmpType, Bef.EmpTypeDesc BefEmpTypeDesc
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTEmpTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTEmpTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'EmploymentType')
	</createView>
</changeSet>

<changeSet id="69-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtExpenseType_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.ExpenceTypeId AftExpenceTypeId, Aft.ExpenceTypeName AftExpenceTypeName,
					Bef.ExpenceTypeId BefExpenceTypeId, Bef.ExpenceTypeName BefExpenceTypeName
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTExpenseType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTExpenseType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ExpenseType')

					
						
	</createView>
		</changeSet>

<changeSet id="69-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtExpenseType_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.ExpenceTypeId AftExpenceTypeId, Aft.ExpenceTypeName AftExpenceTypeName,
					Bef.ExpenceTypeId BefExpenceTypeId, Bef.ExpenceTypeName BefExpenceTypeName
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTExpenseType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTExpenseType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ExpenseType')
	</createView>
</changeSet>

<changeSet id="70-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtExtendedFieldDetail_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					 Aft.ModuleId AftModuleId, Aft.FieldName AftFieldName,Aft.FieldType AftFieldType,
							  Aft.FieldLength AftFieldLength, Aft.FieldPrec AftFieldPrec,Aft.FieldLabel AftFieldLabel,
							  Aft.FieldMandatory AftFieldMandatory, Aft.FieldConstraint AftFieldConstraint,Aft.FieldSeqOrder AftFieldSeqOrder,
							  Aft.FieldList AftFieldList,Aft.FieldDefaultValue AftFieldDefaultValue,
							  Aft.FieldMinValue AftFieldMinValue, Aft.FieldMaxValue AftFieldMaxValue,Aft.FieldUnique AftFieldUnique,						  	
							  Bef.ModuleId BefModuleId, Bef.FieldName BefFieldName, Bef.FieldType BefFieldType,
							  Bef.FieldLength BefFieldLength, Bef.FieldPrec BefFieldPrec, Bef.FieldLabel BefFieldLabel,
							  Bef.FieldMandatory BefFieldMandatory, Bef.FieldConstraint BefFieldConstraint, Bef.FieldSeqOrder BefFieldSeqOrder,
							  Bef.FieldList BefFieldList, Bef.FieldDefaultValue BefFieldDefaultValue,
							  Bef.FieldMinValue BefFieldMinValue, Bef.FieldMaxValue BefFieldMaxValue, Bef.FieldUnique BefFieldUnique
		FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
							   AdtExtendedFieldDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
							   AdtExtendedFieldDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
		WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ExtendedFieldHeader')

					
						
	</createView>
		</changeSet>

<changeSet id="70-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtExtendedFieldDetail_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.ModuleId AftModuleId, Aft.FieldName AftFieldName,Aft.FieldType AftFieldType,
							  Aft.FieldLength AftFieldLength, Aft.FieldPrec AftFieldPrec,Aft.FieldLabel AftFieldLabel,
							  Aft.FieldMandatory AftFieldMandatory, Aft.FieldConstraint AftFieldConstraint,Aft.FieldSeqOrder AftFieldSeqOrder,
							  Aft.FieldList AftFieldList,Aft.FieldDefaultValue AftFieldDefaultValue,
							  Aft.FieldMinValue AftFieldMinValue, Aft.FieldMaxValue AftFieldMaxValue,Aft.FieldUnique AftFieldUnique,						  	
							  Bef.ModuleId BefModuleId, Bef.FieldName BefFieldName, Bef.FieldType BefFieldType,
							  Bef.FieldLength BefFieldLength, Bef.FieldPrec BefFieldPrec, Bef.FieldLabel BefFieldLabel,
							  Bef.FieldMandatory BefFieldMandatory, Bef.FieldConstraint BefFieldConstraint, Bef.FieldSeqOrder BefFieldSeqOrder,
							  Bef.FieldList BefFieldList, Bef.FieldDefaultValue BefFieldDefaultValue,
							  Bef.FieldMinValue BefFieldMinValue, Bef.FieldMaxValue BefFieldMaxValue, Bef.FieldUnique BefFieldUnique
		FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
							   AdtExtendedFieldDetail AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
							   AdtExtendedFieldDetail BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
		WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ExtendedFieldHeader')
	</createView>
</changeSet>

<changeSet id="71-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtExtendedFieldHeader_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.ModuleId AftModuleId, Aft.ModuleName AftModuleName,Aft.SubModuleName AftSubModuleName,
						  Aft.TabHeading AftTabHeading,Aft.NumberOfColumns AftNumberOfColumns,
						  Bef.ModuleId BefModuleId, Bef.ModuleName BefModuleName, Bef.SubModuleName BefSubModuleName,
						  Bef.TabHeading BefTabHeading,Bef.NumberOfColumns BefNumberOfColumns
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtExtendedFieldHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtExtendedFieldHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ExtendedFieldHeader')

					
						
	</createView>
		</changeSet>

<changeSet id="71-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtExtendedFieldHeader_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.ModuleId AftModuleId, Aft.ModuleName AftModuleName,Aft.SubModuleName AftSubModuleName,
						  Aft.TabHeading AftTabHeading,Aft.NumberOfColumns AftNumberOfColumns,
						  Bef.ModuleId BefModuleId, Bef.ModuleName BefModuleName, Bef.SubModuleName BefSubModuleName,
						  Bef.TabHeading BefTabHeading,Bef.NumberOfColumns BefNumberOfColumns
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtExtendedFieldHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtExtendedFieldHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ExtendedFieldHeader')
	</createView>
</changeSet>

<changeSet id="72-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFacilityDetails_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.CAFReference AftCAFReference ,Aft.FacilityRef AftFacilityRef ,Aft.TermSheetRef AftTermSheetRef ,
		   Aft.FacilityFor AftFacilityFor ,Aft.FacilityType AftFacilityType ,Aft.FacilityCCY AftFacilityCCY ,
		   Aft.Exposure AftExposure ,Aft.ExistingLimit AftExistingLimit ,Aft.NewLimit AftNewLimit ,
		   Aft.FinanceAmount AftFinanceAmount ,Aft.Pricing AftPricing ,Aft.Repayments AftRepayments ,
		   Aft.RateType AftRateType ,Aft.LCPeriod AftLCPeriod ,Aft.UsancePeriod AftUsancePeriod ,
		   Aft.SecurityClean AftSecurityClean ,Aft.SecurityDesc AftSecurityDesc ,Aft.Utilization AftUtilization ,
		   Aft.Commission AftCommission ,Aft.Purpose AftPurpose ,Aft.CustID AftCustID ,Aft.StartDate AftStartDate ,
		   Aft.MaturityDate AftMaturityDate ,Aft.Guarantee AftGuarantee ,Aft.Covenants AftCovenants ,
		   Aft.tenorYear AfttenorYear ,Aft.tenorMonth AfttenorMonth ,Aft.tenorDesc AfttenorDesc ,
		   Aft.DocumentsRequired AftDocumentsRequired ,Aft.transactionType AfttransactionType ,
		   Aft.agentBank AftagentBank ,Aft.otherDetails AftotherDetails ,Aft.totalFacility AfttotalFacility ,
		   Aft.totalFacilityCcy AfttotalFacilityCcy ,Aft.underWriting AftunderWriting ,
		   Aft.underWritingCcy AftunderWritingCcy ,Aft.propFinalTake AftpropFinalTake ,
		   Aft.propFinalTakeCcy AftpropFinalTakeCcy ,
		   Bef.CAFReference BefCAFReference ,Bef.FacilityRef BefFacilityRef ,Bef.TermSheetRef BefTermSheetRef ,
		   Bef.FacilityFor BefFacilityFor ,Bef.FacilityType BefFacilityType ,Bef.FacilityCCY BefFacilityCCY ,
		   Bef.Exposure BefExposure ,Bef.ExistingLimit BefExistingLimit ,Bef.NewLimit BefNewLimit ,
		   Bef.FinanceAmount BefFinanceAmount ,Bef.Pricing BefPricing ,Bef.Repayments BefRepayments ,
		   Bef.RateType BefRateType ,Bef.LCPeriod BefLCPeriod ,Bef.UsancePeriod BefUsancePeriod ,
		   Bef.SecurityClean BefSecurityClean ,Bef.SecurityDesc BefSecurityDesc ,Bef.Utilization BefUtilization ,
		   Bef.Commission BefCommission ,Bef.Purpose BefPurpose ,Bef.CustID BefCustID ,Bef.StartDate BefStartDate ,
		   Bef.MaturityDate BefMaturityDate ,Bef.Guarantee BefGuarantee ,Bef.Covenants BefCovenants ,
		   Bef.tenorYear BeftenorYear ,Bef.tenorMonth BeftenorMonth ,Bef.tenorDesc BeftenorDesc ,
		   Bef.DocumentsRequired BefDocumentsRequired ,Bef.transactionType BeftransactionType ,
		   Bef.agentBank BefagentBank ,Bef.otherDetails BefotherDetails ,Bef.totalFacility BeftotalFacility ,
		   Bef.totalFacilityCcy BeftotalFacilityCcy ,Bef.underWriting BefunderWriting ,
		   Bef.underWritingCcy BefunderWritingCcy ,Bef.propFinalTake BefpropFinalTake ,
		   Bef.propFinalTakeCcy BefpropFinalTakeCcy
	FROM    AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFacilityDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFacilityDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Facility')
					
						
	</createView>
		</changeSet>

<changeSet id="72-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFacilityDetails_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.CAFReference AftCAFReference ,Aft.FacilityRef AftFacilityRef ,Aft.TermSheetRef AftTermSheetRef ,
		   Aft.FacilityFor AftFacilityFor ,Aft.FacilityType AftFacilityType ,Aft.FacilityCCY AftFacilityCCY ,
		   Aft.Exposure AftExposure ,Aft.ExistingLimit AftExistingLimit ,Aft.NewLimit AftNewLimit ,
		   Aft.FinanceAmount AftFinanceAmount ,Aft.Pricing AftPricing ,Aft.Repayments AftRepayments ,
		   Aft.RateType AftRateType ,Aft.LCPeriod AftLCPeriod ,Aft.UsancePeriod AftUsancePeriod ,
		   Aft.SecurityClean AftSecurityClean ,Aft.SecurityDesc AftSecurityDesc ,Aft.Utilization AftUtilization ,
		   Aft.Commission AftCommission ,Aft.Purpose AftPurpose ,Aft.CustID AftCustID ,Aft.StartDate AftStartDate ,
		   Aft.MaturityDate AftMaturityDate ,Aft.Guarantee AftGuarantee ,Aft.Covenants AftCovenants ,
		   Aft.tenorYear AfttenorYear ,Aft.tenorMonth AfttenorMonth ,Aft.tenorDesc AfttenorDesc ,
		   Aft.DocumentsRequired AftDocumentsRequired ,Aft.transactionType AfttransactionType ,
		   Aft.agentBank AftagentBank ,Aft.otherDetails AftotherDetails ,Aft.totalFacility AfttotalFacility ,
		   Aft.totalFacilityCcy AfttotalFacilityCcy ,Aft.underWriting AftunderWriting ,
		   Aft.underWritingCcy AftunderWritingCcy ,Aft.propFinalTake AftpropFinalTake ,
		   Aft.propFinalTakeCcy AftpropFinalTakeCcy ,
		   Bef.CAFReference BefCAFReference ,Bef.FacilityRef BefFacilityRef ,Bef.TermSheetRef BefTermSheetRef ,
		   Bef.FacilityFor BefFacilityFor ,Bef.FacilityType BefFacilityType ,Bef.FacilityCCY BefFacilityCCY ,
		   Bef.Exposure BefExposure ,Bef.ExistingLimit BefExistingLimit ,Bef.NewLimit BefNewLimit ,
		   Bef.FinanceAmount BefFinanceAmount ,Bef.Pricing BefPricing ,Bef.Repayments BefRepayments ,
		   Bef.RateType BefRateType ,Bef.LCPeriod BefLCPeriod ,Bef.UsancePeriod BefUsancePeriod ,
		   Bef.SecurityClean BefSecurityClean ,Bef.SecurityDesc BefSecurityDesc ,Bef.Utilization BefUtilization ,
		   Bef.Commission BefCommission ,Bef.Purpose BefPurpose ,Bef.CustID BefCustID ,Bef.StartDate BefStartDate ,
		   Bef.MaturityDate BefMaturityDate ,Bef.Guarantee BefGuarantee ,Bef.Covenants BefCovenants ,
		   Bef.tenorYear BeftenorYear ,Bef.tenorMonth BeftenorMonth ,Bef.tenorDesc BeftenorDesc ,
		   Bef.DocumentsRequired BefDocumentsRequired ,Bef.transactionType BeftransactionType ,
		   Bef.agentBank BefagentBank ,Bef.otherDetails BefotherDetails ,Bef.totalFacility BeftotalFacility ,
		   Bef.totalFacilityCcy BeftotalFacilityCcy ,Bef.underWriting BefunderWriting ,
		   Bef.underWritingCcy BefunderWritingCcy ,Bef.propFinalTake BefpropFinalTake ,
		   Bef.propFinalTakeCcy BefpropFinalTakeCcy
	FROM    AuditHeader TH  INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFacilityDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFacilityDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Facility')
	</createView>
</changeSet>

<changeSet id="73-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFCMTCommodityDetail_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.CommodityCode AftCommodityCode ,Aft.CommodityName AftCommodityName ,
		   Aft.CommodityUnitCode AftCommodityUnitCode ,Aft.CommodityUnitName AftCommodityUnitName ,
		   Bef.CommodityCode BefCommodityCode ,Bef.CommodityName BefCommodityName ,
		   Bef.CommodityUnitCode BefCommodityUnitCode ,Bef.CommodityUnitName BefCommodityUnitName
	FROM    AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFCMTCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFCMTCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="73-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFCMTCommodityDetail_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.CommodityCode AftCommodityCode ,Aft.CommodityName AftCommodityName ,
		   Aft.CommodityUnitCode AftCommodityUnitCode ,Aft.CommodityUnitName AftCommodityUnitName ,
		   Bef.CommodityCode BefCommodityCode ,Bef.CommodityName BefCommodityName ,
		   Bef.CommodityUnitCode BefCommodityUnitCode ,Bef.CommodityUnitName BefCommodityUnitName
	FROM    AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFCMTCommodityDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFCMTCommodityDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityDetail')
	</createView>
</changeSet>

<changeSet id="74-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFCMTCommodityInventory_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.CommodityInvId AftCommodityInvId, Aft.BrokerCode AftBrokerCode, Aft.HoldCertificateNo AftHoldCertificateNo,Aft.CommodityCode AftCommodityCode,
			   Aft.PurchaseDate AftPurchaseDate, Aft.FinalSettlementDate AftFinalSettlementDate, Aft.PurchaseAmount AftPurchaseAmount,
			   Aft.Units AftUnits,Aft.Quantity AftQuantity,Aft.Location AftLocation,Aft.BulkPurchase AftBulkPurchase,
               Bef.CommodityInvId BefCommodityInvId, Bef.BrokerCode BefBrokerCode, Bef.HoldCertificateNo BefHoldCertificateNo,Bef.CommodityCode BefCommodityCode,
			   Bef.PurchaseDate BefPurchaseDate, Bef.FinalSettlementDate BefFinalSettlementDate, Bef.PurchaseAmount BefPurchaseAmount,
			   Bef.Units BefUnits,Bef.Quantity BefQuantity,Bef.Location BefLocation,Bef.BulkPurchase BefBulkPurchase			   
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTCommodityInventory AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTCommodityInventory BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityInventory')
					
						
	</createView>
		</changeSet>

<changeSet id="74-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFCMTCommodityInventory_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.CommodityInvId AftCommodityInvId, Aft.BrokerCode AftBrokerCode, Aft.HoldCertificateNo AftHoldCertificateNo,Aft.CommodityCode AftCommodityCode,
			   Aft.PurchaseDate AftPurchaseDate, Aft.FinalSettlementDate AftFinalSettlementDate, Aft.PurchaseAmount AftPurchaseAmount,
			   Aft.Units AftUnits,Aft.Quantity AftQuantity,Aft.Location AftLocation,Aft.BulkPurchase AftBulkPurchase,
               Bef.CommodityInvId BefCommodityInvId, Bef.BrokerCode BefBrokerCode, Bef.HoldCertificateNo BefHoldCertificateNo,Bef.CommodityCode BefCommodityCode,
			   Bef.PurchaseDate BefPurchaseDate, Bef.FinalSettlementDate BefFinalSettlementDate, Bef.PurchaseAmount BefPurchaseAmount,
			   Bef.Units BefUnits,Bef.Quantity BefQuantity,Bef.Location BefLocation,Bef.BulkPurchase BefBulkPurchase			   
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFCMTCommodityInventory AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFCMTCommodityInventory BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CommodityInventory')
	</createView>
</changeSet>

<changeSet id="75-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceDeviations_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.DeviationId AftDeviationId,
			  Aft.FinReference AftFinReference,Aft.Module AftModule,Aft.DeviationCode AftDeviationCode,Aft.DeviationType AftDeviationType,Aft.DeviationValue AftDeviationValue,
			  Aft.UserRole AftUserRole,Aft.DelegationRole AftDelegationRole,Aft.ApprovalStatus AftApprovalStatus,Aft.DeviationDate AftDeviationDate,
			  Aft.DeviationUserId AftDeviationUserId,Aft.DelegatedUserId AftDelegatedUserId, 
			  Bef.DeviationId BefDeviationId,Bef.FinReference BefFinReference,Bef.Module BefModule,Bef.DeviationCode BefDeviationCode,Bef.DeviationType BefDeviationType,
			  Bef.DeviationValue BefDeviationValue,Bef.UserRole BefUserRole,Bef.DelegationRole BefDelegationRole,Bef.ApprovalStatus BefApprovalStatus,
			  Bef.DeviationDate BefDeviationDate,Bef.DeviationUserId BefDeviationUserId,Bef.DelegatedUserId BefDelegatedUserId  
	FROM       AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtFinanceDeviations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtFinanceDeviations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDeviations')
					
						
	</createView>
		</changeSet>

<changeSet id="75-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceDeviations_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.DeviationId AftDeviationId,
			  Aft.FinReference AftFinReference,Aft.Module AftModule,Aft.DeviationCode AftDeviationCode,Aft.DeviationType AftDeviationType,Aft.DeviationValue AftDeviationValue,
			  Aft.UserRole AftUserRole,Aft.DelegationRole AftDelegationRole,Aft.ApprovalStatus AftApprovalStatus,Aft.DeviationDate AftDeviationDate,
			  Aft.DeviationUserId AftDeviationUserId,Aft.DelegatedUserId AftDelegatedUserId, 
			  Bef.DeviationId BefDeviationId,Bef.FinReference BefFinReference,Bef.Module BefModule,Bef.DeviationCode BefDeviationCode,Bef.DeviationType BefDeviationType,
			  Bef.DeviationValue BefDeviationValue,Bef.UserRole BefUserRole,Bef.DelegationRole BefDelegationRole,Bef.ApprovalStatus BefApprovalStatus,
			  Bef.DeviationDate BefDeviationDate,Bef.DeviationUserId BefDeviationUserId,Bef.DelegatedUserId BefDelegatedUserId  
	FROM       AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtFinanceDeviations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtFinanceDeviations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDeviations')
	</createView>
</changeSet>

<changeSet id="76-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceDisbursement_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.FinReference AftFinReference, Aft.DisbDate AftDisbDate,Aft.DisbSeq AftDisbSeq,
						  Aft.DisbDesc AftDisbDesc, Aft.DisbAccountId AftDisbAccountId,Aft.DisbAmount AftDisbAmount,
						  Aft.FeeChargeAmt AftFeeChargeAmt, Aft.DisbReqDate AftDisbReqDate,Aft.DisbDisbursed AftDisbDisbursed,
						  Aft.DisbIsActive AftDisbIsActive, Aft.DisbRemarks AftDisbRemarks,
						  	
						  Bef.FinReference BefFinReference, Bef.DisbDate BefDisbDate, Bef.DisbSeq BefDisbSeq,
						  Bef.DisbDesc BefDisbDesc, Bef.DisbAccountId BefDisbAccountId, Bef.DisbAmount BefDisbAmount,
						  Bef.FeeChargeAmt BefFeeChargeAmt, Bef.DisbReqDate BefDisbReqDate, Bef.DisbDisbursed BefDisbDisbursed,
						  Bef.DisbIsActive BefDisbIsActive, Bef.DisbRemarks BefDisbRemarks
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinDisbursementDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinDisbursementDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDisbursement')
					
						
	</createView>
		</changeSet>

<changeSet id="76-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceDisbursement_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference, Aft.DisbDate AftDisbDate,Aft.DisbSeq AftDisbSeq,
						  Aft.DisbDesc AftDisbDesc, Aft.DisbAccountId AftDisbAccountId,Aft.DisbAmount AftDisbAmount,
						  Aft.FeeChargeAmt AftFeeChargeAmt, Aft.DisbReqDate AftDisbReqDate,Aft.DisbDisbursed AftDisbDisbursed,
						  Aft.DisbIsActive AftDisbIsActive, Aft.DisbRemarks AftDisbRemarks,
						  	
						  Bef.FinReference BefFinReference, Bef.DisbDate BefDisbDate, Bef.DisbSeq BefDisbSeq,
						  Bef.DisbDesc BefDisbDesc, Bef.DisbAccountId BefDisbAccountId, Bef.DisbAmount BefDisbAmount,
						  Bef.FeeChargeAmt BefFeeChargeAmt, Bef.DisbReqDate BefDisbReqDate, Bef.DisbDisbursed BefDisbDisbursed,
						  Bef.DisbIsActive BefDisbIsActive, Bef.DisbRemarks BefDisbRemarks
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinDisbursementDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinDisbursementDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDisbursement')
	</createView>
</changeSet>

<changeSet id="77-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceMain_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					 Aft.FinReference AftFinReference  ,
          Aft.FinBranch AftFinBranch  ,
          Aft.FinSourceID AftFinSourceID  ,
          Aft.NumberOfTerms AftNumberOfTerms  ,
          Aft.GrcPeriodEndDate AftGrcPeriodEndDate  ,
          Aft.AllowGrcPeriod AftAllowGrcPeriod  ,
          Aft.GraceBaseRate AftGraceBaseRate  ,
          Aft.GraceSpecialRate AftGraceSpecialRate  ,
          Aft.GrcMargin AftGrcMargin  ,
          Aft.GrcPftRate AftGrcPftRate  ,
          Aft.GrcPftFrq AftGrcPftFrq  ,
          Aft.NextGrcPftDate AftNextGrcPftDate  ,
          Aft.AllowGrcPftRvw AftAllowGrcPftRvw  ,
          Aft.AllowGrcCpz AftAllowGrcCpz  ,
          Aft.GrcCpzFrq AftGrcCpzFrq  ,
          Aft.NextGrcCpzDate AftNextGrcCpzDate  ,
          Aft.AllowGrcRepay AftAllowGrcRepay  ,
          Aft.GrcSchdMthd AftGrcSchdMthd  ,
          Aft.RepayBaseRate AftRepayBaseRate  ,
          Aft.RepaySpecialRate AftRepaySpecialRate  ,
          Aft.RepayMargin AftRepayMargin  ,
          Aft.RepayProfitRate AftRepayProfitRate  ,
          Aft.FinRepayPftOnFrq AftFinRepayPftOnFrq  ,
          Aft.RepayFrq AftRepayFrq  ,
          Aft.NextRepayDate AftNextRepayDate  ,
          Aft.RepayPftFrq AftRepayPftFrq  ,
          Aft.NextRepayPftDate AftNextRepayPftDate  ,
          Aft.AllowRepayRvw AftAllowRepayRvw  ,
          Aft.RepayRvwFrq AftRepayRvwFrq  ,
          Aft.NextRepayRvwDate AftNextRepayRvwDate  ,
          Aft.AllowRepayCpz AftAllowRepayCpz  ,
          Aft.RepayCpzFrq AftRepayCpzFrq  ,
          Aft.NextRepayCpzDate AftNextRepayCpzDate  ,
          Aft.MaturityDate AftMaturityDate  ,
          Aft.CpzAtGraceEnd AftCpzAtGraceEnd  ,
          Aft.DownPayment AftDownPayment  ,
          Aft.GraceFlatAmount AftGraceFlatAmount  ,
          Aft.ReqRepayAmount AftReqRepayAmount  ,
          Aft.TotalProfit AftTotalProfit  ,
          Aft.TotalCpz AftTotalCpz  ,
          Aft.TotalGrossPft AftTotalGrossPft  ,
          Aft.TotalGrossGrcPft AftTotalGrossGrcPft  ,
          Aft.RecalType AftRecalType  ,
          Aft.GrcPftRvwFrq AftGrcPftRvwFrq  ,
          Aft.NextGrcPftRvwDate AftNextGrcPftRvwDate  ,
          Bef.FinReference BefFinReference  ,
          Bef.FinBranch BefFinBranch  ,
          Bef.FinSourceID BefFinSourceID  ,
          Bef.NumberOfTerms BefNumberOfTerms  ,
          Bef.GrcPeriodEndDate BefGrcPeriodEndDate  ,
          Bef.AllowGrcPeriod BefAllowGrcPeriod  ,
          Bef.GraceBaseRate BefGraceBaseRate  ,
          Bef.GraceSpecialRate BefGraceSpecialRate  ,
          Bef.GrcMargin BefGrcMargin  ,
          Bef.GrcPftRate BefGrcPftRate  ,
          Bef.GrcPftFrq BefGrcPftFrq  ,
          Bef.NextGrcPftDate BefNextGrcPftDate  ,
          Bef.AllowGrcPftRvw BefAllowGrcPftRvw  ,
          Bef.AllowGrcCpz BefAllowGrcCpz  ,
          Bef.GrcCpzFrq BefGrcCpzFrq  ,
          Bef.NextGrcCpzDate BefNextGrcCpzDate  ,
          Bef.AllowGrcRepay BefAllowGrcRepay  ,
          Bef.GrcSchdMthd BefGrcSchdMthd  ,
          Bef.RepayBaseRate BefRepayBaseRate  ,
          Bef.RepaySpecialRate BefRepaySpecialRate  ,
          Bef.RepayMargin BefRepayMargin  ,
          Bef.RepayProfitRate BefRepayProfitRate  ,
          Bef.FinRepayPftOnFrq BefFinRepayPftOnFrq  ,
          Bef.RepayFrq BefRepayFrq  ,
          Bef.NextRepayDate BefNextRepayDate  ,
          Bef.RepayPftFrq BefRepayPftFrq  ,
          Bef.NextRepayPftDate BefNextRepayPftDate  ,
          Bef.AllowRepayRvw BefAllowRepayRvw  ,
          Bef.RepayRvwFrq BefRepayRvwFrq  ,
          Bef.NextRepayRvwDate BefNextRepayRvwDate  ,
          Bef.AllowRepayCpz BefAllowRepayCpz  ,
          Bef.RepayCpzFrq BefRepayCpzFrq  ,
          Bef.NextRepayCpzDate BefNextRepayCpzDate  ,
          Bef.MaturityDate BefMaturityDate  ,
          Bef.CpzAtGraceEnd BefCpzAtGraceEnd  ,
          Bef.DownPayment BefDownPayment  ,
          Bef.GraceFlatAmount BefGraceFlatAmount  ,
          Bef.ReqRepayAmount BefReqRepayAmount  ,
          Bef.TotalProfit BefTotalProfit  ,
          Bef.TotalCpz BefTotalCpz  ,
          Bef.TotalGrossPft BefTotalGrossPft  ,
          Bef.TotalGrossGrcPft BefTotalGrossGrcPft  ,
          Bef.RecalType BefRecalType  ,
          Bef.GrcPftRvwFrq BefGrcPftRvwFrq  ,
          Bef.NextGrcPftRvwDate BefNextGrcPftRvwDate  
     FROM AuditHeader TH
            JOIN SecUsers_View T1
             ON TH.AuditUsrId = T1.UsrID
            LEFT JOIN AdtFinanceMain AFT
             ON TH.AuditId = AFT.AuditId
            AND TH.AuditDate = AFT.AuditDate
            AND AFT.AuditImage = 'A'
            FULL JOIN AdtFinanceMain BEF
             ON TH.AuditId = BEF.AuditId
            AND TH.AuditDate = BEF.AuditDate
            AND BEF.AuditImage = 'B'
     WHERE ( TH.AuditTranType != 'W' )
             AND ( TH.AuditModule = 'FinanceDetail' )
					
						
	</createView>
		</changeSet>

<changeSet id="77-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceMain_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference  ,
          Aft.FinBranch AftFinBranch  ,
          Aft.FinSourceID AftFinSourceID  ,
          Aft.NumberOfTerms AftNumberOfTerms  ,
          Aft.GrcPeriodEndDate AftGrcPeriodEndDate  ,
          Aft.AllowGrcPeriod AftAllowGrcPeriod  ,
          Aft.GraceBaseRate AftGraceBaseRate  ,
          Aft.GraceSpecialRate AftGraceSpecialRate  ,
          Aft.GrcMargin AftGrcMargin  ,
          Aft.GrcPftRate AftGrcPftRate  ,
          Aft.GrcPftFrq AftGrcPftFrq  ,
          Aft.NextGrcPftDate AftNextGrcPftDate  ,
          Aft.AllowGrcPftRvw AftAllowGrcPftRvw  ,
          Aft.AllowGrcCpz AftAllowGrcCpz  ,
          Aft.GrcCpzFrq AftGrcCpzFrq  ,
          Aft.NextGrcCpzDate AftNextGrcCpzDate  ,
          Aft.AllowGrcRepay AftAllowGrcRepay  ,
          Aft.GrcSchdMthd AftGrcSchdMthd  ,
          Aft.RepayBaseRate AftRepayBaseRate  ,
          Aft.RepaySpecialRate AftRepaySpecialRate  ,
          Aft.RepayMargin AftRepayMargin  ,
          Aft.RepayProfitRate AftRepayProfitRate  ,
          Aft.FinRepayPftOnFrq AftFinRepayPftOnFrq  ,
          Aft.RepayFrq AftRepayFrq  ,
          Aft.NextRepayDate AftNextRepayDate  ,
          Aft.RepayPftFrq AftRepayPftFrq  ,
          Aft.NextRepayPftDate AftNextRepayPftDate  ,
          Aft.AllowRepayRvw AftAllowRepayRvw  ,
          Aft.RepayRvwFrq AftRepayRvwFrq  ,
          Aft.NextRepayRvwDate AftNextRepayRvwDate  ,
          Aft.AllowRepayCpz AftAllowRepayCpz  ,
          Aft.RepayCpzFrq AftRepayCpzFrq  ,
          Aft.NextRepayCpzDate AftNextRepayCpzDate  ,
          Aft.MaturityDate AftMaturityDate  ,
          Aft.CpzAtGraceEnd AftCpzAtGraceEnd  ,
          Aft.DownPayment AftDownPayment  ,
          Aft.GraceFlatAmount AftGraceFlatAmount  ,
          Aft.ReqRepayAmount AftReqRepayAmount  ,
          Aft.TotalProfit AftTotalProfit  ,
          Aft.TotalCpz AftTotalCpz  ,
          Aft.TotalGrossPft AftTotalGrossPft  ,
          Aft.TotalGrossGrcPft AftTotalGrossGrcPft  ,
          Aft.RecalType AftRecalType  ,
          Aft.GrcPftRvwFrq AftGrcPftRvwFrq  ,
          Aft.NextGrcPftRvwDate AftNextGrcPftRvwDate  ,
          Bef.FinReference BefFinReference  ,
          Bef.FinBranch BefFinBranch  ,
          Bef.FinSourceID BefFinSourceID  ,
          Bef.NumberOfTerms BefNumberOfTerms  ,
          Bef.GrcPeriodEndDate BefGrcPeriodEndDate  ,
          Bef.AllowGrcPeriod BefAllowGrcPeriod  ,
          Bef.GraceBaseRate BefGraceBaseRate  ,
          Bef.GraceSpecialRate BefGraceSpecialRate  ,
          Bef.GrcMargin BefGrcMargin  ,
          Bef.GrcPftRate BefGrcPftRate  ,
          Bef.GrcPftFrq BefGrcPftFrq  ,
          Bef.NextGrcPftDate BefNextGrcPftDate  ,
          Bef.AllowGrcPftRvw BefAllowGrcPftRvw  ,
          Bef.AllowGrcCpz BefAllowGrcCpz  ,
          Bef.GrcCpzFrq BefGrcCpzFrq  ,
          Bef.NextGrcCpzDate BefNextGrcCpzDate  ,
          Bef.AllowGrcRepay BefAllowGrcRepay  ,
          Bef.GrcSchdMthd BefGrcSchdMthd  ,
          Bef.RepayBaseRate BefRepayBaseRate  ,
          Bef.RepaySpecialRate BefRepaySpecialRate  ,
          Bef.RepayMargin BefRepayMargin  ,
          Bef.RepayProfitRate BefRepayProfitRate  ,
          Bef.FinRepayPftOnFrq BefFinRepayPftOnFrq  ,
          Bef.RepayFrq BefRepayFrq  ,
          Bef.NextRepayDate BefNextRepayDate  ,
          Bef.RepayPftFrq BefRepayPftFrq  ,
          Bef.NextRepayPftDate BefNextRepayPftDate  ,
          Bef.AllowRepayRvw BefAllowRepayRvw  ,
          Bef.RepayRvwFrq BefRepayRvwFrq  ,
          Bef.NextRepayRvwDate BefNextRepayRvwDate  ,
          Bef.AllowRepayCpz BefAllowRepayCpz  ,
          Bef.RepayCpzFrq BefRepayCpzFrq  ,
          Bef.NextRepayCpzDate BefNextRepayCpzDate  ,
          Bef.MaturityDate BefMaturityDate  ,
          Bef.CpzAtGraceEnd BefCpzAtGraceEnd  ,
          Bef.DownPayment BefDownPayment  ,
          Bef.GraceFlatAmount BefGraceFlatAmount  ,
          Bef.ReqRepayAmount BefReqRepayAmount  ,
          Bef.TotalProfit BefTotalProfit  ,
          Bef.TotalCpz BefTotalCpz  ,
          Bef.TotalGrossPft BefTotalGrossPft  ,
          Bef.TotalGrossGrcPft BefTotalGrossGrcPft  ,
          Bef.RecalType BefRecalType  ,
          Bef.GrcPftRvwFrq BefGrcPftRvwFrq  ,
          Bef.NextGrcPftRvwDate BefNextGrcPftRvwDate  
     FROM AuditHeader TH
            JOIN SecUsers_View T1
             ON TH.AuditUsrId = T1.UsrID
            LEFT JOIN AdtFinanceMain AFT
             ON TH.AuditId = AFT.AuditId
            AND TH.AuditDate = AFT.AuditDate
            AND AFT.AuditImage = 'A'
            FULL JOIN AdtFinanceMain BEF
             ON TH.AuditId = BEF.AuditId
            AND TH.AuditDate = BEF.AuditDate
            AND BEF.AuditImage = 'B'
     WHERE ( TH.AuditTranType != 'W' )
             AND ( TH.AuditModule = 'FinanceDetail' )
	</createView>
</changeSet>

<changeSet id="78-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceMainHeader_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.FinReference AftFinReference  ,
          Aft.FinBranch AftFinBranch  ,
          Aft.FinSourceID AftFinSourceID  ,
          Aft.NumberOfTerms AftNumberOfTerms  ,
          Aft.GrcPeriodEndDate AftGrcPeriodEndDate  ,
          Aft.AllowGrcPeriod AftAllowGrcPeriod  ,
          Aft.GraceBaseRate AftGraceBaseRate  ,
          Aft.GraceSpecialRate AftGraceSpecialRate  ,
          Aft.GrcMargin AftGrcMargin  ,
          Aft.GrcPftRate AftGrcPftRate  ,
          Aft.GrcPftFrq AftGrcPftFrq  ,
          Aft.NextGrcPftDate AftNextGrcPftDate  ,
          Aft.AllowGrcPftRvw AftAllowGrcPftRvw  ,
          Aft.RecalType AftRecalType  ,
          Aft.GrcPftRvwFrq AftGrcPftRvwFrq  ,
          Aft.NextGrcPftRvwDate AftNextGrcPftRvwDate  ,
          Aft.AllowGrcCpz AftAllowGrcCpz  ,
          Aft.GrcCpzFrq AftGrcCpzFrq  ,
          Aft.NextGrcCpzDate AftNextGrcCpzDate  ,
          Aft.AllowGrcRepay AftAllowGrcRepay  ,
          Aft.GrcSchdMthd AftGrcSchdMthd  ,
          Aft.RepayBaseRate AftRepayBaseRate  ,
          Aft.RepaySpecialRate AftRepaySpecialRate  ,
          Aft.RepayMargin AftRepayMargin  ,
          Aft.RepayProfitRate AftRepayProfitRate  ,
          Aft.FinRepayPftOnFrq AftFinRepayPftOnFrq  ,
          Aft.RepayFrq AftRepayFrq  ,
          Aft.NextRepayDate AftNextRepayDate  ,
          Aft.RepayPftFrq AftRepayPftFrq  ,
          Aft.NextRepayPftDate AftNextRepayPftDate  ,
          Aft.AllowRepayRvw AftAllowRepayRvw  ,
          Aft.RepayRvwFrq AftRepayRvwFrq  ,
          Aft.NextRepayRvwDate AftNextRepayRvwDate  ,
          Aft.AllowRepayCpz AftAllowRepayCpz  ,
          Aft.RepayCpzFrq AftRepayCpzFrq  ,
          Aft.NextRepayCpzDate AftNextRepayCpzDate  ,
          Aft.MaturityDate AftMaturityDate  ,
          Aft.CpzAtGraceEnd AftCpzAtGraceEnd  ,
          Aft.DownPayment AftDownPayment  ,
          Aft.DownPayBank AftDownPayBank  ,
          Aft.DownPaySupl AftDownPaySupl  ,
          Aft.DownPayAccount AftDownPayAccount  ,
          Aft.GraceFlatAmount AftGraceFlatAmount  ,
          Aft.ReqRepayAmount AftReqRepayAmount  ,
          Aft.TotalProfit AftTotalProfit  ,
          Aft.TotalCpz AftTotalCpz  ,
          Aft.TotalGrossPft AftTotalGrossPft  ,
          Aft.TotalGrossGrcPft AftTotalGrossGrcPft  ,
          Aft.TotalGracePft AftTotalGracePft  ,
          Aft.TotalGraceCpz AftTotalGraceCpz  ,
          Aft.TotalRepayAmt AftTotalRepayAmt  ,
          Aft.GrcRateBasis AftGrcRateBasis  ,
          Aft.RepayRateBasis AftRepayRateBasis  ,
          Aft.FinType AftFinType  ,
          Aft.FinRemarks AftFinRemarks  ,
          Aft.FinCcy AftFinCcy  ,
          Aft.ScheduleMethod AftScheduleMethod  ,
          Aft.ProfitDaysBasis AftProfitDaysBasis  ,
          Aft.ReqMaturity AftReqMaturity  ,
          Aft.CalTerms AftCalTerms  ,
          Aft.CalMaturity AftCalMaturity  ,
          Aft.FirstRepay AftFirstRepay  ,
          Aft.LastRepay AftLastRepay  ,
          Aft.FinStartDate AftFinStartDate  ,
          Aft.FinAmount AftFinAmount  ,
          Aft.FinContractDate AftFinContractDate  ,
          Aft.FinRepaymentAmount AftFinRepaymentAmount  ,
          Aft.FeeChargeAmt AftFeeChargeAmt  ,
          Aft.CustID AftCustID  ,
          Aft.Defferments AftDefferments  ,
          ' ' AftFrqDefferments  ,
          Aft.FinAssetValue AftFinAssetValue  ,
          Aft.DisbAccountId AftDisbAccountId  ,
          Aft.RepayAccountId AftRepayAccountId  ,
          Aft.FinCurrAssetValue AftFinCurrAssetValue  ,
          Aft.FinAccount AftFinAccount  ,
          Aft.FinCustPftAccount AftFinCustPftAccount  ,
          Aft.FinCommitmentRef AftFinCommitmentRef  ,
          Aft.DepreciationFrq AftDepreciationFrq  ,
          Aft.AllowedDefRpyChange AftAllowedDefRpyChange  ,
          Aft.AvailedDefRpyChange AftAvailedDefRpyChange  ,
          Aft.AllowedDefFrqChange AftAllowedDefFrqChange  ,
          Aft.AvailedDefFrqChange AftAvailedDefFrqChange  ,
          Aft.DedupFound AftDedupFound  ,
          Aft.SkipDedup AftSkipDedup  ,
          Aft.Blacklisted AftBlacklisted  ,
          Aft.LastRepayDate AftLastRepayDate  ,
          Aft.LastRepayPftDate AftLastRepayPftDate  ,
          Aft.LastRepayRvwDate AftLastRepayRvwDate  ,
          Aft.LastRepayCpzDate AftLastRepayCpzDate  ,
          Aft.FinApprovedDate AftFinApprovedDate  ,
          Aft.ClosingStatus AftClosingStatus  ,
          Aft.FinIsActive AftFinIsActive  ,
          Aft.LimitValid AftLimitValid  ,
          Aft.OverrideLimit AftOverrideLimit  ,
          Aft.AnualizedPercRate AftAnualizedPercRate  ,
          Aft.EffectiveRateOfReturn AftEffectiveRateOfReturn  ,
          Aft.NextDepDate AftNextDepDate  ,
          Aft.LastDepDate AftLastDepDate  ,
          Aft.MigratedFinance AftMigratedFinance  ,
          Aft.ScheduleMaintained AftScheduleMaintained  ,
          Aft.ScheduleRegenerated AftScheduleRegenerated  ,
          Aft.FinPurpose AftFinPurpose  ,
          Aft.FinStatus AftFinStatus  ,
          Aft.FinStsReason AftFinStsReason  ,
          Aft.CustDSR AftCustDSR  ,
          Aft.Authorization1 AftAuthorization1  ,
          Aft.Authorization2 AftAuthorization2  ,
          Aft.JointAccount AftJointAccount  ,
          Aft.JointCustId AftJointCustId  ,
          Aft.SecurityDeposit AftSecurityDeposit  ,
          Aft.SecurityCollateral AftSecurityCollateral  ,
          Aft.Approved AftApproved  ,
          Aft.Discrepancy AftDiscrepancy  ,
          Aft.LimitApproved AftLimitApproved  ,
          Aft.GraceTerms AftGraceTerms  ,
          Aft.RcdMaintainSts AftRcdMaintainSts  ,
          Aft.FinRepayMethod AftFinRepayMethod  ,
          Aft.RecordType AftRecordType  ,
          Bef.FinReference BefFinReference  ,
          Bef.FinBranch BefFinBranch  ,
          Bef.FinSourceID BefFinSourceID  ,
          Bef.NumberOfTerms BefNumberOfTerms  ,
          Bef.GrcPeriodEndDate BefGrcPeriodEndDate  ,
          Bef.AllowGrcPeriod BefAllowGrcPeriod  ,
          Bef.GraceBaseRate BefGraceBaseRate  ,
          Bef.GraceSpecialRate BefGraceSpecialRate  ,
          Bef.GrcMargin BefGrcMargin  ,
          Bef.GrcPftRate BefGrcPftRate  ,
          Bef.GrcPftFrq BefGrcPftFrq  ,
          Bef.NextGrcPftDate BefNextGrcPftDate  ,
          Bef.AllowGrcPftRvw BefAllowGrcPftRvw  ,
          Bef.RecalType BefRecalType  ,
          Bef.GrcPftRvwFrq BefGrcPftRvwFrq  ,
          Bef.NextGrcPftRvwDate BefNextGrcPftRvwDate  ,     
          Bef.AllowGrcCpz BefAllowGrcCpz  ,
          Bef.GrcCpzFrq BefGrcCpzFrq  ,
          Bef.NextGrcCpzDate BefNextGrcCpzDate  ,
          Bef.AllowGrcRepay BefAllowGrcRepay  ,
          Bef.GrcSchdMthd BefGrcSchdMthd  ,
          Bef.RepayBaseRate BefRepayBaseRate  ,
          Bef.RepaySpecialRate BefRepaySpecialRate  ,
          Bef.RepayMargin BefRepayMargin  ,
          Bef.RepayProfitRate BefRepayProfitRate  ,
          Bef.FinRepayPftOnFrq BefFinRepayPftOnFrq  ,
          Bef.RepayFrq BefRepayFrq  ,
          Bef.NextRepayDate BefNextRepayDate  ,
          Bef.RepayPftFrq BefRepayPftFrq  ,
          Bef.NextRepayPftDate BefNextRepayPftDate  ,
          Bef.AllowRepayRvw BefAllowRepayRvw  ,
          Bef.RepayRvwFrq BefRepayRvwFrq  ,
          Bef.NextRepayRvwDate BefNextRepayRvwDate  ,
          Bef.AllowRepayCpz BefAllowRepayCpz  ,
          Bef.RepayCpzFrq BefRepayCpzFrq  ,
          Bef.NextRepayCpzDate BefNextRepayCpzDate  ,
          Bef.MaturityDate BefMaturityDate  ,
          Bef.CpzAtGraceEnd BefCpzAtGraceEnd  ,
          Bef.DownPayment BefDownPayment  ,
          Bef.DownPayBank BefDownPayBank  ,
          Bef.DownPaySupl BefDownPaySupl  ,
          Bef.DownPayAccount BefDownPayAccount  ,
          Bef.GraceFlatAmount BefGraceFlatAmount  ,
          Bef.ReqRepayAmount BefReqRepayAmount  ,
          Bef.TotalProfit BefTotalProfit  ,
          Bef.TotalCpz BefTotalCpz  ,
          Bef.TotalGrossPft BefTotalGrossPft  ,
          Bef.TotalGrossGrcPft BefTotalGrossGrcPft  ,
          Bef.TotalGracePft BefTotalGracePft  ,
          Bef.TotalGraceCpz BefTotalGraceCpz  ,
          Bef.TotalRepayAmt BefTotalRepayAmt  ,
          Bef.GrcRateBasis BefGrcRateBasis  ,
          Bef.RepayRateBasis BefRepayRateBasis  ,
          Bef.FinType BefFinType  ,
          Bef.FinRemarks BefFinRemarks  ,
          Bef.FinCcy BefFinCcy  ,
          Bef.ScheduleMethod BefScheduleMethod  ,
          Bef.ProfitDaysBasis BefProfitDaysBasis  ,
          Bef.ReqMaturity BefReqMaturity  ,
          Bef.CalTerms BefCalTerms  ,
          Bef.CalMaturity BefCalMaturity  ,
          Bef.FirstRepay BefFirstRepay  ,
          Bef.LastRepay BefLastRepay  ,
          Bef.FinStartDate BefFinStartDate  ,
          Bef.FinAmount BefFinAmount  ,
          Bef.FinContractDate BefFinContractDate  ,
          Bef.FinRepaymentAmount BefFinRepaymentAmount  ,
          Bef.FeeChargeAmt BefFeeChargeAmt  ,
          Bef.CustID BefCustID  ,
          Bef.Defferments BefDefferments  ,
          ' ' BefFrqDefferments  ,
          Bef.FinAssetValue BefFinAssetValue  ,
          Bef.DisbAccountId BefDisbAccountId  ,
          Bef.RepayAccountId BefRepayAccountId  ,
          Bef.FinCurrAssetValue BefFinCurrAssetValue  ,
          Bef.FinAccount BefFinAccount  ,
          Bef.FinCustPftAccount BefFinCustPftAccount  ,
          Bef.FinCommitmentRef BefFinCommitmentRef  ,
          Bef.DepreciationFrq BefDepreciationFrq  ,
          Bef.AllowedDefRpyChange BefAllowedDefRpyChange  ,
          Bef.AvailedDefRpyChange BefAvailedDefRpyChange  ,
          Bef.AllowedDefFrqChange BefAllowedDefFrqChange  ,
          Bef.AvailedDefFrqChange BefAvailedDefFrqChange  ,
          Bef.DedupFound BefDedupFound  ,
          Bef.SkipDedup BefSkipDedup  ,
          Bef.Blacklisted BefBlacklisted  ,
          Bef.LastRepayDate BefLastRepayDate  ,
          Bef.LastRepayPftDate BefLastRepayPftDate  ,
          Bef.LastRepayRvwDate BefLastRepayRvwDate  ,
          Bef.LastRepayCpzDate BefLastRepayCpzDate  ,
          Bef.FinApprovedDate BefFinApprovedDate  ,
          Bef.ClosingStatus BefClosingStatus  ,
          Bef.FinIsActive BefFinIsActive  ,
          Bef.LimitValid BefLimitValid  ,
          Bef.OverrideLimit BefOverrideLimit  ,
          Bef.AnualizedPercRate BefAnualizedPercRate  ,
          Bef.EffectiveRateOfReturn BefEffectiveRateOfReturn  ,
          Bef.NextDepDate BefNextDepDate  ,
          Bef.LastDepDate BefLastDepDate  ,
          Bef.MigratedFinance BefMigratedFinance  ,
          Bef.ScheduleMaintained BefScheduleMaintained  ,
          Bef.ScheduleRegenerated BefScheduleRegenerated  ,
          Bef.FinPurpose BefFinPurpose  ,
          Bef.FinStatus BefFinStatus  ,
          Bef.FinStsReason BefFinStsReason  ,
          Bef.CustDSR BefCustDSR  ,
          Bef.Authorization1 BefAuthorization1  ,
          Bef.Authorization2 BefAuthorization2  ,
          Bef.JointAccount BefJointAccount  ,
          Bef.JointCustId BefJointCustId  ,
          Bef.SecurityDeposit BefSecurityDeposit  ,
          Bef.SecurityCollateral BefSecurityCollateral  ,
          Bef.Approved BefApproved  ,
          Bef.Discrepancy BefDiscrepancy  ,
          Bef.LimitApproved BefLimitApproved  ,
          Bef.GraceTerms BefGraceTerms  ,
          Bef.RcdMaintainSts BefRcdMaintainSts  ,
          Bef.FinRepayMethod BefFinRepayMethod  ,
          CcyEditField 
     FROM AuditHeader TH
            JOIN SecUsers_View T1
             ON TH.AuditUsrId = T1.UsrID
            LEFT JOIN AdtFinanceMain AFT
             ON TH.AuditId = AFT.AuditId
            AND TH.AuditDate = AFT.AuditDate
            AND AFT.AuditImage = 'A'
            FULL JOIN AdtFinanceMain BEF
             ON TH.AuditId = BEF.AuditId
            AND TH.AuditDate = BEF.AuditDate
            AND BEF.AuditImage = 'B'
            JOIN RMTCurrencies_View C
             ON C.CcyCode = Aft.FinCcy
     WHERE TH.AuditTranType != 'W'
             AND TH.AuditModule = 'FinanceDetail'
					
						
	</createView>
		</changeSet>

<changeSet id="78-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceMainHeader_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference  ,
          Aft.FinBranch AftFinBranch  ,
          Aft.FinSourceID AftFinSourceID  ,
          Aft.NumberOfTerms AftNumberOfTerms  ,
          Aft.GrcPeriodEndDate AftGrcPeriodEndDate  ,
          Aft.AllowGrcPeriod AftAllowGrcPeriod  ,
          Aft.GraceBaseRate AftGraceBaseRate  ,
          Aft.GraceSpecialRate AftGraceSpecialRate  ,
          Aft.GrcMargin AftGrcMargin  ,
          Aft.GrcPftRate AftGrcPftRate  ,
          Aft.GrcPftFrq AftGrcPftFrq  ,
          Aft.NextGrcPftDate AftNextGrcPftDate  ,
          Aft.AllowGrcPftRvw AftAllowGrcPftRvw  ,
          Aft.RecalType AftRecalType  ,
          Aft.GrcPftRvwFrq AftGrcPftRvwFrq  ,
          Aft.NextGrcPftRvwDate AftNextGrcPftRvwDate  ,
          Aft.AllowGrcCpz AftAllowGrcCpz  ,
          Aft.GrcCpzFrq AftGrcCpzFrq  ,
          Aft.NextGrcCpzDate AftNextGrcCpzDate  ,
          Aft.AllowGrcRepay AftAllowGrcRepay  ,
          Aft.GrcSchdMthd AftGrcSchdMthd  ,
          Aft.RepayBaseRate AftRepayBaseRate  ,
          Aft.RepaySpecialRate AftRepaySpecialRate  ,
          Aft.RepayMargin AftRepayMargin  ,
          Aft.RepayProfitRate AftRepayProfitRate  ,
          Aft.FinRepayPftOnFrq AftFinRepayPftOnFrq  ,
          Aft.RepayFrq AftRepayFrq  ,
          Aft.NextRepayDate AftNextRepayDate  ,
          Aft.RepayPftFrq AftRepayPftFrq  ,
          Aft.NextRepayPftDate AftNextRepayPftDate  ,
          Aft.AllowRepayRvw AftAllowRepayRvw  ,
          Aft.RepayRvwFrq AftRepayRvwFrq  ,
          Aft.NextRepayRvwDate AftNextRepayRvwDate  ,
          Aft.AllowRepayCpz AftAllowRepayCpz  ,
          Aft.RepayCpzFrq AftRepayCpzFrq  ,
          Aft.NextRepayCpzDate AftNextRepayCpzDate  ,
          Aft.MaturityDate AftMaturityDate  ,
          Aft.CpzAtGraceEnd AftCpzAtGraceEnd  ,
          Aft.DownPayment AftDownPayment  ,
          Aft.DownPayBank AftDownPayBank  ,
          Aft.DownPaySupl AftDownPaySupl  ,
          Aft.DownPayAccount AftDownPayAccount  ,
          Aft.GraceFlatAmount AftGraceFlatAmount  ,
          Aft.ReqRepayAmount AftReqRepayAmount  ,
          Aft.TotalProfit AftTotalProfit  ,
          Aft.TotalCpz AftTotalCpz  ,
          Aft.TotalGrossPft AftTotalGrossPft  ,
          Aft.TotalGrossGrcPft AftTotalGrossGrcPft  ,
          Aft.TotalGracePft AftTotalGracePft  ,
          Aft.TotalGraceCpz AftTotalGraceCpz  ,
          Aft.TotalRepayAmt AftTotalRepayAmt  ,
          Aft.GrcRateBasis AftGrcRateBasis  ,
          Aft.RepayRateBasis AftRepayRateBasis  ,
          Aft.FinType AftFinType  ,
          Aft.FinRemarks AftFinRemarks  ,
          Aft.FinCcy AftFinCcy  ,
          Aft.ScheduleMethod AftScheduleMethod  ,
          Aft.ProfitDaysBasis AftProfitDaysBasis  ,
          Aft.ReqMaturity AftReqMaturity  ,
          Aft.CalTerms AftCalTerms  ,
          Aft.CalMaturity AftCalMaturity  ,
          Aft.FirstRepay AftFirstRepay  ,
          Aft.LastRepay AftLastRepay  ,
          Aft.FinStartDate AftFinStartDate  ,
          Aft.FinAmount AftFinAmount  ,
          Aft.FinContractDate AftFinContractDate  ,
          Aft.FinRepaymentAmount AftFinRepaymentAmount  ,
          Aft.FeeChargeAmt AftFeeChargeAmt  ,
          Aft.CustID AftCustID  ,
          Aft.Defferments AftDefferments  ,
          ' ' AftFrqDefferments  ,
          Aft.FinAssetValue AftFinAssetValue  ,
          Aft.DisbAccountId AftDisbAccountId  ,
          Aft.RepayAccountId AftRepayAccountId  ,
          Aft.FinCurrAssetValue AftFinCurrAssetValue  ,
          Aft.FinAccount AftFinAccount  ,
          Aft.FinCustPftAccount AftFinCustPftAccount  ,
          Aft.FinCommitmentRef AftFinCommitmentRef  ,
          Aft.DepreciationFrq AftDepreciationFrq  ,
          Aft.AllowedDefRpyChange AftAllowedDefRpyChange  ,
          Aft.AvailedDefRpyChange AftAvailedDefRpyChange  ,
          Aft.AllowedDefFrqChange AftAllowedDefFrqChange  ,
          Aft.AvailedDefFrqChange AftAvailedDefFrqChange  ,
          Aft.DedupFound AftDedupFound  ,
          Aft.SkipDedup AftSkipDedup  ,
          Aft.Blacklisted AftBlacklisted  ,
          Aft.LastRepayDate AftLastRepayDate  ,
          Aft.LastRepayPftDate AftLastRepayPftDate  ,
          Aft.LastRepayRvwDate AftLastRepayRvwDate  ,
          Aft.LastRepayCpzDate AftLastRepayCpzDate  ,
          Aft.FinApprovedDate AftFinApprovedDate  ,
          Aft.ClosingStatus AftClosingStatus  ,
          Aft.FinIsActive AftFinIsActive  ,
          Aft.LimitValid AftLimitValid  ,
          Aft.OverrideLimit AftOverrideLimit  ,
          Aft.AnualizedPercRate AftAnualizedPercRate  ,
          Aft.EffectiveRateOfReturn AftEffectiveRateOfReturn  ,
          Aft.NextDepDate AftNextDepDate  ,
          Aft.LastDepDate AftLastDepDate  ,
          Aft.MigratedFinance AftMigratedFinance  ,
          Aft.ScheduleMaintained AftScheduleMaintained  ,
          Aft.ScheduleRegenerated AftScheduleRegenerated  ,
          Aft.FinPurpose AftFinPurpose  ,
          Aft.FinStatus AftFinStatus  ,
          Aft.FinStsReason AftFinStsReason  ,
          Aft.CustDSR AftCustDSR  ,
          Aft.Authorization1 AftAuthorization1  ,
          Aft.Authorization2 AftAuthorization2  ,
          Aft.JointAccount AftJointAccount  ,
          Aft.JointCustId AftJointCustId  ,
          Aft.SecurityDeposit AftSecurityDeposit  ,
          Aft.SecurityCollateral AftSecurityCollateral  ,
          Aft.Approved AftApproved  ,
          Aft.Discrepancy AftDiscrepancy  ,
          Aft.LimitApproved AftLimitApproved  ,
          Aft.GraceTerms AftGraceTerms  ,
          Aft.RcdMaintainSts AftRcdMaintainSts  ,
          Aft.FinRepayMethod AftFinRepayMethod  ,
          Aft.RecordType AftRecordType  ,
          Bef.FinReference BefFinReference  ,
          Bef.FinBranch BefFinBranch  ,
          Bef.FinSourceID BefFinSourceID  ,
          Bef.NumberOfTerms BefNumberOfTerms  ,
          Bef.GrcPeriodEndDate BefGrcPeriodEndDate  ,
          Bef.AllowGrcPeriod BefAllowGrcPeriod  ,
          Bef.GraceBaseRate BefGraceBaseRate  ,
          Bef.GraceSpecialRate BefGraceSpecialRate  ,
          Bef.GrcMargin BefGrcMargin  ,
          Bef.GrcPftRate BefGrcPftRate  ,
          Bef.GrcPftFrq BefGrcPftFrq  ,
          Bef.NextGrcPftDate BefNextGrcPftDate  ,
          Bef.AllowGrcPftRvw BefAllowGrcPftRvw  ,
          Bef.RecalType BefRecalType  ,
          Bef.GrcPftRvwFrq BefGrcPftRvwFrq  ,
          Bef.NextGrcPftRvwDate BefNextGrcPftRvwDate  ,     
          Bef.AllowGrcCpz BefAllowGrcCpz  ,
          Bef.GrcCpzFrq BefGrcCpzFrq  ,
          Bef.NextGrcCpzDate BefNextGrcCpzDate  ,
          Bef.AllowGrcRepay BefAllowGrcRepay  ,
          Bef.GrcSchdMthd BefGrcSchdMthd  ,
          Bef.RepayBaseRate BefRepayBaseRate  ,
          Bef.RepaySpecialRate BefRepaySpecialRate  ,
          Bef.RepayMargin BefRepayMargin  ,
          Bef.RepayProfitRate BefRepayProfitRate  ,
          Bef.FinRepayPftOnFrq BefFinRepayPftOnFrq  ,
          Bef.RepayFrq BefRepayFrq  ,
          Bef.NextRepayDate BefNextRepayDate  ,
          Bef.RepayPftFrq BefRepayPftFrq  ,
          Bef.NextRepayPftDate BefNextRepayPftDate  ,
          Bef.AllowRepayRvw BefAllowRepayRvw  ,
          Bef.RepayRvwFrq BefRepayRvwFrq  ,
          Bef.NextRepayRvwDate BefNextRepayRvwDate  ,
          Bef.AllowRepayCpz BefAllowRepayCpz  ,
          Bef.RepayCpzFrq BefRepayCpzFrq  ,
          Bef.NextRepayCpzDate BefNextRepayCpzDate  ,
          Bef.MaturityDate BefMaturityDate  ,
          Bef.CpzAtGraceEnd BefCpzAtGraceEnd  ,
          Bef.DownPayment BefDownPayment  ,
          Bef.DownPayBank BefDownPayBank  ,
          Bef.DownPaySupl BefDownPaySupl  ,
          Bef.DownPayAccount BefDownPayAccount  ,
          Bef.GraceFlatAmount BefGraceFlatAmount  ,
          Bef.ReqRepayAmount BefReqRepayAmount  ,
          Bef.TotalProfit BefTotalProfit  ,
          Bef.TotalCpz BefTotalCpz  ,
          Bef.TotalGrossPft BefTotalGrossPft  ,
          Bef.TotalGrossGrcPft BefTotalGrossGrcPft  ,
          Bef.TotalGracePft BefTotalGracePft  ,
          Bef.TotalGraceCpz BefTotalGraceCpz  ,
          Bef.TotalRepayAmt BefTotalRepayAmt  ,
          Bef.GrcRateBasis BefGrcRateBasis  ,
          Bef.RepayRateBasis BefRepayRateBasis  ,
          Bef.FinType BefFinType  ,
          Bef.FinRemarks BefFinRemarks  ,
          Bef.FinCcy BefFinCcy  ,
          Bef.ScheduleMethod BefScheduleMethod  ,
          Bef.ProfitDaysBasis BefProfitDaysBasis  ,
          Bef.ReqMaturity BefReqMaturity  ,
          Bef.CalTerms BefCalTerms  ,
          Bef.CalMaturity BefCalMaturity  ,
          Bef.FirstRepay BefFirstRepay  ,
          Bef.LastRepay BefLastRepay  ,
          Bef.FinStartDate BefFinStartDate  ,
          Bef.FinAmount BefFinAmount  ,
          Bef.FinContractDate BefFinContractDate  ,
          Bef.FinRepaymentAmount BefFinRepaymentAmount  ,
          Bef.FeeChargeAmt BefFeeChargeAmt  ,
          Bef.CustID BefCustID  ,
          Bef.Defferments BefDefferments  ,
          ' ' BefFrqDefferments  ,
          Bef.FinAssetValue BefFinAssetValue  ,
          Bef.DisbAccountId BefDisbAccountId  ,
          Bef.RepayAccountId BefRepayAccountId  ,
          Bef.FinCurrAssetValue BefFinCurrAssetValue  ,
          Bef.FinAccount BefFinAccount  ,
          Bef.FinCustPftAccount BefFinCustPftAccount  ,
          Bef.FinCommitmentRef BefFinCommitmentRef  ,
          Bef.DepreciationFrq BefDepreciationFrq  ,
          Bef.AllowedDefRpyChange BefAllowedDefRpyChange  ,
          Bef.AvailedDefRpyChange BefAvailedDefRpyChange  ,
          Bef.AllowedDefFrqChange BefAllowedDefFrqChange  ,
          Bef.AvailedDefFrqChange BefAvailedDefFrqChange  ,
          Bef.DedupFound BefDedupFound  ,
          Bef.SkipDedup BefSkipDedup  ,
          Bef.Blacklisted BefBlacklisted  ,
          Bef.LastRepayDate BefLastRepayDate  ,
          Bef.LastRepayPftDate BefLastRepayPftDate  ,
          Bef.LastRepayRvwDate BefLastRepayRvwDate  ,
          Bef.LastRepayCpzDate BefLastRepayCpzDate  ,
          Bef.FinApprovedDate BefFinApprovedDate  ,
          Bef.ClosingStatus BefClosingStatus  ,
          Bef.FinIsActive BefFinIsActive  ,
          Bef.LimitValid BefLimitValid  ,
          Bef.OverrideLimit BefOverrideLimit  ,
          Bef.AnualizedPercRate BefAnualizedPercRate  ,
          Bef.EffectiveRateOfReturn BefEffectiveRateOfReturn  ,
          Bef.NextDepDate BefNextDepDate  ,
          Bef.LastDepDate BefLastDepDate  ,
          Bef.MigratedFinance BefMigratedFinance  ,
          Bef.ScheduleMaintained BefScheduleMaintained  ,
          Bef.ScheduleRegenerated BefScheduleRegenerated  ,
          Bef.FinPurpose BefFinPurpose  ,
          Bef.FinStatus BefFinStatus  ,
          Bef.FinStsReason BefFinStsReason  ,
          Bef.CustDSR BefCustDSR  ,
          Bef.Authorization1 BefAuthorization1  ,
          Bef.Authorization2 BefAuthorization2  ,
          Bef.JointAccount BefJointAccount  ,
          Bef.JointCustId BefJointCustId  ,
          Bef.SecurityDeposit BefSecurityDeposit  ,
          Bef.SecurityCollateral BefSecurityCollateral  ,
          Bef.Approved BefApproved  ,
          Bef.Discrepancy BefDiscrepancy  ,
          Bef.LimitApproved BefLimitApproved  ,
          Bef.GraceTerms BefGraceTerms  ,
          Bef.RcdMaintainSts BefRcdMaintainSts  ,
          Bef.FinRepayMethod BefFinRepayMethod  ,
          CcyEditField 
     FROM AuditHeader TH
            JOIN SecUsers_View T1
             ON TH.AuditUsrId = T1.UsrID
            LEFT JOIN AdtFinanceMain AFT
             ON TH.AuditId = AFT.AuditId
            AND TH.AuditDate = AFT.AuditDate
            AND AFT.AuditImage = 'A'
            FULL JOIN AdtFinanceMain BEF
             ON TH.AuditId = BEF.AuditId
            AND TH.AuditDate = BEF.AuditDate
            AND BEF.AuditImage = 'B'
            JOIN RMTCurrencies_View C
             ON C.CcyCode = Aft.FinCcy
     WHERE TH.AuditTranType != 'W'
             AND TH.AuditModule = 'FinanceDetail'
	</createView>
</changeSet>

<changeSet id="79-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceRepayPriority_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.FinType AftFinType, Aft.FinPriority AftFinPriority,
						  	
						  Bef.FinType BefFinType, Bef.FinPriority BefFinPriority
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinRpyPriority AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinRpyPriority BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceRepayPriority')
					
						
	</createView>
		</changeSet>

<changeSet id="79-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceRepayPriority_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.FinType AftFinType, Aft.FinPriority AftFinPriority,
						  	
						  Bef.FinType BefFinType, Bef.FinPriority BefFinPriority
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinRpyPriority AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinRpyPriority BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceRepayPriority')
	</createView>
</changeSet>

<changeSet id="80-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceScheduleDetail_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.FinReference AftFinReference, Aft.SchDate AftSchDate,Aft.SchSeq AftSchSeq,
						  Aft.PftOnSchDate AftPftOnSchDate, Aft.CpzOnSchDate AftCpzOnSchDate,Aft.RepayOnSchDate AftRepayOnSchDate,
						  Aft.RvwOnSchDate AftRvwOnSchDate, Aft.DisbOnSchDate AftDisbOnSchDate,Aft.DefSchdDate AftDefSchdDate,
						  Aft.Defered AftDefered, Aft.DeferedPay AftDeferedPay,Aft.DownpaymentOnSchDate AftDownpaymentOnSchDate,
						  Aft.BalanceForPftCal AftBalanceForPftCal, Aft.BaseRate AftBaseRate,Aft.SplRate AftSplRate,
						  Aft.MrgRate AftMrgRate, Aft.ActRate AftActRate,Aft.NoOfDays AftNoOfDays,
						  Aft.DayFactor AftDayFactor, Aft.ProfitCalc AftProfitCalc,Aft.ProfitSchd AftProfitSchd,
						  Aft.PrincipalSchd AftPrincipalSchd, Aft.RepayAmount AftRepayAmount,Aft.ProfitBalance AftProfitBalance,
						  Aft.DisbAmount AftDisbAmount, Aft.DownPaymentAmount AftDownPaymentAmount,Aft.CpzAmount AftCpzAmount,
						  Aft.DefRepaySchd AftDefRepaySchd, Aft.DefProfitSchd AftDefProfitSchd,Aft.DefPrincipalSchd AftDefPrincipalSchd,
						  Aft.ClosingBalance AftClosingBalance, Aft.ProfitFraction AftProfitFraction,Aft.PrvRepayAmount AftPrvRepayAmount,
						  Aft.DefProfitBal AftDefProfitBal, Aft.DefPrincipalBal AftDefPrincipalBal,Aft.SchdPftPaid AftSchdPftPaid,
						  Aft.SchdPriPaid AftSchdPriPaid, 
						  Aft.DefProfit AftDefProfit, Aft.DefPrincipal AftDefPrincipal,Aft.Specifier AftSpecifier,
						  Aft.SchdMethod AftSchdMethod, Aft.SchDetailIsActive AftSchDetailIsActive,
						  	
						  Bef.FinReference BefFinReference, Bef.SchDate BefSchDate, Bef.SchSeq BefSchSeq,
						  Bef.PftOnSchDate BefPftOnSchDate, Bef.CpzOnSchDate BefCpzOnSchDate, Bef.RepayOnSchDate BefRepayOnSchDate,
						  Bef.RvwOnSchDate BefRvwOnSchDate, Bef.DisbOnSchDate BefDisbOnSchDate, Bef.DefSchdDate BefDefSchdDate,
						  Bef.Defered BefDefered, Bef.DeferedPay BefDeferedPay,Bef.DownpaymentOnSchDate BefDownpaymentOnSchDate,
						  Bef.BalanceForPftCal BefBalanceForPftCal, Bef.BaseRate BefBaseRate, Bef.SplRate BefSplRate,
						  Bef.MrgRate BefMrgRate, Bef.ActRate BefActRate, Bef.NoOfDays BefNoOfDays,
						  Bef.DayFactor BefDayFactor, Bef.ProfitCalc BefProfitCalc, Bef.ProfitSchd BefProfitSchd,
						  Bef.PrincipalSchd BefPrincipalSchd, Bef.RepayAmount BefRepayAmount, Bef.ProfitBalance BefProfitBalance,
						  Bef.DisbAmount BefDisbAmount, Bef.DownPaymentAmount BefDownPaymentAmount, Bef.CpzAmount BefCpzAmount,
						  Bef.DefRepaySchd BefDefRepaySchd, Bef.DefProfitSchd BefDefProfitSchd, Bef.DefPrincipalSchd BefDefPrincipalSchd,
						  Bef.ClosingBalance BefClosingBalance, Bef.ProfitFraction BefProfitFraction, Bef.PrvRepayAmount BefPrvRepayAmount,
						  Bef.DefProfitBal BefDefProfitBal, Bef.DefPrincipalBal BefDefPrincipalBal, Bef.SchdPftPaid BefSchdPftPaid,
						  Bef.SchdPriPaid BefSchdPriPaid,
						  Bef.DefProfit BefDefProfit, Bef.DefPrincipal BefDefPrincipal, Bef.Specifier BefSpecifier,
						  Bef.SchdMethod BefSchdMethod, Bef.SchDetailIsActive BefSchDetailIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinScheduleDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinScheduleDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceScheduleDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="80-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceScheduleDetail_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.FinReference AftFinReference, Aft.SchDate AftSchDate,Aft.SchSeq AftSchSeq,
						  Aft.PftOnSchDate AftPftOnSchDate, Aft.CpzOnSchDate AftCpzOnSchDate,Aft.RepayOnSchDate AftRepayOnSchDate,
						  Aft.RvwOnSchDate AftRvwOnSchDate, Aft.DisbOnSchDate AftDisbOnSchDate,Aft.DefSchdDate AftDefSchdDate,
						  Aft.Defered AftDefered, Aft.DeferedPay AftDeferedPay,Aft.DownpaymentOnSchDate AftDownpaymentOnSchDate,
						  Aft.BalanceForPftCal AftBalanceForPftCal, Aft.BaseRate AftBaseRate,Aft.SplRate AftSplRate,
						  Aft.MrgRate AftMrgRate, Aft.ActRate AftActRate,Aft.NoOfDays AftNoOfDays,
						  Aft.DayFactor AftDayFactor, Aft.ProfitCalc AftProfitCalc,Aft.ProfitSchd AftProfitSchd,
						  Aft.PrincipalSchd AftPrincipalSchd, Aft.RepayAmount AftRepayAmount,Aft.ProfitBalance AftProfitBalance,
						  Aft.DisbAmount AftDisbAmount, Aft.DownPaymentAmount AftDownPaymentAmount,Aft.CpzAmount AftCpzAmount,
						  Aft.DefRepaySchd AftDefRepaySchd, Aft.DefProfitSchd AftDefProfitSchd,Aft.DefPrincipalSchd AftDefPrincipalSchd,
						  Aft.ClosingBalance AftClosingBalance, Aft.ProfitFraction AftProfitFraction,Aft.PrvRepayAmount AftPrvRepayAmount,
						  Aft.DefProfitBal AftDefProfitBal, Aft.DefPrincipalBal AftDefPrincipalBal,Aft.SchdPftPaid AftSchdPftPaid,
						  Aft.SchdPriPaid AftSchdPriPaid, 
						  Aft.DefProfit AftDefProfit, Aft.DefPrincipal AftDefPrincipal,Aft.Specifier AftSpecifier,
						  Aft.SchdMethod AftSchdMethod, Aft.SchDetailIsActive AftSchDetailIsActive,
						  	
						  Bef.FinReference BefFinReference, Bef.SchDate BefSchDate, Bef.SchSeq BefSchSeq,
						  Bef.PftOnSchDate BefPftOnSchDate, Bef.CpzOnSchDate BefCpzOnSchDate, Bef.RepayOnSchDate BefRepayOnSchDate,
						  Bef.RvwOnSchDate BefRvwOnSchDate, Bef.DisbOnSchDate BefDisbOnSchDate, Bef.DefSchdDate BefDefSchdDate,
						  Bef.Defered BefDefered, Bef.DeferedPay BefDeferedPay,Bef.DownpaymentOnSchDate BefDownpaymentOnSchDate,
						  Bef.BalanceForPftCal BefBalanceForPftCal, Bef.BaseRate BefBaseRate, Bef.SplRate BefSplRate,
						  Bef.MrgRate BefMrgRate, Bef.ActRate BefActRate, Bef.NoOfDays BefNoOfDays,
						  Bef.DayFactor BefDayFactor, Bef.ProfitCalc BefProfitCalc, Bef.ProfitSchd BefProfitSchd,
						  Bef.PrincipalSchd BefPrincipalSchd, Bef.RepayAmount BefRepayAmount, Bef.ProfitBalance BefProfitBalance,
						  Bef.DisbAmount BefDisbAmount, Bef.DownPaymentAmount BefDownPaymentAmount, Bef.CpzAmount BefCpzAmount,
						  Bef.DefRepaySchd BefDefRepaySchd, Bef.DefProfitSchd BefDefProfitSchd, Bef.DefPrincipalSchd BefDefPrincipalSchd,
						  Bef.ClosingBalance BefClosingBalance, Bef.ProfitFraction BefProfitFraction, Bef.PrvRepayAmount BefPrvRepayAmount,
						  Bef.DefProfitBal BefDefProfitBal, Bef.DefPrincipalBal BefDefPrincipalBal, Bef.SchdPftPaid BefSchdPftPaid,
						  Bef.SchdPriPaid BefSchdPriPaid,
						  Bef.DefProfit BefDefProfit, Bef.DefPrincipal BefDefPrincipal, Bef.Specifier BefSpecifier,
						  Bef.SchdMethod BefSchdMethod, Bef.SchDetailIsActive BefSchDetailIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinScheduleDetails AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinScheduleDetails BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceScheduleDetail')
	</createView>
</changeSet>

<changeSet id="81-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceScoreDetail_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.HeaderId AftHeaderId ,Aft.SubGroupId AftSubGroupId ,Aft.RuleId AftRuleId ,Aft.MaxScore AftMaxScore ,Aft.ExecScore AftExecScore ,
		   Bef.HeaderId BefHeaderId ,Bef.SubGroupId BefSubGroupId ,Bef.RuleId BefRuleId ,Bef.MaxScore BefMaxScore ,Bef.ExecScore BefExecScore
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinanceScoreDetail AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinanceScoreDetail BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="81-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceScoreDetail_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.HeaderId AftHeaderId ,Aft.SubGroupId AftSubGroupId ,Aft.RuleId AftRuleId ,Aft.MaxScore AftMaxScore ,Aft.ExecScore AftExecScore ,
		   Bef.HeaderId BefHeaderId ,Bef.SubGroupId BefSubGroupId ,Bef.RuleId BefRuleId ,Bef.MaxScore BefMaxScore ,Bef.ExecScore BefExecScore
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinanceScoreDetail AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinanceScoreDetail BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
	</createView>
</changeSet>

<changeSet id="82-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceScoreHeader_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.HeaderId AftHeaderId ,Aft.FinReference AftFinReference ,Aft.GroupId AftGroupId ,Aft.MinScore AftMinScore ,
		   Aft.Override AftOverride ,Aft.OverrideScore AftOverrideScore ,Aft.CreditWorth AftCreditWorth ,
		   Bef.HeaderId BefHeaderId ,Bef.FinReference BefFinReference ,Bef.GroupId BefGroupId ,Bef.MinScore BefMinScore ,
		   Bef.Override BefOverride ,Bef.OverrideScore BefOverrideScore ,Bef.CreditWorth BefCreditWorth
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinanceScoreHeader AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinanceScoreHeader BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="82-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceScoreHeader_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.HeaderId AftHeaderId ,Aft.FinReference AftFinReference ,Aft.GroupId AftGroupId ,Aft.MinScore AftMinScore ,
		   Aft.Override AftOverride ,Aft.OverrideScore AftOverrideScore ,Aft.CreditWorth AftCreditWorth ,
		   Bef.HeaderId BefHeaderId ,Bef.FinReference BefFinReference ,Bef.GroupId BefGroupId ,Bef.MinScore BefMinScore ,
		   Bef.Override BefOverride ,Bef.OverrideScore BefOverrideScore ,Bef.CreditWorth BefCreditWorth
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinanceScoreHeader AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinanceScoreHeader BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
	</createView>
</changeSet>

<changeSet id="83-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					  AFT.FINTYPE        AFTFINTYPE,
AFT.FINCATEGORY       AFTFINCATEGORY,
AFT.FINTYPEDESC      AFTFINTYPEDESC,
AFT.FINCCY      AFTFINCCY,
AFT.FINDAYSCALTYPE      AFTFINDAYSCALTYPE,
AFT.FINACTYPE      AFTFINACTYPE,
AFT.FINCONTINGENTACTYPE      AFTFINCONTINGENTACTYPE,
AFT.FINBANKCONTINGENTACTYPE      AFTFINBANKCONTINGENTACTYPE,
AFT.FINPROVISIONACTYPE      AFTFINPROVISIONACTYPE,
AFT.FINSUSPACTYPE      AFTFINSUSPACTYPE,
AFT.FINISGENREF      AFTFINISGENREF,
AFT.FINMAXAMOUNT      AFTFINMAXAMOUNT,
AFT.FINMINAMOUNT      AFTFINMINAMOUNT,
AFT.FINISOPENNEWFINAC      AFTFINISOPENNEWFINAC,
AFT.FINDFTSTMTFRQ      AFTFINDFTSTMTFRQ,
AFT.FINISALWMD      AFTFINISALWMD,
AFT.FINSCHDMTHD      AFTFINSCHDMTHD,
AFT.FINISALWGRACE      AFTFINISALWGRACE,
AFT.FINHISTRETENSION      AFTFINHISTRETENSION,
AFT.FINORGPRFUNCHANGED      AFTFINORGPRFUNCHANGED,
AFT.EQUALREPAYMENT      AFTEQUALREPAYMENT,
AFT.FINRATETYPE      AFTFINRATETYPE,
AFT.FINBASERATE      AFTFINBASERATE,
AFT.FINSPLRATE      AFTFINSPLRATE,
AFT.FINMARGIN      AFTFINMARGIN,
AFT.FININTRATE      AFTFININTRATE,
AFT.FINMINRATE      AFTFINMINRATE,
AFT.FINMAXRATE      AFTFINMAXRATE,
AFT.FINDFTINTFRQ      AFTFINDFTINTFRQ,
AFT.FINISINTCPZ      AFTFINISINTCPZ,
AFT.FINCPZFRQ      AFTFINCPZFRQ,
AFT.FINISRVWALW      AFTFINISRVWALW,
AFT.FINRVWFRQ      AFTFINRVWFRQ,
AFT.FINGRCRATETYPE      AFTFINGRCRATETYPE,
AFT.FINGRCBASERATE      AFTFINGRCBASERATE,
AFT.FINGRCSPLRATE      AFTFINGRCSPLRATE,
AFT.FINGRCMARGIN      AFTFINGRCMARGIN,
AFT.FINGRCINTRATE      AFTFINGRCINTRATE,
AFT.FINGRCMINRATE      AFTFINGRCMINRATE,
AFT.FINGRCMAXRATE      AFTFINGRCMAXRATE,
AFT.FINGRCDFTINTFRQ      AFTFINGRCDFTINTFRQ,
AFT.FINISALWGRCREPAY      AFTFINISALWGRCREPAY,
AFT.FINGRCSCHDMTHD      AFTFINGRCSCHDMTHD,
AFT.FINGRCISINTCPZ      AFTFINGRCISINTCPZ,
AFT.FINGRCCPZFRQ      AFTFINGRCCPZFRQ,
AFT.FINGRCISRVWALW      AFTFINGRCISRVWALW,
AFT.FINGRCRVWFRQ      AFTFINGRCRVWFRQ,
AFT.FINMINTERM      AFTFINMINTERM,
AFT.FINMAXTERM      AFTFINMAXTERM,
AFT.FINDFTTERMS      AFTFINDFTTERMS,
AFT.FINREPAYPFTONFRQ      AFTFINREPAYPFTONFRQ,
AFT.FINRPYFRQ      AFTFINRPYFRQ,
AFT.FINREPAYMETHOD      AFTFINREPAYMETHOD,
AFT.FINISALWPARTIALRPY      AFTFINISALWPARTIALRPY,
AFT.FINISALWDIFFERMENT      AFTFINISALWDIFFERMENT,
AFT.FINMAXDIFFERMENT      AFTFINMAXDIFFERMENT,
AFT.ALWPLANDEFERMENT      AFTALWPLANDEFERMENT,
AFT.PLANDEFERCOUNT      AFTPLANDEFERCOUNT,
AFT.FINISALWEARLYRPY      AFTFINISALWEARLYRPY,
AFT.FINISALWEARLYSETTLE      AFTFINISALWEARLYSETTLE,
AFT.FINODRPYTRIES      AFTFINODRPYTRIES,
AFT.FINEARLYPAYRULE      AFTFINEARLYPAYRULE,
AFT.FINEARLYSETTLERULE      AFTFINEARLYSETTLERULE,
AFT.FINISDWPAYREQUIRED      AFTFINISDWPAYREQUIRED,
AFT.FINRVWRATEAPPLFOR      AFTFINRVWRATEAPPLFOR,
AFT.FINALWRATECHANGEANYDATE      AFTFINALWRATECHANGEANYDATE,
AFT.FINGRCRVWRATEAPPLFOR      AFTFINGRCRVWRATEAPPLFOR,
AFT.FINISINTCPZATGRCEND      AFTFINISINTCPZATGRCEND,
AFT.LIMITELGRULECODE      AFTLIMITELGRULECODE,
AFT.FINELGRULECODE      AFTFINELGRULECODE,
AFT.FINSCHCALCODEONRVW      AFTFINSCHCALCODEONRVW,
AFT.FINDEPOSITRESTRICTEDTO      AFTFINDEPOSITRESTRICTEDTO,
AFT.FINAEBUYORINCEPTION      AFTFINAEBUYORINCEPTION,
AFT.FINAESELLORMATURITY      AFTFINAESELLORMATURITY,
AFT.FINISACTIVE      AFTFINISACTIVE,
AFT.FINASSETTYPE      AFTFINASSETTYPE,
AFT.PFTPAYACTYPE      AFTPFTPAYACTYPE,
AFT.FINISOPENPFTPAYACC      AFTFINISOPENPFTPAYACC,
AFT.FINSCHEDULEON      AFTFINSCHEDULEON,
AFT.FINGRCSCHEDULEON      AFTFINGRCSCHEDULEON,
AFT.FINCOMMITMENTREQ      AFTFINCOMMITMENTREQ,
AFT.FINCOLLATERALREQ      AFTFINCOLLATERALREQ,
AFT.FINDEPRECIATIONREQ      AFTFINDEPRECIATIONREQ,
AFT.FINDEPRECIATIONFRQ      AFTFINDEPRECIATIONFRQ,
AFT.ALLOWRIAINVESTMENT      AFTALLOWRIAINVESTMENT,
AFT.OVERRIDELIMIT      AFTOVERRIDELIMIT,
AFT.LIMITREQUIRED      AFTLIMITREQUIRED,
AFT.FINCOMMITMENTOVRRIDE      AFTFINCOMMITMENTOVRRIDE,
AFT.FINCOLLATERALOVRRIDE      AFTFINCOLLATERALOVRRIDE,
AFT.FINPFTUNCHANGED      AFTFINPFTUNCHANGED,
AFT.APPLYODPENALTY      AFTAPPLYODPENALTY,
AFT.ODINCGRCDAYS      AFTODINCGRCDAYS,
AFT.ODCHARGETYPE      AFTODCHARGETYPE,
AFT.ODGRACEDAYS      AFTODGRACEDAYS,
AFT.ODCHARGECALON      AFTODCHARGECALON,
AFT.ODCHARGEAMTORPERC      AFTODCHARGEAMTORPERC,
AFT.ODALLOWWAIVER      AFTODALLOWWAIVER,
AFT.ODMAXWAIVERPERC      AFTODMAXWAIVERPERC,
AFT.FINDIVISION      AFTFINDIVISION,
AFT.VERSION      AFTVERSION,
AFT.LASTMNTBY      AFTLASTMNTBY,
AFT.LASTMNTON      AFTLASTMNTON,
AFT.RECORDSTATUS      AFTRECORDSTATUS,
AFT.ROLECODE      AFTROLECODE,
AFT.NEXTROLECODE      AFTNEXTROLECODE,
AFT.TASKID      AFTTASKID,
AFT.NEXTTASKID      AFTNEXTTASKID,
AFT.RECORDTYPE      AFTRECORDTYPE,
AFT.WORKFLOWID      AFTWORKFLOWID,
AFT.STEPFINANCE      AFTSTEPFINANCE,
AFT.STEPPINGMANDATORY      AFTSTEPPINGMANDATORY,
AFT.ALWMANUALSTEPS      AFTALWMANUALSTEPS,
AFT.ALWDSTEPPOLICIES      AFTALWDSTEPPOLICIES,
AFT.DFTSTEPPOLICY      AFTDFTSTEPPOLICY,
AFT.PRODUCT      AFTPRODUCT,
AFT.STARTDATE      AFTSTARTDATE,
AFT.ENDDATE      AFTENDDATE,
AFT.TAKAFULMANDATORY      AFTTAKAFULMANDATORY,
AFT.TAKAFULREQ      AFTTAKAFULREQ,
AFT.REMFEESCHDMETHOD      AFTREMFEESCHDMETHOD,
AFT.TAKAFULPROVIDER      AFTTAKAFULPROVIDER,
AFT.ALLOWDOWNPAYPGM      AFTALLOWDOWNPAYPGM,
AFT.SCHEDULETAKAFUL      AFTSCHEDULETAKAFUL,
AFT.REMARKS      AFTREMARKS,
AFT.ALWEARLYPAYMETHODS      AFTALWEARLYPAYMETHODS,
AFT.PROPERTYTAKAFULREQ      AFTPROPERTYTAKAFULREQ,
AFT.TAKAFULPAYTYPE      AFTTAKAFULPAYTYPE,
AFT.PROPERTYTAKAFULPAYTYPE      AFTPROPERTYTAKAFULPAYTYPE,
AFT.PROPERTYTAKAFULPROVIDER      AFTPROPERTYTAKAFULPROVIDER,
AFT.PASTDUEPFTCALMTHD      AFTPASTDUEPFTCALMTHD,
AFT.PASTDUEPFTMARGIN      AFTPASTDUEPFTMARGIN,
AFT.ALWADVANCERENT      AFTALWADVANCERENT,
AFT.GRCADVBASERATE      AFTGRCADVBASERATE,
AFT.GRCADVMARGIN      AFTGRCADVMARGIN,
AFT.GRCADVPFTRATE      AFTGRCADVPFTRATE,
AFT.RPYADVBASERATE      AFTRPYADVBASERATE,
AFT.RPYADVMARGIN      AFTRPYADVMARGIN,
AFT.RPYADVPFTRATE      AFTRPYADVPFTRATE,
AFT.ALWCREDITINS      AFTALWCREDITINS,
AFT.ROLLOVERFINANCE      AFTROLLOVERFINANCE,
AFT.ROLLOVERFRQ      AFTROLLOVERFRQ,
AFT.DOWNPAYRULE      AFTDOWNPAYRULE,
AFT.FINSUSPTRIGGER      AFTFINSUSPTRIGGER,
AFT.FINSUSPREMARKS      AFTFINSUSPREMARKS,
AFT.ALWMULTIPARTYDISB      AFTALWMULTIPARTYDISB,
AFT.TDSAPPLICABLE      AFTTDSAPPLICABLE,
AFT.COLLATERALTYPE      AFTCOLLATERALTYPE,
AFT.MANUALSCHEDULE      AFTMANUALSCHEDULE,
AFT.APPLYGRCPRICING      AFTAPPLYGRCPRICING,
AFT.GRCPRICINGMETHOD      AFTGRCPRICINGMETHOD,
AFT.APPLYRPYPRICING      AFTAPPLYRPYPRICING,
AFT.RPYPRICINGMETHOD      AFTRPYPRICINGMETHOD,
AFT.RPYHIERARCHY      AFTRPYHIERARCHY,
AFT.DROPLINEOD      AFTDROPLINEOD,
AFT.DROPPINGMETHOD      AFTDROPPINGMETHOD,
AFT.RATECHGANYDAY      AFTRATECHGANYDAY,
AFT.ALWBPI      AFTALWBPI,
AFT.BPITREATMENT      AFTBPITREATMENT,
AFT.PFTDUESCHON      AFTPFTDUESCHON,
AFT.PLANEMIHALW      AFTPLANEMIHALW,
AFT.PLANEMIHMETHOD      AFTPLANEMIHMETHOD,
AFT.PLANEMIHMAXPERYEAR      AFTPLANEMIHMAXPERYEAR,
AFT.PLANEMIHMAX      AFTPLANEMIHMAX,
AFT.PLANEMIHLOCKPERIOD      AFTPLANEMIHLOCKPERIOD,
AFT.PLANEMICPZ      AFTPLANEMICPZ,
AFT.UNPLANEMIHLOCKPERIOD      AFTUNPLANEMIHLOCKPERIOD,
AFT.UNPLANEMICPZ      AFTUNPLANEMICPZ,
AFT.REAGECPZ      AFTREAGECPZ,
AFT.FDDLOCKPERIOD      AFTFDDLOCKPERIOD,
AFT.ALWDRPYMETHODS      AFTALWDRPYMETHODS,
AFT.MAXUNPLANNEDEMI      AFTMAXUNPLANNEDEMI,
AFT.MAXREAGEHOLIDAYS      AFTMAXREAGEHOLIDAYS,
AFT.CALROUNDINGMODE      AFTCALROUNDINGMODE,
AFT.FREQUENCYDAYS      AFTFREQUENCYDAYS,
AFT.QUICKDISB      AFTQUICKDISB,
AFT.ALWREAGE      AFTALWREAGE,
AFT.ALWUNPLANEMIHOLIDAY      AFTALWUNPLANEMIHOLIDAY,
BEF.FINHISTRETENSION     BEFFINHISTRETENSION,
BEF.FINORGPRFUNCHANGED     BEFFINORGPRFUNCHANGED,
BEF.EQUALREPAYMENT     BEFEQUALREPAYMENT,
BEF.FINRATETYPE     BEFFINRATETYPE,
BEF.FINBASERATE     BEFFINBASERATE,
BEF.FINSPLRATE     BEFFINSPLRATE,
BEF.FINMARGIN     BEFFINMARGIN,
BEF.FININTRATE     BEFFININTRATE,
BEF.FINMINRATE     BEFFINMINRATE,
BEF.FINMAXRATE     BEFFINMAXRATE,
BEF.FINDFTINTFRQ     BEFFINDFTINTFRQ,
BEF.FINISINTCPZ     BEFFINISINTCPZ,
BEF.FINCPZFRQ     BEFFINCPZFRQ,
BEF.FINISRVWALW     BEFFINISRVWALW,
BEF.FINRVWFRQ     BEFFINRVWFRQ,
BEF.FINGRCRATETYPE     BEFFINGRCRATETYPE,
BEF.FINGRCBASERATE     BEFFINGRCBASERATE,
BEF.FINGRCSPLRATE     BEFFINGRCSPLRATE,
BEF.FINGRCMARGIN     BEFFINGRCMARGIN,
BEF.FINGRCINTRATE     BEFFINGRCINTRATE,
BEF.FINGRCMINRATE     BEFFINGRCMINRATE,
BEF.FINGRCMAXRATE     BEFFINGRCMAXRATE,
BEF.FINGRCDFTINTFRQ     BEFFINGRCDFTINTFRQ,
BEF.FINISALWGRCREPAY     BEFFINISALWGRCREPAY,
BEF.FINGRCSCHDMTHD     BEFFINGRCSCHDMTHD,
BEF.FINGRCISINTCPZ     BEFFINGRCISINTCPZ,
BEF.FINGRCCPZFRQ     BEFFINGRCCPZFRQ,
BEF.FINGRCISRVWALW     BEFFINGRCISRVWALW,
BEF.FINGRCRVWFRQ     BEFFINGRCRVWFRQ,
BEF.FINMINTERM     BEFFINMINTERM,
BEF.FINMAXTERM     BEFFINMAXTERM,
BEF.FINDFTTERMS     BEFFINDFTTERMS,
BEF.FINREPAYPFTONFRQ     BEFFINREPAYPFTONFRQ,
BEF.FINRPYFRQ     BEFFINRPYFRQ,
BEF.FINREPAYMETHOD     BEFFINREPAYMETHOD,
BEF.FINISALWPARTIALRPY     BEFFINISALWPARTIALRPY,
BEF.FINISALWDIFFERMENT     BEFFINISALWDIFFERMENT,
BEF.FINMAXDIFFERMENT     BEFFINMAXDIFFERMENT,
BEF.ALWPLANDEFERMENT     BEFALWPLANDEFERMENT,
BEF.PLANDEFERCOUNT     BEFPLANDEFERCOUNT,
BEF.FINISALWEARLYRPY     BEFFINISALWEARLYRPY,
BEF.FINISALWEARLYSETTLE     BEFFINISALWEARLYSETTLE,
BEF.FINODRPYTRIES     BEFFINODRPYTRIES,
BEF.FINEARLYPAYRULE     BEFFINEARLYPAYRULE,
BEF.FINEARLYSETTLERULE     BEFFINEARLYSETTLERULE,
BEF.FINISDWPAYREQUIRED     BEFFINISDWPAYREQUIRED,
BEF.FINRVWRATEAPPLFOR     BEFFINRVWRATEAPPLFOR,
BEF.FINALWRATECHANGEANYDATE     BEFFINALWRATECHANGEANYDATE,
BEF.FINGRCRVWRATEAPPLFOR     BEFFINGRCRVWRATEAPPLFOR,
BEF.FINISINTCPZATGRCEND     BEFFINISINTCPZATGRCEND,
BEF.LIMITELGRULECODE     BEFLIMITELGRULECODE,
BEF.FINELGRULECODE     BEFFINELGRULECODE,
BEF.FINSCHCALCODEONRVW     BEFFINSCHCALCODEONRVW,
BEF.FINDEPOSITRESTRICTEDTO     BEFFINDEPOSITRESTRICTEDTO,
BEF.FINAEBUYORINCEPTION     BEFFINAEBUYORINCEPTION,
BEF.FINAESELLORMATURITY     BEFFINAESELLORMATURITY,
BEF.FINISACTIVE     BEFFINISACTIVE,
BEF.FINASSETTYPE     BEFFINASSETTYPE,
BEF.PFTPAYACTYPE     BEFPFTPAYACTYPE,
BEF.FINISOPENPFTPAYACC     BEFFINISOPENPFTPAYACC,
BEF.FINSCHEDULEON     BEFFINSCHEDULEON,
BEF.FINGRCSCHEDULEON     BEFFINGRCSCHEDULEON,
BEF.FINCOMMITMENTREQ     BEFFINCOMMITMENTREQ,
BEF.FINCOLLATERALREQ     BEFFINCOLLATERALREQ,
BEF.FINDEPRECIATIONREQ     BEFFINDEPRECIATIONREQ,
BEF.FINDEPRECIATIONFRQ     BEFFINDEPRECIATIONFRQ,
BEF.ALLOWRIAINVESTMENT     BEFALLOWRIAINVESTMENT,
BEF.OVERRIDELIMIT     BEFOVERRIDELIMIT,
BEF.LIMITREQUIRED     BEFLIMITREQUIRED,
BEF.FINCOMMITMENTOVRRIDE     BEFFINCOMMITMENTOVRRIDE,
BEF.FINCOLLATERALOVRRIDE     BEFFINCOLLATERALOVRRIDE,
BEF.FINPFTUNCHANGED     BEFFINPFTUNCHANGED,
BEF.APPLYODPENALTY     BEFAPPLYODPENALTY,
BEF.ODINCGRCDAYS     BEFODINCGRCDAYS,
BEF.ODCHARGETYPE     BEFODCHARGETYPE,
BEF.ODGRACEDAYS     BEFODGRACEDAYS,
BEF.ODCHARGECALON     BEFODCHARGECALON,
BEF.ODCHARGEAMTORPERC     BEFODCHARGEAMTORPERC,
BEF.ODALLOWWAIVER     BEFODALLOWWAIVER,
BEF.ODMAXWAIVERPERC     BEFODMAXWAIVERPERC,
BEF.FINDIVISION     BEFFINDIVISION,
BEF.VERSION     BEFVERSION,
BEF.LASTMNTBY     BEFLASTMNTBY,
BEF.LASTMNTON     BEFLASTMNTON,
BEF.RECORDSTATUS     BEFRECORDSTATUS,
BEF.ROLECODE     BEFROLECODE,
BEF.NEXTROLECODE     BEFNEXTROLECODE,
BEF.TASKID     BEFTASKID,
BEF.NEXTTASKID     BEFNEXTTASKID,
BEF.RECORDTYPE     BEFRECORDTYPE,
BEF.WORKFLOWID     BEFWORKFLOWID,
BEF.STEPFINANCE     BEFSTEPFINANCE,
BEF.STEPPINGMANDATORY     BEFSTEPPINGMANDATORY,
BEF.ALWMANUALSTEPS     BEFALWMANUALSTEPS,
BEF.ALWDSTEPPOLICIES     BEFALWDSTEPPOLICIES,
BEF.DFTSTEPPOLICY     BEFDFTSTEPPOLICY,
BEF.PRODUCT     BEFPRODUCT,
BEF.STARTDATE     BEFSTARTDATE,
BEF.ENDDATE     BEFENDDATE,
BEF.TAKAFULMANDATORY     BEFTAKAFULMANDATORY,
BEF.TAKAFULREQ     BEFTAKAFULREQ,
BEF.REMFEESCHDMETHOD     BEFREMFEESCHDMETHOD,
BEF.TAKAFULPROVIDER     BEFTAKAFULPROVIDER,
BEF.ALLOWDOWNPAYPGM     BEFALLOWDOWNPAYPGM,
BEF.SCHEDULETAKAFUL     BEFSCHEDULETAKAFUL,
BEF.REMARKS     BEFREMARKS,
BEF.ALWEARLYPAYMETHODS     BEFALWEARLYPAYMETHODS,
BEF.PROPERTYTAKAFULREQ     BEFPROPERTYTAKAFULREQ,
BEF.TAKAFULPAYTYPE     BEFTAKAFULPAYTYPE,
BEF.PROPERTYTAKAFULPAYTYPE     BEFPROPERTYTAKAFULPAYTYPE,
BEF.PROPERTYTAKAFULPROVIDER     BEFPROPERTYTAKAFULPROVIDER,
BEF.PASTDUEPFTCALMTHD     BEFPASTDUEPFTCALMTHD,
BEF.PASTDUEPFTMARGIN     BEFPASTDUEPFTMARGIN,
BEF.ALWADVANCERENT     BEFALWADVANCERENT,
BEF.GRCADVBASERATE     BEFGRCADVBASERATE,
BEF.GRCADVMARGIN     BEFGRCADVMARGIN,
BEF.GRCADVPFTRATE     BEFGRCADVPFTRATE,
BEF.RPYADVBASERATE     BEFRPYADVBASERATE,
BEF.RPYADVMARGIN     BEFRPYADVMARGIN,
BEF.RPYADVPFTRATE     BEFRPYADVPFTRATE,
BEF.ALWCREDITINS     BEFALWCREDITINS,
BEF.ROLLOVERFINANCE     BEFROLLOVERFINANCE,
BEF.ROLLOVERFRQ     BEFROLLOVERFRQ,
BEF.DOWNPAYRULE     BEFDOWNPAYRULE,
BEF.FINSUSPTRIGGER     BEFFINSUSPTRIGGER,
BEF.FINSUSPREMARKS     BEFFINSUSPREMARKS,
BEF.ALWMULTIPARTYDISB     BEFALWMULTIPARTYDISB,
BEF.TDSAPPLICABLE     BEFTDSAPPLICABLE,
BEF.COLLATERALTYPE     BEFCOLLATERALTYPE,
BEF.MANUALSCHEDULE     BEFMANUALSCHEDULE,
BEF.APPLYGRCPRICING     BEFAPPLYGRCPRICING,
BEF.GRCPRICINGMETHOD     BEFGRCPRICINGMETHOD,
BEF.APPLYRPYPRICING     BEFAPPLYRPYPRICING,
BEF.RPYPRICINGMETHOD     BEFRPYPRICINGMETHOD,
BEF.RPYHIERARCHY     BEFRPYHIERARCHY,
BEF.DROPLINEOD     BEFDROPLINEOD,
BEF.DROPPINGMETHOD     BEFDROPPINGMETHOD,
BEF.RATECHGANYDAY     BEFRATECHGANYDAY,
BEF.ALWBPI     BEFALWBPI,
BEF.BPITREATMENT     BEFBPITREATMENT,
BEF.PFTDUESCHON     BEFPFTDUESCHON,
BEF.PLANEMIHALW     BEFPLANEMIHALW,
BEF.PLANEMIHMETHOD     BEFPLANEMIHMETHOD,
BEF.PLANEMIHMAXPERYEAR     BEFPLANEMIHMAXPERYEAR,
BEF.PLANEMIHMAX     BEFPLANEMIHMAX,
BEF.PLANEMIHLOCKPERIOD     BEFPLANEMIHLOCKPERIOD,
BEF.PLANEMICPZ     BEFPLANEMICPZ,
BEF.UNPLANEMIHLOCKPERIOD     BEFUNPLANEMIHLOCKPERIOD,
BEF.UNPLANEMICPZ     BEFUNPLANEMICPZ,
BEF.REAGECPZ     BEFREAGECPZ,
BEF.FDDLOCKPERIOD     BEFFDDLOCKPERIOD,
BEF.ALWDRPYMETHODS     BEFALWDRPYMETHODS,
BEF.MAXUNPLANNEDEMI     BEFMAXUNPLANNEDEMI,
BEF.MAXREAGEHOLIDAYS     BEFMAXREAGEHOLIDAYS,
BEF.CALROUNDINGMODE     BEFCALROUNDINGMODE,
BEF.FREQUENCYDAYS     BEFFREQUENCYDAYS,
BEF.QUICKDISB     BEFQUICKDISB,
BEF.ALWREAGE     BEFALWREAGE,
BEF.ALWUNPLANEMIHOLIDAY     BEFALWUNPLANEMIHOLIDAY
FROM          AuditHeader TH   INNER JOIN
                       SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
                       AdtRMTFinanceTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                       AdtRMTFinanceTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceType')
					
						
	</createView>
		</changeSet>

<changeSet id="83-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				  AFT.FINTYPE        AFTFINTYPE,
AFT.FINCATEGORY       AFTFINCATEGORY,
AFT.FINTYPEDESC      AFTFINTYPEDESC,
AFT.FINCCY      AFTFINCCY,
AFT.FINDAYSCALTYPE      AFTFINDAYSCALTYPE,
AFT.FINACTYPE      AFTFINACTYPE,
AFT.FINCONTINGENTACTYPE      AFTFINCONTINGENTACTYPE,
AFT.FINBANKCONTINGENTACTYPE      AFTFINBANKCONTINGENTACTYPE,
AFT.FINPROVISIONACTYPE      AFTFINPROVISIONACTYPE,
AFT.FINSUSPACTYPE      AFTFINSUSPACTYPE,
AFT.FINISGENREF      AFTFINISGENREF,
AFT.FINMAXAMOUNT      AFTFINMAXAMOUNT,
AFT.FINMINAMOUNT      AFTFINMINAMOUNT,
AFT.FINISOPENNEWFINAC      AFTFINISOPENNEWFINAC,
AFT.FINDFTSTMTFRQ      AFTFINDFTSTMTFRQ,
AFT.FINISALWMD      AFTFINISALWMD,
AFT.FINSCHDMTHD      AFTFINSCHDMTHD,
AFT.FINISALWGRACE      AFTFINISALWGRACE,
AFT.FINHISTRETENSION      AFTFINHISTRETENSION,
AFT.FINORGPRFUNCHANGED      AFTFINORGPRFUNCHANGED,
AFT.EQUALREPAYMENT      AFTEQUALREPAYMENT,
AFT.FINRATETYPE      AFTFINRATETYPE,
AFT.FINBASERATE      AFTFINBASERATE,
AFT.FINSPLRATE      AFTFINSPLRATE,
AFT.FINMARGIN      AFTFINMARGIN,
AFT.FININTRATE      AFTFININTRATE,
AFT.FINMINRATE      AFTFINMINRATE,
AFT.FINMAXRATE      AFTFINMAXRATE,
AFT.FINDFTINTFRQ      AFTFINDFTINTFRQ,
AFT.FINISINTCPZ      AFTFINISINTCPZ,
AFT.FINCPZFRQ      AFTFINCPZFRQ,
AFT.FINISRVWALW      AFTFINISRVWALW,
AFT.FINRVWFRQ      AFTFINRVWFRQ,
AFT.FINGRCRATETYPE      AFTFINGRCRATETYPE,
AFT.FINGRCBASERATE      AFTFINGRCBASERATE,
AFT.FINGRCSPLRATE      AFTFINGRCSPLRATE,
AFT.FINGRCMARGIN      AFTFINGRCMARGIN,
AFT.FINGRCINTRATE      AFTFINGRCINTRATE,
AFT.FINGRCMINRATE      AFTFINGRCMINRATE,
AFT.FINGRCMAXRATE      AFTFINGRCMAXRATE,
AFT.FINGRCDFTINTFRQ      AFTFINGRCDFTINTFRQ,
AFT.FINISALWGRCREPAY      AFTFINISALWGRCREPAY,
AFT.FINGRCSCHDMTHD      AFTFINGRCSCHDMTHD,
AFT.FINGRCISINTCPZ      AFTFINGRCISINTCPZ,
AFT.FINGRCCPZFRQ      AFTFINGRCCPZFRQ,
AFT.FINGRCISRVWALW      AFTFINGRCISRVWALW,
AFT.FINGRCRVWFRQ      AFTFINGRCRVWFRQ,
AFT.FINMINTERM      AFTFINMINTERM,
AFT.FINMAXTERM      AFTFINMAXTERM,
AFT.FINDFTTERMS      AFTFINDFTTERMS,
AFT.FINREPAYPFTONFRQ      AFTFINREPAYPFTONFRQ,
AFT.FINRPYFRQ      AFTFINRPYFRQ,
AFT.FINREPAYMETHOD      AFTFINREPAYMETHOD,
AFT.FINISALWPARTIALRPY      AFTFINISALWPARTIALRPY,
AFT.FINISALWDIFFERMENT      AFTFINISALWDIFFERMENT,
AFT.FINMAXDIFFERMENT      AFTFINMAXDIFFERMENT,
AFT.ALWPLANDEFERMENT      AFTALWPLANDEFERMENT,
AFT.PLANDEFERCOUNT      AFTPLANDEFERCOUNT,
AFT.FINISALWEARLYRPY      AFTFINISALWEARLYRPY,
AFT.FINISALWEARLYSETTLE      AFTFINISALWEARLYSETTLE,
AFT.FINODRPYTRIES      AFTFINODRPYTRIES,
AFT.FINEARLYPAYRULE      AFTFINEARLYPAYRULE,
AFT.FINEARLYSETTLERULE      AFTFINEARLYSETTLERULE,
AFT.FINISDWPAYREQUIRED      AFTFINISDWPAYREQUIRED,
AFT.FINRVWRATEAPPLFOR      AFTFINRVWRATEAPPLFOR,
AFT.FINALWRATECHANGEANYDATE      AFTFINALWRATECHANGEANYDATE,
AFT.FINGRCRVWRATEAPPLFOR      AFTFINGRCRVWRATEAPPLFOR,
AFT.FINISINTCPZATGRCEND      AFTFINISINTCPZATGRCEND,
AFT.LIMITELGRULECODE      AFTLIMITELGRULECODE,
AFT.FINELGRULECODE      AFTFINELGRULECODE,
AFT.FINSCHCALCODEONRVW      AFTFINSCHCALCODEONRVW,
AFT.FINDEPOSITRESTRICTEDTO      AFTFINDEPOSITRESTRICTEDTO,
AFT.FINAEBUYORINCEPTION      AFTFINAEBUYORINCEPTION,
AFT.FINAESELLORMATURITY      AFTFINAESELLORMATURITY,
AFT.FINISACTIVE      AFTFINISACTIVE,
AFT.FINASSETTYPE      AFTFINASSETTYPE,
AFT.PFTPAYACTYPE      AFTPFTPAYACTYPE,
AFT.FINISOPENPFTPAYACC      AFTFINISOPENPFTPAYACC,
AFT.FINSCHEDULEON      AFTFINSCHEDULEON,
AFT.FINGRCSCHEDULEON      AFTFINGRCSCHEDULEON,
AFT.FINCOMMITMENTREQ      AFTFINCOMMITMENTREQ,
AFT.FINCOLLATERALREQ      AFTFINCOLLATERALREQ,
AFT.FINDEPRECIATIONREQ      AFTFINDEPRECIATIONREQ,
AFT.FINDEPRECIATIONFRQ      AFTFINDEPRECIATIONFRQ,
AFT.ALLOWRIAINVESTMENT      AFTALLOWRIAINVESTMENT,
AFT.OVERRIDELIMIT      AFTOVERRIDELIMIT,
AFT.LIMITREQUIRED      AFTLIMITREQUIRED,
AFT.FINCOMMITMENTOVRRIDE      AFTFINCOMMITMENTOVRRIDE,
AFT.FINCOLLATERALOVRRIDE      AFTFINCOLLATERALOVRRIDE,
AFT.FINPFTUNCHANGED      AFTFINPFTUNCHANGED,
AFT.APPLYODPENALTY      AFTAPPLYODPENALTY,
AFT.ODINCGRCDAYS      AFTODINCGRCDAYS,
AFT.ODCHARGETYPE      AFTODCHARGETYPE,
AFT.ODGRACEDAYS      AFTODGRACEDAYS,
AFT.ODCHARGECALON      AFTODCHARGECALON,
AFT.ODCHARGEAMTORPERC      AFTODCHARGEAMTORPERC,
AFT.ODALLOWWAIVER      AFTODALLOWWAIVER,
AFT.ODMAXWAIVERPERC      AFTODMAXWAIVERPERC,
AFT.FINDIVISION      AFTFINDIVISION,
AFT.VERSION      AFTVERSION,
AFT.LASTMNTBY      AFTLASTMNTBY,
AFT.LASTMNTON      AFTLASTMNTON,
AFT.RECORDSTATUS      AFTRECORDSTATUS,
AFT.ROLECODE      AFTROLECODE,
AFT.NEXTROLECODE      AFTNEXTROLECODE,
AFT.TASKID      AFTTASKID,
AFT.NEXTTASKID      AFTNEXTTASKID,
AFT.RECORDTYPE      AFTRECORDTYPE,
AFT.WORKFLOWID      AFTWORKFLOWID,
AFT.STEPFINANCE      AFTSTEPFINANCE,
AFT.STEPPINGMANDATORY      AFTSTEPPINGMANDATORY,
AFT.ALWMANUALSTEPS      AFTALWMANUALSTEPS,
AFT.ALWDSTEPPOLICIES      AFTALWDSTEPPOLICIES,
AFT.DFTSTEPPOLICY      AFTDFTSTEPPOLICY,
AFT.PRODUCT      AFTPRODUCT,
AFT.STARTDATE      AFTSTARTDATE,
AFT.ENDDATE      AFTENDDATE,
AFT.TAKAFULMANDATORY      AFTTAKAFULMANDATORY,
AFT.TAKAFULREQ      AFTTAKAFULREQ,
AFT.REMFEESCHDMETHOD      AFTREMFEESCHDMETHOD,
AFT.TAKAFULPROVIDER      AFTTAKAFULPROVIDER,
AFT.ALLOWDOWNPAYPGM      AFTALLOWDOWNPAYPGM,
AFT.SCHEDULETAKAFUL      AFTSCHEDULETAKAFUL,
AFT.REMARKS      AFTREMARKS,
AFT.ALWEARLYPAYMETHODS      AFTALWEARLYPAYMETHODS,
AFT.PROPERTYTAKAFULREQ      AFTPROPERTYTAKAFULREQ,
AFT.TAKAFULPAYTYPE      AFTTAKAFULPAYTYPE,
AFT.PROPERTYTAKAFULPAYTYPE      AFTPROPERTYTAKAFULPAYTYPE,
AFT.PROPERTYTAKAFULPROVIDER      AFTPROPERTYTAKAFULPROVIDER,
AFT.PASTDUEPFTCALMTHD      AFTPASTDUEPFTCALMTHD,
AFT.PASTDUEPFTMARGIN      AFTPASTDUEPFTMARGIN,
AFT.ALWADVANCERENT      AFTALWADVANCERENT,
AFT.GRCADVBASERATE      AFTGRCADVBASERATE,
AFT.GRCADVMARGIN      AFTGRCADVMARGIN,
AFT.GRCADVPFTRATE      AFTGRCADVPFTRATE,
AFT.RPYADVBASERATE      AFTRPYADVBASERATE,
AFT.RPYADVMARGIN      AFTRPYADVMARGIN,
AFT.RPYADVPFTRATE      AFTRPYADVPFTRATE,
AFT.ALWCREDITINS      AFTALWCREDITINS,
AFT.ROLLOVERFINANCE      AFTROLLOVERFINANCE,
AFT.ROLLOVERFRQ      AFTROLLOVERFRQ,
AFT.DOWNPAYRULE      AFTDOWNPAYRULE,
AFT.FINSUSPTRIGGER      AFTFINSUSPTRIGGER,
AFT.FINSUSPREMARKS      AFTFINSUSPREMARKS,
AFT.ALWMULTIPARTYDISB      AFTALWMULTIPARTYDISB,
AFT.TDSAPPLICABLE      AFTTDSAPPLICABLE,
AFT.COLLATERALTYPE      AFTCOLLATERALTYPE,
AFT.MANUALSCHEDULE      AFTMANUALSCHEDULE,
AFT.APPLYGRCPRICING      AFTAPPLYGRCPRICING,
AFT.GRCPRICINGMETHOD      AFTGRCPRICINGMETHOD,
AFT.APPLYRPYPRICING      AFTAPPLYRPYPRICING,
AFT.RPYPRICINGMETHOD      AFTRPYPRICINGMETHOD,
AFT.RPYHIERARCHY      AFTRPYHIERARCHY,
AFT.DROPLINEOD      AFTDROPLINEOD,
AFT.DROPPINGMETHOD      AFTDROPPINGMETHOD,
AFT.RATECHGANYDAY      AFTRATECHGANYDAY,
AFT.ALWBPI      AFTALWBPI,
AFT.BPITREATMENT      AFTBPITREATMENT,
AFT.PFTDUESCHON      AFTPFTDUESCHON,
AFT.PLANEMIHALW      AFTPLANEMIHALW,
AFT.PLANEMIHMETHOD      AFTPLANEMIHMETHOD,
AFT.PLANEMIHMAXPERYEAR      AFTPLANEMIHMAXPERYEAR,
AFT.PLANEMIHMAX      AFTPLANEMIHMAX,
AFT.PLANEMIHLOCKPERIOD      AFTPLANEMIHLOCKPERIOD,
AFT.PLANEMICPZ      AFTPLANEMICPZ,
AFT.UNPLANEMIHLOCKPERIOD      AFTUNPLANEMIHLOCKPERIOD,
AFT.UNPLANEMICPZ      AFTUNPLANEMICPZ,
AFT.REAGECPZ      AFTREAGECPZ,
AFT.FDDLOCKPERIOD      AFTFDDLOCKPERIOD,
AFT.ALWDRPYMETHODS      AFTALWDRPYMETHODS,
AFT.MAXUNPLANNEDEMI      AFTMAXUNPLANNEDEMI,
AFT.MAXREAGEHOLIDAYS      AFTMAXREAGEHOLIDAYS,
AFT.CALROUNDINGMODE      AFTCALROUNDINGMODE,
AFT.FREQUENCYDAYS      AFTFREQUENCYDAYS,
AFT.QUICKDISB      AFTQUICKDISB,
AFT.ALWREAGE      AFTALWREAGE,
AFT.ALWUNPLANEMIHOLIDAY      AFTALWUNPLANEMIHOLIDAY,
BEF.FINHISTRETENSION     BEFFINHISTRETENSION,
BEF.FINORGPRFUNCHANGED     BEFFINORGPRFUNCHANGED,
BEF.EQUALREPAYMENT     BEFEQUALREPAYMENT,
BEF.FINRATETYPE     BEFFINRATETYPE,
BEF.FINBASERATE     BEFFINBASERATE,
BEF.FINSPLRATE     BEFFINSPLRATE,
BEF.FINMARGIN     BEFFINMARGIN,
BEF.FININTRATE     BEFFININTRATE,
BEF.FINMINRATE     BEFFINMINRATE,
BEF.FINMAXRATE     BEFFINMAXRATE,
BEF.FINDFTINTFRQ     BEFFINDFTINTFRQ,
BEF.FINISINTCPZ     BEFFINISINTCPZ,
BEF.FINCPZFRQ     BEFFINCPZFRQ,
BEF.FINISRVWALW     BEFFINISRVWALW,
BEF.FINRVWFRQ     BEFFINRVWFRQ,
BEF.FINGRCRATETYPE     BEFFINGRCRATETYPE,
BEF.FINGRCBASERATE     BEFFINGRCBASERATE,
BEF.FINGRCSPLRATE     BEFFINGRCSPLRATE,
BEF.FINGRCMARGIN     BEFFINGRCMARGIN,
BEF.FINGRCINTRATE     BEFFINGRCINTRATE,
BEF.FINGRCMINRATE     BEFFINGRCMINRATE,
BEF.FINGRCMAXRATE     BEFFINGRCMAXRATE,
BEF.FINGRCDFTINTFRQ     BEFFINGRCDFTINTFRQ,
BEF.FINISALWGRCREPAY     BEFFINISALWGRCREPAY,
BEF.FINGRCSCHDMTHD     BEFFINGRCSCHDMTHD,
BEF.FINGRCISINTCPZ     BEFFINGRCISINTCPZ,
BEF.FINGRCCPZFRQ     BEFFINGRCCPZFRQ,
BEF.FINGRCISRVWALW     BEFFINGRCISRVWALW,
BEF.FINGRCRVWFRQ     BEFFINGRCRVWFRQ,
BEF.FINMINTERM     BEFFINMINTERM,
BEF.FINMAXTERM     BEFFINMAXTERM,
BEF.FINDFTTERMS     BEFFINDFTTERMS,
BEF.FINREPAYPFTONFRQ     BEFFINREPAYPFTONFRQ,
BEF.FINRPYFRQ     BEFFINRPYFRQ,
BEF.FINREPAYMETHOD     BEFFINREPAYMETHOD,
BEF.FINISALWPARTIALRPY     BEFFINISALWPARTIALRPY,
BEF.FINISALWDIFFERMENT     BEFFINISALWDIFFERMENT,
BEF.FINMAXDIFFERMENT     BEFFINMAXDIFFERMENT,
BEF.ALWPLANDEFERMENT     BEFALWPLANDEFERMENT,
BEF.PLANDEFERCOUNT     BEFPLANDEFERCOUNT,
BEF.FINISALWEARLYRPY     BEFFINISALWEARLYRPY,
BEF.FINISALWEARLYSETTLE     BEFFINISALWEARLYSETTLE,
BEF.FINODRPYTRIES     BEFFINODRPYTRIES,
BEF.FINEARLYPAYRULE     BEFFINEARLYPAYRULE,
BEF.FINEARLYSETTLERULE     BEFFINEARLYSETTLERULE,
BEF.FINISDWPAYREQUIRED     BEFFINISDWPAYREQUIRED,
BEF.FINRVWRATEAPPLFOR     BEFFINRVWRATEAPPLFOR,
BEF.FINALWRATECHANGEANYDATE     BEFFINALWRATECHANGEANYDATE,
BEF.FINGRCRVWRATEAPPLFOR     BEFFINGRCRVWRATEAPPLFOR,
BEF.FINISINTCPZATGRCEND     BEFFINISINTCPZATGRCEND,
BEF.LIMITELGRULECODE     BEFLIMITELGRULECODE,
BEF.FINELGRULECODE     BEFFINELGRULECODE,
BEF.FINSCHCALCODEONRVW     BEFFINSCHCALCODEONRVW,
BEF.FINDEPOSITRESTRICTEDTO     BEFFINDEPOSITRESTRICTEDTO,
BEF.FINAEBUYORINCEPTION     BEFFINAEBUYORINCEPTION,
BEF.FINAESELLORMATURITY     BEFFINAESELLORMATURITY,
BEF.FINISACTIVE     BEFFINISACTIVE,
BEF.FINASSETTYPE     BEFFINASSETTYPE,
BEF.PFTPAYACTYPE     BEFPFTPAYACTYPE,
BEF.FINISOPENPFTPAYACC     BEFFINISOPENPFTPAYACC,
BEF.FINSCHEDULEON     BEFFINSCHEDULEON,
BEF.FINGRCSCHEDULEON     BEFFINGRCSCHEDULEON,
BEF.FINCOMMITMENTREQ     BEFFINCOMMITMENTREQ,
BEF.FINCOLLATERALREQ     BEFFINCOLLATERALREQ,
BEF.FINDEPRECIATIONREQ     BEFFINDEPRECIATIONREQ,
BEF.FINDEPRECIATIONFRQ     BEFFINDEPRECIATIONFRQ,
BEF.ALLOWRIAINVESTMENT     BEFALLOWRIAINVESTMENT,
BEF.OVERRIDELIMIT     BEFOVERRIDELIMIT,
BEF.LIMITREQUIRED     BEFLIMITREQUIRED,
BEF.FINCOMMITMENTOVRRIDE     BEFFINCOMMITMENTOVRRIDE,
BEF.FINCOLLATERALOVRRIDE     BEFFINCOLLATERALOVRRIDE,
BEF.FINPFTUNCHANGED     BEFFINPFTUNCHANGED,
BEF.APPLYODPENALTY     BEFAPPLYODPENALTY,
BEF.ODINCGRCDAYS     BEFODINCGRCDAYS,
BEF.ODCHARGETYPE     BEFODCHARGETYPE,
BEF.ODGRACEDAYS     BEFODGRACEDAYS,
BEF.ODCHARGECALON     BEFODCHARGECALON,
BEF.ODCHARGEAMTORPERC     BEFODCHARGEAMTORPERC,
BEF.ODALLOWWAIVER     BEFODALLOWWAIVER,
BEF.ODMAXWAIVERPERC     BEFODMAXWAIVERPERC,
BEF.FINDIVISION     BEFFINDIVISION,
BEF.VERSION     BEFVERSION,
BEF.LASTMNTBY     BEFLASTMNTBY,
BEF.LASTMNTON     BEFLASTMNTON,
BEF.RECORDSTATUS     BEFRECORDSTATUS,
BEF.ROLECODE     BEFROLECODE,
BEF.NEXTROLECODE     BEFNEXTROLECODE,
BEF.TASKID     BEFTASKID,
BEF.NEXTTASKID     BEFNEXTTASKID,
BEF.RECORDTYPE     BEFRECORDTYPE,
BEF.WORKFLOWID     BEFWORKFLOWID,
BEF.STEPFINANCE     BEFSTEPFINANCE,
BEF.STEPPINGMANDATORY     BEFSTEPPINGMANDATORY,
BEF.ALWMANUALSTEPS     BEFALWMANUALSTEPS,
BEF.ALWDSTEPPOLICIES     BEFALWDSTEPPOLICIES,
BEF.DFTSTEPPOLICY     BEFDFTSTEPPOLICY,
BEF.PRODUCT     BEFPRODUCT,
BEF.STARTDATE     BEFSTARTDATE,
BEF.ENDDATE     BEFENDDATE,
BEF.TAKAFULMANDATORY     BEFTAKAFULMANDATORY,
BEF.TAKAFULREQ     BEFTAKAFULREQ,
BEF.REMFEESCHDMETHOD     BEFREMFEESCHDMETHOD,
BEF.TAKAFULPROVIDER     BEFTAKAFULPROVIDER,
BEF.ALLOWDOWNPAYPGM     BEFALLOWDOWNPAYPGM,
BEF.SCHEDULETAKAFUL     BEFSCHEDULETAKAFUL,
BEF.REMARKS     BEFREMARKS,
BEF.ALWEARLYPAYMETHODS     BEFALWEARLYPAYMETHODS,
BEF.PROPERTYTAKAFULREQ     BEFPROPERTYTAKAFULREQ,
BEF.TAKAFULPAYTYPE     BEFTAKAFULPAYTYPE,
BEF.PROPERTYTAKAFULPAYTYPE     BEFPROPERTYTAKAFULPAYTYPE,
BEF.PROPERTYTAKAFULPROVIDER     BEFPROPERTYTAKAFULPROVIDER,
BEF.PASTDUEPFTCALMTHD     BEFPASTDUEPFTCALMTHD,
BEF.PASTDUEPFTMARGIN     BEFPASTDUEPFTMARGIN,
BEF.ALWADVANCERENT     BEFALWADVANCERENT,
BEF.GRCADVBASERATE     BEFGRCADVBASERATE,
BEF.GRCADVMARGIN     BEFGRCADVMARGIN,
BEF.GRCADVPFTRATE     BEFGRCADVPFTRATE,
BEF.RPYADVBASERATE     BEFRPYADVBASERATE,
BEF.RPYADVMARGIN     BEFRPYADVMARGIN,
BEF.RPYADVPFTRATE     BEFRPYADVPFTRATE,
BEF.ALWCREDITINS     BEFALWCREDITINS,
BEF.ROLLOVERFINANCE     BEFROLLOVERFINANCE,
BEF.ROLLOVERFRQ     BEFROLLOVERFRQ,
BEF.DOWNPAYRULE     BEFDOWNPAYRULE,
BEF.FINSUSPTRIGGER     BEFFINSUSPTRIGGER,
BEF.FINSUSPREMARKS     BEFFINSUSPREMARKS,
BEF.ALWMULTIPARTYDISB     BEFALWMULTIPARTYDISB,
BEF.TDSAPPLICABLE     BEFTDSAPPLICABLE,
BEF.COLLATERALTYPE     BEFCOLLATERALTYPE,
BEF.MANUALSCHEDULE     BEFMANUALSCHEDULE,
BEF.APPLYGRCPRICING     BEFAPPLYGRCPRICING,
BEF.GRCPRICINGMETHOD     BEFGRCPRICINGMETHOD,
BEF.APPLYRPYPRICING     BEFAPPLYRPYPRICING,
BEF.RPYPRICINGMETHOD     BEFRPYPRICINGMETHOD,
BEF.RPYHIERARCHY     BEFRPYHIERARCHY,
BEF.DROPLINEOD     BEFDROPLINEOD,
BEF.DROPPINGMETHOD     BEFDROPPINGMETHOD,
BEF.RATECHGANYDAY     BEFRATECHGANYDAY,
BEF.ALWBPI     BEFALWBPI,
BEF.BPITREATMENT     BEFBPITREATMENT,
BEF.PFTDUESCHON     BEFPFTDUESCHON,
BEF.PLANEMIHALW     BEFPLANEMIHALW,
BEF.PLANEMIHMETHOD     BEFPLANEMIHMETHOD,
BEF.PLANEMIHMAXPERYEAR     BEFPLANEMIHMAXPERYEAR,
BEF.PLANEMIHMAX     BEFPLANEMIHMAX,
BEF.PLANEMIHLOCKPERIOD     BEFPLANEMIHLOCKPERIOD,
BEF.PLANEMICPZ     BEFPLANEMICPZ,
BEF.UNPLANEMIHLOCKPERIOD     BEFUNPLANEMIHLOCKPERIOD,
BEF.UNPLANEMICPZ     BEFUNPLANEMICPZ,
BEF.REAGECPZ     BEFREAGECPZ,
BEF.FDDLOCKPERIOD     BEFFDDLOCKPERIOD,
BEF.ALWDRPYMETHODS     BEFALWDRPYMETHODS,
BEF.MAXUNPLANNEDEMI     BEFMAXUNPLANNEDEMI,
BEF.MAXREAGEHOLIDAYS     BEFMAXREAGEHOLIDAYS,
BEF.CALROUNDINGMODE     BEFCALROUNDINGMODE,
BEF.FREQUENCYDAYS     BEFFREQUENCYDAYS,
BEF.QUICKDISB     BEFQUICKDISB,
BEF.ALWREAGE     BEFALWREAGE,
BEF.ALWUNPLANEMIHOLIDAY     BEFALWUNPLANEMIHOLIDAY
FROM          AuditHeader TH   INNER JOIN
                       SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
                       AdtRMTFinanceTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                       AdtRMTFinanceTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceType')
	</createView>
</changeSet>

<changeSet id="84-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinanceWorkFlowDef_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinType AftFinType, Aft.ScreenCode AftScreenCode,Aft.WorkFlowType AftWorkFlowType,
						  Bef.FinType BefFinType, Bef.ScreenCode BefScreenCode, Bef.WorkFlowType BefWorkFlowType
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtLMTFinanceWorkFlowDef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtLMTFinanceWorkFlowDef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceWorkFlow')	 
					
						
	</createView>
		</changeSet>

<changeSet id="84-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinanceWorkFlowDef_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		Aft.FinType AftFinType, Aft.ScreenCode AftScreenCode,Aft.WorkFlowType AftWorkFlowType,
						  Bef.FinType BefFinType, Bef.ScreenCode BefScreenCode, Bef.WorkFlowType BefWorkFlowType
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtLMTFinanceWorkFlowDef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtLMTFinanceWorkFlowDef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceWorkFlow')	 			
	</createView>
</changeSet>

<changeSet id="85-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinAppCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinAppType AftFinAppType, Aft.FinAppDesc AftFinAppDesc,Aft.FinAppIsActive AftFinAppIsActive,
						  Bef.FinAppType BefFinAppType, Bef.FinAppDesc BefFinAppDesc, Bef.FinAppIsActive BefFinAppIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTFinAppCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTFinAppCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceApplicationCode')	 
					
						
	</createView>
		</changeSet>

<changeSet id="85-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinAppCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		Aft.FinAppType AftFinAppType, Aft.FinAppDesc AftFinAppDesc,Aft.FinAppIsActive AftFinAppIsActive,
						  Bef.FinAppType BefFinAppType, Bef.FinAppDesc BefFinAppDesc, Bef.FinAppIsActive BefFinAppIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTFinAppCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTFinAppCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceApplicationCode')	  			
	</createView>
</changeSet>

<changeSet id="86-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinChecklistReference_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.FinReference AftFinReference, Aft.QuestionId AftQuestionId,Aft.Answer AftAnswer,Aft.Remarks AftRemarks,
						  Bef.FinReference BefFinReference, Bef.QuestionId BefQuestionId, Bef.Answer BefAnswer, Bef.Remarks BefRemarks
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinanceCheckListRef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinanceCheckListRef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="86-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinChecklistReference_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.FinReference AftFinReference, Aft.QuestionId AftQuestionId,Aft.Answer AftAnswer,Aft.Remarks AftRemarks,
						  Bef.FinReference BefFinReference, Bef.QuestionId BefQuestionId, Bef.Answer BefAnswer, Bef.Remarks BefRemarks
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinanceCheckListRef AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinanceCheckListRef BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
	</createView>
</changeSet>

<changeSet id="87-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinContractorAstDtls_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.FinReference AftFinReference ,Aft.ContractorId AftContractorId ,Aft.CustID AftCustID ,
		   Aft.AssetDesc AftAssetDesc ,Aft.AssetValue AftAssetValue ,Aft.TotClaimAmt AftTotClaimAmt ,
		   Aft.TotAdvanceAmt AftTotAdvanceAmt ,
		   Bef.FinReference BefFinReference ,Bef.ContractorId BefContractorId ,Bef.CustID BefCustID ,
		   Bef.AssetDesc BefAssetDesc ,Bef.AssetValue BefAssetValue ,Bef.TotClaimAmt BefTotClaimAmt ,
		   Bef.TotAdvanceAmt BefTotAdvanceAmt
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinContractorAstDtls AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinContractorAstDtls BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="87-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinContractorAstDtls_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.FinReference AftFinReference ,Aft.ContractorId AftContractorId ,Aft.CustID AftCustID ,
		   Aft.AssetDesc AftAssetDesc ,Aft.AssetValue AftAssetValue ,Aft.TotClaimAmt AftTotClaimAmt ,
		   Aft.TotAdvanceAmt AftTotAdvanceAmt ,
		   Bef.FinReference BefFinReference ,Bef.ContractorId BefContractorId ,Bef.CustID BefCustID ,
		   Bef.AssetDesc BefAssetDesc ,Bef.AssetValue BefAssetValue ,Bef.TotClaimAmt BefTotClaimAmt ,
		   Bef.TotAdvanceAmt BefTotAdvanceAmt
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinContractorAstDtls AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinContractorAstDtls BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
	</createView>
</changeSet>

<changeSet id="88-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinContributorDetail_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.FinReference AftFinReference ,Aft.ContributorBaseNo AftContributorBaseNo ,Aft.CustID AftCustID ,
		   Aft.ContributorName AftContributorName ,Aft.ContributorInvest AftContributorInvest ,
		   Aft.InvestAccount AftInvestAccount ,Aft.InvestDate AftInvestDate ,Aft.RecordDate AftRecordDate ,
		   Aft.TotalInvestPerc AftTotalInvestPerc ,Aft.MudaribPerc AftMudaribPerc ,
		   Bef.FinReference BefFinReference ,Bef.ContributorBaseNo BefContributorBaseNo ,Bef.CustID BefCustID ,
		   Bef.ContributorName BefContributorName ,Bef.ContributorInvest BefContributorInvest ,
		   Bef.InvestAccount BefInvestAccount ,Bef.InvestDate BefInvestDate ,Bef.RecordDate BefRecordDate ,
		   Bef.TotalInvestPerc BefTotalInvestPerc ,Bef.MudaribPerc BefMudaribPerc
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinContributorDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinContributorDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
						
	</createView>
		</changeSet>

<changeSet id="88-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinContributorDetail_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.FinReference AftFinReference ,Aft.ContributorBaseNo AftContributorBaseNo ,Aft.CustID AftCustID ,
		   Aft.ContributorName AftContributorName ,Aft.ContributorInvest AftContributorInvest ,
		   Aft.InvestAccount AftInvestAccount ,Aft.InvestDate AftInvestDate ,Aft.RecordDate AftRecordDate ,
		   Aft.TotalInvestPerc AftTotalInvestPerc ,Aft.MudaribPerc AftMudaribPerc ,
		   Bef.FinReference BefFinReference ,Bef.ContributorBaseNo BefContributorBaseNo ,Bef.CustID BefCustID ,
		   Bef.ContributorName BefContributorName ,Bef.ContributorInvest BefContributorInvest ,
		   Bef.InvestAccount BefInvestAccount ,Bef.InvestDate BefInvestDate ,Bef.RecordDate BefRecordDate ,
		   Bef.TotalInvestPerc BefTotalInvestPerc ,Bef.MudaribPerc BefMudaribPerc
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinContributorDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinContributorDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
	</createView>
</changeSet>

<changeSet id="89-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinContributorHeader_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference ,Aft.MinContributors AftMinContributors ,
		   Aft.MaxContributors AftMaxContributors ,Aft.MinContributionAmt AftMinContributionAmt ,
		   Aft.MaxContributionAmt AftMaxContributionAmt ,Aft.CurContributors AftCurContributors ,
		   Aft.CurContributionAmt AftCurContributionAmt ,Aft.CurBankInvestment AftCurBankInvestment ,
		   Aft.AvgMudaribRate AftAvgMudaribRate ,Aft.AlwContributorsToLeave AftAlwContributorsToLeave ,
		   Aft.AlwContributorsToJoin AftAlwContributorsToJoin ,
		   Bef.FinReference BefFinReference ,Bef.MinContributors BefMinContributors ,
		   Bef.MaxContributors BefMaxContributors ,Bef.MinContributionAmt BefMinContributionAmt ,
		   Bef.MaxContributionAmt BefMaxContributionAmt ,Bef.CurContributors BefCurContributors ,
		   Bef.CurContributionAmt BefCurContributionAmt ,Bef.CurBankInvestment BefCurBankInvestment ,
		   Bef.AvgMudaribRate BefAvgMudaribRate ,Bef.AlwContributorsToLeave BefAlwContributorsToLeave ,
		   Bef.AlwContributorsToJoin BefAlwContributorsToJoin
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinContributorHeader AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinContributorHeader BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')

					
						
	</createView>
		</changeSet>

<changeSet id="89-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinContributorHeader_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.FinReference AftFinReference ,Aft.MinContributors AftMinContributors ,
		   Aft.MaxContributors AftMaxContributors ,Aft.MinContributionAmt AftMinContributionAmt ,
		   Aft.MaxContributionAmt AftMaxContributionAmt ,Aft.CurContributors AftCurContributors ,
		   Aft.CurContributionAmt AftCurContributionAmt ,Aft.CurBankInvestment AftCurBankInvestment ,
		   Aft.AvgMudaribRate AftAvgMudaribRate ,Aft.AlwContributorsToLeave AftAlwContributorsToLeave ,
		   Aft.AlwContributorsToJoin AftAlwContributorsToJoin ,
		   Bef.FinReference BefFinReference ,Bef.MinContributors BefMinContributors ,
		   Bef.MaxContributors BefMaxContributors ,Bef.MinContributionAmt BefMinContributionAmt ,
		   Bef.MaxContributionAmt BefMaxContributionAmt ,Bef.CurContributors BefCurContributors ,
		   Bef.CurContributionAmt BefCurContributionAmt ,Bef.CurBankInvestment BefCurBankInvestment ,
		   Bef.AvgMudaribRate BefAvgMudaribRate ,Bef.AlwContributorsToLeave BefAlwContributorsToLeave ,
		   Bef.AlwContributorsToJoin BefAlwContributorsToJoin
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinContributorHeader AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinContributorHeader BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
	</createView>
</changeSet>

<changeSet id="90-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinCreditReviewDetails_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.DetailId AftDetailId ,Aft.CreditRevCode AftCreditRevCode ,Aft.CustomerId AftCustomerId ,
		   Aft.AuditYear AftAuditYear ,Aft.BankName AftBankName ,Aft.Auditors AftAuditors ,
		   Aft.Consolidated AftConsolidated ,Aft.Location AftLocation ,Aft.ConversionRate AftConversionRate ,
		   Aft.AuditedDate AftAuditedDate ,Aft.noOfShares AftnoOfShares ,Aft.marketPrice AftmarketPrice ,
		   Aft.AuditPeriod AftAuditPeriod ,Aft.AuditType AftAuditType ,Aft.Qualified AftQualified ,
		   Aft.Currency AftCurrency ,Aft.Division AftDivision ,
		   Bef.DetailId BefDetailId ,Bef.CreditRevCode BefCreditRevCode ,Bef.CustomerId BefCustomerId ,
		   Bef.AuditYear BefAuditYear ,Bef.BankName BefBankName ,Bef.Auditors BefAuditors ,
		   Bef.Consolidated BefConsolidated ,Bef.Location BefLocation ,Bef.ConversionRate BefConversionRate ,
		   Bef.AuditedDate BefAuditedDate ,Bef.noOfShares BefnoOfShares ,Bef.marketPrice BefmarketPrice ,
		   Bef.AuditPeriod BefAuditPeriod ,Bef.AuditType BefAuditType ,Bef.Qualified BefQualified ,
		   Bef.Currency BefCurrency ,Bef.Division BefDivision  
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinCreditReviewDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinCreditReviewDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinCreditReviewDetails')

					
						
	</createView>
		</changeSet>

<changeSet id="90-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinCreditReviewDetails_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.DetailId AftDetailId ,Aft.CreditRevCode AftCreditRevCode ,Aft.CustomerId AftCustomerId ,
		   Aft.AuditYear AftAuditYear ,Aft.BankName AftBankName ,Aft.Auditors AftAuditors ,
		   Aft.Consolidated AftConsolidated ,Aft.Location AftLocation ,Aft.ConversionRate AftConversionRate ,
		   Aft.AuditedDate AftAuditedDate ,Aft.noOfShares AftnoOfShares ,Aft.marketPrice AftmarketPrice ,
		   Aft.AuditPeriod AftAuditPeriod ,Aft.AuditType AftAuditType ,Aft.Qualified AftQualified ,
		   Aft.Currency AftCurrency ,Aft.Division AftDivision ,
		   Bef.DetailId BefDetailId ,Bef.CreditRevCode BefCreditRevCode ,Bef.CustomerId BefCustomerId ,
		   Bef.AuditYear BefAuditYear ,Bef.BankName BefBankName ,Bef.Auditors BefAuditors ,
		   Bef.Consolidated BefConsolidated ,Bef.Location BefLocation ,Bef.ConversionRate BefConversionRate ,
		   Bef.AuditedDate BefAuditedDate ,Bef.noOfShares BefnoOfShares ,Bef.marketPrice BefmarketPrice ,
		   Bef.AuditPeriod BefAuditPeriod ,Bef.AuditType BefAuditType ,Bef.Qualified BefQualified ,
		   Bef.Currency BefCurrency ,Bef.Division BefDivision  
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinCreditReviewDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinCreditReviewDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinCreditReviewDetails')
					
	</createView>
</changeSet>

<changeSet id="91-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinCreditReviewSummary_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.SummaryId AftSummaryId ,Aft.DetailId AftDetailId ,Aft.SubCategoryCode AftSubCategoryCode ,
		   Aft.ItemValue AftItemValue ,
		   Bef.SummaryId BefSummaryId ,Bef.DetailId BefDetailId ,Bef.SubCategoryCode BefSubCategoryCode ,
		   Bef.ItemValue BefItemValue
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinCreditReviewSummary AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinCreditReviewSummary BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinCreditReviewDetails')

					
						
	</createView>
		</changeSet>

<changeSet id="91-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinCreditReviewSummary_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.SummaryId AftSummaryId ,Aft.DetailId AftDetailId ,Aft.SubCategoryCode AftSubCategoryCode ,
		   Aft.ItemValue AftItemValue ,
		   Bef.SummaryId BefSummaryId ,Bef.DetailId BefDetailId ,Bef.SubCategoryCode BefSubCategoryCode ,
		   Bef.ItemValue BefItemValue
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinCreditReviewSummary AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinCreditReviewSummary BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinCreditReviewDetails')
					
	</createView>
</changeSet>

<changeSet id="92-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinDedupDetail_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference ,Aft.CustCIF AftCustCIF ,Aft.CustCRCPR AftCustCRCPR ,
		   Aft.ChassisNumber AftChassisNumber ,Aft.EngineNumber AftEngineNumber ,Aft.StartDate AftStartDate ,
		   Aft.FinanceAmount AftFinanceAmount ,Aft.FinanceType AftFinanceType ,Aft.ProfitAmount AftProfitAmount ,
		   Aft.Stage AftStage ,Aft.DedupeRule AftDedupeRule ,Aft.OverrideUser AftOverrideUser ,
		   Bef.FinReference BefFinReference ,Bef.CustCIF BefCustCIF ,Bef.CustCRCPR BefCustCRCPR ,
		   Bef.ChassisNumber BefChassisNumber ,Bef.EngineNumber BefEngineNumber ,Bef.StartDate BefStartDate ,
		   Bef.FinanceAmount BefFinanceAmount ,Bef.FinanceType BefFinanceType ,Bef.ProfitAmount BefProfitAmount ,
		   Bef.Stage BefStage ,Bef.DedupeRule BefDedupeRule ,Bef.OverrideUser BefOverrideUser
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinDedupDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinDedupDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')

					
						
	</createView>
		</changeSet>

<changeSet id="92-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinDedupDetail_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.FinReference AftFinReference ,Aft.CustCIF AftCustCIF ,Aft.CustCRCPR AftCustCRCPR ,
		   Aft.ChassisNumber AftChassisNumber ,Aft.EngineNumber AftEngineNumber ,Aft.StartDate AftStartDate ,
		   Aft.FinanceAmount AftFinanceAmount ,Aft.FinanceType AftFinanceType ,Aft.ProfitAmount AftProfitAmount ,
		   Aft.Stage AftStage ,Aft.DedupeRule AftDedupeRule ,Aft.OverrideUser AftOverrideUser ,
		   Bef.FinReference BefFinReference ,Bef.CustCIF BefCustCIF ,Bef.CustCRCPR BefCustCRCPR ,
		   Bef.ChassisNumber BefChassisNumber ,Bef.EngineNumber BefEngineNumber ,Bef.StartDate BefStartDate ,
		   Bef.FinanceAmount BefFinanceAmount ,Bef.FinanceType BefFinanceType ,Bef.ProfitAmount BefProfitAmount ,
		   Bef.Stage BefStage ,Bef.DedupeRule BefDedupeRule ,Bef.OverrideUser BefOverrideUser
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinDedupDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinDedupDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
	</createView>
</changeSet>

<changeSet id="93-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinJointAccountDetails_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.JointAccountId AftJointAccountId ,Aft.FinReference AftFinReference ,Aft.CustCIF AftCustCIF ,
		   Aft.IncludeRepay AftIncludeRepay ,Aft.RepayAccountId AftRepayAccountId ,
		   Bef.JointAccountId BefJointAccountId ,Bef.FinReference BefFinReference ,Bef.CustCIF BefCustCIF ,
		   Bef.IncludeRepay BefIncludeRepay ,Bef.RepayAccountId BefRepayAccountId
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinJointAccountDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinJointAccountDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')

					
						
	</createView>
		</changeSet>

<changeSet id="93-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinJointAccountDetails_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.FinReference AftFinReference ,Aft.CustCIF AftCustCIF ,Aft.CustCRCPR AftCustCRCPR ,
		   Aft.ChassisNumber AftChassisNumber ,Aft.EngineNumber AftEngineNumber ,Aft.StartDate AftStartDate ,
		   Aft.FinanceAmount AftFinanceAmount ,Aft.FinanceType AftFinanceType ,Aft.ProfitAmount AftProfitAmount ,
		   Aft.Stage AftStage ,Aft.DedupeRule AftDedupeRule ,Aft.OverrideUser AftOverrideUser ,
		   Bef.FinReference BefFinReference ,Bef.CustCIF BefCustCIF ,Bef.CustCRCPR BefCustCRCPR ,
		   Bef.ChassisNumber BefChassisNumber ,Bef.EngineNumber BefEngineNumber ,Bef.StartDate BefStartDate ,
		   Bef.FinanceAmount BefFinanceAmount ,Bef.FinanceType BefFinanceType ,Bef.ProfitAmount BefProfitAmount ,
		   Bef.Stage BefStage ,Bef.DedupeRule BefDedupeRule ,Bef.OverrideUser BefOverrideUser
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinDedupDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinDedupDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceDetail')
					
	</createView>
</changeSet>

<changeSet id="94-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinLegalExpenses_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.CustomerId AftCustomerId,Aft.BookingDate AftBookingDate,Aft.Amount AftAmount,Aft.expReference AftexpReference,Aft.FinReference AftFinReference,
			   Aft.TransactionType AftTransactionType,Aft.Remarks AftRemarks,Aft.RecoveredAmount AftRecoveredAmount,Aft.Amountdue AftAmountdue,
			   Aft.IsRecoverdFromMOPA AftIsRecoverdFromMOPA,Aft.TotalCharges AftTotalCharges,
			   Bef.CustomerId BefCustomerId,Bef.BookingDate BefBookingDate,Bef.Amount BefAmount,Bef.expReference BefexpReference,Bef.FinReference BefFinReference,
			   Bef.TransactionType BefTransactionType,Bef.Remarks BefRemarks,Bef.RecoveredAmount BefRecoveredAmount,Bef.Amountdue BefAmountdue,
			   Bef.IsRecoverdFromMOPA BefIsRecoverdFromMOPA,Bef.TotalCharges BefTotalCharges
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   ADTFinLegalExpenses AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   ADTFinLegalExpenses BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LegalExpenses')

					
						
	</createView>
		</changeSet>

<changeSet id="94-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinLegalExpenses_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
							Aft.CustomerId AftCustomerId,Aft.BookingDate AftBookingDate,Aft.Amount AftAmount,Aft.expReference AftexpReference,Aft.FinReference AftFinReference,
			   Aft.TransactionType AftTransactionType,Aft.Remarks AftRemarks,Aft.RecoveredAmount AftRecoveredAmount,Aft.Amountdue AftAmountdue,
			   Aft.IsRecoverdFromMOPA AftIsRecoverdFromMOPA,Aft.TotalCharges AftTotalCharges,
			   Bef.CustomerId BefCustomerId,Bef.BookingDate BefBookingDate,Bef.Amount BefAmount,Bef.expReference BefexpReference,Bef.FinReference BefFinReference,
			   Bef.TransactionType BefTransactionType,Bef.Remarks BefRemarks,Bef.RecoveredAmount BefRecoveredAmount,Bef.Amountdue BefAmountdue,
			   Bef.IsRecoverdFromMOPA BefIsRecoverdFromMOPA,Bef.TotalCharges BefTotalCharges
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   ADTFinLegalExpenses AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   ADTFinLegalExpenses BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LegalExpenses')
					
	</createView>
</changeSet>

<changeSet id="95-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinLiabilityReq_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference,Aft.InitiatedBy AftInitiatedBy,Aft.FinEvent AftFinEvent,
			   Bef.FinReference BefFinReference,Bef.InitiatedBy BefInitiatedBy,Bef.FinEvent BefFinEvent
	FROM       AuditHeader TH  INNER JOIN
			   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtFinLiabilityReq AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtFinLiabilityReq BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LiabilityRequest')

					
						
	</createView>
		</changeSet>

<changeSet id="95-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinLiabilityReq_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.FinReference AftFinReference,Aft.InitiatedBy AftInitiatedBy,Aft.FinEvent AftFinEvent,
			   Bef.FinReference BefFinReference,Bef.InitiatedBy BefInitiatedBy,Bef.FinEvent BefFinEvent
	FROM       AuditHeader TH  INNER JOIN
			   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtFinLiabilityReq AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtFinLiabilityReq BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LiabilityRequest')
					
	</createView>
</changeSet>

<changeSet id="96-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinProvisions_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference,Aft.FinBranch AftFinBranch,Aft.FinType AftFinType,Aft.CustID AftCustID,Aft.ProvisionCalDate AftProvisionCalDate,
			   Aft.ProvisionedAmt AftProvisionedAmt,Aft.ProvisionAmtCal AftProvisionAmtCal,Aft.ProvisionDue AftProvisionDue,Aft.NonFormulaProv AftNonFormulaProv,
			   Aft.UseNFProv AftUseNFProv,Aft.AutoReleaseNFP AftAutoReleaseNFP,Aft.PrincipalDue AftPrincipalDue,Aft.ProfitDue AftProfitDue,Aft.DueFromDate AftDueFromDate,
			   Aft.LastFullyPaidDate AftLastFullyPaidDate,
			   Bef.FinReference BefFinReference,Bef.FinBranch BefFinBranch,Bef.FinType BefFinType,Bef.CustID BefCustID,Bef.ProvisionCalDate BefProvisionCalDate,
			   Bef.ProvisionedAmt BefProvisionedAmt,Bef.ProvisionAmtCal BefProvisionAmtCal,Bef.ProvisionDue BefProvisionDue,Bef.NonFormulaProv BefNonFormulaProv,
			   Bef.UseNFProv BefUseNFProv,Bef.AutoReleaseNFP BefAutoReleaseNFP,Bef.PrincipalDue BefPrincipalDue,Bef.ProfitDue BefProfitDue,Bef.DueFromDate BefDueFromDate,
			   Bef.LastFullyPaidDate BefLastFullyPaidDate
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtFinProvisions AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtFinProvisions BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Provision')

					
						
	</createView>
		</changeSet>

<changeSet id="96-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinProvisions_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinReference AftFinReference,Aft.FinBranch AftFinBranch,Aft.FinType AftFinType,Aft.CustID AftCustID,Aft.ProvisionCalDate AftProvisionCalDate,
			   Aft.ProvisionedAmt AftProvisionedAmt,Aft.ProvisionAmtCal AftProvisionAmtCal,Aft.ProvisionDue AftProvisionDue,Aft.NonFormulaProv AftNonFormulaProv,
			   Aft.UseNFProv AftUseNFProv,Aft.AutoReleaseNFP AftAutoReleaseNFP,Aft.PrincipalDue AftPrincipalDue,Aft.ProfitDue AftProfitDue,Aft.DueFromDate AftDueFromDate,
			   Aft.LastFullyPaidDate AftLastFullyPaidDate,
			   Bef.FinReference BefFinReference,Bef.FinBranch BefFinBranch,Bef.FinType BefFinType,Bef.CustID BefCustID,Bef.ProvisionCalDate BefProvisionCalDate,
			   Bef.ProvisionedAmt BefProvisionedAmt,Bef.ProvisionAmtCal BefProvisionAmtCal,Bef.ProvisionDue BefProvisionDue,Bef.NonFormulaProv BefNonFormulaProv,
			   Bef.UseNFProv BefUseNFProv,Bef.AutoReleaseNFP BefAutoReleaseNFP,Bef.PrincipalDue BefPrincipalDue,Bef.ProfitDue BefProfitDue,Bef.DueFromDate BefDueFromDate,
			   Bef.LastFullyPaidDate BefLastFullyPaidDate
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtFinProvisions AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtFinProvisions BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Provision')
					
	</createView>
</changeSet>

<changeSet id="97-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinSuspHold_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.SuspHoldID AftSuspHoldID, Aft.Product AftProduct, Aft.FinType AftFinType,Aft.FinReference AftFinReference,
			   Aft.CustID AftCustID, Aft.Active AftActive, 
               Bef.SuspHoldID BefSuspHoldID, Bef.Product BefProduct, Bef.FinType BefFinType,Bef.FinReference BefFinReference,
			   Bef.CustID BefCustID, Bef.Active BefActive			   
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinSuspHold AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinSuspHold BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinSuspHold')

					
						
	</createView>
		</changeSet>

<changeSet id="97-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinSuspHold_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.SuspHoldID AftSuspHoldID, Aft.Product AftProduct, Aft.FinType AftFinType,Aft.FinReference AftFinReference,
			   Aft.CustID AftCustID, Aft.Active AftActive, 
               Bef.SuspHoldID BefSuspHoldID, Bef.Product BefProduct, Bef.FinType BefFinType,Bef.FinReference BefFinReference,
			   Bef.CustID BefCustID, Bef.Active BefActive			   
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFinSuspHold AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFinSuspHold BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinSuspHold')
					
	</createView>
</changeSet>

<changeSet id="98-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFinTypeAccount_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinType AftFinType ,Aft.FinCcy AftFinCcy ,Aft.Event AftEvent ,Aft.AlwManualEntry AftAlwManualEntry ,
		   Aft.AlwCustomerAccount AftAlwCustomerAccount ,Aft.AccountReceivable AftAccountReceivable ,
		   Aft.CustAccountTypes AftCustAccountTypes ,
		   Bef.FinType BefFinType ,Bef.FinCcy BefFinCcy ,Bef.Event BefEvent ,Bef.AlwManualEntry BefAlwManualEntry ,
		   Bef.AlwCustomerAccount BefAlwCustomerAccount ,Bef.AccountReceivable BefAccountReceivable ,
		   Bef.CustAccountTypes BefCustAccountTypes
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinTypeAccount AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinTypeAccount BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceType')

					
						
	</createView>
		</changeSet>

<changeSet id="98-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFinTypeAccount_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinType AftFinType ,Aft.FinCcy AftFinCcy ,Aft.Event AftEvent ,Aft.AlwManualEntry AftAlwManualEntry ,
		   Aft.AlwCustomerAccount AftAlwCustomerAccount ,Aft.AccountReceivable AftAccountReceivable ,
		   Aft.CustAccountTypes AftCustAccountTypes ,
		   Bef.FinType BefFinType ,Bef.FinCcy BefFinCcy ,Bef.Event BefEvent ,Bef.AlwManualEntry BefAlwManualEntry ,
		   Bef.AlwCustomerAccount BefAlwCustomerAccount ,Bef.AccountReceivable BefAccountReceivable ,
		   Bef.CustAccountTypes BefCustAccountTypes
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtFinTypeAccount AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtFinTypeAccount BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'FinanceType')
					
	</createView>
</changeSet>

<changeSet id="99-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtFlags_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.FlagCode AftFlagCode, Aft.FlagDesc AftFlagDesc, Aft.Active AftActive, 
						  Bef.FlagCode BefFlagCode, Bef.FlagDesc BefFlagDesc, Bef.Active BefActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFlags AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFlags BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Flag')

					
						
	</createView>
		</changeSet>

<changeSet id="99-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtFlags_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FlagCode AftFlagCode, Aft.FlagDesc AftFlagDesc, Aft.Active AftActive, 
						  Bef.FlagCode BefFlagCode, Bef.FlagDesc BefFlagDesc, Bef.Active BefActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtFlags AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtFlags BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Flag')
					
	</createView>
</changeSet>

<changeSet id="100-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtGenDepartments_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.GenDepartment AftGenDepartment, Aft.GenDeptDesc AftGenDeptDesc,
						  Bef.GenDepartment BefGenDepartment, Bef.GenDeptDesc BefGenDeptDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTGenDepartments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTGenDepartments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'GeneralDepartment')

					
						
	</createView>
		</changeSet>

<changeSet id="100-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtGenDepartments_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.GenDepartment AftGenDepartment, Aft.GenDeptDesc AftGenDeptDesc,
						  Bef.GenDepartment BefGenDepartment, Bef.GenDeptDesc BefGenDeptDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTGenDepartments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTGenDepartments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'GeneralDepartment')
					
	</createView>
</changeSet>

<changeSet id="101-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtGenders_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.GenderCode AftGenderCode, Aft.GenderDesc AftGenderDesc,Aft.GenderIsActive AftGenderIsActive,
						  Bef.GenderCode BefGenderCode, Bef.GenderDesc BefGenderDesc, Bef.GenderIsActive BefGenderIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTGenders AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTGenders BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Gender')

					
						
	</createView>
		</changeSet>

<changeSet id="101-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtGenders_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.GenderCode AftGenderCode, Aft.GenderDesc AftGenderDesc,Aft.GenderIsActive AftGenderIsActive,
						  Bef.GenderCode BefGenderCode, Bef.GenderDesc BefGenderDesc, Bef.GenderIsActive BefGenderIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTGenders AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTGenders BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Gender')
					
	</createView>
</changeSet>

<changeSet id="102-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtGenDesignations_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.GenDesignation AftGenDesignation, Aft.GenDesgDesc AftGenDesgDesc,
						  Bef.GenDesignation BefGenDesignation, Bef.GenDesgDesc BefGenDesgDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTGenDesignations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTGenDesignations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'GeneralDesignation')

					
						
	</createView>
		</changeSet>

<changeSet id="102-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtGenDesignations_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					 Aft.GenDesignation AftGenDesignation, Aft.GenDesgDesc AftGenDesgDesc,
						  Bef.GenDesignation BefGenDesignation, Bef.GenDesgDesc BefGenDesgDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTGenDesignations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTGenDesignations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'GeneralDesignation')
					
	</createView>
</changeSet>

<changeSet id="103-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtGrpStatusCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.GrpStsCode AftGrpStsCode, Aft.GrpStsDescription AftGrpStsDescription,Aft.GrpStsIsActive AftGrpStsIsActive,
						  Bef.GrpStsCode BefGrpStsCode, Bef.GrpStsDescription BefGrpStsDescription, Bef.GrpStsIsActive BefGrpStsIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTGrpStatusCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTGrpStatusCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'GroupStatusCode')

					
						
	</createView>
		</changeSet>

<changeSet id="103-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtGrpStatusCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					 Aft.GrpStsCode AftGrpStsCode, Aft.GrpStsDescription AftGrpStsDescription,Aft.GrpStsIsActive AftGrpStsIsActive,
						  Bef.GrpStsCode BefGrpStsCode, Bef.GrpStsDescription BefGrpStsDescription, Bef.GrpStsIsActive BefGrpStsIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTGrpStatusCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTGrpStatusCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'GroupStatusCode')
					
	</createView>
</changeSet>

<changeSet id="104-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtIdentityType_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.IdentityType AftIdentityType, Aft.IdentityDesc AftIdentityDesc,
						  Bef.IdentityType BefIdentityType, Bef.IdentityDesc BefIdentityDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIdentityType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIdentityType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'IdentityDetails')
					
						
	</createView>
		</changeSet>

<changeSet id="104-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtIdentityType_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					 Aft.IdentityType AftIdentityType, Aft.IdentityDesc AftIdentityDesc,
						  Bef.IdentityType BefIdentityType, Bef.IdentityDesc BefIdentityDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIdentityType AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIdentityType BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'IdentityDetails')
					
	</createView>
</changeSet>

<changeSet id="105-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtIncomeTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.IncomeTypeCode AftIncomeTypeCode, Aft.IncomeTypeDesc AftIncomeTypeDesc,Aft.IncomeTypeIsActive AftIncomeTypeIsActive,
						  Bef.IncomeTypeCode BefIncomeTypeCode, Bef.IncomeTypeDesc BefIncomeTypeDesc, Bef.IncomeTypeIsActive BefIncomeTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIncomeTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIncomeTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'IncomeType')
					
						
	</createView>
		</changeSet>

<changeSet id="105-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtIncomeTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					 Aft.IncomeTypeCode AftIncomeTypeCode, Aft.IncomeTypeDesc AftIncomeTypeDesc,Aft.IncomeTypeIsActive AftIncomeTypeIsActive,
						  Bef.IncomeTypeCode BefIncomeTypeCode, Bef.IncomeTypeDesc BefIncomeTypeDesc, Bef.IncomeTypeIsActive BefIncomeTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIncomeTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIncomeTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'IncomeType')
					
	</createView>
</changeSet>

<changeSet id="106-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtIndustries_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.IndustryCode AftIndustryCode, Aft.SubSectorCode AftSubSectorCode,Aft.IndustryDesc AftIndustryDesc,
						  Aft.IndustryIsActive AftIndustryIsActive,
						  Bef.IndustryCode BefIndustryCode, Bef.SubSectorCode BefSubSectorCode, Bef.IndustryDesc BefIndustryDesc,
						   Bef.IndustryIsActive BefIndustryIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIndustries AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIndustries BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Industry')
					
						
	</createView>
		</changeSet>

<changeSet id="106-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtIndustries_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
								Aft.IndustryCode AftIndustryCode, Aft.SubSectorCode AftSubSectorCode,Aft.IndustryDesc AftIndustryDesc,
						  Aft.IndustryIsActive AftIndustryIsActive,
						  Bef.IndustryCode BefIndustryCode, Bef.SubSectorCode BefSubSectorCode, Bef.IndustryDesc BefIndustryDesc,
						   Bef.IndustryIsActive BefIndustryIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIndustries AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIndustries BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Industry')
					
	</createView>
</changeSet>

<changeSet id="107-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtInterestRateBasisCode_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.IntRateBasisCode AftIntRateBasisCode, Aft.IntRateBasisDesc AftIntRateBasisDesc,Aft.IntRateBasisIsActive AftIntRateBasisIsActive,
						  	
						  Bef.IntRateBasisCode BefIntRateBasisCode, Bef.IntRateBasisDesc BefIntRateBasisDesc, Bef.IntRateBasisIsActive BefIntRateBasisIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIntRateBasisCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIntRateBasisCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'InterestRateBasisCode')
					
						
	</createView>
		</changeSet>

<changeSet id="107-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtInterestRateBasisCode_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
								Aft.IntRateBasisCode AftIntRateBasisCode, Aft.IntRateBasisDesc AftIntRateBasisDesc,Aft.IntRateBasisIsActive AftIntRateBasisIsActive,
						  	
						  Bef.IntRateBasisCode BefIntRateBasisCode, Bef.IntRateBasisDesc BefIntRateBasisDesc, Bef.IntRateBasisIsActive BefIntRateBasisIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTIntRateBasisCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTIntRateBasisCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'InterestRateBasisCode')
					
	</createView>
</changeSet>

<changeSet id="108-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtInterestRateTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.IntRateTypeCode AftIntRateTypeCode, Aft.IntRateTypeDesc AftIntRateTypeDesc,Aft.IntRateTypeIsActive AftIntRateTypeIsActive,
						  Bef.IntRateTypeCode BefIntRateTypeCode, Bef.IntRateTypeDesc BefIntRateTypeDesc, Bef.IntRateTypeIsActive BefIntRateTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTInterestRateTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTInterestRateTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'InterestRateType')
					
						
	</createView>
		</changeSet>

<changeSet id="108-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtInterestRateTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
							Aft.IntRateTypeCode AftIntRateTypeCode, Aft.IntRateTypeDesc AftIntRateTypeDesc,Aft.IntRateTypeIsActive AftIntRateTypeIsActive,
						  Bef.IntRateTypeCode BefIntRateTypeCode, Bef.IntRateTypeDesc BefIntRateTypeDesc, Bef.IntRateTypeIsActive BefIntRateTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTInterestRateTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTInterestRateTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'InterestRateType')
					
	</createView>
</changeSet>

<changeSet id="109-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtInvestmentFinHeader_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.InvestmentRef AftInvestmentRef ,Aft.TotPrincipalAmt AftTotPrincipalAmt ,Aft.finCcy AftfinCcy ,
		   Aft.ProfitDaysBasis AftProfitDaysBasis ,Aft.StartDate AftStartDate ,Aft.MaturityDate AftMaturityDate ,
		   Aft.PrincipalInvested AftPrincipalInvested ,Aft.PrincipalMaturity AftPrincipalMaturity ,
		   Aft.PrincipalDueToInvest AftPrincipalDueToInvest ,Aft.AvgPftRate AftAvgPftRate ,
		   Aft.ApprovalRequired AftApprovalRequired ,Aft.TotalDealsApproved AftTotalDealsApproved ,
		   Bef.InvestmentRef BefInvestmentRef ,Bef.TotPrincipalAmt BefTotPrincipalAmt ,Bef.finCcy BeffinCcy ,
		   Bef.ProfitDaysBasis BefProfitDaysBasis ,Bef.StartDate BefStartDate ,Bef.MaturityDate BefMaturityDate ,
		   Bef.PrincipalInvested BefPrincipalInvested ,Bef.PrincipalMaturity BefPrincipalMaturity ,
		   Bef.PrincipalDueToInvest BefPrincipalDueToInvest ,Bef.AvgPftRate BefAvgPftRate ,
		   Bef.ApprovalRequired BefApprovalRequired ,Bef.TotalDealsApproved BefTotalDealsApproved
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtInvestmentFinHeader AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtInvestmentFinHeader BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'InvestmentFinHeader')
					
						
	</createView>
		</changeSet>

<changeSet id="109-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtInvestmentFinHeader_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
								 Aft.InvestmentRef AftInvestmentRef ,Aft.TotPrincipalAmt AftTotPrincipalAmt ,Aft.finCcy AftfinCcy ,
		   Aft.ProfitDaysBasis AftProfitDaysBasis ,Aft.StartDate AftStartDate ,Aft.MaturityDate AftMaturityDate ,
		   Aft.PrincipalInvested AftPrincipalInvested ,Aft.PrincipalMaturity AftPrincipalMaturity ,
		   Aft.PrincipalDueToInvest AftPrincipalDueToInvest ,Aft.AvgPftRate AftAvgPftRate ,
		   Aft.ApprovalRequired AftApprovalRequired ,Aft.TotalDealsApproved AftTotalDealsApproved ,
		   Bef.InvestmentRef BefInvestmentRef ,Bef.TotPrincipalAmt BefTotPrincipalAmt ,Bef.finCcy BeffinCcy ,
		   Bef.ProfitDaysBasis BefProfitDaysBasis ,Bef.StartDate BefStartDate ,Bef.MaturityDate BefMaturityDate ,
		   Bef.PrincipalInvested BefPrincipalInvested ,Bef.PrincipalMaturity BefPrincipalMaturity ,
		   Bef.PrincipalDueToInvest BefPrincipalDueToInvest ,Bef.AvgPftRate BefAvgPftRate ,
		   Bef.ApprovalRequired BefApprovalRequired ,Bef.TotalDealsApproved BefTotalDealsApproved
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtInvestmentFinHeader AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtInvestmentFinHeader BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'InvestmentFinHeader')
					
	</createView>
</changeSet>

<changeSet id="110-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtJVPostings_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.Filename AftFilename ,Aft.Branch AftBranch ,Aft.BatchReference AftBatchReference ,Aft.Batch AftBatch ,
		   Aft.DebitCount AftDebitCount ,Aft.CreditsCount AftCreditsCount ,Aft.TotDebitsByBatchCcy AftTotDebitsByBatchCcy ,
		   Aft.TotCreditsByBatchCcy AftTotCreditsByBatchCcy ,Aft.BatchPurpose AftBatchPurpose ,Aft.Currency AftCurrency ,
		   Aft.ExchangeRateType AftExchangeRateType ,Aft.ValidationStatus AftValidationStatus ,
		   Aft.BatchPostingStatus AftBatchPostingStatus ,Aft.PostingDate AftPostingDate ,
		   Bef.Filename BefFilename ,Bef.Branch BefBranch ,Bef.BatchReference BefBatchReference ,Bef.Batch BefBatch ,
		   Bef.DebitCount BefDebitCount ,Bef.CreditsCount BefCreditsCount ,Bef.TotDebitsByBatchCcy BefTotDebitsByBatchCcy ,
		   Bef.TotCreditsByBatchCcy BefTotCreditsByBatchCcy ,Bef.BatchPurpose BefBatchPurpose ,Bef.Currency BefCurrency ,
		   Bef.ExchangeRateType BefExchangeRateType ,Bef.ValidationStatus BefValidationStatus ,
		   Bef.BatchPostingStatus BefBatchPostingStatus ,Bef.PostingDate BefPostingDate
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtJVPostings AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtJVPostings BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'JVPosting')
					
						
	</createView>
		</changeSet>

<changeSet id="110-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtJVPostings_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
								Aft.Filename AftFilename ,Aft.Branch AftBranch ,Aft.BatchReference AftBatchReference ,Aft.Batch AftBatch ,
		   Aft.DebitCount AftDebitCount ,Aft.CreditsCount AftCreditsCount ,Aft.TotDebitsByBatchCcy AftTotDebitsByBatchCcy ,
		   Aft.TotCreditsByBatchCcy AftTotCreditsByBatchCcy ,Aft.BatchPurpose AftBatchPurpose ,Aft.Currency AftCurrency ,
		   Aft.ExchangeRateType AftExchangeRateType ,Aft.ValidationStatus AftValidationStatus ,
		   Aft.BatchPostingStatus AftBatchPostingStatus ,Aft.PostingDate AftPostingDate ,
		   Bef.Filename BefFilename ,Bef.Branch BefBranch ,Bef.BatchReference BefBatchReference ,Bef.Batch BefBatch ,
		   Bef.DebitCount BefDebitCount ,Bef.CreditsCount BefCreditsCount ,Bef.TotDebitsByBatchCcy BefTotDebitsByBatchCcy ,
		   Bef.TotCreditsByBatchCcy BefTotCreditsByBatchCcy ,Bef.BatchPurpose BefBatchPurpose ,Bef.Currency BefCurrency ,
		   Bef.ExchangeRateType BefExchangeRateType ,Bef.ValidationStatus BefValidationStatus ,
		   Bef.BatchPostingStatus BefBatchPostingStatus ,Bef.PostingDate BefPostingDate
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtJVPostings AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtJVPostings BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'JVPosting')
					
	</createView>
</changeSet>

<changeSet id="111-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtLanguage_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.LngCode AftLngCode, Aft.LngDesc AftLngDesc,Aft.LngNumber AftLngNumber,
						  	
						  Bef.LngCode BefLngCode, Bef.LngDesc BefLngDesc, Bef.LngNumber BefLngNumber
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTLanguage AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTLanguage BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Language')
					
						
	</createView>
		</changeSet>

<changeSet id="111-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtLanguage_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
								Aft.LngCode AftLngCode, Aft.LngDesc AftLngDesc,Aft.LngNumber AftLngNumber,
						  	
						  Bef.LngCode BefLngCode, Bef.LngDesc BefLngDesc, Bef.LngNumber BefLngNumber
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTLanguage AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTLanguage BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Language')
					
	</createView>
</changeSet>

<changeSet id="112-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtMandates_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.MandateID AftMandateID, Aft.CustID AftCustID, Aft.MandateRef AftMandateRef, Aft.MandateType AftMandateType, Aft.BankBranchID AftBankBranchID, Aft.AccNumber AftAccNumber, Aft.AccHolderName AftAccHolderName, Aft.JointAccHolderName AftJointAccHolderName, Aft.AccType AftAccType, Aft.OpenMandate AftOpenMandate, Aft.StartDate AftStartDate, Aft.ExpiryDate AftExpiryDate, Aft.MaxLimit AftMaxLimit, Aft.Periodicity AftPeriodicity, Aft.PhoneCountryCode AftPhoneCountryCode, Aft.PhoneAreaCode AftPhoneAreaCode, Aft.PhoneNumber AftPhoneNumber, Aft.Status AftStatus, Aft.ApprovalID AftApprovalID, 
                      Bef.MandateID BefMandateID, Bef.CustID BefCustID, Bef.MandateRef BefMandateRef, Bef.MandateType BefMandateType, Bef.BankBranchID BefBankBranchID, Bef.AccNumber BefAccNumber, Bef.AccHolderName BefAccHolderName, Bef.JointAccHolderName BefJointAccHolderName, Bef.AccType BefAccType, Bef.OpenMandate BefOpenMandate, Bef.StartDate BefStartDate, Bef.ExpiryDate BefExpiryDate, Bef.MaxLimit BefMaxLimit, Bef.Periodicity BefPeriodicity, Bef.PhoneCountryCode BefPhoneCountryCode, Bef.PhoneAreaCode BefPhoneAreaCode, Bef.PhoneNumber BefPhoneNumber, Bef.Status BefStatus, Bef.ApprovalID BefApprovalID 
FROM          AuditHeader TH INNER JOIN
                       SecUsers_View T1 ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
                       ADTMandates AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                       ADTMandates BEF ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Mandate')
					
						
	</createView>
		</changeSet>

<changeSet id="112-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtMandates_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.MandateID AftMandateID, Aft.CustID AftCustID, Aft.MandateRef AftMandateRef, Aft.MandateType AftMandateType, Aft.BankBranchID AftBankBranchID, Aft.AccNumber AftAccNumber, Aft.AccHolderName AftAccHolderName, Aft.JointAccHolderName AftJointAccHolderName, Aft.AccType AftAccType, Aft.OpenMandate AftOpenMandate, Aft.StartDate AftStartDate, Aft.ExpiryDate AftExpiryDate, Aft.MaxLimit AftMaxLimit, Aft.Periodicity AftPeriodicity, Aft.PhoneCountryCode AftPhoneCountryCode, Aft.PhoneAreaCode AftPhoneAreaCode, Aft.PhoneNumber AftPhoneNumber, Aft.Status AftStatus, Aft.ApprovalID AftApprovalID, 
                      Bef.MandateID BefMandateID, Bef.CustID BefCustID, Bef.MandateRef BefMandateRef, Bef.MandateType BefMandateType, Bef.BankBranchID BefBankBranchID, Bef.AccNumber BefAccNumber, Bef.AccHolderName BefAccHolderName, Bef.JointAccHolderName BefJointAccHolderName, Bef.AccType BefAccType, Bef.OpenMandate BefOpenMandate, Bef.StartDate BefStartDate, Bef.ExpiryDate BefExpiryDate, Bef.MaxLimit BefMaxLimit, Bef.Periodicity BefPeriodicity, Bef.PhoneCountryCode BefPhoneCountryCode, Bef.PhoneAreaCode BefPhoneAreaCode, Bef.PhoneNumber BefPhoneNumber, Bef.Status BefStatus, Bef.ApprovalID BefApprovalID 
FROM          AuditHeader TH INNER JOIN
                       SecUsers_View T1 ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
                       ADTMandates AFT ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
                       ADTMandates BEF ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Mandate')
					
	</createView>
</changeSet>

<changeSet id="113-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtMaritalStatusCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.MaritalStsCode AftMaritalStsCode, Aft.MaritalStsDesc AftMaritalStsDesc,Aft.MaritalStsIsActive AftMaritalStsIsActive,
						  Bef.MaritalStsCode BefMaritalStsCode, Bef.MaritalStsDesc BefMaritalStsDesc, Bef.MaritalStsIsActive BefMaritalStsIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTMaritalStatusCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTMaritalStatusCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'MaritalStatusCode')
					
						
	</createView>
		</changeSet>

<changeSet id="113-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtMaritalStatusCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.MaritalStsCode AftMaritalStsCode, Aft.MaritalStsDesc AftMaritalStsDesc,Aft.MaritalStsIsActive AftMaritalStsIsActive,
						  Bef.MaritalStsCode BefMaritalStsCode, Bef.MaritalStsDesc BefMaritalStsDesc, Bef.MaritalStsIsActive BefMaritalStsIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTMaritalStatusCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTMaritalStatusCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'MaritalStatusCode')
					
	</createView>
</changeSet>

<changeSet id="114-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtMMAgreements_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.MMAId AftMMAId,Aft.MMAReference AftMMAReference,Aft.CustCIF AftCustCIF,Aft.PurchRegOffice AftPurchRegOffice,Aft.ContractAmt AftContractAmt,
			   Aft.ContractDate AftContractDate,Aft.Rate AftRate,Aft.Fax AftFax,Aft.Purchaddress AftPurchaddress,Aft.Attention AftAttention,
			   Aft.LastMdfDate AftLastMdfDate,
			   Bef.MMAId BefMMAId,Bef.MMAReference BefMMAReference,Bef.CustCIF BefCustCIF,Bef.PurchRegOffice BefPurchRegOffice,Bef.ContractAmt BefContractAmt,
			   Bef.ContractDate BefContractDate,Bef.Rate BefRate,Bef.Fax BefFax,Bef.Purchaddress BefPurchaddress,Bef.Attention BefAttention,
			   Bef.LastMdfDate BefLastMdfDate
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtMMAgreements AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtMMAgreements BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'MMAgreement')
					
						
	</createView>
		</changeSet>

<changeSet id="114-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtMMAgreements_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.MMAId AftMMAId,Aft.MMAReference AftMMAReference,Aft.CustCIF AftCustCIF,Aft.PurchRegOffice AftPurchRegOffice,Aft.ContractAmt AftContractAmt,
			   Aft.ContractDate AftContractDate,Aft.Rate AftRate,Aft.Fax AftFax,Aft.Purchaddress AftPurchaddress,Aft.Attention AftAttention,
			   Aft.LastMdfDate AftLastMdfDate,
			   Bef.MMAId BefMMAId,Bef.MMAReference BefMMAReference,Bef.CustCIF BefCustCIF,Bef.PurchRegOffice BefPurchRegOffice,Bef.ContractAmt BefContractAmt,
			   Bef.ContractDate BefContractDate,Bef.Rate BefRate,Bef.Fax BefFax,Bef.Purchaddress BefPurchaddress,Bef.Attention BefAttention,
			   Bef.LastMdfDate BefLastMdfDate
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   AdtMMAgreements AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   AdtMMAgreements BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'MMAgreement')
					
	</createView>
</changeSet>

<changeSet id="115-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtNationalityCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.NationalityCode AftNationalityCode, Aft.NationalityDesc AftNationalityDesc,Aft.NationalityIsActive AftNationalityIsActive,
						  Bef.NationalityCode BefNationalityCode, Bef.NationalityDesc BefNationalityDesc, Bef.NationalityIsActive BefNationalityIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTNationalityCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTNationalityCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'NationalityCode')
					
						
	</createView>
		</changeSet>

<changeSet id="115-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtNationalityCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.NationalityCode AftNationalityCode, Aft.NationalityDesc AftNationalityDesc,Aft.NationalityIsActive AftNationalityIsActive,
						  Bef.NationalityCode BefNationalityCode, Bef.NationalityDesc BefNationalityDesc, Bef.NationalityIsActive BefNationalityIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTNationalityCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTNationalityCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'NationalityCode')
					
	</createView>
</changeSet>

<changeSet id="116-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtNotifications_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.RuleId AftRuleId ,Aft.RuleCode AftRuleCode ,Aft.RuleModule AftRuleModule ,Aft.TemplateType AftTemplateType ,
		   Aft.RuleCodeDesc AftRuleCodeDesc ,Aft.RuleTemplate AftRuleTemplate ,Aft.ActualBlockTemplate AftActualBlockTemplate ,
		   Aft.RuleReciepent AftRuleReciepent ,Aft.ActualBlockReciepent AftActualBlockReciepent ,
		   Aft.RuleAttachment AftRuleAttachment ,Aft.ActualBlockAtachment AftActualBlockAtachment ,
		   Bef.RuleId BefRuleId ,Bef.RuleCode BefRuleCode ,Bef.RuleModule BefRuleModule ,Bef.TemplateType BefTemplateType ,
		   Bef.RuleCodeDesc BefRuleCodeDesc ,Bef.RuleTemplate BefRuleTemplate ,Bef.ActualBlockTemplate BefActualBlockTemplate ,
		   Bef.RuleReciepent BefRuleReciepent ,Bef.ActualBlockReciepent BefActualBlockReciepent ,
		   Bef.RuleAttachment BefRuleAttachment ,Bef.ActualBlockAtachment BefActualBlockAtachment
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtNotifications AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtNotifications BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Notifications')
					
						
	</createView>
		</changeSet>

<changeSet id="116-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtNotifications_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.RuleId AftRuleId ,Aft.RuleCode AftRuleCode ,Aft.RuleModule AftRuleModule ,Aft.TemplateType AftTemplateType ,
		   Aft.RuleCodeDesc AftRuleCodeDesc ,Aft.RuleTemplate AftRuleTemplate ,Aft.ActualBlockTemplate AftActualBlockTemplate ,
		   Aft.RuleReciepent AftRuleReciepent ,Aft.ActualBlockReciepent AftActualBlockReciepent ,
		   Aft.RuleAttachment AftRuleAttachment ,Aft.ActualBlockAtachment AftActualBlockAtachment ,
		   Bef.RuleId BefRuleId ,Bef.RuleCode BefRuleCode ,Bef.RuleModule BefRuleModule ,Bef.TemplateType BefTemplateType ,
		   Bef.RuleCodeDesc BefRuleCodeDesc ,Bef.RuleTemplate BefRuleTemplate ,Bef.ActualBlockTemplate BefActualBlockTemplate ,
		   Bef.RuleReciepent BefRuleReciepent ,Bef.ActualBlockReciepent BefActualBlockReciepent ,
		   Bef.RuleAttachment BefRuleAttachment ,Bef.ActualBlockAtachment BefActualBlockAtachment
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtNotifications AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtNotifications BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Notifications')
					
	</createView>
</changeSet>

<changeSet id="117-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtOtherBankFinanceTypes_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.FinType AftFinType ,Aft.FinTypeDesc AftFinTypeDesc ,Aft.Active AftActive ,
           Bef.FinType BefFinType ,Bef.FinTypeDesc BefFinTypeDesc ,Bef.Active BefActive  
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtOtherBankFinanceType AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtOtherBankFinanceType BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'OtherBankFinanceType')
					
						
	</createView>
		</changeSet>

<changeSet id="117-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtOtherBankFinanceTypes_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.FinType AftFinType ,Aft.FinTypeDesc AftFinTypeDesc ,Aft.Active AftActive ,
           Bef.FinType BefFinType ,Bef.FinTypeDesc BefFinTypeDesc ,Bef.Active BefActive  
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtOtherBankFinanceType AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtOtherBankFinanceType BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'OtherBankFinanceType')
					
	</createView>
</changeSet>

<changeSet id="118-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtPayOrderIssueHeader_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.FinReference AftFinReference, Aft.TotalPOAmount AftTotalPOAmount, Aft.TotalPOCount AftTotalPOCount,Aft.IssuedPOAmount AftIssuedPOAmount, 
			   Aft.IssuedPOCount AftIssuedPOCount, Aft.PODueAmount AftPODueAmount,Aft.PODueCount AftPODueCount,
               Bef.FinReference BefFinReference, Bef.TotalPOAmount BefTotalPOAmount, Bef.TotalPOCount BefTotalPOCount,Bef.IssuedPOAmount BefIssuedPOAmount, 
			   Bef.IssuedPOCount BefIssuedPOCount, Bef.PODueAmount BefPODueAmount,Bef.PODueCount BefPODueCount			   
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtPayOrderIssueHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtPayOrderIssueHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PayOrderIssueHeader')
					
						
	</createView>
		</changeSet>

<changeSet id="118-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtPayOrderIssueHeader_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.FinReference AftFinReference, Aft.TotalPOAmount AftTotalPOAmount, Aft.TotalPOCount AftTotalPOCount,Aft.IssuedPOAmount AftIssuedPOAmount, 
			   Aft.IssuedPOCount AftIssuedPOCount, Aft.PODueAmount AftPODueAmount,Aft.PODueCount AftPODueCount,
               Bef.FinReference BefFinReference, Bef.TotalPOAmount BefTotalPOAmount, Bef.TotalPOCount BefTotalPOCount,Bef.IssuedPOAmount BefIssuedPOAmount, 
			   Bef.IssuedPOCount BefIssuedPOCount, Bef.PODueAmount BefPODueAmount,Bef.PODueCount BefPODueCount			   
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtPayOrderIssueHeader AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtPayOrderIssueHeader BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PayOrderIssueHeader')
					
	</createView>
</changeSet>

<changeSet id="119-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtPenalty_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.PenaltyType AftPenaltyType, Aft.PenaltyEffDate AftPenaltyEffDate,Aft.IsPenaltyCapitalize AftIsPenaltyCapitalize,
						  Aft.IsPenaltyOnPriOnly AftIsPenaltyOnPriOnly, Aft.IsPenaltyAftGrace AftIsPenaltyAftGrace,Aft.ODueGraceDays AftODueGraceDays,
						  Aft.PenaltyPriRateBasis AftPenaltyPriRateBasis, Aft.PenaltyPriBaseRate AftPenaltyPriBaseRate,Aft.PenaltyPriSplRate AftPenaltyPriSplRate,
						  Aft.PenaltyPriNetRate AftPenaltyPriNetRate, Aft.PenaltyIntRateBasis AftPenaltyIntRateBasis, Aft.PenaltyIntBaseRate AftPenaltyIntBaseRate,
						  Aft.PenaltyIntSplRate AftPenaltyIntSplRate, Aft.PenaltyIntNetRate AftPenaltyIntNetRate,Aft.PenaltyIsActive AftPenaltyIsActive,
						   						  	
						  Bef.PenaltyType BefPenaltyType, Bef.PenaltyEffDate BefPenaltyEffDate, Bef.IsPenaltyCapitalize BefIsPenaltyCapitalize,
						  Bef.IsPenaltyOnPriOnly BefIsPenaltyOnPriOnly, Bef.IsPenaltyAftGrace BefIsPenaltyAftGrace, Bef.ODueGraceDays BefODueGraceDays,
						  Bef.PenaltyPriRateBasis BefPenaltyPriRateBasis, Bef.PenaltyPriBaseRate BefPenaltyPriBaseRate, Bef.PenaltyPriSplRate BefPenaltyPriSplRate,
						  Bef.PenaltyPriNetRate BefPenaltyPriNetRate, Bef.PenaltyIntRateBasis BefPenaltyIntRateBasis, Bef.PenaltyIntBaseRate BefPenaltyIntBaseRate,
						  Bef.PenaltyIntSplRate BefPenaltyIntSplRate, Bef.PenaltyIntNetRate BefPenaltyIntNetRate, Bef.PenaltyIsActive BefPenaltyIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTPenalties AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTPenalties BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Penalty')
					
						
	</createView>
		</changeSet>

<changeSet id="119-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtPenalty_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.PenaltyType AftPenaltyType, Aft.PenaltyEffDate AftPenaltyEffDate,Aft.IsPenaltyCapitalize AftIsPenaltyCapitalize,
						  Aft.IsPenaltyOnPriOnly AftIsPenaltyOnPriOnly, Aft.IsPenaltyAftGrace AftIsPenaltyAftGrace,Aft.ODueGraceDays AftODueGraceDays,
						  Aft.PenaltyPriRateBasis AftPenaltyPriRateBasis, Aft.PenaltyPriBaseRate AftPenaltyPriBaseRate,Aft.PenaltyPriSplRate AftPenaltyPriSplRate,
						  Aft.PenaltyPriNetRate AftPenaltyPriNetRate, Aft.PenaltyIntRateBasis AftPenaltyIntRateBasis, Aft.PenaltyIntBaseRate AftPenaltyIntBaseRate,
						  Aft.PenaltyIntSplRate AftPenaltyIntSplRate, Aft.PenaltyIntNetRate AftPenaltyIntNetRate,Aft.PenaltyIsActive AftPenaltyIsActive,
						   						  	
						  Bef.PenaltyType BefPenaltyType, Bef.PenaltyEffDate BefPenaltyEffDate, Bef.IsPenaltyCapitalize BefIsPenaltyCapitalize,
						  Bef.IsPenaltyOnPriOnly BefIsPenaltyOnPriOnly, Bef.IsPenaltyAftGrace BefIsPenaltyAftGrace, Bef.ODueGraceDays BefODueGraceDays,
						  Bef.PenaltyPriRateBasis BefPenaltyPriRateBasis, Bef.PenaltyPriBaseRate BefPenaltyPriBaseRate, Bef.PenaltyPriSplRate BefPenaltyPriSplRate,
						  Bef.PenaltyPriNetRate BefPenaltyPriNetRate, Bef.PenaltyIntRateBasis BefPenaltyIntRateBasis, Bef.PenaltyIntBaseRate BefPenaltyIntBaseRate,
						  Bef.PenaltyIntSplRate BefPenaltyIntSplRate, Bef.PenaltyIntNetRate BefPenaltyIntNetRate, Bef.PenaltyIsActive BefPenaltyIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTPenalties AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTPenalties BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Penalty')
					
	</createView>
</changeSet>

<changeSet id="120-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtPenaltyCode_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.PenaltyType AftPenaltyType, Aft.PenaltyDesc AftPenaltyDesc,Aft.PenaltyIsActive AftPenaltyIsActive,
						  	
						  Bef.PenaltyType BefPenaltyType, Bef.PenaltyDesc BefPenaltyDesc, Bef.PenaltyIsActive BefPenaltyIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTPenaltyCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTPenaltyCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PenaltyCode')
					
						
	</createView>
		</changeSet>

<changeSet id="120-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtPenaltyCode_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.PenaltyType AftPenaltyType, Aft.PenaltyDesc AftPenaltyDesc,Aft.PenaltyIsActive AftPenaltyIsActive,
						  	
						  Bef.PenaltyType BefPenaltyType, Bef.PenaltyDesc BefPenaltyDesc, Bef.PenaltyIsActive BefPenaltyIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTPenaltyCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTPenaltyCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PenaltyCode')
					
	</createView>
</changeSet>

<changeSet id="121-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtPhoneTypes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.PhoneTypeCode AftPhoneTypeCode, Aft.PhoneTypeDesc AftPhoneTypeDesc,Aft.PhoneTypePriority AftPhoneTypePriority,
						  Aft.PhoneTypeIsActive AftPhoneTypeIsActive,
						  Bef.PhoneTypeCode BefPhoneTypeCode, Bef.PhoneTypeDesc BefPhoneTypeDesc, Bef.PhoneTypePriority BefPhoneTypePriority,
						  Bef.PhoneTypeIsActive BefPhoneTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTPhoneTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTPhoneTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PhoneType')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="121-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtPhoneTypes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						 Aft.PhoneTypeCode AftPhoneTypeCode, Aft.PhoneTypeDesc AftPhoneTypeDesc,Aft.PhoneTypePriority AftPhoneTypePriority,
						  Aft.PhoneTypeIsActive AftPhoneTypeIsActive,
						  Bef.PhoneTypeCode BefPhoneTypeCode, Bef.PhoneTypeDesc BefPhoneTypeDesc, Bef.PhoneTypePriority BefPhoneTypePriority,
						  Bef.PhoneTypeIsActive BefPhoneTypeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTPhoneTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTPhoneTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PhoneType')
					
	</createView>
</changeSet>

<changeSet id="122-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtPoliceCaseCustomers_VIEW">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.CustCIF AftCustCIF ,Aft.CustFName AftCustFName ,Aft.CustLName AftCustLName ,Aft.CustDOB AftCustDOB ,
		   Aft.CustCRCPR AftCustCRCPR ,Aft.CustNationality AftCustNationality ,
		   Aft.CustPassportNo AftCustPassportNo ,Aft.CustProduct AftCustProduct ,
           Bef.CustCIF BefCustCIF ,Bef.CustFName BefCustFName ,Bef.CustLName BefCustLName ,Bef.CustDOB BefCustDOB ,
           Bef.CustCRCPR BefCustCRCPR ,Bef.CustNationality BefCustNationality ,
           Bef.CustPassportNo BefCustPassportNo ,Bef.CustProduct BefCustProduct  
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtPoliceCaseCustomers AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtPoliceCaseCustomers BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PoliceCaseDetail')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="122-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtPoliceCaseCustomers_VIEW">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.CustCIF AftCustCIF ,Aft.CustFName AftCustFName ,Aft.CustLName AftCustLName ,Aft.CustDOB AftCustDOB ,
		   Aft.CustCRCPR AftCustCRCPR ,Aft.CustNationality AftCustNationality ,
		   Aft.CustPassportNo AftCustPassportNo ,Aft.CustProduct AftCustProduct ,
           Bef.CustCIF BefCustCIF ,Bef.CustFName BefCustFName ,Bef.CustLName BefCustLName ,Bef.CustDOB BefCustDOB ,
           Bef.CustCRCPR BefCustCRCPR ,Bef.CustNationality BefCustNationality ,
           Bef.CustPassportNo BefCustPassportNo ,Bef.CustProduct BefCustProduct  
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtPoliceCaseCustomers AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtPoliceCaseCustomers BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PoliceCaseDetail')
					
	</createView>
</changeSet>

<changeSet id="123-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtPRelationCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.PRelationCode AftPRelationCode, Aft.PRelationDesc AftPRelationDesc,Aft.RelationCodeIsActive AftRelationCodeIsActive,
						  Bef.PRelationCode BefPRelationCode, Bef.PRelationDesc BefPRelationDesc, Bef.RelationCodeIsActive BefRelationCodeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTPRelationCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTPRelationCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PRelationCode')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="123-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtPRelationCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.PRelationCode AftPRelationCode, Aft.PRelationDesc AftPRelationDesc,Aft.RelationCodeIsActive AftRelationCodeIsActive,
						  Bef.PRelationCode BefPRelationCode, Bef.PRelationDesc BefPRelationDesc, Bef.RelationCodeIsActive BefRelationCodeIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTPRelationCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTPRelationCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'PRelationCode')
					
	</createView>
</changeSet>

<changeSet id="124-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtProduct_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.ProductCode AftProductCode, Aft.ProductDesc AftProductDesc,
						  Bef.ProductCode BefProductCode, Bef.ProductDesc BefProductDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTProduct AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTProduct BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Product')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="124-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtProduct_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.ProductCode AftProductCode, Aft.ProductDesc AftProductDesc,
						  Bef.ProductCode BefProductCode, Bef.ProductDesc BefProductDesc
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTProduct AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTProduct BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Product')
					
	</createView>
</changeSet>

<changeSet id="125-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtProductAsset_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.AssetID AftAssetID, Aft.ProductCode AftProductCode,Aft.AssetCode AftAssetCode,
						  Aft.AssetDesc AftAssetDesc, Aft.AssetIsActive AftAssetIsActive,
						  	
						  Bef.AssetID BefAssetID, Bef.ProductCode BefProductCode, Bef.AssetCode BefAssetCode,
						  Bef.AssetDesc BefAssetDesc, Bef.AssetIsActive BefAssetIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTProductAssets AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTProductAssets BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Product')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="125-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtProductAsset_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.AssetID AftAssetID, Aft.ProductCode AftProductCode,Aft.AssetCode AftAssetCode,
						  Aft.AssetDesc AftAssetDesc, Aft.AssetIsActive AftAssetIsActive,
						  	
						  Bef.AssetID BefAssetID, Bef.ProductCode BefProductCode, Bef.AssetCode BefAssetCode,
						  Bef.AssetDesc BefAssetDesc, Bef.AssetIsActive BefAssetIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTProductAssets AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTProductAssets BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Product')
					
	</createView>
</changeSet>

<changeSet id="126-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtProfessions_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.ProfessionCode AftProfessionCode, Aft.ProfessionDesc AftProfessionDesc,Aft.ProfessionIsActive AftProfessionIsActive,
						  Bef.ProfessionCode BefProfessionCode, Bef.ProfessionDesc BefProfessionDesc, Bef.ProfessionIsActive BefProfessionIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTProfessions AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTProfessions BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Profession')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="126-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtProfessions_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				 Aft.ProfessionCode AftProfessionCode, Aft.ProfessionDesc AftProfessionDesc,Aft.ProfessionIsActive AftProfessionIsActive,
						  Bef.ProfessionCode BefProfessionCode, Bef.ProfessionDesc BefProfessionDesc, Bef.ProfessionIsActive BefProfessionIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTProfessions AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTProfessions BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Profession')
					
	</createView>
</changeSet>

<changeSet id="127-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtProvinceVsCity_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.PCCountry AftPCCounty, Aft.PCProvince AftPCProvince, Aft.PCCity AftPCCity,Aft.PCCityName AftPCCityName,						  
						  Bef.PCCountry BefPCCounty, Bef.PCProvince BefPCProvince, Bef.PCCity BefPCCity,Bef.PCCityName BefPCCityName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTProvinceVsCity AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTProvinceVsCity BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'City')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="127-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtProvinceVsCity_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						   Aft.PCCountry AftPCCounty, Aft.PCProvince AftPCProvince, Aft.PCCity AftPCCity,Aft.PCCityName AftPCCityName,						  
						  Bef.PCCountry BefPCCounty, Bef.PCProvince BefPCProvince, Bef.PCCity BefPCCity,Bef.PCCityName BefPCCityName
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTProvinceVsCity AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTProvinceVsCity BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'City')
					
	</createView>
</changeSet>

<changeSet id="128-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtProvision_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.ProvType AftProvType, Aft.ProvSlab AftProvSlab,Aft.ProvPercentOnPri AftProvPercentOnPri,
						  Aft.ProvPercentOnInt AftProvPercentOnInt, Aft.ProvIsActive AftProvIsActive,
						  	
						  Bef.ProvType BefProvType, Bef.ProvSlab BefProvSlab, Bef.ProvPercentOnPri BefProvPercentOnPri,
						  Bef.ProvPercentOnInt BefProvPercentOnInt, Bef.ProvIsActive BefProvIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTProvisions AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTProvisions BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Provision')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="128-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtProvision_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.ProvType AftProvType, Aft.ProvSlab AftProvSlab,Aft.ProvPercentOnPri AftProvPercentOnPri,
						  Aft.ProvPercentOnInt AftProvPercentOnInt, Aft.ProvIsActive AftProvIsActive,
						  	
						  Bef.ProvType BefProvType, Bef.ProvSlab BefProvSlab, Bef.ProvPercentOnPri BefProvPercentOnPri,
						  Bef.ProvPercentOnInt BefProvPercentOnInt, Bef.ProvIsActive BefProvIsActive
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTProvisions AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTProvisions BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Provision')
					
	</createView>
</changeSet>

<changeSet id="129-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtQueries_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.QueryCode AftQueryCode ,Aft.QueryModule AftQueryModule ,Aft.QueryDesc AftQueryDesc ,
		   Aft.SqlQuery AftSqlQuery ,Aft.ActualBlock AftActualBlock ,Aft.SubQuery AftSubQuery ,Aft.Active AftActive ,
		   Bef.QueryCode BefQueryCode ,Bef.QueryModule BefQueryModule ,Bef.QueryDesc BefQueryDesc ,
		   Bef.SqlQuery BefSqlQuery ,Bef.ActualBlock BefActualBlock ,Bef.SubQuery BefSubQuery ,Bef.Active BefActive
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtQueries AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtQueries BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Query')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="129-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtQueries_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						  Aft.QueryCode AftQueryCode ,Aft.QueryModule AftQueryModule ,Aft.QueryDesc AftQueryDesc ,
		   Aft.SqlQuery AftSqlQuery ,Aft.ActualBlock AftActualBlock ,Aft.SubQuery AftSubQuery ,Aft.Active AftActive ,
		   Bef.QueryCode BefQueryCode ,Bef.QueryModule BefQueryModule ,Bef.QueryDesc BefQueryDesc ,
		   Bef.SqlQuery BefSqlQuery ,Bef.ActualBlock BefActualBlock ,Bef.SubQuery BefSubQuery ,Bef.Active BefActive
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtQueries AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtQueries BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Query')
					
	</createView>
</changeSet>

<changeSet id="130-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRatingCode_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.RatingType AftRatingType, Aft.RatingCode AftRatingCode,Aft.RatingCodeDesc AftRatingCodeDesc,
						  Aft.RatingIsActive AftRatingIsActive,
						  	
						  Bef.RatingType BefRatingType, Bef.RatingCode BefRatingCode, Bef.RatingCodeDesc BefRatingCodeDesc,
						  Bef.RatingIsActive BefRatingIsActive
						  
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTRatingCodes AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTRatingCodes BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RatingCode')
						 
						 
					
						
	</createView>
		</changeSet>

<changeSet id="130-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRatingCode_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.RatingType AftRatingType, Aft.RatingCode AftRatingCode,Aft.RatingCodeDesc AftRatingCodeDesc,
						  Aft.RatingIsActive AftRatingIsActive,
						  	
						  Bef.RatingType BefRatingType, Bef.RatingCode BefRatingCode, Bef.RatingCodeDesc BefRatingCodeDesc,
						  Bef.RatingIsActive BefRatingIsActive
						  
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTRatingCodes AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTRatingCodes BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RatingCode')
					
	</createView>
</changeSet>

<changeSet id="131-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRatingType_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.RatingType AftRatingType,Aft.RatingTypeDesc AftRatingTypeDesc, Aft.ValueType AftValueType,
						  Aft.RatingIsActive AftRatingIsActive, Aft.ValueLen AftValueLen,
						  	
						  Bef.RatingType BefRatingType,  Bef.RatingTypeDesc BefRatingTypeDesc,Bef.ValueType BefValueType,
						  Bef.RatingIsActive BefRatingIsActive,Bef.ValueLen BefValueLen
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTRatingTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTRatingTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RatingType')
						 
						 
					
						
	</createView>
		</changeSet>

<changeSet id="131-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRatingType_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.RatingType AftRatingType,Aft.RatingTypeDesc AftRatingTypeDesc, Aft.ValueType AftValueType,
						  Aft.RatingIsActive AftRatingIsActive, Aft.ValueLen AftValueLen,
						  	
						  Bef.RatingType BefRatingType,  Bef.RatingTypeDesc BefRatingTypeDesc,Bef.ValueType BefValueType,
						  Bef.RatingIsActive BefRatingIsActive,Bef.ValueLen BefValueLen
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTRatingTypes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTRatingTypes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RatingType')
					
	</createView>
</changeSet>

<changeSet id="132-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRejectCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.FinReference AftFinReference ,Bef.FinReference BefFinReference
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtReinstateFinance AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtReinstateFinance BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ReinstateFinance')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="132-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRejectCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.FinReference AftFinReference ,Bef.FinReference BefFinReference
	FROM    AuditHeader TH  INNER JOIN
		    SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtReinstateFinance AFT  ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtReinstateFinance BEF  ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ReinstateFinance')
					
	</createView>
</changeSet>

<changeSet id="133-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtReinstateFinance_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.RejectCode AftRejectCode, Aft.RejectDesc AftRejectDesc,Aft.RejectIsActive AftRejectIsActive,
						  Bef.RejectCode BefRejectCode, Bef.RejectDesc BefRejectDesc, Bef.RejectIsActive BefRejectIsActive
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTRejectCodes AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTRejectCodes BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RejectDetail')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="133-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtReinstateFinance_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
						Aft.RejectCode AftRejectCode, Aft.RejectDesc AftRejectDesc,Aft.RejectIsActive AftRejectIsActive,
						  Bef.RejectCode BefRejectCode, Bef.RejectDesc BefRejectDesc, Bef.RejectIsActive BefRejectIsActive
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTRejectCodes AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTRejectCodes BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RejectDetail')
					
	</createView>
</changeSet>

<changeSet id="134-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRelationshipOfficers_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.ROfficerCode AftROfficerCode, Aft.ROfficerDesc AftROfficerDesc,Aft.ROfficerDeptCode AftROfficerDeptCode,
						  Aft.ROfficerIsActive AftROfficerIsActive,
						  Bef.ROfficerCode BefROfficerCode, Bef.ROfficerDesc BefROfficerDesc, Bef.ROfficerDeptCode BefROfficerDeptCode,
						  Bef.ROfficerIsActive BefROfficerIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRelationshipOfficers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRelationshipOfficers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RelationshipOfficer')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="134-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRelationshipOfficers_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.ROfficerCode AftROfficerCode, Aft.ROfficerDesc AftROfficerDesc,Aft.ROfficerDeptCode AftROfficerDeptCode,
						  Aft.ROfficerIsActive AftROfficerIsActive,
						  Bef.ROfficerCode BefROfficerCode, Bef.ROfficerDesc BefROfficerDesc, Bef.ROfficerDeptCode BefROfficerDeptCode,
						  Bef.ROfficerIsActive BefROfficerIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRelationshipOfficers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRelationshipOfficers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'RelationshipOfficer')
					
	</createView>
</changeSet>

<changeSet id="135-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtReportConfiguration_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.REPORTID AftREPORTID,Aft.REPORTNAME AftREPORTNAME, Aft.REPORTHEADING AftREPORTHEADING,
						  Aft.PROMPTREQUIRED AftPROMPTREQUIRED, Aft.REPORTJASPERNAME AftREPORTJASPERNAME,
						  Aft.DATASOURCENAME AftDATASOURCENAME, Aft.SHOWTEMPLIBRARY AftSHOWTEMPLIBRARY, Aft.MENUITEMCODE AftMENUITEMCODE,
						  	
						  Bef.REPORTID BefREPORTID,  Bef.REPORTNAME BefREPORTNAME,Bef.REPORTHEADING BefREPORTHEADING,
						  Bef.PROMPTREQUIRED BefPROMPTREQUIRED,Bef.REPORTJASPERNAME BefREPORTJASPERNAME,
						  Bef.DATASOURCENAME BefDATASOURCENAME,Bef.SHOWTEMPLIBRARY BefSHOWTEMPLIBRARY,Bef.MENUITEMCODE BefMENUITEMCODE
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtREPORTCONFIGURATION AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtREPORTCONFIGURATION BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ReportConfiguration')
						 
					
						
	</createView>
		</changeSet>

<changeSet id="135-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtReportConfiguration_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.REPORTID AftREPORTID,Aft.REPORTNAME AftREPORTNAME, Aft.REPORTHEADING AftREPORTHEADING,
						  Aft.PROMPTREQUIRED AftPROMPTREQUIRED, Aft.REPORTJASPERNAME AftREPORTJASPERNAME,
						  Aft.DATASOURCENAME AftDATASOURCENAME, Aft.SHOWTEMPLIBRARY AftSHOWTEMPLIBRARY, Aft.MENUITEMCODE AftMENUITEMCODE,
						  	
						  Bef.REPORTID BefREPORTID,  Bef.REPORTNAME BefREPORTNAME,Bef.REPORTHEADING BefREPORTHEADING,
						  Bef.PROMPTREQUIRED BefPROMPTREQUIRED,Bef.REPORTJASPERNAME BefREPORTJASPERNAME,
						  Bef.DATASOURCENAME BefDATASOURCENAME,Bef.SHOWTEMPLIBRARY BefSHOWTEMPLIBRARY,Bef.MENUITEMCODE BefMENUITEMCODE
						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtREPORTCONFIGURATION AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtREPORTCONFIGURATION BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ReportConfiguration')
	</createView>
</changeSet>

<changeSet id="136-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtReturnedCheques_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			   Aft.CustCIF AftCustCIF, Aft.ChequeNo AftChequeNo, Aft.Amount AftAmount,Aft.ReturnDate AftReturnDate, 
			   Aft.ReturnReason AftReturnReason, Aft.Currency AftCurrency,
			   Bef.CustCIF BefCustCIF, Bef.ChequeNo BefChequeNo, Bef.Amount BefAmount,Bef.ReturnDate BefReturnDate, 
			   Bef.ReturnReason BefReturnReason, Bef.Currency BefCurrency		  
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtReturnedCheques AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtReturnedCheques BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ReturnedChequeDetails')

	</createView>
		</changeSet>

<changeSet id="136-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtReturnedCheques_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					 Aft.CustCIF AftCustCIF, Aft.ChequeNo AftChequeNo, Aft.Amount AftAmount,Aft.ReturnDate AftReturnDate, 
			   Aft.ReturnReason AftReturnReason, Aft.Currency AftCurrency,
			   Bef.CustCIF BefCustCIF, Bef.ChequeNo BefChequeNo, Bef.Amount BefAmount,Bef.ReturnDate BefReturnDate, 
			   Bef.ReturnReason BefReturnReason, Bef.Currency BefCurrency		  
	FROM          AuditHeader TH  INNER JOIN
						   SecUsers_View T1  ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtReturnedCheques AFT  ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtReturnedCheques BEF  ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ReturnedChequeDetails')
	</createView>
</changeSet>

<changeSet id="137-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRMTCheckListDetails_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.CheckListId AftCheckListId ,Aft.AnsSeqNo AftAnsSeqNo ,Aft.AnsDesc AftAnsDesc ,
		   Aft.RemarksAllow AftRemarksAllow ,Aft.RemarksMand AftRemarksMand ,Aft.DocRequired AftDocRequired ,
		   Aft.DocType AftDocType ,Aft.AnsCond AftAnsCond ,
		   Bef.CheckListId BefCheckListId ,Bef.AnsSeqNo BefAnsSeqNo ,Bef.AnsDesc BefAnsDesc ,
		   Bef.RemarksAllow BefRemarksAllow ,Bef.RemarksMand BefRemarksMand ,Bef.DocRequired BefDocRequired ,
		   Bef.DocType BefDocType ,Bef.AnsCond BefAnsCond
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRMTCheckListDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRMTCheckListDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CheckList')

	</createView>
		</changeSet>

<changeSet id="137-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRMTCheckListDetails_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.CheckListId AftCheckListId ,Aft.AnsSeqNo AftAnsSeqNo ,Aft.AnsDesc AftAnsDesc ,
		   Aft.RemarksAllow AftRemarksAllow ,Aft.RemarksMand AftRemarksMand ,Aft.DocRequired AftDocRequired ,
		   Aft.DocType AftDocType ,Aft.AnsCond AftAnsCond ,
		   Bef.CheckListId BefCheckListId ,Bef.AnsSeqNo BefAnsSeqNo ,Bef.AnsDesc BefAnsDesc ,
		   Bef.RemarksAllow BefRemarksAllow ,Bef.RemarksMand BefRemarksMand ,Bef.DocRequired BefDocRequired ,
		   Bef.DocType BefDocType ,Bef.AnsCond BefAnsCond
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRMTCheckListDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRMTCheckListDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'CheckList')
	</createView>
</changeSet>

<changeSet id="138-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRMTLovFieldDetail_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.FieldCodeId AftFieldCodeId ,Aft.FieldCode AftFieldCode ,Aft.FieldCodeValue AftFieldCodeValue ,
		   Aft.ValueDesc AftValueDesc ,Aft.isActive AftisActive ,Aft.SystemDefault AftSystemDefault ,
		   Bef.FieldCodeId BefFieldCodeId ,Bef.FieldCode BefFieldCode ,Bef.FieldCodeValue BefFieldCodeValue ,
		   Bef.ValueDesc BefValueDesc ,Bef.isActive BefisActive ,Bef.SystemDefault BefSystemDefault
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRMTLovFieldDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRMTLovFieldDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LovFieldDetail')

	</createView>
		</changeSet>

<changeSet id="138-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRMTLovFieldDetail_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
					Aft.FieldCodeId AftFieldCodeId ,Aft.FieldCode AftFieldCode ,Aft.FieldCodeValue AftFieldCodeValue ,
		   Aft.ValueDesc AftValueDesc ,Aft.isActive AftisActive ,Aft.SystemDefault AftSystemDefault ,
		   Bef.FieldCodeId BefFieldCodeId ,Bef.FieldCode BefFieldCode ,Bef.FieldCodeValue BefFieldCodeValue ,
		   Bef.ValueDesc BefValueDesc ,Bef.isActive BefisActive ,Bef.SystemDefault BefSystemDefault
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRMTLovFieldDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRMTLovFieldDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'LovFieldDetail')
	</createView>
</changeSet>

<changeSet id="139-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRMTScoringSlab_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.ScoreGroupId AftScoreGroupId ,Aft.ScoringSlab AftScoringSlab ,Aft.CreditWorthness AftCreditWorthness ,
		   Bef.ScoreGroupId BefScoreGroupId ,Bef.ScoringSlab BefScoringSlab ,Bef.CreditWorthness BefCreditWorthness
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRMTScoringSlab AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRMTScoringSlab BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScoringGroup')

	</createView>
		</changeSet>

<changeSet id="139-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRMTScoringSlab_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
				Aft.ScoreGroupId AftScoreGroupId ,Aft.ScoringSlab AftScoringSlab ,Aft.CreditWorthness AftCreditWorthness ,
		   Bef.ScoreGroupId BefScoreGroupId ,Bef.ScoringSlab BefScoringSlab ,Bef.CreditWorthness BefCreditWorthness
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRMTScoringSlab AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRMTScoringSlab BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScoringGroup')
	</createView>
</changeSet>

<changeSet id="140-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtRules_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.RuleId AftRuleId ,Aft.RuleModule AftRuleModule ,Aft.RuleEvent AftRuleEvent ,Aft.RuleCode AftRuleCode ,
		   Aft.RuleCodeDesc AftRuleCodeDesc ,Aft.WaiverDecider AftWaiverDecider ,Aft.Waiver AftWaiver ,
		   Aft.WaiverPerc AftWaiverPerc ,Aft.SQLRule AftSQLRule ,Aft.ActualBlock AftActualBlock ,
		   Aft.SeqOrder AftSeqOrder ,Aft.ReturnType AftReturnType ,
		   Aft.GroupId AftGroupId ,
           Bef.RuleId BefRuleId ,Bef.RuleModule BefRuleModule ,Bef.RuleEvent BefRuleEvent ,Bef.RuleCode BefRuleCode ,
           Bef.RuleCodeDesc BefRuleCodeDesc ,Bef.WaiverDecider BefWaiverDecider ,Bef.Waiver BefWaiver ,
           Bef.WaiverPerc BefWaiverPerc ,Bef.SQLRule BefSQLRule ,Bef.ActualBlock BefActualBlock ,
           Bef.SeqOrder BefSeqOrder ,Bef.ReturnType BefReturnType ,
           Bef.GroupId BefGroupId 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRules AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRules BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Rule')

	</createView>
		</changeSet>

<changeSet id="140-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtRules_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.RuleId AftRuleId ,Aft.RuleModule AftRuleModule ,Aft.RuleEvent AftRuleEvent ,Aft.RuleCode AftRuleCode ,
		   Aft.RuleCodeDesc AftRuleCodeDesc ,Aft.WaiverDecider AftWaiverDecider ,Aft.Waiver AftWaiver ,
		   Aft.WaiverPerc AftWaiverPerc ,Aft.SQLRule AftSQLRule ,Aft.ActualBlock AftActualBlock ,
		  Aft.SeqOrder AftSeqOrder ,Aft.ReturnType AftReturnType ,
		   Aft.GroupId AftGroupId ,
           Bef.RuleId BefRuleId ,Bef.RuleModule BefRuleModule ,Bef.RuleEvent BefRuleEvent ,Bef.RuleCode BefRuleCode ,
           Bef.RuleCodeDesc BefRuleCodeDesc ,Bef.WaiverDecider BefWaiverDecider ,Bef.Waiver BefWaiver ,
           Bef.WaiverPerc BefWaiverPerc ,Bef.SQLRule BefSQLRule ,Bef.ActualBlock BefActualBlock ,
           Bef.SeqOrder BefSeqOrder ,Bef.ReturnType BefReturnType ,
           Bef.GroupId BefGroupId 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtRules AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtRules BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Rule')
	</createView>
</changeSet>

<changeSet id="141-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSalesOfficers_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SalesOffCode AftSalesOffCode, Aft.SalesOffFName AftSalesOffFName,Aft.SalesOffMName AftSalesOffMName,
						  Aft.SalesOffLName AftSalesOffLName, Aft.SalesOffShrtName AftSalesOffShrtName,Aft.SalesOffDept AftSalesOffDept,
						  Aft.SalesOffIsActive AftSalesOffIsActive,
						  Bef.SalesOffCode BefSalesOffCode, Bef.SalesOffFName BefSalesOffFName, Bef.SalesOffMName BefSalesOffMName,
						  Bef.SalesOffLName BefSalesOffLName, Bef.SalesOffShrtName BefSalesOffShrtName, Bef.SalesOffDept BefSalesOffDept,
						  Bef.SalesOffIsActive BefSalesOffIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSalesOfficers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSalesOfficers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SalesOfficer')

	</createView>
		</changeSet>

<changeSet id="141-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSalesOfficers_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.SalesOffCode AftSalesOffCode, Aft.SalesOffFName AftSalesOffFName,Aft.SalesOffMName AftSalesOffMName,
						  Aft.SalesOffLName AftSalesOffLName, Aft.SalesOffShrtName AftSalesOffShrtName,Aft.SalesOffDept AftSalesOffDept,
						  Aft.SalesOffIsActive AftSalesOffIsActive,
						  Bef.SalesOffCode BefSalesOffCode, Bef.SalesOffFName BefSalesOffFName, Bef.SalesOffMName BefSalesOffMName,
						  Bef.SalesOffLName BefSalesOffLName, Bef.SalesOffShrtName BefSalesOffShrtName, Bef.SalesOffDept BefSalesOffDept,
						  Bef.SalesOffIsActive BefSalesOffIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSalesOfficers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSalesOfficers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SalesOfficer')

	</createView>
</changeSet>

<changeSet id="142-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSalutations_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SalutationCode AftSalutationCode, Aft.SaluationDesc AftSaluationDesc,
						  Aft.SalutationGenderCode AftSalutationGenderCode, Aft.SalutationIsActive AftSalutationIsActive,
						  Bef.SalutationCode BefSalutationCode, Bef.SaluationDesc BefSaluationDesc,
						  Bef.SalutationGenderCode BefSalutationGenderCode, Bef.SalutationIsActive BefSalutationIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSalutations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSalutations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Salutation')

	</createView>
		</changeSet>

<changeSet id="142-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSalutations_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.SalutationCode AftSalutationCode, Aft.SaluationDesc AftSaluationDesc,
						  Aft.SalutationGenderCode AftSalutationGenderCode, Aft.SalutationIsActive AftSalutationIsActive,
						  Bef.SalutationCode BefSalutationCode, Bef.SaluationDesc BefSaluationDesc,
						  Bef.SalutationGenderCode BefSalutationGenderCode, Bef.SalutationIsActive BefSalutationIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSalutations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSalutations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Salutation')

	</createView>
</changeSet>

<changeSet id="143-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtScheduleMethod_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.SchdMethod AftSchdMethod,Aft.SchdMethodDesc AftSchdMethodDesc,						  	
						  Bef.SchdMethod BefSchdMethod,  Bef.SchdMethodDesc BefSchdMethodDesc						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSchdMethod AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSchdMethod BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScheduleMethod')

	</createView>
		</changeSet>

<changeSet id="143-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtScheduleMethod_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SchdMethod AftSchdMethod,Aft.SchdMethodDesc AftSchdMethodDesc,						  	
						  Bef.SchdMethod BefSchdMethod,  Bef.SchdMethodDesc BefSchdMethodDesc						  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSchdMethod AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSchdMethod BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScheduleMethod')
	</createView>
</changeSet>

<changeSet id="144-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtScoringGroup_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.ScoreGroupId AftScoreGroupId,Aft.ScoreGroupCode AftScoreGroupCode,Aft.ScoreGroupName AftScoreGroupName,
						  Aft.CategoryType AftCategoryType,Aft.MinScore AftMinScore,Aft.IsOverride AftIsOverride,						  	
						  Aft.OverrideScore AftOverrideScore,
						  Bef.ScoreGroupId BefScoreGroupId,Bef.ScoreGroupCode BefScoreGroupCode,Bef.ScoreGroupName BefScoreGroupName,
						  Bef.CategoryType BefCategoryType,Bef.MinScore BefMinScore,Bef.IsOverride BefIsOverride,
						  Bef.OverrideScore BefOverrideScore					  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTScoringGroup AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTScoringGroup BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScoringGroup')
	</createView>
		</changeSet>

<changeSet id="144-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtScoringGroup_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.ScoreGroupId AftScoreGroupId,Aft.ScoreGroupCode AftScoreGroupCode,Aft.ScoreGroupName AftScoreGroupName,
						  Aft.CategoryType AftCategoryType,Aft.MinScore AftMinScore,Aft.IsOverride AftIsOverride,						  	
						  Aft.OverrideScore AftOverrideScore,
						  Bef.ScoreGroupId BefScoreGroupId,Bef.ScoreGroupCode BefScoreGroupCode,Bef.ScoreGroupName BefScoreGroupName,
						  Bef.CategoryType BefCategoryType,Bef.MinScore BefMinScore,Bef.IsOverride BefIsOverride,
						  Bef.OverrideScore BefOverrideScore					  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTScoringGroup AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTScoringGroup BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScoringGroup')
	</createView>
</changeSet>

<changeSet id="145-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtScoringMetrics_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.ScoreGroupId AftScoreGroupId,Aft.ScoringId AftScoringId,Aft.CategoryType AftCategoryType,
						  Bef.ScoreGroupId BefScoreGroupId,Bef.ScoringId BefScoringId,Bef.CategoryType BefCategoryType				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTScoringMetrics AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTScoringMetrics BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScoringMetrics')
	</createView>
		</changeSet>

<changeSet id="145-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtScoringMetrics_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 			  Aft.ScoreGroupId AftScoreGroupId,Aft.ScoringId AftScoringId,Aft.CategoryType AftCategoryType,
						  Bef.ScoreGroupId BefScoreGroupId,Bef.ScoringId BefScoringId,Bef.CategoryType BefCategoryType				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTScoringMetrics AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTScoringMetrics BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'ScoringMetrics')
	</createView>
</changeSet>

<changeSet id="146-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="ADTSecOperationRoles_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.OprRoleID AftOprRoleID, Aft.OprID AftOprID, Aft.RoleID AftRoleID,
			   Bef.OprRoleID BefOprRoleID, Bef.OprID BefOprID, Bef.RoleID BefRoleID	   
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   ADTSecOperationRoles AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   ADTSecOperationRoles BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityOperationRoles')
	</createView>
		</changeSet>

<changeSet id="146-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="ADTSecOperationRoles_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.OprRoleID AftOprRoleID, Aft.OprID AftOprID, Aft.RoleID AftRoleID,
			   Bef.OprRoleID BefOprRoleID, Bef.OprID BefOprID, Bef.RoleID BefRoleID	   
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   ADTSecOperationRoles AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   ADTSecOperationRoles BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityOperationRoles')			 
	</createView>
</changeSet>

<changeSet id="147-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSecOperations_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.OPrId AftOPrId,Aft.OprCode AftOprCode,Aft.OprDesc AftOprDesc,
			   BEF.OPrId BEFOPrId,BEF.OprCode BEFOprCode,BEF.OprDesc BEFOprDesc
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   ADTSecOperations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   ADTSecOperations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityOperation')
	</createView>
		</changeSet>

<changeSet id="147-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSecOperations_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	 Aft.OPrId AftOPrId,Aft.OprCode AftOprCode,Aft.OprDesc AftOprDesc,
			   BEF.OPrId BEFOPrId,BEF.OprCode BEFOprCode,BEF.OprDesc BEFOprDesc
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   ADTSecOperations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   ADTSecOperations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityOperation')		 
	</createView>
</changeSet>

<changeSet id="148-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSectors_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.SectorCode AftSectorCode, Aft.SectorDesc AftSectorDesc,Aft.SectorLimit AftSectorLimit,
						  Aft.SectorIsActive AftSectorIsActive,
						  Bef.SectorCode BefSectorCode, Bef.SectorDesc BefSectorDesc, Bef.SectorLimit BefSectorLimit,
						  Bef.SectorIsActive BefSectorIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1    ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSectors AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSectors BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Sector')
	</createView>
		</changeSet>

<changeSet id="148-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSectors_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	 Aft.SectorCode AftSectorCode, Aft.SectorDesc AftSectorDesc,Aft.SectorLimit AftSectorLimit,
						  Aft.SectorIsActive AftSectorIsActive,
						  Bef.SectorCode BefSectorCode, Bef.SectorDesc BefSectorDesc, Bef.SectorLimit BefSectorLimit,
						  Bef.SectorIsActive BefSectorIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1    ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSectors AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSectors BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Sector')		 
	</createView>
</changeSet>

<changeSet id="149-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSecurityGroupRights_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.GrpRightID AftGrpRightID,Aft.GrpID AftGrpID,Aft.RightID AftRightID,
						  Bef.GrpRightID BefGrpRightID,Bef.GrpID BefGrpID,Bef.RightID BefRightID				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecGroupRights AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecGroupRights BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityGroupRights')
	</createView>
		</changeSet>

<changeSet id="149-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSecurityGroupRights_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	Aft.GrpRightID AftGrpRightID,Aft.GrpID AftGrpID,Aft.RightID AftRightID,
						  Bef.GrpRightID BefGrpRightID,Bef.GrpID BefGrpID,Bef.RightID BefRightID				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecGroupRights AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecGroupRights BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityGroupRights')		 
	</createView>
</changeSet>

<changeSet id="150-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSecurityGroups_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.GrpID AftGrpID,Aft.GrpCode AftGrpCode,Aft.GrpDesc AftGrpDesc,
						  Bef.GrpID BefGrpID,Bef.GrpCode BefGrpCode,Bef.GrpDesc BefGrpDesc				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityGroups')
	</createView>
		</changeSet>

<changeSet id="151-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSecurityGroups_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.GrpID AftGrpID,Aft.GrpCode AftGrpCode,Aft.GrpDesc AftGrpDesc,
						  Bef.GrpID BefGrpID,Bef.GrpCode BefGrpCode,Bef.GrpDesc BefGrpDesc				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityGroups')			 
	</createView>
</changeSet>


<changeSet id="152-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSecurityRole_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.RoleID AftRoleID,Aft.RoleApp AftRoleApp,Aft.RoleCd AftRoleCd,
						  Aft.RoleDesc AftRoleDesc,Aft.RoleCategory AftRoleCategory,
						  Bef.RoleID BefRoleID,Bef.RoleApp BefRoleApp,Bef.RoleCd BefRoleCd,
						  Bef.RoleDesc BefRoleDesc,Bef.RoleCategory BefRoleCategory			  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecRoles AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecRoles BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityRole')
	</createView>
		</changeSet>

<changeSet id="152-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSecurityRole_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.RoleID AftRoleID,Aft.RoleApp AftRoleApp,Aft.RoleCd AftRoleCd,
						  Aft.RoleDesc AftRoleDesc,Aft.RoleCategory AftRoleCategory,
						  Bef.RoleID BefRoleID,Bef.RoleApp BefRoleApp,Bef.RoleCd BefRoleCd,
						  Bef.RoleDesc BefRoleDesc,Bef.RoleCategory BefRoleCategory			  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecRoles AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecRoles BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityRole')			 
	</createView>
</changeSet>

<changeSet id="153-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSecurityRoleGroups_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.RoleGrpID AftRoleGrpID,Aft.GrpID AftGrpID,Aft.RoleID AftRoleID,
						  Bef.RoleGrpID BefRoleGrpID,Bef.GrpID BefGrpID,Bef.RoleID BefRoleID				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecRoleGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecRoleGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityRoleGroups')
	</createView>
		</changeSet>

<changeSet id="153-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSecurityRoleGroups_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.RoleGrpID AftRoleGrpID,Aft.GrpID AftGrpID,Aft.RoleID AftRoleID,
						  Bef.RoleGrpID BefRoleGrpID,Bef.GrpID BefGrpID,Bef.RoleID BefRoleID				  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecRoleGroups AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecRoleGroups BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityRoleGroups')			 
	</createView>
</changeSet>

<changeSet id="154-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSecurityUser_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.UsrLogin AftUsrLogin,Aft.UsrPwd AftUsrPwd,Aft.UserStaffID AftUserStaffID,
						  Aft.UsrFName AftUsrFName,Aft.UsrMName AftUsrMName,Aft.UsrLName AftUsrLName,
						  Aft.UsrMobile AftUsrMobile,Aft.UsrEmail AftUsrEmail,Aft.UsrEnabled AftUsrEnabled,
						  Aft.UsrCanSignonFrom AftUsrCanSignonFrom,Aft.UsrCanSignonTo AftUsrCanSignonTo,Aft.UsrCanOverrideLimits AftUsrCanOverrideLimits,
						  Aft.UsrAcExp AftUsrAcExp,Aft.UsrAcExpDt AftUsrAcExpDt,Aft.UsrCredentialsExp AftUsrCredentialsExp,
						  Aft.UsrAcLocked AftUsrAcLocked,Aft.UsrLanguage AftUsrLanguage,Aft.UsrDftAppId AftUsrDftAppId,
						  Aft.UsrDftAppCode AftUsrDftAppCode,Aft.UsrBranchCode AftUsrBranchCode,Aft.UsrDeptCode AftUsrDeptCode,
						  Aft.UsrToken AftUsrToken,Aft.UsrIsMultiBranch AftUsrIsMultiBranch,Aft.UsrInvldLoginTries AftUsrInvldLoginTries,
						  
						  Bef.UsrLogin BefUsrLogin,Bef.UsrPwd BefUsrPwd,Bef.UserStaffID BefUserStaffID,
						  Bef.UsrFName BefUsrFName,Bef.UsrMName BefUsrMName,Bef.UsrLName BefUsrLName,
						  Bef.UsrMobile BefUsrMobile,Bef.UsrEmail BefUsrEmail,Bef.UsrEnabled BefUsrEnabled,
						  Bef.UsrCanSignonFrom BefUsrCanSignonFrom,Bef.UsrCanSignonTo BefUsrCanSignonTo,Bef.UsrCanOverrideLimits BefUsrCanOverrideLimits,
						  Bef.UsrAcExp BefUsrAcExp,Bef.UsrAcExpDt BefUsrAcExpDt,Bef.UsrCredentialsExp BefUsrCredentialsExp,
						  Bef.UsrAcLocked BefUsrAcLocked,Bef.UsrLanguage BefUsrLanguage,Bef.UsrDftAppId BefUsrDftAppId,
						  Bef.UsrDftAppCode BefUsrDftAppCode,Bef.UsrBranchCode BefUsrBranchCode,Bef.UsrDeptCode BefUsrDeptCode,
						  Bef.UsrToken BefUsrToken,Bef.UsrIsMultiBranch BefUsrIsMultiBranch,Bef.UsrInvldLoginTries BefUsrInvldLoginTries	  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecUsers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecUsers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityUser')
	</createView>
		</changeSet>

<changeSet id="154-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSecurityUser_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	 Aft.UsrLogin AftUsrLogin,Aft.UsrPwd AftUsrPwd,Aft.UserStaffID AftUserStaffID,
						  Aft.UsrFName AftUsrFName,Aft.UsrMName AftUsrMName,Aft.UsrLName AftUsrLName,
						  Aft.UsrMobile AftUsrMobile,Aft.UsrEmail AftUsrEmail,Aft.UsrEnabled AftUsrEnabled,
						  Aft.UsrCanSignonFrom AftUsrCanSignonFrom,Aft.UsrCanSignonTo AftUsrCanSignonTo,Aft.UsrCanOverrideLimits AftUsrCanOverrideLimits,
						  Aft.UsrAcExp AftUsrAcExp,Aft.UsrAcExpDt AftUsrAcExpDt,Aft.UsrCredentialsExp AftUsrCredentialsExp,
						  Aft.UsrAcLocked AftUsrAcLocked,Aft.UsrLanguage AftUsrLanguage,Aft.UsrDftAppId AftUsrDftAppId,
						  Aft.UsrDftAppCode AftUsrDftAppCode,Aft.UsrBranchCode AftUsrBranchCode,Aft.UsrDeptCode AftUsrDeptCode,
						  Aft.UsrToken AftUsrToken,Aft.UsrIsMultiBranch AftUsrIsMultiBranch,Aft.UsrInvldLoginTries AftUsrInvldLoginTries,
						  
						  Bef.UsrLogin BefUsrLogin,Bef.UsrPwd BefUsrPwd,Bef.UserStaffID BefUserStaffID,
						  Bef.UsrFName BefUsrFName,Bef.UsrMName BefUsrMName,Bef.UsrLName BefUsrLName,
						  Bef.UsrMobile BefUsrMobile,Bef.UsrEmail BefUsrEmail,Bef.UsrEnabled BefUsrEnabled,
						  Bef.UsrCanSignonFrom BefUsrCanSignonFrom,Bef.UsrCanSignonTo BefUsrCanSignonTo,Bef.UsrCanOverrideLimits BefUsrCanOverrideLimits,
						  Bef.UsrAcExp BefUsrAcExp,Bef.UsrAcExpDt BefUsrAcExpDt,Bef.UsrCredentialsExp BefUsrCredentialsExp,
						  Bef.UsrAcLocked BefUsrAcLocked,Bef.UsrLanguage BefUsrLanguage,Bef.UsrDftAppId BefUsrDftAppId,
						  Bef.UsrDftAppCode BefUsrDftAppCode,Bef.UsrBranchCode BefUsrBranchCode,Bef.UsrDeptCode BefUsrDeptCode,
						  Bef.UsrToken BefUsrToken,Bef.UsrIsMultiBranch BefUsrIsMultiBranch,Bef.UsrInvldLoginTries BefUsrInvldLoginTries	  					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSecUsers AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSecUsers BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityUser')		 
	</createView>
</changeSet>

<changeSet id="155-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSecurityUserDivBranch_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.UsrID AftUsrID ,Aft.UserDivision AftUserDivision ,Aft.UserBranch AftUserBranch ,
		   Bef.UsrID BefUsrID ,Bef.UserDivision BefUserDivision ,Bef.UserBranch BefUserBranch
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtSecurityUserDivBranch AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtSecurityUserDivBranch BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityUser')
	</createView>
		</changeSet>

<changeSet id="155-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSecurityUserDivBranch_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
		Aft.UsrID AftUsrID ,Aft.UserDivision AftUserDivision ,Aft.UserBranch AftUserBranch ,
		   Bef.UsrID BefUsrID ,Bef.UserDivision BefUserDivision ,Bef.UserBranch BefUserBranch
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtSecurityUserDivBranch AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtSecurityUserDivBranch BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityUser')	 			 
	</createView>
</changeSet>

<changeSet id="156-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="ADTSecUserOperations_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.UsrOprId AftUsrOprId,Aft.UsrId AftUsrId,Aft.OprId AftOprId,
			   BEF.UsrOprId BEFUsrOprId,BEF.UsrId BEFUsrId,BEF.OprId BEFOprId
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   ADTSecUserOperations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   ADTSecUserOperations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityUserOperations')
	</createView>
		</changeSet>

<changeSet id="156-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="ADTSecUserOperations_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.UsrOprId AftUsrOprId,Aft.UsrId AftUsrId,Aft.OprId AftOprId,
			   BEF.UsrOprId BEFUsrOprId,BEF.UsrId BEFUsrId,BEF.OprId BEFOprId
	FROM       AuditHeader TH   INNER JOIN
			   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
			   ADTSecUserOperations AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
			   ADTSecUserOperations BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SecurityUserOperations')			 
	</createView>
</changeSet>


<changeSet id="157-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSegments_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SegmentCode AftSegmentCode, Aft.SegmentDesc AftSegmentDesc,Aft.SegmentIsActive AftSegmentIsActive,
						  Bef.SegmentCode BefSegmentCode, Bef.SegmentDesc BefSegmentDesc, Bef.SegmentIsActive BefSegmentIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSegments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSegments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Segment')
	</createView>
		</changeSet>

<changeSet id="157-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSegments_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	Aft.SegmentCode AftSegmentCode, Aft.SegmentDesc AftSegmentDesc,Aft.SegmentIsActive AftSegmentIsActive,
						  Bef.SegmentCode BefSegmentCode, Bef.SegmentDesc BefSegmentDesc, Bef.SegmentIsActive BefSegmentIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTSegments AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTSegments BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'Segment')		 
	</createView>
</changeSet>

<changeSet id="158-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSMTDivisionDetail_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.DivisionCode AftDivisionCode ,Aft.DivisionCodeDesc AftDivisionCodeDesc ,Aft.Active AftActive ,
		   Bef.DivisionCode BefDivisionCode ,Bef.DivisionCodeDesc BefDivisionCodeDesc ,Bef.Active BefActive
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtSMTDivisionDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtSMTDivisionDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DivisionDetail')
	</createView>
		</changeSet>

<changeSet id="158-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSMTDivisionDetail_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	Aft.DivisionCode AftDivisionCode ,Aft.DivisionCodeDesc AftDivisionCodeDesc ,Aft.Active AftActive ,
		   Bef.DivisionCode BefDivisionCode ,Bef.DivisionCodeDesc BefDivisionCodeDesc ,Bef.Active BefActive
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtSMTDivisionDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtSMTDivisionDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'DivisionDetail')		 
	</createView>
</changeSet>

<changeSet id="159-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSplRateCodes_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SRType AftSRType, Aft.SRTypeDesc AftSRTypeDesc,Aft.SRIsActive AftSRIsActive,
						  Bef.SRType BefSRType, Bef.SRTypeDesc BefSRTypeDesc, Bef.SRIsActive BefSRIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTSplRateCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTSplRateCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SplRateCode')
	</createView>
		</changeSet>

<changeSet id="159-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSplRateCodes_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	Aft.SRType AftSRType, Aft.SRTypeDesc AftSRTypeDesc,Aft.SRIsActive AftSRIsActive,
						  Bef.SRType BefSRType, Bef.SRTypeDesc BefSRTypeDesc, Bef.SRIsActive BefSRIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTSplRateCodes AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTSplRateCodes BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SplRateCode')		 
	</createView>
</changeSet>

<changeSet id="160-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSplRates_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SRType AftSRType, Aft.SREffDate AftSREffDate,Aft.SRRate AftSRRate,
						  Bef.SRType BefSRType, Bef.SREffDate BefSREffDate, Bef.SRRate BefSRRate
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTSplRates AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTSplRates BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SplRate')
	</createView>
		</changeSet>

<changeSet id="160-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSplRates_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SRType AftSRType, Aft.SREffDate AftSREffDate,Aft.SRRate AftSRRate,
						  Bef.SRType BefSRType, Bef.SREffDate BefSREffDate, Bef.SRRate BefSRRate
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTSplRates AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTSplRates BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SplRate')			 
	</createView>
</changeSet>

<changeSet id="161-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtStepPolicyDetail_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.PolicyCode AftPolicyCode ,Aft.StepNumber AftStepNumber ,Aft.TenorSplitPerc AftTenorSplitPerc ,
		   Aft.RateMargin AftRateMargin ,Aft.EMISplitPerc AftEMISplitPerc ,
           Bef.PolicyCode BefPolicyCode ,Bef.StepNumber BefStepNumber ,Bef.TenorSplitPerc BefTenorSplitPerc ,
           Bef.RateMargin BefRateMargin ,Bef.EMISplitPerc BefEMISplitPerc 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtStepPolicyDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtStepPolicyDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'StepPolicyHeader')
	</createView>
		</changeSet>

<changeSet id="161-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtStepPolicyDetail_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	 Aft.PolicyCode AftPolicyCode ,Aft.StepNumber AftStepNumber ,Aft.TenorSplitPerc AftTenorSplitPerc ,
		   Aft.RateMargin AftRateMargin ,Aft.EMISplitPerc AftEMISplitPerc ,
           Bef.PolicyCode BefPolicyCode ,Bef.StepNumber BefStepNumber ,Bef.TenorSplitPerc BefTenorSplitPerc ,
           Bef.RateMargin BefRateMargin ,Bef.EMISplitPerc BefEMISplitPerc 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtStepPolicyDetail AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtStepPolicyDetail BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'StepPolicyHeader')		 
	</createView>
</changeSet>

<changeSet id="162-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtStepPolicyHeader_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.PolicyCode AftPolicyCode ,Aft.PolicyDesc AftPolicyDesc ,
		   Bef.PolicyCode BefPolicyCode ,Bef.PolicyDesc BefPolicyDesc
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtStepPolicyHeader AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtStepPolicyHeader BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'StepPolicyHeader')
	</createView>
		</changeSet>

<changeSet id="162-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtStepPolicyHeader_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.PolicyCode AftPolicyCode ,Aft.PolicyDesc AftPolicyDesc ,
		   Bef.PolicyCode BefPolicyCode ,Bef.PolicyDesc BefPolicyDesc
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtStepPolicyHeader AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtStepPolicyHeader BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'StepPolicyHeader') 			 
	</createView>
</changeSet>

<changeSet id="163-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtSysInternalActDef_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SIACode AftSIACode ,Aft.SIAName AftSIAName ,Aft.SIAShortName AftSIAShortName ,Aft.SIAAcType AftSIAAcType ,
		   Aft.SIANumber AftSIANumber ,
           Bef.SIACode BefSIACode ,Bef.SIAName BefSIAName ,Bef.SIAShortName BefSIAShortName ,Bef.SIAAcType BefSIAAcType ,
           Bef.SIANumber BefSIANumber 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtSystemInternalAccountDef AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtSystemInternalAccountDef BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SystemInternalAccountDefinition')
	</createView>
		</changeSet>

<changeSet id="163-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtSysInternalActDef_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.SIACode AftSIACode ,Aft.SIAName AftSIAName ,Aft.SIAShortName AftSIAShortName ,Aft.SIAAcType AftSIAAcType ,
		   Aft.SIANumber AftSIANumber ,
           Bef.SIACode BefSIACode ,Bef.SIAName BefSIAName ,Bef.SIAShortName BefSIAShortName ,Bef.SIAAcType BefSIAAcType ,
           Bef.SIANumber BefSIANumber 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtSystemInternalAccountDef AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtSystemInternalAccountDef BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'SystemInternalAccountDefinition')			 
	</createView>
</changeSet>


<changeSet id="164-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtTakafulProvider_view">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.TakafulCode AftTakafulCode ,Aft.TakafulName AftTakafulName ,Aft.TakafulType AftTakafulType ,
		   Aft.AccountNumber AftAccountNumber ,Aft.TakafulRate AftTakafulRate ,Aft.EstablishedDate AftEstablishedDate ,
		   Aft.Street AftStreet ,Aft.HouseNumber AftHouseNumber ,Aft.AddrLine1 AftAddrLine1 ,Aft.AddrLine2 AftAddrLine2 ,
		   Aft.Country AftCountry ,Aft.Province AftProvince ,Aft.City AftCity ,Aft.ZipCode AftZipCode ,
		   Aft.Phone AftPhone ,Aft.Fax AftFax ,Aft.EmailId AftEmailId ,Aft.WebSite AftWebSite ,
		   Aft.ContactPerson AftContactPerson ,Aft.ContactPersonNo AftContactPersonNo ,
		   Bef.TakafulCode BefTakafulCode ,Bef.TakafulName BefTakafulName ,Bef.TakafulType BefTakafulType ,
		   Bef.AccountNumber BefAccountNumber ,Bef.TakafulRate BefTakafulRate ,Bef.EstablishedDate BefEstablishedDate ,
		   Bef.Street BefStreet ,Bef.HouseNumber BefHouseNumber ,Bef.AddrLine1 BefAddrLine1 ,Bef.AddrLine2 BefAddrLine2 ,
		   Bef.Country BefCountry ,Bef.Province BefProvince ,Bef.City BefCity ,Bef.ZipCode BefZipCode ,
		   Bef.Phone BefPhone ,Bef.Fax BefFax ,Bef.EmailId BefEmailId ,Bef.WebSite BefWebSite ,
		   Bef.ContactPerson BefContactPerson ,Bef.ContactPersonNo BefContactPersonNo 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtTakafulProvider AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtTakafulProvider BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'TakafulProvider')
	</createView>
		</changeSet>

<changeSet id="164-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtTakafulProvider_view">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	Aft.TakafulCode AftTakafulCode ,Aft.TakafulName AftTakafulName ,Aft.TakafulType AftTakafulType ,
		   Aft.AccountNumber AftAccountNumber ,Aft.TakafulRate AftTakafulRate ,Aft.EstablishedDate AftEstablishedDate ,
		   Aft.Street AftStreet ,Aft.HouseNumber AftHouseNumber ,Aft.AddrLine1 AftAddrLine1 ,Aft.AddrLine2 AftAddrLine2 ,
		   Aft.Country AftCountry ,Aft.Province AftProvince ,Aft.City AftCity ,Aft.ZipCode AftZipCode ,
		   Aft.Phone AftPhone ,Aft.Fax AftFax ,Aft.EmailId AftEmailId ,Aft.WebSite AftWebSite ,
		   Aft.ContactPerson AftContactPerson ,Aft.ContactPersonNo AftContactPersonNo ,
		   Bef.TakafulCode BefTakafulCode ,Bef.TakafulName BefTakafulName ,Bef.TakafulType BefTakafulType ,
		   Bef.AccountNumber BefAccountNumber ,Bef.TakafulRate BefTakafulRate ,Bef.EstablishedDate BefEstablishedDate ,
		   Bef.Street BefStreet ,Bef.HouseNumber BefHouseNumber ,Bef.AddrLine1 BefAddrLine1 ,Bef.AddrLine2 BefAddrLine2 ,
		   Bef.Country BefCountry ,Bef.Province BefProvince ,Bef.City BefCity ,Bef.ZipCode BefZipCode ,
		   Bef.Phone BefPhone ,Bef.Fax BefFax ,Bef.EmailId BefEmailId ,Bef.WebSite BefWebSite ,
		   Bef.ContactPerson BefContactPerson ,Bef.ContactPersonNo BefContactPersonNo 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtTakafulProvider AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtTakafulProvider BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'TakafulProvider')		 
	</createView>
</changeSet>

<changeSet id="165-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtTargetDetails_VIEW">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.TargetCode AftTargetCode ,Aft.TargetDesc AftTargetDesc ,Aft.Active AftActive ,
           Bef.TargetCode BefTargetCode ,Bef.TargetDesc BefTargetDesc ,Bef.Active BefActive 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtTargetDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtTargetDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'TargetDetail')
	</createView>
		</changeSet>

<changeSet id="165-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtTargetDetails_VIEW">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			Aft.TargetCode AftTargetCode ,Aft.TargetDesc AftTargetDesc ,Aft.Active AftActive ,
           Bef.TargetCode BefTargetCode ,Bef.TargetDesc BefTargetDesc ,Bef.Active BefActive 
	FROM    AuditHeader TH   INNER JOIN
		    SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
		    AdtTargetDetails AFT   ON TH.AuditId = AFT.AuditId AND
		   TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
		    AdtTargetDetails BEF   ON TH.AuditId = BEF.AuditId AND
		   TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE (TH.AuditTranType != 'W') AND (TH.AuditModule = 'TargetDetail') 			 
	</createView>
</changeSet>

<changeSet id="166-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtTransactionCode_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.TranCode AftTranCode, Aft.TranDesc AftTranDesc,Aft.TranType AftTranType,
						  Aft.TranIsActive AftTranIsActive,
						  Bef.TranCode BefTranCode, Bef.TranDesc BefTranDesc, Bef.TranType BefTranType,
						  Bef.TranIsActive BefTranIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTTransactionCode AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTTransactionCode BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'TransactionCode')
	</createView>
		</changeSet>

<changeSet id="166-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtTransactionCode_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 		 Aft.TranCode AftTranCode, Aft.TranDesc AftTranDesc,Aft.TranType AftTranType,
						  Aft.TranIsActive AftTranIsActive,
						  Bef.TranCode BefTranCode, Bef.TranDesc BefTranDesc, Bef.TranType BefTranType,
						  Bef.TranIsActive BefTranIsActive
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtBMTTransactionCode AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtBMTTransactionCode BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE     (TH.AuditTranType != 'W') AND (TH.AuditModule = 'TransactionCode')	 
	</createView>
</changeSet>

<changeSet id="167-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtTransactionEntry_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.AccountSetid AftAccountSetid,Aft.TransOrder AftTransOrder,Aft.TransDesc AftTransDesc,
			   Aft.Debitcredit AftDebitcredit,Aft.ShadowPosting AftShadowPosting,Aft.AccountType AftAccountType,
			   Aft.AccountBranch AftAccountBranch,Aft.Account AftAccount,Aft.AccountSubHeadRule AftAccountSubHeadRule,
						  Aft.TranscationCode AftTranscationCode,Aft.RvsTransactionCode AftRvsTransactionCode,Aft.AmountRule AftAmountRule,
						  Aft.RuleDecider AftRuleDecider,Aft.FeeCode AftFeeCode,Aft.ChargeType AftChargeType,
						  Aft.EntryByInvestment AftEntryByInvestment,Aft.OpenNewFinAc AftOpenNewFinAc,						  
						  Bef.AccountSetid BefAccountSetid,Bef.TransOrder BefTransOrder,Bef.TransDesc BefTransDesc,
						  Bef.Debitcredit BefDebitcredit,Bef.ShadowPosting BefShadowPosting,Bef.AccountType BefAccountType,
						  Bef.AccountBranch BefAccountBranch,Bef.Account BefAccount,Bef.AccountSubHeadRule BefAccountSubHeadRule,
						  Bef.TranscationCode BefTranscationCode,Bef.RvsTransactionCode BefRvsTransactionCode,Bef.AmountRule BefAmountRule,
						  Bef.RuleDecider BefRuleDecider,Bef.FeeCode BefFeeCode,Bef.ChargeType BefChargeType,
						  Bef.EntryByInvestment BefEntryByInvestment, Bef.OpenNewFinAc BefOpenNewFinAc				  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTTransactionEntry AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTTransactionEntry BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountingSet')
	</createView>
		</changeSet>

<changeSet id="167-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtTransactionEntry_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	Aft.AccountSetid AftAccountSetid,Aft.TransOrder AftTransOrder,Aft.TransDesc AftTransDesc,
			   Aft.Debitcredit AftDebitcredit,Aft.ShadowPosting AftShadowPosting,Aft.AccountType AftAccountType,
			   Aft.AccountBranch AftAccountBranch,Aft.Account AftAccount,Aft.AccountSubHeadRule AftAccountSubHeadRule,
						  Aft.TranscationCode AftTranscationCode,Aft.RvsTransactionCode AftRvsTransactionCode,Aft.AmountRule AftAmountRule,
						  Aft.RuleDecider AftRuleDecider,Aft.FeeCode AftFeeCode,Aft.ChargeType AftChargeType,
						  Aft.EntryByInvestment AftEntryByInvestment,Aft.OpenNewFinAc AftOpenNewFinAc,						  
						  Bef.AccountSetid BefAccountSetid,Bef.TransOrder BefTransOrder,Bef.TransDesc BefTransDesc,
						  Bef.Debitcredit BefDebitcredit,Bef.ShadowPosting BefShadowPosting,Bef.AccountType BefAccountType,
						  Bef.AccountBranch BefAccountBranch,Bef.Account BefAccount,Bef.AccountSubHeadRule BefAccountSubHeadRule,
						  Bef.TranscationCode BefTranscationCode,Bef.RvsTransactionCode BefRvsTransactionCode,Bef.AmountRule BefAmountRule,
						  Bef.RuleDecider BefRuleDecider,Bef.FeeCode BefFeeCode,Bef.ChargeType BefChargeType,
						  Bef.EntryByInvestment BefEntryByInvestment, Bef.OpenNewFinAc BefOpenNewFinAc				  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtRMTTransactionEntry AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtRMTTransactionEntry BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'AccountingSet')		 
	</createView>
</changeSet>

<changeSet id="168-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtVehicleDealer_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.DealerId AftDealerId,Aft.DealerName AftDealerName,						  	
						  Bef.DealerId BefDealerId,  Bef.DealerName BefDealerName					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleDealer AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleDealer BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleDealer')
	</createView>
		</changeSet>

<changeSet id="168-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtVehicleDealer_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 		 Aft.DealerId AftDealerId,Aft.DealerName AftDealerName,						  	
						  Bef.DealerId BefDealerId,  Bef.DealerName BefDealerName					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleDealer AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleDealer BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleDealer')	 
	</createView>
</changeSet>

<changeSet id="169-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtVehicleManufacturer_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.ManufacturerId AftManufacturerId,Aft.ManufacturerName AftManufacturerName,						  	
						  Bef.ManufacturerId BefManufacturerId,  Bef.ManufacturerName BefManufacturerName					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleManufacturer AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleManufacturer BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleManufacturer')
	</createView>
		</changeSet>

<changeSet id="169-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtVehicleManufacturer_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	Aft.ManufacturerId AftManufacturerId,Aft.ManufacturerName AftManufacturerName,						  	
						  Bef.ManufacturerId BefManufacturerId,  Bef.ManufacturerName BefManufacturerName					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleManufacturer AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleManufacturer BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleManufacturer')		 
	</createView>
</changeSet>

<changeSet id="170-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtVehicleModel_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			  Aft.VehicleModelId AftVehicleModelId,Aft.VehicleManufacturerId AftVehicleManufacturerId,
						  Aft.VehicleModelDesc AftVehicleModelDesc,
						  						  	
						  Bef.VehicleModelId BefVehicleModelId,  Bef.VehicleManufacturerId BefVehicleManufacturerId,
						  Bef.VehicleModelDesc BefVehicleModelDesc				  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleModel AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleModel BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleModel')
	</createView>
		</changeSet>

<changeSet id="170-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtVehicleModel_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 	 Aft.VehicleModelId AftVehicleModelId,Aft.VehicleManufacturerId AftVehicleManufacturerId,
						  Aft.VehicleModelDesc AftVehicleModelDesc,
						  						  	
						  Bef.VehicleModelId BefVehicleModelId,  Bef.VehicleManufacturerId BefVehicleManufacturerId,
						  Bef.VehicleModelDesc BefVehicleModelDesc				  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleModel AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleModel BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleModel')		 
	</createView>
</changeSet>

<changeSet id="171-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtVehicleVersion_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.VehicleVersionId AftVehicleVersionId,Aft.VehicleModelId AftVehicleModelId,
						  Aft.VehicleVersionCode AftVehicleVersionCode,
						  						  	
						  Bef.VehicleVersionId BefVehicleVersionId,Bef.VehicleModelId BefVehicleModelId,
						  Bef.VehicleVersionCode BefVehicleVersionCode					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleVersion AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleVersion BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleVersion')
	</createView>
		</changeSet>

<changeSet id="171-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtVehicleVersion_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 		Aft.VehicleVersionId AftVehicleVersionId,Aft.VehicleModelId AftVehicleModelId,
						  Aft.VehicleVersionCode AftVehicleVersionCode,
						  						  	
						  Bef.VehicleVersionId BefVehicleVersionId,Bef.VehicleModelId BefVehicleModelId,
						  Bef.VehicleVersionCode BefVehicleVersionCode					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtAMTVehicleVersion AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtAMTVehicleVersion BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'VehicleVersion')	 
	</createView>
</changeSet>

<changeSet id="172-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="AdtWeekendMaster_View">

	SELECT     TH.AuditId, TH.AuditDate AuditDateTime, CONVERT(varchar(20), TH.AuditDate, 106) AuditDate, CONVERT(varchar(35), TH.AuditDate, 108) 
			   AuditTime, COALESCE(AFT.AuditSeq, BEF.AuditSeq)  AuditSeq, TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName,${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 Aft.WeekendCode AftWeekendCode,Aft.WeekendDesc AftWeekendDesc,
						  Aft.Weekend AftWeekend,
						  						  	
						  Bef.WeekendCode BefWeekendCode,Bef.WeekendDesc BefWeekendDesc,
						  Bef.Weekend BefWeekend					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSMTWeekendMaster AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSMTWeekendMaster BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'WeekendMaster')
	</createView>
		</changeSet>

<changeSet id="172-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="AdtWeekendMaster_View">		  
  Select     Th.Auditid, Th.Auditdate Auditdatetime, to_char(TH.AuditDate, 'DD-MON-YYYY') AuditDate, to_char( TH.AuditDate, 'HH24:MI:SS') AuditTime,
  COALESCE(AFT.AuditSeq, BEF.AuditSeq) AuditSeq,TH.AuditUsrId,${add.schema}FN_CustomerName(T1.UsrFName, T1.UsrMName, T1.UsrLName)  AS AuditUserName, ${add.schema}FN_TranType(TH.AuditTranType) AuditTranType, 
			 		Aft.WeekendCode AftWeekendCode,Aft.WeekendDesc AftWeekendDesc,
						  Aft.Weekend AftWeekend,
						  						  	
						  Bef.WeekendCode BefWeekendCode,Bef.WeekendDesc BefWeekendDesc,
						  Bef.Weekend BefWeekend					  
	FROM          AuditHeader TH   INNER JOIN
						   SecUsers_View T1   ON TH.AuditUsrId = T1.UsrID LEFT OUTER JOIN
						   AdtSMTWeekendMaster AFT   ON TH.AuditId = AFT.AuditId AND TH.AuditDate = AFT.AuditDate AND AFT.AuditImage = 'A' FULL OUTER JOIN
						   AdtSMTWeekendMaster BEF   ON TH.AuditId = BEF.AuditId AND TH.AuditDate = BEF.AuditDate AND BEF.AuditImage = 'B'
	WHERE        (TH.AuditTranType != 'W') AND (TH.AuditModule = 'WeekendMaster')	 
	</createView>
</changeSet>

<changeSet id="173-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="FacilityStsAprvlInquiry_View">

SELECT     AH.AuditReference, AF.LastMntOn AuditDate, AF.RoleCode, AF.LastMntBy, SR.RoleDesc, AF.RecordStatus, AF.RecordType, 
                      SU.UsrFName ${call.concatenate} COALESCE(' ' ${call.concatenate} SU.UsrMName ${call.concatenate}' ', ' ') ${call.concatenate} SU.UsrLName UsrName
FROM        AuditHeader AH INNER JOIN
                       AdtFacilityHeader AF ON AF.AuditId = AH.AuditId INNER JOIN
                     ${call.maindb}SecRoles SR ON SR.RoleCd = AF.RoleCode INNER JOIN
                     ${call.maindb}SecUsers SU ON SU.UsrID = AF.LastMntBy
WHERE     (AH.AuditModule = 'Facility')
			 
	</createView>
		</changeSet>

<changeSet id="173-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="FacilityStsAprvlInquiry_View">		  
SELECT     AH.AuditReference, AF.LastMntOn AuditDate, AF.RoleCode, AF.LastMntBy, SR.RoleDesc, AF.RecordStatus, AF.RecordType, 
                      SU.UsrFName ${call.concatenate} COALESCE(' ' ${call.concatenate} SU.UsrMName ${call.concatenate}' ', ' ') ${call.concatenate} SU.UsrLName UsrName
FROM        AuditHeader AH INNER JOIN
                       AdtFacilityHeader AF ON AF.AuditId = AH.AuditId INNER JOIN
                     ${call.maindb}SecRoles SR ON SR.RoleCd = AF.RoleCode INNER JOIN
                     ${call.maindb}SecUsers SU ON SU.UsrID = AF.LastMntBy
WHERE     (AH.AuditModule = 'Facility')
			 			 
	</createView>
</changeSet>

<changeSet id="174-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="FacilityStsAprvlInquiry_View">

SELECT     AH.AuditReference, AF.LastMntOn AuditDate, AF.RoleCode, AF.LastMntBy, SR.RoleDesc, AF.RecordStatus, AF.RecordType, 
                      SU.UsrFName ${call.concatenate} COALESCE(' ' ${call.concatenate} SU.UsrMName ${call.concatenate}' ', ' ') ${call.concatenate} SU.UsrLName UsrName
FROM        AuditHeader AH INNER JOIN
                       AdtFacilityHeader AF ON AF.AuditId = AH.AuditId INNER JOIN
                     ${call.maindb}SecRoles SR ON SR.RoleCd = AF.RoleCode INNER JOIN
                     ${call.maindb}SecUsers SU ON SU.UsrID = AF.LastMntBy
WHERE     (AH.AuditModule = 'Facility')
			 
	</createView>
		</changeSet>

<changeSet id="174-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="FacilityStsAprvlInquiry_View">		  
SELECT     AH.AuditReference, AF.LastMntOn AuditDate, AF.RoleCode, AF.LastMntBy, SR.RoleDesc, AF.RecordStatus, AF.RecordType, 
                      SU.UsrFName ${call.concatenate} COALESCE(' ' ${call.concatenate} SU.UsrMName ${call.concatenate}' ', ' ') ${call.concatenate} SU.UsrLName UsrName
FROM        AuditHeader AH INNER JOIN
                       AdtFacilityHeader AF ON AF.AuditId = AH.AuditId INNER JOIN
                     ${call.maindb}SecRoles SR ON SR.RoleCd = AF.RoleCode INNER JOIN
                     ${call.maindb}SecUsers SU ON SU.UsrID = AF.LastMntBy
WHERE     (AH.AuditModule = 'Facility')
			 			 
	</createView>
</changeSet>

<changeSet id="175-sql" author="Pruthvi" dbms="mssql">
		<createView replaceIfExists="true" viewName="FinStsAprvlInquiry_View">

SELECT     AF.FinReference AuditReference, AF.RcdMaintainSts AuditEvent ,AF.LastMntOn AuditDate, AF.RoleCode, AF.LastMntBy, SR.RoleDesc, AF.RecordStatus, AF.RecordType, 
                      SU.UsrFName ${call.concatenate} COALESCE(' ' ${call.concatenate} SU.UsrMName ${call.concatenate}' ', ' ') ${call.concatenate} SU.UsrLName UsrName
FROM         AuditHeader AH INNER JOIN
                AdtFinanceMain AF ON AF.AuditId = AH.AuditId INNER JOIN
                     ${call.maindb}SecRoles SR ON SR.RoleCd = AF.RoleCode INNER JOIN
                     ${call.maindb}SecUsers SU ON SU.UsrID = AF.LastMntBy 
WHERE     ((AH.AuditModule = 'FinanceDetail') OR  
(AH.AuditModule = 'InvestmentFinHeader')) AND 
AF.RecordStatus != 'Saved'
			 
	</createView>
		</changeSet>

<changeSet id="175-oracle" author="Pruthvi" dbms="oracle">
		<createView replaceIfExists="true" viewName="FinStsAprvlInquiry_View">		  
SELECT     AF.FinReference AuditReference, AF.RcdMaintainSts AuditEvent ,AF.LastMntOn AuditDate, AF.RoleCode, AF.LastMntBy, SR.RoleDesc, AF.RecordStatus, AF.RecordType, 
                      SU.UsrFName ${call.concatenate} COALESCE(' ' ${call.concatenate} SU.UsrMName ${call.concatenate}' ', ' ') ${call.concatenate} SU.UsrLName UsrName
FROM         AuditHeader AH INNER JOIN
                AdtFinanceMain AF ON AF.AuditId = AH.AuditId INNER JOIN
                     ${call.maindb}SecRoles SR ON SR.RoleCd = AF.RoleCode INNER JOIN
                     ${call.maindb}SecUsers SU ON SU.UsrID = AF.LastMntBy 
WHERE     ((AH.AuditModule = 'FinanceDetail') OR  
(AH.AuditModule = 'InvestmentFinHeader')) AND 
AF.RecordStatus != 'Saved'
			 			 
	</createView>
</changeSet>
	
</databaseChangeLog>
