<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />




	<changeSet id="01" author="SreeRavali">
		<addColumn tableName="FINSCHEDULEDETAILS_Temp">
			<column name="PRESENTMENTID" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="02" author="SreeRavali">
		<addDefaultValue columnDataType="bigint" columnName="PRESENTMENTID"
			defaultValueNumeric="0" tableName="FINSCHEDULEDETAILS_Temp" />
	</changeSet>

	<changeSet id="03" author="SreeRavali">
		<addDefaultValue columnDataType="bigint" columnName="PRESENTMENTID"
			defaultValueNumeric="0" tableName="FINSCHEDULEDETAILS" />
	</changeSet>
	
<changeSet id="04" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_AVIEW" replaceIfExists="true">
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails  T1
</createView>
	</changeSet>
	
	<changeSet id="05" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_VIEW" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails_Temp  T1
UNION ALL
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails  T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference)
		
		</createView>
	</changeSet>
	<changeSet id="06" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_TVIEW" replaceIfExists="true">
	SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

				FROM         FinScheduleDetails_Temp  T1
				
		</createView>
	</changeSet>
	<changeSet id="07" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_TVIEW" replaceIfExists="true">
	SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

				FROM         FinScheduleDetails_Temp  T1
				
		</createView>
	</changeSet>
	<changeSet id="08" author="Irfan">
		<sql>
		UPDATE SECROLES SET RecordStatus = 'Approved';
		Update workflowDetails Set workflowActive = 0 WHERE WorkflowType = 'LCMUR_FIN_PROCESS';
		UPDATE bmtamountcodes SET amountcodedesc = REPLACE(amountcodedesc, 'Finance', 'Loan');
		</sql>
	</changeSet>

	<changeSet id="9" author="Siva">
		<sql>
		Update secrights set RightName = REPLACE(RightName, 'ReceiptCancellationDialog', 'ReceiptBounceDialog') where page ='ReceiptCancellationDialog';
		Update secrights set  page ='ReceiptBounceDialog' where page ='ReceiptCancellationDialog';
		</sql>
	</changeSet>
	
	<changeSet id="09" author="ManojKumar.P">
		<sql>
			UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
			UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
			UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
			UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
			UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
			UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
			UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
			
			INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menu_Category_SAPGL','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menu_Item_SAPGLFileDownloads','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'SAPGL_FILE_CONTROL','SAPGL file CONTROL.',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menu_Category_SAPGL'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menu_Item_SAPGLFileDownloads'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'SAPGL_FILE_CONTROL','SAPGL File Control.','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='SAPGL_FILE_CONTROL'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'SAPGL_FILE_CONTROL','SAPGL File Control.',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
			
			INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='SAPGL_FILE_CONTROL'), (select RoleID from SecRoles where RoleCd='SAPGL_FILE_CONTROL'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
			
			UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
			UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
			UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
			UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
			UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
			UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
			UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
		</sql>
	</changeSet>
	<changeSet id="10" author="Manojkumar.P">
	<sql>
		DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME LIKE '%menu_Category_SAPGL%');
		DELETE from SECRIGHTS where rightName = 'menu_Category_SAPGL';
		
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
		
		INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menuCat_SAPGL','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
		INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menuCat_SAPGL'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
		
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	</sql>
	</changeSet>
	<changeSet id="11" author="Madhubabu">
		<createView viewName="MANDATES_VIEW" replaceIfExists="true">
	SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference,T5.PcCityName
FROM    	Mandates_Temp T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
            
UNION ALL

SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active,1 useExisting,T1.OrgReference,T5.PcCityName
FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
			WHERE     NOT EXISTS (SELECT 1 FROM Mandates_TEMP WHERE MandateID = T1.MandateID)
		</createView>
	</changeSet>
	<changeSet id="12" author="Durga Prasad D">
	<sql>
		INSERT INTO ErrorDetails VALUES('90271','EN','E','Invalid {0} payment frequency day {1}, Allowed frequency days are: {2}.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		INSERT INTO ErrorDetails VALUES('90272','EN','E','Number of {0} terms should between configured min terms:{1} and max terms:{2} from loanType.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="13" author="Irfan">
		<addColumn tableName="ManualAdvise">
		<column name="ValueDate" type="datetime">
		</column>
		<column name="PostDate" type="datetime">
		</column>
		</addColumn>
	</changeSet>
	<changeSet id="14" author="Irfan">
		<addColumn tableName="ManualAdvise_Temp">
		<column name="ValueDate" type="datetime">
		</column>
		<column name="PostDate" type="datetime">
		</column>
		</addColumn>
	</changeSet>
	<changeSet id="15" author="Irfan">
	<createView viewName="MANUALADVISE_VIEW" replaceIfExists="true">
		 SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
             T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
              T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise_Temp  T1 
        INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
				UNION ALL
				
				SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
                   T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
                    T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise  T1 
        INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
				WHERE     NOT EXISTS (SELECT 1 FROM ManualAdvise_TEMP WHERE AdviseID = T1.AdviseID)
	
	</createView>
	</changeSet>
	<changeSet id="16" author="Irfan">
		<createView viewName="MANUALADVISE_TVIEW" replaceIfExists="true">
		SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence, 
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID, T3.BOUNCECODE
				FROM    	ManualAdvise_Temp  T1
       			LEFT JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
       			LEFT JOIN BOUNCEREASONS T3 ON T1.BounceID = T3.BOUNCEID
		</createView>
	</changeSet>
	<changeSet id="17" author="Irfan">
		<createView viewName="MANUALADVISE_AVIEW" replaceIfExists="true">
		SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise  T1
       			INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
		
		</createView>
	
	</changeSet>
	<changeSet id="18" author="Irfan">
	<sql>
	Update MANUALADVISE set ValueDate='05-MAY-17'; 
	Update MANUALADVISE set PostDate='05-MAY-17';
	Update MANUALADVISE_TEMP set ValueDate='05-MAY-17';  
	Update MANUALADVISE_TEMP set PostDate='05-MAY-17';
	</sql>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="ValueDate"/>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="PostDate"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="ValueDate"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="PostDate"/>
	</changeSet>
	<changeSet id="19" author="Siva">
		<sql>
			Update secrights SET rightname = 'menuItem_FinanceManagement_ReceiptBounce' where rightname = 'menuItem_FinanceManagement_ReceiptCancellation';
		</sql>
	</changeSet>
	<changeSet id="20" author="Irfan">
	<sql>
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'ManualAdviseDialog_ValueDate','ManualAdviseDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='ManualAdviseDialog_ValueDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
	
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	</sql>
	</changeSet>
	<changeSet id="21" author="Siva">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
					
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinanceManagement_ReceiptCancellation','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_ReceiptCancellationDialog_btnSave','ReceiptCancellationDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'RECEIPTCANCEL_MAKER', 'Receipt Cancellation Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'RECEIPTCANCEL_APPROVER', 'Receipt Cancellation Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='RECEIPTCANCEL_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='BOUNCE_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='RECEIPTCANCEL_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='BOUNCE_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
	
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_ReceiptCancellationDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_ReceiptCancellationDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
					
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
	<changeSet id="22" author="Irfan">
	<sql>
	Update MANUALADVISE set ValueDate=CURRENT_TIMESTAMP; 
	Update MANUALADVISE set PostDate=CURRENT_TIMESTAMP;
	Update MANUALADVISE_TEMP set ValueDate=CURRENT_TIMESTAMP;  
	Update MANUALADVISE_TEMP set PostDate=CURRENT_TIMESTAMP;
	</sql>
	</changeSet>
	<changeSet id="23" author="Srikanth">
	<sql>
	INSERT INTO ErrorDetails VALUES('90273','EN','E','Duplicate {0} are not allowed.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90270','EN','E','{0} must contain at least one {1} with Very High priority i.e 1.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90274','EN','E','planEMIHLockPeriod enabled,so Plan EMI Holiday are not allowed for this holidayDate{0}','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90275','EN','E','DataType mismatch, Invalid data for extendedDetails.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="24" author="DDP">
	<sql>
	INSERT INTO ErrorDetails VALUES('90276','EN','E','Multi disbursement is not allowed for this loan:{0} with loanType:(1).','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90277','EN','E','{0} should be equal to {1}.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="26" author="Pradeep">
	<sql>
	Update FINSCHEDULEDETAILS_Temp set PRESENTMENTID = 0;
	Update FINSCHEDULEDETAILS set PRESENTMENTID = 0;
	</sql>
	</changeSet>
	
	<changeSet id="27" author="Manojkumar.P">
	    <createTable tableName="MANDATE_REQUESTS">			
			<column name="ID"  	type="bigint" autoIncrement="true" incrementBy="1">
			  <constraints primaryKey="true"  nullable="false" />
			 </column>
			<column name="BATCH_ID" 			type="bigint"/>
			<column name="MANDATEID" 			type="bigint"/>
			<column name="BANK_SEQ" 			type="VARCHAR(20)"/>
			<column name="BANK_CODE" 			type="VARCHAR(8)"/>
			<column name="BANK_NAME" 			type="VARCHAR(50)"/>
			<column name="BRANCH_NAME" 			type="VARCHAR(200)"/>
			<column name="CUSTCIF" 				type="VARCHAR(20)"/>
			<column name="CUSTOMER_NAME" 		type="VARCHAR(200)"/>
			<column name="FINTYPE" 				type="VARCHAR(8)"/>
			<column name="FINREFERENCE" 		type="VARCHAR(20)"/>
			<column name="EMI" 					type="VARCHAR(200)"/>
			<column name="OPENFLAG" 			type="VARCHAR(10)"/>
			<column name="ACCT_NUMBER" 			type="VARCHAR(50)"/>
			<column name="ACCT_TYPE" 			type="VARCHAR(20)"/>
			<column name="ACCT_HOLDER_NAME" 	type="VARCHAR(50)"/>
			<column name="MICR_CODE" 			type="VARCHAR(20)"/>
			<column name="EXTRACTION_DATE" 		type="datetime"/>
			<column name="EFFECTIVE_DATE" 		type="datetime"/>
			<column name="EMI_ENDDATE" 			type="datetime"/>
			<column name="OPEN_ENDDATE" 		type="datetime"/>
			<column name="UPPER_LIMIT" 			type="VARCHAR(200)"/>
			<column name="DEBIT_AMOUNT" 		type="VARCHAR(200)"/>
			<column name="START_DATE" 			type="datetime"/>
			<column name="END_DATE" 			type="datetime"/>
			<column name="APPLICATION_NUMBER" 	type="VARCHAR(200)"/>
			<column name="MANDATE_TYPE" 		type="VARCHAR(20)"/>
			<column name="MANDATE_REG_NO" 		type="VARCHAR(25)"/>
			<column name="RESP_BATCH_ID" 		type="bigint"/>
			<column name="STATUS" 				type="VARCHAR(50)"/>
			<column name="REMARKS" 				type="VARCHAR(500)"/>
			<column name="REJECT_REASON" 		type="VARCHAR(100)"/>
		</createTable>
	</changeSet>
	<changeSet id="28" author="Jayant">
	    <sql>
	        delete from RBFIELDDETAILS where RBFLDNAME = 'ae_partnerBankAcType' and RBMODULE='SUBHEAD' and RBEVENT='SUBHEAD';
	        UPDATE RBFIELDDETAILS SET RBFLDNAME = 'ae_finType' WHERE RBFLDNAME ='ft_finType' AND RBModule = 'SUBHEAD';
			UPDATE RBFIELDDETAILS SET RBFLDNAME = 'ae_partnerBankAcType', RBFLDDESC = 'Partner Bank Account Type' WHERE RBFLDNAME ='disb_partnerBank' AND RBModule = 'SUBHEAD';
	    </sql>
	</changeSet>
	<changeSet id="29" author="Srikanth">
		<createView viewName="MANDATES_TVIEW" replaceIfExists="true">
		SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference,T5.PcCityName
			FROM    	Mandates_Temp T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
			</createView>
	</changeSet>
	<changeSet id="30" author="Srikanth">
		<createView viewName="MANDATES_AVIEW" replaceIfExists="true">
			SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active,1 useExisting,T1.OrgReference,T5.PcCityName
			FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
		</createView>
	</changeSet>
			<changeSet id="31" author="Srikanth">
			<sql>
			Update MANDATES set AcCType ='11' where AcCType not in ('10','11');
			Update ERRORDETAILS set ErrorMessage='Multi disbursement is not allowed for this loan:{0} with loanType:{1}.' where ErrorCode='90276';
			</sql>
			</changeSet>
			<changeSet id="32" author="pruthvi">
		<addForeignKeyConstraint constraintName="FK_RMTFINTYPES_SMTDIVISIONDTL"
			referencedTableName="SMTDIVISIONDETAIL" referencedColumnNames="DIVISIONCODE"
			baseTableName="RMTFINANCETYPES" baseColumnNames="findivision" />
	</changeSet>
	<changeSet id="33" author="pruthvi">
		<dropColumn columnName="ACPRVDAYBAL" tableName="ACCOUNTS" />
		<dropColumn columnName="ACTODAYDR" tableName="ACCOUNTS" />
		<dropColumn columnName="ACTODAYCR" tableName="ACCOUNTS" />
		<dropColumn columnName="ACTODAYNET" tableName="ACCOUNTS" />
	</changeSet>
	
	
	<changeSet author="pruthvi" id="34">
		<renameColumn columnDataType="decimal(18,0)" newColumnName="SHADOWBAL"
			oldColumnName="ACACCRUALBAL" tableName="ACCOUNTS" />
				<renameColumn columnDataType="decimal(18,0)" newColumnName="ACBALANCE"
			oldColumnName="ACTODAYBAL" tableName="ACCOUNTS" />
	</changeSet>
	
	<changeSet id="35" author="pruthvi">
		<createTable tableName="AccountsHistory">
			<column name="ACCOUNTID" type="VARCHAR(50)">
			<constraints nullable="false" />
			</column>
			<column name="POSTDATE" type="DATETIME">
			<constraints nullable="false" />
			</column>
			<column name="TODAYDEBITS" type="DECIMAL(18,0)"/>
			<column name="TODAYCREDITS"  type="DECIMAL(18,0)"/>
			<column name="TODAYNET" 	type="DECIMAL(18,0)"/>
			<column name="SHADOWBAL" type="DECIMAL(18,0)"/>
			<column name="ACBALANCE" type="DECIMAL(18,0)"/>
		</createTable>
	</changeSet>
		<changeSet id="36" author="pruthvi">
		<addPrimaryKey columnNames="ACCOUNTID, POSTDATE" constraintName="pk_AccountsHistory"
			tableName="AccountsHistory" />
	</changeSet>
	
	<changeSet id="37" author="pruthvi">
		<dropColumn columnName="ACPRVDAYBAL" tableName="ACCOUNTS_TEMP" />
		<dropColumn columnName="ACTODAYDR" tableName="ACCOUNTS_TEMP" />
		<dropColumn columnName="ACTODAYCR" tableName="ACCOUNTS_TEMP" />
		<dropColumn columnName="ACTODAYNET" tableName="ACCOUNTS_TEMP" />
	</changeSet>
	
	
	<changeSet author="pruthvi" id="38">
		<renameColumn columnDataType="decimal(18,0)" newColumnName="SHADOWBAL"
			oldColumnName="ACACCRUALBAL" tableName="ACCOUNTS_TEMP" />
				<renameColumn columnDataType="decimal(18,0)" newColumnName="ACBALANCE"
			oldColumnName="ACTODAYBAL" tableName="ACCOUNTS_TEMP" />
	</changeSet>
		<changeSet id="39" author="Srikanth">
		<createView viewName="ACCOUNTS_AVIEW" replaceIfExists="true">
		SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.SHADOWBAL, T1.ACBALANCE, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      Customers.CustCIF lovDescCustCIF,  RMTBranches.BranchDesc lovDescBranchCodeName, 
                       RMTAccountTypes.AcTypeDesc lovDescAccTypeDesc
FROM          Accounts T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
				</createView>
	</changeSet>
			<changeSet id="40" author="Srikanth">
		<createView viewName="ACCOUNTS_VIEW" replaceIfExists="true">
	SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.SHADOWBAL, T1.ACBALANCE, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      Customers.CustCIF lovDescCustCIF,  RMTBranches.BranchDesc lovDescBranchCodeName, 
                       RMTAccountTypes.AcTypeDesc lovDescAccTypeDesc
FROM          Accounts T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
UNION ALL
SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.SHADOWBAL, T1.ACBALANCE, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      Customers.CustCIF lovDescCustCIF,  RMTBranches.BranchDesc lovDescBranchCodeName, 
                       RMTAccountTypes.AcTypeDesc lovDescAccTypeDesc
FROM          Accounts T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          Accounts_TEMP
                            WHERE      AccountId = T1.AccountId)
                            				</createView>
	</changeSet>
	<changeSet id="41" author="Srikanth">
		<createView viewName="GL_TRAIL_BALANCE_REPORT_VIEW" replaceIfExists="true">
	 SELECT AT.ACTYPEGRPID, A.ACCOUNTID HOSTACCOUNT, AT.ACTYPEDESC DESCRIPTION, COALESCE(T.CLOSINGBAL, 0) OPENINGBAL, COALESCE(CLOSINGBALTYPE, ' ') OPENINGBALTYPE, COALESCE(DEBITAMOUNT,0) DEBITAMOUNT, COALESCE(CREDITAMOUNT, 0) CREDITAMOUNT, 
COALESCE(A.ACBALANCE,0) CLOSINGBAL, CASE WHEN A.ACBALANCE > 0 THEN 'CR' ELSE 'DR' END CLOSINGBALTYPE
FROM (SELECT DISTINCT HKONT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE) GL
INNER JOIN ACCOUNTMAPPING AM ON AM.HOSTACCOUNT = GL.HKONT
INNER JOIN ACCOUNTS A ON A.ACCOUNTID = AM.ACCOUNT
INNER JOIN RMTACCOUNTTYPES AT ON AT.ACTYPE = A.ACTYPE
LEFT JOIN (SELECT BSCHL, HKONT, SUM(WRBTR) DEBITAMOUNT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE GROUP BY BSCHL, HKONT) DEBIT ON DEBIT.HKONT=AM.HOSTACCOUNT AND DEBIT.BSCHL = 40
LEFT JOIN (SELECT BSCHL, HKONT, SUM(WRBTR) CREDITAMOUNT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE GROUP BY BSCHL, HKONT) CREDIT ON CREDIT.HKONT=AM.HOSTACCOUNT AND CREDIT.BSCHL = 50 
LEFT JOIN (SELECT ACTYPEGRPID, HOSTACCOUNT, CLOSINGBAL, CLOSINGBALTYPE FROM SAPGL_TRAIL_BALANCE_REPORT BR
INNER JOIN (SELECT ID from SAPGL_TRAIL_BALANCE_HEADER where ID = (select MAX(ID)-1 from SAPGL_TRAIL_BALANCE_HEADER)) BH ON BH.ID = BR.HEADERID) T ON T.ACTYPEGRPID = AT.ACTYPEGRPID AND T.HOSTACCOUNT = A.ACCOUNTID
</createView>
	</changeSet>
	<changeSet id="42" author="Prasad">
		<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[Select T1.Finreference,Schdate,Particulars,Debit,Credit,ccyMinorccyunits,ccyEditField,
		 (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE') APP_DATE 
		 from ( 
			Select Finreference,Schdate, (case when Disbonschdate=1 then 'Amount Financed - Payable ('||Finreference||')' 
									     when BPIORHOLIDAY='B' then 'Broken Period Interest Receivable -Due('||Finreference||')' else 
											  'Due for Installment '||INSTNUMBER||' ('||Finreference||')' end) Particulars,
			 case when Disbonschdate=1 then 0 else Repayamount end Debit,
			 case when Disbonschdate=1 then DisbAmount else 0 end Credit
	   from finscheduledetails  
	   where (BPIORHOLIDAY!='H' or BPIORHOLIDAY is null) and 
			 schdate<=(Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE')  			 
	union 	
		Select finreference,m.lastmnton,feetypedesc ||'- Due ('||Finreference||')' ,m.ADVISEAMOUNT Debit ,0 Credit 
		from manualadvise m
		inner join FEETYPES f on f.feetypeid = m.feetypeid 		
	union	
		Select REFERENCE,VALUEDATE,(Case when PAYMENTTYPE NOT in ('EXCESS','CASH') then 'Payment Recieved vide '||PAYMENTTYPE ||' No.:'||CHEQUEACNO ||'('||REFERENCE||')'
										 when PAYMENTTYPE in ('EXCESS') then 'Amount Adjusted ('||REFERENCE||')' 
										 when PAYMENTTYPE in ('CASH') then 'Cash received Vide Receipt No.'||CHEQUEACNO ||'('||REFERENCE||')' end) Particulars,
			    Case when PAYMENTTYPE NOT in ('EXCESS') then 0  when PAYMENTTYPE in ('EXCESS') then Amount end debit,Amount credit
		from FINRECEIPTHEADER T1 inner join 
			 FINRECEIPTDETAIL T2 on T1.RECEIPTID =T2.RECEIPTID			 
	union 	
		Select finreference, FinODSchdDate, 'Penalty Due Created for Past due till date ' || FINODTILLDATE Particulars, 
		TotPenaltyAmt Debit, 0 credit
		From FinODDetails where TOtPenaltyAmt > 0 
	)T1 
	 inner join finpftdetails t2 on t2.Finreference=t1.Finreference
	 inner join RMTCURRENCIES C on C.ccycode= T2.finccy]]>
		</createView>
	</changeSet>
	<changeSet id="43" author="Prasad">
		<createView viewName="RPT_SOA_LOAN_VIEW" replaceIfExists="true">
		<![CDATA[Select FM.FinReference,FP.TotalPriSchd LoanAmount,
		   FM.RepayBaseRate PLRRate,FM.repaymargin Variance,FM.EffectiveRateOfReturn IRR,FP.CURREDUCINGRATE ROI,
		   FP.noinst Tenure,TotalPriPaid EMIReceivedPri ,TotalPftPaid EMIReceivedPft,
		   0.00 PreferredCardLimit,PRVRPYSCHPRI PrevInstAmtPri,PRVRPYSCHPFT PrevInstAmtPft,
		   FM.RepayRateBasis intRateType,FP.latestDisbDate LastDisbursalDate,
		   FP.FirstRepayDate FirstDueDate,FP.MaturityDate EndInstallmentDate,
		   '0.00/ 0' AdvInstAmt,FP.FinIsActive,FM.closingstatus,
		   FP.Futureinst FutureInstNo,FP.totalpriSchd FuturePri1,FP.tdSchdPri FuturePri2,
       FP.totalPftSchd FutureRpyPft1,FP.tdSchdPft FutureRpyPft2,
		   FP.totchargespaid Charge_coll_cust,
		   FP.UpFrontFee Upfront_int_cust,	0 Int_paid_Dealer_upfront,0 Pre_emi_Int_Paid,
		   '' Repo_Status,'' Repo_Date,'' Sale_Date,'' Release_Date,FP.LATESTRPYDATE,
       C.ccyMinorccyunits,ccyEditField
	From FinanceMain FM inner join
       FinPftDetails FP on FP.FinReference = FM.FinReference inner join
       RMTCURRENCIES C on C.ccycode= FP.finccy]]>
		</createView>
	</changeSet>
	
	<changeSet id="44" author="Prasad">
		<addColumn tableName="Postings_temp">
			<column name="APPDATE" type="datetime" />
			<column name="APPVALUEDATE" type="datetime" />
		</addColumn>
	</changeSet>
	<changeSet id="45" author="Prasad">
		<sql>
			update Postings_temp set APPDATE= POSTDATE;
			update Postings_temp set APPVALUEDATE= POSTDATE;
		</sql>
	</changeSet>
	<changeSet id="46" author="Prasad">
		<sql>
			update Postings_temp set APPDATE = (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters 
			where SYSPARMCODE='APP_DATE') where APPDATE is null;
			update Postings_temp set APPVALUEDATE = (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters 
			where SYSPARMCODE='APP_VALUEDATE') where APPVALUEDATE is null;
		</sql>
	</changeSet>
	
	<changeSet id="47" author="Prasad">
		<addNotNullConstraint tableName="Postings_temp" columnName="APPDATE" columnDataType="datetime" />
		<addNotNullConstraint tableName="Postings_temp" columnName="APPVALUEDATE" columnDataType="datetime" />
	</changeSet>
	
	<changeSet id="48" author="Prasad">
		<addColumn tableName="Postings">
			<column name="USERBRANCH" type="varchar(12)" />
		</addColumn>
		<addColumn tableName="Postings_temp">
			<column name="USERBRANCH" type="varchar(12)" />
		</addColumn>
	</changeSet>
	<changeSet id="49" author="Prasad">
		<sql>
			update Postings set USERBRANCH= (Select Branchcode from rmtBranches where rownum=1);
			update Postings_temp set USERBRANCH= (Select Branchcode from rmtBranches where rownum=1);
		</sql>
	</changeSet>
	<changeSet id="50" author="Prasad">
		<addNotNullConstraint tableName="Postings" columnName="USERBRANCH" columnDataType="varchar(12)" />
		<addNotNullConstraint tableName="Postings_temp" columnName="USERBRANCH" columnDataType="varchar(12)" />
	</changeSet>
	<changeSet id="51" author="Siva">
		<addColumn tableName="FinReceiptDetail">
			<column name="PayOrder" type="int" />
		</addColumn>
		<addColumn tableName="FinReceiptDetail_Temp">
			<column name="PayOrder" type="int" />
		</addColumn>
	</changeSet>
	<changeSet id="52" author="Siva">
		<sql>
			Update FINRECEIPTDETAIL m set m.payorder = (Select row_number() over(partition by Receiptid order by Receiptid,ReceiptSeqid)
                                        from  FINRECEIPTDETAIL t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid)
                                        where exists (select 1 from FINRECEIPTDETAIL t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid); 
		</sql>
	</changeSet>
	<changeSet id="53" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_AVIEW" replaceIfExists="true">
			  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,T3.PartnerBankCode FundingAcDesc, T1.PayOrder 
			 From FinReceiptDetail T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="54" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_TVIEW" replaceIfExists="true">
	  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,T3.PartnerBankCode FundingAcDesc , T1.PayOrder
			 From FinReceiptDetail_Temp T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
		<changeSet id="55" author="Siva">
		<sql>
			Update FINRECEIPTDETAIL_Temp m set m.payorder = (Select row_number() over(partition by Receiptid order by Receiptid,ReceiptSeqid)
                                        from  FINRECEIPTDETAIL_Temp t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid)
                                        where exists (select 1 from FINRECEIPTDETAIL_Temp t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid); 
		</sql>
	</changeSet>
	<changeSet id="56" author="Prasad">
		<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[Select T1.Finreference,Schdate,Particulars,Debit,Credit,ccyMinorccyunits,ccyEditField,
		 (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE') APP_DATE 
		 from ( 
			Select Finreference,Schdate, (case when Disbonschdate=1 then 'Amount Financed - Payable ('||Finreference||')' 
									     when BPIORHOLIDAY='B' then 'Broken Period Interest Receivable -Due('||Finreference||')' else 
											  'Due for Installment '||INSTNUMBER||' ('||Finreference||')' end) Particulars,
			 case when Disbonschdate=1 then 0 else Repayamount end Debit,
			 case when Disbonschdate=1 then DisbAmount else 0 end Credit
	   from finscheduledetails  
	   where (BPIORHOLIDAY!='H' or BPIORHOLIDAY is null) and 
			 schdate<=(Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE')  			 
	union 	
		Select finreference,m.lastmnton,feetypedesc ||'- Due ('||Finreference||')' ,m.ADVISEAMOUNT Debit ,0 Credit 
		from manualadvise m
		inner join FEETYPES f on f.feetypeid = m.feetypeid 		
	union	
		Select REFERENCE,Receiveddate,(Case when PAYMENTTYPE NOT in ('EXCESS','CASH') then 'Payment Recieved vide '||PAYMENTTYPE ||' No.:'||CHEQUEACNO ||'('||REFERENCE||')'
										 when PAYMENTTYPE in ('EXCESS') then 'Amount Adjusted ('||REFERENCE||')' 
										 when PAYMENTTYPE in ('CASH') then 'Cash received Vide Receipt No.'||CHEQUEACNO ||'('||REFERENCE||')' end) Particulars,
			    Case when PAYMENTTYPE NOT in ('EXCESS') then 0  when PAYMENTTYPE in ('EXCESS') then Amount end debit,Amount credit
		from FINRECEIPTHEADER T1 inner join 
			 FINRECEIPTDETAIL T2 on T1.RECEIPTID =T2.RECEIPTID			 
	union 	
		Select finreference, FinODSchdDate, 'Penalty Due Created for Past due till date ' || FINODTILLDATE Particulars, 
		TotPenaltyAmt Debit, 0 credit
		From FinODDetails where TOtPenaltyAmt > 0 
	)T1 
	 inner join finpftdetails t2 on t2.Finreference=t1.Finreference
	 inner join RMTCURRENCIES C on C.ccycode= T2.finccy]]>
		</createView>
	</changeSet>
	
	<changeSet id="57" author="Siva">
		<addColumn tableName="FinReceiptDetail">
			<column name="LogKey" type="bigint" />
		</addColumn>
		<addColumn tableName="FinReceiptDetail_Temp">
			<column name="LogKey" type="bigint" />
		</addColumn>
	</changeSet>
	<changeSet id="58" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_AVIEW" replaceIfExists="true">
			  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc, T1.PayOrder , T1.LogKey
			 From FinReceiptDetail T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="59" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_TVIEW" replaceIfExists="true">
	  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc , T1.PayOrder, T1.LogKey
			 From FinReceiptDetail_Temp T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="60" author="Siva">
		<sql>
	 		update FinReceiptDetail set LogKey = 0;
	 		update FinReceiptDetail_Temp set LogKey = 0;
		</sql>
	</changeSet>
		<changeSet id="62" author="Madhubabu">
	<createView viewName="BankBranches_view" replaceIfExists="true">
	    SELECT T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City,T3.PcCityName, T1.MICR, T1.IFSC,T2.BankName,T1.ECS,T1.DDA,T1.NACH,T1.DD,T1.AddOfBranch,T1.Cheque,T1.Active
						, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.AccNoLength
				FROM    	BankBranches_Temp T1 INNER JOIN
			            BMTBankDetail T2  ON T1.BankCode=T2.BankCode  LEFT JOIN
                   RMTProvinceVsCity T3 ON T3.PcCity=T1.City
                  
			               
				UNION ALL
			
		SELECT		T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City,T3.PcCityName, T1.MICR, T1.IFSC,T2.BankName, T1.ECS,t1.DDA,T1.NACH,T1.DD,T1.AddOfBranch,T1.Cheque,T1.Active
						, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.AccNoLength
				FROM    	BankBranches T1 INNER JOIN
			            BMTBankDetail T2  ON T1.BankCode=T2.BankCode LEFT JOIN
                  RMTProvinceVsCity T3 ON T3.PcCity=T1.City
				WHERE     NOT EXISTS (SELECT 1 FROM BankBranches_TEMP WHERE BankBranchID = T1.BankBranchID)
		</createView>
</changeSet>

     <changeSet id="61" author="Manojkumar.P">
		<modifyDataType tableName="MANDATE_REQUESTS" columnName="OPENFLAG"
			newDataType="VARCHAR(20)"/>
	</changeSet>
	<changeSet id="65" author="Prasad">
		<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[Select T1.Finreference,Schdate,Particulars,Debit,Credit,ccyMinorccyunits,ccyEditField,
		 (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE') APP_DATE 
		 from ( 
			Select Finreference,Schdate, (case when Disbonschdate=1 then 'Amount Financed - Payable ('||Finreference||')' 
									     when BPIORHOLIDAY='B' then 'Broken Period Interest Receivable -Due('||Finreference||')' else 
											  'Due for Installment '||INSTNUMBER||' ('||Finreference||')' end) Particulars,
			 case when Disbonschdate=1 then 0 else Repayamount end Debit,
			 case when Disbonschdate=1 then DisbAmount else 0 end Credit
	   from finscheduledetails  
	   where (BPIORHOLIDAY!='H' or BPIORHOLIDAY is null) and 
			 schdate<=(Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE')  			 
	union 	
		Select finreference,m.valuedate,feetypedesc ||'- Due ('||Finreference||')' ,m.ADVISEAMOUNT Debit ,0 Credit 
		from manualadvise m
		inner join FEETYPES f on f.feetypeid = m.feetypeid 		
	union	
		Select REFERENCE,Receiveddate,(Case when PAYMENTTYPE NOT in ('EXCESS','CASH') then 'Payment Recieved vide '||PAYMENTTYPE ||' No.:'||CHEQUEACNO ||'('||REFERENCE||')'
										 when PAYMENTTYPE in ('EXCESS') then 'Amount Adjusted ('||REFERENCE||')' 
										 when PAYMENTTYPE in ('CASH') then 'Cash received Vide Receipt No.'||CHEQUEACNO ||'('||REFERENCE||')' end) Particulars,
			    Case when PAYMENTTYPE NOT in ('EXCESS') then 0  when PAYMENTTYPE in ('EXCESS') then Amount end debit,Amount credit
		from FINRECEIPTHEADER T1 inner join 
			 FINRECEIPTDETAIL T2 on T1.RECEIPTID =T2.RECEIPTID			 
	union 	
		Select finreference, FinODSchdDate, 'Penalty Due Created for Past due till date ' || FINODTILLDATE Particulars, 
		TotPenaltyAmt Debit, 0 credit
		From FinODDetails where TOtPenaltyAmt > 0 
	)T1 
	 inner join finpftdetails t2 on t2.Finreference=t1.Finreference
	 inner join RMTCURRENCIES C on C.ccycode= T2.finccy]]>
		</createView>
	</changeSet>
	
	<changeSet id="66" author="Manojkumar.P">
		<createView viewName="MANDATES_AVIEW" replaceIfExists="true">
			SELECT	T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate, T1.InputDate FromDate, T1.InputDate ToDate,T1.Active,1 useExisting,T1.OrgReference,T5.PcCityName
			FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
		</createView>
	</changeSet>
</databaseChangeLog>