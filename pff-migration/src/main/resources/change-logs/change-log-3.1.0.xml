<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />




	<changeSet id="01" author="SreeRavali">
		<addColumn tableName="FINSCHEDULEDETAILS_Temp">
			<column name="PRESENTMENTID" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="02" author="SreeRavali">
		<addDefaultValue columnDataType="bigint" columnName="PRESENTMENTID"
			defaultValueNumeric="0" tableName="FINSCHEDULEDETAILS_Temp" />
	</changeSet>

	<changeSet id="03" author="SreeRavali">
		<addDefaultValue columnDataType="bigint" columnName="PRESENTMENTID"
			defaultValueNumeric="0" tableName="FINSCHEDULEDETAILS" />
	</changeSet>
	
<changeSet id="04" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_AVIEW" replaceIfExists="true">
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails  T1
</createView>
	</changeSet>
	
	<changeSet id="05" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_VIEW" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails_Temp  T1
UNION ALL
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails  T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference)
		
		</createView>
	</changeSet>
	<changeSet id="06" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_TVIEW" replaceIfExists="true">
	SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

				FROM         FinScheduleDetails_Temp  T1
				
		</createView>
	</changeSet>
	<changeSet id="07" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_TVIEW" replaceIfExists="true">
	SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

				FROM         FinScheduleDetails_Temp  T1
				
		</createView>
	</changeSet>
	<changeSet id="08" author="Irfan">
		<sql>
		UPDATE SECROLES SET RecordStatus = 'Approved';
		Update workflowDetails Set workflowActive = 0 WHERE WorkflowType = 'LCMUR_FIN_PROCESS';
		UPDATE bmtamountcodes SET amountcodedesc = REPLACE(amountcodedesc, 'Finance', 'Loan');
		</sql>
	</changeSet>

	<changeSet id="9" author="Siva">
		<sql>
		Update secrights set RightName = REPLACE(RightName, 'ReceiptCancellationDialog', 'ReceiptBounceDialog') where page ='ReceiptCancellationDialog';
		Update secrights set  page ='ReceiptBounceDialog' where page ='ReceiptCancellationDialog';
		</sql>
	</changeSet>
	
	<changeSet id="09" author="ManojKumar.P">
		<sql>
			UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
			UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
			UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
			UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
			UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
			UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
			UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
			
			INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menu_Category_SAPGL','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menu_Item_SAPGLFileDownloads','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'SAPGL_FILE_CONTROL','SAPGL file CONTROL.',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menu_Category_SAPGL'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menu_Item_SAPGLFileDownloads'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'SAPGL_FILE_CONTROL','SAPGL File Control.','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='SAPGL_FILE_CONTROL'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'SAPGL_FILE_CONTROL','SAPGL File Control.',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
			
			INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='SAPGL_FILE_CONTROL'), (select RoleID from SecRoles where RoleCd='SAPGL_FILE_CONTROL'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
			
			UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
			UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
			UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
			UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
			UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
			UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
			UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
		</sql>
	</changeSet>
	<changeSet id="10" author="Manojkumar.P">
	<sql>
		DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME LIKE '%menu_Category_SAPGL%');
		DELETE from SECRIGHTS where rightName = 'menu_Category_SAPGL';
		
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
		
		INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menuCat_SAPGL','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
		INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menuCat_SAPGL'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
		
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	</sql>
	</changeSet>
	<changeSet id="11" author="Madhubabu">
		<createView viewName="MANDATES_VIEW" replaceIfExists="true">
	SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference,T5.PcCityName
FROM    	Mandates_Temp T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
            
UNION ALL

SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active,1 useExisting,T1.OrgReference,T5.PcCityName
FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
			WHERE     NOT EXISTS (SELECT 1 FROM Mandates_TEMP WHERE MandateID = T1.MandateID)
		</createView>
	</changeSet>
	<changeSet id="12" author="Durga Prasad D">
	<sql>
		INSERT INTO ErrorDetails VALUES('90271','EN','E','Invalid {0} payment frequency day {1}, Allowed frequency days are: {2}.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		INSERT INTO ErrorDetails VALUES('90272','EN','E','Number of {0} terms should between configured min terms:{1} and max terms:{2} from loanType.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="13" author="Irfan">
		<addColumn tableName="ManualAdvise">
		<column name="ValueDate" type="datetime">
		</column>
		<column name="PostDate" type="datetime">
		</column>
		</addColumn>
	</changeSet>
	<changeSet id="14" author="Irfan">
		<addColumn tableName="ManualAdvise_Temp">
		<column name="ValueDate" type="datetime">
		</column>
		<column name="PostDate" type="datetime">
		</column>
		</addColumn>
	</changeSet>
	<changeSet id="15" author="Irfan">
	<createView viewName="MANUALADVISE_VIEW" replaceIfExists="true">
		 SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
             T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
              T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise_Temp  T1 
        INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
				UNION ALL
				
				SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
                   T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
                    T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise  T1 
        INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
				WHERE     NOT EXISTS (SELECT 1 FROM ManualAdvise_TEMP WHERE AdviseID = T1.AdviseID)
	
	</createView>
	</changeSet>
	<changeSet id="16" author="Irfan">
		<createView viewName="MANUALADVISE_TVIEW" replaceIfExists="true">
		SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence, 
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID, T3.BOUNCECODE
				FROM    	ManualAdvise_Temp  T1
       			LEFT JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
       			LEFT JOIN BOUNCEREASONS T3 ON T1.BounceID = T3.BOUNCEID
		</createView>
	</changeSet>
	<changeSet id="17" author="Irfan">
		<createView viewName="MANUALADVISE_AVIEW" replaceIfExists="true">
		SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise  T1
       			INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
		
		</createView>
	
	</changeSet>
	<changeSet id="18" author="Irfan">
	<sql>
	Update MANUALADVISE set ValueDate='05-MAY-17'; 
	Update MANUALADVISE set PostDate='05-MAY-17';
	Update MANUALADVISE_TEMP set ValueDate='05-MAY-17';  
	Update MANUALADVISE_TEMP set PostDate='05-MAY-17';
	</sql>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="ValueDate"/>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="PostDate"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="ValueDate"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="PostDate"/>
	</changeSet>
	<changeSet id="19" author="Siva">
		<sql>
			Update secrights SET rightname = 'menuItem_FinanceManagement_ReceiptBounce' where rightname = 'menuItem_FinanceManagement_ReceiptCancellation';
		</sql>
	</changeSet>
	<changeSet id="20" author="Irfan">
	<sql>
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'ManualAdviseDialog_ValueDate','ManualAdviseDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='ManualAdviseDialog_ValueDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
	
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	</sql>
	</changeSet>
	<changeSet id="21" author="Siva">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
					
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinanceManagement_ReceiptCancellation','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_ReceiptCancellationDialog_btnSave','ReceiptCancellationDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'RECEIPTCANCEL_MAKER', 'Receipt Cancellation Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'RECEIPTCANCEL_APPROVER', 'Receipt Cancellation Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='RECEIPTCANCEL_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='BOUNCE_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='RECEIPTCANCEL_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='BOUNCE_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
	
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_ReceiptCancellationDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_ReceiptCancellationDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
					
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
</databaseChangeLog>