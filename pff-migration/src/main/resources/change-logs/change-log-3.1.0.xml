<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />




	<changeSet id="01" author="SreeRavali">
		<addColumn tableName="FINSCHEDULEDETAILS_Temp">
			<column name="PRESENTMENTID" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="02" author="SreeRavali">
		<addDefaultValue columnDataType="bigint" columnName="PRESENTMENTID"
			defaultValueNumeric="0" tableName="FINSCHEDULEDETAILS_Temp" />
	</changeSet>

	<changeSet id="03" author="SreeRavali">
		<addDefaultValue columnDataType="bigint" columnName="PRESENTMENTID"
			defaultValueNumeric="0" tableName="FINSCHEDULEDETAILS" />
	</changeSet>
	
<changeSet id="04" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_AVIEW" replaceIfExists="true">
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails  T1
</createView>
	</changeSet>
	
	<changeSet id="05" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_VIEW" replaceIfExists="true">
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails_Temp  T1
UNION ALL
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

FROM         FinScheduleDetails  T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference)
		
		</createView>
	</changeSet>
	<changeSet id="06" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_TVIEW" replaceIfExists="true">
	SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

				FROM         FinScheduleDetails_Temp  T1
				
		</createView>
	</changeSet>
	<changeSet id="07" author="SreeRavali">
		<createView viewName="FINSCHEDULEDETAILS_TVIEW" replaceIfExists="true">
	SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate,T1.PresentmentId

				FROM         FinScheduleDetails_Temp  T1
				
		</createView>
	</changeSet>
	<changeSet id="08" author="Irfan">
		<sql>
		UPDATE SECROLES SET RecordStatus = 'Approved';
		Update workflowDetails Set workflowActive = 0 WHERE WorkflowType = 'LCMUR_FIN_PROCESS';
		UPDATE bmtamountcodes SET amountcodedesc = REPLACE(amountcodedesc, 'Finance', 'Loan');
		</sql>
	</changeSet>

	<changeSet id="9" author="Siva">
		<sql>
		Update secrights set RightName = REPLACE(RightName, 'ReceiptCancellationDialog', 'ReceiptBounceDialog') where page ='ReceiptCancellationDialog';
		Update secrights set  page ='ReceiptBounceDialog' where page ='ReceiptCancellationDialog';
		</sql>
	</changeSet>
	
	<changeSet id="09" author="ManojKumar.P">
		<sql>
			UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
			UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
			UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
			UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
			UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
			UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
			UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
			
			INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menu_Category_SAPGL','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menu_Item_SAPGLFileDownloads','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECGROUPS VALUES((SELECT MAX(GRPID)+1 FROM SECGROUPS),'SAPGL_FILE_CONTROL','SAPGL file CONTROL.',0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menu_Category_SAPGL'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menu_Item_SAPGLFileDownloads'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECROLES VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES),1,'SAPGL_FILE_CONTROL','SAPGL File Control.','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='SAPGL_FILE_CONTROL'),0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
			
			INSERT INTO SecOperations VALUES ((select MAX(OprID)+1 from SecOperations),'SAPGL_FILE_CONTROL','SAPGL File Control.',1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 );
			
			INSERT INTO SecOperationRoles values ((select MAX(OprRoleID)+1 from SecOperationRoles), (select OprID from SecOperations WHERE OprCode='SAPGL_FILE_CONTROL'), (select RoleID from SecRoles where RoleCd='SAPGL_FILE_CONTROL'),1,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0);
			
			UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
			UPDATE SeqSecGroups SET SeqNo = (SELECT MAX(GrpID) FROM SecGroups);
			UPDATE SeqSecRoles SET SeqNo = (SELECT MAX(RoleID) FROM SecRoles);
			UPDATE SeqSecOperations SET SeqNo = (SELECT MAX(OprID) FROM SecOperations);
			UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
			UPDATE SeqSecRoleGroups SET SeqNo = (SELECT MAX(RoleGrpID) FROM SecRoleGroups);
			UPDATE SeqSecOperationRoles SET SeqNo = (SELECT MAX(OprRoleID) FROM SecOperationRoles);
		</sql>
	</changeSet>
	<changeSet id="10" author="Manojkumar.P">
	<sql>
		DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME LIKE '%menu_Category_SAPGL%');
		DELETE from SECRIGHTS where rightName = 'menu_Category_SAPGL';
		
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
		
		INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID) + 1 FROM SECRIGHTS) , 0, 'menuCat_SAPGL','FileDBInterface',1,1000,CURRENT_TIMESTAMP,'','','','','','',0);
		INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID) +1  FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE ='SAPGL_FILE_CONTROL'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME ='menuCat_SAPGL'), 1,0,1000,CURRENT_TIMESTAMP,'','','','','','',0);
		
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	</sql>
	</changeSet>
	<changeSet id="11" author="Madhubabu">
		<createView viewName="MANDATES_VIEW" replaceIfExists="true">
	SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference,T5.PcCityName
FROM    	Mandates_Temp T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
            
UNION ALL

SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active,1 useExisting,T1.OrgReference,T5.PcCityName
FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
			WHERE     NOT EXISTS (SELECT 1 FROM Mandates_TEMP WHERE MandateID = T1.MandateID)
		</createView>
	</changeSet>
	<changeSet id="12" author="Durga Prasad D">
	<sql>
		INSERT INTO ErrorDetails VALUES('90271','EN','E','Invalid {0} payment frequency day {1}, Allowed frequency days are: {2}.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		INSERT INTO ErrorDetails VALUES('90272','EN','E','Number of {0} terms should between configured min terms:{1} and max terms:{2} from loanType.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="13" author="Irfan">
		<addColumn tableName="ManualAdvise">
		<column name="ValueDate" type="datetime">
		</column>
		<column name="PostDate" type="datetime">
		</column>
		</addColumn>
	</changeSet>
	<changeSet id="14" author="Irfan">
		<addColumn tableName="ManualAdvise_Temp">
		<column name="ValueDate" type="datetime">
		</column>
		<column name="PostDate" type="datetime">
		</column>
		</addColumn>
	</changeSet>
	<changeSet id="15" author="Irfan">
	<createView viewName="MANUALADVISE_VIEW" replaceIfExists="true">
		 SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
             T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
              T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise_Temp  T1 
        INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
				UNION ALL
				
				SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
                   T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
                    T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise  T1 
        INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
				WHERE     NOT EXISTS (SELECT 1 FROM ManualAdvise_TEMP WHERE AdviseID = T1.AdviseID)
	
	</createView>
	</changeSet>
	<changeSet id="16" author="Irfan">
		<createView viewName="MANUALADVISE_TVIEW" replaceIfExists="true">
		SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence, 
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID, T3.BOUNCECODE
				FROM    	ManualAdvise_Temp  T1
       			LEFT JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
       			LEFT JOIN BOUNCEREASONS T3 ON T1.BounceID = T3.BOUNCEID
		</createView>
	</changeSet>
	<changeSet id="17" author="Irfan">
		<createView viewName="MANUALADVISE_AVIEW" replaceIfExists="true">
		SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID
				FROM    	ManualAdvise  T1
       			INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
		
		</createView>
	
	</changeSet>
	<changeSet id="18" author="Irfan" dbms="mssql">
	<sql>
	Update MANUALADVISE set ValueDate='05-MAY-17'; 
	Update MANUALADVISE set PostDate='05-MAY-17';
	Update MANUALADVISE_TEMP set ValueDate='05-MAY-17';  
	Update MANUALADVISE_TEMP set PostDate='05-MAY-17';
	</sql>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="ValueDate" columnDataType="datetime"/>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="PostDate" columnDataType="datetime"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="ValueDate" columnDataType="datetime"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="PostDate" columnDataType="datetime"/>
	</changeSet>
	<changeSet id="18" author="Irfan" dbms="oracle">
	<sql>
	Update MANUALADVISE set ValueDate='05-MAY-17'; 
	Update MANUALADVISE set PostDate='05-MAY-17';
	Update MANUALADVISE_TEMP set ValueDate='05-MAY-17';  
	Update MANUALADVISE_TEMP set PostDate='05-MAY-17';
	</sql>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="ValueDate"/>
	<addNotNullConstraint tableName="MANUALADVISE" columnName="PostDate"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="ValueDate"/>
	<addNotNullConstraint tableName="MANUALADVISE_TEMP" columnName="PostDate"/>
	</changeSet>
	<changeSet id="19" author="Siva">
		<sql>
			Update secrights SET rightname = 'menuItem_FinanceManagement_ReceiptBounce' where rightname = 'menuItem_FinanceManagement_ReceiptCancellation';
		</sql>
	</changeSet>
	<changeSet id="20" author="Irfan">
	<sql>
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'ManualAdviseDialog_ValueDate','ManualAdviseDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='ManualAdviseDialog_ValueDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
	
		UPDATE SeqSecRights SET SeqNo = (SELECT MAX(RightID) FROM SecRights);
		UPDATE SeqSecGroupRights SET SeqNo = (SELECT MAX(GrpRightID) FROM SecGroupRights);
	</sql>
	</changeSet>
	<changeSet id="21" author="Siva">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
					
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinanceManagement_ReceiptCancellation','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_ReceiptCancellationDialog_btnSave','ReceiptCancellationDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'RECEIPTCANCEL_MAKER', 'Receipt Cancellation Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'RECEIPTCANCEL_APPROVER', 'Receipt Cancellation Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
	
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='RECEIPTCANCEL_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='BOUNCE_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='RECEIPTCANCEL_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='BOUNCE_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
	
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_ReceiptCancellation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_ReceiptCancellationDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RECEIPTCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_ReceiptCancellationDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
					
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
	<changeSet id="22" author="Irfan">
	<sql>
	Update MANUALADVISE set ValueDate=CURRENT_TIMESTAMP; 
	Update MANUALADVISE set PostDate=CURRENT_TIMESTAMP;
	Update MANUALADVISE_TEMP set ValueDate=CURRENT_TIMESTAMP;  
	Update MANUALADVISE_TEMP set PostDate=CURRENT_TIMESTAMP;
	</sql>
	</changeSet>
	<changeSet id="23" author="Srikanth">
	<sql>
	INSERT INTO ErrorDetails VALUES('90273','EN','E','Duplicate {0} are not allowed.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90270','EN','E','{0} must contain at least one {1} with Very High priority i.e 1.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90274','EN','E','planEMIHLockPeriod enabled,so Plan EMI Holiday are not allowed for this holidayDate{0}','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90275','EN','E','DataType mismatch, Invalid data for extendedDetails.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="24" author="DDP">
	<sql>
	INSERT INTO ErrorDetails VALUES('90276','EN','E','Multi disbursement is not allowed for this loan:{0} with loanType:(1).','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	INSERT INTO ErrorDetails VALUES('90277','EN','E','{0} should be equal to {1}.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
	</sql>
	</changeSet>
	<changeSet id="26" author="Pradeep">
	<sql>
	Update FINSCHEDULEDETAILS_Temp set PRESENTMENTID = 0;
	Update FINSCHEDULEDETAILS set PRESENTMENTID = 0;
	</sql>
	</changeSet>
	
	<changeSet id="27" author="Manojkumar.P">
	    <createTable tableName="MANDATE_REQUESTS">			
			<column name="ID"  	type="bigint" autoIncrement="true" incrementBy="1">
			  <constraints primaryKey="true"  nullable="false" />
			 </column>
			<column name="BATCH_ID" 			type="bigint"/>
			<column name="MANDATEID" 			type="bigint"/>
			<column name="BANK_SEQ" 			type="VARCHAR(20)"/>
			<column name="BANK_CODE" 			type="VARCHAR(8)"/>
			<column name="BANK_NAME" 			type="VARCHAR(50)"/>
			<column name="BRANCH_NAME" 			type="VARCHAR(200)"/>
			<column name="CUSTCIF" 				type="VARCHAR(20)"/>
			<column name="CUSTOMER_NAME" 		type="VARCHAR(200)"/>
			<column name="FINTYPE" 				type="VARCHAR(8)"/>
			<column name="FINREFERENCE" 		type="VARCHAR(20)"/>
			<column name="EMI" 					type="VARCHAR(200)"/>
			<column name="OPENFLAG" 			type="VARCHAR(10)"/>
			<column name="ACCT_NUMBER" 			type="VARCHAR(50)"/>
			<column name="ACCT_TYPE" 			type="VARCHAR(20)"/>
			<column name="ACCT_HOLDER_NAME" 	type="VARCHAR(50)"/>
			<column name="MICR_CODE" 			type="VARCHAR(20)"/>
			<column name="EXTRACTION_DATE" 		type="datetime"/>
			<column name="EFFECTIVE_DATE" 		type="datetime"/>
			<column name="EMI_ENDDATE" 			type="datetime"/>
			<column name="OPEN_ENDDATE" 		type="datetime"/>
			<column name="UPPER_LIMIT" 			type="VARCHAR(200)"/>
			<column name="DEBIT_AMOUNT" 		type="VARCHAR(200)"/>
			<column name="START_DATE" 			type="datetime"/>
			<column name="END_DATE" 			type="datetime"/>
			<column name="APPLICATION_NUMBER" 	type="VARCHAR(200)"/>
			<column name="MANDATE_TYPE" 		type="VARCHAR(20)"/>
			<column name="MANDATE_REG_NO" 		type="VARCHAR(25)"/>
			<column name="RESP_BATCH_ID" 		type="bigint"/>
			<column name="STATUS" 				type="VARCHAR(50)"/>
			<column name="REMARKS" 				type="VARCHAR(500)"/>
			<column name="REJECT_REASON" 		type="VARCHAR(100)"/>
		</createTable>
	</changeSet>
	<changeSet id="28" author="Jayant">
	    <sql>
	        delete from RBFIELDDETAILS where RBFLDNAME = 'ae_partnerBankAcType' and RBMODULE='SUBHEAD' and RBEVENT='SUBHEAD';
	        UPDATE RBFIELDDETAILS SET RBFLDNAME = 'ae_finType' WHERE RBFLDNAME ='ft_finType' AND RBModule = 'SUBHEAD';
			UPDATE RBFIELDDETAILS SET RBFLDNAME = 'ae_partnerBankAcType', RBFLDDESC = 'Partner Bank Account Type' WHERE RBFLDNAME ='disb_partnerBank' AND RBModule = 'SUBHEAD';
	    </sql>
	</changeSet>
	<changeSet id="29" author="Srikanth">
		<createView viewName="MANDATES_TVIEW" replaceIfExists="true">
		SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active, 0 useExisting,T1.OrgReference,T5.PcCityName
			FROM    	Mandates_Temp T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
			</createView>
	</changeSet>
	<changeSet id="30" author="Srikanth">
		<createView viewName="MANDATES_AVIEW" replaceIfExists="true">
			SELECT		T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate,T1.Active,1 useExisting,T1.OrgReference,T5.PcCityName
			FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
		</createView>
	</changeSet>
			<changeSet id="31" author="Srikanth">
			<sql>
			Update MANDATES set AcCType ='11' where AcCType not in ('10','11');
			Update ERRORDETAILS set ErrorMessage='Multi disbursement is not allowed for this loan:{0} with loanType:{1}.' where ErrorCode='90276';
			</sql>
			</changeSet>
			<changeSet id="32" author="pruthvi">
		<addForeignKeyConstraint constraintName="FK_RMTFINTYPES_SMTDIVISIONDTL"
			referencedTableName="SMTDIVISIONDETAIL" referencedColumnNames="DIVISIONCODE"
			baseTableName="RMTFINANCETYPES" baseColumnNames="findivision" />
	</changeSet>
	<changeSet id="33" author="pruthvi">
		<dropColumn columnName="ACPRVDAYBAL" tableName="ACCOUNTS" />
		<dropColumn columnName="ACTODAYDR" tableName="ACCOUNTS" />
		<dropColumn columnName="ACTODAYCR" tableName="ACCOUNTS" />
		<dropColumn columnName="ACTODAYNET" tableName="ACCOUNTS" />
	</changeSet>
	
	
	<changeSet author="pruthvi" id="34">
		<renameColumn columnDataType="decimal(18,0)" newColumnName="SHADOWBAL"
			oldColumnName="ACACCRUALBAL" tableName="ACCOUNTS" />
				<renameColumn columnDataType="decimal(18,0)" newColumnName="ACBALANCE"
			oldColumnName="ACTODAYBAL" tableName="ACCOUNTS" />
	</changeSet>
	
	<changeSet id="35" author="pruthvi">
		<createTable tableName="AccountsHistory">
			<column name="ACCOUNTID" type="VARCHAR(50)">
			<constraints nullable="false" />
			</column>
			<column name="POSTDATE" type="DATETIME">
			<constraints nullable="false" />
			</column>
			<column name="TODAYDEBITS" type="DECIMAL(18,0)"/>
			<column name="TODAYCREDITS"  type="DECIMAL(18,0)"/>
			<column name="TODAYNET" 	type="DECIMAL(18,0)"/>
			<column name="SHADOWBAL" type="DECIMAL(18,0)"/>
			<column name="ACBALANCE" type="DECIMAL(18,0)"/>
		</createTable>
	</changeSet>
		<changeSet id="36" author="pruthvi">
		<addPrimaryKey columnNames="ACCOUNTID, POSTDATE" constraintName="pk_AccountsHistory"
			tableName="AccountsHistory" />
	</changeSet>
	
	<changeSet id="37" author="pruthvi">
		<dropColumn columnName="ACPRVDAYBAL" tableName="ACCOUNTS_TEMP" />
		<dropColumn columnName="ACTODAYDR" tableName="ACCOUNTS_TEMP" />
		<dropColumn columnName="ACTODAYCR" tableName="ACCOUNTS_TEMP" />
		<dropColumn columnName="ACTODAYNET" tableName="ACCOUNTS_TEMP" />
	</changeSet>
	
	
	<changeSet author="pruthvi" id="38">
		<renameColumn columnDataType="decimal(18,0)" newColumnName="SHADOWBAL"
			oldColumnName="ACACCRUALBAL" tableName="ACCOUNTS_TEMP" />
				<renameColumn columnDataType="decimal(18,0)" newColumnName="ACBALANCE"
			oldColumnName="ACTODAYBAL" tableName="ACCOUNTS_TEMP" />
	</changeSet>
		<changeSet id="39" author="Srikanth">
		<createView viewName="ACCOUNTS_AVIEW" replaceIfExists="true">
		SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.SHADOWBAL, T1.ACBALANCE, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      Customers.CustCIF lovDescCustCIF,  RMTBranches.BranchDesc lovDescBranchCodeName, 
                       RMTAccountTypes.AcTypeDesc lovDescAccTypeDesc
FROM          Accounts T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
				</createView>
	</changeSet>
			<changeSet id="40" author="Srikanth">
		<createView viewName="ACCOUNTS_VIEW" replaceIfExists="true">
	SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.SHADOWBAL, T1.ACBALANCE, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      Customers.CustCIF lovDescCustCIF,  RMTBranches.BranchDesc lovDescBranchCodeName, 
                       RMTAccountTypes.AcTypeDesc lovDescAccTypeDesc
FROM          Accounts T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
UNION ALL
SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.SHADOWBAL, T1.ACBALANCE, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      Customers.CustCIF lovDescCustCIF,  RMTBranches.BranchDesc lovDescBranchCodeName, 
                       RMTAccountTypes.AcTypeDesc lovDescAccTypeDesc
FROM          Accounts T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          Accounts_TEMP
                            WHERE      AccountId = T1.AccountId)
                            				</createView>
	</changeSet>
	<changeSet id="41" author="Srikanth">
		<createView viewName="GL_TRAIL_BALANCE_REPORT_VIEW" replaceIfExists="true">
	 SELECT AT.ACTYPEGRPID, A.ACCOUNTID HOSTACCOUNT, AT.ACTYPEDESC DESCRIPTION, COALESCE(T.CLOSINGBAL, 0) OPENINGBAL, COALESCE(CLOSINGBALTYPE, ' ') OPENINGBALTYPE, COALESCE(DEBITAMOUNT,0) DEBITAMOUNT, COALESCE(CREDITAMOUNT, 0) CREDITAMOUNT, 
COALESCE(A.ACBALANCE,0) CLOSINGBAL, CASE WHEN A.ACBALANCE > 0 THEN 'CR' ELSE 'DR' END CLOSINGBALTYPE
FROM (SELECT DISTINCT HKONT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE) GL
INNER JOIN ACCOUNTMAPPING AM ON AM.HOSTACCOUNT = GL.HKONT
INNER JOIN ACCOUNTS A ON A.ACCOUNTID = AM.ACCOUNT
INNER JOIN RMTACCOUNTTYPES AT ON AT.ACTYPE = A.ACTYPE
LEFT JOIN (SELECT BSCHL, HKONT, SUM(WRBTR) DEBITAMOUNT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE GROUP BY BSCHL, HKONT) DEBIT ON DEBIT.HKONT=AM.HOSTACCOUNT AND DEBIT.BSCHL = 40
LEFT JOIN (SELECT BSCHL, HKONT, SUM(WRBTR) CREDITAMOUNT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE GROUP BY BSCHL, HKONT) CREDIT ON CREDIT.HKONT=AM.HOSTACCOUNT AND CREDIT.BSCHL = 50 
LEFT JOIN (SELECT ACTYPEGRPID, HOSTACCOUNT, CLOSINGBAL, CLOSINGBALTYPE FROM SAPGL_TRAIL_BALANCE_REPORT BR
INNER JOIN (SELECT ID from SAPGL_TRAIL_BALANCE_HEADER where ID = (select MAX(ID)-1 from SAPGL_TRAIL_BALANCE_HEADER)) BH ON BH.ID = BR.HEADERID) T ON T.ACTYPEGRPID = AT.ACTYPEGRPID AND T.HOSTACCOUNT = A.ACCOUNTID
</createView>
	</changeSet>
	<changeSet id="42" author="Prasad">
		<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[Select T1.Finreference,Schdate,Particulars,Debit,Credit,ccyMinorccyunits,ccyEditField,
		 (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE') APP_DATE 
		 from ( 
			Select Finreference,Schdate, (case when Disbonschdate=1 then 'Amount Financed - Payable ('||Finreference||')' 
									     when BPIORHOLIDAY='B' then 'Broken Period Interest Receivable -Due('||Finreference||')' else 
											  'Due for Installment '||INSTNUMBER||' ('||Finreference||')' end) Particulars,
			 case when Disbonschdate=1 then 0 else Repayamount end Debit,
			 case when Disbonschdate=1 then DisbAmount else 0 end Credit
	   from finscheduledetails  
	   where (BPIORHOLIDAY!='H' or BPIORHOLIDAY is null) and 
			 schdate<=(Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE')  			 
	union 	
		Select finreference,m.lastmnton,feetypedesc ||'- Due ('||Finreference||')' ,m.ADVISEAMOUNT Debit ,0 Credit 
		from manualadvise m
		inner join FEETYPES f on f.feetypeid = m.feetypeid 		
	union	
		Select REFERENCE,VALUEDATE,(Case when PAYMENTTYPE NOT in ('EXCESS','CASH') then 'Payment Recieved vide '||PAYMENTTYPE ||' No.:'||CHEQUEACNO ||'('||REFERENCE||')'
										 when PAYMENTTYPE in ('EXCESS') then 'Amount Adjusted ('||REFERENCE||')' 
										 when PAYMENTTYPE in ('CASH') then 'Cash received Vide Receipt No.'||CHEQUEACNO ||'('||REFERENCE||')' end) Particulars,
			    Case when PAYMENTTYPE NOT in ('EXCESS') then 0  when PAYMENTTYPE in ('EXCESS') then Amount end debit,Amount credit
		from FINRECEIPTHEADER T1 inner join 
			 FINRECEIPTDETAIL T2 on T1.RECEIPTID =T2.RECEIPTID			 
	union 	
		Select finreference, FinODSchdDate, 'Penalty Due Created for Past due till date ' || FINODTILLDATE Particulars, 
		TotPenaltyAmt Debit, 0 credit
		From FinODDetails where TOtPenaltyAmt > 0 
	)T1 
	 inner join finpftdetails t2 on t2.Finreference=t1.Finreference
	 inner join RMTCURRENCIES C on C.ccycode= T2.finccy]]>
		</createView>
	</changeSet>
	<changeSet id="43" author="Prasad">
		<createView viewName="RPT_SOA_LOAN_VIEW" replaceIfExists="true">
		<![CDATA[Select FM.FinReference,FP.TotalPriSchd LoanAmount,
		   FM.RepayBaseRate PLRRate,FM.repaymargin Variance,FM.EffectiveRateOfReturn IRR,FP.CURREDUCINGRATE ROI,
		   FP.noinst Tenure,TotalPriPaid EMIReceivedPri ,TotalPftPaid EMIReceivedPft,
		   0.00 PreferredCardLimit,PRVRPYSCHPRI PrevInstAmtPri,PRVRPYSCHPFT PrevInstAmtPft,
		   FM.RepayRateBasis intRateType,FP.latestDisbDate LastDisbursalDate,
		   FP.FirstRepayDate FirstDueDate,FP.MaturityDate EndInstallmentDate,
		   '0.00/ 0' AdvInstAmt,FP.FinIsActive,FM.closingstatus,
		   FP.Futureinst FutureInstNo,FP.totalpriSchd FuturePri1,FP.tdSchdPri FuturePri2,
       FP.totalPftSchd FutureRpyPft1,FP.tdSchdPft FutureRpyPft2,
		   FP.totchargespaid Charge_coll_cust,
		   FP.UpFrontFee Upfront_int_cust,	0 Int_paid_Dealer_upfront,0 Pre_emi_Int_Paid,
		   '' Repo_Status,'' Repo_Date,'' Sale_Date,'' Release_Date,FP.LATESTRPYDATE,
       C.ccyMinorccyunits,ccyEditField
	From FinanceMain FM inner join
       FinPftDetails FP on FP.FinReference = FM.FinReference inner join
       RMTCURRENCIES C on C.ccycode= FP.finccy]]>
		</createView>
	</changeSet>
	
	<changeSet id="44" author="Prasad">
		<addColumn tableName="Postings_temp">
			<column name="APPDATE" type="datetime" />
			<column name="APPVALUEDATE" type="datetime" />
		</addColumn>
	</changeSet>
	<changeSet id="45" author="Prasad">
		<sql>
			update Postings_temp set APPDATE= POSTDATE;
			update Postings_temp set APPVALUEDATE= POSTDATE;
		</sql>
	</changeSet>
	<changeSet id="46" author="Prasad">
		<sql>
			update Postings_temp set APPDATE = (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters 
			where SYSPARMCODE='APP_DATE') where APPDATE is null;
			update Postings_temp set APPVALUEDATE = (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters 
			where SYSPARMCODE='APP_VALUEDATE') where APPVALUEDATE is null;
		</sql>
	</changeSet>
	
	<changeSet id="47" author="Prasad">
		<addNotNullConstraint tableName="Postings_temp" columnName="APPDATE" columnDataType="datetime" />
		<addNotNullConstraint tableName="Postings_temp" columnName="APPVALUEDATE" columnDataType="datetime" />
	</changeSet>
	
	<changeSet id="48" author="Prasad">
		<addColumn tableName="Postings">
			<column name="USERBRANCH" type="varchar(12)" />
		</addColumn>
		<addColumn tableName="Postings_temp">
			<column name="USERBRANCH" type="varchar(12)" />
		</addColumn>
	</changeSet>
	<changeSet id="49" author="Prasad">
		<sql>
			update Postings set USERBRANCH= (Select Branchcode from rmtBranches where rownum=1);
			update Postings_temp set USERBRANCH= (Select Branchcode from rmtBranches where rownum=1);
		</sql>
	</changeSet>
	<changeSet id="50" author="Prasad">
		<addNotNullConstraint tableName="Postings" columnName="USERBRANCH" columnDataType="varchar(12)" />
		<addNotNullConstraint tableName="Postings_temp" columnName="USERBRANCH" columnDataType="varchar(12)" />
	</changeSet>
	<changeSet id="51" author="Siva">
		<addColumn tableName="FinReceiptDetail">
			<column name="PayOrder" type="int" />
		</addColumn>
		<addColumn tableName="FinReceiptDetail_Temp">
			<column name="PayOrder" type="int" />
		</addColumn>
	</changeSet>
	<changeSet id="52" author="Siva">
		<sql>
			Update FINRECEIPTDETAIL m set m.payorder = (Select row_number() over(partition by Receiptid order by Receiptid,ReceiptSeqid)
                                        from  FINRECEIPTDETAIL t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid)
                                        where exists (select 1 from FINRECEIPTDETAIL t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid); 
		</sql>
	</changeSet>
	<changeSet id="53" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_AVIEW" replaceIfExists="true">
			  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,T3.PartnerBankCode FundingAcDesc, T1.PayOrder 
			 From FinReceiptDetail T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="54" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_TVIEW" replaceIfExists="true">
	  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,T3.PartnerBankCode FundingAcDesc , T1.PayOrder
			 From FinReceiptDetail_Temp T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
		<changeSet id="55" author="Siva">
		<sql>
			Update FINRECEIPTDETAIL_Temp m set m.payorder = (Select row_number() over(partition by Receiptid order by Receiptid,ReceiptSeqid)
                                        from  FINRECEIPTDETAIL_Temp t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid)
                                        where exists (select 1 from FINRECEIPTDETAIL_Temp t where m.Receiptid = t.Receiptid and m.ReceiptSeqid = t.ReceiptSeqid); 
		</sql>
	</changeSet>
	<changeSet id="56" author="Prasad">
		<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[Select T1.Finreference,Schdate,Particulars,Debit,Credit,ccyMinorccyunits,ccyEditField,
		 (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE') APP_DATE 
		 from ( 
			Select Finreference,Schdate, (case when Disbonschdate=1 then 'Amount Financed - Payable ('||Finreference||')' 
									     when BPIORHOLIDAY='B' then 'Broken Period Interest Receivable -Due('||Finreference||')' else 
											  'Due for Installment '||INSTNUMBER||' ('||Finreference||')' end) Particulars,
			 case when Disbonschdate=1 then 0 else Repayamount end Debit,
			 case when Disbonschdate=1 then DisbAmount else 0 end Credit
	   from finscheduledetails  
	   where (BPIORHOLIDAY!='H' or BPIORHOLIDAY is null) and 
			 schdate<=(Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE')  			 
	union 	
		Select finreference,m.lastmnton,feetypedesc ||'- Due ('||Finreference||')' ,m.ADVISEAMOUNT Debit ,0 Credit 
		from manualadvise m
		inner join FEETYPES f on f.feetypeid = m.feetypeid 		
	union	
		Select REFERENCE,Receiveddate,(Case when PAYMENTTYPE NOT in ('EXCESS','CASH') then 'Payment Recieved vide '||PAYMENTTYPE ||' No.:'||CHEQUEACNO ||'('||REFERENCE||')'
										 when PAYMENTTYPE in ('EXCESS') then 'Amount Adjusted ('||REFERENCE||')' 
										 when PAYMENTTYPE in ('CASH') then 'Cash received Vide Receipt No.'||CHEQUEACNO ||'('||REFERENCE||')' end) Particulars,
			    Case when PAYMENTTYPE NOT in ('EXCESS') then 0  when PAYMENTTYPE in ('EXCESS') then Amount end debit,Amount credit
		from FINRECEIPTHEADER T1 inner join 
			 FINRECEIPTDETAIL T2 on T1.RECEIPTID =T2.RECEIPTID			 
	union 	
		Select finreference, FinODSchdDate, 'Penalty Due Created for Past due till date ' || FINODTILLDATE Particulars, 
		TotPenaltyAmt Debit, 0 credit
		From FinODDetails where TOtPenaltyAmt > 0 
	)T1 
	 inner join finpftdetails t2 on t2.Finreference=t1.Finreference
	 inner join RMTCURRENCIES C on C.ccycode= T2.finccy]]>
		</createView>
	</changeSet>
	
	<changeSet id="57" author="Siva">
		<addColumn tableName="FinReceiptDetail">
			<column name="LogKey" type="bigint" />
		</addColumn>
		<addColumn tableName="FinReceiptDetail_Temp">
			<column name="LogKey" type="bigint" />
		</addColumn>
	</changeSet>
	<changeSet id="58" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_AVIEW" replaceIfExists="true">
			  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc, T1.PayOrder , T1.LogKey
			 From FinReceiptDetail T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="59" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_TVIEW" replaceIfExists="true">
	  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc , T1.PayOrder, T1.LogKey
			 From FinReceiptDetail_Temp T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="60" author="Siva">
		<sql>
	 		update FinReceiptDetail set LogKey = 0;
	 		update FinReceiptDetail_Temp set LogKey = 0;
		</sql>
	</changeSet>
	 <changeSet id="61" author="Manojkumar.P">
		<modifyDataType tableName="MANDATE_REQUESTS" columnName="OPENFLAG"
			newDataType="VARCHAR(20)"/>
	</changeSet>
		<changeSet id="62" author="Madhubabu">
	<createView viewName="BankBranches_view" replaceIfExists="true">
	    SELECT T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City,T3.PcCityName, T1.MICR, T1.IFSC,T2.BankName,T1.ECS,T1.DDA,T1.NACH,T1.DD,T1.AddOfBranch,T1.Cheque,T1.Active
						, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.AccNoLength
				FROM    	BankBranches_Temp T1 INNER JOIN
			            BMTBankDetail T2  ON T1.BankCode=T2.BankCode  LEFT JOIN
                   RMTProvinceVsCity T3 ON T3.PcCity=T1.City
                  
			               
				UNION ALL
			
		SELECT		T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City,T3.PcCityName, T1.MICR, T1.IFSC,T2.BankName, T1.ECS,t1.DDA,T1.NACH,T1.DD,T1.AddOfBranch,T1.Cheque,T1.Active
						, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.AccNoLength
				FROM    	BankBranches T1 INNER JOIN
			            BMTBankDetail T2  ON T1.BankCode=T2.BankCode LEFT JOIN
                  RMTProvinceVsCity T3 ON T3.PcCity=T1.City
				WHERE     NOT EXISTS (SELECT 1 FROM BankBranches_TEMP WHERE BankBranchID = T1.BankBranchID)
		</createView>
</changeSet>
	<changeSet id="63" author="Siva">
		<addColumn tableName="FinReceiptHeader">
			<column name="RealizationDate" type="datetime" />
		</addColumn>
		<addColumn tableName="FinReceiptHeader_Temp">
			<column name="RealizationDate" type="datetime" />
		</addColumn>
	</changeSet>
	<changeSet id="64" author="Siva">
		<createView viewName="FINRECEIPTHEADER_VIEW" replaceIfExists="true">
		     SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate
							FROM         FinReceiptHeader_Temp T1 INNER JOIN
				       FinanceMain T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId
				UNION ALL
				 SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate
						FROM         FinReceiptHeader T1 INNER JOIN
				       FinanceMain T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId
						WHERE     NOT EXISTS
				                          (SELECT     1
				                            FROM          FinReceiptHeader_TEMP 
				                            WHERE      ReceiptID = T1.ReceiptID)
		</createView>
	</changeSet>
	
	<changeSet id="65" author="Prasad">
		<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[Select T1.Finreference,Schdate,Particulars,Debit,Credit,ccyMinorccyunits,ccyEditField,
		 (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE') APP_DATE 
		 from ( 
			Select Finreference,Schdate, (case when Disbonschdate=1 then 'Amount Financed - Payable ('||Finreference||')' 
									     when BPIORHOLIDAY='B' then 'Broken Period Interest Receivable -Due('||Finreference||')' else 
											  'Due for Installment '||INSTNUMBER||' ('||Finreference||')' end) Particulars,
			 case when Disbonschdate=1 then 0 else Repayamount end Debit,
			 case when Disbonschdate=1 then DisbAmount else 0 end Credit
	   from finscheduledetails  
	   where (BPIORHOLIDAY!='H' or BPIORHOLIDAY is null) and 
			 schdate<=(Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE')  			 
	union 	
		Select finreference,m.valuedate,feetypedesc ||'- Due ('||Finreference||')' ,m.ADVISEAMOUNT Debit ,0 Credit 
		from manualadvise m
		inner join FEETYPES f on f.feetypeid = m.feetypeid 		
	union	
		Select REFERENCE,Receiveddate,(Case when PAYMENTTYPE NOT in ('EXCESS','CASH') then 'Payment Recieved vide '||PAYMENTTYPE ||' No.:'||CHEQUEACNO ||'('||REFERENCE||')'
										 when PAYMENTTYPE in ('EXCESS') then 'Amount Adjusted ('||REFERENCE||')' 
										 when PAYMENTTYPE in ('CASH') then 'Cash received Vide Receipt No.'||CHEQUEACNO ||'('||REFERENCE||')' end) Particulars,
			    Case when PAYMENTTYPE NOT in ('EXCESS') then 0  when PAYMENTTYPE in ('EXCESS') then Amount end debit,Amount credit
		from FINRECEIPTHEADER T1 inner join 
			 FINRECEIPTDETAIL T2 on T1.RECEIPTID =T2.RECEIPTID			 
	union 	
		Select finreference, FinODSchdDate, 'Penalty Due Created for Past due till date ' || FINODTILLDATE Particulars, 
		TotPenaltyAmt Debit, 0 credit
		From FinODDetails where TOtPenaltyAmt > 0 
	)T1 
	 inner join finpftdetails t2 on t2.Finreference=t1.Finreference
	 inner join RMTCURRENCIES C on C.ccycode= T2.finccy]]>
		</createView>
	</changeSet>
	
	<changeSet id="66" author="Manojkumar.P">
		<createView viewName="MANDATES_AVIEW" replaceIfExists="true">
			SELECT	T1.MandateID, T1.CustID,   T1.MandateRef, T1.MandateType,T1.BankBranchID, T1.AccNumber, T1.AccHolderName,
			T1.JointAccHolderName, T1.AccType, T1.OpenMandate, T1.StartDate, T1.ExpiryDate, T1.MaxLimit,
			T1.Periodicity, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Status, T1.ApprovalID		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.Reason,T1.MandateCcy,T2.CustCIF,T2.CustShrtName, T3.BankCode, T3.BranchCode,T3.BranchDesc,T3.MICR,
			 T3.IFSC, T3.City, T4.BankName, T1.InputDate, T1.InputDate FromDate, T1.InputDate ToDate,T1.Active,1 useExisting,T1.OrgReference,T5.PcCityName
			FROM    	Mandates T1 INNER JOIN
			Customers T2  ON T1.CustID = T2.CustID LEFT OUTER JOIN 
			BankBranches T3 ON T1.BankBranchID = T3.BankBranchID  LEFT OUTER JOIN
			BMTBankDetail T4  ON T3.BankCode=T4.BankCode LEFT OUTER JOIN
			RMTProvincevsCity T5 ON T3.city=T5.PCCity
		</createView>
	</changeSet>
	<changeSet id="67" author="Siva">
		<sql>
		    UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'ReceiptRealizationDialog_realizationDate','ReceiptRealizationDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='REALIZATION_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='ReceiptRealizationDialog_realizationDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>

	<changeSet id="69" author="Durgaprasad g">
		<addColumn tableName="PRESENTMENTDETAILS_TEMP">
			<column name="RECEIPTID" type="bigint"/>
		</addColumn>
	</changeSet>
	
<changeSet id="68" author="Durgaprasad g">
		<createView viewName="PRESENTMENTDETAILS_AVIEW" replaceIfExists="true">
  SELECT		T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
							T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status,
							T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
      						T2.MANDATETYPE,T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME  ,T1.ReceiptID 
				FROM 		PRESENTMENTDETAILS    T1  INNER JOIN 
							MANDATES  T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN 
							FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN 
							RMTFINANCETYPES T4 ON T3.FINTYPE  = T4.FINTYPE INNER JOIN 
							CUSTOMERS T5 ON T5.CUSTID  = T3.CUSTID
							
	</createView>
</changeSet>							

<changeSet id="70" author="Durgaprasad g">
		<createView viewName="PRESENTMENTDETAILS_VIEW" replaceIfExists="true">
			SELECT		T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
										T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status,
										T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
										T2.MANDATETYPE,T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME, T1.ReceiptID 
							FROM 		PRESENTMENTDETAILS_TEMP  T1  INNER JOIN 
										MANDATES  T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN 
										FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN 
										RMTFINANCETYPES T4 ON T3.FINTYPE  = T4.FINTYPE INNER JOIN 
										CUSTOMERS T5 ON T5.CUSTID  = T3.CUSTID
			UNION ALL

			SELECT		T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
										T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status,
										T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
										T2.MANDATETYPE,T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME , T1.ReceiptID 
							FROM 		PRESENTMENTDETAILS    T1  INNER JOIN 
										MANDATES  T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN 
										FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN 
										RMTFINANCETYPES T4 ON T3.FINTYPE  = T4.FINTYPE INNER JOIN 
										CUSTOMERS T5 ON T5.CUSTID  = T3.CUSTID
			WHERE     NOT EXISTS (SELECT 1 FROM PRESENTMENTDETAILS_TEMP WHERE ID = T1.ID)
	</createView>
</changeSet>	


<changeSet id="71" author="Durgaprasad g">
		<createView viewName="PRESENTMENTDETAILS_AVIEW" replaceIfExists="true">
  SELECT		T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
							T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status,
							T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
      						T2.MANDATETYPE,T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME  ,T1.ReceiptID,T1.ECSRETURN 
				FROM 		PRESENTMENTDETAILS    T1  INNER JOIN 
							MANDATES  T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN 
							FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN 
							RMTFINANCETYPES T4 ON T3.FINTYPE  = T4.FINTYPE INNER JOIN 
							CUSTOMERS T5 ON T5.CUSTID  = T3.CUSTID
							
	</createView>
</changeSet>							

<changeSet id="72" author="Durgaprasad g">
		<createView viewName="PRESENTMENTDETAILS_VIEW" replaceIfExists="true">
			SELECT		T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
										T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status,
										T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
										T2.MANDATETYPE,T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME, T1.ReceiptID ,T1.ECSRETURN
							FROM 		PRESENTMENTDETAILS_TEMP  T1  INNER JOIN 
										MANDATES  T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN 
										FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN 
										RMTFINANCETYPES T4 ON T3.FINTYPE  = T4.FINTYPE INNER JOIN 
										CUSTOMERS T5 ON T5.CUSTID  = T3.CUSTID
			UNION ALL

			SELECT		T1.ID, T1.PRESENTMENTID, T1.PRESENTMENTREF, T1.FINREFERENCE, T1.SCHDATE, T1.MANDATEID, T1.SCHAMTDUE, T1.SCHPRIDUE, T1.SCHPFTDUE, T1.SCHFEEDUE, T1.SCHINSDUE,
										T1.schPenaltyDue, T1.advanceAmt, T1.excessID, T1.adviseAmt, T1.presentmentAmt, T1.ExcludeReason, T1. TDSAMOUNT, T1.bounceID, T1.emiNo, T1.status,
										T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
										T2.MANDATETYPE,T3.FINTYPE,T4.FINTYPEDESC, T5.CUSTSHRTNAME CUSTOMERNAME , T1.ReceiptID ,T1.ECSRETURN
							FROM 		PRESENTMENTDETAILS    T1  INNER JOIN 
										MANDATES  T2 ON T1.MANDATEID = T2.MANDATEID INNER JOIN 
										FINANCEMAIN T3 ON T1.FINREFERENCE = T3.FINREFERENCE INNER JOIN 
										RMTFINANCETYPES T4 ON T3.FINTYPE  = T4.FINTYPE INNER JOIN 
										CUSTOMERS T5 ON T5.CUSTID  = T3.CUSTID
			WHERE     NOT EXISTS (SELECT 1 FROM PRESENTMENTDETAILS_TEMP WHERE ID = T1.ID)
	</createView>
</changeSet>	

		<changeSet id="73" author="Pruthvi">
		<createView viewName="dm_application_details_view" replaceIfExists="true">
		select t2.ApplicationNO APPLID,'' CRM_DEALID,'' CRSCOREDATE,'' CIBILSCORE,'' APPSCORE,'' BEHSCORE,'' DEVIATION_TYPE,'' DEVIATION_FLAG,
'' DEVIATION_CODE,'' DEVIATION_NAME,'' REQ_TENURE,cast('' as numeric(18,4)) REQ_LOAN_AMT,cast('' as numeric(18,4)) LOAN_LIMIT,cast(T1.FinAmount as numeric(18,4)) APPROVE_LOAN_AMT,t1.FinPurpose LOAN_PURPOSE,
t1.FinType LOAN_TYPE,'' CANCELLATIONDATE,'' CANCEL_REASON,'' FREQUENCY,'' LOAN_APPROVAL_DATE,t1.FinStartDate AGREEMENTDATE,cast(T2.EffectiveRateOfReturn as numeric(10,7)) INTRATE,cast('' as numeric(10,7)) FLAT_RATE,
cast('' as numeric(10,7)) IRR,cast('' as numeric(10,7)) GROSS_LTV,cast('' as numeric(10,7)) NET_LTV,cast('' as numeric(18,4)) COF,cast('' as numeric(10,7)) DEBT_BURDEN_RATIO,cast('' as numeric(10,7)) FOIR_DB,'' SCHEMEID,'' SCHEMEDESC,'' SCHEMEGROUPID,
'' SCHEME_GROUPG_DESC,'' PRODUCT_CATEGORY,'' PROD_TYPE,'' PROMOTIONID,'' PROGRAMID,'' SURROGATE_FLAG,'' SOURCING_CHANNEL_TYPE,
'' SOURCING_CHANNEL_NAME,'' REFERAL_GROUP,'' REFERAL_NAME,BranchCountry COUNTRYID,countrydesc COUNTRY,'' REGIONID,'' REGION,'' STATEID,BranchProvince STATE,
'' CITYID,BranchCity CITY,t1.finbranch BRANCHID,BranchDesc BRANCHDESC,'' BROKER_NAME,'' DME_NAME,'' ASM_NAME,'' RSM_NAME,'' CRDT_MGR_NAME,'' ROID_NAME,
'' TLID_NAME,'' BMID_NAME,'' COID_NAME,'' SUPPLIERID,cast('' as numeric(10,7)) DLR_PARTICIPATION_RATE,'' LOCAL_OUTSTATION_FLG,'' CUSTOMERID,
(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'' PROCESSED_FLAG,'' PROCESS_DATE,'' PRODUCT,'' SEGMENTS,'' CRM_STATUS,'' LOGINDATE,'' APPR_REJ_DATE,
'' CANCEL_DATE,'' FILE_STATUS,'' FILE_HOLD_REASON,'' QDPDONE,'' ISHOLD,'' BRANCH_INW_DATE,'' BRANCH_HOLD_DATE,'' CPU_INW_DATE,
'' CPU_HOLD_DATE,'' SYSTEM_HOLD,'' PSL_FLAG,'' DOC_WAVE_FLAG,'' CUSTOMER_SWIPE,'' CUSTOMER_ACCEPTANCE,'' KYC_DOC_TYPE,
'' KYC_DOC_ID,cast('' as numeric(5,2)) BUSINESS_IRR,'' INSPECTORNAME,'' REGNUMBER,'' BUSINESS_YEAR,'' DEALID,cast('' as numeric(10,7)) PRETAXIRR,'' ODM_FLAG,'' DI_DATE,
'' LAA_QDP_FLAG,'' PREFERRED_CARD_ACCEPTANCE,
cast(null as numeric(16,2)) ORIG_AMTFIN,'' ELC_FLAG,cast('' as numeric(14,2)) ELC_LIMIT,'' QDP_DONE_DATE,'' LAA_DECENTRALIZED_FLAG,'' FCU_FLAG,
'' MKTGID,'' DM_MPID,'' SWIPE_CARD_CODE,'' SOURCE_CARD_CODE,'' DII_USER_ID,'' QDP_CHEQUE_ISSUE,'' INTEREST_TYPE,
'' DII_DONE_DATE,'' FINISH_DATE,'' BATCH_ID 
from finpftdetails T1
Inner join FinanceMain T2 on T1.finreference=T2.finreference
inner join RMTBranches T3 on T3.branchcode=t1.finbranch
Left join BMTCountries T4 on T4.countrycode=t3.branchcountry
			</createView>
	</changeSet>
		<changeSet id="74" author="Pruthvi">
		<createView viewName="DM_COAPPLICANT_DTLS_view" replaceIfExists="true">
	select custid CUSTOMERID,'' APPLICANT_TYPE,'' PAN_NO,CustRelation CUST_RELATION,custtypectg CUST_TYPE,'' AGE,CustDOB DOB,CustFName FNAME,CustMName MNAME,CustLName LNAME,
GenderCode GENDER,CustMaritalSts MARITAL_STATUS,NoOfDependents NO_OF_DEPENDENT,'' YRS_CURRENTJOB,'' PREVIOUS_JOB_YEAR,'' QUALIFICATION,'' EMPLOYER_DESC,
'' COMPANY_TYPE,'' INDUSTRYID,'' BUSINESS_NATURE,'' OCCUPATION_CODE,'' GUARDIAN,'' PROCESS_FLAG,'' PROCESS_DATE,
'' EMP_TYPE,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,
cast(null as numeric(16,2)) INCOME,'' APPLID,'' BATCH_ID 
from customers T1
Left join bmtgenders t2 on t2.gendercode=t1.custgendercode
left join RMTCustTypes T3 on T3.custtypecode=t1.custtypecode	
			</createView>
	</changeSet>
		<changeSet id="75" author="Pruthvi">
		<createView viewName="DM_OPENECS_DETAILS_view" replaceIfExists="true">
		select custid CUSTOMERID,'' ECS_ID,T2.Bankcode BANK_ID,bankname BANK_NAME,bankbranchid BANKBRANCHID,'' BANKID,'' BANK_BRANCH_NAME,city CITY,'' ACCTYPE,
'' ACCNO,'' MAXLIMIT,'' BALLIMIT,'' UTIL_LIMIT,'' VALID_LIMIT,'' REPAY_MODE,micr MICRCODE,'' ACTIVE_FLAG,'' CITYID,'' SEGMENTS,
(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'' PROCESS_DATE,'' BATCH_ID 
from finpftdetails T1
Left join BankBranches T2 on T2.Branchcode=t1.finbranch 
left join BMTBankDetail T3 on T3.Bankcode=t2.bankcode
			</createView>
	</changeSet>
		<changeSet id="76" author="Pruthvi">
		<createView viewName="DM_SUBQ_DISB_DETAILS_view" replaceIfExists="true">
		select T1.FinStartDate AGREEMENTDATE,'' APPLID,T2.applicationno AGREEMENTNO,T3.DisbAccountID DISBURSEMENTNO,DisbDate DISBURSEMENTDATE,'' PARENT_AGREEMENTNO,
cast(T1.FinAmount as numeric(16,2)) AMTFIN,
cast(null as numeric(16,2)) NET_AMTFIN,
cast(T3.DisbAmount as numeric(16,2)) DISBURSEDAMT,
DisbisActive DISB_STATUS,T1.FirstRepayDate FIRST_DUE_DATE,'' GROSS_TENURE,'' NET_TENURE,t1.MaturityDate MATURITYDATE,t1.MaturityDate EXPIRYDATE,'' NO_OF_ADV_INSTL,
cast(null as numeric(16,2)) ADV_EMI_AMT,
cast(RepayAmount as numeric(16,2)) EMI,'' REPAYMENT_MODE,T1.FinType PRODUCTFLAG,'' PROMOTIONID,
cast(null as numeric(16,2)) ICICI_LOMBARD,
cast(null as numeric(16,2)) BAGIC,
cast(null as numeric(16,2)) BALIC_CHARGES,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'' PROCESSED_FLAG,'' PROCESS_DATE,'' SEGMENTS,
cast(null as numeric(16,2)) FEE,
cast(null as numeric(16,2)) DEALER_SUBV,
cast(null as numeric(16,2)) MANU_SUBV_DED,
cast(null as numeric(16,2)) MANU_SUBV_NDED,
cast(null as numeric(16,2)) PREEMI,'' EXISTING_LANNO,'' MORTGAGE_FEE,'' COMMITMENT_FEE,'' PROCESSING_FEE,'' PRE_EMI_RECEIVABLE,
'' INSURANCE,'' PAYMENTMODE,'' FREQ,'' CHEQUENUM,'' BATCH_ID
from  finpftdetails T1
Inner join Financemain T2 on T1.finreference=T2.finreference
Inner join FinDisbursementDetails T3 on T3.finreference=t1.finreference
Inner join finscheduledetails T4 on t4.finreference=t1.finreference	
			</createView>
	</changeSet>
		<changeSet id="77" author="Pruthvi">
		<createView viewName="DM_IVR_GATEWAY_FLEXI_view" replaceIfExists="true">
		select T2.applicationno AGREEMENTNO,
cast(null as numeric(20,2)) DROP_LINE_LIMIT,
cast(null as numeric(20,2)) AMOUNT_DRAWN_LIMIT,
cast(null as numeric(20,2)) UTLIZED_BALANCE_LIMIT,
cast(null as numeric(20,2)) PRINCIPLE_AMOUNT_PAID,
cast(null as numeric(20,2)) BALANCE_PRINCIPAL_OUTSTANDING,T1.FinStartDate PROCESS_DATE,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,
cast(null as numeric(16,2)) BATCH_ID 
from finpftdetails T1
Inner join Financemain T2 on T1.finreference=T2.finreference
			</createView>
	</changeSet>
		<changeSet id="78" author="Pruthvi">
		<createView viewName="dm_bounce_details_view" replaceIfExists="true">
		select
cast(T2.Applicationno as numeric(8,0)) APPLID,
cast(null as numeric(32,0)) CHEQUEID,t1.finreference AGREEMENTNO,'' BOUNCE_DATE,'' BOUNCE_REASON,
cast(null as numeric(16,2)) BOUNCE_AMT,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'N' PROCESSED_FLAG,'' PROCESS_DATE,'' SEGMENTS,
cast(null as numeric(16,2)) BUSINESS_YEAR,'' CHEQUEDATE
from finpftdetails T1
inner join FinanceMain T2 on t1.finreference=t2.finreference
			</createView>
	</changeSet>
		<changeSet id="79" author="Pruthvi">
		<createView viewName="DM_WRITEOFF_DETAILS_view" replaceIfExists="true">
		select
cast(T2.applicationno as numeric(8,0)) APPLID,t1.finreference AGREEMENTNO,'' CHARGEOFF_DT,'' CHARGEOFF_FLG,'' CHARGEOFF_REASON,
cast(null as numeric(18,4)) SETTLEMENT_LOSS,
cast(null as numeric(18,4)) GROSS_WRITEOFF_AMT,
0 NET_WRITEOFF_AMT,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'N' PROCESSED_FLAG,sysdate PROCESS_DATE,'' SEGMENTS,
cast(null as numeric(18,4)) RECEIPT_ON_CHARGEOFF,
cast(null as numeric(16,2)) BUSINESS_YEAR
from Finpftdetails T1
inner join financemain t2 on t1.finreference=t2.finreference
			</createView>
	</changeSet>
		<changeSet id="80" author="Pruthvi">
		<createView viewName="dm_resch_details_daily_view" replaceIfExists="true">
	select
cast(T2.applicationno as numeric(16,2)) APPLID,t1.finreference AGREEMENTNO,T3.Disbstatus DISB_STATUS,
cast(T1.NOInst as numeric(3,0)) GROSS_TENURE,
cast(null as numeric(3,0)) NET_TENURE,t1.MaturityDate MATURITYDATE,t1.MaturityDate EXPIRYDATE,
cast(FirstRepayAmt as numeric(16,2)) EMI,AlwdrpyMethods REPAYMENT_MODE,T1.fintype PRODUCTFLAG,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'N' PROCESSED_FLAG,sysdate PROCESS_DATE,
'' SEGMENTS,'' FREQ,'' LOAN_STATUS,t1.MaturityDate CLOSUREDATE,t1.RepayAccountId CUST_ACCT_NO,T7.bankname BANKNAME,micr MICRCODE,'' CUST_BANK_BRANCH,
city CUST_BANK_CITY,
cast(null as numeric(16,2)) BUSINESS_YEAR,
cast(null as numeric(8,0)) PDCID,'' PCFLAG,'' TIE_UP,
cast(null as numeric(10,2)) MARGIN,
cast(null as numeric(10,2)) SPECIALMARGIN,
cast(null as numeric(3,0)) FIXEDTENOR,'' CEEFFECTIVEDATE,
cast(T2.EffectiveRateOfReturn as numeric(10,7)) EFF_RATE,
cast(null as numeric(10,7)) PLRRATE,'' TIE_UP_WITH,'' DATE_OF_CLOSURE,'' PDCMS_SEQ_GENERATED_DATE,
'' INSTRUMENT_DATA_ENTRY_DATE,'' PAYMENT_AUTHORIZATION_DATE
from finpftdetails T1
inner join Financemain T2 on t1.finreference=t2.finreference
inner join FinDisbursementDetails T3 on t3.finreference=t1.finreference
Inner join rmtfinancetypes T4 on T4.FinType=T1.FinType
left join bankbranches T6 on T6.Branchcode=t1.finbranch 
left join BMTBankDetail T7 on T7.Bankcode=t6.bankcode	
			</createView>
	</changeSet>
		<changeSet id="81" author="Pruthvi">
		<createView viewName="DM_PRESENTATION_DETAILS_view" replaceIfExists="true">
		select t1.finreference AGREEMENTNO,
  cast(FirstRepayAmt as numeric(20,2)) EMI,AlwdrpyMethods REPAY_TYPE,'' DEPOSITED_DATE,'' CREDIT_STATUS,'' RETURN_CODE,'' RETURN_REASON,'' REMARKS,
  '' SEGMENTS,sysdate PROCESSDATE,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,
  cast(null as numeric(10,2)) EMI_NO,'' CUSTOMER_BANK_NAME,
  cast(null as numeric(5,2)) BOM_BOUNCE_BUCKET,micr MICR_CODE,'' STATUS_UPDT_DATE,'' CUST_BANK_AC_NO,'' CUSTOMER_BANK_BRANCH,
  '' CHEQUESNO,'' CHEQUEDATE,'' FEMI_FLAG,'' HOLD_IGNORE_CODE,'' HOLD_IGNORE_REASON,'' DEST_ACC_HOLDER,
  cast(null as numeric(8,2)) PDCID,
  cast(null as numeric(8,2)) BBRANCHID
  from Finpftdetails t1
  inner join financemain t2 on t1.finreference=t2.finreference
  Inner join rmtfinancetypes T3 on T3.FinType=T1.FinType
  left join bankbranches T6 on T6.Branchcode=t1.finbranch 
  LEFT JOIN BMTBANKDetail T5 on t5.bankcode=t6.bankcode
			</createView>
	</changeSet>
		<changeSet id="82" author="Pruthvi">
		<createView viewName="DM_LEA_DOC_DTLE_view" replaceIfExists="true">
	select 
t1.finreference  AGREEMENTID,'' APPLICABLE,
cast(null as numeric(8,0)) APPLID,'' APPROVED_BY,'' AUTHDATE,'' AUTHID,'' AWB_NO,'' BRANCHSTATUS,
cast(null as numeric(8,0)) CONSTITUTION,'' COURIER_NAME,'N' CRITICAL,'' CUSTOMER_TYPE,
t1.custid  CUSTOMERID,'' DATE_BRANCH_STATUS,'' DATELASTUPDT,'' DOC_CLASSFN,'' DOC_RETRIEVAL_STATUS,
cast(null as numeric(8,0)) DOCID,'' DOCTYPE,'' FILE_BARCODE,'' MAKERDATE,'' MAKERID,'' MC_STATUS,'' NEW_FLAG,'' ORIGINALS,
'' PACKET_TRACKER_NO,'' PROPERTY_ADDRESS,'' PROPERTY_CODE,'' REASON,'' RECEIVED,'' RECEIVEDDATE,'' REJECTION_REASONS,
'' RELEASED_DATE,'' RELEASED_REMARKS,'' REMARKS,'' STAGE,'' TARGETDATE,'' TITLE_DOCUMENT,
cast(null as numeric(8,0)) TXNDOCID,'' VALIDTILLDATE,'' VAP_LOAN_FLAG,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'N' PROCESSFLAG,sysdate PROCESSDATE,'' SEGMENT,
'' REVISED_TARGET_DATE
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference	
			</createView>
	</changeSet>
		<changeSet id="83" author="Pruthvi">
		<createView viewName="DM_PREPAYMENT_DETAILS_view" replaceIfExists="true">
		select 
cast(t2.applicationno as numeric(8,0)) APPLID,t1.finreference AGREEMENTNO,
cast(null as numeric(16,0)) PREPAYMENTID,
cast(null as numeric(5,2)) PREPAYMENT_RATE,'' PREPAYMENT_TYPE,
cast(null as numeric(16,2)) PREPAYMENT_PENALTY_DUE,
cast(null as numeric(16,2)) PREPAYMENT_PENALTY_PAID,'' PREPAYMENT_AMT,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'N' PROCESSED_FLAG,sysdate PROCESS_DATE,
'' SEGMENTS,'' PREPAYMENT_DATE,
cast(null as numeric(8,0)) BUSINESS_YEAR
from Finpftdetails t1
  inner join financemain t2 on t1.finreference=t2.finreference
			</createView>
	</changeSet>
		<changeSet id="84" author="Pruthvi">
		<createView viewName="DM_TOPUP_DETAILS_view" replaceIfExists="true">
		select t1.finreference AGREEMENTNO,
cast(T2.ApplicationNo as numeric(8,0)) APPLID,T1.fintype PRODUCTFLAG,
cast(null as numeric(8,0)) TOP_UP_AMT,
cast(null as numeric(8,0)) X_LAN_POS,
cast(null as numeric(16,2))  DISBURSALAMOUNT,
cast(t1.finamount as numeric(16,2)) AMTFIN,sysdate PROCESSEDDATE,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference
			</createView>
	</changeSet>
		<changeSet id="85" author="Pruthvi">
		<createView viewName="FORECLOSURECHARGES_view" replaceIfExists="true">
select 
cast(T2.applicationNo as numeric(8,0)) AGREEMENTID,cast(null as numeric(16,2)) BAL_PRINCIPAL,cast(null as numeric(16,2)) RESEDUL_VALUE,cast(null as numeric(16,2)) INSTALLMENTS,
cast(null as numeric(16,2)) ADVICES,cast(null as numeric(16,2)) PENALTY,cast(0 as numeric(16,2)) INTREST_ON_TERMINATION,cast(null as numeric(16,2)) FLOATINTREST_ON_TERMINATION,
cast(null as numeric(16,2)) OVER_DUES,cast(null as numeric(16,2)) CURRENT_OVERDUES,cast(null as numeric(16,2)) CURRENT_WAVEOFFAMT,cast(null as numeric(16,2)) OVER_DISTANCE_CHARGES,
cast(null as numeric(16,2)) INTREST_ON_TERMINATION_PER_DAY,cast(null as numeric(16,2)) INTREST_ACCRUALS,cast(null as numeric(16,2)) EXCESS_AMOUNT,cast(null as numeric(16,2)) EXCESS_REFUND,
cast(null as numeric(16,2)) ADVICE,cast(null as numeric(16,2)) REBATE,cast(null as numeric(16,2)) ADVINSTL,cast(null as numeric(16,2)) EXCESSPRINPMNT,cast(null as numeric(16,2)) SDAMT,
cast(null as numeric(16,2)) SDINT,cast(null as numeric(16,2)) EXCESS_INTREST_RATE,cast(null as numeric(16,2)) VAT_ON_FORECLOSURE,cast(null as numeric(16,2)) UNDER_DISTANCE_CHARGES,
cast(null as numeric(16,2)) NET_PAYBALE,cast(null as numeric(16,2)) WAIVEOFFAMOUNT,'' ACTIVITY,'' AUTHORIZEDON,cast(null as numeric(16,2)) COMMITMENT_FEE,cast(null as numeric(16,2)) ORIGINATION_FEE,
cast(null as numeric(16,2)) PRE_EMI,'' BUSINESS_DATE,cast(null as numeric(32,0)) CHEQUEID,'' STATUS,cast(null as numeric(16,2)) INTEREST_WAIVE_OFF,cast(null as numeric(16,2)) BALANCE_PRIN_WAIVE_OFF,
cast(null as numeric(16,2)) INSTALLMET_INT_WAIVE_OFF,cast(null as numeric(16,2)) WOFF_CURRMONTH_INT,cast(null as numeric(16,2)) WOFF_OVERDUE_CHARGE,cast(null as numeric(16,2)) WOFF_CHQBOUNCE_CHARGES,
cast(null as numeric(16,2)) WOFF_OTHERS,cast(null as numeric(16,2)) INSTALLMENT_PRIN_WAIVE_OFF,cast(null as numeric(16,2)) WOFF_PARKING_CHARGES,cast(null as numeric(16,2)) TOT_OTHER_REPO_CHARGES,
cast(null as numeric(16,2)) WOFF_OTHER_REPO_CHARGES,cast(null as numeric(16,2)) TOT_REPOSESSION_CHARGES,cast(null as numeric(16,2)) WOFF_REPOSESSION_CHARGES,cast(null as numeric(16,2)) TOT_PARKING_CHARGES
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference		
			</createView>
	</changeSet>
		<changeSet id="86" author="Pruthvi">
		<createView viewName="DM_HTS_UNADJUSTED_AMT_view" replaceIfExists="true">
	select 
cast(applicationno as numeric(8,0)) APPLID,
cast(null as numeric(18,2)) UNADJUSTED_AMOUNT,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE
from financemain	
			</createView>
	</changeSet>
		<changeSet id="87" author="Pruthvi">
		<createView viewName="DM_NOC_ELIGIBLE_LOANS_view" replaceIfExists="true">
	select T2.ApplicationNo AGREEMENTNO,T2.ApplicationNo LOANACCTNUM,t1.fintype PRODUCTFLAG,CustEmail EMAIL,
(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,sysdate PROCESS_DATE,'N' PROCESSED_FLAG 
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference
left join CustomerEMails T3 on T3.custid=T1.custid	
			</createView>
	</changeSet>
		<changeSet id="88" author="Pruthvi">
		<createView viewName="DM_SEND_SOA_EMAIL_view" replaceIfExists="true">
	select T2.applicationNo AGREEMENTNO,
cast(t1.custid as numeric(8,0)) CUSTOMERID,CustEmail EMAILID,
t1.finreference AGREEMENTID,
cast(null as numeric(10,0)) PROCESSID,sysdate GENERATION_DATE,'' PROCESSED,t1.fintype PRODUCTFLAG,
cast(null as numeric(5,0)) GROUPID,
cast(null as numeric(5,0)) TOTAL_LAN,
cast(null as numeric(5,0)) TOTAL_CLOSED_LAN,
cast(null as numeric(5,0)) TOTAL_ACTIVE_LAN,'' SWIPE_FLAG,'' EMI_CARD_NO,T5.DisbDate DISBURSEMENT_DATE,
cast(null as numeric(8,0)) SUPPLIERID,'' SUPPLIERDESC,
cast(T1.FinAmount as numeric(16,2)) AMT_FIN,
cast(FirstRepayAmt as numeric(16,2)) EMI,NextRepayDate NEXT_EMI_DUE_DATE,
cast(null as numeric(16,2)) CHEQUE_BOUNCE_CHARGE
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference
inner join findisbursementdetails T5 on T5.finreference=T1.finreference
Inner join customers T3 on T3.custid=T1.custid
left join CustomerEMails T4 on T4.custid=T3.custid	
			</createView>
	</changeSet>
		<changeSet id="89" author="Pruthvi">
		<createView viewName="DM_LOAN_VOUCHER_DETAILS_view" replaceIfExists="true">
	select '' MODULEID,'' STAGEID,'' LEA_VOUCHERID,'' FA_VOUCHERID,'' VOUCHERTYPE,'' VOUCHERDATE,'' VALUEDATE,
cast(null as numeric(8,0)) BRANCHID,'' BRANCH_CODE,'' BRANCHDESC,'' BUSINESS_AREA,'' PROFIT_CENTRE,'' PRODUCT_FLAG,
cast(null as numeric(8,0)) SCHEMEID,'' SCHEMEDESC,'' ASSIGNMENT,
t1.finreference AGREEMENTID,t2.applicationno AGREEMENTNO,T1.FinstartDate AGREEMENTDATE,t3.disbdate DISBURSALDATE,
t1.finstatus LOAN_STATUS,'' NPA_STAGEID,
'' FINNONE_GLID,'' GROUPGLDESC,'' SAPGL_CODE,'' COST_CENTRE,
cast(T4.PostAmount as numeric(19,5)) DRAMT,
cast(T5.POstAmount as numeric(19,5)) CRAMT,'' DRCR_FLAG,
cast(null as numeric(16,2)) DRCR_AMT,'' NARRATION,
cast(null as numeric(16,0)) CHEQUEID,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,sysdate PROCESSDATE,'' SEGMENT,'N' PROCESSED_FLAG
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference
inner join findisbursementdetails T3 on T3.finreference=T1.finreference
left join Postings T4 on t4.finreference=t1.finreference and T4.drorcr='D'
left join Postings T5 on t5.finreference=t1.finreference and T4.drorcr='D'	
			</createView>
	</changeSet>
		<changeSet id="90" author="Pruthvi">
		<createView viewName="DM_LOANWISE_CHARGE_DTLS_view" replaceIfExists="true">
		select 
T1.FinReference AGREEMENTID,
cast(null as numeric(16,0)) TXNADVICEID,
cast(null as numeric(8,0)) CHARGEID,
cast(null as numeric(8,0)) CHARGECODEID,'' CHARGEDESC,
cast(null as numeric(19,5)) CHARGEAMT,'' STATUS,
cast(null as numeric(16,2)) AMTINPROCESS,
cast(null as numeric(19,5)) TXNADJUSTEDAMT,
cast(null as numeric(19,5)) ADVICEAMT,'' ADVICEDATE,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,sysdate PROCESSDATE,
'N' PROCESSED_FLAG,'' SEGMENT,cast(null as numeric(10,0)) BATCH_ID
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference
			</createView>
	</changeSet>
		<changeSet id="91" author="Pruthvi">
		<createView viewName="DM_LOANWISE_REPAYSCHEDULE_view" replaceIfExists="true">
	select T2.ApplicationNO AGREEMENTNO,
T1.FinReference AGREEMENTID,
cast(null as numeric(16,0)) PROPINSTLID,'' EMI_NO,FirstRepayDate DUEDATE,
cast(null as numeric(16,2)) OPENING_PRINCIPAL,
cast(null as numeric(16,2)) INSTALMENT_AMT,
cast(null as numeric(16,2)) PRINCIPAL_AMT,
cast(null as numeric(16,2)) INTEREST_AMT,
cast(null as numeric(16,2)) CLOSING_PRINCIPAL,'' INSTAL_TYPE,
cast(null as numeric(25,2)) TOTAL_AMOUNT_DUE,
cast(null as numeric(25,2)) DROPLINE_LIMIT,
cast(null as numeric(25,2)) ACT_AVAILABLE_LIMIT,
cast(null as numeric(25,2)) ACT_UTILISATION_LIMIT,'' EMI_HOLIDAY,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE
from Finpftdetails t1
inner join financemain t2 on t1.finreference=t2.finreference	
			</createView>
	</changeSet>
		<changeSet id="92" author="Pruthvi">
		<createView viewName="RPT_PortfolioBehaviorSmry_View" replaceIfExists="true">
		Select T1.*,T.PortfolioExposureBHD,T.PortfolioExposureUSD,T.TotalCustomers,T2.NoofRecords,FinDivOrder,DivisionCodeDesc from (		
		Select  FinDivision,T1.FinType,(CASE WHEN FinDivision='BFSD' THEN 1 WHEN FinDivision='CL' THEN 2 END)FinDivOrder,
				SUM(UDF_ConvertCurrency(T1.TotalPriBal+T1.TotalPftBal,T1.FinCCY,'INR'))PortfolioExposureBHD, 
				SUM(UDF_ConvertCurrency((T1.TotalPriBal+T1.TotalPftBal),T1.FinCCY,'USD'))PortfolioExposureUSD,Count(DISTINCT FinAccount)TotalCustomers
		From    Finpftdetails T1  INNER JOIN RMTFinanceTypes T2  ON T1.FinType=T2.FinType Group By T1.FinType,FinDivision)T 		
		Inner Join RPT_PortfolioBehavior T1 on T.FinType=T1.FinType and T.FinDivision=T1.FinDivision Inner Join
		SMTDivisionDetail ON DivisionCode=T.FinDivision   INNER JOIN
		(Select FinDivision,FinType,COUNT(*) NoofRecords from RPT_PortfolioBehavior  Group By FinType,FinDivision)T2 ON T.FinType=T2.FinType and T.FinDivision=T2.FinDivision
			</createView>
	</changeSet>
		<changeSet id="93" author="Pruthvi">
		<createView viewName="RPT_DelinquentByPdtSmry_View" replaceIfExists="true">
	Select T1.*,T.PortfolioExposureBHD,T.PortfolioExposureUSD,T.TotalCustomers,FinDivOrder,DivisionCodeDesc,T2.NoofRecords from (		
		Select  FinDivision,T1.FinType,(CASE WHEN FinDivision='BFSD' THEN 1 WHEN FinDivision='CL' THEN 2 END)FinDivOrder,
					SUM(UDF_ConvertCurrency(T1.TotalPriBal+T1.TotalPftBal,T1.FinCCY,'INR'))PortfolioExposureBHD, 
					 SUM(UDF_ConvertCurrency((T1.TotalPriBal+T1.TotalPftBal),T1.FinCCY,'USD'))PortfolioExposureUSD,Count(DISTINCT CustCif)TotalCustomers
			From    Finpftdetails T1  INNER JOIN RMTFinanceTypes T2  ON T1.FinType=T2.FinType Group By T1.FinType,FinDivision)T Inner Join
		RPT_DelinquentByProducts T1 on T.FinType=T1.FinType and T.FinDivision=T1.FinDivision Inner Join
		SMTDivisionDetail ON DivisionCode=T.FinDivision  INNER JOIN
		(Select FinDivision,FinType,COUNT(*) NoofRecords from RPT_DelinquentByProducts  Group By FinType,FinDivision)T2 ON T.FinType=T2.FinType and T.FinDivision=T2.FinDivision 	
			</createView>
	</changeSet>
	
	
	<changeSet id="94" author="Pruthvi">
		<createView viewName="dm_disb_details_daily_view" replaceIfExists="true">
		select T1.FinStartDate AGREEMENTDATE,'' APPLID,T1.FinReference AGREEMENTNO,T3.DisbAccountId DISBURSEMENTNO,DisbDate DISBURSEMENTDATE,'' PARENT_AGREEMENTNO,
cast(T1.FinAmount as numeric(16,2)) AMTFIN,
cast(null as numeric(16,2)) NET_AMTFIN,
cast(FinCurrAssetValue as numeric(16,2)) DISBURSEDAMT,'' DISB_STATUS,
FirstRepayDate FIRST_DUE_DATE,NOInst GROSS_TENURE,NOPaidInst NET_TENURE,T1.MaturityDate MATURITYDATE,PRVRPYSCHDATE EXPIRYDATE,'' NO_OF_ADV_INSTL,
cast(null as numeric(16,2)) ADV_EMI_AMT,
cast(FirstRepayAmt as numeric(16,2)) EMI,AlwdrpyMethods REPAYMENT_MODE,T1.FinType PRODUCTFLAG,'' PROMOTIONID,
cast(null as numeric(16,2)) ICICI_LOMBARD,
cast(null as numeric(16,2)) BAGIC,
cast(null as numeric(16,2)) BALIC_CHARGES,
(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'N' PROCESSED_FLAG,SYSDATE PROCESS_DATE,'' SEGMENTS,
cast(null as numeric(16,2)) FEE,
cast(null as numeric(16,2)) DEALER_SUBV,
cast(null as numeric(16,2)) MANU_SUBV_DED,
cast(null as numeric(16,2)) MANU_SUBV_NDED,
cast(null as numeric(16,2)) PREEMI,'' EXISTING_LANNO,'' MORTGAGE_FEE,'' COMMITMENT_FEE,'' PROCESSING_FEE,'' PRE_EMI_RECEIVABLE,'' INSURANCE,T2.FinRepayMethod PAYMENTMODE,
case when T1.RepayFrq like 'M%' then 'Monthly'
     when T1.RepayFrq like 'Q%' then  'Quarterly'
     when T1.RepayFrq like 'Y%' then  'Yearly' else T1.RepayFrq end FREQ,'' CHEQUENUM,'' CUST_ACCT_NO,T5.BankName BANKNAME,t6.micr MICRCODE,'' BUSINESS_YEAR,
cast(null as numeric(16,2)) EMI_CHARGE,
cast(null as numeric(16,2)) PDC_CHARGE,cast(t2.EffectiveRateOfReturn as numeric(16,5)) IRR_PER,cast('' as numeric(16,5)) FEE_WL,
cast(null as numeric(16,2)) ELC_CHARGE,
cast(null as numeric(16,2)) CREDIT_VIDYA_FEES,'' BATCH_ID 


from FinPftDetails T1 
inner join FinanceMain T2 on T1.FinReference=T2.FinReference
Inner join FinDisbursementDetails T3 on T3.FinReference=T1.FinReference
Inner join rmtfinancetypes T4 on T4.FinType=T1.FinType
left join bankbranches T6 on T6.Branchcode=t1.finbranch 
LEFT JOIN BMTBANKDetail T5 on t5.bankcode=t6.bankcode
			</createView>
	</changeSet>
		<changeSet id="95" author="Pruthvi">
		<createView viewName="dm_loan_details_daily_view" replaceIfExists="true">
		select '' APPLID,t1.finreference AGREEMENTNO,t3.custid CUSTOMERID,cast('' as numeric(18,4)) CUSTOMER_YIELD,t2.finstatus STATUS,'' NPA_STAGE,'' LMS_BUCKET,'' COLL_BUCKET,
'' INSURANCE_APPLIED_FLG,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'N' PROCESSED_FLAG,SYSDATE PROCESS_DATE,'' SEGMENTS,t2.maturitydate CLOSUREDATE,
cast (null as numeric(16,2)) TOPUP_AMT,'' BUSINESS_YEAR,'' PDCID,'' PCFLAG,'' OD_FLAG,cast('' as numeric(10,2)) MARGIN,cast('' as numeric(10,2)) SPECIALMARGIN,'' FIXEDTENOR,
'' CEEFFECTIVEDATE,cast(T2.EffectiveRateOfReturn as numeric(10,7)) EFF_RATE,cast(T2.RepayBaseRate as numeric(10,7)) PLRRATE,'' PARTY_CODE,
coalesce(custfname,'')||coalesce(custMname,'')||coalesce(custlname,'') PARTY_NAME,'' ZONE,'' COLLECTION_CENTRE,'' VIRTUAL_ACCOUNT_NUMBER,
'' INSTALLMENT_TYPE,'' COMPANYTYPE,
cast (T1.totalpftschd as numeric(16,2)) FIANANCE_CHARGES,T2.ApplicationNo FILENO,'' NO_OF_PDCS,
cast (t2.Insuranceamt as numeric(16,2)) LIFEINSURANCE,
cast (t2.FinAssetValue as numeric(16,2)) SHORTRECEIVED,'' IN_FAVOUR_OFF,'' MKTGID,
cast (null as numeric(16,2)) PRE_EMI_INT_500071,'' LOAN_PURPOSE_DTL,'' LOAN_PURPOSE_DESC,
cast (null as numeric(16,2)) LOGIN_FEES,'' VC_REFERRAL_CD,'' VC_REFERRAL_NAME,
cast (null as numeric(16,2)) PROC_FEES2,'' INSTRUMENT_TYPE,'' LAN_BARCODE,'' INTSTART_DATE_REGULAR,cast('' as numeric(19,5)) BPI_RECEIVABLE,
cast('' as numeric(19,5)) BPI_PAYABLE,'' OPEN_FACILITY_FLAG,'' BATCH_ID 
from finpftdetails T1
Inner join financemain T2 on t1.finreference=t2.finreference
Inner join customers T3 on T3.Custid=t1.custid
			</createView>
	</changeSet>
		<changeSet id="96" author="Pruthvi">
		<createView viewName="dm_insurance_details_view" replaceIfExists="true">
		select '' APPLID,t1.finreference AGREEMENTNO,'' ASSETID,'' INSURANCE_TYPE,cast(t2.insuranceamt as numeric(18,4)) INSUR_PREMIUM,'' INSURANCE_RENEWAL_DATE,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,
'N' PROCESSED_FLAG,sysdate PROCESS_DATE,'' SEGMENTS,'' BUSINESS_YEAR,'' POLICY_TENURE,'' SUM_ASSURED,'' NOMINEE_NAME,'' GOOD_HEALTH,
'' CRITICAL_ILLNESS_FLAG,'' RELATIONSHIP,'' NOMINEE_ADDRESS,'' NOMINEE_RELATION,'' NOMINEE_DOB,'' NOMINEE_AGE,
'' NOMINEE_CONTACTNO,'' NOMINEE_NAME2,'' NOMINEE_ADDRESS2,'' NOMINEE_RELATION2,'' NOMINEE_DOB2,'' NOMINEE_AGE2,
'' NOMINEE_CONTACTNO2,'' DFGH,'' BATCH_ID 
from finpftdetails t1
inner join financemain T2 on t1.finreference=t2.finreference
			</createView>
	</changeSet>
		<changeSet id="97" author="Pruthvi">
		<createView viewName="DM_PROPERTY_DTL_view" replaceIfExists="true">
		select '' PROPERTYID,'' CITY,'' ADDRESS1,'' ADDRESS2,'' ADDRESS3,'' CITY1,'' STATE,Fintype PRODUCTFLAG,
(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,
'' PROPERTY_TYPE,'' PROPERTY_DESC,
cast (null as numeric(16,2)) PROPERTY_VALUE,'' ZIPCODE,'' PROCESSFLAG,'' PROCESS_DATE,'' BATCH_ID 
from finpftdetails
			</createView>
	</changeSet>
		<changeSet id="98" author="Pruthvi">
		<createView viewName="DM_APPLICANT_DETAILS_view" replaceIfExists="true">
		select t1.custid CUSTOMERID,'' CUST_TYPE,'' PANNO,CustAddrHnbr ADDRESS1,CustFlatNbr ADDRESS2,CustAddrStreet ADDRESS3,CustPOBox ADDRESS4,CustAddrCity CITY,CustAddrProvince STATE,CustAddrCountry COUNTRY,
CustAddrZip ZIPCODE,CustAddrType ADDRESSTYPE,CustEmail EMAIL,'' PHONE1,'' PHONE2,T4.Phonecountrycode||T4.phoneareacode||T4.phonenumber MOBILE,T5.Phonecountrycode||T5.phoneareacode||T5.phonenumber FAX,'' EXISTING_CUST_FLAG,'' INDIV_CORP_FLAG,
'' AGE,CustDOB DOB,custfname FNAME,custmname MNAME,custlname LNAME,genderdesc GENDER,CustMaritalSts MARITAL_STATUS,NoOfDependents NO_OF_DEPENDENT,'' YEARS_CURRENT_JOB,'' YEARS_PREV_JOB,
'' QUALIFICATION,TypeofResidence RESIDENCETYPE,'' YEARS_CURR_RESI,'' EMPLOYER_DESC,'' COMPANY_TYPE,'' INDUSTRYID,'' NATURE_OF_BUSINESS,
'' EMPLOYMENT_TYPE,'' EMPDESG,'' OCCUPATION,cast('' as numeric(18,4)) ANNUAL_INCOME,'' GUARDIAN,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'' PROCESSED_FLAG,'' PROCESS_DATE,
'' SEGMENTS,'' CUSTOMERNAME,'' CONTACT_PERSON_NAME,'' CONSTITUTION,'' CUST_BANK_NAME,'' CUST_BANK_BRANCH,cast('' as numeric(10,2)) EMI_CARD_LIMIT,
'' EMI_CARD_ACCEPT_FLAG,'' EMI_CARD_SWIPE_FLAG,'' EMI_CARD_ELIG,'' EMI_CARD_NO,'' BANK_ECS_MANDATE,'' OPEN_ECS_AVLB,
'' OPEN_ECS_DATE,'' BUSINESS_YEAR,'' TITLE,'' COMP_NAME,'' YEARS_CURR_JOB,'' GRADE,'' FAMILY_CODE,'' MINOR,'' GUARDIAN_NEW,
'' UCIN_NO,'' PREFERRED_ELIGIBILITY,'' PREFERRED_CARD_ACCEPTANCE,cast('' as numeric(10,2)) PREFERRED_CARD_LIMIT,'' CUST_BRANCHID,'' BATCH_ID 
from customers T1 
left join CustomerAddresses t2 on t1.custid=t2.custid 
left join CustomerEMails T3 on T3.custid=T1.custid
left join CustomerPhoneNumbers T4 on T4.phonecustid=T1.custid and T4.phonetypecode like 'MOBILE%'
left join CustomerPhoneNumbers T5 on T5.phonecustid=T1.custid and T5.phonetypecode like 'FAX%'
left join BMTGenders T6 on t6.gendercode=t1.custgendercode
			</createView>
	</changeSet>
		<changeSet id="99" author="Pruthvi">
		<createView viewName="dm_address_details_view" replaceIfExists="true">
		select '' ADDRESSID,t1.custid CUSTOMERID,'' STATEID,'' REGIONID,'' CITY,T3.Phonecountrycode STDISD,'' MAILINGADDRESS,CustAddrHnbr ADDRESS1,CustAddrStreet ADDRESS2,CustAddrCity ADDRESS3,
CustAddrZip ZIPCODE,CustAddrCountry COUNTRY,CustAddrType ADDRESSTYPE,'' APPLICANT_TYPE,'' PHONE1,'' PHONE2,T4.Phonecountrycode||T4.phoneareacode||T4.phonenumber MOBILE,custemail EMAIL,(select SysParmValue  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE') BUSINESSDATE,'' PROCESSFLAG,
'' PROCESS_DATE,CustAddrProvince AREA,'' LANDMARK,'' BUSINESS_YEAR,'' BATCH_ID 
from customers T1
Inner join CustomerAddresses t2 on t1.custid=t2.custid 
Inner join customerphonenumbers T3 on t3.phonecustid=T1.custid
left join CustomerPhoneNumbers T4 on T4.phonecustid=T1.custid and T4.phonetypecode like 'MOBILE%'
left join CustomerEMails T3 on T3.custid=T1.custid
			</createView>
	</changeSet>
	<changeSet id="100" author="prasad">
	<sql>
	Update CUSTOMERPHONENUMBERS set Phonenumber=${call.substr}(PhoneCountrycode||PhoneAreacode||Phonenumber,1,10),PhoneCountrycode=null,PhoneAreacode=null;
	</sql>
	</changeSet>
	<changeSet id="101" author="prasad" dbms="oracle">
	<sql>
	alter table postings_temp modify userbranch null;
	</sql>
	</changeSet>
	<changeSet id="102" author="prasad" dbms="mssql">
	<sql>
	alter table postings_temp alter column userbranch null;
	</sql>
	</changeSet>
	<changeSet id="103" author="prasad" >
	<sql>
	Update SECROLES set Roledesc='LOAN ORIGINATION MAKER' where rolecD='LOAN_ORG_MAKER';
   Update SECROLES set Roledesc='LOAN ORIGINATION APPROVER' where rolecD='LOAN_ORG_APPROVER';
		</sql>
	</changeSet>
	
	<changeSet id="104" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_AVIEW" replaceIfExists="true">
			  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc, T1.PayOrder , T1.LogKey, T3.AccountNo PartnerBankAc, T3.AcType PartnerBankAcType
			 From FinReceiptDetail T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="105" author="Siva">
		<createView viewName="FINRECEIPTDETAIL_TVIEW" replaceIfExists="true">
	  Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc , T1.PayOrder, T1.LogKey, T3.AccountNo PartnerBankAc, T3.AcType PartnerBankAcType
			 From FinReceiptDetail_Temp T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
		<changeSet id="107" author="prasad" dbms="oracle">
	<sql>
	alter table postings modify userbranch null;
	</sql>
	</changeSet>
	<changeSet id="107" author="prasad" dbms="mssql">
	<sql>
	alter table postings alter column userbranch null;
	</sql>
	</changeSet>
	<changeSet id="108" author="Madhubabu">
		<addColumn tableName="RejectFinScheduledetails">
			<column name="PresentmentId" type="number(19,0)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="109" author="chaitanya.ch">
		<createView viewName="POSTINGS_VIEW" replaceIfExists="true">
			SELECT     T1.LinkedTranId, T1.Postref, T1.PostingId, T1.finReference, T1.FinEvent, T1.PostDate, T1.ValueDate, T1.TranCode, T1.RevTranCode, T1.DrOrCr, 
                      T1.Account, T1.PostAmount, T1.PostStatus, T1.ErrorId, T1.ErrorMsg, T2.AEEventCodeDesc LovDescEventCodeName, 
                      T1.ShadowPosting, T1.TranDesc, T1.AmountType, T1.AcCcy, T1.PostBranch
FROM          Postings T1 INNER JOIN
                       BMTAEEvents T2 ON T1.FinEvent = T2.AEEventCode
		
		</createView>
	</changeSet>
	
	<changeSet id="110" author="chaitanya.ch">
		<sql>	
			Insert into RMTAccountTypes Values( 'EMIRE', 'EMI Receivables' , 'L',null, '1','0',null,'1','1',1000,CURRENT_TIMESTAMP, 'Approved', null, null,
			null, null, null, 0, 'A', 0, '0', 1, 2, 2 );
		</sql>
	</changeSet>
	 
	<changeSet id="111" author="chaitanya.ch">
		<sql>
				Delete from RMTAccountTypes where AcType = 'INTINC';
		
			Insert into RMTAccountTypes Values( 'INTINC', 'Interest Income' , 'L',null, '1','0',null,'1','1',1000,CURRENT_TIMESTAMP, 'Approved', null, null,
			null, null, null, 0, 'A', 0,'0', 1, 2, 2 );
			
		
		</sql>
	</changeSet>
	<changeSet id="112" author="chaitanya.ch">
		<sql>
				
      Delete from BMTAmountCodes where AllowedEvent = 'DEFRPY' and amountcode='ae_cpzChg';
      Insert into BMTAmountCodes 
      values( 'DEFRPY', 0, 'ae_cpzChg', 'Capitalization Changed now', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0  )  ;
			
		
		</sql>
	</changeSet>
	
		<changeSet id="115" author="chaitanya.ch">
		<sql>
				Delete from BMTAmountCodes where amountcode = 'ae_pftChg' and allowedevent='DEFRPY';
        Insert into BMTAmountCodes 
            values( 'DEFRPY', 0, 'ae_pftChg', 'Capitalization Changed now', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0  )  ;

			
		
		</sql>
	</changeSet>
	
	<changeSet id="116" author="kesava">
	<sql>
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuItem_Reports_RateReviewDue');
Delete from SecRights where RightName = 'menuItem_Reports_RateReviewDue';
Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuItem_Reports_RateReviewDue', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'REPORTS_ADMIN'), (Select RightID from SecRights where RightName = 'menuItem_Reports_RateReviewDue'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuItem_DelinquencyReports_DelinquentByProduct');
Delete from SecRights where RightName = 'menuItem_DelinquencyReports_DelinquentByProduct';
Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuItem_DelinquencyReports_DelinquentByProduct', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'REPORTS_ADMIN'), (Select RightID from SecRights where RightName = 'menuItem_DelinquencyReports_DelinquentByProduct'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuItem_DelinquencyReports_PortfolioBehavior');
Delete from SecRights where RightName = 'menuItem_DelinquencyReports_PortfolioBehavior';
Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuItem_DelinquencyReports_PortfolioBehavior', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'REPORTS_ADMIN'), (Select RightID from SecRights where RightName = 'menuItem_DelinquencyReports_PortfolioBehavior'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuCat_Reports');
Delete from SecRights where RightName = 'menuCat_Reports';
Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuCat_Reports', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'REPORTS_ADMIN'), (Select RightID from SecRights where RightName = 'menuCat_Reports'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
</sql>
	</changeSet>
			<changeSet id="117" author="kesava">
	<sql>
	Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuCat_DelinquencyReports');
Delete from SecRights where RightName = 'menuCat_DelinquencyReports';
Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuCat_DelinquencyReports', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'REPORTS_ADMIN'), (Select RightID from SecRights where RightName = 'menuCat_DelinquencyReports'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );

Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	</sql>
	</changeSet>
	
	<changeSet id="118" author="chaitanya.ch">
	<sql>
	
		      
            Delete from BMTAmountCodes where AllowedEvent = 'EMIDAY';

      Insert into BMTAmountCodes 
      values( 'EMIDAY', 0, 'ae_cpzChg', 'Capitalization Changed now', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0  )  ;
        

 Insert into BMTAmountCodes 
            values( 'EMIDAY', 0, 'ae_pftChg', 'Interest Changed now', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0  )  ;
	
	</sql>
	
	</changeSet>
	
	<changeSet id="119" author="chaitanya.ch">
	<sql>
	 		      
            Delete from BMTAmountCodes where AllowedEvent = 'REAGING';

      Insert into BMTAmountCodes 
      values( 'REAGING', 0, 'ae_cpzChg', 'Capitalization Changed now', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0  )  ;
        

 Insert into BMTAmountCodes 
            values( 'REAGING', 0, 'ae_pftChg', 'Interest Changed now', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0  )  ;
 
 
 
	
	</sql>
	
	
	</changeSet>
	
	<changeSet id="120" author="Prasad">
	<sql>
delete from RMTTRANSACTIONENTRY where Accountsetid in (Select Accountsetid from RMTACCOUNTINGSET where Accountsetcode='DEFAULT');
Delete from RMTACCOUNTINGSET where Accountsetcode='DEFAULT';
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'DISBINS','DEFAULT','disb instruction posting',0,0,3,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'ADDDBSP','DEFAULT','Disbursement Past for Originatio',0,0,18,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'ADDDBSN','DEFAULT','No Entries',0,1,0,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'AMZ','DEFAULT','Default Accounting for Daily Amortization',0,1,3,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'DEFRPY','DEFAULT','Postponement',0,0,2,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'EARLYPAY','DEFAULT','Partial Payment',0,1,0,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'EARLYSTL','DEFAULT','Early Settlement / Foreclosure',0,0,1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'INSTDATE','DEFAULT','Installment Due Date Postings',0,1,0,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'LATEPAY','DEFAULT','Late payment penalty recovery postings',0,0,1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'RATCHG','DEFAULT','Rate Change Accounting',0,1,2,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'REPAY','DEFAULT','Repayment Accounting',0,0,1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'SCDCHG','DEFAULT','Schedule Change Accounting',0,0,4,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'WRITEOFF','DEFAULT','No Entries',0,1,0,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'EMIDAY','DEFAULT','No Entries',0,0,2,1000,current_timestamp,'Approved',null,null,null,null,null,0);
Insert into RMTACCOUNTINGSET (ACCOUNTSETID,EVENTCODE,ACCOUNTSETCODE,ACCOUNTSETCODENAME,ENTRYBYINVESTMENT,SYSTEMDEFAULT,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ((Select coalesce(max(AccountSetID),0)+1 from RMTAccountingSet),'REAGING','DEFAULT','Default Re aging Entries',0,0,3,1000,current_timestamp,'Approved',null,null,null,null,null,0);

Update SeqRMTACCOUNTINGSET set seqno=(Select max(AccountSetID)+1 from RMTAccountingSet);
</sql>	
	</changeSet>
<changeSet id="121" author="Prasad">
	<sql>
	
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='AMZ' and ACCOUNTSETCODE='DEFAULT'),10,'Daily Amortization Amount','D',0,'UMFC',null,'BUILD','GLCODE','010','510','Result = ae_dAmz;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='AMZ' and ACCOUNTSETCODE='DEFAULT'),20,'Daily Ammortization Amount','C',0,'INTINC',null,'BUILD','GLCODE','510','010','Result = ae_dAmz;',null,null,'D',0,0,6,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='DEFRPY' and ACCOUNTSETCODE='DEFAULT'),10,'Interest Change due to postponement','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_pftChg;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='DEFRPY' and ACCOUNTSETCODE='DEFAULT'),20,'Interest Change due to postponement','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = ae_pftChg;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),50,'EMI in advance','D',0,'INSTA',null,'BUILD','GLCODE','010','010','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),60,'EMI in advance','C',0,'RESCH',null,'BUILD','GLCODE','010','510','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),70,'Payable Advise','D',0,'PAYADV',null,'BUILD','GLCODE','010','010','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),80,'Payable Advise','C',0,'RESCH',null,'BUILD','GLCODE','010','510','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),90,'Installment amount in PD','D',0,'RESCH',null,'BUILD','GLCODE','010','010','Result = ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),100,'Installment amount in PD','C',0,'EMIRE',null,'BUILD','GLCODE','010','510','Result = ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),110,'Remaining amount','D',0,'RESCH',null,'BUILD','GLCODE','010','010','Result = ae_rpTot - ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),120,'Remaining amount','C',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_rpTot - ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),130,'Interest Amount Changed','D',0,'UMFC',null,'BUILD','GLCODE','010','510','Result = ae_pftChg;',null,null,'D',0,0,5,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),140,'Interest Amount Changed','C',0,'LOAN',null,'BUILD','GLCODE','510','010','Result = ae_pftChg;',null,null,'D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),150,'Late Payment Penlaty','D',0,'RESCH',null,'BUILD','GLCODE','010','510','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),160,'Late Payment Penlaty','C',0,'PENIN',null,'BUILD','GLCODE','510','010','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),10,'Settlement Amount','D',0,'BANK',null,'BUILD','GLCODE','010','010','Result = ae_rpTot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),20,'Settlement Amount','C',0,'RESCH',null,'BUILD','GLCODE','010','510','Result = ae_rpTot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),30,'Excess Amount','D',0,'XCESS',null,'BUILD','GLCODE','010','010','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYPAY' and ACCOUNTSETCODE='DEFAULT'),40,'Excess Amount','C',0,'RESCH',null,'BUILD','GLCODE','010','510','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),10,'Settlement Amount','D',0,'BANK',null,'BUILD','GLCODE','010','010','Result = ae_rpTot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),20,'Settlement Amount','C',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_rpTot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),240,'Excess Amount','C',0,'BANK',null,'BUILD','GLCODE','510','010','Result = ae_excessBal;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),230,'Excess Amount','D',0,'XCESS',null,'BUILD','GLCODE','010','510','Result = ae_excessBal;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),220,'Interest Waived-Off','C',0,'INTEX',null,'BUILD','GLCODE','510','010','Result = ae_pftAB - ae_rpPft;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),210,'Interest Waived-Off','D',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_pftAB - ae_rpPft;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),200,'Principal Waived-Off','C',0,'PRNEX',null,'BUILD','GLCODE','510','010','Result = ae_priAB - ae_rpPri;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),190,'Principal Waived-Off','D',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_priAB - ae_rpPri;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),180,'Fore closure penalty','C',0,'FCLIN',null,'BUILD','GLCODE','510','010','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),170,'Fore closure penalty','D',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),160,'Late Payment Penlaty','C',0,'PENIN',null,'BUILD','GLCODE','510','010','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),30,'Excess Amount','D',0,'XCESS',null,'BUILD','GLCODE','010','010','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),40,'Excess Amount','C',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),50,'EMI in advance','D',0,'INSTA',null,'BUILD','GLCODE','010','010','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),60,'EMI in advance','C',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),70,'Payable Advise','D',0,'PAYADV',null,'BUILD','GLCODE','010','010','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),80,'Payable Advise','C',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),90,'Installment amount in PD','D',0,'TERMI',null,'BUILD','GLCODE','010','010','Result = ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),100,'Installment amount in PD','C',0,'EMIRE',null,'BUILD','GLCODE','010','510','Result = ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),110,'Remaining amount','D',0,'TERMI',null,'BUILD','GLCODE','010','010','Result = ae_priAB + ae_pftAB - ae_insttot - ae_amzBal;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),120,'Remaining amount','C',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_priAB + ae_pftAB - ae_insttot - ae_amzBal;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),130,'Interest Amount Changed','D',0,'UMFC',null,'BUILD','GLCODE','010','010','Result = ae_pftChg;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),140,'Interest Amount Changed','C',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_pftChg;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EARLYSTL' and ACCOUNTSETCODE='DEFAULT'),150,'Late Payment Penlaty','D',0,'TERMI',null,'BUILD','GLCODE','010','510','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='INSTDATE' and ACCOUNTSETCODE='DEFAULT'),50,'Service Fee Scheduled Today','D',0,'EMIRE',null,'BUILD','GLCODE','010','510','Result = SERVFEE_SCH;',null,'SERVFEE','D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='INSTDATE' and ACCOUNTSETCODE='DEFAULT'),60,'Service Fee Scheduled Today','C',0,'SERIN',null,'BUILD','GLCODE','510','010','Result = SERVFEE_SCH;',null,'SERVFEE','D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='INSTDATE' and ACCOUNTSETCODE='DEFAULT'),10,'Installment Due today','D',0,'EMIRE',null,'BUILD','GLCODE','010','510','Result = ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='INSTDATE' and ACCOUNTSETCODE='DEFAULT'),20,'Installment Due today','C',0,'LOAN',null,'BUILD','GLCODE','510','010','Result = ae_insttot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='INSTDATE' and ACCOUNTSETCODE='DEFAULT'),30,'Processing Fee Scheduled Today','D',0,'EMIRE',null,'BUILD','GLCODE','010','510','Result = PROCFEE_SCH;',null,'PROCFEE','D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='INSTDATE' and ACCOUNTSETCODE='DEFAULT'),40,'Processing Fee Scheduled Today','C',0,'PROIN',null,'BUILD','GLCODE','510','010','Result = PROCFEE_SCH;',null,'PROCFEE','D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='LATEPAY' and ACCOUNTSETCODE='DEFAULT'),10,'Late Payment Penlaty','D',0,'BANK',null,'BUILD','GLCODE','010','510','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='LATEPAY' and ACCOUNTSETCODE='DEFAULT'),20,'Late Payment Penlaty','C',0,'PENIN',null,'BUILD','GLCODE','510','010','Result = ae_penaltyPaid;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='RATCHG' and ACCOUNTSETCODE='DEFAULT'),10,'Change in the interest amount','D',0,'UMFC',null,'BUILD','GLCODE','010','510','Result = ae_pftChg;',null,null,'D',0,0,5,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='RATCHG' and ACCOUNTSETCODE='DEFAULT'),20,'Change in the interest amount due to RATCHG','C',0,'LOAN',null,'BUILD','GLCODE','510','010','Result = ae_pftChg;',null,null,'D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),40,'Repayment Amount from EMI in advance','C',0,'EMIRE',null,'BUILD','GLCODE','510','010','Result = ae_emiInAdvance;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),50,'Repayment Amount from Excess','D',0,'XCESS',null,'BUILD','GLCODE','010','510','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),30,'Repayment Amount from EMI in advance','D',0,'INSTA',null,'BUILD','GLCODE','010','510','Result = ae_emiInAdvance;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),20,'Repayment Amount from Banking','C',0,'EMIRE',null,'BUILD','GLCODE','510','010','Result = ae_rpTot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),10,'Repayment Amount from Banking','D',0,'BANK',null,'BUILD','GLCODE','010','510','Result = ae_rpTot;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),80,'Repayment Amount from Payable Advice','C',0,'EMIRE',null,'BUILD','GLCODE','510','010','Result = ae_payableAdvise;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),70,'Repayment Amount from Payable Advice','D',0,'PAYADV',null,'BUILD','GLCODE','010','510','Result = ae_payableAdvise;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REPAY' and ACCOUNTSETCODE='DEFAULT'),60,'Repayment Amount from Excess','C',0,'EMIRE',null,'BUILD','GLCODE','510','010','Result = ae_excessAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='SCDCHG' and ACCOUNTSETCODE='DEFAULT'),20,'Interest Amount ','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = ae_pftChg;',null,null,'D',0,0,1,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='SCDCHG' and ACCOUNTSETCODE='DEFAULT'),10,'Loan Account ','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_pftChg;',null,null,'D',0,0,1,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EMIDAY' and ACCOUNTSETCODE='DEFAULT'),20,'Change in the interest amount due to EMI Holiday','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = ae_pftChg;',null,null,'D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='EMIDAY' and ACCOUNTSETCODE='DEFAULT'),10,'Change in the interest amount due to EMI Holiday','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_pftChg;',null,null,'D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REAGING' and ACCOUNTSETCODE='DEFAULT'),10,'Change in the interest amount due to Reage','D',0,'BANK',null,'BUILD','GLCODE','010','510','Result = ae_pftChg;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='REAGING' and ACCOUNTSETCODE='DEFAULT'),20,'Change in the interest amount due to Reage','C',0,'PENIN',null,'BUILD','GLCODE','510','010','Result = ae_pftChg;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),50,'DISBURSEMENT CONTROL A/C','D',0,'DISB',null,'BUILD','GLCODE','010','510','Result = ae_deductFeeDisb + ae_addFeeToFinance+ ae_bpi;',null,null,'D',0,0,6,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),130,'Initial Money Receivable','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P - DOCFEE_SCH;',null,'DOCFEE','D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),120,'PRE EMI INTEREST','C',0,'PREIN',null,'BUILD','GLCODE','510','010','Result = ae_bpi;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),110,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = ae_bpi;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),10,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_disburse+ ae_addFeeToFinance;',null,null,'D',0,0,8,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),90,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = SERVFEE_C - SERVFEE_W - SERVFEE_P - SERVFEE_SCH;',null,'SERVFEE','D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),100,'SERVICING FEES','C',0,'SERIN',null,'BUILD','GLCODE','510','010','Result = SERVFEE_C - SERVFEE_W - SERVFEE_P - SERVFEE_SCH;',null,'SERVFEE','D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),20,'DISBURSEMENT CONTROL A/C','C',0,'DISB',null,'BUILD','GLCODE','510','010','Result = ae_disburse+ ae_addFeeToFinance;',null,null,'D',0,0,8,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),80,'PROCESSING FEES','C',0,'PROIN',null,'BUILD','GLCODE','510','010','Result = PROCFEE_C - PROCFEE_W - PROCFEE_P - PROCFEE_SCH;',null,'PROCFEE','D',0,0,5,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),70,'INITIAL MONEY RECEIVABLE','D',0,'INITI',null,'BUILD','GLCODE','010','510','Result = PROCFEE_C - PROCFEE_W - PROCFEE_P - PROCFEE_SCH;',null,'PROCFEE','D',0,0,5,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),60,'INITIAL MONEY RECEIVABLE','C',0,'INITI',null,'BUILD','GLCODE','510','010','Result = ae_deductFeeDisb + ae_addFeeToFinance+ ae_bpi;',null,null,'D',0,0,6,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),140,'Document Fees ','C',0,'DISC',null,'BUILD','GLCODE','510','010','Result = DOCFEE_C- DOCFEE_W - DOCFEE_P - DOCFEE_SCH;',null,'DOCFEE','D',0,0,4,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),40,'UMFC A/C','C',0,'UMFC',null,'BUILD','GLCODE','510','010','Result = ae_pftChg- ae_bpi;',null,null,'D',0,0,5,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='ADDDBSP' and ACCOUNTSETCODE='DEFAULT'),30,'LOAN A/C','D',0,'LOAN',null,'BUILD','GLCODE','010','510','Result = ae_pftChg- ae_bpi;',null,null,'D',0,0,6,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='DISBINS' and ACCOUNTSETCODE='DEFAULT'),20,'Partner Bank','C',0,'BANK',null,'BUILD','GLCODE','510','010','Result = ae_disbInstAmt;',null,null,'D',0,0,2,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
Insert into RMTTRANSACTIONENTRY (ACCOUNTSETID,TRANSORDER,TRANSDESC,DEBITCREDIT,SHADOWPOSTING,ACCOUNTTYPE,ACCOUNTBRANCH,ACCOUNT,ACCOUNTSUBHEADRULE,TRANSCATIONCODE,RVSTRANSACTIONCODE,AMOUNTRULE,RULEDECIDER,FEECODE,CHARGETYPE,ENTRYBYINVESTMENT,OPENNEWFINAC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,POSTTOSYS,DERIVEDTRANORDER) values ((Select Accountsetid from RMTACCOUNTINGSET where Eventcode='DISBINS' and ACCOUNTSETCODE='DEFAULT'),10,'Disbursement Control Account ','D',0,'DISB',null,'BUILD','GLCODE','010','510','Result = ae_disbInstAmt;',null,null,'D',0,0,3,0,current_timestamp,'Approved',null,null,null,null,null,0,'E',0);
</sql>	
	</changeSet>
<changeSet id="122" author="Prasad">
	<sql>
Delete from BMTAEEVENTS;
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('SEGCHG','Segment Change',1,1007,current_timestamp,null,null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('STAGE','Workflow Stage Event',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('VASACRUL','Accounting on Accrual ',1,1000,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('VASFEE','Accounting on Fee Collection',1,1000,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('VENCOM','Vendor or Supplier Commission',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('WRITEBK','Finance Writeoff Book Keeping',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('WRITEOFF','Write off',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('AMZPD','Accrual in PD',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('ADDDBSF','Add Disbursement future date',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,0,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('ADDDBSN','Add Disbursement future date on actual event',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,0,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('ADDDBSP','Add Disbursement',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('AMENDMNT','Amendments',1,1007,current_timestamp,null,null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('AMZ','Accruals',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('AMZ_MON','Amortization Monthly',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('AMZSUSP','Daily Amortization in suspense',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('CANFIN','Cancel Financce',0,1000,current_timestamp,null,null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('CMTDISB','Commitment Disbursements',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('CMTRPY','Repayment for Revolving Commitments',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('COMMINV','Commodity Inventory Purchase',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('COMMINVD','Commodity Inventory Reject',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('COMMINVM','Commodity Inventory Maintain',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('COMPOUND','Capitalization',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('DEFFRQ','Defferment Frequency',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('DEFRPY','Postponement',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('DPRCIATE','Depreciation',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,0,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('EARLYPAY','Partial Payment',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('EARLYSTL','Early settlement',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('EMIDAY','EMI Holiday',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('GRACEEND','Finance Grace End',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,0,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('INSTDATE','Installment Date',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('LATEPAY','Overdue Payment',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('M_AMZ','Move to Suspense to Amortization',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('M_NONAMZ','Move to Amortization to suspense',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('MATURITY','Maturity Process',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('MNTCMT','Maintain Commitment Account ',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('NEWCMT','Commitment Account ',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('NORM_PD','Move from Normal to PD',1,1007,current_timestamp,null,null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('NORM_PIS','Normal to PIS',1,1000,current_timestamp,'Approved',null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('PD_NORM','Move from PD to Normal',1,1007,current_timestamp,null,null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('PD_PIS','Move from PD to PIS',1,1007,current_timestamp,null,null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('PIS_NORM','PIS to Normal',1,1000,current_timestamp,'Approved',null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('PIS_PD','Move from PIS to PD',1,1007,current_timestamp,null,null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('PRGCLAIM','Progress Claim for Billing',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('PROVSN','Provision',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('RATCHG','Rate Change',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('REAGING','Reaging',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('REPAY','Installment Repayment',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,1);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('SCDCHG','Schedule Change',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('HLDEMI','HOLDEMI',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,0,0,0);
Insert into BMTAEEVENTS (AEEVENTCODE,AEEVENTCODEDESC,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,ACTIVE,MANDATORY,ODAPPLICABLE) values ('DISBINS','Disbursement Instructions',1,1007,current_timestamp,'Approved',null,null,null,null,null,0,1,1,0);
</sql>	
	</changeSet>
	<changeSet id="123" author="Prasad">
	<sql>
	Delete from FinTypeAccounting;
	insert into FinTypeAccounting 
select FinType, EventCode, AccountSetID, 0, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0, 1 
from RMTAccountingSet, RMTFinanceTypes where AccountsetCode = 'DEFAULT' ;
	</sql>	
	</changeSet>
	
</databaseChangeLog>