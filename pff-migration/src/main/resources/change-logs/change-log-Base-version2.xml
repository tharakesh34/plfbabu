<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	
	<changeSet id="pre_run_for_pgp" author="Jayant" runAlways="true" dbms="postgresql" >
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>	
	</changeSet>
	<changeSet id="1" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERADDRESSES_VIEW cascade;
		</sql>
	</changeSet>
	<changeSet id="2" author="Surekha">
	<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
		SELECT t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses_temp t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
UNION ALL
 SELECT  t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
  WHERE NOT (EXISTS ( SELECT 1
           FROM customeraddresses_temp
          WHERE customeraddresses_temp.custid = t1.custid AND customeraddresses_temp.custaddrtype = t1.custaddrtype))
	</createView>
	</changeSet>
	<changeSet id="3" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERS_AVIEW cascade;
		</sql>
	</changeSet>
	<changeSet id="4" author="Jayant">
		<createView viewName="CUSTOMERS_AVIEW" replaceIfExists="true">
			SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5, T1.Version,T1.CUSTSOURCEID, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName,
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName,T17.bankrefno as branchRefno, T17.branchSwiftBrnCde custSwiftBrnCode,T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, 
                      T1.DedupFound, T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.CustRelation, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID, T1.SalariedCustomer,T31.TargetDesc lovDescTargetName,
                      T1.custSuspSts, T1.custSuspDate, T1.custSuspTrigger,COALESCE(t32.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage
FROM          Customers T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode LEFT OUTER  JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
                       LEFT JOIN secroles t32 ON t1.nextrolecode = t32.rolecd
		</createView>
	</changeSet>
	<changeSet id="5" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERS_TVIEW cascade;
		</sql>
	</changeSet>
	<changeSet id="6" author="Jayant">
		<createView viewName="CUSTOMERS_TVIEW" replaceIfExists="true">
			SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5,T1.CUSTSOURCEID, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName,  
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName,T17.bankrefno as branchRefno, T17.branchSwiftBrnCde custSwiftBrnCode, T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, 
                      T1.DedupFound, T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID,T1.SalariedCustomer,T31.TargetDesc lovDescTargetName,T1.custRelation,T1.custSuspSts,T1.custSuspDate,T1.custSuspTrigger
					, COALESCE(t32.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage
FROM          Customers_Temp T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode INNER JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
                       LEFT JOIN secroles t32 ON t1.nextrolecode = t32.rolecd
		</createView>
	</changeSet>
	<changeSet id="7" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERADDRESSES_AVIEW cascade;
		</sql>
	</changeSet>
		<changeSet id="8" author="Surekha">
	<createView viewName="CUSTOMERADDRESSES_AVIEW" replaceIfExists="true">
		SELECT t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    	t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    	t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    	t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    	t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   		FROM customeraddresses t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
     </createView>
     </changeSet>
     <changeSet id="9" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERADDRESSES_VIEW cascade;
		</sql>
	</changeSet>
     <changeSet id="10" author="Surekha">
	<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
		SELECT t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses_temp t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
UNION ALL
 SELECT  t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
  WHERE NOT (EXISTS ( SELECT 1
           FROM customeraddresses_temp
          WHERE customeraddresses_temp.custid = t1.custid AND customeraddresses_temp.custaddrtype = t1.custaddrtype))
	</createView>
	</changeSet>
	<changeSet id="1" author="Haritha" dbms="postgresql">
		 <sql>
		 	drop view Reasons_View cascade;
		 </sql>
	</changeSet>
	
	<changeSet id="2" author="Haritha">
	<createView viewName="Reasons_View" replaceIfExists="true">
	SELECT T1.id,T1.reasontypeid, T1.reasoncategoryid, T1.code, T1.description,T1.active,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,
             T1.rolecode,T1.nextrolecode,T1.taskid,T1.nexttaskid,T1.recordtype,T1.workflowid,
             T2.code reasonCategoryCode,T3.code reasonTypeCode
            FROM reasons_temp T1
    inner join reasoncategory T2 on T1.reasoncategoryid=T2.id 
    inner join reasontypes T3 on T1.reasontypeid=T3.id
    UNION ALL
    SELECT T1.id,T1.reasontypeid,T1.reasoncategoryid,T1.code,T1.description,T1.active,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,
             T1.rolecode,T1.nextrolecode,T1.taskid,T1.nexttaskid,T1.recordtype,T1.workflowid,
             T2.code reasonCategoryCode,T3.code reasonTypeCode
             FROM reasons T1
   inner join reasoncategory T2 on T1.reasoncategoryid=T2.id 
   inner join reasontypes T3 on T1.reasontypeid=T3.id
   WHERE NOT (EXISTS ( SELECT 1 FROM reasons_temp WHERE id = T1.id));	
	</createView>
</changeSet>
 </databaseChangeLog>