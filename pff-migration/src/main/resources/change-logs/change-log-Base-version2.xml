<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	
	<changeSet id="pre_run_for_pgp" author="Jayant" runAlways="true" dbms="postgresql" >
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>	
	</changeSet>
	<changeSet id="1" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERADDRESSES_VIEW cascade;
		</sql>
	</changeSet>
	<changeSet id="2" author="Surekha">
	<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
		SELECT t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses_temp t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
UNION ALL
 SELECT  t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
  WHERE NOT (EXISTS ( SELECT 1
           FROM customeraddresses_temp
          WHERE customeraddresses_temp.custid = t1.custid AND customeraddresses_temp.custaddrtype = t1.custaddrtype))
	</createView>
	</changeSet>
	<changeSet id="3" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERS_AVIEW cascade;
		</sql>
	</changeSet>
	<changeSet id="4" author="Jayant">
		<createView viewName="CUSTOMERS_AVIEW" replaceIfExists="true">
			SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5, T1.Version,T1.CUSTSOURCEID, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName,
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName,T17.bankrefno as branchRefno, T17.branchSwiftBrnCde custSwiftBrnCode,T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, 
                      T1.DedupFound, T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.CustRelation, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID, T1.SalariedCustomer,T31.TargetDesc lovDescTargetName,
                      T1.custSuspSts, T1.custSuspDate, T1.custSuspTrigger,COALESCE(t32.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage
FROM          Customers T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode LEFT OUTER  JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
                       LEFT JOIN secroles t32 ON t1.nextrolecode = t32.rolecd
		</createView>
	</changeSet>
	<changeSet id="5" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERS_TVIEW cascade;
		</sql>
	</changeSet>
	<changeSet id="6" author="Jayant">
		<createView viewName="CUSTOMERS_TVIEW" replaceIfExists="true">
			SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5,T1.CUSTSOURCEID, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName,  
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName,T17.bankrefno as branchRefno, T17.branchSwiftBrnCde custSwiftBrnCode, T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, 
                      T1.DedupFound, T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID,T1.SalariedCustomer,T31.TargetDesc lovDescTargetName,T1.custRelation,T1.custSuspSts,T1.custSuspDate,T1.custSuspTrigger
					, COALESCE(t32.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage
FROM          Customers_Temp T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode INNER JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
                       LEFT JOIN secroles t32 ON t1.nextrolecode = t32.rolecd
		</createView>
	</changeSet>
	<changeSet id="7" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERADDRESSES_AVIEW cascade;
		</sql>
	</changeSet>
		<changeSet id="8" author="Surekha">
	<createView viewName="CUSTOMERADDRESSES_AVIEW" replaceIfExists="true">
		SELECT t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    	t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    	t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    	t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    	t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   		FROM customeraddresses t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
     </createView>
     </changeSet>
     <changeSet id="9" author="Jayant" dbms="postgresql">
		<sql>
			drop view CUSTOMERADDRESSES_VIEW cascade;
		</sql>
	</changeSet>
     <changeSet id="10" author="Surekha">
	<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
		SELECT t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses_temp t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
UNION ALL
 SELECT  t1.custid,t1.custaddrtype,t2.addrtypedesc AS lovdesccustaddrtypename,t1.custaddrhnbr,t1.custflatnbr,t1.custaddrstreet,
    t1.custaddrline1,t1.custaddrline2,t1.CustAddrLine3,t1.CustAddrLine4,t1.CustDistrict,t1.custpobox, t1.custaddrcity,t1.typeofresidence, t3.pccityname AS lovdesccustaddrcityname,
    t1.custaddrprovince,t4.cpprovincename AS lovdesccustaddrprovincename,t1.custaddrcountry,t5.countrydesc AS lovdesccustaddrcountryname,
    t1.custaddrzip,t1.custaddrphone,t1.custaddrfrom,t1.custaddrpriority,t1.version,t1.lastmntby,t1.lastmnton,t1.recordstatus,t1.rolecode,
    t1.nextrolecode,t1.taskid,t1.nexttaskid,t1.recordtype,t1.workflowid,t6.areaname AS lovdesccustaddrzip
   FROM customeraddresses t1
     LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
  WHERE NOT (EXISTS ( SELECT 1
           FROM customeraddresses_temp
          WHERE customeraddresses_temp.custid = t1.custid AND customeraddresses_temp.custaddrtype = t1.custaddrtype))
	</createView>
	</changeSet>
	<changeSet id="1" author="Haritha" dbms="postgresql">
		 <sql>
		 	drop view Reasons_View cascade;
		 </sql>
	</changeSet>
	
	<changeSet id="2" author="Haritha">
	<createView viewName="Reasons_View" replaceIfExists="true">
	SELECT T1.id,T1.reasontypeid, T1.reasoncategoryid, T1.code, T1.description,T1.active,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,
             T1.rolecode,T1.nextrolecode,T1.taskid,T1.nexttaskid,T1.recordtype,T1.workflowid,
             T2.code reasonCategoryCode,T3.code reasonTypeCode
            FROM reasons_temp T1
    inner join reasoncategory T2 on T1.reasoncategoryid=T2.id 
    inner join reasontypes T3 on T1.reasontypeid=T3.id
    UNION ALL
    SELECT T1.id,T1.reasontypeid,T1.reasoncategoryid,T1.code,T1.description,T1.active,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,
             T1.rolecode,T1.nextrolecode,T1.taskid,T1.nexttaskid,T1.recordtype,T1.workflowid,
             T2.code reasonCategoryCode,T3.code reasonTypeCode
             FROM reasons T1
   inner join reasoncategory T2 on T1.reasoncategoryid=T2.id 
   inner join reasontypes T3 on T1.reasontypeid=T3.id
   WHERE NOT (EXISTS ( SELECT 1 FROM reasons_temp WHERE id = T1.id))	
	</createView>
</changeSet>
<changeSet id="3" author="somasekhar" >
		<createSequence sequenceName="SeqCustomerAddresses" startValue="1" incrementBy="1" maxValue="999999999999" cycle="false"/>
</changeSet>
<changeSet id="4" author="somasekhar" >
		<createSequence sequenceName="SeqFinASSETTYPES" startValue="1" incrementBy="1" maxValue="999999999999" cycle="false"/>
</changeSet>
<changeSet id="5" author="somasekhar" >
		<createSequence sequenceName="SeqReceiptAllocationDetail" startValue="1" incrementBy="1" maxValue="999999999999" cycle="false"/>
</changeSet>
<changeSet id="11" author="Jayant">
		<createView viewName="LIMITHEADER_VIEW" replaceIfExists="true">
			 SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue,T8.QueryDesc , T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId, T4.CustCIF,
T4.CustShrtName, 
                      T4.CustFName CustFName, T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,
T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName,T6.ShowLimitsIn, T1.LimitSetupRemarks,T1.Rebuild,T1.Active, T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.
LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader_Temp T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                       CustomerGroups T3 ON T1.CustomerGroup = T3.CustGrpID LEFT OUTER JOIN
                       Customers_AView T4 ON T1.CustomerId = T4.CustID  LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode 

UNION ALL 
SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup, T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId,T4.CustCIF, 
T4.CustShrtName, 
                      T4.CustFName CustFName,T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName,  T1.LimitCcy,T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName, T6.ShowLimitsIn,T1.LimitSetupRemarks,T1.Rebuild,T1.Active,T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.
LastMntOn, T2.UsrLogin, 
                      T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.
WorkflowId
FROM          LimitHeader T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                       CustomerGroups T3 ON T1.CustomerGroup = T3.CustGrpID LEFT OUTER JOIN
                       Customers_AView T4 ON T1.CustomerId = T4.CustID LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode

WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          LimitHeader_Temp
                            WHERE      HeaderId = T1.HeaderId)
		</createView>
	</changeSet>
	<changeSet id="12" author="Jayant">
		<createView viewName="LIMITHEADER_AVIEW" replaceIfExists="true">
			 SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, 
			 T1.CustomerId,T4.CustCIF, T4.CustShrtName, 
                      T4.CustFName CustFName,T4.CustMName CustMName, T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
                      T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,T1.LimitExpiryDate, 
                      T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName,T6.ShowLimitsIn, T1.LimitSetupRemarks, T1.Rebuild,T1.Active, T1.Version, 
					  T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
					  FROM          LimitHeader T1 INNER JOIN
                       LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
                       RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
                       CustomerGroups T3 ON T1.CustomerGroup = T3.CustGrpID LEFT OUTER JOIN
                       Customers_AView T4 ON T1.CustomerId = T4.CustID LEFT OUTER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
					   LimitParams T8 ON T1.RuleCode = T8.QueryCode
		</createView>
	</changeSet>
	<changeSet id="13" author="Jayant">
		<createView viewName="LIMITHEADER_TVIEW" replaceIfExists="true">
			SELECT     T1.HeaderId, T1.RuleCode, T1.RuleValue, T8.QueryDesc ,T1.CustomerGroup,T3.CustGrpCode  , T3.CustGrpDesc GroupName, T3.CustGrpRO1, T1.CustomerId,T4.CustCIF, 
			T4.CustShrtName, T4.CustFName CustFName, T4.CustMName CustMName,T4.CustLName CustFullName, T4.CustCoreBank, T4.CustSalutationCode, T4.CustDftBranch, 
            T4.lovDescCustDftBranchName CustDftBranchName, T1.ResponsibleBranch, T5.BranchDesc ResponsibleBranchName, T1.LimitCcy,T1.LimitExpiryDate, 
            T1.LimitRvwDate, T1.LimitStructureCode, T6.StructureName, T6.ShowLimitsIn,T1.LimitSetupRemarks,T1.Rebuild,T1.Active,  T1.Version, T1.CreatedBy, T1.CreatedOn, T1.LastMntBy, 
            T1.LastMntOn, T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM          LimitHeader_Temp T1 INNER JOIN
             LimitStructure T6 ON T1.LimitStructureCode = T6.StructureCode LEFT OUTER JOIN
             RMTBranches T5 ON T1.ResponsibleBranch = T5.BranchCode LEFT OUTER JOIN
             CustomerGroups T3 ON T1.CustomerGroup = T3.CustGrpID LEFT OUTER JOIN
             Customers_AView T4 ON T1.CustomerId = T4.CustID LEFT OUTER JOIN
             SecUsers T2 ON T1.LastMntBy = T2.UsrID LEFT OUTER JOIN
			 LimitParams T8 ON T1.RuleCode = T8.QueryCode
		</createView>
	</changeSet>
	<changeSet id="14" author="Jayant">
		<sql>
			DROP VIEW reasons_view cascade;
			DROP VIEW reasons_aview cascade;
		</sql>
	</changeSet>
	<changeSet id="15" author="Jayant">
		<modifyDataType tableName="Reasons" columnName="description" newDataType="varchar(200)"/>
	</changeSet>
	<changeSet id="16" author="Jayant">
	<createView viewName="reasons_view" replaceIfExists="true">
		SELECT t1.id,
    t1.reasontypeid,
    t1.reasoncategoryid,
    t1.code,
    t1.description,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.code AS reasoncategorycode,
    t3.code AS reasontypecode
   FROM reasons_temp t1
     JOIN reasoncategory t2 ON t1.reasoncategoryid = t2.id
     JOIN reasontypes t3 ON t1.reasontypeid = t3.id
UNION ALL
 SELECT t1.id,
    t1.reasontypeid,
    t1.reasoncategoryid,
    t1.code,
    t1.description,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.code AS reasoncategorycode,
    t3.code AS reasontypecode
   FROM reasons t1
     JOIN reasoncategory t2 ON t1.reasoncategoryid = t2.id
     JOIN reasontypes t3 ON t1.reasontypeid = t3.id
  WHERE NOT (EXISTS ( SELECT 1
           FROM reasons_temp
          WHERE reasons_temp.id = t1.id))
	</createView>
	</changeSet>
	<changeSet id="17" author="Jayant">
		<createView viewName="reasons_aview" replaceIfExists="true">
			SELECT t1.id,
    t1.reasontypeid,
    t1.reasoncategoryid,
    t1.code,
    t1.description,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid
   FROM reasons t1
		</createView>
	</changeSet>
	
	 <!-- <changeSet id="18" author="Prakash">
		<dropForeignKeyConstraint baseTableName="CUSTOMERS_Temp" constraintName="FK_CUSTS_TEMP_RELSHIPOFFICERS"/>
	</changeSet> 

	<changeSet id="19" author="Prakash" dbms="postgresql">
		 <sql>
		 	drop view customers_aview cascade;
		 </sql>
	</changeSet>

	<changeSet id="20" author="Prakash" dbms="postgresql">
		 <sql>
		 	drop view customers_view cascade;
		 </sql>
	</changeSet>

	<changeSet id="21" author="Prakash" dbms="postgresql">
		 <sql>
		 	drop view customers_tview cascade;
		 </sql>
	</changeSet>

	<changeSet id="22" author="Prakash" dbms="postgresql">
		 <sql>
		 	drop view dm_application_details_view cascade;
		 </sql>
	</changeSet>
	
	<changeSet id="23" author="Prakash">
		<sql>
			update Customers set custro1=0;
			update Customers_Temp set custro1=0;
		</sql>
	</changeSet>

	<changeSet id="24" author="Prakash">
	<modifyDataType tableName="customers" columnName="custro1" newDataType="bigint"/>
    <modifyDataType tableName="customers_temp" columnName="custro1" newDataType="bigint"/>
	</changeSet>


  	 <changeSet id="25" author="Prakash">
     		<createView viewName="customers_aview" replaceIfExists="true">
		     	SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.version,
    t1.custsourceid,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.rofficerdesc AS lovdesccustro1name,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    COALESCE(t32.roledesc::character varying, plf.fn_get_roledesc(t1.nextrolecode::character varying)) AS lovdescrequeststage
   FROM plf.customers t1
     LEFT JOIN plf.rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
     LEFT JOIN plf.bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
     LEFT JOIN plf.bmtempstscodes t4 ON t1.custempsts = t4.empstscode
     LEFT JOIN plf.bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
     LEFT JOIN plf.bmtindustries t7 ON t1.custindustry = t7.industrycode
     LEFT JOIN plf.bmtsectors t8 ON t1.custsector = t8.sectorcode
     LEFT JOIN plf.bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
     LEFT JOIN plf.bmtprofessions t10 ON t1.custprofession = t10.professioncode
     LEFT JOIN plf.bmtcountries t11 ON t1.custcob = t11.countrycode
     LEFT JOIN plf.bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
     LEFT JOIN plf.bmtgenders t13 ON t1.custgendercode = t13.gendercode
     LEFT JOIN plf.bmtdepartments t14 ON t1.custdsadept = t14.deptcode
     LEFT JOIN plf.relationshipofficers t15 ON t1.custro1::text = t15.rofficercode::text
     LEFT JOIN plf.bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
     LEFT JOIN plf.rmtbranches t17 ON t1.custdftbranch = t17.branchcode
     LEFT JOIN plf.bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
     LEFT JOIN plf.bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
     LEFT JOIN plf.bmtsegments t20 ON t1.custsegment = t20.segmentcode
     LEFT JOIN plf.bmtcountries t21 ON t1.custparentcountry = t21.countrycode
     LEFT JOIN plf.bmtcountries t22 ON t1.custresdcountry = t22.countrycode
     LEFT JOIN plf.bmtcountries t23 ON t1.custriskcountry = t23.countrycode
     LEFT JOIN plf.relationshipofficers t24 ON t1.custro2 = t24.rofficercode
     LEFT JOIN plf.bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
     LEFT JOIN plf.bmtrejectcodes t26 ON t1.custrejectedrsn::text = t26.rejectcode::text
     LEFT JOIN plf.customergroups t27 ON t1.custgroupid = t27.custgrpid
     LEFT JOIN plf.bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
     LEFT JOIN plf.bmtlanguage t29 ON t1.custlng = t29.lngcode
     LEFT JOIN plf.bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
     LEFT JOIN plf.targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
     LEFT JOIN plf.secroles t32 ON t1.nextrolecode = t32.rolecd
     		</createView>
   	</changeSet>

	<changeSet id="26" author="Prakash">
     		<createView viewName="customers_view" replaceIfExists="true">
		     SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.rofficerdesc AS lovdesccustro1name,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    COALESCE(t32.roledesc::character varying, plf.fn_get_roledesc(t1.nextrolecode::character varying)) AS lovdescrequeststage
   FROM plf.customers_temp t1
     LEFT JOIN plf.rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
     LEFT JOIN plf.bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
     LEFT JOIN plf.bmtempstscodes t4 ON t1.custempsts = t4.empstscode
     LEFT JOIN plf.bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
     LEFT JOIN plf.bmtindustries t7 ON t1.custindustry = t7.industrycode
     LEFT JOIN plf.bmtsectors t8 ON t1.custsector = t8.sectorcode
     LEFT JOIN plf.bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
     LEFT JOIN plf.bmtprofessions t10 ON t1.custprofession = t10.professioncode
     LEFT JOIN plf.bmtcountries t11 ON t1.custcob = t11.countrycode
     LEFT JOIN plf.bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
     LEFT JOIN plf.bmtgenders t13 ON t1.custgendercode = t13.gendercode
     LEFT JOIN plf.bmtdepartments t14 ON t1.custdsadept = t14.deptcode
     LEFT JOIN plf.relationshipofficers t15 ON t1.custro1::text = t15.rofficercode::text
     LEFT JOIN plf.bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
     LEFT JOIN plf.rmtbranches t17 ON t1.custdftbranch = t17.branchcode
     LEFT JOIN plf.bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
     LEFT JOIN plf.bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
     LEFT JOIN plf.bmtsegments t20 ON t1.custsegment = t20.segmentcode
     LEFT JOIN plf.bmtcountries t21 ON t1.custparentcountry = t21.countrycode
     LEFT JOIN plf.bmtcountries t22 ON t1.custresdcountry = t22.countrycode
     LEFT JOIN plf.bmtcountries t23 ON t1.custriskcountry = t23.countrycode
     LEFT JOIN plf.relationshipofficers t24 ON t1.custro2 = t24.rofficercode
     LEFT JOIN plf.bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
     LEFT JOIN plf.bmtrejectcodes t26 ON t1.custrejectedrsn::text = t26.rejectcode::text
     LEFT JOIN plf.customergroups t27 ON t1.custgroupid = t27.custgrpid
     LEFT JOIN plf.bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
     LEFT JOIN plf.bmtlanguage t29 ON t1.custlng = t29.lngcode
     LEFT JOIN plf.bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
     LEFT JOIN plf.targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
     LEFT JOIN plf.secroles t32 ON t1.nextrolecode = t32.rolecd
UNION ALL
 SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.rofficerdesc AS lovdesccustro1name,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    COALESCE(t32.roledesc::character varying, plf.fn_get_roledesc(t1.nextrolecode::character varying)) AS lovdescrequeststage
   FROM plf.customers t1
     LEFT JOIN plf.rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
     LEFT JOIN plf.bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
     LEFT JOIN plf.bmtempstscodes t4 ON t1.custempsts = t4.empstscode
     LEFT JOIN plf.bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
     LEFT JOIN plf.bmtindustries t7 ON t1.custindustry = t7.industrycode
     LEFT JOIN plf.bmtsectors t8 ON t1.custsector = t8.sectorcode
     LEFT JOIN plf.bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
     LEFT JOIN plf.bmtprofessions t10 ON t1.custprofession = t10.professioncode
     LEFT JOIN plf.bmtcountries t11 ON t1.custcob = t11.countrycode
     LEFT JOIN plf.bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
     LEFT JOIN plf.bmtgenders t13 ON t1.custgendercode = t13.gendercode
     LEFT JOIN plf.bmtdepartments t14 ON t1.custdsadept = t14.deptcode
     LEFT JOIN plf.relationshipofficers t15 ON t1.custro1::text = t15.rofficercode::text
     LEFT JOIN plf.bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
     LEFT JOIN plf.rmtbranches t17 ON t1.custdftbranch = t17.branchcode
     LEFT JOIN plf.bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
     LEFT JOIN plf.bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
     LEFT JOIN plf.bmtsegments t20 ON t1.custsegment = t20.segmentcode
     LEFT JOIN plf.bmtcountries t21 ON t1.custparentcountry = t21.countrycode
     LEFT JOIN plf.bmtcountries t22 ON t1.custresdcountry = t22.countrycode
     LEFT JOIN plf.bmtcountries t23 ON t1.custriskcountry = t23.countrycode
     LEFT JOIN plf.relationshipofficers t24 ON t1.custro2 = t24.rofficercode
     LEFT JOIN plf.bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
     LEFT JOIN plf.bmtrejectcodes t26 ON t1.custrejectedrsn::text = t26.rejectcode::text
     LEFT JOIN plf.customergroups t27 ON t1.custgroupid = t27.custgrpid
     LEFT JOIN plf.bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
     LEFT JOIN plf.bmtlanguage t29 ON t1.custlng = t29.lngcode
     LEFT JOIN plf.bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
     LEFT JOIN plf.targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
     LEFT JOIN plf.secroles t32 ON t1.nextrolecode = t32.rolecd
  WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM plf.customers_temp
          WHERE customers_temp.custid = t1.custid))	
     		</createView>
   	</changeSet>

	<changeSet id="27" author="Prakash">
     		<createView viewName="customers_tview" replaceIfExists="true">
		     	SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.rofficerdesc AS lovdesccustro1name,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custrelation,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    COALESCE(t32.roledesc::character varying, plf.fn_get_roledesc(t1.nextrolecode::character varying)) AS lovdescrequeststage
   FROM plf.customers_temp t1
     LEFT JOIN plf.rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
     LEFT JOIN plf.bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
     LEFT JOIN plf.bmtempstscodes t4 ON t1.custempsts = t4.empstscode
     LEFT JOIN plf.bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
     LEFT JOIN plf.bmtindustries t7 ON t1.custindustry = t7.industrycode
     LEFT JOIN plf.bmtsectors t8 ON t1.custsector = t8.sectorcode
     LEFT JOIN plf.bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
     LEFT JOIN plf.bmtprofessions t10 ON t1.custprofession = t10.professioncode
     LEFT JOIN plf.bmtcountries t11 ON t1.custcob = t11.countrycode
     LEFT JOIN plf.bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
     LEFT JOIN plf.bmtgenders t13 ON t1.custgendercode = t13.gendercode
     LEFT JOIN plf.bmtdepartments t14 ON t1.custdsadept = t14.deptcode
     LEFT JOIN plf.relationshipofficers t15 ON t1.custro1::text = t15.rofficercode::text
     LEFT JOIN plf.bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
     LEFT JOIN plf.rmtbranches t17 ON t1.custdftbranch = t17.branchcode
     LEFT JOIN plf.bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
     LEFT JOIN plf.bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
     LEFT JOIN plf.bmtsegments t20 ON t1.custsegment = t20.segmentcode
     JOIN plf.bmtcountries t21 ON t1.custparentcountry = t21.countrycode
     LEFT JOIN plf.bmtcountries t22 ON t1.custresdcountry = t22.countrycode
     LEFT JOIN plf.bmtcountries t23 ON t1.custriskcountry = t23.countrycode
     LEFT JOIN plf.relationshipofficers t24 ON t1.custro2 = t24.rofficercode
     LEFT JOIN plf.bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
     LEFT JOIN plf.bmtrejectcodes t26 ON t1.custrejectedrsn::text = t26.rejectcode::text
     LEFT JOIN plf.customergroups t27 ON t1.custgroupid = t27.custgrpid
     LEFT JOIN plf.bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
     LEFT JOIN plf.bmtlanguage t29 ON t1.custlng = t29.lngcode
     LEFT JOIN plf.bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
     LEFT JOIN plf.targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
     LEFT JOIN plf.secroles t32 ON t1.nextrolecode = t32.rolecd
     		</createView>
   	</changeSet>

	<changeSet id="28" author="Prakash">
     		<createView viewName="dm_application_details_view" replaceIfExists="true">
		     	SELECT "substring"(t2.finreference::text, '-7'::integer, 7) AS applid,
    NULL::unknown AS crm_dealid,
    NULL::unknown AS crscoredate,
    NULL::unknown AS cibilscore,
    NULL::unknown AS appscore,
    NULL::unknown AS behscore,
    NULL::unknown AS deviation_type,
    NULL::unknown AS deviation_flag,
    NULL::unknown AS deviation_code,
    NULL::unknown AS deviation_name,
    NULL::unknown AS req_tenure,
    NULL::unknown AS req_loan_amt,
    NULL::unknown AS loan_limit,
    t1.totalprischd / rc.ccyminorccyunits AS approve_loan_amt,
    NULL::unknown AS loan_purpose,
    t1.fintype AS loan_type,
        CASE
            WHEN t1.closingstatus = 'C'::citext THEN t2.lastmnton
            ELSE NULL::timestamp without time zone
        END AS cancellationdate,
    NULL::unknown AS cancel_reason,
    "substring"(t2.repayfrq::text, 1, 1) AS frequency,
    t1.finapproveddate AS loan_approval_date,
    t2.fincontractdate AS agreementdate,
        CASE
            WHEN t1.curreducingrate > 999::numeric THEN 999::numeric
            ELSE t1.curreducingrate
        END AS intrate,
        CASE
            WHEN t2.effectiverateofreturn > 999::numeric THEN 999::numeric
            ELSE t2.effectiverateofreturn
        END AS flat_rate,
        CASE
            WHEN t2.effectiverateofreturn > 999::numeric THEN 999::numeric
            ELSE t2.effectiverateofreturn
        END AS irr,
    NULL::unknown AS gross_ltv,
    NULL::unknown AS net_ltv,
    NULL::unknown AS cof,
    NULL::unknown AS debt_burden_ratio,
    NULL::unknown AS foir_db,
    NULL::unknown AS schemeid,
    NULL::unknown AS schemedesc,
    NULL::unknown AS schemegroupid,
    NULL::unknown AS scheme_groupg_desc,
    NULL::unknown AS product_category,
    t1.fincategory AS prod_type,
    NULL::unknown AS promotionid,
    NULL::unknown AS programid,
    NULL::unknown AS surrogate_flag,
    NULL::unknown AS sourcing_channel_type,
    NULL::unknown AS sourcing_channel_name,
    NULL::unknown AS referal_group,
    NULL::unknown AS referal_name,
    NULL::unknown AS countryid,
    NULL::unknown AS country,
    NULL::unknown AS regionid,
    NULL::unknown AS region,
    NULL::unknown AS stateid,
    NULL::unknown AS state,
    NULL::unknown AS cityid,
    NULL::unknown AS city,
    t1.finbranch AS branchid,
    t3.branchdesc,
    NULL::unknown AS broker_name,
    NULL::unknown AS dme_name,
    NULL::unknown AS asm_name,
    c.custro1 AS rsm_name,
    NULL::unknown AS crdt_mgr_name,
    NULL::unknown AS roid_name,
    NULL::unknown AS tlid_name,
    NULL::unknown AS bmid_name,
    NULL::unknown AS coid_name,
    NULL::unknown AS supplierid,
    NULL::unknown AS dlr_participation_rate,
    NULL::unknown AS local_outstation_flg,
    c.custcorebank AS customerid,
    NULL::unknown AS businessdate,
    'N' AS processed_flag,
    NULL::unknown AS process_date,
    t1.fintype AS product,
    NULL::unknown AS segments,
    NULL::unknown AS crm_status,
    t1.finstartdate AS logindate,
    t1.finapproveddate AS appr_rej_date,
        CASE
            WHEN t1.closingstatus = 'C'::citext THEN t2.lastmnton
            ELSE NULL::timestamp without time zone
        END AS cancel_date,
    NULL::unknown AS file_status,
    NULL::unknown AS file_hold_reason,
    NULL::unknown AS qdpdone,
    NULL::unknown AS ishold,
    NULL::unknown AS branch_inw_date,
    NULL::unknown AS branch_hold_date,
    NULL::unknown AS cpu_inw_date,
    NULL::unknown AS cpu_hold_date,
    NULL::unknown AS system_hold,
    NULL::unknown AS psl_flag,
    NULL::unknown AS doc_wave_flag,
    NULL::unknown AS customer_swipe,
    NULL::unknown AS customer_acceptance,
    'PAN CARD' AS kyc_doc_type,
    cd.custdoctitle AS kyc_doc_id,
    NULL::unknown AS business_irr,
    NULL::unknown AS inspectorname,
    NULL::unknown AS regnumber,
    NULL::unknown AS business_year,
    NULL::unknown AS dealid,
    NULL::unknown AS pretaxirr,
    NULL::unknown AS odm_flag,
    NULL::unknown AS di_date,
    NULL::unknown AS laa_qdp_flag,
    NULL::unknown AS preferred_card_acceptance,
    NULL::unknown AS orig_amtfin,
    NULL::unknown AS elc_flag,
    NULL::unknown AS elc_limit,
    NULL::unknown AS qdp_done_date,
    NULL::unknown AS laa_decentralized_flag,
    NULL::unknown AS fcu_flag,
    NULL::unknown AS mktgid,
    NULL::unknown AS dm_mpid,
    NULL::unknown AS swipe_card_code,
    NULL::unknown AS source_card_code,
    NULL::unknown AS dii_user_id,
    NULL::unknown AS qdp_cheque_issue,
    NULL::unknown AS interest_type,
    NULL::unknown AS dii_done_date,
    NULL::unknown AS finish_date,
    NULL::unknown AS batch_id
   FROM plf.finpftdetails t1
     JOIN plf.financemain t2 ON t1.finreference = t2.finreference
     JOIN plf.rmtbranches t3 ON t3.branchcode = t1.finbranch
     JOIN plf.customers c ON c.custid = t2.custid
     JOIN plf.rmtcurrencies rc ON rc.ccycode = t2.finccy
     LEFT JOIN ( SELECT DISTINCT customerdocuments.custid,
            customerdocuments.custdoctitle
           FROM plf.customerdocuments
          WHERE customerdocuments.custdoccategory = '03'::citext) cd ON cd.custid = c.custid
  WHERE "substring"(t2.finreference::text, '-7'::integer, 7) IS NOT NULL
     		</createView>
   	</changeSet> -->
	
 </databaseChangeLog>