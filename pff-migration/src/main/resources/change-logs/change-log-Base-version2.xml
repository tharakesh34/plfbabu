<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	
	<changeSet id="pre_run_for_pgp" author="Jayant" runAlways="true" dbms="postgresql" >
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>	
	</changeSet>
	
	<changeSet id="1" author="Haritha" dbms="postgresql">
		 <sql>
		 	drop view Reasons_View cascade;
		 </sql>
	</changeSet>
	
	<changeSet id="2" author="Haritha">
	<createView viewName="Reasons_View" replaceIfExists="true">
	SELECT T1.id,T1.reasontypeid, T1.reasoncategoryid, T1.code, T1.description,T1.active,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,
             T1.rolecode,T1.nextrolecode,T1.taskid,T1.nexttaskid,T1.recordtype,T1.workflowid,
             T2.code reasonCategoryCode,T3.code reasonTypeCode
            FROM reasons_temp T1
    inner join reasoncategory T2 on T1.reasoncategoryid=T2.id 
    inner join reasontypes T3 on T1.reasontypeid=T3.id
    UNION ALL
    SELECT T1.id,T1.reasontypeid,T1.reasoncategoryid,T1.code,T1.description,T1.active,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,
             T1.rolecode,T1.nextrolecode,T1.taskid,T1.nexttaskid,T1.recordtype,T1.workflowid,
             T2.code reasonCategoryCode,T3.code reasonTypeCode
             FROM reasons T1
   inner join reasoncategory T2 on T1.reasoncategoryid=T2.id 
   inner join reasontypes T3 on T1.reasontypeid=T3.id
   WHERE NOT (EXISTS ( SELECT 1 FROM reasons_temp WHERE id = T1.id));	
	</createView>
</changeSet>
	
	
 </databaseChangeLog>