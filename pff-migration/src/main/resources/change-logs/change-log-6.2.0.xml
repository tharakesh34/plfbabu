<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="add.schema" value=" " dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="satish" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="ST#76.1" author="saikiran.n">
		<addColumn tableName="Mandates_Temp">
			<column name="SwapEffectiveDate" type="datetime" />
			<column name="Hold" type="boolean" />
			<column name="HoldReasons" type="bigint" />
			<column name="SecurityMandate" type="boolean" />
			<column name="EmployeeID" type="bigint" />
			<column name="EmployerName" type="varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#76.1.1" author="saikiran.n">
		<addForeignKeyConstraint constraintName="fk_mandates_temp_holdreasons"
			referencedTableName="BounceReasons" baseColumnNames="HoldReasons" baseTableName="Mandates_Temp"
			referencedColumnNames="BounceId" />
	</changeSet>

	<changeSet id="ST#76.1.2" author="saikiran.n">
		<addForeignKeyConstraint constraintName="fk_mandates_temp_employeeid"
			referencedTableName="EmployerDetail" baseColumnNames="EmployeeID" baseTableName="Mandates_Temp"
			referencedColumnNames="employerid" />
	</changeSet>

	<changeSet id="ST#76.1.3" author="saikiran.n">
		<sql>
			<![CDATA[
				UPDATE MANDATES_TEMP SET HOLD = 0;
				UPDATE MANDATES_TEMP SET SECURITYMANDATE = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.1.4" author="saikiran.n">
		<addNotNullConstraint tableName="MANDATES_TEMP" columnName="HOLD" columnDataType="boolean" />
		<addNotNullConstraint tableName="MANDATES_TEMP" columnName="SECURITYMANDATE"
			columnDataType="boolean" />
	</changeSet>

	<changeSet id="ST#76.1.5" author="saikiran.n" dbms="postgresql, oracle">
		<addDefaultValue columnName="Hold" tableName="Mandates_Temp" defaultValue="0" />
		<addDefaultValue columnName="SecurityMandate" tableName="Mandates_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#76.1.5" author="saikiran.n" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE Mandates_Temp ADD CONSTRAINT DF_MANDATES_TEMP_HOLD DEFAULT 0 FOR HOLD;
				ALTER TABLE Mandates_Temp ADD CONSTRAINT DF_MANDATES_TEMP_SECURITYMANDATE DEFAULT 0 FOR SECURITYMANDATE;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.2" author="saikiran.n">
		<addColumn tableName="Mandates">
			<column name="SwapEffectiveDate" type="datetime" />
			<column name="Hold" type="boolean" />
			<column name="HoldReasons" type="bigint" />
			<column name="SecurityMandate" type="boolean" />
			<column name="EmployeeID" type="bigint" />
			<column name="EmployerName" type="varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#76.2.1" author="saikiran.n">
		<addForeignKeyConstraint constraintName="fk_mandates_holdreasons"
			referencedTableName="BounceReasons" baseColumnNames="HoldReasons" baseTableName="Mandates"
			referencedColumnNames="BounceId" />
	</changeSet>

	<changeSet id="ST#76.2.2" author="saikiran.n">
		<addForeignKeyConstraint constraintName="fk_mandates_employeeid"
			referencedTableName="EmployerDetail" baseColumnNames="EmployeeID" baseTableName="Mandates"
			referencedColumnNames="employerid" />
	</changeSet>

	<changeSet id="ST#76.2.3" author="saikiran.n">
		<sql>
			<![CDATA[
				UPDATE MANDATES SET HOLD = 0;
				UPDATE MANDATES SET SECURITYMANDATE = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.2.4" author="saikiran.n">
		<addNotNullConstraint tableName="MANDATES" columnName="HOLD" columnDataType="boolean" />
		<addNotNullConstraint tableName="MANDATES" columnName="SECURITYMANDATE" columnDataType="boolean" />
	</changeSet>

	<changeSet id="ST#76.2.5" author="saikiran.n" dbms="postgresql, oracle">
		<addDefaultValue columnName="Hold" tableName="Mandates" defaultValue="0" />
		<addDefaultValue columnName="SecurityMandate" tableName="Mandates" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#76.2.5" author="saikiran.n" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE Mandates ADD CONSTRAINT DF_MANDATES_HOLD DEFAULT 0 FOR HOLD;
				ALTER TABLE Mandates ADD CONSTRAINT DF_MANDATES_SECURITYMANDATE DEFAULT 0 FOR SECURITYMANDATE;
			]]>
		</sql>
	</changeSet>



	<changeSet id="ST#76.3_pre" author="saikiran.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mandates_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.3" author="saikiran.n">
		<createView viewName="MANDATES_AVIEW" replaceIfExists="true">
				<![CDATA[
					SELECT M.MANDATEID
						, M.CUSTID
						, M.MANDATEREF
						, M.MANDATETYPE
						, M.BANKBRANCHID
						, M.ACCNUMBER
						, M.ACCHOLDERNAME
						, M.JOINTACCHOLDERNAME
						, M.ACCTYPE
						, M.OPENMANDATE
						, M.STARTDATE
						, M.EXPIRYDATE
						, M.MAXLIMIT
						, M.PERIODICITY
						, M.PHONECOUNTRYCODE
						, M.PHONEAREACODE
						, M.PHONENUMBER
						, M.STATUS
						, M.APPROVALID
						, M.VERSION
						, M.LASTMNTBY
						, M.LASTMNTON
						, M.RECORDSTATUS
						, M.ROLECODE
						, M.NEXTROLECODE
						, M.TASKID
						, M.NEXTTASKID
						, M.RECORDTYPE
						, M.WORKFLOWID
						, M.REASON
						, M.MANDATECCY
						, C.CUSTCIF
						, C.CUSTSHRTNAME
						, BB.BANKCODE
						, BB.BRANCHCODE
						, BB.BRANCHDESC
						, BB.MICR
						, BB.IFSC
						, BB.CITY
						, BD.BANKNAME
						, M.INPUTDATE
						, M.INPUTDATE FROMDATE
						, M.INPUTDATE TODATE
						, M.ACTIVE
						, M.DEFAULTMANDATE
						, 1  USEEXISTING
						, M.ORGREFERENCE
						, PC.PCCITYNAME
						, M.DOCUMENTNAME
						, M.DOCUMENTREF
						, M.EXTERNALREF
						, M.ENTITYCODE
						, E.ENTITYDESC
						, M.PRIMARYMANDATEID
						, M.SWAPISACTIVE
						, M.BARCODENUMBER
						, PB.PARTNERBANKCODE
						, PB.PARTNERBANKNAME
						, M.PARTNERBANKID
						, M.EMANDATESOURCE
						, M.EMANDATEREFERENCENO
						, FM.FINTYPE
						, M.HOLD
						, M.HOLDREASONS
						, M.SWAPEFFECTIVEDATE
						, M.SECURITYMANDATE
						, M.EMPLOYEEID
						, M.EMPLOYERNAME
					FROM MANDATES M
					INNER JOIN CUSTOMERS C ON C.CUSTID = M.CUSTID
					LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
					LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE 
					LEFT JOIN RMTPROVINCEVSCITY PC ON PC.PCCITY = BB.CITY
					LEFT JOIN ENTITY E ON E.ENTITYCODE = M.ENTITYCODE
					LEFT JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = M.PARTNERBANKID
					LEFT JOIN FINANCEMAIN FM ON FM.FINREFERENCE = M.ORGREFERENCE
				]]>
		</createView>
	</changeSet>

	<changeSet id="ST#76.3_post" author="saikiran.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mandates_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.3.1_pre" author="saikiran.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mandates_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.3.1" author="saikiran.n">
		<createView viewName="MANDATES_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT 	M.MANDATEID
					, M.CUSTID
					, M.MANDATEREF
					, M.MANDATETYPE
					, M.BANKBRANCHID
					, M.ACCNUMBER
					, M.ACCHOLDERNAME
					, M.JOINTACCHOLDERNAME
					, M.ACCTYPE
					, M.OPENMANDATE
					, M.STARTDATE
					, M.EXPIRYDATE
					, M.MAXLIMIT
					, M.PERIODICITY
					, M.PHONECOUNTRYCODE
					, M.PHONEAREACODE
					, M.PHONENUMBER
					, M.STATUS
					, M.APPROVALID
					, M.VERSION
					, M.LASTMNTBY
					, M.LASTMNTON
					, M.RECORDSTATUS
					, M.ROLECODE
					, M.NEXTROLECODE
					, M.TASKID
					, M.NEXTTASKID
					, M.RECORDTYPE
					, M.WORKFLOWID
					, M.REASON
					, M.MANDATECCY
					, C.CUSTCIF
					, C.CUSTSHRTNAME
					, BB.BANKCODE
					, BB.BRANCHCODE
					, BB.BRANCHDESC
					, BB.MICR
					, BB.IFSC
					, BB.CITY
					, BD.BANKNAME
					, M.INPUTDATE
					, M.ACTIVE
					, M.DEFAULTMANDATE
					, 0 USEEXISTING
					, M.ORGREFERENCE
					, PC.PCCITYNAME
					, M.DOCUMENTNAME
					, M.DOCUMENTREF
					, M.EXTERNALREF
					, M.ENTITYCODE
					, E.ENTITYDESC
					, M.PRIMARYMANDATEID
					, M.SWAPISACTIVE
					, M.BARCODENUMBER
					, PB.PARTNERBANKCODE
					, PB.PARTNERBANKNAME
					, M.PARTNERBANKID
					, M.EMANDATESOURCE
					, M.EMANDATEREFERENCENO
					, FM.FINTYPE
					, M.HOLD
					, M.HOLDREASONS
					, M.SWAPEFFECTIVEDATE
					, M.SECURITYMANDATE
					, M.EMPLOYEEID
					, M.EMPLOYERNAME
				FROM MANDATES_TEMP M
				INNER JOIN CUSTOMERS C ON C.CUSTID = M.CUSTID
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY PC ON PC.PCCITY = BB.CITY
				LEFT JOIN ENTITY E ON E.ENTITYCODE = M.ENTITYCODE
				LEFT JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = M.PARTNERBANKID
				LEFT JOIN FINANCEMAIN FM ON FM.FINREFERENCE = M.ORGREFERENCE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#76.3.1_post" author="saikiran.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mandates_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.3.2_pre" author="saikiran.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'mandates_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.3.2" author="saikiran.n">
		<createView viewName="MANDATES_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT M.MANDATEID
					    , M.CUSTID
					    , M.MANDATEREF
					    , M.MANDATETYPE
					    , M.BANKBRANCHID
					    , M.ACCNUMBER
					    , M.ACCHOLDERNAME
					    , M.JOINTACCHOLDERNAME
					    , M.ACCTYPE
					    , M.OPENMANDATE
					    , M.STARTDATE
					    , M.EXPIRYDATE
					    , M.MAXLIMIT
					    , M.PERIODICITY
					    , M.PHONECOUNTRYCODE
					    , M.PHONEAREACODE
					    , M.PHONENUMBER
					    , M.STATUS
					    , M.APPROVALID
					    , M.VERSION
					    , M.LASTMNTBY
					    , M.LASTMNTON
					    , M.RECORDSTATUS
					    , M.ROLECODE
					    , M.NEXTROLECODE
					    , M.TASKID
					    , M.NEXTTASKID
					    , M.RECORDTYPE
					    , M.WORKFLOWID
					    , M.REASON
					    , M.MANDATECCY
					    , C.CUSTCIF
					    , C.CUSTSHRTNAME
					    , BB.BANKCODE
					    , BB.BRANCHCODE
					    , BB.BRANCHDESC
					    , BB.MICR
					    , BB.IFSC
					    , BB.CITY
					    , BD.BANKNAME
					    , M.INPUTDATE
					    , M.ACTIVE
					    , M.DEFAULTMANDATE
					    , 0 USEEXISTING
					    , M.ORGREFERENCE
					    , PC.PCCITYNAME
					    , M.DOCUMENTNAME
					    , M.DOCUMENTREF
					    , M.EXTERNALREF
					    , M.ENTITYCODE
					    , E.ENTITYDESC
					    , M.PRIMARYMANDATEID
					    , M.SWAPISACTIVE
					    , M.BARCODENUMBER
					    , PB.PARTNERBANKCODE
					    , PB.PARTNERBANKNAME
					    , M.PARTNERBANKID
					    , M.EMANDATESOURCE
					    , M.EMANDATEREFERENCENO
						, FM.FINTYPE
						, M.HOLD
						, M.HOLDREASONS
						, M.SWAPEFFECTIVEDATE
						, M.SECURITYMANDATE
						, M.EMPLOYEEID
						, M.EMPLOYERNAME
					FROM MANDATES_TEMP M
					JOIN CUSTOMERS C ON M.CUSTID = C.CUSTID
					LEFT JOIN BANKBRANCHES BB ON M.BANKBRANCHID = BB.BANKBRANCHID
					LEFT JOIN BMTBANKDETAIL BD ON BB.BANKCODE = BD.BANKCODE
					LEFT JOIN RMTPROVINCEVSCITY PC ON BB.CITY = PC.PCCITY
					LEFT JOIN ENTITY E ON M.ENTITYCODE = E.ENTITYCODE
					LEFT JOIN PARTNERBANKS PB ON M.PARTNERBANKID = PB.PARTNERBANKID
					LEFT JOIN FINANCEMAIN FM ON M.ORGREFERENCE = FM.FINREFERENCE
					UNION ALL
					SELECT M.MANDATEID
						, M.CUSTID
						, M.MANDATEREF
						, M.MANDATETYPE
						, M.BANKBRANCHID
						, M.ACCNUMBER
						, M.ACCHOLDERNAME
						, M.JOINTACCHOLDERNAME
						, M.ACCTYPE
						, M.OPENMANDATE
						, M.STARTDATE
						, M.EXPIRYDATE
						, M.MAXLIMIT
						, M.PERIODICITY
						, M.PHONECOUNTRYCODE
						, M.PHONEAREACODE
						, M.PHONENUMBER
						, M.STATUS
						, M.APPROVALID
						, M.VERSION
						, M.LASTMNTBY
						, M.LASTMNTON
						, M.RECORDSTATUS
						, M.ROLECODE
						, M.NEXTROLECODE
						, M.TASKID
						, M.NEXTTASKID
						, M.RECORDTYPE
						, M.WORKFLOWID
						, M.REASON
						, M.MANDATECCY
						, C.CUSTCIF
						, C.CUSTSHRTNAME
						, BB.BANKCODE
						, BB.BRANCHCODE
						, BB.BRANCHDESC
						, BB.MICR
						, BB.IFSC
						, BB.CITY
						, BD.BANKNAME
						, M.INPUTDATE
						, M.ACTIVE
						, M.DEFAULTMANDATE
						, 1 USEEXISTING
						, M.ORGREFERENCE
						, PC.PCCITYNAME
						, M.DOCUMENTNAME
						, M.DOCUMENTREF
						, M.EXTERNALREF
						, M.ENTITYCODE
						, E.ENTITYDESC
						, M.PRIMARYMANDATEID
						, M.SWAPISACTIVE
						, M.BARCODENUMBER
						, PB.PARTNERBANKCODE
						, PB.PARTNERBANKNAME
						, M.PARTNERBANKID
						, M.EMANDATESOURCE
						, M.EMANDATEREFERENCENO
						, FM.FINTYPE
						, M.HOLD
						, M.HOLDREASONS
						, M.SWAPEFFECTIVEDATE
						, M.SECURITYMANDATE
						, M.EMPLOYEEID
						, M.EMPLOYERNAME
					FROM MANDATES M
					JOIN CUSTOMERS C ON M.CUSTID = C.CUSTID
					LEFT JOIN BANKBRANCHES BB ON M.BANKBRANCHID = BB.BANKBRANCHID
					LEFT JOIN BMTBANKDETAIL BD ON BB.BANKCODE = BD.BANKCODE
					LEFT JOIN RMTPROVINCEVSCITY PC ON BB.CITY = PC.PCCITY
					LEFT JOIN ENTITY E ON M.ENTITYCODE = E.ENTITYCODE
					LEFT JOIN PARTNERBANKS PB ON M.PARTNERBANKID = PB.PARTNERBANKID
					LEFT JOIN FINANCEMAIN FM ON M.ORGREFERENCE = FM.FINREFERENCE
					WHERE NOT (EXISTS ( SELECT 1
					FROM MANDATES_TEMP
					WHERE MANDATES_TEMP.MANDATEID = M.MANDATEID))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#76.3.2_post" author="saikiran.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'mandates_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#76.4" author="saikiran.n">
		<sql>
			<![CDATA[			
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SwapEffectiveDate');
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SwapEffectiveDate');
				DELETE FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SwapEffectiveDate';
					
			    INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((select max(RightId)+1 from SecRights), 3, 'MandateDialog_SwapEffectiveDate', 'MandateDialog',  0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SwapEffectiveDate'), 1, 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SwapEffectiveDate'), 1, 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_Hold');
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_Hold');
				DELETE FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_Hold';
					
			    INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((select max(RightId)+1 from SecRights), 3, 'MandateDialog_Hold', 'MandateDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_Hold'), 1, 0, 1000 , CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_Hold'), 1, 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_HoldReasons');
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_HoldReasons');
				DELETE FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_HoldReasons';
					
			    INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((select max(RightId)+1 from SecRights), 3,'MandateDialog_HoldReasons', 'MandateDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_HoldReasons'), 1, 0,1000,CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_HoldReasons'), 1, 0,1000,CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SecurityMandate');
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SecurityMandate');
				DELETE FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SecurityMandate';
					
			    INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((select max(RightId)+1 from SecRights), 3, 'MandateDialog_SecurityMandate', 'MandateDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SecurityMandate'), 1, 0,1000,CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_SecurityMandate'), 1, 0,1000,CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployeeID');
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployeeID');
				DELETE FROM SECRIGHTS where RIGHTNAME='MandateDialog_EmployeeID';
					
			    INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((select max(RightId)+1 from SecRights), 3, 'MandateDialog_EmployeeID', 'MandateDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployeeID'), 1, 0,1000,CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployeeID'), 1, 0,1000,CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployerName');
				DELETE FROM SECGROUPRIGHTS WHERE GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployerName');
				DELETE FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployerName';
					
			    INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((select max(RightId)+1 from SecRights), 3, 'MandateDialog_EmployerName', 'MandateDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATE_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployerName'), 1, 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MANDATES_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_EmployerName'), 1, 0, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.1" author="nagavamsi.p">
		<addColumn tableName="EMPLOYERDETAIL_TEMP">
			<column name="AllowDAS" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#81.1.1" author="nagavamsi.p">
		<sql>
		<![CDATA[  
			UPDATE EmployerDetail_Temp SET AllowDAS = 0 ;
		]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.1.2" author="nagavamsi.p" dbms="oracle, postgresql">
		<addNotNullConstraint tableName="EMPLOYERDETAIL_TEMP" columnName="AllowDAS"
			columnDataType="boolean" />
	</changeSet>

	<changeSet id="ST#81.1.3" author="nagavamsi.p">
		<addDefaultValue columnName="AllowDAS" tableName="EMPLOYERDETAIL_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#76.1.3" author="nagavamsi.p" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE EMPLOYERDETAIL_TEMP ADD CONSTRAINT DF_EMPLOYERDETAIL_TEMP_ALLOWDAS DEFAULT 0 FOR ALLOWDAS;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.2" author="nagavamsi.p">
		<addColumn tableName="EMPLOYERDETAIL">
			<column name="AllowDAS" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#81.2.1" author="nagavamsi.p">
		<sql>
		<![CDATA[  
			UPDATE EmployerDetail SET AllowDAS = 0 ;
		]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.2.2" author="nagavamsi.p" dbms="oracle, postgresql">
		<addNotNullConstraint tableName="EMPLOYERDETAIL" columnName="AllowDAS" columnDataType="boolean" />
	</changeSet>

	<changeSet id="ST#81.2.3" author="nagavamsi.p">
		<addDefaultValue columnName="AllowDAS" tableName="EMPLOYERDETAIL" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#81.2.3" author="nagavamsi.p" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE EMPLOYERDETAIL ADD CONSTRAINT DF_EMPLOYERDETAIL_ALLOWDAS DEFAULT 0 FOR ALLOWDAS;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.3_pre" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'employerdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.3" author="nagavamsi.p">
		<createView viewName="EMPLOYERDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
					Select ed.employerid
						, ed.EmpIndustry
						, ed.EmpName
						, ed.EstablishDate
						, ed.EmpAddrhNbr
						, ed.EmpFlatNbr
						, ed.EmpAddrStreet
						, ed.EmpAddrLine1
						, ed.EmpAddrLine2
						, ed.EmpPoBox
						, ed.EmpCountry
						, ed.EmpPhone
						, ed.EmpFax
						, ed.EmpTelexno
						, ed.EmpEmailId
						, ed.EmpProvince
						, ed.EmpCity
						, ed.EmpWebsite
						, ed.ContactPersonName
						, ed.ContactPersonNo
						, ed.EmpAlocationType
						, ed.BankRefNo
						, ed.EmpCategory
						, ed.EmpIsActive
						, ed.AllowDas
						, ed.Version
						, ed.LastMntBy
						, ed.LastMntOn
						, ed.RecordStatus
						, ed.RoleCode
						, ed.NextRoleCode
						, ed.TaskId
						, ed.NextTaskId
						, ed.RecordType
						, ed.WorkflowId
						, su.UsrLogin
						, su.UsrFName
						, su.UsrMName
						, su.UsrLName
						, ids.IndustryDesc LovDescIndustryDesc
						, c.CountryDesc LovDescCountryDesc
						, cp.CpProvinceName LovdesCprovinceName
						, pc.PcCityName LovDescCityName
					FROM EmployerDetail_Temp ed
					INNER JOIN SecUsers su ON su.UsrId = ed.LastMntBy
					LEFT JOIN BmtIndustries ids ON ids.IndustryCode = ed.EmpIndustry
					LEFT JOIN BmtCountries c ON c.countrycode = ed.EmpCountry
					LEFT JOIN RmtCountryVsProvince cp ON cp.CpProvince = ed.EmpProvince and cp.CpCountry = ed.EmpCountry
					LEFT JOIN RmtProvinceVsCity pc ON pc.PcCity = ed.EmpCity and pc.PcProvince = ed.EmpProvince and pc.PcCountry = ed.EmpCountry
					UNION ALL
					Select ed.employerid
						, ed.EmpIndustry
						, ed.EmpName
						, ed.EstablishDate
						, ed.EmpAddrhNbr
						, ed.EmpFlatNbr
						, ed.EmpAddrStreet
						, ed.EmpAddrLine1
						, ed.EmpAddrLine2
						, ed.EmpPoBox
						, ed.EmpCountry
						, ed.EmpPhone
						, ed.EmpFax
						, ed.EmpTelexno
						, ed.EmpEmailId
						, ed.EmpProvince
						, ed.EmpCity
						, ed.EmpWebsite
						, ed.ContactPersonName
						, ed.ContactPersonNo
						, ed.EmpAlocationType
						, ed.BankRefNo
						, ed.EmpCategory
						, ed.EmpIsActive
						, ed.AllowDas
						, ed.Version
						, ed.LastMntBy
						, ed.LastMntOn
						, ed.RecordStatus
						, ed.RoleCode
						, ed.NextRoleCode
						, ed.TaskId
						, ed.NextTaskId
						, ed.RecordType
						, ed.WorkflowId
						, su.UsrLogin
						, su.UsrFName
						, su.UsrMName
						, su.UsrLName
						, ids.IndustryDesc LovDescIndustryDesc
						, c.CountryDesc LovDescCountryDesc
						, cp.CpProvinceName LovdesCprovinceName
						, pc.PcCityName LovDescCityName
					FROM EmployerDetail ed
					INNER JOIN SecUsers su ON su.UsrId = ed.LastMntBy
					LEFT JOIN BmtIndustries ids ON ids.IndustryCode = ed.EmpIndustry
					LEFT JOIN BmtCountries c ON c.countrycode = ed.EmpCountry
					LEFT JOIN RmtCountryVsProvince cp ON cp.CpProvince = ed.EmpProvince and cp.CpCountry = ed.EmpCountry
					LEFT JOIN RmtProvinceVsCity pc ON pc.PcCity = ed.EmpCity and pc.PcProvince = ed.EmpProvince and pc.PcCountry = ed.EmpCountry
						  WHERE NOT (EXISTS ( SELECT 1
						           FROM EmployerDetail_Temp
						          WHERE EmployerDetail_Temp.EmployerId = ed.EmployerId))				
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#81.3_post" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'employerdetail_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.4_pre" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'employerdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.4" author="nagavamsi.p">
		<createView viewName="EMPLOYERDETAIL_AVIEW" replaceIfExists="true">
			<![CDATA[
					Select ed.employerid
						, ed.EmpIndustry
						, ed.EmpName
						, ed.EstablishDate
						, ed.EmpAddrhNbr
						, ed.EmpFlatNbr
						, ed.EmpAddrStreet
						, ed.EmpAddrLine1
						, ed.EmpAddrLine2
						, ed.EmpPoBox
						, ed.EmpCountry
						, ed.EmpPhone
						, ed.EmpFax
						, ed.EmpTelexno
						, ed.EmpEmailId
						, ed.EmpProvince
						, ed.EmpCity
						, ed.EmpWebsite
						, ed.ContactPersonName
						, ed.ContactPersonNo
						, ed.EmpAlocationType
						, ed.BankRefNo
						, ed.EmpCategory
						, ed.EmpIsActive
						, ed.AllowDas
						, ed.Version
						, ed.LastMntBy
						, ed.LastMntOn
						, ed.RecordStatus
						, ed.RoleCode
						, ed.NextRoleCode
						, ed.TaskId
						, ed.NextTaskId
						, ed.RecordType
						, ed.WorkflowId
						, su.UsrLogin
						, su.UsrFName
						, su.UsrMName
						, su.UsrLName
						, ids.IndustryDesc LovDescIndustryDesc
						, c.CountryDesc LovDescCountryDesc
						, cp.CpProvinceName LovdesCprovinceName
						, pc.PcCityName LovDescCityName
					FROM EmployerDetail ed
					INNER JOIN SecUsers su ON su.UsrId = ed.LastMntBy
					LEFT JOIN BmtIndustries ids ON ids.IndustryCode = ed.EmpIndustry
					LEFT JOIN BmtCountries c ON c.countrycode = ed.EmpCountry
					LEFT JOIN RmtCountryVsProvince cp ON cp.CpProvince = ed.EmpProvince and cp.CpCountry = ed.EmpCountry
					LEFT JOIN RmtProvinceVsCity pc ON pc.PcCity = ed.EmpCity and pc.PcProvince = ed.EmpProvince and pc.PcCountry = ed.EmpCountry			
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#81.4_post" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'employerdetail_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#81.5" author="nagavamsi.p">
		<sql>
			<![CDATA[
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'EmployerDetailDialog_AllowDas');
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'EmployerDetailDialog_AllowDas';
			
				INSERT INTO SECRIGHTS VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'EmployerDetailDialog_AllowDas', 'EmployerDetailDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);

				INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='EMPLOYERDETAIL_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='EmployerDetailDialog_AllowDas'), 1, 0, 10000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
        	 ]]>
		</sql>
	</changeSet>

	<changeSet id="ST#98.1" author="nagavamsi.p">
		<addColumn tableName="RMTBaseRates_Temp">
			<column name="CreatedBy" type="bigint" />
			<column name="CreatedOn" type="datetime" />
			<column name="ApprovedBy" type="bigint" />
			<column name="ApprovedOn" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#98.2" author="nagavamsi.p">
		<addColumn tableName="RMTBaseRates">
			<column name="CreatedBy" type="bigint" />
			<column name="CreatedOn" type="datetime" />
			<column name="ApprovedBy" type="bigint" />
			<column name="ApprovedOn" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#98.3_pre" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rmtbaserates_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#98.3" author="nagavamsi.p">
		<createView viewName="RMTBASERATES_VIEW" replaceIfExists="true">
			<![CDATA[
					Select br.BrType
				    , brc.BrTypeDesc LovDescBrTypeName
				    , br.Currency
				    , br.BrEffDate
				    , br.BrRate
				    , br.BrTypeIsActive
					, br.LastMdfDate
				    , br.DelExistingRates
					, br.LockingPeriod
					, br.CreatedBy
					, br.CreatedOn
					, br.ApprovedBy
					, br.ApprovedOn
					, br.Version
				    , br.LastMntBy
				    , br.LastMntOn
				    , br.RecordStatus
				    , br.RoleCode
				    , br.NextRoleCode
				    , br.TaskId
				    , br.NextTaskId
				    , br.RecordType
				    , br.WorkflowId
				    , suc.Usrlogin CreatedUser
				    , sua.Usrlogin ApprovedUser
				FROM RmtBaseRates_Temp br
				INNER JOIN RmtBaseRateCodes brc ON brc.BrType = br.BrType
				LEFT JOIN SecUsers suc ON suc.UsrId = br.CreatedBy
				LEFT JOIN SecUsers sua ON sua.UsrId = br.ApprovedBy
				UNION ALL
				Select br.BrType
				    , brc.BrTypeDesc LovDescBrTypeName
				    , br.Currency
				    , br.BrEffDate
				    , br.BrRate
				    , br.BrTypeIsActive
					, br.LastMdfDate
				    , br.DelExistingRates
					, br.LockingPeriod
					, br.CreatedBy
					, br.CreatedOn
					, br.ApprovedBy
					, br.ApprovedOn
					, br.Version
				    , br.LastMntBy
				    , br.LastMntOn
				    , br.RecordStatus
				    , br.RoleCode
				    , br.NextRoleCode
				    , br.TaskId
				    , br.NextTaskId
				    , br.RecordType
				    , br.WorkflowId
				    , suc.Usrlogin CreatedUser
				    , sua.Usrlogin ApprovedUser
				FROM RmtBaseRates br
				INNER JOIN RmtBaseRateCodes brc ON brc.BrType = br.BrType
				LEFT JOIN SecUsers suc ON suc.UsrId = br.CreatedBy
				LEFT JOIN SecUsers sua ON sua.UsrId = br.ApprovedBy
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM RmtBaseRates_Temp
				          WHERE RmtBaseRates_Temp.BrType = br.BrType and RmtBaseRates_Temp.BrEffDate = br.BrEffDate and RmtBaseRates_Temp.Currency = br.Currency))			
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#98.3_post" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rmtbaserates_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="ST#98.4_pre" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rmtbaserates_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#98.4" author="nagavamsi.p">
		<createView viewName="RMTBASERATES_AVIEW" replaceIfExists="true">
			<![CDATA[
					Select br.BrType
				    , brc.BrTypeDesc LovDescBrTypeName
				    , br.Currency
				    , br.BrEffDate
				    , br.BrRate
				    , br.BrTypeIsActive
					, br.LastMdfDate
				    , br.DelExistingRates
					, br.LockingPeriod
					, br.CreatedBy
					, br.CreatedOn
					, br.ApprovedBy
					, br.ApprovedOn
					, br.Version
				    , br.LastMntBy
				    , br.LastMntOn
				    , br.RecordStatus
				    , br.RoleCode
				    , br.NextRoleCode
				    , br.TaskId
				    , br.NextTaskId
				    , br.RecordType
				    , br.WorkflowId
				    , suc.Usrlogin CreatedUser
				    , sua.Usrlogin ApprovedUser
				FROM RmtBaseRates_Temp br
				INNER JOIN RmtBaseRateCodes brc ON brc.BrType = br.BrType	
				LEFT JOIN SecUsers suc ON suc.UsrId = br.CreatedBy
				LEFT JOIN SecUsers sua ON sua.UsrId = br.ApprovedBy
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#98.4_post" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rmtbaserates_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.1" author="nagavamsi.p">
		<addColumn tableName="BounceReasons_Temp">
			<column name="InstrumentType" type="varchar(8)" />
			<column name="HoldMarkBounceCount" type="int" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#79.1.1" author="nagavamsi.p">
		<sql>
			<![CDATA[  
				UPDATE BounceReasons_Temp Set HoldMarkBounceCount = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.1.2" author="nagavamsi.p" dbms="oracle, postgresql">
		<addNotNullConstraint tableName="BounceReasons_Temp" columnName="HoldMarkBounceCount"
			columnDataType="int" />
	</changeSet>

	<changeSet id="ST#79.1.3" author="nagavamsi.p">
		<addDefaultValue columnName="HoldMarkBounceCount" tableName="BounceReasons_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#79.1.3" author="nagavamsi.p" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE BOUNCEREASONS_TEMP ADD CONSTRAINT DF_BOUNCEREASONS_TEMP_HOLDMARKBOUNCECOUNT DEFAULT 0 FOR HOLDMARKBOUNCECOUNT;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.2" author="nagavamsi.p">
		<addColumn tableName="BounceReasons">
			<column name="InstrumentType" type="varchar(8)" />
			<column name="HoldMarkBounceCount" type="int" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#79.2.1" author="nagavamsi.p">
		<sql>
		<![CDATA[  
			UPDATE BounceReasons SET HoldMarkBounceCount = 0 ;
		]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.2.2" author="nagavamsi.p" dbms="oracle, postgresql">
		<addNotNullConstraint tableName="BounceReasons" columnName="HoldMarkBounceCount"
			columnDataType="int" />
	</changeSet>

	<changeSet id="ST#79.2.3" author="nagavamsi.p">
		<addDefaultValue columnName="HoldMarkBounceCount" tableName="BounceReasons" defaultValue="0" />
	</changeSet>

	<changeSet id="ST#79.2.3" author="nagavamsi.p" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE BOUNCEREASONS ADD CONSTRAINT DF_BOUNCEREASONS_HOLDMARKBOUNCECOUNT DEFAULT 0 FOR HOLDMARKBOUNCECOUNT;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.3_pre" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bouncereasons_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.3" author="nagavamsi.p">
		<createView viewName="BOUNCEREASONS_VIEW" replaceIfExists="true">
			<![CDATA[
				Select br.BounceId
					, br.BounceCode
					, br.ReasonType
					, CASE WHEN br.ReasonType = 1 THEN 'CANCELLED CHEQUES'
						WHEN br.ReasonType = 2 THEN 'BOUNCED CHEQUES'
						WHEN br.ReasonType = 3 THEN 'HOLD CHEQUES'
						ELSE NULL END LovDescReasonType
					, br.Category
					, CASE WHEN br.Category = 1 THEN 'TECHNICAL'
						WHEN br.Category = 2 THEN 'NON TECHNICAL'
						ELSE NULL END LovDescCategory
					, br.Reason
					, br.Action
					, br.RuleId
					, br.ReturnCode
					, br.InstrumentType
					, br.HoldMarkBounceCount
					, r.RuleCode
					, r.RuleCodeDesc
					, br.Active
					, br.Version
					, br.LastMntBy
					, br.LastMntOn
					, br.RecordStatus
					, br.RoleCode
					, br.NextRoleCode
					, br.TaskId
					, br.NextTaskId
					, br.RecordType
					, br.WorkflowId
				FROM BOUNCEREASONS_TEMP br
				INNER JOIN RULES r ON r.RuleID = br.RuleID
				UNION ALL
				Select br.BounceId
					, br.BounceCode
					, br.ReasonType
					, CASE WHEN br.ReasonType = 1 THEN 'CANCELLED CHEQUES'
						WHEN br.ReasonType = 2 THEN 'BOUNCED CHEQUES'
						WHEN br.ReasonType = 3 THEN 'HOLD CHEQUES'
						ELSE NULL END LovDescReasonType
					, br.Category
					, CASE WHEN br.Category = 1 THEN 'TECHNICAL'
						WHEN br.Category = 2 THEN 'NON TECHNICAL'
						ELSE NULL END LovDescCategory
					, br.Reason
					, br.Action
					, br.RuleId
					, br.ReturnCode
					, br.InstrumentType
					, br.HoldMarkBounceCount
					, r.RuleCode
					, r.RuleCodeDesc
					, br.Active
					, br.Version
					, br.LastMntBy
					, br.LastMntOn
					, br.RecordStatus
					, br.RoleCode
					, br.NextRoleCode
					, br.TaskId
					, br.NextTaskId
					, br.RecordType
					, br.WorkflowId
				FROM BOUNCEREASONS br
				INNER JOIN RULES r ON r.RuleID = br.RuleID
				WHERE NOT EXISTS (SELECT 1 FROM BOUNCEREASONS_TEMP WHERE BounceId = br.BounceId)
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#79.3_post" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bouncereasons_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.4_pre" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bouncereasons_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.4" author="nagavamsi.p">
		<createView viewName="BOUNCEREASONS_AVIEW" replaceIfExists="true">
			<![CDATA[
				Select br.BounceId
					, br.BounceCode
					, br.ReasonType
					, CASE WHEN br.ReasonType = 1 THEN 'CANCELLED CHEQUES'
						WHEN br.ReasonType = 2 THEN 'BOUNCED CHEQUES'
						WHEN br.ReasonType = 3 THEN 'HOLD CHEQUES'
						ELSE NULL END LovDescReasonType
					, br.Category
					, CASE WHEN br.Category = 1 THEN 'TECHNICAL'
						WHEN br.Category = 2 THEN 'NON TECHNICAL'
						ELSE NULL END LovDescCategory
					, br.Reason
					, br.Action
					, br.RuleId
					, br.ReturnCode
					, br.InstrumentType
					, br.HoldMarkBounceCount
					, r.RuleCode
					, r.RuleCodeDesc
					, br.Active
					, br.Version
					, br.LastMntBy
					, br.LastMntOn
					, br.RecordStatus
					, br.RoleCode
					, br.NextRoleCode
					, br.TaskId
					, br.NextTaskId
					, br.RecordType
					, br.WorkflowId
				FROM BOUNCEREASONS br
				INNER JOIN RULES r ON r.RuleID = br.RuleID
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#79.4_post" author="nagavamsi.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'bouncereasons_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#79.5" author="nagavamsi.p">
		<sql>
			<![CDATA[
			DELETE FROM SECGROUPRIGHTS WHERE RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'BounceReasonDialog_InstrumentType');
			DELETE FROM SECGROUPRIGHTS WHERE RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'BounceReasonDialog_HoldMarkBounceCount');
			
			DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'BounceReasonDialog_InstrumentType';
			DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'BounceReasonDialog_HoldMarkBounceCount';
			
			INSERT INTO SECRIGHTS VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3, 'BounceReasonDialog_InstrumentType', 'BounceReasonDialog', 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO SECRIGHTS VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3, 'BounceReasonDialog_HoldMarkBounceCount', 'BounceReasonDialog', 0, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);

			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='BOUNCEREASON_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BounceReasonDialog_InstrumentType'), 1, 0, 10000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO SECGROUPRIGHTS VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='BOUNCEREASON_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BounceReasonDialog_HoldMarkBounceCount'), 1, 0, 10000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			
        	 ]]>
		</sql>
	</changeSet>

</databaseChangeLog>