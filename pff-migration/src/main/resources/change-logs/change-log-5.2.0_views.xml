<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="add.schema" value=" " dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="satish" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="3.1.0_pre" author="saiDurga.v" dbms="postgresql">
		<sql> 
		<![CDATA[ select deps_save_and_drop_dependencies ('plf', 'customers_aview'); ]]>
		</sql>
	</changeSet>

	<changeSet id="3.1" author="saiDurga.v" dbms="oracle,postgresql">
		<createView viewName="customers_aview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.version,
			t1.custsourceid,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.custrelation,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector =
			t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			]]>

		</createView>
	</changeSet>

	<changeSet id="3.1" author="saiDurga.v" dbms="mssql">
		<createView viewName="customers_aview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.version,
			t1.custsourceid,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.custrelation,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
		]]>
		</createView>
	</changeSet>
	<changeSet id="3.1.0_post" author="saiDurga.v" dbms="postgresql">
		<sql>
 		 <![CDATA[ select deps_restore_dependencies ('plf', 'customers_aview'); ]]>
		</sql>
	</changeSet>

	<changeSet id="4.1.0_pre" author="saiDurga.v" dbms="postgresql">
		<sql> 
		<![CDATA[ select deps_save_and_drop_dependencies ('plf', 'customers_view'); ]]>
		</sql>
	</changeSet>

	<changeSet id="4.1" author="saiDurga.v" dbms="oracle,postgresql">
		<createView viewName="customers_view" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.custsourceid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.custrelation,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers_temp t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			UNION ALL
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.custsourceid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.custrelation,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			WHERE NOT (EXISTS ( SELECT 1 expr1
			FROM customers_temp
			WHERE customers_temp.custid = t1.custid))
			]]>
		</createView>
	</changeSet>

	<changeSet id="4.1" author="saiDurga.v" dbms="mssql">
		<createView viewName="customers_view" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.custsourceid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.custrelation,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers_temp t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			UNION ALL
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.custsourceid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.custrelation,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			WHERE NOT (EXISTS ( SELECT 1 expr1
			FROM customers_temp
			WHERE customers_temp.custid = t1.custid))
		]]>
		</createView>
	</changeSet>

	<changeSet id="4.1.0_post" author="saiDurga.v" dbms="postgresql">
		<sql>
 		 <![CDATA[ select deps_restore_dependencies ('plf', 'customers_view'); ]]>
		</sql>
	</changeSet>

	<changeSet id="5.1" author="saiDurga.v" dbms="orcle,postgresql">
		<createView viewName="customers_aview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custshrtname,
			t1.custfname,
			t1.custlname,
			t1.custdob,
			t1.custnationality,
			t1.custsector,
			t1.custsubsector,
			t2.phonenumber,
			t2.phoneareacode,
			t2.phonecountrycode,
			t1.custcrcpr,
			t1.custpassportno,
			t3.custemail emailid,
			t1.custaddlvar82,
			t4.custtypedesc lovdesccusttypecodename,
			t1.custbaseccy,
			t4.custtypectg lovdesccustctgtype,
			t5.custctgdesc lovdesccustctgcodename,
			t6.custstsdescription lovdesccuststsname,
			t1.custdftbranch,
			t7.branchdesc lovdesccustdftbranchname,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t8.castecode,
			t8.castedesc,
			t9.religioncode,
			t9.religiondesc,
			COALESCE(t32.roledesc, fn_get_roledesc(t1.nextrolecode))  lovdescrequeststage,
			t1.margindeviation,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers t1
			LEFT JOIN customerphonenumbers t2 ON t1.custid = t2.phonecustid AND t2.phonetypepriority = 5
			LEFT JOIN customeremails t3 ON t1.custid = t3.custid AND t3.custemailtypecode = 'OFFICE'
			LEFT JOIN rmtcusttypes t4 ON t1.custtypecode = t4.custtypecode
			LEFT JOIN bmtcustcategories t5 ON t1.custctgcode = t5.custctgcode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN rmtbranches t7 ON t1.custdftbranch = t7.branchcode
			LEFT JOIN caste t8 ON t1.casteid = t8.casteid
			LEFT JOIN religion t9 ON t1.religionid = t9.religionid
			LEFT JOIN secroles t32 ON t1.nextrolecode = t32.rolecd
			]]>
		</createView>
	</changeSet>

	<changeSet id="5.1" author="saiDurga.v" dbms="mssql">
		<createView viewName="customers_aview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custshrtname,
			t1.custfname,
			t1.custlname,
			t1.custdob,
			t1.custnationality,
			t1.custsector,
			t1.custsubsector,
			t2.phonenumber,
			t2.phoneareacode,
			t2.phonecountrycode,
			t1.custcrcpr,
			t1.custpassportno,
			t3.custemail emailid,
			t1.custaddlvar82,
			t4.custtypedesc lovdesccusttypecodename,
			t1.custbaseccy,
			t4.custtypectg lovdesccustctgtype,
			t5.custctgdesc lovdesccustctgcodename,
			t6.custstsdescription lovdesccuststsname,
			t1.custdftbranch,
			t7.branchdesc lovdesccustdftbranchname,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t8.castecode,
			t8.castedesc,
			t9.religioncode,
			t9.religiondesc,
			COALESCE(t32.roledesc, dbo.fn_get_roledesc(t1.nextrolecode))  lovdescrequeststage,
			t1.margindeviation,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers t1
			LEFT JOIN customerphonenumbers t2 ON t1.custid = t2.phonecustid AND t2.phonetypepriority = 5
			LEFT JOIN customeremails t3 ON t1.custid = t3.custid AND t3.custemailtypecode = 'OFFICE'
			LEFT JOIN rmtcusttypes t4 ON t1.custtypecode = t4.custtypecode
			LEFT JOIN bmtcustcategories t5 ON t1.custctgcode = t5.custctgcode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN rmtbranches t7 ON t1.custdftbranch = t7.branchcode
			LEFT JOIN caste t8 ON t1.casteid = t8.casteid
			LEFT JOIN religion t9 ON t1.religionid = t9.religionid
			LEFT JOIN secroles t32 ON t1.nextrolecode = t32.rolecd
			]]>
		</createView>
	</changeSet>

	<changeSet id="6.1" author="saiDurga.v" dbms="orcle,postgresql">
		<createView viewName="Customers_LView" replaceIfExists="true">
		<![CDATA[
			SELECT c.custid,
			c.custcif,
			c.custcorebank,
			c.custctgcode,
			c.custtypecode,
			c.custshrtname,
			c.custdftbranch,
			c.recordstatus,
			c.rolecode,
			c.nextrolecode,
			c.recordtype,
			ct.custtypedesc lovdesccusttypecodename,
			t1.custctgdesc lovdesccustctgcodename,
			c.subcategory,
			c.casteid,
			c.religionid,
			t2.castecode,
			t2.castedesc,
			t3.religioncode,
			t3.religiondesc,
			c.otherCaste,
			c.otherReligion,
			c.natureOfBusiness,
			c.entityType,
			c.custResidentialSts,
			c.qualification,
			c.custFlag,
			COALESCE(t4.roledesc, fn_get_roledesc(c.nextrolecode)) lovdescrequeststage,
			c.margindeviation
			FROM customers_temp c
			LEFT JOIN rmtcusttypes ct ON c.custtypecode = ct.custtypecode
			LEFT JOIN bmtcustcategories t1 ON c.custctgcode = t1.custctgcode
			LEFT JOIN secroles t4 ON c.nextrolecode = t4.rolecd
			LEFT JOIN caste t2 ON c.casteid = t2.casteid
			LEFT JOIN religion t3 ON c.religionid = t3.religionid
			UNION ALL
			SELECT c.custid,
			c.custcif,
			c.custcorebank,
			c.custctgcode,
			c.custtypecode,
			c.custshrtname,
			c.custdftbranch,
			c.recordstatus,
			c.rolecode,
			c.nextrolecode,
			c.recordtype,
			ct.custtypedesc lovdesccusttypecodename,
			t1.custctgdesc lovdesccustctgcodename,
			c.subcategory,
			c.casteid,
			c.religionid,
			t2.castecode,
			t2.castedesc,
			t3.religioncode,
			t3.religiondesc,
			c.otherCaste,
			c.otherReligion,
			c.natureOfBusiness,
			c.entityType,
			c.custResidentialSts,
			c.qualification,
			c.custFlag,
			COALESCE(t4.roledesc, fn_get_roledesc(c.nextrolecode)) lovdescrequeststage,
			c.margindeviation
			FROM customers c
			LEFT JOIN rmtcusttypes ct ON c.custtypecode = ct.custtypecode
			LEFT JOIN bmtcustcategories t1 ON c.custctgcode = t1.custctgcode
			LEFT JOIN secroles t4 ON c.nextrolecode = t4.rolecd
			LEFT JOIN caste t2 ON c.casteid = t2.casteid
			LEFT JOIN religion t3 ON c.religionid = t3.religionid
			WHERE NOT (c.custid IN ( SELECT customers_temp.custid
			FROM customers_temp
			WHERE customers_temp.custid = c.custid))
			]]>
		</createView>
	</changeSet>
	<changeSet id="6.1" author="saiDurga.v" dbms="mssql">
		<createView viewName="Customers_LView" replaceIfExists="true">
		<![CDATA[
			SELECT c.custid,
			c.custcif,
			c.custcorebank,
			c.custctgcode,
			c.custtypecode,
			c.custshrtname,
			c.custdftbranch,
			c.recordstatus,
			c.rolecode,
			c.nextrolecode,
			c.recordtype,
			ct.custtypedesc lovdesccusttypecodename,
			t1.custctgdesc lovdesccustctgcodename,
			c.subcategory,
			c.casteid,
			c.religionid,
			t2.castecode,
			t2.castedesc,
			t3.religioncode,
			t3.religiondesc,
			c.otherCaste,
			c.otherReligion,
			c.natureOfBusiness,
			c.entityType,
			c.custResidentialSts,
			c.qualification,
			c.custFlag,
			COALESCE(t4.roledesc, dbo.fn_get_roledesc(c.nextrolecode)) lovdescrequeststage,
			c.margindeviation
			FROM customers_temp c
			LEFT JOIN rmtcusttypes ct ON c.custtypecode = ct.custtypecode
			LEFT JOIN bmtcustcategories t1 ON c.custctgcode = t1.custctgcode
			LEFT JOIN secroles t4 ON c.nextrolecode = t4.rolecd
			LEFT JOIN caste t2 ON c.casteid = t2.casteid
			LEFT JOIN religion t3 ON c.religionid = t3.religionid
			UNION ALL
			SELECT c.custid,
			c.custcif,
			c.custcorebank,
			c.custctgcode,
			c.custtypecode,
			c.custshrtname,
			c.custdftbranch,
			c.recordstatus,
			c.rolecode,
			c.nextrolecode,
			c.recordtype,
			ct.custtypedesc lovdesccusttypecodename,
			t1.custctgdesc lovdesccustctgcodename,
			c.subcategory,
			c.casteid,
			c.religionid,
			t2.castecode,
			t2.castedesc,
			t3.religioncode,
			t3.religiondesc,
			c.otherCaste,
			c.otherReligion,
			c.natureOfBusiness,
			c.entityType,
			c.custResidentialSts,
			c.qualification,
			c.custFlag,
			COALESCE(t4.roledesc, dbo.fn_get_roledesc(c.nextrolecode)) lovdescrequeststage,
			c.margindeviation
			FROM customers c
			LEFT JOIN rmtcusttypes ct ON c.custtypecode = ct.custtypecode
			LEFT JOIN bmtcustcategories t1 ON c.custctgcode = t1.custctgcode
			LEFT JOIN secroles t4 ON c.nextrolecode = t4.rolecd
			LEFT JOIN caste t2 ON c.casteid = t2.casteid
			LEFT JOIN religion t3 ON c.religionid = t3.religionid
			WHERE NOT (c.custid IN ( SELECT customers_temp.custid
			FROM customers_temp
			WHERE customers_temp.custid = c.custid))
			]]>
		</createView>
	</changeSet>

	<changeSet id="7.1" author="saiDurga.v" dbms="oracle,postgresql">
		<createView viewName="customers_tview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.custsourceid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custrelation,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers_temp t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector =
			t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			]]>
		</createView>
	</changeSet>
	<changeSet id="7.1" author="saiDurga.v" dbms="mssql">
		<createView viewName="customers_tview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			t1.custcif,
			t1.custcorebank,
			t1.custctgcode,
			t1.custtypecode,
			t1.custsalutationcode,
			t1.custfname,
			t1.custmname,
			t1.custlname,
			t1.custshrtname,
			t1.custfnamelcllng,
			t1.custmnamelcllng,
			t1.custlnamelcllng,
			t1.custshrtnamelcllng,
			t1.custdftbranch,
			t1.custgendercode,
			t1.custdob,
			t1.custpob,
			t1.custcob,
			t1.custpassportno,
			t1.custmothermaiden,
			t1.custisminor,
			t1.custreferedby,
			t1.custdsa,
			t1.custdsadept,
			t1.custro1,
			t1.custro2,
			t1.custgroupid,
			t1.custsts,
			t1.custstschgdate,
			t1.custgroupsts,
			t1.custisblocked,
			t1.custisactive,
			t1.custisclosed,
			t1.custinactivereason,
			t1.custisdecease,
			t1.custisdormant,
			t1.custisdelinquent,
			t1.custistradefincust,
			t1.custtradelicencenum,
			t1.custtradelicenceexpiry,
			t1.custpassportexpiry,
			t1.custvisanum,
			t1.custvisaexpiry,
			t1.custisstaff,
			t1.custstaffid,
			t1.custindustry,
			t1.custsector,
			t1.custsubsector,
			t1.custprofession,
			t1.custtotalincome,
			t1.custmaritalsts,
			t1.custempsts,
			t1.custsegment,
			t1.custsubsegment,
			t1.custisblacklisted,
			t1.custblrsncode,
			t1.custisrejected,
			t1.custrejectedrsn,
			t1.custbaseccy,
			t1.custlng,
			t1.custparentcountry,
			t1.custresdcountry,
			t1.custriskcountry,
			t1.custnationality,
			t1.custclosedon,
			t1.custstmtfrq,
			t1.custisstmtcombined,
			t1.custstmtlastdate,
			t1.custstmtnextdate,
			t1.custstmtdispatchmode,
			t1.custfirstbusinessdate,
			t1.custaddlvar81,
			t1.custaddlvar82,
			t1.custaddlvar83,
			t1.custaddlvar84,
			t1.custaddlvar85,
			t1.custaddlvar86,
			t1.custaddlvar87,
			t1.custaddlvar88,
			t1.custaddlvar89,
			t1.custaddldate1,
			t1.custaddldate2,
			t1.custaddldate3,
			t1.custaddldate4,
			t1.custaddldate5,
			t1.custaddlvar1,
			t1.custaddlvar2,
			t1.custaddlvar3,
			t1.custaddlvar4,
			t1.custaddlvar5,
			t1.custaddlvar6,
			t1.custaddlvar7,
			t1.custaddlvar8,
			t1.custaddlvar9,
			t1.custaddlvar10,
			t1.custaddlvar11,
			t1.custaddldec1,
			t1.custaddldec2,
			t1.custaddldec3,
			t1.custaddldec4,
			t1.custaddldec5,
			t1.custaddlint1,
			t1.custaddlint2,
			t1.custaddlint3,
			t1.custaddlint4,
			t1.custaddlint5,
			t1.custsourceid,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t2.custtypedesc lovdesccusttypecodename,
			t3.maritalstsdesc lovdesccustmaritalstsname,
			t4.empstsdesc lovdesccustempstsname,
			t6.custstsdescription lovdesccuststsname,
			t7.industrydesc lovdesccustindustryname,
			t8.sectordesc lovdesccustsectorname,
			t9.subsectordesc lovdesccustsubsectorname,
			t10.professiondesc lovdesccustprofessionname,
			t11.countrydesc lovdesccustcobname,
			t20.segmentdesc lovdesccustsegmentname,
			t12.nationalitydesc lovdesccustnationalityname,
			t13.genderdesc lovdesccustgendercodename,
			t14.deptdesc lovdesccustdsadeptname,
			t15.dealername lovdesccustro1name,
			t15.dealercity lovdesccustro1city,
			t16.grpstsdescription lovdesccustgroupstsname,
			t17.branchdesc lovdesccustdftbranchname,
			t17.bankrefno branchrefno,
			t17.branchswiftbrncde custswiftbrncode,
			t18.custctgdesc lovdesccustctgcodename,
			t2.custtypectg lovdesccustctgtype,
			t19.saluationdesc lovdesccustsalutationcodename,
			t21.countrydesc lovdesccustparentcountryname,
			t22.countrydesc lovdesccustresdcountryname,
			t23.countrydesc lovdesccustriskcountryname,
			t24.rofficerdesc lovdesccustro2name,
			t25.blrsndesc lovdesccustblrsncodename,
			t26.rejectdesc lovdesccustrejectedrsnname,
			t27.custgrpdesc lovdesccustgroupidname,
			t28.subsegmentdesc lovdesccustsubsegmentname,
			t29.lngdesc lovdesccustlngname,
			t30.dispatchmodedesc lovdescdispatchmodedescname,
			t1.dedupfound,
			t1.skipdedup,
			t1.custtotalexpense,
			t1.custblacklistdate,
			t1.noofdependents,
			t1.custcrcpr,
			t1.jointcust,
			t1.jointcustname,
			t1.jointcustdob,
			t27.custgrpcode lovdesccustgroupcode,
			t1.contactpersonname,
			t1.phonenumber,
			t1.emailid,
			t1.salariedcustomer,
			t31.targetdesc lovdesctargetname,
			t1.custrelation,
			t1.custsuspsts,
			t1.custsuspdate,
			t1.custsusptrigger,
			t1.subcategory,
			t1.casteid,
			t1.religionid,
			t32.castecode,
			t32.castedesc,
			t33.religioncode,
			t33.religiondesc,
			COALESCE(t34.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
			t1.margindeviation,
			t1.applicationno,
			t17.branchprovince,
			t1.dnd,
			t1.otherCaste,
			t1.otherReligion,
			t1.natureOfBusiness,
			t1.entityType,
			t1.custResidentialSts,
			t1.qualification,
			t1.custFlag
			FROM customers_temp t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector =
			t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			]]>
		</createView>
	</changeSet>

	<changeSet id="9.1" author="saiDurga.v">
		<createView viewName="VERIFICATION_LV_DETAILS_VIEW" replaceIfExists="true">
		<![CDATA[
			SELECT t.verificationid,
			t.seqno,
			t.doctype,
			t.docmodule,
			t.docname,
			t.referenceid,
			t.code,
			t.description,
			t.documentid,
			t.documenttype,
			t.docrefid,
			t.documentsubid,
			t.documentrefid,
			t.documenturi,
			t.remarks1,
			t.remarks2,
			t.remarks3,
			t.version,
			t.lastmntby,
			t.lastmnton,
			t.recordstatus,
			t.rolecode,
			t.nextrolecode,
			t.taskid,
			t.nexttaskid,
			t.recordtype,
			t.workflowid
			FROM ( SELECT lvd.verificationid,
			lvd.seqno,
			doc.doctype,
			doc.docmodule,
			doc.doccategory docname,
			doc.referenceid,
			dt.doctypecode code,
			dt.doctypedesc description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details_temp lvd
			JOIN documentdetails_view doc ON doc.docid = lvd.documentid
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.doccategory
			WHERE lvd.documenttype in (1, 2)
			UNION ALL
			SELECT lvd.verificationid,
			lvd.seqno,
			doc.doctype,
			doc.docmodule,
			doc.doccategory docname,
			doc.referenceid,
			dt.doctypecode code,
			dt.doctypedesc description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details lvd
			JOIN verification_lv lv ON lv.verificationid = lvd.verificationid
			JOIN documentdetails_view doc ON doc.docid = lvd.documentid
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.doccategory
			WHERE NOT (EXISTS ( SELECT 1
			FROM verification_lv_details_temp
			WHERE verification_lv_details_temp.verificationid = lvd.verificationid AND verification_lv_details_temp.seqno =
			lvd.seqno)) AND (lvd.documenttype in (1, 2))
			UNION ALL
			SELECT lvd.verificationid,
			lvd.seqno,
			doc.custdoctype doctype,
			'Customer' docmodule,
			doc.custdoccategory docname,
			c.custcif refereceid,
			dt.doctypecode code,
			dt.doctypedesc description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details_temp lvd
			JOIN customerdocuments_view doc ON doc.custid = lvd.documentid AND doc.custdoccategory = lvd.documentsubid
			JOIN customers_view c ON c.custid = doc.custid
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.custdoccategory
			WHERE lvd.documenttype = 3
			UNION ALL
			SELECT lvd.verificationid,
			lvd.seqno,
			doc.custdoctype doctype,
			'Customer' docmodule,
			doc.custdoccategory docname,
			c.custcif refereceid,
			dt.doctypecode code,
			dt.doctypedesc description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details lvd
			JOIN customerdocuments_view doc ON doc.custid = lvd.documentid AND doc.custdoccategory = lvd.documentsubid
			JOIN customers_view c ON c.custid = doc.custid
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.custdoccategory
			WHERE NOT (EXISTS ( SELECT 1
			FROM verification_lv_details_temp
			WHERE verification_lv_details_temp.verificationid = lvd.verificationid AND verification_lv_details_temp.seqno =
			lvd.seqno)) AND lvd.documenttype = 3) t
			]]>
		</createView>
	</changeSet>



	<changeSet id="13.1" author="madhuri.n">
		<comment>OCR Header View</comment>
		<createView viewName="OCRHEADER_View" replaceIfExists="true">
		<![CDATA[
			SELECT t1.headerid,
			t1.ocrid,
			t1.ocrdescription,
			t1.customerportion,
			t1.ocrapplicable,
			t1.splitapplicable,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid
			FROM OCRHEADER_TEMP t1
			UNION ALL
			SELECT t1.headerid,
			t1.ocrid,
			t1.ocrdescription,
			t1.customerportion,
			t1.ocrapplicable,
			t1.splitapplicable,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid
			FROM OCRHEADER t1
			WHERE NOT (EXISTS ( SELECT 1 AS expr1
			FROM OCRHEADER_TEMP
			WHERE OCRHEADER_TEMP.headerid = t1.headerid))
			]]>
		</createView>
	</changeSet>
	<changeSet id="14.1" author="madhuri.n">
		<comment>OCR Header Aview</comment>
		<createView viewName="OCRHEADER_AVIEW" replaceIfExists="true">
		<![CDATA[
			SELECT t1.headerid,
			t1.ocrid,
			t1.ocrdescription,
			t1.customerportion,
			t1.ocrapplicable,
			t1.splitapplicable,
			t1.active,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid
			from OCRHEADER t1
			]]>
		</createView>
	</changeSet>

	<changeSet id="18_pre" author="madhuri.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_view');
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="18.1" author="madhuri.n">
		<createView viewName="RMTFINANCETYPES_VIEW" replaceIfExists="true">
		<![CDATA[
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc lovdescfincontingentactypename,
			t5.actypedesc
			lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc
			lovdescfinbankcontactypename,
			t39.actypedesc lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc lovdescfindivisionname,
			t48.entitycode lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode downpayrulecode,
			t59.rulecodedesc
			downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode grcpricingmethoddesc,
			t68.rulecode rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoApprove,
			t1.ocrrequired,
			t1.allowedOCRS,
			t1.defaultOCR
			FROM
			rmtfinancetypes_temp t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			UNION ALL
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc lovdescfincontingentactypename,
			t5.actypedesc
			lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc
			lovdescfinbankcontactypename,
			t39.actypedesc lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc lovdescfindivisionname,
			t48.entitycode lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode downpayrulecode,
			t59.rulecodedesc
			downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode grcpricingmethoddesc,
			t68.rulecode rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoApprove,
			t1.ocrrequired,
			t1.allowedOCRS,
			t1.defaultOCR
			FROM
			rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			WHERE NOT (EXISTS ( SELECT 1 expr1
			FROM rmtfinancetypes_temp
			WHERE rmtfinancetypes_temp.fintype = t1.fintype ))
			]]>
		</createView>
	</changeSet>

	<changeSet id="18_post" author="madhuri.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="19.1_pre" author="madhuri.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_aview');
		 	]]>
		</sql>
	</changeSet>
	<changeSet id="19.1" author="madhuri.n">
		<createView viewName="RMTFINANCETYPES_AVIEW" replaceIfExists="true">
		<![CDATA[
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc lovdescfincontingentactypename,
			t5.actypedesc
			lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc
			lovdescfinbankcontactypename,
			t39.actypedesc lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc lovdescfindivisionname,
			t48.entitycode lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode downpayrulecode,
			t59.rulecodedesc downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode grcpricingmethoddesc,
			t68.rulecode rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.alwmaxdisbcheckreq,
			t1.fintypedesc lovdescpromofintypedesc,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoApprove,
			t1.ocrrequired,
			t1.allowedOCRS,
			t1.defaultOCR
			FROM
			rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			]]>
		</createView>
	</changeSet>
	<changeSet id="19.1_post" author="madhuri.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_aview');
			]]>
		</sql>
	</changeSet>



	<changeSet id="57.1" author="rohith.s">
		<createView viewName="BuilderProjcet_AView" replaceIfExists="true">
		<![CDATA[
			 SELECT t1.id,
				    t1.name,
				    t1.builderid,
				    t1.apfno,
				    t2.name builderidname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
                    t1.REGISTRATIONNUMBER,
                    t1.ADDRESSLINE1, 
                    t1.ADDRESSLINE2, 
                    t1.ADDRESSLINE3, 
                    t1.LANDMARK,
                    t1.AREAORLOCALITY, 
                    t1.CITY, 
                    t1.STATE, 
                    t1.PINCODE, 
                    t1.PROJECTTYPE, 
                    t1.TYPESOFAPF, 
                    t1.TOTALUNITS,
                    t1.NUMBEROFTOWERS, 
                    t1.NOOFINDEPENDENTHOUSES, 
                    t1.PROJECTSTARTDATE, 
                    t1.PROJECTENDDATE, 
                    t1.REMARKS,
                    t2.segmentation
				   FROM builderprojcet t1
				     JOIN buildercompany t2 ON t1.builderid = t2.id
					 ]]>
		</createView>
	</changeSet>

	<changeSet id="58.1" author="rohith.s">
		<createView viewName="BuilderProjcet_View" replaceIfExists="true">
		<![CDATA[
			 SELECT t1.id,
				    t1.name,
				    t1.builderid,
				    t1.apfno,
				    t2.name builderidname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.REGISTRATIONNUMBER,
                    t1.ADDRESSLINE1, 
                    t1.ADDRESSLINE2, 
                    t1.ADDRESSLINE3, 
                    t1.LANDMARK,
                    t1.AREAORLOCALITY, 
                    t1.CITY, 
                    t1.STATE, 
                    t1.PINCODE, 
                    t1.PROJECTTYPE, 
                    t1.TYPESOFAPF, 
                    t1.TOTALUNITS,
                    t1.NUMBEROFTOWERS, 
                    t1.NOOFINDEPENDENTHOUSES, 
                    t1.PROJECTSTARTDATE, 
                    t1.PROJECTENDDATE, 
                    t1.REMARKS,
                    t2.segmentation
				   FROM builderprojcet_temp t1
				     JOIN buildercompany t2 ON t1.builderid = t2.id
				UNION ALL
				 SELECT t1.id,
				    t1.name,
				    t1.builderid,
				    t1.apfno,
				    t2.name builderidname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.REGISTRATIONNUMBER,
                    t1.ADDRESSLINE1, 
                    t1.ADDRESSLINE2, 
                    t1.ADDRESSLINE3, 
                    t1.LANDMARK,
                    t1.AREAORLOCALITY, 
                    t1.CITY, 
                    t1.STATE, 
                    t1.PINCODE, 
                    t1.PROJECTTYPE, 
                    t1.TYPESOFAPF, 
                    t1.TOTALUNITS,
                    t1.NUMBEROFTOWERS, 
                    t1.NOOFINDEPENDENTHOUSES, 
                    t1.PROJECTSTARTDATE, 
                    t1.PROJECTENDDATE, 
                    t1.REMARKS,
                    t2.segmentation
				   FROM builderprojcet t1
				     JOIN buildercompany t2 ON t1.builderid = t2.id
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM builderprojcet_temp
				          WHERE builderprojcet_temp.id = t1.id))
						  ]]>
		</createView>
	</changeSet>
	<changeSet id="59.1" author="rohith.s">
		<createView viewName="projectunits_Aview" replaceIfExists="true">
		<![CDATA[
			 SELECT  t1.unitid,
				     t1.UnitType, 
					 t1.Tower, 
					 t1.FloorNumber, 
					 t1.UnitNumber, 
					 t1.UnitArea, 
					 t1.Rate,
					 t1.Price, 
					 t1.OtherCharges, 
					 t1.TotalPrice, 
					 t1.UnitRpsf, 
					 t1.UnitPlotArea, 
					 t1.UnitSuperBuiltUp,
					 t1.projectId,
					 t1.Version,
					 t1.LastMntBy,
					 t1.RecordStatus, 
					 t1.RoleCode, 
					 t1.NextRoleCode, 
					 t1.TaskId, 
					 t1.NextTaskId,
					 t1.RecordType,
					 t1.WorkflowId
				   FROM projectunits t1
				     JOIN builderprojcet t2 ON t1.projectid = t2.id
					 ]]>
		</createView>
	</changeSet>

	<changeSet id="60.1" author="rohith.s">
		<createView viewName="projectunits_view" replaceIfExists="true">
		<![CDATA[
			  SELECT    t1.unitid,
					    t1.unittype,
					    t1.tower,
					    t1.floornumber,
					    t1.unitnumber,
					    t1.unitarea,
					    t1.rate,
					    t1.price,
					    t1.othercharges,
					    t1.totalprice,
					    t1.unitrpsf,
					    t1.unitplotarea,
					    t1.unitsuperbuiltup,
					    t1.projectid,
					    t1.version,
					    t1.lastmnton,
					    t1.lastmntby,
					    t1.recordstatus,
					    t1.rolecode,
					    t1.nextrolecode,
					    t1.taskid,
					    t1.nexttaskid,
					    t1.recordtype,
					    t1.workflowid
					   FROM projectunits_temp t1
					     JOIN builderprojcet_temp t2 ON t1.projectid = t2.id
					UNION ALL
					 SELECT t1.unitid,
					    t1.unittype,
					    t1.tower,
					    t1.floornumber,
					    t1.unitnumber,
					    t1.unitarea,
					    t1.rate,
					    t1.price,
					    t1.othercharges,
					    t1.totalprice,
					    t1.unitrpsf,
					    t1.unitplotarea,
					    t1.unitsuperbuiltup,
					    t1.projectid,
					    t1.version,
					    t1.lastmnton,
					    t1.lastmntby,
					    t1.recordstatus,
					    t1.rolecode,
					    t1.nextrolecode,
					    t1.taskid,
					    t1.nexttaskid,
					    t1.recordtype,
					    t1.workflowid
					   FROM projectunits t1
					     JOIN builderprojcet t2 ON t1.projectid = t2.id
					  WHERE NOT (EXISTS ( SELECT 1
					           FROM projectunits_temp
					          WHERE projectunits_temp.unitid = t1.unitid))
							  ]]>
		</createView>
	</changeSet>


	<changeSet id="67.1" author="mangapathi">
		<createView viewName="employerdetail_aview" replaceIfExists="true">
		<![CDATA[
			 SELECT t1.employerid,
			    t1.empindustry,
			    t1.empname,
			    t1.establishdate,
			    t1.empaddrhnbr,
			    t1.empflatnbr,
			    t1.empaddrstreet,
			    t1.empaddrline1,
			    t1.empaddrline2,
			    t1.emppobox,
			    t1.empcountry,
			    t1.empphone,
			    t1.empfax,
			    t1.emptelexno,
			    t1.empemailid,
			    t1.empprovince,
			    t1.empcity,
			    t1.empwebsite,
			    t1.contactpersonname,
			    t1.contactpersonno,
			    t1.empalocationtype,
			    t1.bankrefno,
			    t1.empisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t2.usrlogin,
			    t2.usrfname,
			    t2.usrmname,
			    t2.usrlname,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.industrydesc lovdescindustrydesc,
			    t4.countrydesc lovdesccountrydesc,
			    t5.cpprovincename lovdescprovincename,
			    t6.pccityname lovdesccityname,
				t1.empCategory  
		   FROM employerdetail t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		     JOIN bmtindustries t3 ON t1.empindustry= t3.industrycode
		     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN rmtprovincevscity t6 ON t1.empcity= t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="68.1" author="mangapathi">
		<createView viewName="employerdetail_tview" replaceIfExists="true">
		<![CDATA[
 			SELECT t1.employerid,
			    t1.empindustry,
			    t1.empname,
			    t1.establishdate,
			    t1.empaddrhnbr,
			    t1.empflatnbr,
			    t1.empaddrstreet,
			    t1.empaddrline1,
			    t1.empaddrline2,
			    t1.emppobox,
			    t1.empcountry,
			    t1.empphone,
			    t1.empfax,
			    t1.emptelexno,
			    t1.empemailid,
			    t1.empprovince,
			    t1.empcity,
			    t1.empwebsite,
			    t1.contactpersonname,
			    t1.contactpersonno,
			    t1.empalocationtype,
			    t1.bankrefno,
			    t1.empisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t2.usrlogin,
			    t2.usrfname,
			    t2.usrmname,
			    t2.usrlname,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.industrydesc lovdescindustrydesc,
			    t4.countrydesc lovdesccountrydesc,
			    t5.cpprovincename lovdescprovincename,
			    t6.pccityname lovdesccityname,
				t1.empCategory
			   FROM employerdetail_temp t1
			     JOIN secusers t2 ON t1.lastmntby = t2.usrid
			     JOIN bmtindustries t3 ON t1.empindustry= t3.industrycode
			     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
			     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
			     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="96.1" author="mangapathi">
		<createView viewName="employerdetail_view" replaceIfExists="true">
		<![CDATA[
		 SELECT t1.employerid,
		    t1.empindustry,
		    t1.empname,
		    t1.establishdate,
		    t1.empaddrhnbr,
		    t1.empflatnbr,
		    t1.empaddrstreet,
		    t1.empaddrline1,
		    t1.empaddrline2,
		    t1.emppobox,
		    t1.empcountry,
		    t1.empphone,
		    t1.empfax,
		    t1.emptelexno,
		    t1.empemailid,
		    t1.empprovince,
		    t1.empcity,
		    t1.empwebsite,
		    t1.contactpersonname,
		    t1.contactpersonno,
		    t1.empalocationtype,
		    t1.bankrefno,
		    t1.empisactive,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t2.usrlogin,
		    t2.usrfname,
		    t2.usrmname,
		    t2.usrlname,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t3.industrydesc lovdescindustrydesc,
		    t4.countrydesc lovdesccountrydesc,
		    t5.cpprovincename lovdescprovincename,
		    t6.pccityname lovdesccityname,
			t1.empCategory
		   FROM employerdetail_temp t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		     JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode
		     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
		UNION ALL
		 SELECT t1.employerid,
		    t1.empindustry,
		    t1.empname,
		    t1.establishdate,
		    t1.empaddrhnbr,
		    t1.empflatnbr,
		    t1.empaddrstreet,
		    t1.empaddrline1,
		    t1.empaddrline2,
		    t1.emppobox,
		    t1.empcountry,
		    t1.empphone,
		    t1.empfax,
		    t1.emptelexno,
		    t1.empemailid,
		    t1.empprovince,
		    t1.empcity,
		    t1.empwebsite,
		    t1.contactpersonname,
		    t1.contactpersonno,
		    t1.empalocationtype,
		    t1.bankrefno,
		    t1.empisactive,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t2.usrlogin,
		    t2.usrfname,
		    t2.usrmname,
		    t2.usrlname,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t3.industrydesc lovdescindustrydesc,
		    t4.countrydesc lovdesccountrydesc,
		    t5.cpprovincename lovdescprovincename,
		    t6.pccityname lovdesccityname,
			t1.empCategory
		   FROM employerdetail t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		     JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode
		     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
		  WHERE NOT (EXISTS ( SELECT 1
		           FROM employerdetail_temp
		          WHERE employerdetail_temp.employerid = t1.employerid))
				  ]]>
		</createView>
	</changeSet>


	<changeSet id="102.1" author="lakshmi">
		<createView viewName="financemain_aview" replaceIfExists="true">
		<![CDATA[
		 SELECT t1.finreference,
		    t1.investmentref,
		    t1.numberofterms,
		    t1.grcperiodenddate,
		    t1.allowgrcperiod,
		    t1.gracebaserate,
		    t1.gracespecialrate,
		    t1.grcpftrate,
		    t1.grcpftfrq,
		    t1.nextgrcpftdate,
		    t1.allowgrcpftrvw,
		    t1.grcpftrvwfrq,
		    t1.nextgrcpftrvwdate,
		    t1.allowgrccpz,
		    t1.grccpzfrq,
		    t1.nextgrccpzdate,
		    t1.repaybaserate,
		    t1.repayspecialrate,
		    t1.repayprofitrate,
		    t1.repayfrq,
		    t1.nextrepaydate,
		    t1.repaypftfrq,
		    t1.nextrepaypftdate,
		    t1.allowrepayrvw,
		    t1.repayrvwfrq,
		    t1.nextrepayrvwdate,
		    t1.allowrepaycpz,
		    t1.repaycpzfrq,
		    t1.nextrepaycpzdate,
		    t1.maturitydate,
		    t1.cpzatgraceend,
		    t1.downpayment,
		    t1.graceflatamount,
		    t1.reqrepayamount,
		    t1.totalprofit,
		    t1.totalcpz,
		    t1.totalgrosspft,
		    t1.totalgrossgrcpft,
		    t1.totalgracepft,
		    t1.totalgracecpz,
		    t1.grcratebasis,
		    t1.repayratebasis,
		    t1.fintype,
		    t1.finremarks,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.reqmaturity,
		    t1.calterms,
		    t1.calmaturity,
		    t1.firstrepay,
		    t1.lastrepay,
		    t1.finstartdate,
		    t1.finamount,
		    t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
		    t1.finrepaymentamount,
		    t1.custid,
		    t1.defferments,
		    t1.plandefercount,
		    t1.finbranch,
		    t1.finsourceid,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.alloweddeffrqchange,
		    t1.availeddeffrqchange,
		    t1.recaltype,
		    t1.finassetvalue,
		    t1.disbaccountid,
		    t1.repayaccountid,
		    t1.finisactive,
		    t1.limitvalid,
		    t1.overridelimit,
		    t1.securitydeposit,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t7.fintypedesc lovdescfintypename,
		    t7.finmaxamount lovdescfinmaxamt,
		    t7.finminamount lovdescfinminamount,
		    t1.mindownpayperc,
		    t7.finisalwdifferment lovdescfinalwdeferment,
		    t7.finisdwpayrequired lovdescdwnpayreq,
		    t7.finmaxdifferment lovdescfinmaxdifferment,
		    t12.branchdesc lovdescfinbranchname,
		    t12.branchprovince finbranchprovincecode,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.lastrepayrvwdate,
		    t1.lastrepaycpzdate,
		    t1.allowgrcrepay,
		    t1.grcschdmthd,
		    t1.grcmargin,
		    t1.repaymargin,
		    t1.fincurrassetvalue,
		    t1.fincommitmentref,
		    t1.finlimitref,
		    t1.depreciationfrq,
		    t1.fincontractdate,
		    t1.nextdepdate,
		    t1.lastdepdate,
		    t1.finaccount,
		    t1.fincustpftaccount,
		    t17.acrtilllbd lovdescaccruedtilllbd,
		    t7.finrvwrateapplfor,
		    t1.totalrepayamt,
		    t1.closingstatus,
		    t1.finapproveddate,
		    t1.feechargeamt,
		    t1.blacklisted,
		    t1.finrepaypftonfrq,
		    t1.anualizedpercrate,
		    t1.effectiverateofreturn,
		    t1.migratedfinance,
		    t1.schedulemaintained,
		    t1.scheduleregenerated,
		    t1.finpurpose,
		    t39.loanpurposedesc lovdescfinpurposename,
		    t1.finstatus,
		    t1.finstsreason,
		    t1.initiateuser,
		    t1.bankname,
		    t1.iban,
		    t1.accounttype,
		    t1.ddareferenceno,
		    t7.finscheduleon lovdescfinscheduleon,
		    t1.custdsr,
		    t1.jointaccount,
		    t1.jointcustid,
		    t1.downpaybank,
		    t1.downpaysupl,
		    t1.downpayaccount,
		    t1.securitycollateral,
		    t1.approved,
		    t1.discrepancy,
		    t1.limitapproved,
		    t1.graceterms,
		    t7.findivision lovdescfindivision,
		    t1.rcdmaintainsts,
		    t1.finrepaymethod,
		    t1.grcprofitdaysbasis,
		    t1.stepfinance,
		    t1.steptype,
		    t1.steppolicy,
		    t1.alwmanualsteps,
		    t1.noofsteps,
		    t1.linkedfinref,
		    t1.nextuserid,
		    t1.priority,
		    t24.policydesc lovdescsteppolicyname,
		    t1.grcminrate,
		    t1.grcmaxrate,
		    t1.rpyminrate,
		    t1.rpymaxrate,
		    t1.deviationapproval,
		    t1.manualschedule,
		    t1.takeoverfinance,
		    t1.grcadvbaserate,
		    t1.grcadvmargin,
		    t1.grcadvpftrate,
		    t1.rpyadvbaserate,
		    t1.rpyadvmargin,
		    t1.rpyadvpftrate,
		    t1.supplementrent,
		    t1.increasedcost,
		    t1.creditinsamt,
		    t1.rolloverfrq,
		    t1.nextrolloverdate,
		    t27.custstsdescription,
		    t1.shariastatus,
		    t1.initiatedate,
		    t1.finpreapprovedref,
		    t1.mmaid,
		    t1.accountsofficer,
		    t1.feeaccountid,
		    t1.fincancelac,
		    t28.dealername lovdescaccountsofficer,
		    t28.dealercity lovdescsourcecity,
		    t1.dsacode,
		    t30.rofficerdesc dsacodedesc,
		    t1.tdsapplicable,
		    t1.mandateid,
		    t1.droplinefrq,
		    t1.firstdroplinedate,
		    t1.pftservicingodlimit,
		    t1.insuranceamt,
		    t1.deductinsdisb,
		    t1.alwbpi,
		    t1.bpitreatment,
		    t1.planemihalw,
		    t1.planemihmethod,
		    t1.planemihmaxperyear,
		    t1.planemihmax,
		    t1.planemihlockperiod,
		    t1.planemicpz,
		    t1.calroundingmode,
		    t1.alwmultidisb,
		    t1.applicationno,
		    t1.referralid,
		    t33.rofficerdesc referraliddesc,
		    t1.dmacode,
		    t34.rofficerdesc dmacodedesc,
		    t1.salesdepartment,
		    t35.deptdesc salesdepartmentdesc,
		    t1.quickdisb,
		    t1.wifreference,
		    t1.unplanemihlockperiod,
		    t1.unplanemicpz,
		    t1.reagecpz,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.bpiamount,
		    t1.deductfeedisb,
		    t1.rvwrateapplfor,
		    t1.schcalonrvw,
		    t1.pastduepftcalmthd,
		    t1.pastduepftmargin,
		    t1.droppingmethod,
		    t1.ratechganyday,
		    t1.promotioncode,
		    t1.restructureloan,
		    t1.oldfinreference,
		    t1.reagebucket,
		    t1.fincategory,
		    t1.productcategory,
		    t1.roundingtarget,
		    t36.entitycode lovdescentitycode,
		    t1.eligibilitymethod,
		    t38.fieldcodevalue loveligibilitymethod,
		    t38.valuedesc lovdesceligibilitymethod,
		    t1.employeename,
		    t37.rofficerdesc employeenamedesc,
		    t1.samplingrequired,
		    t1.legalrequired,
		    t1.grcmaxamount,
		    t1.connector,
		    t40.dealername connectorcode,
		    t40.dealercity connectordesc,
		    t1.advanceemi,
		    t1.advemiterms,
		    t1.bpipftdaysbasis,
		    t1.fixedratetenor,
		    t1.fixedtenorrate,
		    t12.branchtel finbranchcontact,
		    t1.processattributes,
		    t1.businessvertical,
		    bv.code businessverticalcode,
		    bv.description businessverticaldesc,
		    t1.grcadvtype,
		    t1.grcadvterms,
		    t1.advtype,
		    t1.advterms,
		    t1.advstage,
		    t1.tdspercentage,
		    t1.tdsstartdate,
		    t1.tdsenddate,
		    t1.tdslimitamt,
		    t1.vanreq,
		    t1.vancode,
		    t1.allowdrawingpower,
		    t1.allowrevolving,
		    t1.sanbsdschdle,
		    t1.promotionseqid,
		    t1.svamount,
		    t1.cbamount,
		    t1.appliedloanamt,
		    t1.finisratervwatgrcend , t1.reqLoanAmt,t1.reqLoanTenor
		   FROM financemain t1
		     JOIN rmtfinancetypes t7 ON t1.fintype  = t7.fintype 
		     LEFT JOIN rmtbranches t12 ON t1.finbranch  = t12.branchcode 
		     LEFT JOIN finpftdetails t17 ON t17.finreference  = t1.finreference 
		     LEFT JOIN steppolicyheader t24 ON t1.steppolicy  = t24.policycode 
		     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus  = t27.custstscode 
		     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
		     LEFT JOIN relationshipofficers t30 ON t1.dsacode  = t30.rofficercode 
		     LEFT JOIN relationshipofficers t33 ON t1.referralid  = t33.rofficercode 
		     LEFT JOIN relationshipofficers t34 ON t1.dmacode  = t34.rofficercode 
		     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment  = t35.deptcode 
		     LEFT JOIN smtdivisiondetail t36 ON t7.findivision  = t36.divisioncode 
		     LEFT JOIN relationshipofficers t37 ON t1.employeename  = t37.rofficercode 
		     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode  = 'ELGMETHOD' 
		     LEFT JOIN loanpurposes t39 ON t1.finpurpose  = t39.loanpurposecode 
		     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
		     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="103_pre" author="lakshmi.v" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="103.1" author="lakshmi">
		<createView viewName="financemain_view" replaceIfExists="true">
		<![CDATA[
	
	 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc lovdescfintypename,
    t7.finmaxamount lovdescfinmaxamt,
    t7.finminamount lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment lovdescfinalwdeferment,
    t7.finisdwpayrequired lovdescdwnpayreq,
    t7.finmaxdifferment lovdescfinmaxdifferment,
    t12.branchdesc lovdescfinbranchname,
    t12.branchprovince finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername lovdescaccountsofficer,
    t28.dealercity lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc referraliddesc,
    t1.dmacode,
    t34.rofficerdesc dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue loveligibilitymethod,
    t38.valuedesc lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername connectorcode,
    t40.dealercity connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code businessverticalcode,
    bv.description businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend , t1.reqLoanAmt,t1.reqLoanTenor
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype  = t7.fintype 
     LEFT JOIN rmtbranches t12 ON t1.finbranch  = t12.branchcode 
     LEFT JOIN finpftdetails t17 ON t17.finreference  = t1.finreference 
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy  = t24.policycode 
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus  = t27.custstscode 
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode  = t30.rofficercode 
     LEFT JOIN relationshipofficers t33 ON t1.referralid  = t33.rofficercode 
     LEFT JOIN relationshipofficers t34 ON t1.dmacode  = t34.rofficercode 
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment  = t35.deptcode 
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision  = t36.divisioncode 
     LEFT JOIN relationshipofficers t37 ON t1.employeename  = t37.rofficercode 
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode  = 'ELGMETHOD' 
     LEFT JOIN loanpurposes t39 ON t1.finpurpose  = t39.loanpurposecode 
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
UNION ALL
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc lovdescfintypename,
    t7.finmaxamount lovdescfinmaxamt,
    t7.finminamount lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment lovdescfinalwdeferment,
    t7.finisdwpayrequired lovdescdwnpayreq,
    t7.finmaxdifferment lovdescfinmaxdifferment,
    t12.branchdesc lovdescfinbranchname,
    t12.branchprovince finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername lovdescaccountsofficer,
    t28.dealercity lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc referraliddesc,
    t1.dmacode,
    t34.rofficerdesc dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue loveligibilitymethod,
    t38.valuedesc lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername connectorcode,
    t40.dealercity connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code businessverticalcode,
    bv.description businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend, t1.reqLoanAmt,t1.reqLoanTenor
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype  = t7.fintype 
     LEFT JOIN rmtbranches t12 ON t1.finbranch  = t12.branchcode 
     LEFT JOIN finpftdetails t17 ON t17.finreference  = t1.finreference 
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy  = t24.policycode 
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus  = t27.custstscode 
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode  = t30.rofficercode 
     LEFT JOIN relationshipofficers t33 ON t1.referralid  = t33.rofficercode 
     LEFT JOIN relationshipofficers t34 ON t1.dmacode  = t34.rofficercode 
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment  = t35.deptcode 
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision  = t36.divisioncode 
     LEFT JOIN relationshipofficers t37 ON t1.employeename  = t37.rofficercode 
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode  = 'ELGMETHOD' 
     LEFT JOIN loanpurposes t39 ON t1.finpurpose  = t39.loanpurposecode 
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
  WHERE NOT (EXISTS ( SELECT 1
           FROM financemain_temp
          WHERE financemain_temp.finreference  = t1.finreference ))
		  ]]>

		</createView>
	</changeSet>

	<changeSet id="103_post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="104.1" author="lakshmi">
		<createView viewName="financemain_tview" replaceIfExists="true">
		<![CDATA[
		 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc lovdescfintypename,
    t7.finmaxamount lovdescfinmaxamt,
    t7.finminamount lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment lovdescfinalwdeferment,
    t7.finisdwpayrequired lovdescdwnpayreq,
    t7.finmaxdifferment lovdescfinmaxdifferment,
    t12.branchdesc lovdescfinbranchname,
    t12.branchprovince finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername lovdescaccountsofficer,
    t28.dealercity lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc referraliddesc,
    t1.dmacode,
    t34.rofficerdesc dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue loveligibilitymethod,
    t38.valuedesc lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername connectorcode,
    t40.dealercity connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code businessverticalcode,
    bv.description businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend , t1.reqLoanAmt,t1.reqLoanTenor
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype  = t7.fintype 
     LEFT JOIN rmtbranches t12 ON t1.finbranch  = t12.branchcode 
     LEFT JOIN finpftdetails t17 ON t17.finreference  = t1.finreference 
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy  = t24.policycode 
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus  = t27.custstscode 
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode  = t30.rofficercode 
     LEFT JOIN relationshipofficers t33 ON t1.referralid  = t33.rofficercode 
     LEFT JOIN relationshipofficers t34 ON t1.dmacode  = t34.rofficercode 
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment  = t35.deptcode 
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision  = t36.divisioncode 
     LEFT JOIN relationshipofficers t37 ON t1.employeename  = t37.rofficercode 
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode  = 'ELGMETHOD' 
     LEFT JOIN loanpurposes t39 ON t1.finpurpose  = t39.loanpurposecode 
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical

	]]>

		</createView>
	</changeSet>

	<changeSet id="105.1" author="lakshmi" dbms="oracle,postgresql">
		<createView viewName="financemain_lview" replaceIfExists="true">
		<![CDATA[
	SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t2.custpassportno lovdesccustpassportno,
    t2.custdob lovdesccustdob,
    t2.custcrcpr lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory lovdescproductcodename,
    t3.findivision lovdescfindivision,
    t3.product lovdescfinproduct,
    t3.fintypedesc lovdescfintypename,
    COALESCE(t4.roledesc, fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
    t1.productcategory,t1.reqLoanAmt,t1.reqLoanTenor
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t3.fintype  = t1.fintype 
     LEFT JOIN secroles t4 ON t1.nextrolecode  = t4.rolecd 
		]]>
		</createView>
	</changeSet>

	<changeSet id="105.1" author="lakshmi" dbms="mssql">
		<createView viewName="financemain_lview" replaceIfExists="true">
		<![CDATA[
	SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif lovdesccustcif,
    t2.custshrtname lovdesccustshrtname,
    t2.custpassportno lovdesccustpassportno,
    t2.custdob lovdesccustdob,
    t2.custcrcpr lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory lovdescproductcodename,
    t3.findivision lovdescfindivision,
    t3.product lovdescfinproduct,
    t3.fintypedesc lovdescfintypename,
    COALESCE(t4.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
    t1.productcategory,t1.reqLoanAmt,t1.reqLoanTenor
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t3.fintype  = t1.fintype 
     LEFT JOIN secroles t4 ON t1.nextrolecode  = t4.rolecd 


		]]>
		</createView>
	</changeSet>



	<changeSet id="109.1" author="lakshmi.n">
		<createView viewName="rejectfinancemain_view" replaceIfExists="true">	
<![CDATA[		
			 SELECT f.finreference,
			    t.fincategory lovdescproductcodename,
			    f.fintype,
			    f.finbranch,
			    f.finstartdate,
			    f.maturitydate,
			    f.numberofterms,
			    f.finccy,
			    f.finamount,
			    (((f.finamount - f.downpayment) + f.feechargeamt) + f.insuranceamt) financingamount,
			    f.feechargeamt,
			    f.insuranceamt,
			    ((((f.finamount - f.downpayment) + f.feechargeamt) + f.insuranceamt) - f.finrepaymentamount) curfinamount,
			    f.downpayment,
			    f.fincurrassetvalue,
			    f.finassetvalue,
			    f.allowdrawingpower,
			    f.promotionseqid,
			    f.sanbsdschdle,
			    c.custcif lovdesccustcif,
			    f.svamount,
			    f.cbamount,
			    f.finisratervwatgrcend,
				f.reqLoanAmt,
				f.reqloanTenor
			   FROM ((rejectfinancemain f
			     LEFT JOIN customers c ON ((f.custid = c.custid)))
			     LEFT JOIN rmtfinancetypes t ON (((f.fintype) = (t.fintype))))
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="113.1" author="rajesh.n">
		<createView viewName="finocrheader_view" replaceIfExists="true">
		<![CDATA[
				SELECT 
					t1.headerid,
					t1.finreference,
					t1.ocrid,
					t1.ocrdescription,
					t1.customerportion,
					t1.ocrapplicable,
					t1.splitapplicable,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid
				   FROM finocrheader_temp t1
				     
				UNION ALL
				 SELECT 
					t1.headerid,
					t1.finreference,
					t1.ocrid,
					t1.ocrdescription ,
					t1.customerportion,
					t1.ocrapplicable,
					t1.splitapplicable,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid
				    FROM finocrheader t1
				  WHERE NOT (EXISTS ( SELECT 1 AS expr1
				           FROM finocrheader_temp
				          WHERE finocrheader_temp.headerid = t1.headerid))
						  ]]>
		</createView>
	</changeSet>

	<changeSet id="114.1" author="rajesh.n">
		<createView viewName="finocrheader_aview" replaceIfExists="true">
		<![CDATA[
			SELECT  t1.headerid,
					t1.finreference,
					t1.ocrid,
					t1.ocrdescription,
					t1.customerportion,
					t1.ocrapplicable,
					t1.splitapplicable,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid
				   FROM finocrheader t1
				   ]]>
		</createView>
	</changeSet>

	<changeSet id="116.1" author="rajesh.n">
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
		<![CDATA[
			 SELECT t1.fintype,
				    t1.fincategory,
				    t1.fintypedesc,
				    t1.finccy,
				    t1.findayscaltype,
				    t1.finactype,
				    t1.fincontingentactype,
				    t1.finisgenref,
				    t1.finmaxamount,
				    t1.finminamount,
				    t1.finisopennewfinac,
				    t1.finisalwmd,
				    t1.finschdmthd,
				    t1.finisalwgrace,
				    t1.equalrepayment,
				    t1.finratetype,
				    t1.finbaserate,
				    t1.finsplrate,
				    t1.finintrate,
				    t1.finminrate,
				    t1.finmaxrate,
				    t1.findftintfrq,
				    t1.finisintcpz,
				    t1.fincpzfrq,
				    t1.finisrvwalw,
				    t1.finrvwfrq,
				    t1.fingrcratetype,
				    t1.fingrcbaserate,
				    t1.fingrcsplrate,
				    t1.fingrcintrate,
				    t1.fingrcminrate,
				    t1.fingrcmaxrate,
				    t1.fingrcdftintfrq,
				    t1.fingrcisintcpz,
				    t1.fingrccpzfrq,
				    t1.fingrcisrvwalw,
				    t1.fingrcrvwfrq,
				    t1.finminterm,
				    t1.finmaxterm,
				    t1.findftterms,
				    t1.finrpyfrq,
				    t1.finrepaymethod,
				    t1.finisalwdifferment,
				    t1.finmaxdifferment,
				    t1.finisactive,
				    t1.stepfinance,
				    t1.steppingmandatory,
				    t1.alwmanualsteps,
				    t1.alwdsteppolicies,
				    t1.dftsteppolicy,
				    t1.finisdwpayrequired,
				    t1.finrvwrateapplfor,
				    t1.finalwratechangeanydate,
				    t1.finisintcpzatgrcend,
				    t1.finschcalcodeonrvw,
				    t1.alwplandeferment,
				    t1.plandefercount,
				    t1.pftpayactype,
				    t1.finisopenpftpayacc,
				    t1.finisalwgrcrepay,
				    t1.fingrcschdmthd,
				    t1.fingrcmargin,
				    t1.finmargin,
				    t1.fincommitmentreq,
				    t1.fincollateralreq,
				    t1.findepreciationreq,
				    t1.findepreciationfrq,
				    t1.finbankcontingentactype,
				    t1.finprovisionactype,
				    t1.allowriainvestment,
				    t1.overridelimit,
				    t1.limitrequired,
				    t1.fincommitmentovrride,
				    t1.fincollateralovrride,
				    t1.finrepaypftonfrq,
				    t1.finpftunchanged,
				    t1.applyodpenalty,
				    t1.odincgrcdays,
				    t1.odchargetype,
				    t1.odgracedays,
				    t1.odchargecalon,
				    t1.odchargeamtorperc,
				    t1.odallowwaiver,
				    t1.odmaxwaiverperc,
				    t1.findivision,
				    t3.divisioncodedesc AS lovdescfindivisionname,
				    t1.finsuspactype,
				    t1.product,
				    t1.startdate,
				    t1.enddate,
				    t1.allowdownpaypgm,
				    t1.fintypedesc AS lovdescpromofintypedesc,
				    t1.remarks,
				    t4.policydesc AS lovdescdftsteppolicyname,
				    t1.pastduepftcalmthd,
				    t1.pastduepftmargin,
				    t1.alwadvancerent,
				    t1.grcadvbaserate,
				    t1.grcadvmargin,
				    t1.grcadvpftrate,
				    t1.rpyadvbaserate,
				    t1.rpyadvmargin,
				    t1.rpyadvpftrate,
				    t1.rolloverfinance,
				    t1.rolloverfrq,
				    t1.downpayrule,
				    t1.alwmultipartydisb,
				    t1.collateraltype,
				    t1.tdsapplicable,
				    t5.rulecode AS downpayrulecode,
				    t5.rulecodedesc AS downpayruledesc,
				    t1.applygrcpricing,
				    t1.applyrpypricing,
				    t6.rulecode AS grcpricingmethoddesc,
				    t7.rulecode AS rpypricingmethoddesc,
				    t1.droplineod,
				    t1.droppingmethod,
				    t1.ratechganyday,
				    t4.steptype AS dftsteppolicytype,
				    t1.manualschedule,
				    t1.alwbpi,
				    t1.bpitreatment,
				    t1.pftdueschon,
				    t1.planemihalw,
				    t1.planemihmethod,
				    t1.planemihmaxperyear,
				    t1.planemihmax,
				    t1.planemihlockperiod,
				    t1.planemicpz,
				    t1.unplanemihlockperiod,
				    t1.unplanemicpz,
				    t1.reagecpz,
				    t1.fddlockperiod,
				    t1.alwdrpymethods,
				    t1.maxunplannedemi,
				    t1.maxreageholidays,
				    t1.roundingmode,
				    t1.roundingtarget,
				    t1.frequencydays,
				    t1.quickdisb,
				    t1.alwreage,
				    t1.alwunplanemiholiday,
				    t1.alwmaxdisbcheckreq,
				    t1.productcategory,
				    t1.rpyhierarchy,
				    t1.developerfinance,
				    t3.entitycode AS lovdescentitycode,
				    t8.entitydesc AS lovdescentitydesc,
				    t1.costoffunds,
				    t1.chequecapturereq,
				    t1.finltvcheck,
				    t1.partiallysecured,
				    t1.alwadvemi,
				    t1.advemiminterms,
				    t1.advemimaxterms,
				    t1.advemidftterms,
				    t1.advemischdmthd,
				    t1.bpipftdaysbasis,
				    t1.eligibilitymethods,
				    t1.alwhybridrate,
				    t1.fixedratetenor,
				    t1.odmincapamount,
				    t1.odrulecode,
				    t1.alwzerointacc,
				    t1.finisalwpartialrpy,
				    t1.autorejectiondays,
				    t1.taxnomand,
				    t1.putcallrequired,
				    t1.grcadvintersetreq,
				    t1.grcadvtype,
				    t1.grcadvminterms,
				    t1.grcadvmaxterms,
				    t1.grcadvdefaultterms,
				    t1.advintersetreq,
				    t1.advtype,
				    t1.advminterms,
				    t1.advmaxterms,
				    t1.advdefaultterms,
				    t1.advstage,
				    t1.dsfreq,
				    t1.cashcollateralreq,
				    t1.alwearlypaymethods,
				    t1.tdsallowtomodify,
				    t1.tdsapplicableto,
				    t1.alwvan,
				    t1.vanallocationmethod,
				    t1.allowdrawingpower,
				    t1.allowrevolving,
				    t1.alwsanctionamt,
				    t1.alwsanctionamtoverride,
				    t1.sanbsdschdle,
				    t1.finisratervwatgrcend,
				    t1.schdonpmtcal,
				    t1.autoapprove,
					t1.ocrrequired,
					t1.allowedocrs,
					t1.defaultocr
				   FROM rmtfinancetypes t1
				     JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
				     LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
				     LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
				     LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
				     LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
				     LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
					 ]]>
		</createView>
	</changeSet>



	<changeSet id="121" author="Rajesh.N">
		<createView viewName="financemain_aview" replaceIfExists="true">
		<![CDATA[
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired
	 FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype  = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch  = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference  = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy  = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus  = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode  = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid  = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode  = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment  = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision  = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename  = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode  = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose  = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
	 ]]>
		</createView>
	</changeSet>


	<changeSet id="122" author="Rajesh.N" dbms="postgresql,oracle">
		<createView viewName="financemain_lview" replaceIfExists="true">
			<![CDATA[
 SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t2.custshrtname AS lovdesccustshrtname,
    t2.custpassportno AS lovdesccustpassportno,
    t2.custdob AS lovdesccustdob,
    t2.custcrcpr AS lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory AS lovdescproductcodename,
    t3.findivision AS lovdescfindivision,
    t3.product AS lovdescfinproduct,
    t3.fintypedesc AS lovdescfintypename,
    COALESCE(t4.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
    t1.productcategory,
    t1.reqloanamt,
    t1.reqloantenor,
	t1.FinOcrRequired
   FROM (((financemain_temp t1
     JOIN customers t2 ON ((t1.custid = t2.custid)))
     JOIN rmtfinancetypes t3 ON (((t3.fintype)= (t1.fintype))))
     LEFT JOIN secroles t4 ON (((t1.nextrolecode)= (t4.rolecd))))
	  ]]>
		</createView>
	</changeSet>



	<changeSet id="122" author="Rajesh.N" dbms="mssql">
		<createView viewName="financemain_lview" replaceIfExists="true">
			<![CDATA[
 SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t2.custshrtname AS lovdesccustshrtname,
    t2.custpassportno AS lovdesccustpassportno,
    t2.custdob AS lovdesccustdob,
    t2.custcrcpr AS lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory AS lovdescproductcodename,
    t3.findivision AS lovdescfindivision,
    t3.product AS lovdescfinproduct,
    t3.fintypedesc AS lovdescfintypename,
    COALESCE(t4.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
    t1.productcategory,
    t1.reqloanamt,
    t1.reqloantenor,
	t1.FinOcrRequired
   FROM (((financemain_temp t1
     JOIN customers t2 ON ((t1.custid = t2.custid)))
     JOIN rmtfinancetypes t3 ON (((t3.fintype)= (t1.fintype))))
     LEFT JOIN secroles t4 ON (((t1.nextrolecode)= (t4.rolecd))))
	  ]]>
		</createView>
	</changeSet>

	<changeSet id="123" author="Rajesh.N">
		<createView viewName="financemain_tview" replaceIfExists="true">	
<![CDATA[		
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
	t1.FinOcrRequired
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype   = t7.fintype  
     LEFT JOIN rmtbranches t12 ON t1.finbranch   = t12.branchcode  
     LEFT JOIN finpftdetails t17 ON t17.finreference   = t1.finreference  
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy   = t24.policycode  
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus   = t27.custstscode  
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode   = t30.rofficercode  
     LEFT JOIN relationshipofficers t33 ON t1.referralid   = t33.rofficercode  
     LEFT JOIN relationshipofficers t34 ON t1.dmacode   = t34.rofficercode  
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment   = t35.deptcode  
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision   = t36.divisioncode  
     LEFT JOIN relationshipofficers t37 ON t1.employeename   = t37.rofficercode  
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode   = 'ELGMETHOD'  
     LEFT JOIN loanpurposes t39 ON t1.finpurpose   = t39.loanpurposecode  
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
	 ]]>
		</createView>
	</changeSet>



	<changeSet id="124.1_pre" author="Rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'financemain_view');
					
			]]>
		</sql>
	</changeSet>



	<changeSet id="124.1" author="Rajesh.N">
		<createView viewName="financemain_view" replaceIfExists="true">	 
		<![CDATA[
				  SELECT t1.finreference,
				    t1.investmentref,
				    t1.numberofterms,
				    t1.grcperiodenddate,
				    t1.allowgrcperiod,
				    t1.gracebaserate,
				    t1.gracespecialrate,
				    t1.grcpftrate,
				    t1.grcpftfrq,
				    t1.nextgrcpftdate,
				    t1.allowgrcpftrvw,
				    t1.grcpftrvwfrq,
				    t1.nextgrcpftrvwdate,
				    t1.allowgrccpz,
				    t1.grccpzfrq,
				    t1.nextgrccpzdate,
				    t1.repaybaserate,
				    t1.repayspecialrate,
				    t1.repayprofitrate,
				    t1.repayfrq,
				    t1.nextrepaydate,
				    t1.repaypftfrq,
				    t1.nextrepaypftdate,
				    t1.allowrepayrvw,
				    t1.repayrvwfrq,
				    t1.nextrepayrvwdate,
				    t1.allowrepaycpz,
				    t1.repaycpzfrq,
				    t1.nextrepaycpzdate,
				    t1.maturitydate,
				    t1.cpzatgraceend,
				    t1.downpayment,
				    t1.graceflatamount,
				    t1.reqrepayamount,
				    t1.totalprofit,
				    t1.totalcpz,
				    t1.totalgrosspft,
				    t1.totalgrossgrcpft,
				    t1.totalgracepft,
				    t1.totalgracecpz,
				    t1.grcratebasis,
				    t1.repayratebasis,
				    t1.fintype,
				    t1.finremarks,
				    t1.finccy,
				    t1.schedulemethod,
				    t1.profitdaysbasis,
				    t1.reqmaturity,
				    t1.calterms,
				    t1.calmaturity,
				    t1.firstrepay,
				    t1.lastrepay,
				    t1.finstartdate,
				    t1.finamount,
				    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
				    t1.finrepaymentamount,
				    t1.custid,
				    t1.defferments,
				    t1.plandefercount,
				    t1.finbranch,
				    t1.finsourceid,
				    t1.alloweddefrpychange,
				    t1.availeddefrpychange,
				    t1.alloweddeffrqchange,
				    t1.availeddeffrqchange,
				    t1.recaltype,
				    t1.finassetvalue,
				    t1.disbaccountid,
				    t1.repayaccountid,
				    t1.finisactive,
				    t1.limitvalid,
				    t1.overridelimit,
				    t1.securitydeposit,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t7.fintypedesc AS lovdescfintypename,
				    t7.finmaxamount AS lovdescfinmaxamt,
				    t7.finminamount AS lovdescfinminamount,
				    t1.mindownpayperc,
				    t7.finisalwdifferment AS lovdescfinalwdeferment,
				    t7.finisdwpayrequired AS lovdescdwnpayreq,
				    t7.finmaxdifferment AS lovdescfinmaxdifferment,
				    t12.branchdesc AS lovdescfinbranchname,
				    t12.branchprovince AS finbranchprovincecode,
				    t1.lastrepaydate,
				    t1.lastrepaypftdate,
				    t1.lastrepayrvwdate,
				    t1.lastrepaycpzdate,
				    t1.allowgrcrepay,
				    t1.grcschdmthd,
				    t1.grcmargin,
				    t1.repaymargin,
				    t1.fincurrassetvalue,
				    t1.fincommitmentref,
				    t1.finlimitref,
				    t1.depreciationfrq,
				    t1.fincontractdate,
				    t1.nextdepdate,
				    t1.lastdepdate,
				    t1.finaccount,
				    t1.fincustpftaccount,
				    t17.acrtilllbd AS lovdescaccruedtilllbd,
				    t7.finrvwrateapplfor,
				    t1.totalrepayamt,
				    t1.closingstatus,
				    t1.finapproveddate,
				    t1.feechargeamt,
				    t1.blacklisted,
				    t1.finrepaypftonfrq,
				    t1.anualizedpercrate,
				    t1.effectiverateofreturn,
				    t1.migratedfinance,
				    t1.schedulemaintained,
				    t1.scheduleregenerated,
				    t1.finpurpose,
				    t39.loanpurposedesc AS lovdescfinpurposename,
				    t1.finstatus,
				    t1.finstsreason,
				    t1.initiateuser,
				    t1.bankname,
				    t1.iban,
				    t1.accounttype,
				    t1.ddareferenceno,
				    t7.finscheduleon AS lovdescfinscheduleon,
				    t1.custdsr,
				    t1.jointaccount,
				    t1.jointcustid,
				    t1.downpaybank,
				    t1.downpaysupl,
				    t1.downpayaccount,
				    t1.securitycollateral,
				    t1.approved,
				    t1.discrepancy,
				    t1.limitapproved,
				    t1.graceterms,
				    t7.findivision AS lovdescfindivision,
				    t1.rcdmaintainsts,
				    t1.finrepaymethod,
				    t1.grcprofitdaysbasis,
				    t1.stepfinance,
				    t1.steptype,
				    t1.steppolicy,
				    t1.alwmanualsteps,
				    t1.noofsteps,
				    t1.linkedfinref,
				    t1.nextuserid,
				    t1.priority,
				    t24.policydesc AS lovdescsteppolicyname,
				    t1.grcminrate,
				    t1.grcmaxrate,
				    t1.rpyminrate,
				    t1.rpymaxrate,
				    t1.deviationapproval,
				    t1.manualschedule,
				    t1.takeoverfinance,
				    t1.grcadvbaserate,
				    t1.grcadvmargin,
				    t1.grcadvpftrate,
				    t1.rpyadvbaserate,
				    t1.rpyadvmargin,
				    t1.rpyadvpftrate,
				    t1.supplementrent,
				    t1.increasedcost,
				    t1.creditinsamt,
				    t1.rolloverfrq,
				    t1.nextrolloverdate,
				    t27.custstsdescription,
				    t1.shariastatus,
				    t1.initiatedate,
				    t1.finpreapprovedref,
				    t1.mmaid,
				    t1.accountsofficer,
				    t1.feeaccountid,
				    t1.fincancelac,
				    t28.dealername AS lovdescaccountsofficer,
				    t28.dealercity AS lovdescsourcecity,
				    t1.dsacode,
				    t30.rofficerdesc AS dsacodedesc,
				    t1.tdsapplicable,
				    t1.mandateid,
				    t1.droplinefrq,
				    t1.firstdroplinedate,
				    t1.pftservicingodlimit,
				    t1.insuranceamt,
				    t1.deductinsdisb,
				    t1.alwbpi,
				    t1.bpitreatment,
				    t1.planemihalw,
				    t1.planemihmethod,
				    t1.planemihmaxperyear,
				    t1.planemihmax,
				    t1.planemihlockperiod,
				    t1.planemicpz,
				    t1.calroundingmode,
				    t1.alwmultidisb,
				    t1.applicationno,
				    t1.referralid,
				    t33.rofficerdesc AS referraliddesc,
				    t1.dmacode,
				    t34.rofficerdesc AS dmacodedesc,
				    t1.salesdepartment,
				    t35.deptdesc AS salesdepartmentdesc,
				    t1.quickdisb,
				    t1.wifreference,
				    t1.unplanemihlockperiod,
				    t1.unplanemicpz,
				    t1.reagecpz,
				    t1.maxunplannedemi,
				    t1.maxreageholidays,
				    t1.availedunplanemi,
				    t1.availedreageh,
				    t1.bpiamount,
				    t1.deductfeedisb,
				    t1.rvwrateapplfor,
				    t1.schcalonrvw,
				    t1.pastduepftcalmthd,
				    t1.pastduepftmargin,
				    t1.droppingmethod,
				    t1.ratechganyday,
				    t1.promotioncode,
				    t1.restructureloan,
				    t1.oldfinreference,
				    t1.reagebucket,
				    t1.fincategory,
				    t1.productcategory,
				    t1.roundingtarget,
				    t36.entitycode AS lovdescentitycode,
				    t1.eligibilitymethod,
				    t38.fieldcodevalue AS loveligibilitymethod,
				    t38.valuedesc AS lovdesceligibilitymethod,
				    t1.employeename,
				    t37.rofficerdesc AS employeenamedesc,
				    t1.samplingrequired,
				    t1.legalrequired,
				    t1.grcmaxamount,
				    t1.connector,
				    t40.dealername AS connectorcode,
				    t40.dealercity AS connectordesc,
				    t1.advanceemi,
				    t1.advemiterms,
				    t1.bpipftdaysbasis,
				    t1.fixedratetenor,
				    t1.fixedtenorrate,
				    t12.branchtel AS finbranchcontact,
				    t1.processattributes,
				    t1.businessvertical,
				    bv.code AS businessverticalcode,
				    bv.description AS businessverticaldesc,
				    t1.grcadvtype,
				    t1.grcadvterms,
				    t1.advtype,
				    t1.advterms,
				    t1.advstage,
				    t1.tdspercentage,
				    t1.tdsstartdate,
				    t1.tdsenddate,
				    t1.tdslimitamt,
				    t1.vanreq,
				    t1.vancode,
				    t1.allowdrawingpower,
				    t1.allowrevolving,
				    t1.sanbsdschdle,
				    t1.promotionseqid,
				    t1.svamount,
				    t1.cbamount,
				    t1.appliedloanamt,
				    t1.finisratervwatgrcend,
				    t1.reqloanamt,
				    t1.reqloantenor,
					t1.FinOcrRequired
				   FROM financemain_temp t1
				     JOIN rmtfinancetypes t7 ON t1.fintype   = t7.fintype 
				     LEFT JOIN rmtbranches t12 ON t1.finbranch   = t12.branchcode 
				     LEFT JOIN finpftdetails t17 ON t17.finreference   = t1.finreference 
				     LEFT JOIN steppolicyheader t24 ON t1.steppolicy   = t24.policycode 
				     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus   = t27.custstscode 
				     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
				     LEFT JOIN relationshipofficers t30 ON t1.dsacode   = t30.rofficercode 
				     LEFT JOIN relationshipofficers t33 ON t1.referralid   = t33.rofficercode 
				     LEFT JOIN relationshipofficers t34 ON t1.dmacode   = t34.rofficercode 
				     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment   = t35.deptcode 
				     LEFT JOIN smtdivisiondetail t36 ON t7.findivision   = t36.divisioncode 
				     LEFT JOIN relationshipofficers t37 ON t1.employeename   = t37.rofficercode 
				     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode   = 'ELGMETHOD' 
				     LEFT JOIN loanpurposes t39 ON t1.finpurpose   = t39.loanpurposecode 
				     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
				     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
				UNION ALL
				 SELECT t1.finreference,
				    t1.investmentref,
				    t1.numberofterms,
				    t1.grcperiodenddate,
				    t1.allowgrcperiod,
				    t1.gracebaserate,
				    t1.gracespecialrate,
				    t1.grcpftrate,
				    t1.grcpftfrq,
				    t1.nextgrcpftdate,
				    t1.allowgrcpftrvw,
				    t1.grcpftrvwfrq,
				    t1.nextgrcpftrvwdate,
				    t1.allowgrccpz,
				    t1.grccpzfrq,
				    t1.nextgrccpzdate,
				    t1.repaybaserate,
				    t1.repayspecialrate,
				    t1.repayprofitrate,
				    t1.repayfrq,
				    t1.nextrepaydate,
				    t1.repaypftfrq,
				    t1.nextrepaypftdate,
				    t1.allowrepayrvw,
				    t1.repayrvwfrq,
				    t1.nextrepayrvwdate,
				    t1.allowrepaycpz,
				    t1.repaycpzfrq,
				    t1.nextrepaycpzdate,
				    t1.maturitydate,
				    t1.cpzatgraceend,
				    t1.downpayment,
				    t1.graceflatamount,
				    t1.reqrepayamount,
				    t1.totalprofit,
				    t1.totalcpz,
				    t1.totalgrosspft,
				    t1.totalgrossgrcpft,
				    t1.totalgracepft,
				    t1.totalgracecpz,
				    t1.grcratebasis,
				    t1.repayratebasis,
				    t1.fintype,
				    t1.finremarks,
				    t1.finccy,
				    t1.schedulemethod,
				    t1.profitdaysbasis,
				    t1.reqmaturity,
				    t1.calterms,
				    t1.calmaturity,
				    t1.firstrepay,
				    t1.lastrepay,
				    t1.finstartdate,
				    t1.finamount,
				    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
				    t1.finrepaymentamount,
				    t1.custid,
				    t1.defferments,
				    t1.plandefercount,
				    t1.finbranch,
				    t1.finsourceid,
				    t1.alloweddefrpychange,
				    t1.availeddefrpychange,
				    t1.alloweddeffrqchange,
				    t1.availeddeffrqchange,
				    t1.recaltype,
				    t1.finassetvalue,
				    t1.disbaccountid,
				    t1.repayaccountid,
				    t1.finisactive,
				    t1.limitvalid,
				    t1.overridelimit,
				    t1.securitydeposit,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t7.fintypedesc AS lovdescfintypename,
				    t7.finmaxamount AS lovdescfinmaxamt,
				    t7.finminamount AS lovdescfinminamount,
				    t1.mindownpayperc,
				    t7.finisalwdifferment AS lovdescfinalwdeferment,
				    t7.finisdwpayrequired AS lovdescdwnpayreq,
				    t7.finmaxdifferment AS lovdescfinmaxdifferment,
				    t12.branchdesc AS lovdescfinbranchname,
				    t12.branchprovince AS finbranchprovincecode,
				    t1.lastrepaydate,
				    t1.lastrepaypftdate,
				    t1.lastrepayrvwdate,
				    t1.lastrepaycpzdate,
				    t1.allowgrcrepay,
				    t1.grcschdmthd,
				    t1.grcmargin,
				    t1.repaymargin,
				    t1.fincurrassetvalue,
				    t1.fincommitmentref,
				    t1.finlimitref,
				    t1.depreciationfrq,
				    t1.fincontractdate,
				    t1.nextdepdate,
				    t1.lastdepdate,
				    t1.finaccount,
				    t1.fincustpftaccount,
				    t17.acrtilllbd AS lovdescaccruedtilllbd,
				    t7.finrvwrateapplfor,
				    t1.totalrepayamt,
				    t1.closingstatus,
				    t1.finapproveddate,
				    t1.feechargeamt,
				    t1.blacklisted,
				    t1.finrepaypftonfrq,
				    t1.anualizedpercrate,
				    t1.effectiverateofreturn,
				    t1.migratedfinance,
				    t1.schedulemaintained,
				    t1.scheduleregenerated,
				    t1.finpurpose,
				    t39.loanpurposedesc AS lovdescfinpurposename,
				    t1.finstatus,
				    t1.finstsreason,
				    t1.initiateuser,
				    t1.bankname,
				    t1.iban,
				    t1.accounttype,
				    t1.ddareferenceno,
				    t7.finscheduleon AS lovdescfinscheduleon,
				    t1.custdsr,
				    t1.jointaccount,
				    t1.jointcustid,
				    t1.downpaybank,
				    t1.downpaysupl,
				    t1.downpayaccount,
				    t1.securitycollateral,
				    t1.approved,
				    t1.discrepancy,
				    t1.limitapproved,
				    t1.graceterms,
				    t7.findivision AS lovdescfindivision,
				    t1.rcdmaintainsts,
				    t1.finrepaymethod,
				    t1.grcprofitdaysbasis,
				    t1.stepfinance,
				    t1.steptype,
				    t1.steppolicy,
				    t1.alwmanualsteps,
				    t1.noofsteps,
				    t1.linkedfinref,
				    t1.nextuserid,
				    t1.priority,
				    t24.policydesc AS lovdescsteppolicyname,
				    t1.grcminrate,
				    t1.grcmaxrate,
				    t1.rpyminrate,
				    t1.rpymaxrate,
				    t1.deviationapproval,
				    t1.manualschedule,
				    t1.takeoverfinance,
				    t1.grcadvbaserate,
				    t1.grcadvmargin,
				    t1.grcadvpftrate,
				    t1.rpyadvbaserate,
				    t1.rpyadvmargin,
				    t1.rpyadvpftrate,
				    t1.supplementrent,
				    t1.increasedcost,
				    t1.creditinsamt,
				    t1.rolloverfrq,
				    t1.nextrolloverdate,
				    t27.custstsdescription,
				    t1.shariastatus,
				    t1.initiatedate,
				    t1.finpreapprovedref,
				    t1.mmaid,
				    t1.accountsofficer,
				    t1.feeaccountid,
				    t1.fincancelac,
				    t28.dealername AS lovdescaccountsofficer,
				    t28.dealercity AS lovdescsourcecity,
				    t1.dsacode,
				    t30.rofficerdesc AS dsacodedesc,
				    t1.tdsapplicable,
				    t1.mandateid,
				    t1.droplinefrq,
				    t1.firstdroplinedate,
				    t1.pftservicingodlimit,
				    t1.insuranceamt,
				    t1.deductinsdisb,
				    t1.alwbpi,
				    t1.bpitreatment,
				    t1.planemihalw,
				    t1.planemihmethod,
				    t1.planemihmaxperyear,
				    t1.planemihmax,
				    t1.planemihlockperiod,
				    t1.planemicpz,
				    t1.calroundingmode,
				    t1.alwmultidisb,
				    t1.applicationno,
				    t1.referralid,
				    t33.rofficerdesc AS referraliddesc,
				    t1.dmacode,
				    t34.rofficerdesc AS dmacodedesc,
				    t1.salesdepartment,
				    t35.deptdesc AS salesdepartmentdesc,
				    t1.quickdisb,
				    t1.wifreference,
				    t1.unplanemihlockperiod,
				    t1.unplanemicpz,
				    t1.reagecpz,
				    t1.maxunplannedemi,
				    t1.maxreageholidays,
				    t1.availedunplanemi,
				    t1.availedreageh,
				    t1.bpiamount,
				    t1.deductfeedisb,
				    t1.rvwrateapplfor,
				    t1.schcalonrvw,
				    t1.pastduepftcalmthd,
				    t1.pastduepftmargin,
				    t1.droppingmethod,
				    t1.ratechganyday,
				    t1.promotioncode,
				    t1.restructureloan,
				    t1.oldfinreference,
				    t1.reagebucket,
				    t1.fincategory,
				    t1.productcategory,
				    t1.roundingtarget,
				    t36.entitycode AS lovdescentitycode,
				    t1.eligibilitymethod,
				    t38.fieldcodevalue AS loveligibilitymethod,
				    t38.valuedesc AS lovdesceligibilitymethod,
				    t1.employeename,
				    t37.rofficerdesc AS employeenamedesc,
				    t1.samplingrequired,
				    t1.legalrequired,
				    t1.grcmaxamount,
				    t1.connector,
				    t40.dealername AS connectorcode,
				    t40.dealercity AS connectordesc,
				    t1.advanceemi,
				    t1.advemiterms,
				    t1.bpipftdaysbasis,
				    t1.fixedratetenor,
				    t1.fixedtenorrate,
				    t12.branchtel AS finbranchcontact,
				    t1.processattributes,
				    t1.businessvertical,
				    bv.code AS businessverticalcode,
				    bv.description AS businessverticaldesc,
				    t1.grcadvtype,
				    t1.grcadvterms,
				    t1.advtype,
				    t1.advterms,
				    t1.advstage,
				    t1.tdspercentage,
				    t1.tdsstartdate,
				    t1.tdsenddate,
				    t1.tdslimitamt,
				    t1.vanreq,
				    t1.vancode,
				    t1.allowdrawingpower,
				    t1.allowrevolving,
				    t1.sanbsdschdle,
				    t1.promotionseqid,
				    t1.svamount,
				    t1.cbamount,
				    t1.appliedloanamt,
				    t1.finisratervwatgrcend,
				    t1.reqloanamt,
				    t1.reqloantenor,
					t1.FinOcrRequired
				   FROM financemain t1
				     JOIN rmtfinancetypes t7 ON t1.fintype   = t7.fintype 
				     LEFT JOIN rmtbranches t12 ON t1.finbranch   = t12.branchcode 
				     LEFT JOIN finpftdetails t17 ON t17.finreference   = t1.finreference 
				     LEFT JOIN steppolicyheader t24 ON t1.steppolicy   = t24.policycode 
				     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus   = t27.custstscode 
				     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
				     LEFT JOIN relationshipofficers t30 ON t1.dsacode   = t30.rofficercode 
				     LEFT JOIN relationshipofficers t33 ON t1.referralid   = t33.rofficercode 
				     LEFT JOIN relationshipofficers t34 ON t1.dmacode   = t34.rofficercode 
				     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment   = t35.deptcode 
				     LEFT JOIN smtdivisiondetail t36 ON t7.findivision   = t36.divisioncode 
				     LEFT JOIN relationshipofficers t37 ON t1.employeename   = t37.rofficercode 
				     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode   = 'ELGMETHOD' 
				     LEFT JOIN loanpurposes t39 ON t1.finpurpose   = t39.loanpurposecode 
				     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
				     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM financemain_temp
				          WHERE financemain_temp.finreference   = t1.finreference ))
				
				 ]]>

		</createView>
	</changeSet>


	<changeSet id="124.1_post" author="Rajesh" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');
					
			]]>
		</sql>
	</changeSet>

	<changeSet id="125_pre" author="saiDurga.v" dbms="postgresql">
		<sql> 
		<![CDATA[ select deps_save_and_drop_dependencies ('plf', 'customers_aview'); ]]>
		</sql>
	</changeSet>


	<changeSet id="125" author="Rajesh.N">
		<createView viewName="customers_aview" replaceIfExists="true">	 
		<![CDATA[
					SELECT t1.custid,
					    t1.custcif,
					    t1.custcorebank,
					    t1.custctgcode,
					    t1.custtypecode,
					    t1.custsalutationcode,
					    t1.custfname,
					    t1.custmname,
					    t1.custlname,
					    t1.custshrtname,
					    t1.custfnamelcllng,
					    t1.custmnamelcllng,
					    t1.custlnamelcllng,
					    t1.custshrtnamelcllng,
					    t1.custdftbranch,
					    t1.custgendercode,
					    t1.custdob,
						t1.custnationality,
					    t1.custpob,
					    t1.custcob,
					    t1.custpassportno,
					    t1.custmothermaiden,
					    t1.custisminor,
					    t1.custreferedby,
					    t1.custdsa,
					    t1.custdsadept,
					    t1.custro1,
					    t1.custro2,
					    t1.custgroupid,
					    t1.custsts,
					    t1.custstschgdate,
					    t1.custgroupsts,
					    t1.custisblocked,
					    t1.custisactive,
					    t1.custisclosed,
					    t1.custinactivereason,
					    t1.custisdecease,
					    t1.custisdormant,
					    t1.custisdelinquent,
					    t1.custistradefincust,
					    t1.custtradelicencenum,
					    t1.custtradelicenceexpiry,
					    t1.custpassportexpiry,
					    t1.custvisanum,
					    t1.custvisaexpiry,
					    t1.custisstaff,
					    t1.custstaffid,
					    t1.custindustry,
					    t1.custsector,
					    t1.custsubsector,
						t35.phonenumber,
					    t35.phoneareacode,
					    t35.phonecountrycode,
					    t1.custcrcpr,
					    t36.custemail AS emailid,
					    t1.custprofession,
					    t1.custtotalincome,
					    t1.custmaritalsts,
					    t1.custempsts,
					    t1.custsegment,
					    t1.custsubsegment,
					    t1.custisblacklisted,
					    t1.custblrsncode,
					    t1.custisrejected,
					    t1.custrejectedrsn,
					    t1.custbaseccy,
					    t1.custlng,
					    t1.custparentcountry,
					    t1.custresdcountry,
					    t1.custriskcountry,
					    t1.custclosedon,
					    t1.custstmtfrq,
					    t1.custisstmtcombined,
					    t1.custstmtlastdate,
					    t1.custstmtnextdate,
					    t1.custstmtdispatchmode,
					    t1.custfirstbusinessdate,
					    t1.custaddlvar81,
					    t1.custaddlvar82,
						t2.custtypedesc AS lovdesccusttypecodename,
					    t2.custtypectg AS lovdesccustctgtype,
					    t18.custctgdesc AS lovdesccustctgcodename,
					    t1.custaddlvar83,
					    t1.custaddlvar84,
					    t1.custaddlvar85,
					    t1.custaddlvar86,
					    t1.custaddlvar87,
					    t1.custaddlvar88,
					    t1.custaddlvar89,
					    t1.custaddldate1,
					    t1.custaddldate2,
					    t1.custaddldate3,
					    t1.custaddldate4,
					    t1.custaddldate5,
					    t1.custaddlvar1,
					    t1.custaddlvar2,
					    t1.custaddlvar3,
					    t1.custaddlvar4,
					    t1.custaddlvar5,
					    t1.custaddlvar6,
					    t1.custaddlvar7,
					    t1.custaddlvar8,
					    t1.custaddlvar9,
					    t1.custaddlvar10,
					    t1.custaddlvar11,
					    t1.custaddldec1,
					    t1.custaddldec2,
					    t1.custaddldec3,
					    t1.custaddldec4,
					    t1.custaddldec5,
					    t1.custaddlint1,
					    t1.custaddlint2,
					    t1.custaddlint3,
					    t1.custaddlint4,
					    t1.custaddlint5,
					    t1.version,
					    t1.custsourceid,
					    t1.lastmntby,
					    t1.lastmnton,
					    t1.recordstatus,
					    t1.rolecode,
					    t1.nextrolecode,
					    t1.taskid,
					    t1.nexttaskid,
					    t1.recordtype,
					    t1.workflowid,
					    t3.maritalstsdesc AS lovdesccustmaritalstsname,
					    t4.empstsdesc AS lovdesccustempstsname,
					    t6.custstsdescription AS lovdesccuststsname,
					    t7.industrydesc AS lovdesccustindustryname,
					    t8.sectordesc AS lovdesccustsectorname,
					    t9.subsectordesc AS lovdesccustsubsectorname,
					    t10.professiondesc AS lovdesccustprofessionname,
					    t11.countrydesc AS lovdesccustcobname,
					    t20.segmentdesc AS lovdesccustsegmentname,
					    t12.nationalitydesc AS lovdesccustnationalityname,
					    t13.genderdesc AS lovdesccustgendercodename,
					    t14.deptdesc AS lovdesccustdsadeptname,
					    t15.dealername AS lovdesccustro1name,
					    t15.dealercity AS lovdesccustro1city,
					    t16.grpstsdescription AS lovdesccustgroupstsname,
					    t17.branchdesc AS lovdesccustdftbranchname,
					    t17.bankrefno AS branchrefno,
					    t17.branchswiftbrncde AS custswiftbrncode,
					    t19.saluationdesc AS lovdesccustsalutationcodename,
					    t21.countrydesc AS lovdesccustparentcountryname,
					    t22.countrydesc AS lovdesccustresdcountryname,
					    t23.countrydesc AS lovdesccustriskcountryname,
					    t24.rofficerdesc AS lovdesccustro2name,
					    t25.blrsndesc AS lovdesccustblrsncodename,
					    t26.rejectdesc AS lovdesccustrejectedrsnname,
					    t27.custgrpdesc AS lovdesccustgroupidname,
					    t28.subsegmentdesc AS lovdesccustsubsegmentname,
					    t29.lngdesc AS lovdesccustlngname,
					    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
					    t1.dedupfound,
					    t1.skipdedup,
					    t1.custtotalexpense,
					    t1.custblacklistdate,
					    t1.noofdependents,
					    t1.jointcust,
					    t1.jointcustname,
					    t1.jointcustdob,
					    t27.custgrpcode AS lovdesccustgroupcode,
					    t1.custrelation,
					    t1.contactpersonname,
					    t1.salariedcustomer,
					    t31.targetdesc AS lovdesctargetname,
					    t1.custsuspsts,
					    t1.custsuspdate,
					    t1.custsusptrigger,
					    t1.subcategory,
					    t1.casteid,
					    t1.religionid,
					    t32.castecode,
					    t32.castedesc,
					    t33.religioncode,
					    t33.religiondesc,
					    COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
					    t1.margindeviation,
					    t1.applicationno,
					    t17.branchprovince,
					    t1.dnd,
					    t1.othercaste,
					    t1.otherreligion,
					    t1.natureofbusiness,
					    t1.entitytype,
					    t1.custresidentialsts,
					    t1.qualification,
					    t1.custflag
					   FROM customers t1
					     LEFT JOIN rmtcusttypes t2 ON t1.custtypecode  = t2.custtypecode 
					     LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts  = t3.maritalstscode 
					     LEFT JOIN bmtempstscodes t4 ON t1.custempsts  = t4.empstscode 
					     LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts  = t6.custstscode 
					     LEFT JOIN bmtindustries t7 ON t1.custindustry  = t7.industrycode 
					     LEFT JOIN bmtsectors t8 ON t1.custsector  = t8.sectorcode 
					     LEFT JOIN bmtsubsectors t9 ON t1.custsector  = t9.sectorcode  AND t1.custsubsector  = t9.subsectorcode 
					     LEFT JOIN bmtprofessions t10 ON t1.custprofession  = t10.professioncode 
					     LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
					     LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
					     LEFT JOIN bmtgenders t13 ON t1.custgendercode  = t13.gendercode 
					     LEFT JOIN bmtdepartments t14 ON t1.custdsadept  = t14.deptcode 
					     LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
					     LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts  = t16.grpstscode 
					     LEFT JOIN rmtbranches t17 ON t1.custdftbranch  = t17.branchcode 
					     LEFT JOIN bmtcustcategories t18 ON t1.custctgcode  = t18.custctgcode 
					     LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode  = t19.salutationcode 
					     LEFT JOIN bmtsegments t20 ON t1.custsegment  = t20.segmentcode 
					     LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
					     LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
					     LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
					     LEFT JOIN relationshipofficers t24 ON t1.custro2  = t24.rofficercode 
					     LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode  = t25.blrsncode 
					     LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn  = t26.rejectcode 
					     LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
					     LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment  = t28.subsegmentcode 
					     LEFT JOIN bmtlanguage t29 ON t1.custlng  = t29.lngcode 
					     LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode  = t30.dispatchmodecode 
					     LEFT JOIN targetdetails t31 ON t1.custaddlvar82  = t31.targetcode 
					     LEFT JOIN caste t32 ON t1.casteid = t32.casteid
					     LEFT JOIN religion t33 ON t1.religionid = t33.religionid
					     LEFT JOIN secroles t34 ON t1.nextrolecode  = t34.rolecd 
						 LEFT JOIN customerphonenumbers t35 ON t1.custid = t35.phonecustid AND t35.phonetypepriority = 5
						 LEFT JOIN customeremails t36 ON t1.custid = t36.custid AND t36.custemailtypecode  = 'OFFICE' 
					     
 					]]>
		</createView>
	</changeSet>

	<changeSet id="125_post" author="Rajesh" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'customers_aview');
					
			]]>
		</sql>
	</changeSet>



	<changeSet id="128.1" author="mangapathi">
		<createView viewName="BlackListCustomer_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT t1.custcif,
				t1.custfname,
				t1.custlname,
				t1.custdob,
				t1.custcrcpr,
				t1.mobilenumber,
				t1.custnationality,
				t1.custpassportno,
				t1.employer,
				t1.custisactive,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t2.nationalitydesc AS lovdescnationalitydesc,
				t3.empname AS lovdescempname,
				t1.custctgcode,
				t1.custcin,
				t1.custaadhaar,
				t1.custcompname,
				t1.reasonCode,T3.EMPINDUSTRY
				FROM blacklistcustomer_temp t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				UNION ALL
				SELECT t1.custcif,
				t1.custfname,
				t1.custlname,
				t1.custdob,
				t1.custcrcpr,
				t1.mobilenumber,
				t1.custnationality,
				t1.custpassportno,
				t1.employer,
				t1.custisactive,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t2.nationalitydesc AS lovdescnationalitydesc,
				t3.empname AS lovdescempname,
				t1.custctgcode,
				t1.custcin,
				t1.custaadhaar,
				t1.custcompname,
				t1.reasonCode,T3.EMPINDUSTRY
				FROM blacklistcustomer t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				WHERE NOT (EXISTS ( SELECT 1
				FROM blacklistcustomer_temp
				WHERE blacklistcustomer_temp.custcif = t1.custcif))
				]]>
		</createView>
	</changeSet>


	<changeSet id="133.1" author="lakshmi">
		<createView viewName="NegativeReasonCodes_View" replaceIfExists="true">
			<![CDATA[
				select
				t1.id,
				t1.BlackListCIF,
				t1.ReasonID,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid
				from NegativeReasonCodes t1
				WHERE NOT (EXISTS ( SELECT 1
				FROM NegativeReasonCodes_temp
				WHERE NegativeReasonCodes_temp.id = t1.id))
				]]>
		</createView>
	</changeSet>

	<changeSet id="141.1" author="SaiDurga.V">
		<createView viewName="qualification_view" replaceIfExists="true">
			<![CDATA[
				SELECT t1.code,
				t1.description,
				t1.active,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid
				FROM qualification_temp t1
				UNION ALL
				SELECT t1.code,
				t1.description,
				t1.active,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid
				FROM qualification t1
				WHERE NOT (EXISTS ( SELECT 1
				FROM qualification_temp
				WHERE qualification_temp.code = t1.code))
				]]>
		</createView>
	</changeSet>
	<changeSet id="142" author="SaiDurga.V">
		<createView viewName="qualification_aview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.code,
				t1.description,
				t1.active,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid
				FROM qualification t1
				]]>
		</createView>
	</changeSet>


	<changeSet id="148.1" author="rajesh.n">
		<createView viewName="FinOCRDetails_View" replaceIfExists="true">
		<![CDATA[
					 select  t1.DetailID,
							t1.HeaderID,
							t2.finreference,
							t1.stepSequence,
							t1.customerContribution,
							t1.financerContribution,
							t1.contributor,
							t2.ocrid,
							t2.ocrdescription,
							t2.customerportion,
							t2.ocrapplicable,
							t2.splitapplicable,
							t1.Active,
							t1.Version,
							t1.LastMntBy,
							t1.LastMntOn,
							t1.RecordStatus,
							t1.RoleCode,
							t1.NextRoleCode,
							t1.TaskId,
							t1.NextTaskId,
							t1.RecordType,
							t1.WorkFlowId
							from finocrdetails_temp t1
					inner join finocrheader_temp t2 on t1.headerId=t2.headerId
					UNION ALL  
					select  t1.DetailID,
							t1.HeaderID,
							t2.finreference,
							t1.stepSequence,
							t1.customerContribution,
							t1.financerContribution,
							t1.contributor,
							t2.ocrid,
							t2.ocrdescription,
							t2.customerportion,
							t2.ocrapplicable,
							t2.splitapplicable,
							t1.Active,
							t1.Version,
							t1.LastMntBy,
							t1.LastMntOn,
							t1.RecordStatus,
							t1.RoleCode,
							t1.NextRoleCode,
							t1.TaskId,
							t1.NextTaskId,
							t1.RecordType,
							t1.WorkFlowId
					from finocrdetails t1
					inner join finocrheader t2 on t1.headerId=t2.headerId 
					WHERE NOT (EXISTS ( SELECT 1
							   FROM finocrdetails_temp
							  WHERE finocrdetails_temp.HeaderID  = t1.HeaderID ))

				]]>
		</createView>
	</changeSet>

	<changeSet id="149" author="rajesh.n">
		<createView viewName="FinOCRDetails_AView" replaceIfExists="true">
		<![CDATA[
					select  t1.DetailID,
							t1.HeaderID,
							t2.finreference,
							t1.stepSequence,
							t1.customerContribution,
							t1.financerContribution,
							t1.contributor,
							t2.ocrid,
							t2.ocrdescription,
							t2.customerportion,
							t2.ocrapplicable,
							t2.splitapplicable,
							t1.Active,
							t1.Version,
							t1.LastMntBy,
							t1.LastMntOn,
							t1.RecordStatus,
							t1.RoleCode,
							t1.NextRoleCode,
							t1.TaskId,
							t1.NextTaskId,
							t1.RecordType,
							t1.WorkFlowId
							from finocrdetails t1
					inner join finocrheader t2 on t1.headerId=t2.headerId
				]]>
		</createView>
	</changeSet>


	<changeSet id="182" author="Lakshmin.N">
		<createView replaceIfExists="true" viewName="financemain_tview">
	<![CDATA[	
		  SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
   t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
   t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
t1.bureautimeseries,		
    t1.campaignname,			
   t1.existinglanrefno,		
   t1.leadsource,	          
   t1.posource,	          
   t1.rsa,                   
    t1.verification	
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
	 ]]>
		</createView>
	</changeSet>


	<changeSet id="182.1" author="Lakshmin.N">
		<createView viewName="financemain_tview" replaceIfExists="true">
		<![CDATA[
					 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
   t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
   t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
t1.bureautimeseries,		
    t1.campaignname,			
   t1.existinglanrefno,		
   t1.leadsource,	          
   t1.posource,	          
   t1.rsa,                   
    t1.verification	
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
				  ]]>
		</createView>
	</changeSet>

	<changeSet id="183" author="Lakshmin.N">
		<createView viewName="Financemain_Aview" replaceIfExists="true">
<![CDATA[
			  
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
		t1.offerproduct,	      
   t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
t1.bureautimeseries,		
    t1.campaignname,			
   t1.existinglanrefno,		
   t1.leadsource,	          
   t1.posource,	          
   t1.rsa,                   
    t1.verification	
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
]]>
		</createView>
	</changeSet>


	<changeSet id="184" author="Lakshmin.N">
		<createView viewName="financemain_lview" replaceIfExists="true">
<![CDATA[
 SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t2.custshrtname AS lovdesccustshrtname,
    t2.custpassportno AS lovdesccustpassportno,
    t2.custdob AS lovdesccustdob,
    t2.custcrcpr AS lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory AS lovdescproductcodename,
    t3.findivision AS lovdescfindivision,
    t3.product AS lovdescfinproduct,
    t3.fintypedesc AS lovdescfintypename,
    COALESCE(t4.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
    t1.productcategory,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification	
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
     LEFT JOIN secroles t4 ON t1.nextrolecode = t4.rolecd
]]>
		</createView>
	</changeSet>

	<changeSet id="185_pre" author="Lakshmin.N" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="185" author="Lakshmin.N">
		<createView viewName="financemain_view" replaceIfExists="true">
<![CDATA[

 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification	
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
UNION ALL
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
  WHERE NOT (EXISTS ( SELECT 1
           FROM financemain_temp
          WHERE financemain_temp.finreference = t1.finreference))
			]]>
		</createView>
	</changeSet>

	<changeSet id="185_post" author="Lakshmin.N" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>




	<changeSet id="202" author="Lakshmin.N">
		<createView viewName="rejectfinancemain_view" replaceIfExists="true">
<![CDATA[
  SELECT f.finreference,
    t.fincategory AS lovdescproductcodename,
    f.fintype,
    f.finbranch,
    f.finstartdate,
    f.maturitydate,
    f.numberofterms,
    f.finccy,
    f.finamount,
    f.finamount - f.downpayment + f.feechargeamt + f.insuranceamt AS financingamount,
    f.feechargeamt,
    f.insuranceamt,
    f.finamount - f.downpayment + f.feechargeamt + f.insuranceamt - f.finrepaymentamount AS curfinamount,
    f.downpayment,
    f.fincurrassetvalue,
    f.finassetvalue,
    f.allowdrawingpower,
    f.promotionseqid,
    f.sanbsdschdle,
    c.custcif AS lovdesccustcif,
    f.svamount,
    f.cbamount,
    f.finisratervwatgrcend,
    f.reqloanamt,
    f.reqloantenor,
	f.offerproduct,	      
    f.offeramount,          
    f.custsegmentation,   
    f.baseproduct,      		
    f.processtype,			
	f.bureautimeseries,		
    f.campaignname,			
    f.existinglanrefno,		
    f.leadsource,	          
    f.posource,	          
    f.rsa,                   
    f.verification	
   FROM rejectfinancemain f
     LEFT JOIN customers c ON f.custid = c.custid
     LEFT JOIN rmtfinancetypes t ON f.fintype = t.fintype
			]]>
		</createView>
	</changeSet>

	<changeSet id="213_pre" author="Lakshmin.N" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="213" author="Lakshmin.N">
		<comment>ST#10_TK#63</comment>
		<createView viewName="financemain_view" replaceIfExists="true">
<![CDATA[

 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification	,
	t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
UNION ALL
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification,
	  t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
  WHERE NOT (EXISTS ( SELECT 1
           FROM financemain_temp
          WHERE financemain_temp.finreference = t1.finreference))
			]]>
		</createView>
	</changeSet>

	<changeSet id="213_post" author="Lakshmin.N" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>



	<changeSet id="214" author="Lakshmin.N">
		<comment>ST#10_TK#63</comment>
		<createView viewName="Financemain_Aview" replaceIfExists="true">
<![CDATA[
			  
  SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
		t1.offerproduct,	      
   t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
t1.bureautimeseries,		
    t1.campaignname,			
   t1.existinglanrefno,		
   t1.leadsource,	          
   t1.posource,	          
   t1.rsa,                   
    t1.verification,
	t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME	
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
]]>
		</createView>
	</changeSet>


	<changeSet id="215" author="Lakshmin.N">
		<comment>ST#10_TK#63</comment>
		<createView viewName="financemain_lview" replaceIfExists="true">
<![CDATA[
  SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t2.custshrtname AS lovdesccustshrtname,
    t2.custpassportno AS lovdesccustpassportno,
    t2.custdob AS lovdesccustdob,
    t2.custcrcpr AS lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory AS lovdescproductcodename,
    t3.findivision AS lovdescfindivision,
    t3.product AS lovdescfinproduct,
    t3.fintypedesc AS lovdescfintypename,
    COALESCE(t4.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
    t1.productcategory,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification,
	t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME	
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
     LEFT JOIN secroles t4 ON t1.nextrolecode = t4.rolecd
]]>
		</createView>
	</changeSet>


	<changeSet id="216" author="Lakshmin.N">
		<comment>ST#10_TK#63</comment>
		<createView viewName="financemain_tview" replaceIfExists="true">
		<![CDATA[
					 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
   t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
   t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
t1.bureautimeseries,		
    t1.campaignname,			
   t1.existinglanrefno,		
   t1.leadsource,	          
   t1.posource,	          
   t1.rsa,                   
    t1.verification	,
	t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME	
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
				  ]]>
		</createView>
	</changeSet>


	<changeSet id="217" author="Lakshmin.N">
		<comment>ST#10_TK#63</comment>
		<createView viewName="rejectfinancemain_view" replaceIfExists="true">
<![CDATA[
  SELECT f.finreference,
    t.fincategory AS lovdescproductcodename,
    f.fintype,
    f.finbranch,
    f.finstartdate,
    f.maturitydate,
    f.numberofterms,
    f.finccy,
    f.finamount,
    f.finamount - f.downpayment + f.feechargeamt + f.insuranceamt AS financingamount,
    f.feechargeamt,
    f.insuranceamt,
    f.finamount - f.downpayment + f.feechargeamt + f.insuranceamt - f.finrepaymentamount AS curfinamount,
    f.downpayment,
    f.fincurrassetvalue,
    f.finassetvalue,
    f.allowdrawingpower,
    f.promotionseqid,
    f.sanbsdschdle,
    c.custcif AS lovdesccustcif,
    f.svamount,
    f.cbamount,
    f.finisratervwatgrcend,
    f.reqloanamt,
    f.reqloantenor,
	f.offerproduct,	      
    f.offeramount,          
    f.custsegmentation,   
    f.baseproduct,      		
    f.processtype,			
	f.bureautimeseries,		
    f.campaignname,			
    f.existinglanrefno,		
    f.leadsource,	          
    f.posource,	          
    f.rsa,                   
    f.verification,
	f.SOURCINGBRANCH,
   f.SOURCHANNELCATEGORY,
   f.ASMNAME		
   FROM rejectfinancemain f
     LEFT JOIN customers c ON f.custid = c.custid
     LEFT JOIN rmtfinancetypes t ON f.fintype = t.fintype
			]]>
		</createView>
	</changeSet>


	<changeSet id="226" author="Lakshmin.N">
		<comment>ST#22_TK#11 </comment>
		<createView viewName="extendedfielddetail_view" replaceIfExists="true">
		<![CDATA[
			SELECT t1.moduleid,
				t1.fieldname,
				t2.modulename AS lovdescmodulename,
				t2.submodulename AS lovdescsubmodulename,
				t1.fieldtype,
				t1.fieldlength,
				t1.fieldprec,
				t1.fieldlabel,
				t1.fieldmandatory,
				t1.fieldconstraint,
				t1.fieldseqorder,
				t1.fieldlist,
				t1.fielddefaultvalue,
				t1.fieldminvalue,
				t1.fieldmaxvalue,
				t1.fieldunique,
				t1.extendedtype,
				t1.filters,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.multiline,
				t1.parenttag,
				t1.inputelement,
				t1.editable,
				t1.allowinrule,
				t1.scriptlet,
				t1.visible,
				t1.valfromscript,
				t1.DefValue,
				t1.AgrField
			FROM extendedfielddetail_temp t1
				JOIN extendedfieldheader_temp t2 ON t1.moduleid = t2.moduleid
			UNION ALL
			SELECT t1.moduleid,
				t1.fieldname,
				t2.modulename AS lovdescmodulename,
				t2.submodulename AS lovdescsubmodulename,
				t1.fieldtype,
				t1.fieldlength,
				t1.fieldprec,
				t1.fieldlabel,
				t1.fieldmandatory,
				t1.fieldconstraint,
				t1.fieldseqorder,
				t1.fieldlist,
				t1.fielddefaultvalue,
				t1.fieldminvalue,
				t1.fieldmaxvalue,
				t1.fieldunique,
				t1.extendedtype,
				t1.filters,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.multiline,
				t1.parenttag,
				t1.inputelement,
				t1.editable,
				t1.allowinrule,
				t1.scriptlet,
				t1.visible,
				t1.valfromscript,
				t1.DefValue,
				t1.AgrField
			FROM extendedfielddetail t1
				JOIN extendedfieldheader t2 ON t1.moduleid = t2.moduleid
			WHERE NOT (EXISTS ( SELECT 1
					FROM extendedfielddetail_temp
					WHERE extendedfielddetail_temp.moduleid = t1.moduleid AND extendedfielddetail_temp.fieldname = t1.fieldname))
		]]>
		</createView>
	</changeSet>

	<changeSet id="227" author="Lakshmin.N">
		<comment>ST#22_TK#11 </comment>
		<createView viewName="extendedfielddetail_aview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.moduleid,
				t1.fieldname,
				t2.modulename AS lovdescmodulename,
				t2.submodulename AS lovdescsubmodulename,
				t1.fieldtype,
				t1.fieldlength,
				t1.fieldprec,
				t1.fieldlabel,
				t1.fieldmandatory,
				t1.fieldconstraint,
				t1.fieldseqorder,
				t1.fieldlist,
				t1.fielddefaultvalue,
				t1.fieldminvalue,
				t1.fieldmaxvalue,
				t1.fieldunique,
				t1.extendedtype,
				t1.filters,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.multiline,
				t1.parenttag,
				t1.inputelement,
				t1.editable,
				t1.allowinrule,
				t1.scriptlet,
				t1.visible,
				t1.valfromscript,
				t1.DefValue,
				t1.AgrField
				FROM extendedfielddetail t1
					JOIN extendedfieldheader t2 ON t1.moduleid = t2.moduleid
		]]>
		</createView>
	</changeSet>


	<changeSet author="satish.s" id="237">
		<comment>ST#12_TK#11</comment>
		<createView viewName="RMTBASERATES_VIEW" replaceIfExists="true">
			<![CDATA[
		  SELECT t1.brtype,
    t2.brtypedesc AS lovdescbrtypename,
    t1.currency,
    t1.breffdate,
    t1.brrate,
    t1.brtypeisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.lastmdfdate,
    t1.delexistingrates,T1.LockingPeriod
   FROM rmtbaserates_temp t1
     JOIN rmtbaseratecodes t2 ON t1.brtype = t2.brtype
UNION ALL
 SELECT t1.brtype,
    t2.brtypedesc AS lovdescbrtypename,
    t1.currency,
    t1.breffdate,
    t1.brrate,
    t1.brtypeisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.lastmdfdate,
    t1.delexistingrates, T1.LockingPeriod
   FROM rmtbaserates t1
     JOIN rmtbaseratecodes t2 ON t1.brtype = t2.brtype
  WHERE NOT (EXISTS ( SELECT 1
           FROM rmtbaserates_temp
          WHERE rmtbaserates_temp.brtype = t1.brtype AND rmtbaserates_temp.breffdate = t1.breffdate AND rmtbaserates_temp.currency = t1.currency))
	    ]]>
		</createView>
	</changeSet>





	<changeSet author="satish.s" id="238">
		<comment>ST#12_TK#11</comment>
		<createView viewName="RMTBASERATES_AVIEW" replaceIfExists="true">
	<![CDATA[
	  SELECT t1.brtype,
    t2.brtypedesc AS lovdescbrtypename,
    t1.currency,
    t1.breffdate,
    t1.brrate,
    t1.brtypeisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.lastmdfdate,
    t1.delexistingrates,
	T1.LockingPeriod
   FROM rmtbaserates t1
     JOIN rmtbaseratecodes t2 ON t1.brtype = t2.brtype
	]]>
		</createView>
	</changeSet>

	<changeSet id="245_pre" author="lakshmi.v" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="245" author="Lakshmin.N">
		<comment>ST#12_TK#11</comment>
		<createView viewName="financemain_view" replaceIfExists="true">
<![CDATA[

 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification	,
	t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME,
   T1.FINSCHCALCODEONRVW
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
UNION ALL
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
	t1.offerproduct,	      
    t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
    t1.bureautimeseries,		
    t1.campaignname,			
    t1.existinglanrefno,		
    t1.leadsource,	          
    t1.posource,	          
    t1.rsa,                   
    t1.verification,
	  t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME,
   T1.FINSCHCALCODEONRVW
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
  WHERE NOT (EXISTS ( SELECT 1
           FROM financemain_temp
          WHERE financemain_temp.finreference = t1.finreference))
			]]>
		</createView>
	</changeSet>


	<changeSet id="245_post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="246_pre" author="lakshmi.v" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="246" author="Lakshmin.N">
		<comment>ST#12_TK#11</comment>
		<createView viewName="Financemain_Aview" replaceIfExists="true">
<![CDATA[
			  
  SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
		t1.offerproduct,	      
   t1.offeramount,          
    t1.custsegmentation,   
    t1.baseproduct,      		
    t1.processtype,			
t1.bureautimeseries,		
    t1.campaignname,			
   t1.existinglanrefno,		
   t1.leadsource,	          
   t1.posource,	          
   t1.rsa,                   
    t1.verification,
	t1.SOURCINGBRANCH,
   t1.SOURCHANNELCATEGORY,
   t1.ASMNAME,
	T1.FINSCHCALCODEONRVW   
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode ='ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
]]>
		</createView>
	</changeSet>

	<changeSet id="246post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>



	<changeSet id="250" author="saidurge.v">
		<comment>ST#1_TK#4</comment>
		<createView viewName="customers_lview" replaceIfExists="true">	 
		<![CDATA[
	 SELECT c.custid,
    c.custcif,
    c.custcorebank,
    c.custctgcode,
    c.custtypecode,
    c.custshrtname,
    c.custdftbranch,
    c.recordstatus,
    c.rolecode,
    c.nextrolecode,
    c.recordtype,
    ct.custtypedesc AS lovdesccusttypecodename,
    t1.custctgdesc AS lovdesccustctgcodename,
    c.subcategory,
    c.casteid,
    c.religionid,
    t2.castecode,
    t2.castedesc,
    t3.religioncode,
    t3.religiondesc,
    c.othercaste,
    c.otherreligion,
    c.natureofbusiness,
    c.entitytype,
    c.custresidentialsts,
    c.qualification,
    c.custflag,
    COALESCE(t4.roledesc, ${add.schema}fn_get_roledesc(c.nextrolecode)) AS lovdescrequeststage,
    c.margindeviation,
	c.vip
   FROM customers_temp c
     LEFT JOIN rmtcusttypes ct ON c.custtypecode   = ct.custtypecode  
     LEFT JOIN bmtcustcategories t1 ON c.custctgcode   = t1.custctgcode  
     LEFT JOIN secroles t4 ON c.nextrolecode   = t4.rolecd  
     LEFT JOIN caste t2 ON c.casteid = t2.casteid
     LEFT JOIN religion t3 ON c.religionid = t3.religionid
UNION ALL
 SELECT c.custid,
    c.custcif,
    c.custcorebank,
    c.custctgcode,
    c.custtypecode,
    c.custshrtname,
    c.custdftbranch,
    c.recordstatus,
    c.rolecode,
    c.nextrolecode,
    c.recordtype,
    ct.custtypedesc AS lovdesccusttypecodename,
    t1.custctgdesc AS lovdesccustctgcodename,
    c.subcategory,
    c.casteid,
    c.religionid,
    t2.castecode,
    t2.castedesc,
    t3.religioncode,
    t3.religiondesc,
    c.othercaste,
    c.otherreligion,
    c.natureofbusiness,
    c.entitytype,
    c.custresidentialsts,
    c.qualification,
    c.custflag,
    COALESCE(t4.roledesc, ${add.schema}fn_get_roledesc(c.nextrolecode)) AS lovdescrequeststage,
    c.margindeviation,
	c.vip
   FROM customers c
     LEFT JOIN rmtcusttypes ct ON c.custtypecode   = ct.custtypecode  
     LEFT JOIN bmtcustcategories t1 ON c.custctgcode   = t1.custctgcode  
     LEFT JOIN secroles t4 ON c.nextrolecode   = t4.rolecd  
     LEFT JOIN caste t2 ON c.casteid = t2.casteid
     LEFT JOIN religion t3 ON c.religionid = t3.religionid
  WHERE NOT (c.custid IN ( SELECT customers_temp.custid
           FROM customers_temp
          WHERE customers_temp.custid = c.custid))
		  
		  		 ]]>

		</createView>
	</changeSet>

	<changeSet id="251_pre" author="lakshmi.v" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="251" author="saidurge.v">
		<comment>ST#1_TK#4</comment>
		<createView viewName="customers_view" replaceIfExists="true">	 
		<![CDATA[
	 SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.dealername AS lovdesccustro1name,
    t15.dealercity AS lovdesccustro1city,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    t1.subcategory,
    t1.casteid,
    t1.religionid,
    t32.castecode,
    t32.castedesc,
    t33.religioncode,
    t33.religiondesc,
    COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.margindeviation,
    t1.applicationno,
    t17.branchprovince,
    t1.dnd,
    t1.othercaste,
    t1.otherreligion,
    t1.natureofbusiness,
    t1.entitytype,
    t1.custresidentialsts,
    t1.qualification,
    t1.custflag,
	t1.vip
   FROM customers_temp t1
     LEFT JOIN rmtcusttypes t2 ON t1.custtypecode  = t2.custtypecode 
     LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts  = t3.maritalstscode 
     LEFT JOIN bmtempstscodes t4 ON t1.custempsts  = t4.empstscode 
     LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts  = t6.custstscode 
     LEFT JOIN bmtindustries t7 ON t1.custindustry  = t7.industrycode 
     LEFT JOIN bmtsectors t8 ON t1.custsector  = t8.sectorcode 
     LEFT JOIN bmtsubsectors t9 ON t1.custsector  = t9.sectorcode  AND t1.custsubsector  = t9.subsectorcode 
     LEFT JOIN bmtprofessions t10 ON t1.custprofession  = t10.professioncode 
     LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
     LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
     LEFT JOIN bmtgenders t13 ON t1.custgendercode  = t13.gendercode 
     LEFT JOIN bmtdepartments t14 ON t1.custdsadept  = t14.deptcode 
     LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
     LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts  = t16.grpstscode 
     LEFT JOIN rmtbranches t17 ON t1.custdftbranch  = t17.branchcode 
     LEFT JOIN bmtcustcategories t18 ON t1.custctgcode  = t18.custctgcode 
     LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode  = t19.salutationcode 
     LEFT JOIN bmtsegments t20 ON t1.custsegment  = t20.segmentcode 
     LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
     LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
     LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
     LEFT JOIN relationshipofficers t24 ON t1.custro2  = t24.rofficercode 
     LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode  = t25.blrsncode 
     LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn  = t26.rejectcode 
     LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
     LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment  = t28.subsegmentcode 
     LEFT JOIN bmtlanguage t29 ON t1.custlng  = t29.lngcode 
     LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode  = t30.dispatchmodecode 
     LEFT JOIN targetdetails t31 ON t1.custaddlvar82  = t31.targetcode 
     LEFT JOIN secroles t34 ON t1.nextrolecode  = t34.rolecd 
     LEFT JOIN caste t32 ON t1.casteid = t32.casteid
     LEFT JOIN religion t33 ON t1.religionid = t33.religionid
UNION ALL
 SELECT t1.custid,
    t1.custcif,
    t1.custcorebank,
    t1.custctgcode,
    t1.custtypecode,
    t1.custsalutationcode,
    t1.custfname,
    t1.custmname,
    t1.custlname,
    t1.custshrtname,
    t1.custfnamelcllng,
    t1.custmnamelcllng,
    t1.custlnamelcllng,
    t1.custshrtnamelcllng,
    t1.custdftbranch,
    t1.custgendercode,
    t1.custdob,
    t1.custpob,
    t1.custcob,
    t1.custpassportno,
    t1.custmothermaiden,
    t1.custisminor,
    t1.custreferedby,
    t1.custdsa,
    t1.custdsadept,
    t1.custro1,
    t1.custro2,
    t1.custgroupid,
    t1.custsts,
    t1.custstschgdate,
    t1.custgroupsts,
    t1.custisblocked,
    t1.custisactive,
    t1.custisclosed,
    t1.custinactivereason,
    t1.custisdecease,
    t1.custisdormant,
    t1.custisdelinquent,
    t1.custistradefincust,
    t1.custtradelicencenum,
    t1.custtradelicenceexpiry,
    t1.custpassportexpiry,
    t1.custvisanum,
    t1.custvisaexpiry,
    t1.custisstaff,
    t1.custstaffid,
    t1.custindustry,
    t1.custsector,
    t1.custsubsector,
    t1.custprofession,
    t1.custtotalincome,
    t1.custmaritalsts,
    t1.custempsts,
    t1.custsegment,
    t1.custsubsegment,
    t1.custisblacklisted,
    t1.custblrsncode,
    t1.custisrejected,
    t1.custrejectedrsn,
    t1.custbaseccy,
    t1.custlng,
    t1.custparentcountry,
    t1.custresdcountry,
    t1.custriskcountry,
    t1.custnationality,
    t1.custclosedon,
    t1.custstmtfrq,
    t1.custisstmtcombined,
    t1.custstmtlastdate,
    t1.custstmtnextdate,
    t1.custstmtdispatchmode,
    t1.custfirstbusinessdate,
    t1.custaddlvar81,
    t1.custaddlvar82,
    t1.custaddlvar83,
    t1.custaddlvar84,
    t1.custaddlvar85,
    t1.custaddlvar86,
    t1.custaddlvar87,
    t1.custaddlvar88,
    t1.custaddlvar89,
    t1.custaddldate1,
    t1.custaddldate2,
    t1.custaddldate3,
    t1.custaddldate4,
    t1.custaddldate5,
    t1.custaddlvar1,
    t1.custaddlvar2,
    t1.custaddlvar3,
    t1.custaddlvar4,
    t1.custaddlvar5,
    t1.custaddlvar6,
    t1.custaddlvar7,
    t1.custaddlvar8,
    t1.custaddlvar9,
    t1.custaddlvar10,
    t1.custaddlvar11,
    t1.custaddldec1,
    t1.custaddldec2,
    t1.custaddldec3,
    t1.custaddldec4,
    t1.custaddldec5,
    t1.custaddlint1,
    t1.custaddlint2,
    t1.custaddlint3,
    t1.custaddlint4,
    t1.custaddlint5,
    t1.custsourceid,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.custtypedesc AS lovdesccusttypecodename,
    t3.maritalstsdesc AS lovdesccustmaritalstsname,
    t4.empstsdesc AS lovdesccustempstsname,
    t6.custstsdescription AS lovdesccuststsname,
    t7.industrydesc AS lovdesccustindustryname,
    t8.sectordesc AS lovdesccustsectorname,
    t9.subsectordesc AS lovdesccustsubsectorname,
    t10.professiondesc AS lovdesccustprofessionname,
    t11.countrydesc AS lovdesccustcobname,
    t20.segmentdesc AS lovdesccustsegmentname,
    t12.nationalitydesc AS lovdesccustnationalityname,
    t13.genderdesc AS lovdesccustgendercodename,
    t14.deptdesc AS lovdesccustdsadeptname,
    t15.dealername AS lovdesccustro1name,
    t15.dealercity AS lovdesccustro1city,
    t16.grpstsdescription AS lovdesccustgroupstsname,
    t17.branchdesc AS lovdesccustdftbranchname,
    t17.bankrefno AS branchrefno,
    t17.branchswiftbrncde AS custswiftbrncode,
    t18.custctgdesc AS lovdesccustctgcodename,
    t2.custtypectg AS lovdesccustctgtype,
    t19.saluationdesc AS lovdesccustsalutationcodename,
    t21.countrydesc AS lovdesccustparentcountryname,
    t22.countrydesc AS lovdesccustresdcountryname,
    t23.countrydesc AS lovdesccustriskcountryname,
    t24.rofficerdesc AS lovdesccustro2name,
    t25.blrsndesc AS lovdesccustblrsncodename,
    t26.rejectdesc AS lovdesccustrejectedrsnname,
    t27.custgrpdesc AS lovdesccustgroupidname,
    t28.subsegmentdesc AS lovdesccustsubsegmentname,
    t29.lngdesc AS lovdesccustlngname,
    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
    t1.dedupfound,
    t1.skipdedup,
    t1.custtotalexpense,
    t1.custblacklistdate,
    t1.noofdependents,
    t1.custcrcpr,
    t1.jointcust,
    t1.jointcustname,
    t1.jointcustdob,
    t27.custgrpcode AS lovdesccustgroupcode,
    t1.custrelation,
    t1.contactpersonname,
    t1.phonenumber,
    t1.emailid,
    t1.salariedcustomer,
    t31.targetdesc AS lovdesctargetname,
    t1.custsuspsts,
    t1.custsuspdate,
    t1.custsusptrigger,
    t1.subcategory,
    t1.casteid,
    t1.religionid,
    t32.castecode,
    t32.castedesc,
    t33.religioncode,
    t33.religiondesc,
    COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.margindeviation,
    t1.applicationno,
    t17.branchprovince,
    t1.dnd,
    t1.othercaste,
    t1.otherreligion,
    t1.natureofbusiness,
    t1.entitytype,
    t1.custresidentialsts,
    t1.qualification,
    t1.custflag,
	t1.vip
   FROM customers t1
     LEFT JOIN rmtcusttypes t2 ON t1.custtypecode  = t2.custtypecode 
     LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts  = t3.maritalstscode 
     LEFT JOIN bmtempstscodes t4 ON t1.custempsts  = t4.empstscode 
     LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts  = t6.custstscode 
     LEFT JOIN bmtindustries t7 ON t1.custindustry  = t7.industrycode 
     LEFT JOIN bmtsectors t8 ON t1.custsector  = t8.sectorcode 
     LEFT JOIN bmtsubsectors t9 ON t1.custsector  = t9.sectorcode  AND t1.custsubsector  = t9.subsectorcode 
     LEFT JOIN bmtprofessions t10 ON t1.custprofession  = t10.professioncode 
     LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
     LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
     LEFT JOIN bmtgenders t13 ON t1.custgendercode  = t13.gendercode 
     LEFT JOIN bmtdepartments t14 ON t1.custdsadept  = t14.deptcode 
     LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
     LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts  = t16.grpstscode 
     LEFT JOIN rmtbranches t17 ON t1.custdftbranch  = t17.branchcode 
     LEFT JOIN bmtcustcategories t18 ON t1.custctgcode  = t18.custctgcode 
     LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode  = t19.salutationcode 
     LEFT JOIN bmtsegments t20 ON t1.custsegment  = t20.segmentcode 
     LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
     LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
     LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
     LEFT JOIN relationshipofficers t24 ON t1.custro2  = t24.rofficercode 
     LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode  = t25.blrsncode 
     LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn  = t26.rejectcode 
     LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
     LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment  = t28.subsegmentcode 
     LEFT JOIN bmtlanguage t29 ON t1.custlng  = t29.lngcode 
     LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode  = t30.dispatchmodecode 
     LEFT JOIN targetdetails t31 ON t1.custaddlvar82  = t31.targetcode 
     LEFT JOIN secroles t34 ON t1.nextrolecode  = t34.rolecd 
     LEFT JOIN caste t32 ON t1.casteid = t32.casteid
     LEFT JOIN religion t33 ON t1.religionid = t33.religionid
  WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM customers_temp
          WHERE customers_temp.custid = t1.custid))
		  		 ]]>

		</createView>
	</changeSet>

	<changeSet id="251_post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customers_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="251.1" author="Saidurga.V">
		<comment>ST#1_TK#4</comment>
		<createView viewName="customers_aeview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
				   t1.custcif,
				   t1.custcorebank,
				   t1.custctgcode,
				   t1.custtypecode,
				   t1.custshrtname,
				   t1.custfname,
				   t1.custlname,
				   t1.custdob,
				   t1.custnationality,
				   t1.custsector,
				   t1.custsubsector,
				   t2.phonenumber,
				   t2.phoneareacode,
				   t2.phonecountrycode,
				   t1.custcrcpr,
				   t1.custpassportno,
				   t3.custemail AS emailid,
				   t1.custaddlvar82,
				   t4.custtypedesc AS lovdesccusttypecodename,
				   t1.custbaseccy,
				   t4.custtypectg AS lovdesccustctgtype,
				   t5.custctgdesc AS lovdesccustctgcodename,
				   t6.custstsdescription AS lovdesccuststsname,
				   t1.custdftbranch,
				   t7.branchdesc AS lovdesccustdftbranchname,
				   t1.subcategory,
				   t1.casteid,
				   t1.religionid,
				   t8.castecode,
				   t8.castedesc,
				   t9.religioncode,
				   t9.religiondesc,
				   COALESCE(t32.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
				   t1.margindeviation,
				   t1.othercaste,
				   t1.otherreligion,
				   t1.natureofbusiness,
				   t1.entitytype,
				   t1.custresidentialsts,
				   t1.qualification,
				   t1.custflag,
				   t1.vip
			FROM customers t1
			LEFT JOIN customerphonenumbers t2 ON t1.custid = t2.phonecustid AND t2.phonetypepriority = 5
			LEFT JOIN customeremails t3 ON t1.custid = t3.custid AND t3.custemailtypecode  = 'OFFICE' 
			LEFT JOIN rmtcusttypes t4 ON t1.custtypecode  = t4.custtypecode
			LEFT JOIN bmtcustcategories t5 ON t1.custctgcode  = t5.custctgcode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts  = t6.custstscode
			LEFT JOIN rmtbranches t7 ON t1.custdftbranch  = t7.branchcode
			LEFT JOIN caste t8 ON t1.casteid = t8.casteid
			LEFT JOIN religion t9 ON t1.religionid = t9.religionid
			LEFT JOIN secroles t32 ON t1.nextrolecode  = t32.rolecd
			]]>
		</createView>
	</changeSet>

	<changeSet id="252" author="Saidurga.V">
		<comment>ST#1_TK#4</comment>
		<createView viewName="customers_aview" replaceIfExists="true">
		<![CDATA[
			SELECT  t1.custid,
					t1.custcif,
					t1.custcorebank,
					t1.custctgcode,
					t1.custtypecode,
					t1.custsalutationcode,
					t1.custfname,
					t1.custmname,
					t1.custlname,
					t1.custshrtname,
					t1.custfnamelcllng,
					t1.custmnamelcllng,
					t1.custlnamelcllng,
					t1.custshrtnamelcllng,
					t1.custdftbranch,
					t1.custgendercode,
					t1.custdob,
					t1.custnationality,
					t1.custpob,
					t1.custcob,
					t1.custpassportno,
					t1.custmothermaiden,
					t1.custisminor,
					t1.custreferedby,
					t1.custdsa,
					t1.custdsadept,
					t1.custro1,
					t1.custro2,
					t1.custgroupid,
					t1.custsts,
					t1.custstschgdate,
					t1.custgroupsts,
					t1.custisblocked,
					t1.custisactive,
					t1.custisclosed,
					t1.custinactivereason,
					t1.custisdecease,
					t1.custisdormant,
					t1.custisdelinquent,
					t1.custistradefincust,
					t1.custtradelicencenum,
					t1.custtradelicenceexpiry,
					t1.custpassportexpiry,
					t1.custvisanum,
					t1.custvisaexpiry,
					t1.custisstaff,
					t1.custstaffid,
					t1.custindustry,
					t1.custsector,
					t1.custsubsector,
					t35.phonenumber,
					t35.phoneareacode,
					t35.phonecountrycode,
					t1.custcrcpr,
					t36.custemail AS emailid,
					t1.custprofession,
					t1.custtotalincome,
					t1.custmaritalsts,
					t1.custempsts,
					t1.custsegment,
					t1.custsubsegment,
					t1.custisblacklisted,
					t1.custblrsncode,
					t1.custisrejected,
					t1.custrejectedrsn,
					t1.custbaseccy,
					t1.custlng,
					t1.custparentcountry,
					t1.custresdcountry,
					t1.custriskcountry,
					t1.custclosedon,
					t1.custstmtfrq,
					t1.custisstmtcombined,
					t1.custstmtlastdate,
					t1.custstmtnextdate,
					t1.custstmtdispatchmode,
					t1.custfirstbusinessdate,
					t1.custaddlvar81,
					t1.custaddlvar82,
					t2.custtypedesc AS lovdesccusttypecodename,
					t2.custtypectg AS lovdesccustctgtype,
					t18.custctgdesc AS lovdesccustctgcodename,
					t1.custaddlvar83,
					t1.custaddlvar84,
					t1.custaddlvar85,
					t1.custaddlvar86,
					t1.custaddlvar87,
					t1.custaddlvar88,
					t1.custaddlvar89,
					t1.custaddldate1,
					t1.custaddldate2,
					t1.custaddldate3,
					t1.custaddldate4,
					t1.custaddldate5,
					t1.custaddlvar1,
					t1.custaddlvar2,
					t1.custaddlvar3,
					t1.custaddlvar4,
					t1.custaddlvar5,
					t1.custaddlvar6,
					t1.custaddlvar7,
					t1.custaddlvar8,
					t1.custaddlvar9,
					t1.custaddlvar10,
					t1.custaddlvar11,
					t1.custaddldec1,
					t1.custaddldec2,
					t1.custaddldec3,
					t1.custaddldec4,
					t1.custaddldec5,
					t1.custaddlint1,
					t1.custaddlint2,
					t1.custaddlint3,
					t1.custaddlint4,
					t1.custaddlint5,
					t1.version,
					t1.custsourceid,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t3.maritalstsdesc AS lovdesccustmaritalstsname,
					t4.empstsdesc AS lovdesccustempstsname,
					t6.custstsdescription AS lovdesccuststsname,
					t7.industrydesc AS lovdesccustindustryname,
					t8.sectordesc AS lovdesccustsectorname,
					t9.subsectordesc AS lovdesccustsubsectorname,
					t10.professiondesc AS lovdesccustprofessionname,
					t11.countrydesc AS lovdesccustcobname,
					t20.segmentdesc AS lovdesccustsegmentname,
					t12.nationalitydesc AS lovdesccustnationalityname,
					t13.genderdesc AS lovdesccustgendercodename,
					t14.deptdesc AS lovdesccustdsadeptname,
					t15.dealername AS lovdesccustro1name,
					t15.dealercity AS lovdesccustro1city,
					t16.grpstsdescription AS lovdesccustgroupstsname,
					t17.branchdesc AS lovdesccustdftbranchname,
					t17.bankrefno AS branchrefno,
					t17.branchswiftbrncde AS custswiftbrncode,
					t19.saluationdesc AS lovdesccustsalutationcodename,
					t21.countrydesc AS lovdesccustparentcountryname,
					t22.countrydesc AS lovdesccustresdcountryname,
					t23.countrydesc AS lovdesccustriskcountryname,
					t24.rofficerdesc AS lovdesccustro2name,
					t25.blrsndesc AS lovdesccustblrsncodename,
					t26.rejectdesc AS lovdesccustrejectedrsnname,
					t27.custgrpdesc AS lovdesccustgroupidname,
					t28.subsegmentdesc AS lovdesccustsubsegmentname,
					t29.lngdesc AS lovdesccustlngname,
					t30.dispatchmodedesc AS lovdescdispatchmodedescname,
					t1.dedupfound,
					t1.skipdedup,
					t1.custtotalexpense,
					t1.custblacklistdate,
					t1.noofdependents,
					t1.jointcust,
					t1.jointcustname,
					t1.jointcustdob,
					t27.custgrpcode AS lovdesccustgroupcode,
					t1.custrelation,
					t1.contactpersonname,
					t1.salariedcustomer,
					t31.targetdesc AS lovdesctargetname,
					t1.custsuspsts,
					t1.custsuspdate,
					t1.custsusptrigger,
					t1.subcategory,
					t1.casteid,
					t1.religionid,
					t32.castecode,
					t32.castedesc,
					t33.religioncode,
					t33.religiondesc,
					COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
					t1.margindeviation,
					t1.applicationno,
					t17.branchprovince,
					t1.dnd,
					t1.othercaste,
					t1.otherreligion,
					t1.natureofbusiness,
					t1.entitytype,
					t1.custresidentialsts,
					t1.qualification,
					t1.custflag,
					t1.vip
			FROM customers t1
			LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			LEFT JOIN customerphonenumbers t35 ON t1.custid = t35.phonecustid AND t35.phonetypepriority = 5
			LEFT JOIN customeremails t36 ON t1.custid = t36.custid AND t36.custemailtypecode = 'OFFICE'
			]]>
		</createView>
	</changeSet>

	<changeSet id="253" author="Saidurga.V">
		<comment>ST#1_TK#4</comment>
		<createView viewName="customers_tview" replaceIfExists="true">
		<![CDATA[
			SELECT 	t1.custid,
					t1.custcif,
					t1.custcorebank,
					t1.custctgcode,
					t1.custtypecode,
					t1.custsalutationcode,
					t1.custfname,
					t1.custmname,
					t1.custlname,
					t1.custshrtname,
					t1.custfnamelcllng,
					t1.custmnamelcllng,
					t1.custlnamelcllng,
					t1.custshrtnamelcllng,
					t1.custdftbranch,
					t1.custgendercode,
					t1.custdob,
					t1.custpob,
					t1.custcob,
					t1.custpassportno,
					t1.custmothermaiden,
					t1.custisminor,
					t1.custreferedby,
					t1.custdsa,
					t1.custdsadept,
					t1.custro1,
					t1.custro2,
					t1.custgroupid,
					t1.custsts,
					t1.custstschgdate,
					t1.custgroupsts,
					t1.custisblocked,
					t1.custisactive,
					t1.custisclosed,
					t1.custinactivereason,
					t1.custisdecease,
					t1.custisdormant,
					t1.custisdelinquent,
					t1.custistradefincust,
					t1.custtradelicencenum,
					t1.custtradelicenceexpiry,
					t1.custpassportexpiry,
					t1.custvisanum,
					t1.custvisaexpiry,
					t1.custisstaff,
					t1.custstaffid,
					t1.custindustry,
					t1.custsector,
					t1.custsubsector,
					t1.custprofession,
					t1.custtotalincome,
					t1.custmaritalsts,
					t1.custempsts,
					t1.custsegment,
					t1.custsubsegment,
					t1.custisblacklisted,
					t1.custblrsncode,
					t1.custisrejected,
					t1.custrejectedrsn,
					t1.custbaseccy,
					t1.custlng,
					t1.custparentcountry,
					t1.custresdcountry,
					t1.custriskcountry,
					t1.custnationality,
					t1.custclosedon,
					t1.custstmtfrq,
					t1.custisstmtcombined,
					t1.custstmtlastdate,
					t1.custstmtnextdate,
					t1.custstmtdispatchmode,
					t1.custfirstbusinessdate,
					t1.custaddlvar81,
					t1.custaddlvar82,
					t1.custaddlvar83,
					t1.custaddlvar84,
					t1.custaddlvar85,
					t1.custaddlvar86,
					t1.custaddlvar87,
					t1.custaddlvar88,
					t1.custaddlvar89,
					t1.custaddldate1,
					t1.custaddldate2,
					t1.custaddldate3,
					t1.custaddldate4,
					t1.custaddldate5,
					t1.custaddlvar1,
					t1.custaddlvar2,
					t1.custaddlvar3,
					t1.custaddlvar4,
					t1.custaddlvar5,
					t1.custaddlvar6,
					t1.custaddlvar7,
					t1.custaddlvar8,
					t1.custaddlvar9,
					t1.custaddlvar10,
					t1.custaddlvar11,
					t1.custaddldec1,
					t1.custaddldec2,
					t1.custaddldec3,
					t1.custaddldec4,
					t1.custaddldec5,
					t1.custaddlint1,
					t1.custaddlint2,
					t1.custaddlint3,
					t1.custaddlint4,
					t1.custaddlint5,
					t1.custsourceid,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.custtypedesc AS lovdesccusttypecodename,
					t3.maritalstsdesc AS lovdesccustmaritalstsname,
					t4.empstsdesc AS lovdesccustempstsname,
					t6.custstsdescription AS lovdesccuststsname,
					t7.industrydesc AS lovdesccustindustryname,
					t8.sectordesc AS lovdesccustsectorname,
					t9.subsectordesc AS lovdesccustsubsectorname,
					t10.professiondesc AS lovdesccustprofessionname,
					t11.countrydesc AS lovdesccustcobname,
					t20.segmentdesc AS lovdesccustsegmentname,
					t12.nationalitydesc AS lovdesccustnationalityname,
					t13.genderdesc AS lovdesccustgendercodename,
					t14.deptdesc AS lovdesccustdsadeptname,
					t15.dealername AS lovdesccustro1name,
					t15.dealercity AS lovdesccustro1city,
					t16.grpstsdescription AS lovdesccustgroupstsname,
					t17.branchdesc AS lovdesccustdftbranchname,
					t17.bankrefno AS branchrefno,
					t17.branchswiftbrncde AS custswiftbrncode,
					t18.custctgdesc AS lovdesccustctgcodename,
					t2.custtypectg AS lovdesccustctgtype,
					t19.saluationdesc AS lovdesccustsalutationcodename,
					t21.countrydesc AS lovdesccustparentcountryname,
					t22.countrydesc AS lovdesccustresdcountryname,
					t23.countrydesc AS lovdesccustriskcountryname,
					t24.rofficerdesc AS lovdesccustro2name,
					t25.blrsndesc AS lovdesccustblrsncodename,
					t26.rejectdesc AS lovdesccustrejectedrsnname,
					t27.custgrpdesc AS lovdesccustgroupidname,
					t28.subsegmentdesc AS lovdesccustsubsegmentname,
					t29.lngdesc AS lovdesccustlngname,
					t30.dispatchmodedesc AS lovdescdispatchmodedescname,
					t1.dedupfound,
					t1.skipdedup,
					t1.custtotalexpense,
					t1.custblacklistdate,
					t1.noofdependents,
					t1.custcrcpr,
					t1.jointcust,
					t1.jointcustname,
					t1.jointcustdob,
					t27.custgrpcode AS lovdesccustgroupcode,
					t1.contactpersonname,
					t1.phonenumber,
					t1.emailid,
					t1.salariedcustomer,
					t31.targetdesc AS lovdesctargetname,
					t1.custrelation,
					t1.custsuspsts,
					t1.custsuspdate,
					t1.custsusptrigger,
					t1.subcategory,
					t1.casteid,
					t1.religionid,
					t32.castecode,
					t32.castedesc,
					t33.religioncode,
					t33.religiondesc,
					COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
					t1.margindeviation,
					t1.applicationno,
					t17.branchprovince,
					t1.dnd,
					t1.othercaste,
					t1.otherreligion,
					t1.natureofbusiness,
					t1.entitytype,
					t1.custresidentialsts,
					t1.qualification,
					t1.custflag,
					t1.vip
				FROM customers_temp t1
				LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
				LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
				LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
				LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
				LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
				LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
				LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
				LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
				LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
				LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
				LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
				LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
				LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
				LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
				LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
				LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
				LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
				LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
				LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
				LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
				LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
				LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
				LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
				LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
				LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
				LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
				LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
				LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
				LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
				LEFT JOIN caste t32 ON t1.casteid = t32.casteid
				LEFT JOIN religion t33 ON t1.religionid = t33.religionid
				LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
				]]>
		</createView>
	</changeSet>

	<changeSet id="253.1" author="Saidurga.V">
		<comment>ST#1_TK#3</comment>
		<createView viewName="customers_lview" replaceIfExists="true">
		<![CDATA[
	SELECT c.custid,
			c.custcif,
			c.custcorebank,
			c.custctgcode,
			c.custtypecode,
			c.custshrtname,
			c.custdftbranch,
			c.recordstatus,
			c.rolecode,
			c.nextrolecode,
			c.recordtype,
			ct.custtypedesc lovdesccusttypecodename,
			t1.custctgdesc lovdesccustctgcodename,
			c.subcategory,
			c.casteid,
			c.religionid,
			t2.castecode,
			t2.castedesc,
			t3.religioncode,
			t3.religiondesc,
			c.otherCaste,
			c.otherReligion,
			c.natureOfBusiness,
			c.entityType,
			c.custResidentialSts,
			c.qualification,
			c.custFlag,
			COALESCE(t4.roledesc, fn_get_roledesc(c.nextrolecode)) lovdescrequeststage,
			c.margindeviation,
             c.custCRCPR,
            c.phoneNumber
			FROM customers_temp c
			LEFT JOIN rmtcusttypes ct ON c.custtypecode = ct.custtypecode
			LEFT JOIN bmtcustcategories t1 ON c.custctgcode = t1.custctgcode
			LEFT JOIN secroles t4 ON c.nextrolecode = t4.rolecd
			LEFT JOIN caste t2 ON c.casteid = t2.casteid
			LEFT JOIN religion t3 ON c.religionid = t3.religionid
			UNION ALL
			SELECT c.custid,
			c.custcif,
			c.custcorebank,
			c.custctgcode,
			c.custtypecode,
			c.custshrtname,
			c.custdftbranch,
			c.recordstatus,
			c.rolecode,
			c.nextrolecode,
			c.recordtype,
			ct.custtypedesc lovdesccusttypecodename,
			t1.custctgdesc lovdesccustctgcodename,
			c.subcategory,
			c.casteid,
			c.religionid,
			t2.castecode,
			t2.castedesc,
			t3.religioncode,
			t3.religiondesc,
			c.otherCaste,
			c.otherReligion,
			c.natureOfBusiness,
			c.entityType,
			c.custResidentialSts,
			c.qualification,
			c.custFlag,
			COALESCE(t4.roledesc, fn_get_roledesc(c.nextrolecode)) lovdescrequeststage,
			c.margindeviation,
            c.custCRCPR,
            c.phoneNumber
			FROM customers c
			LEFT JOIN rmtcusttypes ct ON c.custtypecode = ct.custtypecode
			LEFT JOIN bmtcustcategories t1 ON c.custctgcode = t1.custctgcode
			LEFT JOIN secroles t4 ON c.nextrolecode = t4.rolecd
			LEFT JOIN caste t2 ON c.casteid = t2.casteid
			LEFT JOIN religion t3 ON c.religionid = t3.religionid
			WHERE NOT (c.custid IN ( SELECT customers_temp.custid
			FROM customers_temp
			WHERE customers_temp.custid = c.custid))
			
			]]>
		</createView>
	</changeSet>



	<changeSet id="256_pre" author="lakshmi.v" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'documentdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="256" author="venkatesh.ch">
		<comment>ST#7_TK#15</comment>
		<createView viewName="documentdetails_view" replaceIfExists="true">
		<![CDATA[
	SELECT t1.docid,
    t1.docmodule,
    t1.doccategory,
    t1.doctype,
    t1.docname,
    t1.docimage,
    t1.finevent,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.referenceid,
    t1.docrefid,
    t1.docpurpose,
    t1.docuri,
    t1.docreceiveddate,
    t1.docreceived,
    t1.docoriginal,
    t1.instructionuid,
    t1.docbarcode,
	t1.remarks
   FROM documentdetails_temp t1
UNION ALL
 SELECT t1.docid,
    t1.docmodule,
    t1.doccategory,
    t1.doctype,
    t1.docname,
    t1.docimage,
    t1.finevent,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.referenceid,
    t1.docrefid,
    t1.docpurpose,
    t1.docuri,
    t1.docreceiveddate,
    t1.docreceived,
    t1.docoriginal,
    t1.instructionuid,
    t1.docbarcode,
	t1.remarks
   FROM documentdetails t1
  WHERE NOT (EXISTS ( SELECT 1
           FROM documentdetails_temp
          WHERE documentdetails_temp.docid = t1.docid))

		]]>
		</createView>
	</changeSet>

	<changeSet id="256_post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'documentdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="257" author="venkatesh.ch">
		<comment>ST#7_TK#15</comment>
		<createView viewName="documentdetails_tview" replaceIfExists="true">
		<![CDATA[
	SELECT t1.docid,
    t1.docmodule,
    t1.doccategory,
    t1.doctype,
    t1.docname,
    t1.docimage,
    t1.finevent,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.referenceid,
    t1.docrefid,
    t1.docpurpose,
    t1.docuri,
    t1.docreceiveddate,
    t1.docreceived,
    t1.docoriginal,
    t1.instructionuid,
    t1.docbarcode,
    t1.remarks
   FROM documentdetails_temp t1
   ]]>
		</createView>
	</changeSet>




	<changeSet id="260" author="madhuri.n">
		<comment>ST#6_TK#8</comment>
		<createView viewName="OCRDetails_View" replaceIfExists="true">
		<![CDATA[
					 select  t1.DetailID,
							t1.HeaderID,
							t1.stepSequence,
							t1.customerContribution,
							t1.financerContribution,
							t1.contributor,
							t1.Active,
							t1.Version,
							t1.LastMntBy,
							t1.LastMntOn,
							t1.RecordStatus,
							t1.RoleCode,
							t1.NextRoleCode,
							t1.TaskId,
							t1.NextTaskId,
							t1.RecordType,
							t1.WorkFlowId
							from OCRDetails_temp t1
					inner join OCRHeader_temp t2 on t1.headerId=t2.headerId
					UNION ALL  
					select  t1.DetailID,
							t1.HeaderID,
							t1.stepSequence,
							t1.customerContribution,
							t1.financerContribution,
							t1.contributor,
							t1.Active,
							t1.Version,
							t1.LastMntBy,
							t1.LastMntOn,
							t1.RecordStatus,
							t1.RoleCode,
							t1.NextRoleCode,
							t1.TaskId,
							t1.NextTaskId,
							t1.RecordType,
							t1.WorkFlowId
							from OCRDetails t1
					inner join OCRHeader t2 on t1.headerId=t2.headerId 
					WHERE NOT (EXISTS ( SELECT 1
							   FROM OCRDetails_temp
							  WHERE OCRDetails_temp.HeaderID  = t1.HeaderID ))

				]]>
		</createView>
	</changeSet>

	<changeSet id="261" author="madhuri.n">
		<comment>ST#6_TK#8</comment>
		<createView viewName="OCRDetails_AView" replaceIfExists="true">
		<![CDATA[
					 
					select  t1.DetailID,
							t1.HeaderID,
							t1.stepSequence,
							t1.customerContribution,
							t1.financerContribution,
							t1.contributor,
							t1.Active,
							t1.Version,
							t1.LastMntBy,
							t1.LastMntOn,
							t1.RecordStatus,
							t1.RoleCode,
							t1.NextRoleCode,
							t1.TaskId,
							t1.NextTaskId,
							t1.RecordType,
							t1.WorkFlowId
							from OCRDetails t1
					inner join OCRHeader t2 on t1.headerId=t2.headerId 
					
				]]>
		</createView>
	</changeSet>



	<changeSet id="265_pre" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customerdocuments_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="265" author="venkatesh.ch">
		<comment>ST#7_TK#15</comment>
		<createView viewName="customerdocuments_view" replaceIfExists="true">
		<![CDATA[
	
	SELECT t1.custid,
    t1.custdoctype,
    t2.doctypedesc AS lovdesccustdoccategory,
    t1.custdoctitle,
    t1.custdocsysname,
    t1.custdocrcvdon,
    t1.custdocexpdate,
    t1.custdocissuedon,
    t1.custdocissuedcountry,
    t3.countrydesc AS lovdesccustdocissuedcountry,
    t1.custdocisverified,
    t1.custdocverifiedby,
    t1.custdocisacrive,
    t1.docpurpose,
    t1.docuri,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.custdocname,
    t1.custdoccategory,
    t1.custdocimage,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.docexpdateismand,
    t2.docissuedatemand,
    t2.docidnummand,
    t2.docissuedauthoritymand,
    t2.docismandatory,
    t1.docrefid,
    t2.docispdfextrequired,
    t2.docispasswordprotected,
    t2.pdfmappingref,
    t1.pdfpassword,
	t1.remarks
   FROM customerdocuments_temp t1
     JOIN bmtdocumenttypes t2 ON t1.custdoccategory  = t2.doctypecode
     JOIN bmtcountries t3 ON t1.custdocissuedcountry = t3.countrycode
UNION ALL
 SELECT t1.custid,
    t1.custdoctype,
    t2.doctypedesc AS lovdesccustdoccategory,
    t1.custdoctitle,
    t1.custdocsysname,
    t1.custdocrcvdon,
    t1.custdocexpdate,
    t1.custdocissuedon,
    t1.custdocissuedcountry,
    t3.countrydesc AS lovdesccustdocissuedcountry,
    t1.custdocisverified,
    t1.custdocverifiedby,
    t1.custdocisacrive,
    t1.docpurpose,
    t1.docuri,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.custdocname,
    t1.custdoccategory,
    t1.custdocimage,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.docexpdateismand,
    t2.docissuedatemand,
    t2.docidnummand,
    t2.docissuedauthoritymand,
    t2.docismandatory,
    t1.docrefid,
    t2.docispdfextrequired,
    t2.docispasswordprotected,
    t2.pdfmappingref,
    t1.pdfpassword,
	t1.remarks
   FROM customerdocuments t1
     JOIN bmtdocumenttypes t2 ON t1.custdoccategory    = t2.doctypecode  
     JOIN bmtcountries t3 ON t1.custdocissuedcountry = t3.countrycode
  WHERE NOT (EXISTS ( SELECT 1
           FROM customerdocuments_temp
          WHERE customerdocuments_temp.custid = t1.custid AND customerdocuments_temp.custdoccategory    = t1.custdoccategory  ))
			
				]]>
		</createView>
	</changeSet>


	<changeSet id="265_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customerdocuments_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="266" author="venkatesh.ch">
		<comment>ST#7_TK#15</comment>
		<createView viewName="customerdocuments_aview" replaceIfExists="true">
		<![CDATA[
		
	SELECT t1.custid,
    t1.custdoctype,
    t2.doctypedesc AS lovdesccustdoccategory,
    t1.custdoctitle,
    t1.custdocsysname,
    t1.custdocrcvdon,
    t1.custdocexpdate,
    t1.custdocissuedon,
    t1.custdocissuedcountry,
    t3.countrydesc AS lovdesccustdocissuedcountry,
    t1.custdocisverified,
    t1.custdocverifiedby,
    t1.custdocisacrive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.custdocname,
    t1.custdoccategory,
    t1.custdocimage,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.docexpdateismand,
    t2.docissuedatemand,
    t2.docidnummand,
    t2.docissuedauthoritymand,
    t2.docismandatory,
    t1.docrefid,
    t1.docpurpose,
    t1.docuri,
    t2.docispdfextrequired,
    t2.docispasswordprotected,
    t2.pdfmappingref,
    t1.pdfpassword,
	t1.remarks
   FROM customerdocuments t1
     JOIN bmtdocumenttypes t2 ON t1.custdoccategory = t2.doctypecode
     JOIN bmtcountries t3 ON t1.custdocissuedcountry = t3.countrycode

	]]>
		</createView>
	</changeSet>



	<changeSet id="299" author="saidurga.v">
		<comment>ST#7_TK#15</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
		<![CDATA[
	
	SELECT t1.custcif,
    t1.custfname,
    t1.custlname,
    t1.custdob,
    t1.custcrcpr,
    t1.mobilenumber,
    t1.custnationality,
    t1.custpassportno,
    t1.employer,
    t1.custisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.nationalitydesc AS lovdescnationalitydesc,
    t3.empname AS lovdescempname,
    t1.custctgcode,
    t1.custcin,
    t1.custaadhaar,
    t1.custcompname,
    t1.reasoncode,
    t3.empindustry,
	t1.gender,t1.AddressType,t1.Housenumber, t1.Country,t1.State,t1.City,t1.Street,t1.Pincode,t1.Remarks,t1.VID,t1.DL,
	t1.Forged_Document_Type,
	t1.Product_applied_in_Other_FI
	
   FROM blacklistcustomer_temp t1
     LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
     LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
UNION ALL
 SELECT t1.custcif,
    t1.custfname,
    t1.custlname,
    t1.custdob,
    t1.custcrcpr,
    t1.mobilenumber,
    t1.custnationality,
    t1.custpassportno,
    t1.employer,
    t1.custisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.nationalitydesc AS lovdescnationalitydesc,
    t3.empname AS lovdescempname,
    t1.custctgcode,
    t1.custcin,
    t1.custaadhaar,
    t1.custcompname,
    t1.reasoncode,
    t3.empindustry,
	t1.gender,t1.AddressType,t1.Housenumber, t1.Country,t1.State,t1.City,t1.Street,t1.Pincode,t1.Remarks,t1.VID,t1.DL,
	t1.Forged_Document_Type,
	t1.Product_applied_in_Other_FI
   FROM blacklistcustomer t1
     LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
     LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
  WHERE NOT (EXISTS ( SELECT 1
           FROM blacklistcustomer_temp
          WHERE blacklistcustomer_temp.custcif = t1.custcif ))
		  	]]>
		</createView>
	</changeSet>



	<changeSet id="302" author="rohit.s">
		<comment>ST#1 TK#7</comment>
		<createView viewName="external_liabilities_pd_view" replaceIfExists="true">
		<![CDATA[
	
	SELECT t1.id,
    t1.liabilityid,
    t1.emitype,
    t1.installmentcleared,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
	t1.emiclearedday
   FROM external_liabilities_pd_temp t1
UNION ALL
 SELECT t1.id,
    t1.liabilityid,
    t1.emitype,
    t1.installmentcleared,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
	t1.emiclearedday
   FROM external_liabilities_pd t1
  WHERE NOT (EXISTS ( SELECT 1
           FROM external_liabilities_pd_temp
          WHERE external_liabilities_pd_temp.liabilityid = t1.liabilityid))
		  	]]>
		</createView>
	</changeSet>

	<changeSet id="310" author="saidurga.v">
		<comment>ST#7_TK#15</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
		<![CDATA[
	
	SELECT t1.custcif,
    t1.custfname,
    t1.custlname,
    t1.custdob,
    t1.custcrcpr,
    t1.mobilenumber,
    t1.custnationality,
    t1.custpassportno,
    t1.employer,
    t1.custisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.nationalitydesc AS lovdescnationalitydesc,
    t3.empname AS lovdescempname,
    t1.custctgcode,
    t1.custcin,
    t1.custaadhaar,
    t1.custcompname,
    t1.reasoncode,
    t3.empindustry,
	t1.gender,t1.AddressType,t1.Housenumber, t1.Country,t1.State,t1.City,t1.Street,t1.Pincode,t1.Remarks,t1.VID,t1.DL,
	t1.Forged_Document_Type,
	t1.Product_applied_in_Other_FI
	
   FROM blacklistcustomer_temp t1
     LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
     LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
UNION ALL
 SELECT t1.custcif,
    t1.custfname,
    t1.custlname,
    t1.custdob,
    t1.custcrcpr,
    t1.mobilenumber,
    t1.custnationality,
    t1.custpassportno,
    t1.employer,
    t1.custisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.nationalitydesc AS lovdescnationalitydesc,
    t3.empname AS lovdescempname,
    t1.custctgcode,
    t1.custcin,
    t1.custaadhaar,
    t1.custcompname,
    t1.reasoncode,
    t3.empindustry,
	t1.gender,t1.AddressType,t1.Housenumber, t1.Country,t1.State,t1.City,t1.Street,t1.Pincode,t1.Remarks,t1.VID,t1.DL,
	t1.Forged_Document_Type,
	t1.Product_applied_in_Other_FI
   FROM blacklistcustomer t1
     LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
     LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
  WHERE NOT (EXISTS ( SELECT 1
           FROM blacklistcustomer_temp
          WHERE blacklistcustomer_temp.custcif = t1.custcif ))
		  	]]>
		</createView>
	</changeSet>


	<changeSet id="311" author="Rohith.S">
		<comment>ST#1_TK#1</comment>
		<createView viewName="buildercompany_aview" replaceIfExists="true">
		<![CDATA[	
SELECT t1.id,
    t1.name,
    t1.segmentation,
    t1.groupid,
    t2.valuedesc AS segmentationname,
    t2.fieldcode,
    t3.name AS groupidname,
    t1.apftype,
    t1.pedevid,
    t1.entitytype,
    t1.emailid,
    t1.citytype,
    t1.address1,
    t1.address2,
    t1.address3,
    t1.city,
    t1.code,
    t1.devavailablity,
    t1.magnitude,
    t1.absavailablity,
    t1.totalproj,
    t1.approved,
    t1.remarks,
    t1.pandetails,
    t1.benfname,
    t1.accountno,
    t7.bankcode,
    t9.bankname,
    t1.bankbranchid,
    t7.ifsc,
    t1.limitonamt,
    t1.limitonunits,
    t1.currentexpuni,
    t1.currentexpamt,
    t1.dateofincop,
    t1.noofproj,
    t1.asshlplayers,
    t1.ongoingproj,
    t1.expinbusiness,
    t1.recommendation,
    t1.magintudeinlacs,
    t1.noofprojcons,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t4.custshrtname AS lovdesccifname,
    t4.custcif,
    t1.custid,
    t5.pccityname AS cityname,
    t6.pincode AS codename,
    t6.areaname,
    t7.branchdesc AS brandesc,
    t8.custtypectg AS entydesc,
    t1.active,
	t1.state
   FROM ((((((((buildercompany t1
     JOIN rmtlovfielddetail t2 ON ((((t1.segmentation) = (t2.fieldcodevalue)) AND ((t2.fieldcode) = 'SEGMENT'))))
     LEFT JOIN buildergroup t3 ON ((t1.groupid = t3.id)))
     LEFT JOIN customers t4 ON ((t1.custid = t4.custid)))
     LEFT JOIN rmtprovincevscity t5 ON (((t1.city) = (t5.pccity))))
     LEFT JOIN pincodes t6 ON (((t1.code) = (t6.pincode))))
     LEFT JOIN bankbranches t7 ON ((t1.bankbranchid = t7.bankbranchid)))
     LEFT JOIN rmtcusttypes t8 ON (((t1.entitytype) = (t8.custtypecode))))
     LEFT JOIN bmtbankdetail t9 ON (((t9.bankcode) = (t7.bankcode))))
	 ]]>
		</createView>
	</changeSet>

	<changeSet id="312" author="Rohith.S">
		<comment>ST#1_TK#1</comment>
		<createView viewName="buildercompany_tview" replaceIfExists="true">
		<![CDATA[ 
 SELECT t1.id,
    t1.name,
    t1.segmentation,
    t1.groupid,
    t2.valuedesc AS segmentationname,
    t2.fieldcode,
    t3.name AS groupidname,
    t1.apftype,
    t1.pedevid,
    t1.entitytype,
    t1.emailid,
    t1.citytype,
    t1.address1,
    t1.address2,
    t1.address3,
    t1.city,
    t1.code,
    t1.devavailablity,
    t1.magnitude,
    t1.absavailablity,
    t1.totalproj,
    t1.approved,
    t1.remarks,
    t1.pandetails,
    t1.benfname,
    t1.accountno,
    t7.bankcode,
    t9.bankname,
    t1.bankbranchid,
    t7.ifsc,
    t1.limitonamt,
    t1.limitonunits,
    t1.currentexpuni,
    t1.currentexpamt,
    t1.dateofincop,
    t1.noofproj,
    t1.asshlplayers,
    t1.ongoingproj,
    t1.expinbusiness,
    t1.recommendation,
    t1.magintudeinlacs,
    t1.noofprojcons,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t4.custshrtname AS lovdesccifname,
    t4.custcif,
    t4.custid,
    t5.pccityname AS cityname,
    t6.pincode AS codename,
    t6.areaname,
    t7.branchdesc AS brandesc,
    t8.custtypectg AS entydesc,
	t1.state
   FROM ((((((((buildercompany_temp t1
     JOIN rmtlovfielddetail t2 ON ((((t1.segmentation) = (t2.fieldcodevalue)) AND ((t2.fieldcode) = 'SEGMENT'))))
     LEFT JOIN buildergroup t3 ON ((t1.groupid = t3.id)))
     LEFT JOIN customers t4 ON ((t1.custid = t4.custid)))
     LEFT JOIN rmtprovincevscity t5 ON (((t1.city) = (t5.pccity))))
     LEFT JOIN pincodes t6 ON (((t1.code) = (t6.pincode))))
     LEFT JOIN bankbranches t7 ON ((t1.bankbranchid = t7.bankbranchid)))
     LEFT JOIN rmtcusttypes t8 ON (((t1.entitytype) = (t8.custtypecode))))
     LEFT JOIN bmtbankdetail t9 ON (((t9.bankcode) = (t7.bankcode))))
	  ]]>
		</createView>
	</changeSet>


	<changeSet id="313" author="Rohith.S">
		<comment>ST#1_TK#1</comment>
		<createView viewName="buildercompany_view" replaceIfExists="true">
		<![CDATA[ 
  SELECT t1.id,
    t1.name,
    t1.segmentation,
    t1.groupid,
    t2.valuedesc AS segmentationname,
    t2.fieldcode,
    t3.name AS groupidname,
    t1.apftype,
    t1.pedevid,
    t1.entitytype,
    t1.emailid,
    t1.citytype,
    t1.address1,
    t1.address2,
    t1.address3,
    t1.city,
    t1.code,
    t1.devavailablity,
    t1.magnitude,
    t1.absavailablity,
    t1.totalproj,
    t1.approved,
    t1.remarks,
    t1.pandetails,
    t1.benfname,
    t1.accountno,
    t7.bankcode,
    t9.bankname,
    t1.bankbranchid,
    t7.ifsc,
    t1.limitonamt,
    t1.limitonunits,
    t1.currentexpuni,
    t1.currentexpamt,
    t1.dateofincop,
    t1.noofproj,
    t1.asshlplayers,
    t1.ongoingproj,
    t1.expinbusiness,
    t1.recommendation,
    t1.magintudeinlacs,
    t1.noofprojcons,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.pccityname AS cityname,
    t6.pincode AS codename,
    t6.areaname,
    t7.branchdesc AS brandesc,
    t8.custtypectg AS entydesc,
    t1.active,
    t10.custshrtname AS lovdesccifname,
    t10.custcif,
    t1.custid,
	t1.state
   FROM ((((((((buildercompany_temp t1
     JOIN rmtlovfielddetail t2 ON ((((t1.segmentation) = (t2.fieldcodevalue)) AND ((t2.fieldcode) = 'SEGMENT'))))
     LEFT JOIN buildergroup t3 ON ((t1.groupid = t3.id)))
     LEFT JOIN rmtprovincevscity t5 ON (((t1.city) = (t5.pccity))))
     LEFT JOIN pincodes t6 ON (((t1.code) = (t6.pincode))))
     LEFT JOIN bankbranches t7 ON ((t1.bankbranchid = t7.bankbranchid)))
     LEFT JOIN rmtcusttypes t8 ON (((t1.entitytype) = (t8.custtypecode))))
     LEFT JOIN bmtbankdetail t9 ON (((t9.bankcode) = (t7.bankcode))))
     LEFT JOIN customers t10 ON ((t1.custid = t10.custid)))
UNION ALL
 SELECT t1.id,
    t1.name,
    t1.segmentation,
    t1.groupid,
    t2.valuedesc AS segmentationname,
    t2.fieldcode,
    t3.name AS groupidname,
    t1.apftype,
    t1.pedevid,
    t1.entitytype,
    t1.emailid,
    t1.citytype,
    t1.address1,
    t1.address2,
    t1.address3,
    t1.city,
    t1.code,
    t1.devavailablity,
    t1.magnitude,
    t1.absavailablity,
    t1.totalproj,
    t1.approved,
    t1.remarks,
    t1.pandetails,
    t1.benfname,
    t1.accountno,
    t7.bankcode,
    t9.bankname,
    t1.bankbranchid,
    t7.ifsc,
    t1.limitonamt,
    t1.limitonunits,
    t1.currentexpuni,
    t1.currentexpamt,
    t1.dateofincop,
    t1.noofproj,
    t1.asshlplayers,
    t1.ongoingproj,
    t1.expinbusiness,
    t1.recommendation,
    t1.magintudeinlacs,
    t1.noofprojcons,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t5.pccityname AS cityname,
    t6.pincode AS codename,
    t6.areaname,
    t7.branchdesc AS brandesc,
    t8.custtypectg AS entydesc,
    t1.active,
    t10.custshrtname AS lovdesccifname,
    t10.custcif,
    t1.custid,
	t1.state
   FROM ((((((((buildercompany t1
     JOIN rmtlovfielddetail t2 ON ((((t1.segmentation) = (t2.fieldcodevalue)) AND ((t2.fieldcode) = 'SEGMENT'))))
     LEFT JOIN buildergroup t3 ON ((t1.groupid = t3.id)))
     LEFT JOIN rmtprovincevscity t5 ON (((t1.city) = (t5.pccity))))
     LEFT JOIN pincodes t6 ON (((t1.code) = (t6.pincode))))
     LEFT JOIN bankbranches t7 ON ((t1.bankbranchid = t7.bankbranchid)))
     LEFT JOIN rmtcusttypes t8 ON (((t1.entitytype) = (t8.custtypecode))))
     LEFT JOIN bmtbankdetail t9 ON (((t9.bankcode) = (t7.bankcode))))
     LEFT JOIN customers t10 ON ((t1.custid = t10.custid)))
  WHERE (NOT (EXISTS ( SELECT 1
           FROM buildercompany_temp
          WHERE (buildercompany_temp.id = t1.id))))
   ]]>
		</createView>
	</changeSet>

	<changeSet id="314_pre" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="314" author="satish.s">
		<comment>ST#12 TK#11</comment>
		<createView viewName="financemain_view" replaceIfExists="true">
			<![CDATA[
			  SELECT t1.finreference,
				t1.investmentref,
				t1.numberofterms,
				t1.grcperiodenddate,
				t1.allowgrcperiod,
				t1.gracebaserate,
				t1.gracespecialrate,
				t1.grcpftrate,
				t1.grcpftfrq,
				t1.nextgrcpftdate,
				t1.allowgrcpftrvw,
				t1.grcpftrvwfrq,
				t1.nextgrcpftrvwdate,
				t1.allowgrccpz,
				t1.grccpzfrq,
				t1.nextgrccpzdate,
				t1.repaybaserate,
				t1.repayspecialrate,
				t1.repayprofitrate,
				t1.repayfrq,
				t1.nextrepaydate,
				t1.repaypftfrq,
				t1.nextrepaypftdate,
				t1.allowrepayrvw,
				t1.repayrvwfrq,
				t1.nextrepayrvwdate,
				t1.allowrepaycpz,
				t1.repaycpzfrq,
				t1.nextrepaycpzdate,
				t1.maturitydate,
				t1.cpzatgraceend,
				t1.downpayment,
				t1.graceflatamount,
				t1.reqrepayamount,
				t1.totalprofit,
				t1.totalcpz,
				t1.totalgrosspft,
				t1.totalgrossgrcpft,
				t1.totalgracepft,
				t1.totalgracecpz,
				t1.grcratebasis,
				t1.repayratebasis,
				t1.fintype,
				t1.finremarks,
				t1.finccy,
				t1.schedulemethod,
				t1.profitdaysbasis,
				t1.reqmaturity,
				t1.calterms,
				t1.calmaturity,
				t1.firstrepay,
				t1.lastrepay,
				t1.finstartdate,
				t1.finamount,
				((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
				t1.finrepaymentamount,
				t1.custid,
				t1.defferments,
				t1.plandefercount,
				t1.finbranch,
				t1.finsourceid,
				t1.alloweddefrpychange,
				t1.availeddefrpychange,
				t1.alloweddeffrqchange,
				t1.availeddeffrqchange,
				t1.recaltype,
				t1.finassetvalue,
				t1.disbaccountid,
				t1.repayaccountid,
				t1.finisactive,
				t1.limitvalid,
				t1.overridelimit,
				t1.securitydeposit,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t7.fintypedesc AS lovdescfintypename,
				t7.finmaxamount AS lovdescfinmaxamt,
				t7.finminamount AS lovdescfinminamount,
				t1.mindownpayperc,
				t7.finisalwdifferment AS lovdescfinalwdeferment,
				t7.finisdwpayrequired AS lovdescdwnpayreq,
				t7.finmaxdifferment AS lovdescfinmaxdifferment,
				t12.branchdesc AS lovdescfinbranchname,
				t12.branchprovince AS finbranchprovincecode,
				t1.lastrepaydate,
				t1.lastrepaypftdate,
				t1.lastrepayrvwdate,
				t1.lastrepaycpzdate,
				t1.allowgrcrepay,
				t1.grcschdmthd,
				t1.grcmargin,
				t1.repaymargin,
				t1.fincurrassetvalue,
				t1.fincommitmentref,
				t1.finlimitref,
				t1.depreciationfrq,
				t1.fincontractdate,
				t1.nextdepdate,
				t1.lastdepdate,
				t1.finaccount,
				t1.fincustpftaccount,
				t17.acrtilllbd AS lovdescaccruedtilllbd,
				t7.finrvwrateapplfor,
				t1.totalrepayamt,
				t1.closingstatus,
				t1.finapproveddate,
				t1.feechargeamt,
				t1.blacklisted,
				t1.finrepaypftonfrq,
				t1.anualizedpercrate,
				t1.effectiverateofreturn,
				t1.migratedfinance,
				t1.schedulemaintained,
				t1.scheduleregenerated,
				t1.finpurpose,
				t39.loanpurposedesc AS lovdescfinpurposename,
				t1.finstatus,
				t1.finstsreason,
				t1.initiateuser,
				t1.bankname,
				t1.iban,
				t1.accounttype,
				t1.ddareferenceno,
				t7.finscheduleon AS lovdescfinscheduleon,
				t1.custdsr,
				t1.jointaccount,
				t1.jointcustid,
				t1.downpaybank,
				t1.downpaysupl,
				t1.downpayaccount,
				t1.securitycollateral,
				t1.approved,
				t1.discrepancy,
				t1.limitapproved,
				t1.graceterms,
				t7.findivision AS lovdescfindivision,
				t1.rcdmaintainsts,
				t1.finrepaymethod,
				t1.grcprofitdaysbasis,
				t1.stepfinance,
				t1.steptype,
				t1.steppolicy,
				t1.alwmanualsteps,
				t1.noofsteps,
				t1.linkedfinref,
				t1.nextuserid,
				t1.priority,
				t24.policydesc AS lovdescsteppolicyname,
				t1.grcminrate,
				t1.grcmaxrate,
				t1.rpyminrate,
				t1.rpymaxrate,
				t1.deviationapproval,
				t1.manualschedule,
				t1.takeoverfinance,
				t1.grcadvbaserate,
				t1.grcadvmargin,
				t1.grcadvpftrate,
				t1.rpyadvbaserate,
				t1.rpyadvmargin,
				t1.rpyadvpftrate,
				t1.supplementrent,
				t1.increasedcost,
				t1.creditinsamt,
				t1.rolloverfrq,
				t1.nextrolloverdate,
				t27.custstsdescription,
				t1.shariastatus,
				t1.initiatedate,
				t1.finpreapprovedref,
				t1.mmaid,
				t1.accountsofficer,
				t1.feeaccountid,
				t1.fincancelac,
				t28.dealername AS lovdescaccountsofficer,
				t28.dealercity AS lovdescsourcecity,
				t1.dsacode,
				t30.rofficerdesc AS dsacodedesc,
				t1.tdsapplicable,
				t1.mandateid,
				t1.droplinefrq,
				t1.firstdroplinedate,
				t1.pftservicingodlimit,
				t1.insuranceamt,
				t1.deductinsdisb,
				t1.alwbpi,
				t1.bpitreatment,
				t1.planemihalw,
				t1.planemihmethod,
				t1.planemihmaxperyear,
				t1.planemihmax,
				t1.planemihlockperiod,
				t1.planemicpz,
				t1.calroundingmode,
				t1.alwmultidisb,
				t1.applicationno,
				t1.referralid,
				t33.rofficerdesc AS referraliddesc,
				t1.dmacode,
				t34.rofficerdesc AS dmacodedesc,
				t1.salesdepartment,
				t35.deptdesc AS salesdepartmentdesc,
				t1.quickdisb,
				t1.wifreference,
				t1.unplanemihlockperiod,
				t1.unplanemicpz,
				t1.reagecpz,
				t1.maxunplannedemi,
				t1.maxreageholidays,
				t1.availedunplanemi,
				t1.availedreageh,
				t1.bpiamount,
				t1.deductfeedisb,
				t1.rvwrateapplfor,
				t1.schcalonrvw,
				t1.pastduepftcalmthd,
				t1.pastduepftmargin,
				t1.droppingmethod,
				t1.ratechganyday,
				t1.promotioncode,
				t1.restructureloan,
				t1.oldfinreference,
				t1.reagebucket,
				t1.fincategory,
				t1.productcategory,
				t1.roundingtarget,
				t36.entitycode AS lovdescentitycode,
				t1.eligibilitymethod,
				t38.fieldcodevalue AS loveligibilitymethod,
				t38.valuedesc AS lovdesceligibilitymethod,
				t1.employeename,
				t37.rofficerdesc AS employeenamedesc,
				t1.samplingrequired,
				t1.legalrequired,
				t1.grcmaxamount,
				t1.connector,
				t40.dealername AS connectorcode,
				t40.dealercity AS connectordesc,
				t1.advanceemi,
				t1.advemiterms,
				t1.bpipftdaysbasis,
				t1.fixedratetenor,
				t1.fixedtenorrate,
				t12.branchtel AS finbranchcontact,
				t1.processattributes,
				t1.businessvertical,
				bv.code AS businessverticalcode,
				bv.description AS businessverticaldesc,
				t1.grcadvtype,
				t1.grcadvterms,
				t1.advtype,
				t1.advterms,
				t1.advstage,
				t1.tdspercentage,
				t1.tdsstartdate,
				t1.tdsenddate,
				t1.tdslimitamt,
				t1.vanreq,
				t1.vancode,
				t1.allowdrawingpower,
				t1.allowrevolving,
				t1.sanbsdschdle,
				t1.promotionseqid,
				t1.svamount,
				t1.cbamount,
				t1.appliedloanamt,
				t1.finisratervwatgrcend,
				t1.reqloanamt,
				t1.reqloantenor,
				t1.finocrrequired,
				t1.offerproduct,
				t1.offeramount,
				t1.custsegmentation,
				t1.baseproduct,
				t1.processtype,
				t1.bureautimeseries,
				t1.campaignname,
				t1.existinglanrefno,
				t1.leadsource,
				t1.posource,
				t1.rsa,
				t1.verification,
				t1.sourcingbranch,
				t1.sourchannelcategory,
				t1.asmname,
				t1.finschcalcodeonrvw,
				t1.rateRvwFrq
			   FROM ((((((((((((((((financemain_temp t1
				 JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
				 LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
				 LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
				 LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
				 LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
				 LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
				 LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
				 LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
				 LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
				 LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
				 LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
				 LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
				 LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) = 'ELGMETHOD'))))
				 LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
				 LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
				 LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			UNION ALL
			 SELECT t1.finreference,
				t1.investmentref,
				t1.numberofterms,
				t1.grcperiodenddate,
				t1.allowgrcperiod,
				t1.gracebaserate,
				t1.gracespecialrate,
				t1.grcpftrate,
				t1.grcpftfrq,
				t1.nextgrcpftdate,
				t1.allowgrcpftrvw,
				t1.grcpftrvwfrq,
				t1.nextgrcpftrvwdate,
				t1.allowgrccpz,
				t1.grccpzfrq,
				t1.nextgrccpzdate,
				t1.repaybaserate,
				t1.repayspecialrate,
				t1.repayprofitrate,
				t1.repayfrq,
				t1.nextrepaydate,
				t1.repaypftfrq,
				t1.nextrepaypftdate,
				t1.allowrepayrvw,
				t1.repayrvwfrq,
				t1.nextrepayrvwdate,
				t1.allowrepaycpz,
				t1.repaycpzfrq,
				t1.nextrepaycpzdate,
				t1.maturitydate,
				t1.cpzatgraceend,
				t1.downpayment,
				t1.graceflatamount,
				t1.reqrepayamount,
				t1.totalprofit,
				t1.totalcpz,
				t1.totalgrosspft,
				t1.totalgrossgrcpft,
				t1.totalgracepft,
				t1.totalgracecpz,
				t1.grcratebasis,
				t1.repayratebasis,
				t1.fintype,
				t1.finremarks,
				t1.finccy,
				t1.schedulemethod,
				t1.profitdaysbasis,
				t1.reqmaturity,
				t1.calterms,
				t1.calmaturity,
				t1.firstrepay,
				t1.lastrepay,
				t1.finstartdate,
				t1.finamount,
				((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
				t1.finrepaymentamount,
				t1.custid,
				t1.defferments,
				t1.plandefercount,
				t1.finbranch,
				t1.finsourceid,
				t1.alloweddefrpychange,
				t1.availeddefrpychange,
				t1.alloweddeffrqchange,
				t1.availeddeffrqchange,
				t1.recaltype,
				t1.finassetvalue,
				t1.disbaccountid,
				t1.repayaccountid,
				t1.finisactive,
				t1.limitvalid,
				t1.overridelimit,
				t1.securitydeposit,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t7.fintypedesc AS lovdescfintypename,
				t7.finmaxamount AS lovdescfinmaxamt,
				t7.finminamount AS lovdescfinminamount,
				t1.mindownpayperc,
				t7.finisalwdifferment AS lovdescfinalwdeferment,
				t7.finisdwpayrequired AS lovdescdwnpayreq,
				t7.finmaxdifferment AS lovdescfinmaxdifferment,
				t12.branchdesc AS lovdescfinbranchname,
				t12.branchprovince AS finbranchprovincecode,
				t1.lastrepaydate,
				t1.lastrepaypftdate,
				t1.lastrepayrvwdate,
				t1.lastrepaycpzdate,
				t1.allowgrcrepay,
				t1.grcschdmthd,
				t1.grcmargin,
				t1.repaymargin,
				t1.fincurrassetvalue,
				t1.fincommitmentref,
				t1.finlimitref,
				t1.depreciationfrq,
				t1.fincontractdate,
				t1.nextdepdate,
				t1.lastdepdate,
				t1.finaccount,
				t1.fincustpftaccount,
				t17.acrtilllbd AS lovdescaccruedtilllbd,
				t7.finrvwrateapplfor,
				t1.totalrepayamt,
				t1.closingstatus,
				t1.finapproveddate,
				t1.feechargeamt,
				t1.blacklisted,
				t1.finrepaypftonfrq,
				t1.anualizedpercrate,
				t1.effectiverateofreturn,
				t1.migratedfinance,
				t1.schedulemaintained,
				t1.scheduleregenerated,
				t1.finpurpose,
				t39.loanpurposedesc AS lovdescfinpurposename,
				t1.finstatus,
				t1.finstsreason,
				t1.initiateuser,
				t1.bankname,
				t1.iban,
				t1.accounttype,
				t1.ddareferenceno,
				t7.finscheduleon AS lovdescfinscheduleon,
				t1.custdsr,
				t1.jointaccount,
				t1.jointcustid,
				t1.downpaybank,
				t1.downpaysupl,
				t1.downpayaccount,
				t1.securitycollateral,
				t1.approved,
				t1.discrepancy,
				t1.limitapproved,
				t1.graceterms,
				t7.findivision AS lovdescfindivision,
				t1.rcdmaintainsts,
				t1.finrepaymethod,
				t1.grcprofitdaysbasis,
				t1.stepfinance,
				t1.steptype,
				t1.steppolicy,
				t1.alwmanualsteps,
				t1.noofsteps,
				t1.linkedfinref,
				t1.nextuserid,
				t1.priority,
				t24.policydesc AS lovdescsteppolicyname,
				t1.grcminrate,
				t1.grcmaxrate,
				t1.rpyminrate,
				t1.rpymaxrate,
				t1.deviationapproval,
				t1.manualschedule,
				t1.takeoverfinance,
				t1.grcadvbaserate,
				t1.grcadvmargin,
				t1.grcadvpftrate,
				t1.rpyadvbaserate,
				t1.rpyadvmargin,
				t1.rpyadvpftrate,
				t1.supplementrent,
				t1.increasedcost,
				t1.creditinsamt,
				t1.rolloverfrq,
				t1.nextrolloverdate,
				t27.custstsdescription,
				t1.shariastatus,
				t1.initiatedate,
				t1.finpreapprovedref,
				t1.mmaid,
				t1.accountsofficer,
				t1.feeaccountid,
				t1.fincancelac,
				t28.dealername AS lovdescaccountsofficer,
				t28.dealercity AS lovdescsourcecity,
				t1.dsacode,
				t30.rofficerdesc AS dsacodedesc,
				t1.tdsapplicable,
				t1.mandateid,
				t1.droplinefrq,
				t1.firstdroplinedate,
				t1.pftservicingodlimit,
				t1.insuranceamt,
				t1.deductinsdisb,
				t1.alwbpi,
				t1.bpitreatment,
				t1.planemihalw,
				t1.planemihmethod,
				t1.planemihmaxperyear,
				t1.planemihmax,
				t1.planemihlockperiod,
				t1.planemicpz,
				t1.calroundingmode,
				t1.alwmultidisb,
				t1.applicationno,
				t1.referralid,
				t33.rofficerdesc AS referraliddesc,
				t1.dmacode,
				t34.rofficerdesc AS dmacodedesc,
				t1.salesdepartment,
				t35.deptdesc AS salesdepartmentdesc,
				t1.quickdisb,
				t1.wifreference,
				t1.unplanemihlockperiod,
				t1.unplanemicpz,
				t1.reagecpz,
				t1.maxunplannedemi,
				t1.maxreageholidays,
				t1.availedunplanemi,
				t1.availedreageh,
				t1.bpiamount,
				t1.deductfeedisb,
				t1.rvwrateapplfor,
				t1.schcalonrvw,
				t1.pastduepftcalmthd,
				t1.pastduepftmargin,
				t1.droppingmethod,
				t1.ratechganyday,
				t1.promotioncode,
				t1.restructureloan,
				t1.oldfinreference,
				t1.reagebucket,
				t1.fincategory,
				t1.productcategory,
				t1.roundingtarget,
				t36.entitycode AS lovdescentitycode,
				t1.eligibilitymethod,
				t38.fieldcodevalue AS loveligibilitymethod,
				t38.valuedesc AS lovdesceligibilitymethod,
				t1.employeename,
				t37.rofficerdesc AS employeenamedesc,
				t1.samplingrequired,
				t1.legalrequired,
				t1.grcmaxamount,
				t1.connector,
				t40.dealername AS connectorcode,
				t40.dealercity AS connectordesc,
				t1.advanceemi,
				t1.advemiterms,
				t1.bpipftdaysbasis,
				t1.fixedratetenor,
				t1.fixedtenorrate,
				t12.branchtel AS finbranchcontact,
				t1.processattributes,
				t1.businessvertical,
				bv.code AS businessverticalcode,
				bv.description AS businessverticaldesc,
				t1.grcadvtype,
				t1.grcadvterms,
				t1.advtype,
				t1.advterms,
				t1.advstage,
				t1.tdspercentage,
				t1.tdsstartdate,
				t1.tdsenddate,
				t1.tdslimitamt,
				t1.vanreq,
				t1.vancode,
				t1.allowdrawingpower,
				t1.allowrevolving,
				t1.sanbsdschdle,
				t1.promotionseqid,
				t1.svamount,
				t1.cbamount,
				t1.appliedloanamt,
				t1.finisratervwatgrcend,
				t1.reqloanamt,
				t1.reqloantenor,
				t1.finocrrequired,
				t1.offerproduct,
				t1.offeramount,
				t1.custsegmentation,
				t1.baseproduct,
				t1.processtype,
				t1.bureautimeseries,
				t1.campaignname,
				t1.existinglanrefno,
				t1.leadsource,
				t1.posource,
				t1.rsa,
				t1.verification,
				t1.sourcingbranch,
				t1.sourchannelcategory,
				t1.asmname,
				t1.finschcalcodeonrvw,
				t1.rateRvwFrq
			   FROM ((((((((((((((((financemain t1
				 JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
				 LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
				 LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
				 LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
				 LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
				 LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
				 LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
				 LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
				 LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
				 LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
				 LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
				 LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
				 LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) = 'ELGMETHOD'))))
				 LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
				 LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
				 LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			  WHERE (NOT (EXISTS ( SELECT 1
					   FROM financemain_temp
					  WHERE ((financemain_temp.finreference) = (t1.finreference)))))
					  
		  	]]>
		</createView>
	</changeSet>

	<changeSet id="314_post" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="315_pre" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="315" author="satish.s">
		<createView viewName="financemain_aview" replaceIfExists="true">
			<![CDATA[	
				 SELECT t1.finreference,
					t1.investmentref,
					t1.numberofterms,
					t1.grcperiodenddate,
					t1.allowgrcperiod,
					t1.gracebaserate,
					t1.gracespecialrate,
					t1.grcpftrate,
					t1.grcpftfrq,
					t1.nextgrcpftdate,
					t1.allowgrcpftrvw,
					t1.grcpftrvwfrq,
					t1.nextgrcpftrvwdate,
					t1.allowgrccpz,
					t1.grccpzfrq,
					t1.nextgrccpzdate,
					t1.repaybaserate,
					t1.repayspecialrate,
					t1.repayprofitrate,
					t1.repayfrq,
					t1.nextrepaydate,
					t1.repaypftfrq,
					t1.nextrepaypftdate,
					t1.allowrepayrvw,
					t1.repayrvwfrq,
					t1.nextrepayrvwdate,
					t1.allowrepaycpz,
					t1.repaycpzfrq,
					t1.nextrepaycpzdate,
					t1.maturitydate,
					t1.cpzatgraceend,
					t1.downpayment,
					t1.graceflatamount,
					t1.reqrepayamount,
					t1.totalprofit,
					t1.totalcpz,
					t1.totalgrosspft,
					t1.totalgrossgrcpft,
					t1.totalgracepft,
					t1.totalgracecpz,
					t1.grcratebasis,
					t1.repayratebasis,
					t1.fintype,
					t1.finremarks,
					t1.finccy,
					t1.schedulemethod,
					t1.profitdaysbasis,
					t1.reqmaturity,
					t1.calterms,
					t1.calmaturity,
					t1.firstrepay,
					t1.lastrepay,
					t1.finstartdate,
					t1.finamount,
					((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
					t1.finrepaymentamount,
					t1.custid,
					t1.defferments,
					t1.plandefercount,
					t1.finbranch,
					t1.finsourceid,
					t1.alloweddefrpychange,
					t1.availeddefrpychange,
					t1.alloweddeffrqchange,
					t1.availeddeffrqchange,
					t1.recaltype,
					t1.finassetvalue,
					t1.disbaccountid,
					t1.repayaccountid,
					t1.finisactive,
					t1.limitvalid,
					t1.overridelimit,
					t1.securitydeposit,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t7.fintypedesc AS lovdescfintypename,
					t7.finmaxamount AS lovdescfinmaxamt,
					t7.finminamount AS lovdescfinminamount,
					t1.mindownpayperc,
					t7.finisalwdifferment AS lovdescfinalwdeferment,
					t7.finisdwpayrequired AS lovdescdwnpayreq,
					t7.finmaxdifferment AS lovdescfinmaxdifferment,
					t12.branchdesc AS lovdescfinbranchname,
					t12.branchprovince AS finbranchprovincecode,
					t1.lastrepaydate,
					t1.lastrepaypftdate,
					t1.lastrepayrvwdate,
					t1.lastrepaycpzdate,
					t1.allowgrcrepay,
					t1.grcschdmthd,
					t1.grcmargin,
					t1.repaymargin,
					t1.fincurrassetvalue,
					t1.fincommitmentref,
					t1.finlimitref,
					t1.depreciationfrq,
					t1.fincontractdate,
					t1.nextdepdate,
					t1.lastdepdate,
					t1.finaccount,
					t1.fincustpftaccount,
					t17.acrtilllbd AS lovdescaccruedtilllbd,
					t7.finrvwrateapplfor,
					t1.totalrepayamt,
					t1.closingstatus,
					t1.finapproveddate,
					t1.feechargeamt,
					t1.blacklisted,
					t1.finrepaypftonfrq,
					t1.anualizedpercrate,
					t1.effectiverateofreturn,
					t1.migratedfinance,
					t1.schedulemaintained,
					t1.scheduleregenerated,
					t1.finpurpose,
					t39.loanpurposedesc AS lovdescfinpurposename,
					t1.finstatus,
					t1.finstsreason,
					t1.initiateuser,
					t1.bankname,
					t1.iban,
					t1.accounttype,
					t1.ddareferenceno,
					t7.finscheduleon AS lovdescfinscheduleon,
					t1.custdsr,
					t1.jointaccount,
					t1.jointcustid,
					t1.downpaybank,
					t1.downpaysupl,
					t1.downpayaccount,
					t1.securitycollateral,
					t1.approved,
					t1.discrepancy,
					t1.limitapproved,
					t1.graceterms,
					t7.findivision AS lovdescfindivision,
					t1.rcdmaintainsts,
					t1.finrepaymethod,
					t1.grcprofitdaysbasis,
					t1.stepfinance,
					t1.steptype,
					t1.steppolicy,
					t1.alwmanualsteps,
					t1.noofsteps,
					t1.linkedfinref,
					t1.nextuserid,
					t1.priority,
					t24.policydesc AS lovdescsteppolicyname,
					t1.grcminrate,
					t1.grcmaxrate,
					t1.rpyminrate,
					t1.rpymaxrate,
					t1.deviationapproval,
					t1.manualschedule,
					t1.takeoverfinance,
					t1.grcadvbaserate,
					t1.grcadvmargin,
					t1.grcadvpftrate,
					t1.rpyadvbaserate,
					t1.rpyadvmargin,
					t1.rpyadvpftrate,
					t1.supplementrent,
					t1.increasedcost,
					t1.creditinsamt,
					t1.rolloverfrq,
					t1.nextrolloverdate,
					t27.custstsdescription,
					t1.shariastatus,
					t1.initiatedate,
					t1.finpreapprovedref,
					t1.mmaid,
					t1.accountsofficer,
					t1.feeaccountid,
					t1.fincancelac,
					t28.dealername AS lovdescaccountsofficer,
					t28.dealercity AS lovdescsourcecity,
					t1.dsacode,
					t30.rofficerdesc AS dsacodedesc,
					t1.tdsapplicable,
					t1.mandateid,
					t1.droplinefrq,
					t1.firstdroplinedate,
					t1.pftservicingodlimit,
					t1.insuranceamt,
					t1.deductinsdisb,
					t1.alwbpi,
					t1.bpitreatment,
					t1.planemihalw,
					t1.planemihmethod,
					t1.planemihmaxperyear,
					t1.planemihmax,
					t1.planemihlockperiod,
					t1.planemicpz,
					t1.calroundingmode,
					t1.alwmultidisb,
					t1.applicationno,
					t1.referralid,
					t33.rofficerdesc AS referraliddesc,
					t1.dmacode,
					t34.rofficerdesc AS dmacodedesc,
					t1.salesdepartment,
					t35.deptdesc AS salesdepartmentdesc,
					t1.quickdisb,
					t1.wifreference,
					t1.unplanemihlockperiod,
					t1.unplanemicpz,
					t1.reagecpz,
					t1.maxunplannedemi,
					t1.maxreageholidays,
					t1.availedunplanemi,
					t1.availedreageh,
					t1.bpiamount,
					t1.deductfeedisb,
					t1.rvwrateapplfor,
					t1.schcalonrvw,
					t1.pastduepftcalmthd,
					t1.pastduepftmargin,
					t1.droppingmethod,
					t1.ratechganyday,
					t1.promotioncode,
					t1.restructureloan,
					t1.oldfinreference,
					t1.reagebucket,
					t1.fincategory,
					t1.productcategory,
					t1.roundingtarget,
					t36.entitycode AS lovdescentitycode,
					t1.eligibilitymethod,
					t38.fieldcodevalue AS loveligibilitymethod,
					t38.valuedesc AS lovdesceligibilitymethod,
					t1.employeename,
					t37.rofficerdesc AS employeenamedesc,
					t1.samplingrequired,
					t1.legalrequired,
					t1.grcmaxamount,
					t1.connector,
					t40.dealername AS connectorcode,
					t40.dealercity AS connectordesc,
					t1.advanceemi,
					t1.advemiterms,
					t1.bpipftdaysbasis,
					t1.fixedratetenor,
					t1.fixedtenorrate,
					t12.branchtel AS finbranchcontact,
					t1.processattributes,
					t1.businessvertical,
					bv.code AS businessverticalcode,
					bv.description AS businessverticaldesc,
					t1.grcadvtype,
					t1.grcadvterms,
					t1.advtype,
					t1.advterms,
					t1.advstage,
					t1.tdspercentage,
					t1.tdsstartdate,
					t1.tdsenddate,
					t1.tdslimitamt,
					t1.vanreq,
					t1.vancode,
					t1.allowdrawingpower,
					t1.allowrevolving,
					t1.sanbsdschdle,
					t1.promotionseqid,
					t1.svamount,
					t1.cbamount,
					t1.appliedloanamt,
					t1.finisratervwatgrcend,
					t1.reqloanamt,
					t1.reqloantenor,
					t1.finocrrequired,
					t1.offerproduct,
					t1.offeramount,
					t1.custsegmentation,
					t1.baseproduct,
					t1.processtype,
					t1.bureautimeseries,
					t1.campaignname,
					t1.existinglanrefno,
					t1.leadsource,
					t1.posource,
					t1.rsa,
					t1.verification,
					t1.sourcingbranch,
					t1.sourchannelcategory,
					t1.asmname,
					t1.finschcalcodeonrvw,
					t1.rateRvwFrq
				   FROM ((((((((((((((((financemain t1
					 JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
					 LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
					 LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
					 LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
					 LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
					 LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
					 LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
					 LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
					 LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
					 LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
					 LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
					 LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
					 LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) = 'ELGMETHOD'))))
					 LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
					 LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
					 LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
				]]>
		</createView>
	</changeSet>

	<changeSet id="315_post" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="316_pre" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="316" author="satish.s">
		<createView viewName="rejectfinancemain_view" replaceIfExists="true">
			<![CDATA[	
			  SELECT f.finreference,
				t.fincategory AS lovdescproductcodename,
				f.fintype,
				f.finbranch,
				f.finstartdate,
				f.maturitydate,
				f.numberofterms,
				f.finccy,
				f.finamount,
				(((f.finamount - f.downpayment) + f.feechargeamt) + f.insuranceamt) AS financingamount,
				f.feechargeamt,
				f.insuranceamt,
				((((f.finamount - f.downpayment) + f.feechargeamt) + f.insuranceamt) - f.finrepaymentamount) AS curfinamount,
				f.downpayment,
				f.fincurrassetvalue,
				f.finassetvalue,
				f.allowdrawingpower,
				f.promotionseqid,
				f.sanbsdschdle,
				c.custcif AS lovdesccustcif,
				f.svamount,
				f.cbamount,
				f.finisratervwatgrcend,
				f.reqloanamt,
				f.reqloantenor,
				f.offerproduct,
				f.offeramount,
				f.custsegmentation,
				f.baseproduct,
				f.processtype,
				f.bureautimeseries,
				f.campaignname,
				f.existinglanrefno,
				f.leadsource,
				f.posource,
				f.rsa,
				f.verification,
				f.sourcingbranch,
				f.sourchannelcategory,
				f.asmname,
				f.finschcalcodeonrvw,
				f.rateRvwFrq
			   FROM ((rejectfinancemain f
				 LEFT JOIN customers c ON ((f.custid = c.custid)))
				 LEFT JOIN rmtfinancetypes t ON (((f.fintype) = (t.fintype))))
			]]>
		</createView>
	</changeSet>

	<changeSet id="316_post" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="317_pre" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_lview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="317" author="satish.s">
		<createView viewName="financemain_lview" replaceIfExists="true">
			<![CDATA[	
				  SELECT t1.finreference,
					t1.investmentref,
					t1.fintype,
					t1.finccy,
					t1.finamount,
					t1.downpayment,
					t1.feechargeamt,
					t1.schedulemethod,
					t1.numberofterms,
					t1.recordstatus,
					t1.recordtype,
					t1.rolecode,
					t1.nextrolecode,
					t1.finbranch,
					t1.fincontractdate,
					t1.linkedfinref,
					t1.nextuserid,
					t1.priority,
					t1.workflowid,
					t1.taskid,
					t1.nexttaskid,
					t1.finpreapprovedref,
					t1.rcdmaintainsts,
					t1.insuranceamt,
					t1.fincurrassetvalue,
					t1.calterms,
					t1.deviationapproval,
					t1.finpurpose,
					t1.initiatedate,
					t1.finassetvalue,
					t2.custcif AS lovdesccustcif,
					t2.custshrtname AS lovdesccustshrtname,
					t2.custpassportno AS lovdesccustpassportno,
					t2.custdob AS lovdesccustdob,
					t2.custcrcpr AS lovdesccustcrcpr,
					t2.phonenumber,
					t3.fincategory AS lovdescproductcodename,
					t3.findivision AS lovdescfindivision,
					t3.product AS lovdescfinproduct,
					t3.fintypedesc AS lovdescfintypename,
					COALESCE(t4.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
					t1.samplingrequired,
					t1.advanceemi,
					t1.advemiterms,
					t1.bpipftdaysbasis,
					t1.graceterms,
					t1.productcategory,
					t1.reqloanamt,
					t1.reqloantenor,
					t1.finocrrequired,
					t1.offerproduct,
					t1.offeramount,
					t1.custsegmentation,
					t1.baseproduct,
					t1.processtype,
					t1.bureautimeseries,
					t1.campaignname,
					t1.existinglanrefno,
					t1.leadsource,
					t1.posource,
					t1.rsa,
					t1.verification,
					t1.sourcingbranch,
					t1.sourchannelcategory,
					t1.asmname,
					t1.finschcalcodeonrvw,
					t1.rateRvwFrq
				   FROM (((financemain_temp t1
					 JOIN customers t2 ON ((t1.custid = t2.custid)))
					 JOIN rmtfinancetypes t3 ON (((t3.fintype) = (t1.fintype))))
					 LEFT JOIN secroles t4 ON (((t1.nextrolecode) = (t4.rolecd)))) 
							]]>
		</createView>
	</changeSet>

	<changeSet id="317_post" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="318_pre" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="318" author="satish.s">
		<createView viewName="financemain_tview" replaceIfExists="true">
			<![CDATA[	
				 SELECT t1.finreference,
					t1.investmentref,
					t1.numberofterms,
					t1.grcperiodenddate,
					t1.allowgrcperiod,
					t1.gracebaserate,
					t1.gracespecialrate,
					t1.grcpftrate,
					t1.grcpftfrq,
					t1.nextgrcpftdate,
					t1.allowgrcpftrvw,
					t1.grcpftrvwfrq,
					t1.nextgrcpftrvwdate,
					t1.allowgrccpz,
					t1.grccpzfrq,
					t1.nextgrccpzdate,
					t1.repaybaserate,
					t1.repayspecialrate,
					t1.repayprofitrate,
					t1.repayfrq,
					t1.nextrepaydate,
					t1.repaypftfrq,
					t1.nextrepaypftdate,
					t1.allowrepayrvw,
					t1.repayrvwfrq,
					t1.nextrepayrvwdate,
					t1.allowrepaycpz,
					t1.repaycpzfrq,
					t1.nextrepaycpzdate,
					t1.maturitydate,
					t1.cpzatgraceend,
					t1.downpayment,
					t1.graceflatamount,
					t1.reqrepayamount,
					t1.totalprofit,
					t1.totalcpz,
					t1.totalgrosspft,
					t1.totalgrossgrcpft,
					t1.totalgracepft,
					t1.totalgracecpz,
					t1.grcratebasis,
					t1.repayratebasis,
					t1.fintype,
					t1.finremarks,
					t1.finccy,
					t1.schedulemethod,
					t1.profitdaysbasis,
					t1.reqmaturity,
					t1.calterms,
					t1.calmaturity,
					t1.firstrepay,
					t1.lastrepay,
					t1.finstartdate,
					t1.finamount,
					((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
					t1.finrepaymentamount,
					t1.custid,
					t1.defferments,
					t1.plandefercount,
					t1.finbranch,
					t1.finsourceid,
					t1.alloweddefrpychange,
					t1.availeddefrpychange,
					t1.alloweddeffrqchange,
					t1.availeddeffrqchange,
					t1.recaltype,
					t1.finassetvalue,
					t1.disbaccountid,
					t1.repayaccountid,
					t1.finisactive,
					t1.limitvalid,
					t1.overridelimit,
					t1.securitydeposit,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t7.fintypedesc AS lovdescfintypename,
					t7.finmaxamount AS lovdescfinmaxamt,
					t7.finminamount AS lovdescfinminamount,
					t1.mindownpayperc,
					t7.finisalwdifferment AS lovdescfinalwdeferment,
					t7.finisdwpayrequired AS lovdescdwnpayreq,
					t7.finmaxdifferment AS lovdescfinmaxdifferment,
					t12.branchdesc AS lovdescfinbranchname,
					t12.branchprovince AS finbranchprovincecode,
					t1.lastrepaydate,
					t1.lastrepaypftdate,
					t1.lastrepayrvwdate,
					t1.lastrepaycpzdate,
					t1.allowgrcrepay,
					t1.grcschdmthd,
					t1.grcmargin,
					t1.repaymargin,
					t1.fincurrassetvalue,
					t1.fincommitmentref,
					t1.finlimitref,
					t1.depreciationfrq,
					t1.fincontractdate,
					t1.nextdepdate,
					t1.lastdepdate,
					t1.finaccount,
					t1.fincustpftaccount,
					t17.acrtilllbd AS lovdescaccruedtilllbd,
					t7.finrvwrateapplfor,
					t1.totalrepayamt,
					t1.closingstatus,
					t1.finapproveddate,
					t1.feechargeamt,
					t1.blacklisted,
					t1.finrepaypftonfrq,
					t1.anualizedpercrate,
					t1.effectiverateofreturn,
					t1.migratedfinance,
					t1.schedulemaintained,
					t1.scheduleregenerated,
					t1.finpurpose,
					t39.loanpurposedesc AS lovdescfinpurposename,
					t1.finstatus,
					t1.finstsreason,
					t1.initiateuser,
					t1.bankname,
					t1.iban,
					t1.accounttype,
					t1.ddareferenceno,
					t7.finscheduleon AS lovdescfinscheduleon,
					t1.custdsr,
					t1.jointaccount,
					t1.jointcustid,
					t1.downpaybank,
					t1.downpaysupl,
					t1.downpayaccount,
					t1.securitycollateral,
					t1.approved,
					t1.discrepancy,
					t1.limitapproved,
					t1.graceterms,
					t7.findivision AS lovdescfindivision,
					t1.rcdmaintainsts,
					t1.finrepaymethod,
					t1.grcprofitdaysbasis,
					t1.stepfinance,
					t1.steptype,
					t1.steppolicy,
					t1.alwmanualsteps,
					t1.noofsteps,
					t1.linkedfinref,
					t1.nextuserid,
					t1.priority,
					t24.policydesc AS lovdescsteppolicyname,
					t1.grcminrate,
					t1.grcmaxrate,
					t1.rpyminrate,
					t1.rpymaxrate,
					t1.deviationapproval,
					t1.manualschedule,
					t1.takeoverfinance,
					t1.grcadvbaserate,
					t1.grcadvmargin,
					t1.grcadvpftrate,
					t1.rpyadvbaserate,
					t1.rpyadvmargin,
					t1.rpyadvpftrate,
					t1.supplementrent,
					t1.increasedcost,
					t1.creditinsamt,
					t1.rolloverfrq,
					t1.nextrolloverdate,
					t27.custstsdescription,
					t1.shariastatus,
					t1.initiatedate,
					t1.finpreapprovedref,
					t1.mmaid,
					t1.accountsofficer,
					t1.feeaccountid,
					t1.fincancelac,
					t28.dealername AS lovdescaccountsofficer,
					t28.dealercity AS lovdescsourcecity,
					t1.dsacode,
					t30.rofficerdesc AS dsacodedesc,
					t1.tdsapplicable,
					t1.mandateid,
					t1.droplinefrq,
					t1.firstdroplinedate,
					t1.pftservicingodlimit,
					t1.insuranceamt,
					t1.deductinsdisb,
					t1.alwbpi,
					t1.bpitreatment,
					t1.planemihalw,
					t1.planemihmethod,
					t1.planemihmaxperyear,
					t1.planemihmax,
					t1.planemihlockperiod,
					t1.planemicpz,
					t1.calroundingmode,
					t1.alwmultidisb,
					t1.applicationno,
					t1.referralid,
					t33.rofficerdesc AS referraliddesc,
					t1.dmacode,
					t34.rofficerdesc AS dmacodedesc,
					t1.salesdepartment,
					t35.deptdesc AS salesdepartmentdesc,
					t1.quickdisb,
					t1.wifreference,
					t1.unplanemihlockperiod,
					t1.unplanemicpz,
					t1.reagecpz,
					t1.maxunplannedemi,
					t1.maxreageholidays,
					t1.availedunplanemi,
					t1.availedreageh,
					t1.bpiamount,
					t1.deductfeedisb,
					t1.rvwrateapplfor,
					t1.schcalonrvw,
					t1.pastduepftcalmthd,
					t1.pastduepftmargin,
					t1.droppingmethod,
					t1.ratechganyday,
					t1.promotioncode,
					t1.restructureloan,
					t1.oldfinreference,
					t1.reagebucket,
					t1.fincategory,
					t1.productcategory,
					t1.roundingtarget,
					t36.entitycode AS lovdescentitycode,
					t1.eligibilitymethod,
					t38.fieldcodevalue AS loveligibilitymethod,
					t38.valuedesc AS lovdesceligibilitymethod,
					t1.employeename,
					t37.rofficerdesc AS employeenamedesc,
					t1.samplingrequired,
					t1.legalrequired,
					t1.grcmaxamount,
					t1.connector,
					t40.dealername AS connectorcode,
					t40.dealercity AS connectordesc,
					t1.advanceemi,
					t1.advemiterms,
					t1.bpipftdaysbasis,
					t1.fixedratetenor,
					t1.fixedtenorrate,
					t12.branchtel AS finbranchcontact,
					t1.processattributes,
					t1.businessvertical,
					bv.code AS businessverticalcode,
					bv.description AS businessverticaldesc,
					t1.grcadvtype,
					t1.grcadvterms,
					t1.advtype,
					t1.advterms,
					t1.advstage,
					t1.tdspercentage,
					t1.tdsstartdate,
					t1.tdsenddate,
					t1.tdslimitamt,
					t1.vanreq,
					t1.vancode,
					t1.allowdrawingpower,
					t1.allowrevolving,
					t1.sanbsdschdle,
					t1.promotionseqid,
					t1.svamount,
					t1.cbamount,
					t1.appliedloanamt,
					t1.finisratervwatgrcend,
					t1.reqloanamt,
					t1.reqloantenor,
					t1.finocrrequired,
					t1.offerproduct,
					t1.offeramount,
					t1.custsegmentation,
					t1.baseproduct,
					t1.processtype,
					t1.bureautimeseries,
					t1.campaignname,
					t1.existinglanrefno,
					t1.leadsource,
					t1.posource,
					t1.rsa,
					t1.verification,
					t1.sourcingbranch,
					t1.sourchannelcategory,
					t1.asmname,
					t1.finschcalcodeonrvw,
					t1.rateRvwFrq
				   FROM ((((((((((((((((financemain_temp t1
					 JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
					 LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
					 LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
					 LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
					 LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
					 LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
					 LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
					 LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
					 LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
					 LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
					 LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
					 LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
					 LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) = 'ELGMETHOD'))))
					 LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
					 LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
					 LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			]]>
		</createView>
	</changeSet>

	<changeSet id="318_post" author="satish.s" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="319" author="mangapathi">
		<comment>disbursement related configuration</comment>
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
					SELECT FA.PAYMENTID,
			FA.FINREFERENCE,
			'D' CHANNEL,
			0 PROVIDERID,
			CASE
			WHEN FA.PAYMENTTYPE = 'NEFT'
			THEN 'N'
			WHEN FA.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN
			FA.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN FA.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE FA.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			FA.AMTTOBERELEASED,
			FA.DISBDATE,
			FA.LLDATE,
			FA.PAYABLELOC,
			FA.PRINTINGLOC,
			CU.CUSTCIF,
			CU.CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			CE.CUSTEMAIL CUSTOMER_EMAIL,
			CS.CPPROVINCENAME CUSTOMER_STATE,
			CC.PCCITYNAME CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			'' CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			FA.BENEFICIARYACCNO,
			CASE
			WHEN FA.PAYMENTTYPE = 'CHEQUE'
			OR FA.PAYMENTTYPE = 'DD'
			THEN
			FA.LIABILITYHOLDNAME
			ELSE FA.BENEFICIARYNAME
			END BENEFICIARYNAME,
			(FA.PHONECOUNTRYCODE ${call.concatenate} FA.PHONEAREACODE) ${call.concatenate} FA.PHONENUMBER BENEFICIARY_MOBILE,
			BCE.CUSTEMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME BENFICIARY_CITY,
			BRCA.CustAddrHNbr ${call.concatenate}','${call.concatenate} BRCA.CustAddrStreet ${call.concatenate}','${call.concatenate} BRC.PCCITYNAME ${call.concatenate}','${call.concatenate} BRS.CPPROVINCENAME  BENFICIARY_ADDRESS1,
			'' BENFICIARY_ADDRESS2,
			'' BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			'' BENFICIARY_ADDRESS5,
			'' PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			'' PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			'' PAYMENT_DETAIL7,
			FA.STATUS,
			FA.DESCRIPTION REMARKS,
			FA.PAYMENTTYPE,
			FM.FINTYPE,
			PB.PARTNERBANKID
			PARTNERBANK_ID,
			PB.PARTNERBANKCODE PARTNERBANK_CODE,
			FA.INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			FM.FINISACTIVE,
			SMD.ENTITYCODE,
			PB.ACCOUNTNO PARTNERBANK_ACCOUNT
			FROM FINADVANCEPAYMENTS FA
			JOIN
			(SELECT FINANCEMAIN_TEMP.CUSTID,
			FINANCEMAIN_TEMP.FINREFERENCE,
			FINANCEMAIN_TEMP.FINTYPE,
			FINANCEMAIN_TEMP.FINISACTIVE
			FROM FINANCEMAIN_TEMP
			UNION ALL
			SELECT T2.CUSTID,
			T2.FINREFERENCE,
			T2.FINTYPE,
			T2.FINISACTIVE
			FROM FINANCEMAIN T2
			WHERE NOT (EXISTS
			( SELECT 1 FROM
			FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM
			ON FM.FINREFERENCE = FA.FINREFERENCE
			JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID	
			JOIN RMTCURRENCIES CCY ON CCY.CCYCODE	= FA.DISBCCY
			JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE	ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID	AND CA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
			LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE =	BB.BANKCODE
			LEFT JOIN ( SELECT PB_1.PARTNERBANKID,	
			PBD_1.BANKNAME,
			PBB.BRANCHDESC,
			PBBRC.PCCITYNAME,
			PBBRS.CPPROVINCENAME FROM PARTNERBANKS PB_1
			JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE
			JOIN BMTBANKDETAIL PBD_1 ON PBD_1.BANKCODE = PBB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
			) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
			LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND
			BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
			LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID
			AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES	BRCA ON	BRCA.CUSTID = BR.CUSTID
			AND BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
			WHERE FA.STATUS = 'APPROVED' AND NOT (FA.PAYMENTID IN ( 
			SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
			AND NOT	(FA.PAYMENTID IN ( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP))
			UNION ALL
			SELECT
			PI.PAYMENTINSTRUCTIONID PAYMENTID,
			PH.FINREFERENCE,
			PH.PAYMENTTYPE CHANNEL,
			0 PROVIDERID,
			CASE
			WHEN PI.PAYMENTTYPE =
			'NEFT'
			THEN 'N'
			WHEN PI.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN PI.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN PI.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE PI.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			PI.PAYMENTAMOUNT / CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			PI.POSTDATE
			DISBDATE,
			PI.POSTDATE LLDATE,
			PI.PAYABLELOC,
			PI.PRINTINGLOC,
			CU.CUSTCIF,
			CU.CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			CE.CUSTEMAIL
			CUSTOMER_EMAIL,
			CS.CPPROVINCENAME CUSTOMER_STATE,
			CC.PCCITYNAME CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			'' CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			PI.ACCOUNTNO BENEFICIARYACCNO,
			CASE
			WHEN PI.PAYMENTTYPE = 'CHEQUE'
			OR PI.PAYMENTTYPE = 'DD'
			THEN
			PI.FAVOURNAME
			ELSE PI.ACCTHOLDERNAME
			END BENEFICIARYNAME,
			PI.PHONECOUNTRYCODE ${call.concatenate} PI.PHONENUMBER BENEFICIARY_MOBILE,
			BCE.CUSTEMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME BENFICIARY_CITY,
			'' BENFICIARY_ADDRESS1,
			'' BENFICIARY_ADDRESS2,
			'' BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			'' BENFICIARY_ADDRESS5,
			'' PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			'' PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			'' PAYMENT_DETAIL7,
			PI.STATUS,
			PI.REMARKS,
			PI.PAYMENTTYPE,
			FM.FINTYPE,
			PB.PARTNERBANKID PARTNERBANK_ID,
			PB.PARTNERBANKCODE
			PARTNERBANK_CODE,
			PI.POSTDATE INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			FM.FINISACTIVE,
			SMD.ENTITYCODE,
			PB.ACCOUNTNO
			PARTNERBANK_ACCOUNTNO
			FROM PAYMENTINSTRUCTIONS PI
			JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
			JOIN (SELECT
			FINANCEMAIN.CUSTID,
			FINANCEMAIN.FINREFERENCE,
			FINANCEMAIN.FINTYPE,
			FINANCEMAIN.FINISACTIVE
			FROM FINANCEMAIN
			UNION ALL
			SELECT T2.CUSTID,
			T2.FINREFERENCE,
			T2.FINTYPE,
			T2.FINISACTIVE
			FROM FINANCEMAIN_TEMP T2
			WHERE NOT (EXISTS
			( SELECT 1 FROM
			FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM ON FM.FINREFERENCE = PH.FINREFERENCE
			JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
			JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
			JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
			LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID
			AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
			LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY	BBRC ON BBRC.PCCITY = BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
			LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID
			AND BR.ACCNUMBER = PI.ACCOUNTNO	AND BR.CUSTID = FM.CUSTID
			LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE ON	BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID	AND	BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY = BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
			WHERE PI.STATUS = 'APPROVED'
			AND NOT
			(PI.PAYMENTINSTRUCTIONID IN
			( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
			DISBURSEMENT_REQUESTS
			))
			UNION ALL
			SELECT PI.ID PAYMENTID,
			'' FINREFERENCE,
			'I' CHANNEL,
			PI.PROVIDERID,
			CASE
			WHEN
			PI.PAYMENTTYPE = 'NEFT'
			THEN 'N'
			WHEN PI.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN PI.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN
			PI.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE PI.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			PI.PAYMENTAMOUNT / CCY.CCYMINORCCYUNITS
			AMTTOBERELEASED,
			PI.PAYMENTDATE DISBDATE,
			PI.PAYMENTDATE LLDATE,
			'' PAYABLELOC,
			'' PRINTINGLOC,
			'' CUSTCIF,
			'' CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			'' CUSTOMER_EMAIL,
			'' CUSTOMER_STATE,
			'' CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			'' CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
			AVD.DEALERNAME BENEFICIARYNAME,
			AVD.DEALERTELEPHONE
			BENEFICIARY_MOBILE,
			AVD.EMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME BENFICIARY_CITY,
			AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
			AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
			AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			'' BENFICIARY_ADDRESS5,
			'' PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			'' PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			'' PAYMENT_DETAIL7,
			PI.STATUS,
			PI.REMARKS,
			PI.PAYMENTTYPE,
			'' FINTYPE,
			PB.PARTNERBANKID PARTNERBANK_ID,
			PB.PARTNERBANKCODE PARTNERBANK_CODE,
			PI.PAYMENTDATE INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			1 FINISACTIVE,
			PI.ENTITYCODE,
			PB.ACCOUNTNO PARTNERBANK_ACCOUNT
			FROM INSURANCEPAYMENTINSTRUCTIONS PI
			JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
			JOIN PARTNERBANKS PB ON	PB.PARTNERBANKID = PI.PARTNERBANKID
			JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
			JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
			LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY	= BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
			LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	AVD.DEALERCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
			WHERE PI.STATUS = 'APPROVED' AND PI.PAYMENTAMOUNT > 0
			AND NOT (PI.ID IN( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
				]]>
		</createView>
	</changeSet>

	<changeSet id="320" author="rajesh.n">
		<createView viewName="bankinfodetail_aview" replaceIfExists="true">
			<![CDATA[
				 SELECT t1.bankid,
					t1.monthyear,
					t1.balance,
					t1.debitno,
					t1.debitamt,
					t1.creditno,
					t1.creditamt,
					t1.bouncein,
					t1.bounceout,
					t1.closingbal,
					t1.sanctionlimit,
					t1.avgutilization,
					t1.peakutilizationlevel,
					t1.odcclimit,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.Interest, 
					t1.trf
				   FROM bankinfodetail t1
			   ]]>
		</createView>
	</changeSet>

	<changeSet id="321" author="rajesh.n">
		<createView viewName="bankinfodetail_view" replaceIfExists="true">
			<![CDATA[	
			 SELECT t1.bankid,
				t1.monthyear,
				t1.balance,
				t1.debitno,
				t1.debitamt,
				t1.creditno,
				t1.creditamt,
				t1.bouncein,
				t1.bounceout,
				t1.closingbal,
				t1.sanctionlimit,
				t1.avgutilization,
				t1.peakutilizationlevel,
				t1.odcclimit,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.Interest, 
				t1.trf
			   FROM bankinfodetail_temp t1
			UNION ALL
			 SELECT t1.bankid,
				t1.monthyear,
				t1.balance,
				t1.debitno,
				t1.debitamt,
				t1.creditno,
				t1.creditamt,
				t1.bouncein,
				t1.bounceout,
				t1.closingbal,
				t1.sanctionlimit,
				t1.avgutilization,
				t1.peakutilizationlevel,
				t1.odcclimit,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.Interest, 
				t1.trf
			   FROM bankinfodetail t1
			  WHERE NOT (EXISTS ( SELECT 1 AS expr1
					   FROM bankinfodetail_temp
					  WHERE bankinfodetail_temp.bankid = t1.bankid AND bankinfodetail_temp.monthyear = t1.monthyear))
			]]>
		</createView>
	</changeSet>

	<changeSet id="322" author="madhuri.n">
		<comment>ST#6_TK#8</comment>
		<createView viewName="OCRDetails_View" replaceIfExists="true">
			<![CDATA[
				SELECT t1.DetailID,
				t1.HeaderID,
				t1.stepSequence,
				t1.customerContribution,
				t1.financerContribution,
				t1.contributor,
				t1.Active,
				t1.Version,
				t1.LastMntBy,
				t1.LastMntOn,
				t1.RecordStatus,
				t1.RoleCode,
				t1.NextRoleCode,
				t1.TaskId,
				t1.NextTaskId,
				t1.RecordType,
				t1.WorkFlowId    
				   FROM OCRDetails_temp t1
					 JOIN OCRHEADER t2 ON t1.headerid = t2.headerid    
				UNION ALL
				SELECT t1.DetailID,
				t1.HeaderID,
				t1.stepSequence,
				t1.customerContribution,
				t1.financerContribution,
				t1.contributor,
				t1.Active,
				t1.Version,
				t1.LastMntBy,
				t1.LastMntOn,
				t1.RecordStatus,
				t1.RoleCode,
				t1.NextRoleCode,
				t1.TaskId,
				t1.NextTaskId,
				t1.RecordType,
				t1.WorkFlowId
				   FROM ocrdetails t1
					 JOIN ocrheader t2 ON t1.headerid = t2.headerid
				  WHERE NOT (EXISTS ( SELECT 1
						   FROM ocrdetails_temp
						  WHERE ocrdetails_temp.detailid = t1.detailid ))
			]]>
		</createView>
	</changeSet>


	<changeSet id="322.1" author="madhuri.n">
		<comment>ST#6_TK#8</comment>
		<createView viewName="OCRDetails_View" replaceIfExists="true">
			<![CDATA[
				SELECT t1.DetailID,
				t1.HeaderID,
				t1.stepSequence,
				t1.customerContribution,
				t1.financerContribution,
				t1.contributor,
				t1.Active,
				t1.Version,
				t1.LastMntBy,
				t1.LastMntOn,
				t1.RecordStatus,
				t1.RoleCode,
				t1.NextRoleCode,
				t1.TaskId,
				t1.NextTaskId,
				t1.RecordType,
				t1.WorkFlowId    
				   FROM OCRDetails_temp t1
					 JOIN OCRHEADER_temp t2 ON t1.headerid = t2.headerid    
				UNION ALL
				SELECT t1.DetailID,
				t1.HeaderID,
				t1.stepSequence,
				t1.customerContribution,
				t1.financerContribution,
				t1.contributor,
				t1.Active,
				t1.Version,
				t1.LastMntBy,
				t1.LastMntOn,
				t1.RecordStatus,
				t1.RoleCode,
				t1.NextRoleCode,
				t1.TaskId,
				t1.NextTaskId,
				t1.RecordType,
				t1.WorkFlowId
				   FROM ocrdetails t1
					 JOIN ocrheader t2 ON t1.headerid = t2.headerid
				  WHERE NOT (EXISTS ( SELECT 1
						   FROM ocrdetails_temp
						  WHERE ocrdetails_temp.detailid = t1.detailid ))
			]]>
		</createView>
	</changeSet>

	<changeSet id="323" author="Mangapathi.s">
		<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
  		 <![CDATA[
  		    SELECT  M.MANDATEID,
					BD.BANKSHORTCODE BANKCODE,
					BD.BANKNAME,
					case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
					case when LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
					CUST.CUSTCIF,
					CUST.CUSTSHRTNAME,
					CUST.CustCoreBank,
					FT.FINTYPEDESC FINTYPE ,
					FIN.FINREFERENCE ,
					COALESCE((SELECT SUM(TotalAmount) from (Select
					MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount
					FROM FINSCHEDULEDETAILS FSD
					INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE=FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID
					GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
					COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD 
								WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID =
					            M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
					CASE M.OPENMANDATE WHEN 1 THEN 'New Open ECS' ELSE 'No Open ECS' END OPENMANDATE,
					M.ACCNUMBER,
					CASE WHEN M.ACCTYPE = '10' then 'Savings Account' WHEN M.ACCTYPE = '11' then 'Current Account' WHEN M.ACCTYPE = '11' then 'Cash Credit Account' ELSE M.ACCTYPE END ACCTYPE,
					M.ACCHOLDERNAME,
					BB.MICR,
					BB.IFSC,
					BB.ADDOFBRANCH,
					(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
					(select MAX(SCHDATE) from FINSCHEDULEDETAILS where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) EMIENDDATE,
					COALESCE (M.MAXLIMIT, 0) MAXLIMIT,
					COALESCE((SELECT SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID) GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
					FIN.NumberOfTerms,
					M.periodicity,
					M.STARTDATE,
					M.EXPIRYDATE,
					FIN.APPLICATIONNO,
					M.MANDATETYPE,
					M.STATUS,
					M.INPUTDATE,
					M.RECORDSTATUS,
					M.RECORDTYPE,
					M.MANDATECCY,
					COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,
					M.EntityCode,
					CP.PHONENUMBER,
					CE.CUSTEMAIL,
					PB.PARTNERBANKNAME,
					M.LASTMNTON,
					BB.BranchDesc BANK_BRANCH_NAME
					FROM MANDATES M
				INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
				INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE
				INNER JOIN CUSTOMERS CUST ON CUST.CUSTID = M.CUSTID
				INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH
				LEFT JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = M.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
				LEFT OUTER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
				LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
				LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH
				LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE=FT.FINTYPE
				WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC' OR status ='NEW'))
			]]>
		</createView>
	</changeSet>

	<changeSet id="324" author="rohit.s">
		<comment>ST#1 TK#14</comment>
		<createView viewName="external_liabilities_view" replaceIfExists="true">
		<![CDATA[
	SELECT el.id,
    el.linkid,
    el.seqno,
    el.fintype,
    el.findate,
    el.loanbank,
    el.rateofinterest,
    el.tenure,
    el.originalamount,
    el.instalmentamount,
    el.outstandingbalance,
    el.balancetenure,
    el.bounceinstalments,
    el.principaloutstanding,
    el.overdueamount,
    el.finstatus,
    el.foir,
    el.source,
    el.checkedby,
    el.securitydetails,
    el.loanpurpose,
    el.repaybank,
    el.version,
    el.lastmntby,
    el.lastmnton,
    el.recordstatus,
    el.rolecode,
    el.nextrolecode,
    el.taskid,
    el.nexttaskid,
    el.recordtype,
    el.workflowid,
    lb.bankname AS loanbankname,
    ft.fintypedesc,
    cs.custstsdescription,
    rb.bankname AS repayfrombankname,
    lp.loanpurposedesc,
    el.otherfininstitute,
    el.baltransfer,
	el.repayFromAccNo,
	el.remarks,
	el.noOfBouncesInSixMonths,
	el.noOfBouncesInTwelveMonths,
	el.consideredBasedOnRTR,
	el.mob
   FROM external_liabilities_temp el
     JOIN bmtbankdetail lb ON lb.bankcode =  el.loanbank 
     JOIN otherbankfinancetype ft ON ft.fintype =  el.fintype 
     LEFT JOIN loanpurposes lp ON lp.loanpurposecode =  el.loanpurpose 
     LEFT JOIN bmtbankdetail rb ON rb.bankcode =  el.repaybank 
     LEFT JOIN bmtcuststatuscodes cs ON cs.custstscode =  el.finstatus 
	UNION ALL
	SELECT el.id,
    el.linkid,
    el.seqno,
    el.fintype,
    el.findate,
    el.loanbank,
    el.rateofinterest,
    el.tenure,
    el.originalamount,
    el.instalmentamount,
    el.outstandingbalance,
    el.balancetenure,
    el.bounceinstalments,
    el.principaloutstanding,
    el.overdueamount,
    el.finstatus,
    el.foir,
    el.source,
    el.checkedby,
    el.securitydetails,
    el.loanpurpose,
    el.repaybank,
    el.version,
    el.lastmntby,
    el.lastmnton,
    el.recordstatus,
    el.rolecode,
    el.nextrolecode,
    el.taskid,
    el.nexttaskid,
    el.recordtype,
    el.workflowid,
    lb.bankname AS loanbankname,
    ft.fintypedesc,
    cs.custstsdescription,
    rb.bankname AS repayfrombankname,
    lp.loanpurposedesc,
    el.otherfininstitute,
    el.baltransfer,
	el.repayFromAccNo,
	el.remarks,
	el.noOfBouncesInSixMonths,
	el.noOfBouncesInTwelveMonths,
	el.consideredBasedOnRTR,
	el.mob
   FROM external_liabilities el
     JOIN bmtbankdetail lb ON lb.bankcode =  el.loanbank 
     JOIN otherbankfinancetype ft ON ft.fintype =  el.fintype 
     LEFT JOIN loanpurposes lp ON lp.loanpurposecode =  el.loanpurpose 
     LEFT JOIN bmtbankdetail rb ON rb.bankcode =  el.repaybank 
     LEFT JOIN bmtcuststatuscodes cs ON cs.custstscode =  el.finstatus 
  WHERE NOT (EXISTS ( SELECT 1
           FROM external_liabilities_temp
          WHERE external_liabilities_temp.id = el.id))

	]]>

		</createView>
	</changeSet>



	<changeSet id="325" author="rohit.s">
		<comment>ST#1 TK#14</comment>
		<createView viewName="external_liabilities_aview" replaceIfExists="true">
		<![CDATA[
		SELECT el.id,
    el.linkid,
    el.seqno,
    el.fintype,
    el.findate,
    el.loanbank,
    el.rateofinterest,
    el.tenure,
    el.originalamount,
    el.instalmentamount,
    el.outstandingbalance,
    el.balancetenure,
    el.bounceinstalments,
    el.principaloutstanding,
    el.overdueamount,
    el.finstatus,
    el.foir,
    el.source,
    el.checkedby,
    el.securitydetails,
    el.loanpurpose,
    el.repaybank,
    el.version,
    el.lastmntby,
    el.lastmnton,
    el.recordstatus,
    el.rolecode,
    el.nextrolecode,
    el.taskid,
    el.nexttaskid,
    el.recordtype,
    el.workflowid,
    lb.bankname AS loanbankname,
    ft.fintypedesc,
    cs.custstsdescription,
    rb.bankname AS repayfrombankname,
    lp.loanpurposedesc,
    el.otherfininstitute,
    el.baltransfer,
	el.repayFromAccNo,
	el.remarks,
	el.noOfBouncesInSixMonths,
	el.noOfBouncesInTwelveMonths,
	el.consideredBasedOnRTR,
	el.mob
   FROM external_liabilities el
     JOIN bmtbankdetail lb ON lb.bankcode= el.loanbank
     JOIN otherbankfinancetype ft ON ft.fintype= el.fintype
     LEFT JOIN loanpurposes lp ON lp.loanpurposecode= el.loanpurpose
     LEFT JOIN bmtbankdetail rb ON rb.bankcode= el.repaybank
     LEFT JOIN bmtcuststatuscodes cs ON cs.custstscode= el.finstatus
	]]>

		</createView>
	</changeSet>




	<changeSet id="326" author="rohit.s">
		<comment>ST#1 TK#14</comment>
		<createView viewName="customer_ext_liabilities_view" replaceIfExists="true">
		<![CDATA[
	
	 SELECT el.id,
    el.linkid,
    el.seqno,
    el.fintype,
    el.findate,
    el.loanbank,
    el.rateofinterest,
    el.tenure,
    el.originalamount,
    el.instalmentamount,
    el.outstandingbalance,
    el.balancetenure,
    el.bounceinstalments,
    el.principaloutstanding,
    el.overdueamount,
    el.finstatus,
    el.foir,
    el.source,
    el.checkedby,
    el.securitydetails,
    el.loanpurpose,
    el.repaybank,
    el.version,
    el.lastmntby,
    el.lastmnton,
    el.recordstatus,
    el.rolecode,
    el.nextrolecode,
    el.taskid,
    el.nexttaskid,
    el.recordtype,
    el.workflowid,
    lb.bankname AS loanbankname,
    ft.fintypedesc,
    cs.custstsdescription,
    rb.bankname AS repayfrombankname,
    lp.loanpurposedesc,
    el.otherfininstitute,
    el.baltransfer,
    cu.custid,
    cu.custcif,
    cu.custshrtname,
    el.imputedemi,
    el.ownership,
    el.lasttwentyfourmonths,
    el.lastsixmonths,
    el.lastthreemonths,
    el.currentoverdue,
	el.repayFromAccNo,
	el.remarks,
	el.noOfBouncesInSixMonths,
	el.noOfBouncesInTwelveMonths,
	el.consideredBasedOnRTR,
	el.mob
   FROM external_liabilities_temp el
     JOIN link_cust_liabilities cl ON cl.linkid = el.linkid
     JOIN bmtbankdetail lb ON lb.bankcode  = el.loanbank 
     JOIN otherbankfinancetype ft ON ft.fintype  = el.fintype 
     LEFT JOIN loanpurposes lp ON lp.loanpurposecode  = el.loanpurpose 
     LEFT JOIN bmtbankdetail rb ON rb.bankcode  = el.repaybank 
     LEFT JOIN bmtcuststatuscodes cs ON cs.custstscode  = el.finstatus 
     JOIN ( SELECT customers.custid,
            customers.custcif,
            customers.custshrtname
           FROM customers
        UNION
         SELECT customers_temp.custid,
            customers_temp.custcif,
            customers_temp.custshrtname
           FROM customers_temp) cu ON cu.custid = cl.custid
UNION ALL
 SELECT el.id,
    el.linkid,
    el.seqno,
    el.fintype,
    el.findate,
    el.loanbank,
    el.rateofinterest,
    el.tenure,
    el.originalamount,
    el.instalmentamount,
    el.outstandingbalance,
    el.balancetenure,
    el.bounceinstalments,
    el.principaloutstanding,
    el.overdueamount,
    el.finstatus,
    el.foir,
    el.source,
    el.checkedby,
    el.securitydetails,
    el.loanpurpose,
    el.repaybank,
    el.version,
    el.lastmntby,
    el.lastmnton,
    el.recordstatus,
    el.rolecode,
    el.nextrolecode,
    el.taskid,
    el.nexttaskid,
    el.recordtype,
    el.workflowid,
    lb.bankname AS loanbankname,
    ft.fintypedesc,
    cs.custstsdescription,
    rb.bankname AS repayfrombankname,
    lp.loanpurposedesc,
    el.otherfininstitute,
    el.baltransfer,
    cu.custid,
    cu.custcif,
    cu.custshrtname,
    el.imputedemi,
    el.ownership,
    el.lasttwentyfourmonths,
    el.lastsixmonths,
    el.lastthreemonths,
    el.currentoverdue,
	el.repayFromAccNo,
	el.remarks,
	el.noOfBouncesInSixMonths,
	el.noOfBouncesInTwelveMonths,
	el.consideredBasedOnRTR,
	el.mob
   FROM external_liabilities el
     JOIN link_cust_liabilities cl ON cl.linkid = el.linkid
     JOIN bmtbankdetail lb ON lb.bankcode  = el.loanbank 
     JOIN otherbankfinancetype ft ON ft.fintype  = el.fintype 
     LEFT JOIN loanpurposes lp ON lp.loanpurposecode  = el.loanpurpose 
     LEFT JOIN bmtbankdetail rb ON rb.bankcode  = el.repaybank 
     LEFT JOIN bmtcuststatuscodes cs ON cs.custstscode  = el.finstatus 
     JOIN ( SELECT customers.custid,
            customers.custcif,
            customers.custshrtname
           FROM customers
        UNION
         SELECT customers_temp.custid,
            customers_temp.custcif,
            customers_temp.custshrtname
           FROM customers_temp) cu ON cu.custid = cl.custid
  WHERE NOT (EXISTS ( SELECT 1
           FROM external_liabilities_temp
          WHERE external_liabilities_temp.id = el.id))
		  ]]>

		</createView>
	</changeSet>


	<changeSet id="327" author="rohit.s">
		<comment>ST#1 TK#14</comment>
		<createView viewName="customer_ext_liabilities_aview" replaceIfExists="true">
		<![CDATA[
	 SELECT el.id,
    el.linkid,
    el.seqno,
    el.fintype,
    el.findate,
    el.loanbank,
    el.rateofinterest,
    el.tenure,
    el.originalamount,
    el.instalmentamount,
    el.outstandingbalance,
    el.balancetenure,
    el.bounceinstalments,
    el.principaloutstanding,
    el.overdueamount,
    el.finstatus,
    el.foir,
    el.source,
    el.checkedby,
    el.securitydetails,
    el.loanpurpose,
    el.repaybank,
    el.version,
    el.lastmntby,
    el.lastmnton,
    el.recordstatus,
    el.rolecode,
    el.nextrolecode,
    el.taskid,
    el.nexttaskid,
    el.recordtype,
    el.workflowid,
    lb.bankname AS loanbankname,
    ft.fintypedesc,
    cs.custstsdescription,
    lb.bankname AS repayfrombankname,
    lp.loanpurposedesc,
    el.otherfininstitute,
    el.baltransfer,
    cl.custid,
    cu.custcif,
    cu.custshrtname,
    el.imputedemi,
    el.ownership,
    el.lasttwentyfourmonths,
    el.lastsixmonths,
    el.lastthreemonths,
    el.currentoverdue,
	el.repayFromAccNo,
	el.remarks,
	el.noOfBouncesInSixMonths,
	el.noOfBouncesInTwelveMonths,
	el.consideredBasedOnRTR,
	el.mob
   FROM external_liabilities el
     JOIN link_cust_liabilities cl ON cl.linkid = el.linkid
     JOIN bmtbankdetail lb ON lb.bankcode  = el.loanbank 
     JOIN otherbankfinancetype ft ON ft.fintype  = el.fintype 
     LEFT JOIN loanpurposes lp ON lp.loanpurposecode  = el.loanpurpose 
     LEFT JOIN bmtbankdetail rb ON rb.bankcode  = el.repaybank 
     LEFT JOIN bmtcuststatuscodes cs ON cs.custstscode  = el.finstatus 
     JOIN ( SELECT customers.custid,
            customers.custcif,
            customers.custshrtname
           FROM customers
        UNION
         SELECT customers_temp.custid,
            customers_temp.custcif,
            customers_temp.custshrtname
           FROM customers_temp) cu ON cu.custid = cl.custid

	  ]]>

		</createView>
	</changeSet>


	<changeSet id="328.1_pre" author="Venkatesh.Ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="328" author="Venkatesh.ch">
		<comment>ST#10 TK#63</comment>
		<createView viewName="financemain_view" replaceIfExists="true">
		<![CDATA[
			SELECT t1.finreference,
				t1.investmentref,
				t1.numberofterms,
				t1.grcperiodenddate,
				t1.allowgrcperiod,
				t1.gracebaserate,
				t1.gracespecialrate,
				t1.grcpftrate,
				t1.grcpftfrq,
				t1.nextgrcpftdate,
				t1.allowgrcpftrvw,
				t1.grcpftrvwfrq,
				t1.nextgrcpftrvwdate,
				t1.allowgrccpz,
				t1.grccpzfrq,
				t1.nextgrccpzdate,
				t1.repaybaserate,
				t1.repayspecialrate,
				t1.repayprofitrate,
				t1.repayfrq,
				t1.nextrepaydate,
				t1.repaypftfrq,
				t1.nextrepaypftdate,
				t1.allowrepayrvw,
				t1.repayrvwfrq,
				t1.nextrepayrvwdate,
				t1.allowrepaycpz,
				t1.repaycpzfrq,
				t1.nextrepaycpzdate,
				t1.maturitydate,
				t1.cpzatgraceend,
				t1.downpayment,
				t1.graceflatamount,
				t1.reqrepayamount,
				t1.totalprofit,
				t1.totalcpz,
				t1.totalgrosspft,
				t1.totalgrossgrcpft,
				t1.totalgracepft,
				t1.totalgracecpz,
				t1.grcratebasis,
				t1.repayratebasis,
				t1.fintype,
				t1.finremarks,
				t1.finccy,
				t1.schedulemethod,
				t1.profitdaysbasis,
				t1.reqmaturity,
				t1.calterms,
				t1.calmaturity,
				t1.firstrepay,
				t1.lastrepay,
				t1.finstartdate,
				t1.finamount,
				t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
				t1.finrepaymentamount,
				t1.custid,
				t1.defferments,
				t1.plandefercount,
				t1.finbranch,
				t1.finsourceid,
				t1.alloweddefrpychange,
				t1.availeddefrpychange,
				t1.alloweddeffrqchange,
				t1.availeddeffrqchange,
				t1.recaltype,
				t1.finassetvalue,
				t1.disbaccountid,
				t1.repayaccountid,
				t1.finisactive,
				t1.limitvalid,
				t1.overridelimit,
				t1.securitydeposit,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t7.fintypedesc AS lovdescfintypename,
				t7.finmaxamount AS lovdescfinmaxamt,
				t7.finminamount AS lovdescfinminamount,
				t1.mindownpayperc,
				t7.finisalwdifferment AS lovdescfinalwdeferment,
				t7.finisdwpayrequired AS lovdescdwnpayreq,
				t7.finmaxdifferment AS lovdescfinmaxdifferment,
				t12.branchdesc AS lovdescfinbranchname,
				t12.branchprovince AS finbranchprovincecode,
				t1.lastrepaydate,
				t1.lastrepaypftdate,
				t1.lastrepayrvwdate,
				t1.lastrepaycpzdate,
				t1.allowgrcrepay,
				t1.grcschdmthd,
				t1.grcmargin,
				t1.repaymargin,
				t1.fincurrassetvalue,
				t1.fincommitmentref,
				t1.finlimitref,
				t1.depreciationfrq,
				t1.fincontractdate,
				t1.nextdepdate,
				t1.lastdepdate,
				t1.finaccount,
				t1.fincustpftaccount,
				t17.acrtilllbd AS lovdescaccruedtilllbd,
				t7.finrvwrateapplfor,
				t1.totalrepayamt,
				t1.closingstatus,
				t1.finapproveddate,
				t1.feechargeamt,
				t1.blacklisted,
				t1.finrepaypftonfrq,
				t1.anualizedpercrate,
				t1.effectiverateofreturn,
				t1.migratedfinance,
				t1.schedulemaintained,
				t1.scheduleregenerated,
				t1.finpurpose,
				t39.loanpurposedesc AS lovdescfinpurposename,
				t1.finstatus,
				t1.finstsreason,
				t1.initiateuser,
				t1.bankname,
				t1.iban,
				t1.accounttype,
				t1.ddareferenceno,
				t7.finscheduleon AS lovdescfinscheduleon,
				t1.custdsr,
				t1.jointaccount,
				t1.jointcustid,
				t1.downpaybank,
				t1.downpaysupl,
				t1.downpayaccount,
				t1.securitycollateral,
				t1.approved,
				t1.discrepancy,
				t1.limitapproved,
				t1.graceterms,
				t7.findivision AS lovdescfindivision,
				t1.rcdmaintainsts,
				t1.finrepaymethod,
				t1.grcprofitdaysbasis,
				t1.stepfinance,
				t1.steptype,
				t1.steppolicy,
				t1.alwmanualsteps,
				t1.noofsteps,
				t1.linkedfinref,
				t1.nextuserid,
				t1.priority,
				t24.policydesc AS lovdescsteppolicyname,
				t1.grcminrate,
				t1.grcmaxrate,
				t1.rpyminrate,
				t1.rpymaxrate,
				t1.deviationapproval,
				t1.manualschedule,
				t1.takeoverfinance,
				t1.grcadvbaserate,
				t1.grcadvmargin,
				t1.grcadvpftrate,
				t1.rpyadvbaserate,
				t1.rpyadvmargin,
				t1.rpyadvpftrate,
				t1.supplementrent,
				t1.increasedcost,
				t1.creditinsamt,
				t1.rolloverfrq,
				t1.nextrolloverdate,
				t27.custstsdescription,
				t1.shariastatus,
				t1.initiatedate,
				t1.finpreapprovedref,
				t1.mmaid,
				t1.accountsofficer,
				t1.feeaccountid,
				t1.fincancelac,
				t28.dealername AS lovdescaccountsofficer,
				t28.dealercity AS lovdescsourcecity,
				t1.dsacode,
				t30.rofficerdesc AS dsacodedesc,
				t1.tdsapplicable,
				t1.mandateid,
				t1.droplinefrq,
				t1.firstdroplinedate,
				t1.pftservicingodlimit,
				t1.insuranceamt,
				t1.deductinsdisb,
				t1.alwbpi,
				t1.bpitreatment,
				t1.planemihalw,
				t1.planemihmethod,
				t1.planemihmaxperyear,
				t1.planemihmax,
				t1.planemihlockperiod,
				t1.planemicpz,
				t1.calroundingmode,
				t1.alwmultidisb,
				t1.applicationno,
				t1.referralid,
				t33.rofficerdesc AS referraliddesc,
				t1.dmacode,
				t34.rofficerdesc AS dmacodedesc,
				t1.salesdepartment,
				t35.deptdesc AS salesdepartmentdesc,
				t1.quickdisb,
				t1.wifreference,
				t1.unplanemihlockperiod,
				t1.unplanemicpz,
				t1.reagecpz,
				t1.maxunplannedemi,
				t1.maxreageholidays,
				t1.availedunplanemi,
				t1.availedreageh,
				t1.bpiamount,
				t1.deductfeedisb,
				t1.rvwrateapplfor,
				t1.schcalonrvw,
				t1.pastduepftcalmthd,
				t1.pastduepftmargin,
				t1.droppingmethod,
				t1.ratechganyday,
				t1.promotioncode,
				t1.restructureloan,
				t1.oldfinreference,
				t1.reagebucket,
				t1.fincategory,
				t1.productcategory,
				t1.roundingtarget,
				t36.entitycode AS lovdescentitycode,
				t1.eligibilitymethod,
				t38.fieldcodevalue AS loveligibilitymethod,
				t38.valuedesc AS lovdesceligibilitymethod,
				t1.employeename,
				t37.rofficerdesc AS employeenamedesc,
				t1.samplingrequired,
				t1.legalrequired,
				t1.grcmaxamount,
				t1.connector,
				t40.dealername AS connectorcode,
				t40.dealercity AS connectordesc,
				t1.advanceemi,
				t1.advemiterms,
				t1.bpipftdaysbasis,
				t1.fixedratetenor,
				t1.fixedtenorrate,
				t12.branchtel AS finbranchcontact,
				t1.processattributes,
				t1.businessvertical,
				bv.code AS businessverticalcode,
				bv.description AS businessverticaldesc,
				t1.grcadvtype,
				t1.grcadvterms,
				t1.advtype,
				t1.advterms,
				t1.advstage,
				t1.tdspercentage,
				t1.tdsstartdate,
				t1.tdsenddate,
				t1.tdslimitamt,
				t1.vanreq,
				t1.vancode,
				t1.allowdrawingpower,
				t1.allowrevolving,
				t1.sanbsdschdle,
				t1.promotionseqid,
				t1.svamount,
				t1.cbamount,
				t1.appliedloanamt,
				t1.finisratervwatgrcend,
				t1.reqloanamt,
				t1.reqloantenor,
				t1.finocrrequired,
				t1.offerproduct,
				t1.offeramount,
				t1.custsegmentation,
				t1.baseproduct,
				t1.processtype,
				t1.bureautimeseries,
				t1.campaignname,
				t1.existinglanrefno,
				t1.leadsource,
				t1.posource,
				t1.rsa,
				t1.verification,
				t1.sourcingbranch,
				t1.sourchannelcategory,
				t1.asmname,
				t13.branchdesc AS lovDescSourcingBranch
			   FROM financemain_temp t1
				 JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
				 LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
				 LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
				 LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
				 LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
				 LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
				 LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
				 LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
				 LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
				 LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
				 LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
				 LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
				 LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
				 LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
				 LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
				 LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
				 LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			UNION ALL
			 SELECT t1.finreference,
				t1.investmentref,
				t1.numberofterms,
				t1.grcperiodenddate,
				t1.allowgrcperiod,
				t1.gracebaserate,
				t1.gracespecialrate,
				t1.grcpftrate,
				t1.grcpftfrq,
				t1.nextgrcpftdate,
				t1.allowgrcpftrvw,
				t1.grcpftrvwfrq,
				t1.nextgrcpftrvwdate,
				t1.allowgrccpz,
				t1.grccpzfrq,
				t1.nextgrccpzdate,
				t1.repaybaserate,
				t1.repayspecialrate,
				t1.repayprofitrate,
				t1.repayfrq,
				t1.nextrepaydate,
				t1.repaypftfrq,
				t1.nextrepaypftdate,
				t1.allowrepayrvw,
				t1.repayrvwfrq,
				t1.nextrepayrvwdate,
				t1.allowrepaycpz,
				t1.repaycpzfrq,
				t1.nextrepaycpzdate,
				t1.maturitydate,
				t1.cpzatgraceend,
				t1.downpayment,
				t1.graceflatamount,
				t1.reqrepayamount,
				t1.totalprofit,
				t1.totalcpz,
				t1.totalgrosspft,
				t1.totalgrossgrcpft,
				t1.totalgracepft,
				t1.totalgracecpz,
				t1.grcratebasis,
				t1.repayratebasis,
				t1.fintype,
				t1.finremarks,
				t1.finccy,
				t1.schedulemethod,
				t1.profitdaysbasis,
				t1.reqmaturity,
				t1.calterms,
				t1.calmaturity,
				t1.firstrepay,
				t1.lastrepay,
				t1.finstartdate,
				t1.finamount,
				t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
				t1.finrepaymentamount,
				t1.custid,
				t1.defferments,
				t1.plandefercount,
				t1.finbranch,
				t1.finsourceid,
				t1.alloweddefrpychange,
				t1.availeddefrpychange,
				t1.alloweddeffrqchange,
				t1.availeddeffrqchange,
				t1.recaltype,
				t1.finassetvalue,
				t1.disbaccountid,
				t1.repayaccountid,
				t1.finisactive,
				t1.limitvalid,
				t1.overridelimit,
				t1.securitydeposit,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t7.fintypedesc AS lovdescfintypename,
				t7.finmaxamount AS lovdescfinmaxamt,
				t7.finminamount AS lovdescfinminamount,
				t1.mindownpayperc,
				t7.finisalwdifferment AS lovdescfinalwdeferment,
				t7.finisdwpayrequired AS lovdescdwnpayreq,
				t7.finmaxdifferment AS lovdescfinmaxdifferment,
				t12.branchdesc AS lovdescfinbranchname,
				t12.branchprovince AS finbranchprovincecode,
				t1.lastrepaydate,
				t1.lastrepaypftdate,
				t1.lastrepayrvwdate,
				t1.lastrepaycpzdate,
				t1.allowgrcrepay,
				t1.grcschdmthd,
				t1.grcmargin,
				t1.repaymargin,
				t1.fincurrassetvalue,
				t1.fincommitmentref,
				t1.finlimitref,
				t1.depreciationfrq,
				t1.fincontractdate,
				t1.nextdepdate,
				t1.lastdepdate,
				t1.finaccount,
				t1.fincustpftaccount,
				t17.acrtilllbd AS lovdescaccruedtilllbd,
				t7.finrvwrateapplfor,
				t1.totalrepayamt,
				t1.closingstatus,
				t1.finapproveddate,
				t1.feechargeamt,
				t1.blacklisted,
				t1.finrepaypftonfrq,
				t1.anualizedpercrate,
				t1.effectiverateofreturn,
				t1.migratedfinance,
				t1.schedulemaintained,
				t1.scheduleregenerated,
				t1.finpurpose,
				t39.loanpurposedesc AS lovdescfinpurposename,
				t1.finstatus,
				t1.finstsreason,
				t1.initiateuser,
				t1.bankname,
				t1.iban,
				t1.accounttype,
				t1.ddareferenceno,
				t7.finscheduleon AS lovdescfinscheduleon,
				t1.custdsr,
				t1.jointaccount,
				t1.jointcustid,
				t1.downpaybank,
				t1.downpaysupl,
				t1.downpayaccount,
				t1.securitycollateral,
				t1.approved,
				t1.discrepancy,
				t1.limitapproved,
				t1.graceterms,
				t7.findivision AS lovdescfindivision,
				t1.rcdmaintainsts,
				t1.finrepaymethod,
				t1.grcprofitdaysbasis,
				t1.stepfinance,
				t1.steptype,
				t1.steppolicy,
				t1.alwmanualsteps,
				t1.noofsteps,
				t1.linkedfinref,
				t1.nextuserid,
				t1.priority,
				t24.policydesc AS lovdescsteppolicyname,
				t1.grcminrate,
				t1.grcmaxrate,
				t1.rpyminrate,
				t1.rpymaxrate,
				t1.deviationapproval,
				t1.manualschedule,
				t1.takeoverfinance,
				t1.grcadvbaserate,
				t1.grcadvmargin,
				t1.grcadvpftrate,
				t1.rpyadvbaserate,
				t1.rpyadvmargin,
				t1.rpyadvpftrate,
				t1.supplementrent,
				t1.increasedcost,
				t1.creditinsamt,
				t1.rolloverfrq,
				t1.nextrolloverdate,
				t27.custstsdescription,
				t1.shariastatus,
				t1.initiatedate,
				t1.finpreapprovedref,
				t1.mmaid,
				t1.accountsofficer,
				t1.feeaccountid,
				t1.fincancelac,
				t28.dealername AS lovdescaccountsofficer,
				t28.dealercity AS lovdescsourcecity,
				t1.dsacode,
				t30.rofficerdesc AS dsacodedesc,
				t1.tdsapplicable,
				t1.mandateid,
				t1.droplinefrq,
				t1.firstdroplinedate,
				t1.pftservicingodlimit,
				t1.insuranceamt,
				t1.deductinsdisb,
				t1.alwbpi,
				t1.bpitreatment,
				t1.planemihalw,
				t1.planemihmethod,
				t1.planemihmaxperyear,
				t1.planemihmax,
				t1.planemihlockperiod,
				t1.planemicpz,
				t1.calroundingmode,
				t1.alwmultidisb,
				t1.applicationno,
				t1.referralid,
				t33.rofficerdesc AS referraliddesc,
				t1.dmacode,
				t34.rofficerdesc AS dmacodedesc,
				t1.salesdepartment,
				t35.deptdesc AS salesdepartmentdesc,
				t1.quickdisb,
				t1.wifreference,
				t1.unplanemihlockperiod,
				t1.unplanemicpz,
				t1.reagecpz,
				t1.maxunplannedemi,
				t1.maxreageholidays,
				t1.availedunplanemi,
				t1.availedreageh,
				t1.bpiamount,
				t1.deductfeedisb,
				t1.rvwrateapplfor,
				t1.schcalonrvw,
				t1.pastduepftcalmthd,
				t1.pastduepftmargin,
				t1.droppingmethod,
				t1.ratechganyday,
				t1.promotioncode,
				t1.restructureloan,
				t1.oldfinreference,
				t1.reagebucket,
				t1.fincategory,
				t1.productcategory,
				t1.roundingtarget,
				t36.entitycode AS lovdescentitycode,
				t1.eligibilitymethod,
				t38.fieldcodevalue AS loveligibilitymethod,
				t38.valuedesc AS lovdesceligibilitymethod,
				t1.employeename,
				t37.rofficerdesc AS employeenamedesc,
				t1.samplingrequired,
				t1.legalrequired,
				t1.grcmaxamount,
				t1.connector,
				t40.dealername AS connectorcode,
				t40.dealercity AS connectordesc,
				t1.advanceemi,
				t1.advemiterms,
				t1.bpipftdaysbasis,
				t1.fixedratetenor,
				t1.fixedtenorrate,
				t12.branchtel AS finbranchcontact,
				t1.processattributes,
				t1.businessvertical,
				bv.code AS businessverticalcode,
				bv.description AS businessverticaldesc,
				t1.grcadvtype,
				t1.grcadvterms,
				t1.advtype,
				t1.advterms,
				t1.advstage,
				t1.tdspercentage,
				t1.tdsstartdate,
				t1.tdsenddate,
				t1.tdslimitamt,
				t1.vanreq,
				t1.vancode,
				t1.allowdrawingpower,
				t1.allowrevolving,
				t1.sanbsdschdle,
				t1.promotionseqid,
				t1.svamount,
				t1.cbamount,
				t1.appliedloanamt,
				t1.finisratervwatgrcend,
				t1.reqloanamt,
				t1.reqloantenor,
				t1.finocrrequired,
				t1.offerproduct,
				t1.offeramount,
				t1.custsegmentation,
				t1.baseproduct,
				t1.processtype,
				t1.bureautimeseries,
				t1.campaignname,
				t1.existinglanrefno,
				t1.leadsource,
				t1.posource,
				t1.rsa,
				t1.verification,
				t1.sourcingbranch,
				t1.sourchannelcategory,
				t1.asmname,
				t13.branchdesc AS lovDescSourcingBranch
			   FROM financemain t1
				 JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
				 LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
				 LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
				 LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
				 LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
				 LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
				 LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
				 LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
				 LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
				 LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
				 LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
				 LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
				 LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
				 LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
				 LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
				 LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
				 LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			  WHERE NOT (EXISTS ( SELECT 1
					   FROM financemain_temp
					  WHERE financemain_temp.finreference = t1.finreference))
		  ]]>
		</createView>
	</changeSet>

	<changeSet id="328.1_post" author="Venkatesh.Ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="329_pre" author="Venkatesh.Ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="329" author="Venkatesh.Ch">
		<comment>ST#10 TK#63</comment>
		<createView viewName="financemain_tview" replaceIfExists="true">
		<![CDATA[
		SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
    t1.offerproduct,
    t1.offeramount,
    t1.custsegmentation,
    t1.baseproduct,
    t1.processtype,
    t1.bureautimeseries,
    t1.campaignname,
    t1.existinglanrefno,
    t1.leadsource,
    t1.posource,
    t1.rsa,
    t1.verification,
    t1.sourcingbranch,
    t1.sourchannelcategory,
    t1.asmname,
	t13.branchdesc AS lovDescSourcingBranch
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
	 LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
	  ]]>
		</createView>
	</changeSet>

	<changeSet id="329_post" author="Venkatesh.Ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="330_pre" author="Venkatesh.Ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="330" author="Venkatesh.Ch">
		<comment>ST#10 TK#63</comment>
		<createView viewName="financemain_aview" replaceIfExists="true">
		<![CDATA[
		 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
    t1.offerproduct,
    t1.offeramount,
    t1.custsegmentation,
    t1.baseproduct,
    t1.processtype,
    t1.bureautimeseries,
    t1.campaignname,
    t1.existinglanrefno,
    t1.leadsource,
    t1.posource,
    t1.rsa,
    t1.verification,
    t1.sourcingbranch,
    t1.sourchannelcategory,
    t1.asmname,
	t13.branchdesc AS lovDescSourcingBranch
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
	 LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
	 ]]>
		</createView>
	</changeSet>

	<changeSet id="330_post" author="Venkatesh.Ch" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>


	<changeSet id="331_pre" author="saidurga.v" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'customers_view');
					select deps_save_and_drop_dependencies ('plf', 'customers_aview');
					select deps_save_and_drop_dependencies ('plf', 'customers_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="331" author="saidurga.v">
		<createView viewName="customers_view" replaceIfExists="true">
		<![CDATA[
			 SELECT t1.custid,
			    t1.custcif,
			    t1.custcorebank,
			    t1.custctgcode,
			    t1.custtypecode,
			    t1.custsalutationcode,
			    t1.custfname,
			    t1.custmname,
			    t1.custlname,
			    t1.custshrtname,
			    t1.custfnamelcllng,
			    t1.custmnamelcllng,
			    t1.custlnamelcllng,
			    t1.custshrtnamelcllng,
			    t1.custdftbranch,
			    t1.custgendercode,
			    t1.custdob,
			    t1.custpob,
			    t1.custcob,
			    t1.custpassportno,
			    t1.custmothermaiden,
			    t1.custisminor,
			    t1.custreferedby,
			    t1.custdsa,
			    t1.custdsadept,
			    t1.custro1,
			    t1.custro2,
			    t1.custgroupid,
			    t1.custsts,
			    t1.custstschgdate,
			    t1.custgroupsts,
			    t1.custisblocked,
			    t1.custisactive,
			    t1.custisclosed,
			    t1.custinactivereason,
			    t1.custisdecease,
			    t1.custisdormant,
			    t1.custisdelinquent,
			    t1.custistradefincust,
			    t1.custtradelicencenum,
			    t1.custtradelicenceexpiry,
			    t1.custpassportexpiry,
			    t1.custvisanum,
			    t1.custvisaexpiry,
			    t1.custisstaff,
			    t1.custstaffid,
			    t1.custindustry,
			    t1.custsector,
			    t1.custsubsector,
			    t1.custprofession,
			    t1.custtotalincome,
			    t1.custmaritalsts,
			    t1.custempsts,
			    t1.custsegment,
			    t1.custsubsegment,
			    t1.custisblacklisted,
			    t1.custblrsncode,
			    t1.custisrejected,
			    t1.custrejectedrsn,
			    t1.custbaseccy,
			    t1.custlng,
			    t1.custparentcountry,
			    t1.custresdcountry,
			    t1.custriskcountry,
			    t1.custnationality,
			    t1.custclosedon,
			    t1.custstmtfrq,
			    t1.custisstmtcombined,
			    t1.custstmtlastdate,
			    t1.custstmtnextdate,
			    t1.custstmtdispatchmode,
			    t1.custfirstbusinessdate,
			    t1.custaddlvar81,
			    t1.custaddlvar82,
			    t1.custaddlvar83,
			    t1.custaddlvar84,
			    t1.custaddlvar85,
			    t1.custaddlvar86,
			    t1.custaddlvar87,
			    t1.custaddlvar88,
			    t1.custaddlvar89,
			    t1.custaddldate1,
			    t1.custaddldate2,
			    t1.custaddldate3,
			    t1.custaddldate4,
			    t1.custaddldate5,
			    t1.custaddlvar1,
			    t1.custaddlvar2,
			    t1.custaddlvar3,
			    t1.custaddlvar4,
			    t1.custaddlvar5,
			    t1.custaddlvar6,
			    t1.custaddlvar7,
			    t1.custaddlvar8,
			    t1.custaddlvar9,
			    t1.custaddlvar10,
			    t1.custaddlvar11,
			    t1.custaddldec1,
			    t1.custaddldec2,
			    t1.custaddldec3,
			    t1.custaddldec4,
			    t1.custaddldec5,
			    t1.custaddlint1,
			    t1.custaddlint2,
			    t1.custaddlint3,
			    t1.custaddlint4,
			    t1.custaddlint5,
			    t1.custsourceid,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.custtypedesc AS lovdesccusttypecodename,
			    t3.maritalstsdesc AS lovdesccustmaritalstsname,
			    t4.empstsdesc AS lovdesccustempstsname,
			    t6.custstsdescription AS lovdesccuststsname,
			    t7.industrydesc AS lovdesccustindustryname,
			    t8.sectordesc AS lovdesccustsectorname,
			    t9.subsectordesc AS lovdesccustsubsectorname,
			    t10.professiondesc AS lovdesccustprofessionname,
			    t11.countrydesc AS lovdesccustcobname,
			    t20.segmentdesc AS lovdesccustsegmentname,
			    t12.nationalitydesc AS lovdesccustnationalityname,
			    t13.genderdesc AS lovdesccustgendercodename,
			    t14.deptdesc AS lovdesccustdsadeptname,
			    t15.dealername AS lovdesccustro1name,
			    t15.dealercity AS lovdesccustro1city,
			    t16.grpstsdescription AS lovdesccustgroupstsname,
			    t17.branchdesc AS lovdesccustdftbranchname,
			    t17.bankrefno AS branchrefno,
			    t17.branchswiftbrncde AS custswiftbrncode,
			    t18.custctgdesc AS lovdesccustctgcodename,
			    t2.custtypectg AS lovdesccustctgtype,
			    t19.saluationdesc AS lovdesccustsalutationcodename,
			    t21.countrydesc AS lovdesccustparentcountryname,
			    t22.countrydesc AS lovdesccustresdcountryname,
			    t23.countrydesc AS lovdesccustriskcountryname,
			    t24.rofficerdesc AS lovdesccustro2name,
			    t25.blrsndesc AS lovdesccustblrsncodename,
			    t26.rejectdesc AS lovdesccustrejectedrsnname,
			    t27.custgrpdesc AS lovdesccustgroupidname,
			    t28.subsegmentdesc AS lovdesccustsubsegmentname,
			    t29.lngdesc AS lovdesccustlngname,
			    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
			    t1.dedupfound,
			    t1.skipdedup,
			    t1.custtotalexpense,
			    t1.custblacklistdate,
			    t1.noofdependents,
			    t1.custcrcpr,
			    t1.jointcust,
			    t1.jointcustname,
			    t1.jointcustdob,
			    t27.custgrpcode AS lovdesccustgroupcode,
			    t1.custrelation,
			    t1.contactpersonname,
			    t1.phonenumber,
			    t1.emailid,
			    t1.salariedcustomer,
			    t31.targetdesc AS lovdesctargetname,
			    t1.custsuspsts,
			    t1.custsuspdate,
			    t1.custsusptrigger,
			    t1.subcategory,
			    t1.casteid,
			    t1.religionid,
			    t32.castecode,
			    t32.castedesc,
			    t33.religioncode,
			    t33.religiondesc,
			    COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
			    t1.margindeviation,
			    t1.applicationno,
			    t17.branchprovince,
			    t1.dnd,
			    t1.othercaste,
			    t1.otherreligion,
			    t1.natureofbusiness,
			    t1.entitytype,
			    t1.custresidentialsts,
			    t1.qualification,
			    t1.custflag,
			    t1.vip,
				t35.description AS lovDescQualification
			   FROM customers_temp t1
			     LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			     LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			     LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			     LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			     LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			     LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			     LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			     LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			     LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			     LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			     LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			     LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			     LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			     LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			     LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			     LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			     LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			     LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			     LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			     LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			     LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			     LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			     LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			     LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			     LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			     LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			     LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			     LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			     LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			     LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			     LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			     LEFT JOIN religion t33 ON t1.religionid = t33.religionid
				 LEFT JOIN qualification t35 ON t1.qualification = t35.code
			UNION ALL
			 SELECT t1.custid,
			    t1.custcif,
			    t1.custcorebank,
			    t1.custctgcode,
			    t1.custtypecode,
			    t1.custsalutationcode,
			    t1.custfname,
			    t1.custmname,
			    t1.custlname,
			    t1.custshrtname,
			    t1.custfnamelcllng,
			    t1.custmnamelcllng,
			    t1.custlnamelcllng,
			    t1.custshrtnamelcllng,
			    t1.custdftbranch,
			    t1.custgendercode,
			    t1.custdob,
			    t1.custpob,
			    t1.custcob,
			    t1.custpassportno,
			    t1.custmothermaiden,
			    t1.custisminor,
			    t1.custreferedby,
			    t1.custdsa,
			    t1.custdsadept,
			    t1.custro1,
			    t1.custro2,
			    t1.custgroupid,
			    t1.custsts,
			    t1.custstschgdate,
			    t1.custgroupsts,
			    t1.custisblocked,
			    t1.custisactive,
			    t1.custisclosed,
			    t1.custinactivereason,
			    t1.custisdecease,
			    t1.custisdormant,
			    t1.custisdelinquent,
			    t1.custistradefincust,
			    t1.custtradelicencenum,
			    t1.custtradelicenceexpiry,
			    t1.custpassportexpiry,
			    t1.custvisanum,
			    t1.custvisaexpiry,
			    t1.custisstaff,
			    t1.custstaffid,
			    t1.custindustry,
			    t1.custsector,
			    t1.custsubsector,
			    t1.custprofession,
			    t1.custtotalincome,
			    t1.custmaritalsts,
			    t1.custempsts,
			    t1.custsegment,
			    t1.custsubsegment,
			    t1.custisblacklisted,
			    t1.custblrsncode,
			    t1.custisrejected,
			    t1.custrejectedrsn,
			    t1.custbaseccy,
			    t1.custlng,
			    t1.custparentcountry,
			    t1.custresdcountry,
			    t1.custriskcountry,
			    t1.custnationality,
			    t1.custclosedon,
			    t1.custstmtfrq,
			    t1.custisstmtcombined,
			    t1.custstmtlastdate,
			    t1.custstmtnextdate,
			    t1.custstmtdispatchmode,
			    t1.custfirstbusinessdate,
			    t1.custaddlvar81,
			    t1.custaddlvar82,
			    t1.custaddlvar83,
			    t1.custaddlvar84,
			    t1.custaddlvar85,
			    t1.custaddlvar86,
			    t1.custaddlvar87,
			    t1.custaddlvar88,
			    t1.custaddlvar89,
			    t1.custaddldate1,
			    t1.custaddldate2,
			    t1.custaddldate3,
			    t1.custaddldate4,
			    t1.custaddldate5,
			    t1.custaddlvar1,
			    t1.custaddlvar2,
			    t1.custaddlvar3,
			    t1.custaddlvar4,
			    t1.custaddlvar5,
			    t1.custaddlvar6,
			    t1.custaddlvar7,
			    t1.custaddlvar8,
			    t1.custaddlvar9,
			    t1.custaddlvar10,
			    t1.custaddlvar11,
			    t1.custaddldec1,
			    t1.custaddldec2,
			    t1.custaddldec3,
			    t1.custaddldec4,
			    t1.custaddldec5,
			    t1.custaddlint1,
			    t1.custaddlint2,
			    t1.custaddlint3,
			    t1.custaddlint4,
			    t1.custaddlint5,
			    t1.custsourceid,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.custtypedesc AS lovdesccusttypecodename,
			    t3.maritalstsdesc AS lovdesccustmaritalstsname,
			    t4.empstsdesc AS lovdesccustempstsname,
			    t6.custstsdescription AS lovdesccuststsname,
			    t7.industrydesc AS lovdesccustindustryname,
			    t8.sectordesc AS lovdesccustsectorname,
			    t9.subsectordesc AS lovdesccustsubsectorname,
			    t10.professiondesc AS lovdesccustprofessionname,
			    t11.countrydesc AS lovdesccustcobname,
			    t20.segmentdesc AS lovdesccustsegmentname,
			    t12.nationalitydesc AS lovdesccustnationalityname,
			    t13.genderdesc AS lovdesccustgendercodename,
			    t14.deptdesc AS lovdesccustdsadeptname,
			    t15.dealername AS lovdesccustro1name,
			    t15.dealercity AS lovdesccustro1city,
			    t16.grpstsdescription AS lovdesccustgroupstsname,
			    t17.branchdesc AS lovdesccustdftbranchname,
			    t17.bankrefno AS branchrefno,
			    t17.branchswiftbrncde AS custswiftbrncode,
			    t18.custctgdesc AS lovdesccustctgcodename,
			    t2.custtypectg AS lovdesccustctgtype,
			    t19.saluationdesc AS lovdesccustsalutationcodename,
			    t21.countrydesc AS lovdesccustparentcountryname,
			    t22.countrydesc AS lovdesccustresdcountryname,
			    t23.countrydesc AS lovdesccustriskcountryname,
			    t24.rofficerdesc AS lovdesccustro2name,
			    t25.blrsndesc AS lovdesccustblrsncodename,
			    t26.rejectdesc AS lovdesccustrejectedrsnname,
			    t27.custgrpdesc AS lovdesccustgroupidname,
			    t28.subsegmentdesc AS lovdesccustsubsegmentname,
			    t29.lngdesc AS lovdesccustlngname,
			    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
			    t1.dedupfound,
			    t1.skipdedup,
			    t1.custtotalexpense,
			    t1.custblacklistdate,
			    t1.noofdependents,
			    t1.custcrcpr,
			    t1.jointcust,
			    t1.jointcustname,
			    t1.jointcustdob,
			    t27.custgrpcode AS lovdesccustgroupcode,
			    t1.custrelation,
			    t1.contactpersonname,
			    t1.phonenumber,
			    t1.emailid,
			    t1.salariedcustomer,
			    t31.targetdesc AS lovdesctargetname,
			    t1.custsuspsts,
			    t1.custsuspdate,
			    t1.custsusptrigger,
			    t1.subcategory,
			    t1.casteid,
			    t1.religionid,
			    t32.castecode,
			    t32.castedesc,
			    t33.religioncode,
			    t33.religiondesc,
			    COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
			    t1.margindeviation,
			    t1.applicationno,
			    t17.branchprovince,
			    t1.dnd,
			    t1.othercaste,
			    t1.otherreligion,
			    t1.natureofbusiness,
			    t1.entitytype,
			    t1.custresidentialsts,
			    t1.qualification,
			    t1.custflag,
			    t1.vip,
				t35.description AS lovDescQualification
			   FROM customers t1
			     LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			     LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			     LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			     LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			     LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			     LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			     LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			     LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			     LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			     LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			     LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			     LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			     LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			     LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			     LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			     LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			     LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			     LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			     LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			     LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			     LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			     LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			     LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			     LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			     LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			     LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			     LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			     LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			     LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			     LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			     LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			     LEFT JOIN religion t33 ON t1.religionid = t33.religionid
				 LEFT JOIN qualification t35 ON t1.qualification = t35.code
				  WHERE NOT (EXISTS ( SELECT 1 AS expr1
			           FROM customers_temp
			          WHERE customers_temp.custid = t1.custid))
					 ]]>
		</createView>
	</changeSet>

	<changeSet id="332" author="saidurga.v">
		<createView viewName="customers_aview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.custid,
			    t1.custcif,
			    t1.custcorebank,
			    t1.custctgcode,
			    t1.custtypecode,
			    t1.custsalutationcode,
			    t1.custfname,
			    t1.custmname,
			    t1.custlname,
			    t1.custshrtname,
			    t1.custfnamelcllng,
			    t1.custmnamelcllng,
			    t1.custlnamelcllng,
			    t1.custshrtnamelcllng,
			    t1.custdftbranch,
			    t1.custgendercode,
			    t1.custdob,
			    t1.custnationality,
			    t1.custpob,
			    t1.custcob,
			    t1.custpassportno,
			    t1.custmothermaiden,
			    t1.custisminor,
			    t1.custreferedby,
			    t1.custdsa,
			    t1.custdsadept,
			    t1.custro1,
			    t1.custro2,
			    t1.custgroupid,
			    t1.custsts,
			    t1.custstschgdate,
			    t1.custgroupsts,
			    t1.custisblocked,
			    t1.custisactive,
			    t1.custisclosed,
			    t1.custinactivereason,
			    t1.custisdecease,
			    t1.custisdormant,
			    t1.custisdelinquent,
			    t1.custistradefincust,
			    t1.custtradelicencenum,
			    t1.custtradelicenceexpiry,
			    t1.custpassportexpiry,
			    t1.custvisanum,
			    t1.custvisaexpiry,
			    t1.custisstaff,
			    t1.custstaffid,
			    t1.custindustry,
			    t1.custsector,
			    t1.custsubsector,
			    t35.phonenumber,
			    t35.phoneareacode,
			    t35.phonecountrycode,
			    t1.custcrcpr,
			    t36.custemail AS emailid,
			    t1.custprofession,
			    t1.custtotalincome,
			    t1.custmaritalsts,
			    t1.custempsts,
			    t1.custsegment,
			    t1.custsubsegment,
			    t1.custisblacklisted,
			    t1.custblrsncode,
			    t1.custisrejected,
			    t1.custrejectedrsn,
			    t1.custbaseccy,
			    t1.custlng,
			    t1.custparentcountry,
			    t1.custresdcountry,
			    t1.custriskcountry,
			    t1.custclosedon,
			    t1.custstmtfrq,
			    t1.custisstmtcombined,
			    t1.custstmtlastdate,
			    t1.custstmtnextdate,
			    t1.custstmtdispatchmode,
			    t1.custfirstbusinessdate,
			    t1.custaddlvar81,
			    t1.custaddlvar82,
			    t2.custtypedesc AS lovdesccusttypecodename,
			    t2.custtypectg AS lovdesccustctgtype,
			    t18.custctgdesc AS lovdesccustctgcodename,
			    t1.custaddlvar83,
			    t1.custaddlvar84,
			    t1.custaddlvar85,
			    t1.custaddlvar86,
			    t1.custaddlvar87,
			    t1.custaddlvar88,
			    t1.custaddlvar89,
			    t1.custaddldate1,
			    t1.custaddldate2,
			    t1.custaddldate3,
			    t1.custaddldate4,
			    t1.custaddldate5,
			    t1.custaddlvar1,
			    t1.custaddlvar2,
			    t1.custaddlvar3,
			    t1.custaddlvar4,
			    t1.custaddlvar5,
			    t1.custaddlvar6,
			    t1.custaddlvar7,
			    t1.custaddlvar8,
			    t1.custaddlvar9,
			    t1.custaddlvar10,
			    t1.custaddlvar11,
			    t1.custaddldec1,
			    t1.custaddldec2,
			    t1.custaddldec3,
			    t1.custaddldec4,
			    t1.custaddldec5,
			    t1.custaddlint1,
			    t1.custaddlint2,
			    t1.custaddlint3,
			    t1.custaddlint4,
			    t1.custaddlint5,
			    t1.version,
			    t1.custsourceid,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.maritalstsdesc AS lovdesccustmaritalstsname,
			    t4.empstsdesc AS lovdesccustempstsname,
			    t6.custstsdescription AS lovdesccuststsname,
			    t7.industrydesc AS lovdesccustindustryname,
			    t8.sectordesc AS lovdesccustsectorname,
			    t9.subsectordesc AS lovdesccustsubsectorname,
			    t10.professiondesc AS lovdesccustprofessionname,
			    t11.countrydesc AS lovdesccustcobname,
			    t20.segmentdesc AS lovdesccustsegmentname,
			    t12.nationalitydesc AS lovdesccustnationalityname,
			    t13.genderdesc AS lovdesccustgendercodename,
			    t14.deptdesc AS lovdesccustdsadeptname,
			    t15.dealername AS lovdesccustro1name,
			    t15.dealercity AS lovdesccustro1city,
			    t16.grpstsdescription AS lovdesccustgroupstsname,
			    t17.branchdesc AS lovdesccustdftbranchname,
			    t17.bankrefno AS branchrefno,
			    t17.branchswiftbrncde AS custswiftbrncode,
			    t19.saluationdesc AS lovdesccustsalutationcodename,
			    t21.countrydesc AS lovdesccustparentcountryname,
			    t22.countrydesc AS lovdesccustresdcountryname,
			    t23.countrydesc AS lovdesccustriskcountryname,
			    t24.rofficerdesc AS lovdesccustro2name,
			    t25.blrsndesc AS lovdesccustblrsncodename,
			    t26.rejectdesc AS lovdesccustrejectedrsnname,
			    t27.custgrpdesc AS lovdesccustgroupidname,
			    t28.subsegmentdesc AS lovdesccustsubsegmentname,
			    t29.lngdesc AS lovdesccustlngname,
			    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
			    t1.dedupfound,
			    t1.skipdedup,
			    t1.custtotalexpense,
			    t1.custblacklistdate,
			    t1.noofdependents,
			    t1.jointcust,
			    t1.jointcustname,
			    t1.jointcustdob,
			    t27.custgrpcode AS lovdesccustgroupcode,
			    t1.custrelation,
			    t1.contactpersonname,
			    t1.salariedcustomer,
			    t31.targetdesc AS lovdesctargetname,
			    t1.custsuspsts,
			    t1.custsuspdate,
			    t1.custsusptrigger,
			    t1.subcategory,
			    t1.casteid,
			    t1.religionid,
			    t32.castecode,
			    t32.castedesc,
			    t33.religioncode,
			    t33.religiondesc,
			    COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
			    t1.margindeviation,
			    t1.applicationno,
			    t17.branchprovince,
			    t1.dnd,
			    t1.othercaste,
			    t1.otherreligion,
			    t1.natureofbusiness,
			    t1.entitytype,
			    t1.custresidentialsts,
			    t1.qualification,
			    t1.custflag,
			    t1.vip,
				t37.description AS lovDescQualification
			   FROM customers t1
			     LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			     LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			     LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			     LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			     LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			     LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			     LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			     LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			     LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			     LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			     LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			     LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			     LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			     LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			     LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			     LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			     LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			     LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			     LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			     LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			     LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			     LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			     LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			     LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			     LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			     LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			     LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			     LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			     LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			     LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			     LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			     LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
			     LEFT JOIN customerphonenumbers t35 ON t1.custid = t35.phonecustid AND t35.phonetypepriority = 5
			     LEFT JOIN customeremails t36 ON t1.custid = t36.custid AND t36.custemailtypecode = 'OFFICE'
				 LEFT JOIN qualification t37 ON t1.qualification = t37.code
	  			]]>
		</createView>
	</changeSet>


	<changeSet id="333" author="saidurga.v">
		<createView viewName="customers_tview" replaceIfExists="true">
		  <![CDATA[
					SELECT t1.custid,
			    t1.custcif,
			    t1.custcorebank,
			    t1.custctgcode,
			    t1.custtypecode,
			    t1.custsalutationcode,
			    t1.custfname,
			    t1.custmname,
			    t1.custlname,
			    t1.custshrtname,
			    t1.custfnamelcllng,
			    t1.custmnamelcllng,
			    t1.custlnamelcllng,
			    t1.custshrtnamelcllng,
			    t1.custdftbranch,
			    t1.custgendercode,
			    t1.custdob,
			    t1.custpob,
			    t1.custcob,
			    t1.custpassportno,
			    t1.custmothermaiden,
			    t1.custisminor,
			    t1.custreferedby,
			    t1.custdsa,
			    t1.custdsadept,
			    t1.custro1,
			    t1.custro2,
			    t1.custgroupid,
			    t1.custsts,
			    t1.custstschgdate,
			    t1.custgroupsts,
			    t1.custisblocked,
			    t1.custisactive,
			    t1.custisclosed,
			    t1.custinactivereason,
			    t1.custisdecease,
			    t1.custisdormant,
			    t1.custisdelinquent,
			    t1.custistradefincust,
			    t1.custtradelicencenum,
			    t1.custtradelicenceexpiry,
			    t1.custpassportexpiry,
			    t1.custvisanum,
			    t1.custvisaexpiry,
			    t1.custisstaff,
			    t1.custstaffid,
			    t1.custindustry,
			    t1.custsector,
			    t1.custsubsector,
			    t1.custprofession,
			    t1.custtotalincome,
			    t1.custmaritalsts,
			    t1.custempsts,
			    t1.custsegment,
			    t1.custsubsegment,
			    t1.custisblacklisted,
			    t1.custblrsncode,
			    t1.custisrejected,
			    t1.custrejectedrsn,
			    t1.custbaseccy,
			    t1.custlng,
			    t1.custparentcountry,
			    t1.custresdcountry,
			    t1.custriskcountry,
			    t1.custnationality,
			    t1.custclosedon,
			    t1.custstmtfrq,
			    t1.custisstmtcombined,
			    t1.custstmtlastdate,
			    t1.custstmtnextdate,
			    t1.custstmtdispatchmode,
			    t1.custfirstbusinessdate,
			    t1.custaddlvar81,
			    t1.custaddlvar82,
			    t1.custaddlvar83,
			    t1.custaddlvar84,
			    t1.custaddlvar85,
			    t1.custaddlvar86,
			    t1.custaddlvar87,
			    t1.custaddlvar88,
			    t1.custaddlvar89,
			    t1.custaddldate1,
			    t1.custaddldate2,
			    t1.custaddldate3,
			    t1.custaddldate4,
			    t1.custaddldate5,
			    t1.custaddlvar1,
			    t1.custaddlvar2,
			    t1.custaddlvar3,
			    t1.custaddlvar4,
			    t1.custaddlvar5,
			    t1.custaddlvar6,
			    t1.custaddlvar7,
			    t1.custaddlvar8,
			    t1.custaddlvar9,
			    t1.custaddlvar10,
			    t1.custaddlvar11,
			    t1.custaddldec1,
			    t1.custaddldec2,
			    t1.custaddldec3,
			    t1.custaddldec4,
			    t1.custaddldec5,
			    t1.custaddlint1,
			    t1.custaddlint2,
			    t1.custaddlint3,
			    t1.custaddlint4,
			    t1.custaddlint5,
			    t1.custsourceid,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.custtypedesc AS lovdesccusttypecodename,
			    t3.maritalstsdesc AS lovdesccustmaritalstsname,
			    t4.empstsdesc AS lovdesccustempstsname,
			    t6.custstsdescription AS lovdesccuststsname,
			    t7.industrydesc AS lovdesccustindustryname,
			    t8.sectordesc AS lovdesccustsectorname,
			    t9.subsectordesc AS lovdesccustsubsectorname,
			    t10.professiondesc AS lovdesccustprofessionname,
			    t11.countrydesc AS lovdesccustcobname,
			    t20.segmentdesc AS lovdesccustsegmentname,
			    t12.nationalitydesc AS lovdesccustnationalityname,
			    t13.genderdesc AS lovdesccustgendercodename,
			    t14.deptdesc AS lovdesccustdsadeptname,
			    t15.dealername AS lovdesccustro1name,
			    t15.dealercity AS lovdesccustro1city,
			    t16.grpstsdescription AS lovdesccustgroupstsname,
			    t17.branchdesc AS lovdesccustdftbranchname,
			    t17.bankrefno AS branchrefno,
			    t17.branchswiftbrncde AS custswiftbrncode,
			    t18.custctgdesc AS lovdesccustctgcodename,
			    t2.custtypectg AS lovdesccustctgtype,
			    t19.saluationdesc AS lovdesccustsalutationcodename,
			    t21.countrydesc AS lovdesccustparentcountryname,
			    t22.countrydesc AS lovdesccustresdcountryname,
			    t23.countrydesc AS lovdesccustriskcountryname,
			    t24.rofficerdesc AS lovdesccustro2name,
			    t25.blrsndesc AS lovdesccustblrsncodename,
			    t26.rejectdesc AS lovdesccustrejectedrsnname,
			    t27.custgrpdesc AS lovdesccustgroupidname,
			    t28.subsegmentdesc AS lovdesccustsubsegmentname,
			    t29.lngdesc AS lovdesccustlngname,
			    t30.dispatchmodedesc AS lovdescdispatchmodedescname,
			    t1.dedupfound,
			    t1.skipdedup,
			    t1.custtotalexpense,
			    t1.custblacklistdate,
			    t1.noofdependents,
			    t1.custcrcpr,
			    t1.jointcust,
			    t1.jointcustname,
			    t1.jointcustdob,
			    t27.custgrpcode AS lovdesccustgroupcode,
			    t1.contactpersonname,
			    t1.phonenumber,
			    t1.emailid,
			    t1.salariedcustomer,
			    t31.targetdesc AS lovdesctargetname,
			    t1.custrelation,
			    t1.custsuspsts,
			    t1.custsuspdate,
			    t1.custsusptrigger,
			    t1.subcategory,
			    t1.casteid,
			    t1.religionid,
			    t32.castecode,
			    t32.castedesc,
			    t33.religioncode,
			    t33.religiondesc,
			    COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
			    t1.margindeviation,
			    t1.applicationno,
			    t17.branchprovince,
			    t1.dnd,
			    t1.othercaste,
			    t1.otherreligion,
			    t1.natureofbusiness,
			    t1.entitytype,
			    t1.custresidentialsts,
			    t1.qualification,
			    t1.custflag,
			    t1.vip,
				t37.description AS lovDescQualification
			   FROM customers_temp t1
			     LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
			     LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
			     LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
			     LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
			     LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
			     LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
			     LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
			     LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
			     LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
			     LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
			     LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
			     LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
			     LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
			     LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
			     LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
			     LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
			     LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode
			     LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
			     LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
			     LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
			     LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
			     LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
			     LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
			     LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
			     LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
			     LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
			     LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
			     LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
			     LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
			     LEFT JOIN caste t32 ON t1.casteid = t32.casteid
			     LEFT JOIN religion t33 ON t1.religionid = t33.religionid
			     LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
				 LEFT JOIN qualification t37 ON t1.qualification = t37.code
	 		   ]]>
		</createView>
	</changeSet>

	<changeSet id="331_post" author="saidurga.v" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'customers_view');
					select deps_restore_dependencies ('plf', 'customers_aview');
					select deps_restore_dependencies ('plf', 'customers_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="334" author="venkatesh.ch">
		<comment>ST#4 TK#17</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
		  <![CDATA[
				SELECT t1.custcif,
					t1.custfname,
					t1.custlname,
					t1.custdob,
					t1.custcrcpr,
					t1.mobilenumber,
					t1.custnationality,
					t1.custpassportno,
					t1.employer,
					t1.custisactive,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.nationalitydesc AS lovdescnationalitydesc,
					t3.empname AS lovdescempname,
					t1.custctgcode,
					t1.custcin,
					t1.custaadhaar,
					t1.custcompname,
					t1.reasoncode,
					t3.empindustry,
					t1.gender,
					t1.addresstype,
					t1.housenumber,
					t1.country,
					t1.state,
					t1.city,
					t1.street,
					t1.pincode,
					t1.remarks,
					t1.vid,
					t1.dl,
					t1.forged_document_type,
					t1.product_applied_in_other_fi,
					t1.Source
				FROM blacklistcustomer_temp t1
					LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
					LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				UNION ALL
				SELECT t1.custcif,
					t1.custfname,
					t1.custlname,
					t1.custdob,
					t1.custcrcpr,
					t1.mobilenumber,
					t1.custnationality,
					t1.custpassportno,
					t1.employer,
					t1.custisactive,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.nationalitydesc AS lovdescnationalitydesc,
					t3.empname AS lovdescempname,
					t1.custctgcode,
					t1.custcin,
					t1.custaadhaar,
					t1.custcompname,
					t1.reasoncode,
					t3.empindustry,
					t1.gender,
					t1.addresstype,
					t1.housenumber,
					t1.country,
					t1.state,
					t1.city,
					t1.street,
					t1.pincode,
					t1.remarks,
					t1.vid,
					t1.dl,
					t1.forged_document_type,
					t1.product_applied_in_other_fi,
					t1.Source
				FROM blacklistcustomer t1
					LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
					LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				WHERE NOT (EXISTS ( SELECT 1
						FROM blacklistcustomer_temp
						WHERE blacklistcustomer_temp.custcif = t1.custcif))
			]]>
		</createView>
	</changeSet>

	<changeSet id="335" author="Lakshmi.N">
		<comment>ST#5 TK#40</comment>
		<createView viewName="bankinfodetail_aview" replaceIfExists="true">
		  <![CDATA[
		   SELECT t1.bankid,
					t1.monthyear,
					t1.balance,
					t1.debitno,
					t1.debitamt,
					t1.creditno,
					t1.creditamt,
					t1.bouncein,
					t1.bounceout,
					t1.closingbal,
					t1.sanctionlimit,
					t1.avgutilization,
					t1.peakutilizationlevel,
					t1.odcclimit,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.interest,
					t1.trf,
					t1.totalemi,
					t1.totalsalary,
					t1.emibounceno
					FROM bankinfodetail t1
				]]>
		</createView>
	</changeSet>

	<changeSet id="336" author="Lakshmi.N">
		<comment>ST#5 TK#40</comment>
		<createView viewName="bankinfodetail_view" replaceIfExists="true">
		  <![CDATA[
		  SELECT t1.bankid,
						t1.monthyear,
						t1.balance,
						t1.debitno,
						t1.debitamt,
						t1.creditno,
						t1.creditamt,
						t1.bouncein,
						t1.bounceout,
						t1.closingbal,
						t1.sanctionlimit,
						t1.avgutilization,
						t1.peakutilizationlevel,
						t1.odcclimit,
						t1.version,
						t1.lastmntby,
						t1.lastmnton,
						t1.recordstatus,
						t1.rolecode,
						t1.nextrolecode,
						t1.taskid,
						t1.nexttaskid,
						t1.recordtype,
						t1.workflowid,
						t1.interest,
						t1.trf,
						t1.totalemi,
						t1.totalsalary,
						t1.emibounceno
						FROM bankinfodetail_temp t1
						UNION ALL
						SELECT t1.bankid,
						t1.monthyear,
						t1.balance,
						t1.debitno,
						t1.debitamt,
						t1.creditno,
						t1.creditamt,
						t1.bouncein,
						t1.bounceout,
						t1.closingbal,
						t1.sanctionlimit,
						t1.avgutilization,
						t1.peakutilizationlevel,
						t1.odcclimit,
						t1.version,
						t1.lastmntby,
						t1.lastmnton,
						t1.recordstatus,
						t1.rolecode,
						t1.nextrolecode,
						t1.taskid,
						t1.nexttaskid,
						t1.recordtype,
						t1.workflowid,
						t1.interest,
						t1.trf,
						t1.totalemi,
						t1.totalsalary,
						t1.emibounceno
					FROM bankinfodetail t1
					WHERE NOT (EXISTS ( SELECT 1 AS expr1
							FROM bankinfodetail_temp
							WHERE bankinfodetail_temp.bankid = t1.bankid AND bankinfodetail_temp.monthyear = t1.monthyear))
					]]>
		</createView>
	</changeSet>


	<changeSet id="337" author="Shinde.b">
		<comment> ST#5 tk#45BRE Digital and Physical</comment>
		<createView viewName="rules_view" replaceIfExists="true">
	 <![CDATA[
	     SELECT t1.ruleid,
			    t1.rulecode,
			    t1.rulemodule,
			    t1.ruleevent,
			    t1.rulecodedesc,
			    t1.waiverdecider,
			    t1.waiver,
			    t1.waiverperc,
			    t1.sqlrule,
			    t1.actualblock,
			    t1.allowdeviation,
			    t1.calfeemodify,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.seqorder,
			    t1.returntype,
			    t1.deviationtype,
			    t1.groupid,
			    corpscoringgroupdetail.groupdesc AS lovdescgroupname,
			    t1.feetofinance,
			    t1.fixedorvariablelimit,
			    t1.revolving,
			    t1.active,
			    t1.fields,
			    t1.feetypeid,
			    t3.feetypecode,
			    t3.feetypedesc,
			    t1.splrule
			   FROM rules_temp t1
			     LEFT JOIN corpscoringgroupdetail ON t1.groupid = corpscoringgroupdetail.groupid
			     LEFT JOIN feetypes t3 ON t3.feetypeid = t1.feetypeid
			UNION ALL
			 SELECT t1.ruleid,
			    t1.rulecode,
			    t1.rulemodule,
			    t1.ruleevent,
			    t1.rulecodedesc,
			    t1.waiverdecider,
			    t1.waiver,
			    t1.waiverperc,
			    t1.sqlrule,
			    t1.actualblock,
			    t1.allowdeviation,
			    t1.calfeemodify,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.seqorder,
			    t1.returntype,
			    t1.deviationtype,
			    t1.groupid,
			    corpscoringgroupdetail.groupdesc AS lovdescgroupname,
			    t1.feetofinance,
			    t1.fixedorvariablelimit,
			    t1.revolving,
			    t1.active,
			    t1.fields,
			    t1.feetypeid,
			    t3.feetypecode,
			    t3.feetypedesc,
			    t1.splrule
			   FROM rules t1
			     LEFT JOIN corpscoringgroupdetail ON t1.groupid = corpscoringgroupdetail.groupid
			     LEFT JOIN feetypes t3 ON t1.feetypeid = t3.feetypeid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM rules_temp
			          WHERE rules_temp.ruleid = t1.ruleid))
					  ]]>
		</createView>
	</changeSet>

	<changeSet id="338" author="Shinde.b">
		<comment> ST#5 tk#45BRE Digital and Physical</comment>
		<createView viewName="rules_aview" replaceIfExists="true">
	 <![CDATA[
	     SELECT t1.ruleid,
			    t1.rulecode,
			    t1.rulemodule,
			    t1.ruleevent,
			    t1.rulecodedesc,
			    t1.waiverdecider,
			    t1.waiver,
			    t1.waiverperc,
			    t1.sqlrule,
			    t1.actualblock,
			    t1.allowdeviation,
			    t1.calfeemodify,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.seqorder,
			    t1.returntype,
			    t1.deviationtype,
			    t1.groupid,
			    corpscoringgroupdetail.groupdesc AS lovdescgroupname,
			    t1.feetofinance,
			    t1.fixedorvariablelimit,
			    t1.revolving,
			    t1.active,
			    t1.fields,
			    t1.feetypeid,
			    t3.feetypecode,
			    t3.feetypedesc,
				t1.splrule
			   FROM rules t1
			     LEFT JOIN corpscoringgroupdetail ON t1.groupid = corpscoringgroupdetail.groupid
			     LEFT JOIN feetypes t3 ON t1.feetypeid = t3.feetypeid   
				]]>
		</createView>
	</changeSet>

	<changeSet id="339.1" author="rajesh.n">
		<comment>PCHFL: ST#1 TK#15 </comment>
		<createView viewName="defaultincometypes_view" replaceIfExists="true">
		<![CDATA[
			SELECT incomeexpense, category, incometypecode, incometypedesc, margin, t2.categorydesc AS lovdesccategoryname
			FROM defaultincometypes t1
			JOIN bmtincomecategory t2 ON t1.category = t2.incomecategory
		]]>
		</createView>
	</changeSet>


	<changeSet id="340" author="Venkatesh.Ch">
		<comment>TK#63 ST#10 </comment>
		<createView viewName="financemain_aview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId
			   FROM (((((((((((((((((financemain t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
	]]>
		</createView>
	</changeSet>


	<changeSet id="341" author="Venkatesh.Ch">
		<comment>TK#63 ST#10 </comment>
		<createView viewName="financemain_tview" replaceIfExists="true">
		<![CDATA[	 
			  SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
		]]>
		</createView>
	</changeSet>

	<changeSet id="343_pre" author="Venkatesh.Ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'financemain_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="342" author="Venkatesh.Ch">
		<comment>TK#63 ST#10 </comment>
		<createView viewName="financemain_view" replaceIfExists="true">
		<![CDATA[	 
			 SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			UNION ALL
			 SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId
			   FROM (((((((((((((((((financemain t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			  WHERE (NOT (EXISTS ( SELECT 1
			           FROM financemain_temp
			          WHERE ((financemain_temp.finreference) = (t1.finreference)))))
		  	]]>
		</createView>
	</changeSet>

	<changeSet id="342_post" author="Venkatesh.Ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="343.1" author="Venkatesh.Ch">
		<comment>TK#63 ST#10 </comment>
		<createView viewName="financemain_lview" replaceIfExists="true">
		<![CDATA[
			SELECT t1.finreference,
			    t1.investmentref,
			    t1.fintype,
			    t1.finccy,
			    t1.finamount,
			    t1.downpayment,
			    t1.feechargeamt,
			    t1.schedulemethod,
			    t1.numberofterms,
			    t1.recordstatus,
			    t1.recordtype,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.finbranch,
			    t1.fincontractdate,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t1.workflowid,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.finpreapprovedref,
			    t1.rcdmaintainsts,
			    t1.insuranceamt,
			    t1.fincurrassetvalue,
			    t1.calterms,
			    t1.deviationapproval,
			    t1.finpurpose,
			    t1.initiatedate,
			    t1.finassetvalue,
			    t2.custcif AS lovdesccustcif,
			    t2.custshrtname AS lovdesccustshrtname,
			    t2.custpassportno AS lovdesccustpassportno,
			    t2.custdob AS lovdesccustdob,
			    t2.custcrcpr AS lovdesccustcrcpr,
			    t2.phonenumber,
			    t3.fincategory AS lovdescproductcodename,
			    t3.findivision AS lovdescfindivision,
			    t3.product AS lovdescfinproduct,
			    t3.fintypedesc AS lovdescfintypename,
			    COALESCE(t4.roledesc,${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
			    t1.samplingrequired,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.graceterms,
			    t1.productcategory,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t1.OfferId,
				t1.applicationno
			   FROM (((financemain_temp t1
			     JOIN customers t2 ON ((t1.custid = t2.custid)))
			     JOIN rmtfinancetypes t3 ON (((t3.fintype) = (t1.fintype))))
			     LEFT JOIN secroles t4 ON (((t1.nextrolecode) = (t4.rolecd))))
				  	]]>
		</createView>
	</changeSet>

	<changeSet id="344" author="rajesh.n">
		<createView viewName="finocrcapture_view" replaceIfExists="true">
		<![CDATA[
				SELECT
				t1. id,
				t1.finreference,
				t1.disbseq,
				t1.demandamount,
				t1.paidamount ,
				t1.remarks,
				t1.VERSION ,
				t1.LASTMNTBY,
				t1.LASTMNTON,
				t1.RECORDSTATUS,
				t1.ROLECODE,
				t1.NEXTROLECODE,
				t1.TASKID,
				t1.NEXTTASKID,
				t1.RECORDTYPE,
				t1.WORKFLOWID
				from finocrcapture_temp T1
				UNION ALL
				SELECT
				t1. id,
				t1.finreference,
				t1.disbseq,
				t1.demandamount,
				t1.paidamount ,
				t1.remarks,
				t1.VERSION ,
				t1.LASTMNTBY,
				t1.LASTMNTON,
				t1.RECORDSTATUS,
				t1.ROLECODE,
				t1.NEXTROLECODE,
				t1.TASKID,
				t1.NEXTTASKID,
				t1.RECORDTYPE,
				t1.WORKFLOWID
				from finocrcapture t1
					WHERE NOT (EXISTS ( SELECT 1 AS expr1
				           FROM finocrcapture_temp
				          WHERE finocrcapture_temp.id = t1.id))
						  ]]>
		</createView>
	</changeSet>

	<changeSet id="345" author="rajesh.n">
		<createView viewName="finocrcapture_aview" replaceIfExists="true">
		<![CDATA[
			SELECT
				t1. id,
				t1.finreference,
				t1.disbseq,
				t1.demandamount,
				t1.paidamount ,
				t1.remarks,
				t1.VERSION ,
				t1.LASTMNTBY,
				t1.LASTMNTON,
				t1.RECORDSTATUS,
				t1.ROLECODE,
				t1.NEXTROLECODE,
				t1.TASKID,
				t1.NEXTTASKID,
				t1.RECORDTYPE,
				t1.WORKFLOWID
				from finocrcapture t1
				   ]]>
		</createView>
	</changeSet>

	<changeSet id="346.1" author="rajesh.n">
		<comment>PCHFL: ST#1 TK#15 </comment>
		<createView viewName="defaultincometypes_view" replaceIfExists="true">
			<![CDATA[
				SELECT  t1.incomeexpense,
				t1.category,
				t1.incometypecode,
				t3.incometypedesc,
				t3.margin,
				t2.categorydesc AS lovdesccategoryname
				   FROM defaultincometypes t1
				JOIN bmtincomecategory t2 ON t1.category = t2.incomecategory
				JOIN bmtincometypes t3 ON t1.incomeexpense = t3.incomeexpense
				and t1.category = t3.category
				and t1.incometypecode = t3.incometypecode
			]]>
		</createView>
	</changeSet>

	<changeSet id="347" author="rajesh.n">
		<createView viewName="verification_tv_view" replaceIfExists="true">
		<![CDATA[
				SELECT tv.verificationid,
				    tv.agentcode,
				    tv.agentname,
				    tv.type,
				    tv.verifieddate,
				    tv.status,
				    cs.collateraltype,
				    cs.collateralccy,
				    cs.collateralloc,
				    tv.reason,
				    tv.valuationamount,
				    r1.code AS reasoncode,
				    r1.description AS reasondesc,
				    tv.summaryremarks,
				    tv.sourceformname,
				    tv.verificationformname,
				    tv.documentname,
				    tv.documentref,
				    tv.version,
				    tv.lastmntby,
				    tv.lastmnton,
				    tv.recordstatus,
				    tv.rolecode,
				    tv.nextrolecode,
				    tv.taskid,
				    tv.nexttaskid,
				    tv.recordtype,
				    tv.workflowid,
				    tv.observationremarks,
				    c.custcif AS cif,
				    v.keyreference,
				    v.createdon,
				    v.agency,
				    a.dealername AS agencyname,
				    a.dealercity AS agencycity,
				    v.custid,
				    c.custshrtname AS custname,
				    v.verificationcategory,
				    cs.collateralref,
				    cpnh.phonenumber AS contactnumber1,
				    cpnl.phonenumber AS contactnumber2,
				    tv.valasperpe,
				    tv.finalvalamt,
				    tv.decisiononval,
				    tv.finalvalremarks,
				    fm.productcategory,
				fm.fintype as loanType,
				fm.lovDescFinTypeName as lovDescLoanTypeName,
				fm.sourcingBranch,
				fm.lovDescSourcingBranch
				   FROM verification_tv_temp tv
				     JOIN verifications v ON v.id = tv.verificationid
				     JOIN ( SELECT collateralsetup_temp.collateraltype,
				            collateralsetup_temp.collateralccy,
				            collateralsetup_temp.collateralloc,
				            collateralsetup_temp.collateralref
				           FROM collateralsetup_temp
				        UNION
				         SELECT csp.collateraltype,
				            csp.collateralccy,
				            csp.collateralloc,
				            csp.collateralref
				           FROM collateralsetup csp
				          WHERE NOT (EXISTS ( SELECT 1
				                   FROM collateralsetup_temp
				                  WHERE collateralsetup_temp.collateralref = csp.collateralref))) cs ON cs.collateralref = v.referencefor
				     JOIN collateralstructure cst ON cst.collateraltype = cs.collateraltype
				     LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
				     LEFT JOIN customers c ON c.custid = v.custid
				     LEFT JOIN customerphonenumbers cpnh ON cpnh.phonecustid = c.custid AND cpnh.phonetypepriority = 5
				     LEFT JOIN customerphonenumbers cpnl ON cpnl.phonecustid = c.custid AND cpnl.phonetypepriority = 4
				     LEFT JOIN reasons r1 ON r1.id = tv.reason
				     JOIN financemain_view fm ON fm.finreference = v.keyreference
				UNION ALL
				SELECT tv.verificationid,
				    tv.agentcode,
				    tv.agentname,
				    tv.type,
				    tv.verifieddate,
				    tv.status,
				    cs.collateraltype,
				    cs.collateralccy,
				    cs.collateralloc,
				    tv.reason,
				    tv.valuationamount,
				    r1.code AS reasoncode,
				    r1.description AS reasondesc,
				    tv.summaryremarks,
				    tv.sourceformname,
				    tv.verificationformname,
				    tv.documentname,
				    tv.documentref,
				    tv.version,
				    tv.lastmntby,
				    tv.lastmnton,
				    tv.recordstatus,
				    tv.rolecode,
				    tv.nextrolecode,
				    tv.taskid,
				    tv.nexttaskid,
				    tv.recordtype,
				    tv.workflowid,
				    tv.observationremarks,
				    c.custcif AS cif,
				    v.keyreference,
				    v.createdon,
				    v.agency,
				    a.dealername AS agencyname,
				    a.dealercity AS agencycity,
				    v.custid,
				    c.custshrtname AS custname,
				    v.verificationcategory,
				    cs.collateralref,
				    cpnh.phonenumber AS contactnumber1,
				    cpnl.phonenumber AS contactnumber2,
				    tv.valasperpe,
				    tv.finalvalamt,
				    tv.decisiononval,
				    tv.finalvalremarks,
				fm.productcategory,
				fm.fintype as loanType,
				fm.lovDescFinTypeName as lovDescLoanTypeName,
				fm.sourcingBranch,
				fm.lovDescSourcingBranch
				   FROM verification_tv tv
				     JOIN verifications v ON v.id = tv.verificationid
				     JOIN ( SELECT collateralsetup_temp.collateraltype,
				            collateralsetup_temp.collateralccy,
				            collateralsetup_temp.collateralloc,
				            collateralsetup_temp.collateralref
				           FROM collateralsetup_temp
				        UNION
				         SELECT csp.collateraltype,
				            csp.collateralccy,
				            csp.collateralloc,
				            csp.collateralref
				           FROM collateralsetup csp
				          WHERE NOT (EXISTS ( SELECT 1
				                   FROM collateralsetup_temp
				                  WHERE collateralsetup_temp.collateralref = csp.collateralref))) cs ON cs.collateralref = v.referencefor
				     JOIN collateralstructure cst ON cst.collateraltype = cs.collateraltype
				     LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
				     LEFT JOIN customers c ON c.custid = v.custid
				     LEFT JOIN customerphonenumbers cpnh ON cpnh.phonecustid = c.custid AND cpnh.phonetypepriority = 5
				     LEFT JOIN customerphonenumbers cpnl ON cpnl.phonecustid = c.custid AND cpnl.phonetypepriority = 4
				     LEFT JOIN reasons r1 ON r1.id = tv.reason
				     JOIN financemain_view fm ON fm.finreference = v.keyreference
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM verification_tv_temp
				          WHERE verification_tv_temp.verificationid = tv.verificationid))
				]]>
		</createView>
	</changeSet>

	<changeSet id="348" author="rohith">
		<createView viewName="CustTypePANMapping_AVIEW" replaceIfExists="true">
		<![CDATA[
			SELECT 	T1.MappingID , T1.CustCategory, T1.CustType, T1.panLetter, T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn,
         			T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId , T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CUSTTYPEDESC
     				FROM 	CustTypePANMapping T1 Inner Join RMTCUSTTYPES T2 ON T1.CUSTTYPE = T2.CUSTTYPECODE	
		]]>
		</createView>
	</changeSet>

	<changeSet id="349" author="rohith">
		<createView viewName="CustTypePANMapping_VIEW" replaceIfExists="true">
		<![CDATA[
			SELECT	T1.MappingID , T1.CustCategory, T1.CustType, T1.panLetter, T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn,
         			T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId , T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CUSTTYPEDESC
    			 	FROM 	CustTypePANMapping_Temp T1 Inner Join RMTCUSTTYPES T2 ON T1.CUSTTYPE = T2.CUSTTYPECODE
  		
  			Union All  
  		
  			SELECT 	T1.MappingID , T1.CustCategory, T1.CustType, T1.panLetter, T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn,
         			T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId , T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CUSTTYPEDESC
     				FROM 	CustTypePANMapping T1 Inner Join RMTCUSTTYPES T2 ON T1.CUSTTYPE = T2.CUSTTYPECODE
  		
  				WHERE NOT EXISTS ( SELECT 1 FROM CustTypePANMapping_Temp WHERE MappingID = T1.MappingID )		
		]]>
		</createView>
	</changeSet>

	<changeSet id="350" author="rajesh.n">
		<comment>ST#6 TK#43</comment>
		<createView viewName="financeenquiry_view" replaceIfExists="true">
		<![CDATA[
			SELECT t1.finreference,
				t1.finbranch,
				t1.fintype,
				t1.finccy,
				t1.schedulemethod,
				t1.profitdaysbasis,
				t1.finstartdate,
				t1.calterms AS numberofterms,
				t1.custid,
				t1.finamount,
				t1.grcperiodenddate,
				t1.maturitydate,
				t1.finrepaymentamount,
				t1.finisactive,
				t1.allowgrcperiod,
				t1.downpayment,
				t1.migratedfinance,
				t1.lastrepaydate,
				t1.lastrepaypftdate,
				t1.fincurrassetvalue,
				t1.blacklisted,
				t1.feechargeamt,
				t1.closingstatus,
				t1.graceterms,
				t1.alwmultidisb,
				t1.defferments,
				t1.finstatus,
				t1.mandateid,
				t1.finrepaymethod,
				t1.finassetvalue,
				t1.insuranceamt,
				t1.sanbsdschdle,
				t1.promotionseqid,
				t1.svamount,
				t1.cbamount,
				t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
				t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
				t2.fintypedesc AS lovdescfintypename,
				t2.finscheduleon AS lovdescfinscheduleon,
				t2.findivision AS lovdescfindivision,
				t2.fincategory AS lovdescproductcodename,
				t2.finisalwdifferment AS lovdescfinalwdeferment,
				t3.custcif AS lovdesccustcif,
				t3.custshrtname AS lovdesccustshrtname,
				t4.branchdesc AS lovdescfinbranchname,
				t5.custtypectg,
				COALESCE(t9.noinst, 0 ) AS noinst,
				t1.finocrrequired
				FROM financemain t1
				JOIN rmtfinancetypes t2 ON t1.fintype  = t2.fintype 
				JOIN customers t3 ON t1.custid = t3.custid
				JOIN rmtbranches t4 ON t1.finbranch  = t4.branchcode 
				JOIN rmtcusttypes t5 ON t3.custtypecode  = t5.custtypecode 
				LEFT JOIN finpftdetails t9 ON t1.finreference  = t9.finreference 
			]]>
		</createView>
	</changeSet>

	<changeSet id="351" author="rajesh.n">
		<comment>ST#6 TK#43</comment>
		<createView viewName="financeenquiry_tview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.finreference,
					t1.finbranch,
					t1.fintype,
					t1.finccy,
					t1.schedulemethod,
					t1.profitdaysbasis,
					t1.finstartdate,
					t1.calterms AS numberofterms,
					t1.custid,
					t1.finamount,
					t1.grcperiodenddate,
					t1.maturitydate,
					t1.finrepaymentamount,
					t1.finisactive,
					t1.allowgrcperiod,
					t1.downpayment,
					t1.migratedfinance,
					t1.lastrepaydate,
					t1.lastrepaypftdate,
					t1.fincurrassetvalue,
					t1.blacklisted,
					t1.feechargeamt,
					t1.closingstatus,
					t1.graceterms,
					t1.alwmultidisb,
					t1.defferments,
					t1.finstatus,
					t1.mandateid,
					t1.finrepaymethod,
					t1.finassetvalue,
					t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
					t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
					t2.fintypedesc AS lovdescfintypename,
					t2.finscheduleon AS lovdescfinscheduleon,
					t2.findivision AS lovdescfindivision,
					t2.fincategory AS lovdescproductcodename,
					t2.finisalwdifferment AS lovdescfinalwdeferment,
					t3.custcif AS lovdesccustcif,
					t3.custshrtname AS lovdesccustshrtname,
					t4.branchdesc AS lovdescfinbranchname,
					t5.custtypectg,
					COALESCE(t9.noinst, 0 ) AS noinst,
					t1.finocrrequired
					FROM financemain_temp t1
					JOIN rmtfinancetypes t2 ON t1.fintype  = t2.fintype 
					JOIN customers t3 ON t1.custid = t3.custid
					JOIN rmtbranches t4 ON t1.finbranch  = t4.branchcode 
					JOIN rmtcusttypes t5 ON t3.custtypecode  = t5.custtypecode 
					LEFT JOIN finpftdetails t9 ON t1.finreference  = t9.finreference
				]]>
		</createView>
	</changeSet>

	<changeSet id="352" author="lakshmi">
		<comment>ST#5_TK#9</comment>
		<createView viewName="financescoreheader_view" replaceIfExists="true">
			<![CDATA[
					SELECT 	t1.headerid,
							t1.groupid,
							t1.finreference,
							t1.minscore,
							t1.override,
							t1.overridescore,
							t1.creditworth,
							t2.scoregroupcode AS groupcode,
							t2.scoregroupname AS groupcodedesc,
							t1.custid
							FROM 
							financescoreheader t1
							JOIN rmtscoringgroup t2 ON t1.groupid = t2.scoregroupid
				]]>
		</createView>
	</changeSet>

	<changeSet id="353" author="rohith.s">
		<comment>ST#1_TK#95</comment>
		<createView viewName="builderprojcet_aview" replaceIfExists="true">
			<![CDATA[
				  SELECT t1.id,
				    t1.name,
				    t1.builderid,
				    t1.apfno,
				    t2.name AS builderidname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.registrationnumber,
				    t1.addressline1,
				    t1.addressline2,
				    t1.addressline3,
				    t1.landmark,
				    t1.areaorlocality,
				    t1.city,
				    t1.state,
				    t1.pincode,
				    t1.projecttype,
				    t1.typesofapf,
				    t1.totalunits,
				    t1.numberoftowers,
				    t1.noofindependenthouses,
				    t1.projectstartdate,
				    t1.projectenddate,
				    t1.remarks,
				    t2.segmentation,
					t1.commencementCertificateNo,  
				    t1.commenceCrtfctIssuingAuthority,      
				    t1.totalPlotArea,                    
				    t1.constructedArea,                  
				    t1.technicalDone,
				    t1.legalDone,     
				    t1.rcuDone,       
				    t1.constrctinCompletionPercentage, 
				    t1.disbursalRecommendedPercentage 
				   FROM (builderprojcet t1
				     JOIN buildercompany t2 ON ((t1.builderid = t2.id)))
					 
	 	]]>
		</createView>
	</changeSet>


	<changeSet id="354" author="rohith.s">
		<comment>ST#1_TK#95</comment>
		<createView viewName="builderprojcet_tview" replaceIfExists="true">
			<![CDATA[	 
				  SELECT t1.id,
				    t1.name,
				    t1.builderid,
				    t1.apfno,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
					t1.commencementCertificateNo,  
				    t1.commenceCrtfctIssuingAuthority,      
				    t1.totalPlotArea,                    
				    t1.constructedArea,                  
				    t1.technicalDone,
				    t1.legalDone,     
				    t1.rcuDone,       
				    t1.constrctinCompletionPercentage, 
				    t1.disbursalRecommendedPercentage 
				   FROM builderprojcet_temp t1
   	]]>
		</createView>
	</changeSet>

	<changeSet id="355" author="rohith.s">
		<comment>ST#1_TK#95</comment>
		<createView viewName="builderprojcet_view" replaceIfExists="true">
			<![CDATA[ 
				 SELECT t1.id,
				    t1.name,
				    t1.builderid,
				    t1.apfno,
				    t2.name AS builderidname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.registrationnumber,
				    t1.addressline1,
				    t1.addressline2,
				    t1.addressline3,
				    t1.landmark,
				    t1.areaorlocality,
				    t1.city,
				    t1.state,
				    t1.pincode,
				    t1.projecttype,
				    t1.typesofapf,
				    t1.totalunits,
				    t1.numberoftowers,
				    t1.noofindependenthouses,
				    t1.projectstartdate,
				    t1.projectenddate,
				    t1.remarks,
				    t2.segmentation,
					t1.commencementCertificateNo,  
				    t1.commenceCrtfctIssuingAuthority,      
				    t1.totalPlotArea,                    
				    t1.constructedArea,                 
				    t1.technicalDone,
				    t1.legalDone,     
				    t1.rcuDone,       
				    t1.constrctinCompletionPercentage, 
				    t1.disbursalRecommendedPercentage 
				   FROM (builderprojcet_temp t1
				     JOIN buildercompany t2 ON ((t1.builderid = t2.id)))
				UNION ALL
				 SELECT t1.id,
				    t1.name,
				    t1.builderid,
				    t1.apfno,
				    t2.name AS builderidname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.registrationnumber,
				    t1.addressline1,
				    t1.addressline2,
				    t1.addressline3,
				    t1.landmark,
				    t1.areaorlocality,
				    t1.city,
				    t1.state,
				    t1.pincode,
				    t1.projecttype,
				    t1.typesofapf,
				    t1.totalunits,
				    t1.numberoftowers,
				    t1.noofindependenthouses,
				    t1.projectstartdate,
				    t1.projectenddate,
				    t1.remarks,
				    t2.segmentation,
					t1.commencementCertificateNo,  
				    t1.commenceCrtfctIssuingAuthority,      
				    t1.totalPlotArea,                    
				    t1.constructedArea,                  
				    t1.technicalDone,
				    t1.legalDone,     
				    t1.rcuDone,       
				    t1.constrctinCompletionPercentage, 
				    t1.disbursalRecommendedPercentage
				   FROM (builderprojcet t1
				     JOIN buildercompany t2 ON ((t1.builderid = t2.id)))
				  WHERE (NOT (EXISTS ( SELECT 1
				           FROM builderprojcet_temp
				          WHERE (builderprojcet_temp.id = t1.id))))
		  	]]>
		</createView>
	</changeSet>

	<changeSet id="356" author="lakshmi.n">
		<comment>PSD # 148448</comment>
		<createView viewName="customerempdetails_aview" replaceIfExists="true">
			<![CDATA[ 
				 SELECT ce.custempid,
						ce.custid,
						ce.custempname,
						ce.custempfrom,
						ce.custempto,
						ce.custempdesg,
						de.gendesgdesc AS lovdesccustempdesgname,
						ce.custempdept,
						dp.gendeptdesc AS lovdesccustempdeptname,
						ce.custemptype,
						et.emptypedesc AS lovdesccustemptypename,
						ce.version,
						ce.lastmntby,
						ce.lastmnton,
						ce.recordstatus,
						ce.rolecode,
						ce.nextrolecode,
						ce.taskid,
						ce.nexttaskid,
						ce.recordtype,
						ce.workflowid,
						emp.empname AS lovdesccustempname,
						ce.currentemployer,
						ce.companyname,
						emp.empindustry as lovdescempindustry
						FROM customerempdetails ce
							JOIN rmtgendesignations de ON ce.custempdesg  = de.gendesignation 
							LEFT JOIN rmtgendepartments dp ON ce.custempdept  = dp.gendepartment 
							JOIN rmtemptypes et ON ce.custemptype  = et.emptype 
							LEFT JOIN employerdetail emp ON ce.custempname = emp.employerid
		  	]]>
		</createView>
	</changeSet>

	<changeSet id="357" author="lakshmi.n">
		<comment>PSD # 148448</comment>
		<createView viewName="customerempdetails_view" replaceIfExists="true">
			<![CDATA[ 
					SELECT ce.custempid,
					ce.custid,
					ce.custempname,
					ce.custempfrom,
					ce.custempto,
					ce.custempdesg,
					de.gendesgdesc AS lovdesccustempdesgname,
					ce.custempdept,
					dp.gendeptdesc AS lovdesccustempdeptname,
					ce.custemptype,
					et.emptypedesc AS lovdesccustemptypename,
					ce.version,
					ce.lastmntby,
					ce.lastmnton,
					ce.recordstatus,
					ce.rolecode,
					ce.nextrolecode,
					ce.taskid,
					ce.nexttaskid,
					ce.recordtype,
					ce.workflowid,
					emp.empname AS lovdesccustempname,
					ce.currentemployer,
					ce.companyname,
					emp.empindustry as lovdescempindustry
					FROM customerempdetails_temp ce
						JOIN rmtgendesignations de ON ce.custempdesg  = de.gendesignation 
						LEFT JOIN rmtgendepartments dp ON ce.custempdept  = dp.gendepartment 
						JOIN rmtemptypes et ON ce.custemptype  = et.emptype 
						LEFT JOIN employerdetail emp ON ce.custempname = emp.employerid
					UNION ALL
					SELECT ce.custempid,
					ce.custid,
					ce.custempname,
					ce.custempfrom,
					ce.custempto,
					ce.custempdesg,
					de.gendesgdesc AS lovdesccustempdesgname,
					ce.custempdept,
					dp.gendeptdesc AS lovdesccustempdeptname,
					ce.custemptype,
					et.emptypedesc AS lovdesccustemptypename,
					ce.version,
					ce.lastmntby,
					ce.lastmnton,
					ce.recordstatus,
					ce.rolecode,
					ce.nextrolecode,
					ce.taskid,
					ce.nexttaskid,
					ce.recordtype,
					ce.workflowid,
					emp.empname AS lovdesccustempname,
					ce.currentemployer,
					ce.companyname,
					emp.empindustry as lovdescempindustry
				FROM customerempdetails ce
					JOIN rmtgendesignations de ON ce.custempdesg  = de.gendesignation 
					LEFT JOIN rmtgendepartments dp ON ce.custempdept  = dp.gendepartment 
					JOIN rmtemptypes et ON ce.custemptype  = et.emptype 
					LEFT JOIN employerdetail emp ON ce.custempname = emp.employerid
					WHERE NOT (EXISTS ( SELECT 1 AS expr1
					FROM customerempdetails_temp
					WHERE customerempdetails_temp.custempid = ce.custempid))
			
			]]>
		</createView>
	</changeSet>
	<changeSet id="358" author="rajesh.n">
		<comment>ST#2_TK#24</comment>
		<createView viewName="rmtfinancetypes_view" replaceIfExists="true">
			<![CDATA[ 
		SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc AS lovdescfincontingentactypename,
			t5.actypedesc AS lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc AS lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc AS lovdescfinbankcontactypename,
			t39.actypedesc AS lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc AS lovdescfindivisionname,
			t48.entitycode AS lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc AS lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode AS downpayrulecode,
			t59.rulecodedesc AS downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode AS grcpricingmethoddesc,
			t68.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc AS fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes
			FROM rmtfinancetypes_temp t1
				LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
				LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
				LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
				LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
				LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
				LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
				LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
				LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
				LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
				LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
				LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
				LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
				UNION ALL
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc AS lovdescfincontingentactypename,
			t5.actypedesc AS lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc AS lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc AS lovdescfinbankcontactypename,
			t39.actypedesc AS lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc AS lovdescfindivisionname,
			t48.entitycode AS lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc AS lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode AS downpayrulecode,
			t59.rulecodedesc AS downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode AS grcpricingmethoddesc,
			t68.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc AS fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes
				FROM rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM rmtfinancetypes_temp
			WHERE rmtfinancetypes_temp.fintype = t1.fintype))
			]]>
		</createView>
	</changeSet>


	<changeSet id="359_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_aview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="359" author="rajesh.n">
		<comment>ST#2_TK#24</comment>
		<createView viewName="rmtfinancetypes_aview" replaceIfExists="true">
		<![CDATA[ 
		SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc AS lovdescfincontingentactypename,
			t5.actypedesc AS lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc AS lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc AS lovdescfinbankcontactypename,
			t39.actypedesc AS lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc AS lovdescfindivisionname,
			t48.entitycode AS lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc AS lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode AS downpayrulecode,
			t59.rulecodedesc AS downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode AS grcpricingmethoddesc,
			t68.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.alwmaxdisbcheckreq,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc AS fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes	
			FROM rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			]]>
		</createView>
	</changeSet>


	<changeSet id="359_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="360" author="rajesh.n">
		<comment>ST#2_TK#24</comment>
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
		<![CDATA[ 
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisactive,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finrepaypftonfrq,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t3.divisioncodedesc AS lovdescfindivisionname,
			t1.finsuspactype,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.remarks,
			t4.policydesc AS lovdescdftsteppolicyname,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t5.rulecode AS downpayrulecode,
			t5.rulecodedesc AS downpayruledesc,
			t1.applygrcpricing,
			t1.applyrpypricing,
			t6.rulecode AS grcpricingmethoddesc,
			t7.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t4.steptype AS dftsteppolicytype,
			t1.manualschedule,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.alwmaxdisbcheckreq,
			t1.productcategory,
			t1.rpyhierarchy,
			t1.developerfinance,
			t3.entitycode AS lovdescentitycode,
			t8.entitydesc AS lovdescentitydesc,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.finisalwpartialrpy,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.alwearlypaymethods,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes
			FROM rmtfinancetypes t1
			JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
			LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
			LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
			LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
			LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
			LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
		]]>
		</createView>
	</changeSet>

	<changeSet id="361" author="Madhuri.N">
		<comment>ST#1 and TK#25</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
		  <![CDATA[
				SELECT t1.custcif,
					t1.custfname,
					t1.custlname,
					t1.custdob,
					t1.custcrcpr,
					t1.mobilenumber,
					t1.custnationality,
					t1.custpassportno,
					t1.employer,
					t1.custisactive,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.nationalitydesc AS lovdescnationalitydesc,
					t3.empname AS lovdescempname,
					t1.custctgcode,
					t1.custcin,
					t1.custaadhaar,
					t1.custcompname,
					t1.reasoncode,
					t3.empindustry,
					t1.gender,
					t1.addresstype,
					t1.housenumber,
					t1.country,
					t1.state,
					t1.city,
					t1.street,
					t1.pincode,
					t1.remarks,
					t1.vid,
					t1.dl,
					t1.forged_document_type,
					t1.product_applied_in_other_fi,
					t1.Source,
					t1.Branch,
					t1.AdditionalDateField,
					t1.AdditionalField1,
					t1.AdditionalField2,
					t1.AdditionalField3,
					t1.AdditionalField4,
					t1.AdditionalField5,
					t1.AdditionalField6,
					t1.AdditionalField7,
					t1.AdditionalField8,
					t1.AdditionalField9,
					t1.AdditionalField10,
					t1.AdditionalField11,
					t1.AdditionalField12,
					t1.AdditionalField13			
				FROM blacklistcustomer_temp t1
					LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
					LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				UNION ALL
				SELECT t1.custcif,
					t1.custfname,
					t1.custlname,
					t1.custdob,
					t1.custcrcpr,
					t1.mobilenumber,
					t1.custnationality,
					t1.custpassportno,
					t1.employer,
					t1.custisactive,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.nationalitydesc AS lovdescnationalitydesc,
					t3.empname AS lovdescempname,
					t1.custctgcode,
					t1.custcin,
					t1.custaadhaar,
					t1.custcompname,
					t1.reasoncode,
					t3.empindustry,
					t1.gender,
					t1.addresstype,
					t1.housenumber,
					t1.country,
					t1.state,
					t1.city,
					t1.street,
					t1.pincode,
					t1.remarks,
					t1.vid,
					t1.dl,
					t1.forged_document_type,
					t1.product_applied_in_other_fi,
					t1.Source,
					t1.Branch,
					t1.AdditionalDateField,
					t1.AdditionalField1,
					t1.AdditionalField2,
					t1.AdditionalField3,
					t1.AdditionalField4,
					t1.AdditionalField5,
					t1.AdditionalField6,
					t1.AdditionalField7,
					t1.AdditionalField8,
					t1.AdditionalField9,
					t1.AdditionalField10,
					t1.AdditionalField11,
					t1.AdditionalField12,
					t1.AdditionalField13			
				FROM blacklistcustomer t1
					LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
					LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				WHERE NOT (EXISTS ( SELECT 1
						FROM blacklistcustomer_temp
						WHERE blacklistcustomer_temp.custcif = t1.custcif))
			]]>
		</createView>
	</changeSet>

	<changeSet id="362" author="rohith.s">
		<comment>ST#1 TK#96</comment>
		<createView viewName="projectunits_aview" replaceIfExists="true">
		  <![CDATA[
					 SELECT t1.unitid,
					    t1.unittype,
					    t1.tower,
					    t1.floornumber,
					    t1.unitnumber,
					    t1.unitarea,
					    t1.rate,
					    t1.price,
					    t1.othercharges,
					    t1.totalprice,
					    t1.unitrpsf,
					    t1.unitplotarea,
					    t1.unitsuperbuiltup,
					    t1.projectid,
					    t1.version,
					    t1.lastmntby,
					    t1.recordstatus,
					    t1.rolecode,
					    t1.nextrolecode,
					    t1.taskid,
					    t1.nexttaskid,
					    t1.recordtype,
					    t1.workflowid,
						t1.unitAreaConsidered,               
					    t1.carpetArea,                        
					    t1.unitBuiltUpArea,                   
					    t1.rateConsidered, 	                  
					    t1.rateAsPerCarpetArea,               
					    t1.rateAsPerBuiltUpArea,              
					    t1.rateAsPerSuperBuiltUpArea,         
					    t1.rateAsPerBranchAPF,                
					    t1.rateAsPerCostSheet,                
					    t1.floorRiseCharges,                  
					    t1.openCarParkingCharges,             
					    t1.closedCarParkingCharges,          
					    t1.gst ,                              
					    t1.remarks                           
					   FROM (projectunits t1
					     JOIN builderprojcet t2 ON ((t1.projectid = t2.id)))
						 	]]>
		</createView>
	</changeSet>

	<changeSet id="363" author="rohith.s">
		<comment>ST#1 TK#96</comment>
		<createView viewName="projectunits_view" replaceIfExists="true">
		  <![CDATA[	 
				 SELECT t1.unitid,
				    t1.unittype,
				    t1.tower,
				    t1.floornumber,
				    t1.unitnumber,
				    t1.unitarea,
				    t1.rate,
				    t1.price,
				    t1.othercharges,
				    t1.totalprice,
				    t1.unitrpsf,
				    t1.unitplotarea,
				    t1.unitsuperbuiltup,
				    t1.projectid,
				    t1.version,
				    t1.lastmnton,
				    t1.lastmntby,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
					t1.unitAreaConsidered,               
				    t1.carpetArea,                        
				    t1.unitBuiltUpArea,                   
				    t1.rateConsidered, 	                  
				    t1.rateAsPerCarpetArea,               
				    t1.rateAsPerBuiltUpArea,              
				    t1.rateAsPerSuperBuiltUpArea,         
				    t1.rateAsPerBranchAPF,                
				    t1.rateAsPerCostSheet,                
				    t1.floorRiseCharges,                  
				    t1.openCarParkingCharges,             
				    t1.closedCarParkingCharges,          
				    t1.gst ,                              
				    t1.remarks                           
				   FROM (projectunits_temp t1
				     JOIN builderprojcet_temp t2 ON ((t1.projectid = t2.id)))
				UNION ALL
				 SELECT t1.unitid,
				    t1.unittype,
				    t1.tower,
				    t1.floornumber,
				    t1.unitnumber,
				    t1.unitarea,
				    t1.rate,
				    t1.price,
				    t1.othercharges,
				    t1.totalprice,
				    t1.unitrpsf,
				    t1.unitplotarea,
				    t1.unitsuperbuiltup,
				    t1.projectid,
				    t1.version,
				    t1.lastmnton,
				    t1.lastmntby,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.unitAreaConsidered,               
				    t1.carpetArea,                        
				    t1.unitBuiltUpArea,                   
				    t1.rateConsidered, 	                  
				    t1.rateAsPerCarpetArea,               
				    t1.rateAsPerBuiltUpArea,              
				    t1.rateAsPerSuperBuiltUpArea,         
				    t1.rateAsPerBranchAPF,                
				    t1.rateAsPerCostSheet,                
				    t1.floorRiseCharges,                  
				    t1.openCarParkingCharges,             
				    t1.closedCarParkingCharges,          
				    t1.gst ,                              
				    t1.remarks                           
				   FROM (projectunits t1
				     JOIN builderprojcet t2 ON ((t1.projectid = t2.id)))
				  WHERE (NOT (EXISTS ( SELECT 1
				           FROM projectunits_temp
				          WHERE (projectunits_temp.unitid = t1.unitid))))
						  	]]>
		</createView>
	</changeSet>

	<changeSet id="364" author="rohith.s">
		<comment>ST#1 TK#170</comment>
		<createView viewName="builderprojcet_aview" replaceIfExists="true">
		  <![CDATA[	 
			SELECT t1.id,
					t1.name,
					t1.builderid,
					t1.apfno,
					t2.name AS builderidname,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.registrationnumber,
					t1.addressline1,
					t1.addressline2,
					t1.addressline3,
					t1.landmark,
					t1.areaorlocality,
					t1.city,
					t1.state,
					t1.pincode,
					t1.projecttype,
					t1.typesofapf,
					t1.totalunits,
					t1.numberoftowers,
					t1.noofindependenthouses,
					t1.projectstartdate,
					t1.projectenddate,
					t1.remarks,
					t2.segmentation,
					t1.commencementcertificateno,
					t1.commencecrtfctissuingauthority,
					t1.totalplotarea,
					t1.constructedarea,
					t1.technicaldone,
					t1.legaldone,
					t1.rcudone,
					t1.constrctincompletionpercentage,
					t1.disbursalrecommendedpercentage,
					t1.beneficiaryName,
					t1.bankBranchID,
					t1.bankName,
					t1.branch,
					t1.accountNo
					FROM builderprojcet t1
					JOIN buildercompany t2 ON t1.builderid = t2.id
					]]>
		</createView>
	</changeSet>

	<changeSet id="365" author="rohith.s">
		<comment>ST#1 TK#170</comment>
		<createView viewName="builderprojcet_view" replaceIfExists="true">
		  <![CDATA[	

				SELECT t1.id,
					t1.name,
					t1.builderid,
					t1.apfno,
					t2.name AS builderidname,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.registrationnumber,
					t1.addressline1,
					t1.addressline2,
					t1.addressline3,
					t1.landmark,
					t1.areaorlocality,
					t1.city,
					t1.state,
					t1.pincode,
					t1.projecttype,
					t1.typesofapf,
					t1.totalunits,
					t1.numberoftowers,
					t1.noofindependenthouses,
					t1.projectstartdate,
					t1.projectenddate,
					t1.remarks,
					t2.segmentation,
					t1.commencementcertificateno,
					t1.commencecrtfctissuingauthority,
					t1.totalplotarea,
					t1.constructedarea,
					t1.technicaldone,
					t1.legaldone,
					t1.rcudone,
					t1.constrctincompletionpercentage,
					t1.disbursalrecommendedpercentage,
					t1.beneficiaryName,
					t1.bankBranchID,
					t1.bankName,
					t1.branch,
					t1.accountNo
					FROM builderprojcet_temp t1
					JOIN buildercompany t2 ON t1.builderid = t2.id
				UNION ALL
				SELECT t1.id,
					t1.name,
					t1.builderid,
					t1.apfno,
					t2.name AS builderidname,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.registrationnumber,
					t1.addressline1,
					t1.addressline2,
					t1.addressline3,
					t1.landmark,
					t1.areaorlocality,
					t1.city,
					t1.state,
					t1.pincode,
					t1.projecttype,
					t1.typesofapf,
					t1.totalunits,
					t1.numberoftowers,
					t1.noofindependenthouses,
					t1.projectstartdate,
					t1.projectenddate,
					t1.remarks,
					t2.segmentation,
					t1.commencementcertificateno,
					t1.commencecrtfctissuingauthority,
					t1.totalplotarea,
					t1.constructedarea,
					t1.technicaldone,
					t1.legaldone,
					t1.rcudone,
					t1.constrctincompletionpercentage,
					t1.disbursalrecommendedpercentage,
					t1.beneficiaryName,
					t1.bankBranchID,
					t1.bankName,
					t1.branch,
					t1.accountNo
					FROM builderprojcet t1
					JOIN buildercompany t2 ON t1.builderid = t2.id
					WHERE NOT (EXISTS ( SELECT 1
						FROM builderprojcet_temp
						WHERE builderprojcet_temp.id = t1.id))
					]]>
		</createView>
	</changeSet>

	<changeSet id="366" author="rohith.s">
		<comment>ST#1 TK#170</comment>
		<createView viewName="builderprojcet_tview" replaceIfExists="true">
		  <![CDATA[	

			SELECT  t1.id,
					t1.name,
					t1.builderid,
					t1.apfno,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.commencementcertificateno,
					t1.commencecrtfctissuingauthority,
					t1.totalplotarea,
					t1.constructedarea,
					t1.technicaldone,
					t1.legaldone,
					t1.rcudone,
					t1.constrctincompletionpercentage,
					t1.disbursalrecommendedpercentage,
					t1.beneficiaryName,
					t1.bankBranchID,
					t1.bankName,
					t1.branch,
					t1.accountNo
					FROM builderprojcet_temp t1
				]]>
		</createView>
	</changeSet>



	<changeSet id="367" author="rohith.s">
		<comment>ST#1 TK#170</comment>
		<createView viewName="builderprojcet_aview" replaceIfExists="true">
		  <![CDATA[	
				SELECT t1.id,
					t1.name,
					t1.builderid,
					t1.apfno,
					t2.name AS builderidname,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.registrationnumber,
					t1.addressline1,
					t1.addressline2,
					t1.addressline3,
					t1.landmark,
					t1.areaorlocality,
					t1.city,
					t1.state,
					t1.pincode,
					t1.projecttype,
					t1.typesofapf,
					t1.totalunits,
					t1.numberoftowers,
					t1.noofindependenthouses,
					t1.projectstartdate,
					t1.projectenddate,
					t1.remarks,
					t2.segmentation,
					t1.commencementcertificateno,
					t1.commencecrtfctissuingauthority,
					t1.totalplotarea,
					t1.constructedarea,
					t1.technicaldone,
					t1.legaldone,
					t1.rcudone,
					t1.constrctincompletionpercentage,
					t1.disbursalrecommendedpercentage,
					t1.beneficiaryname,
					t1.bankbranchid,
					t1.bankname,
					t1.branch,
					t1.accountno,
					t4.bankName AS branchbankname,
					t3.branchdesc,
					t3.ifsc
					FROM builderprojcet t1
					JOIN buildercompany t2 ON t1.builderid = t2.id
					LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
					LEFT JOIN bmtbankdetail t4 ON t4.bankcode = t3.bankcode
				]]>
		</createView>
	</changeSet>

	<changeSet id="368" author="rohith.s">
		<comment>ST#1 TK#170</comment>
		<createView viewName="builderprojcet_tview" replaceIfExists="true">
		  <![CDATA[	
				SELECT t1.id,
					t1.name,
					t1.builderid,
					t1.apfno,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t1.commencementcertificateno,
					t1.commencecrtfctissuingauthority,
					t1.totalplotarea,
					t1.constructedarea,
					t1.technicaldone,
					t1.legaldone,
					t1.rcudone,
					t1.constrctincompletionpercentage,
					t1.disbursalrecommendedpercentage,
					t1.beneficiaryname,
					t1.bankbranchid,
					t1.bankname,
					t1.branch,
					t1.accountno,
					t4.bankName AS branchbankname,
					t3.branchdesc,
					t3.ifsc
					FROM builderprojcet_temp t1
					LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
					LEFT JOIN bmtbankdetail t4 ON t4.bankcode = t3.bankcode
			]]>
		</createView>
	</changeSet>

	<changeSet id="369" author="rohith.s">
		<comment>ST#1 TK#170</comment>
		<createView viewName="builderprojcet_view" replaceIfExists="true">
		  <![CDATA[	
	
			SELECT t1.id,
				t1.name,
				t1.builderid,
				t1.apfno,
				t2.name AS builderidname,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.registrationnumber,
				t1.addressline1,
				t1.addressline2,
				t1.addressline3,
				t1.landmark,
				t1.areaorlocality,
				t1.city,
				t1.state,
				t1.pincode,
				t1.projecttype,
				t1.typesofapf,
				t1.totalunits,
				t1.numberoftowers,
				t1.noofindependenthouses,
				t1.projectstartdate,
				t1.projectenddate,
				t1.remarks,
				t2.segmentation,
				t1.commencementcertificateno,
				t1.commencecrtfctissuingauthority,
				t1.totalplotarea,
				t1.constructedarea,
				t1.technicaldone,
				t1.legaldone,
				t1.rcudone,
				t1.constrctincompletionpercentage,
				t1.disbursalrecommendedpercentage,
				t1.beneficiaryname,
				t1.bankbranchid,
				t1.bankname,
				t1.branch,
				t1.accountno,
				t4.bankName AS branchbankname,
				t3.branchdesc,
				t3.ifsc
				FROM builderprojcet_temp t1
				JOIN buildercompany t2 ON t1.builderid = t2.id
				LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
				LEFT JOIN bmtbankdetail t4 ON t4.bankcode = t3.bankcode
			UNION ALL
				SELECT t1.id,
				t1.name,
				t1.builderid,
				t1.apfno,
				t2.name AS builderidname,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.registrationnumber,
				t1.addressline1,
				t1.addressline2,
				t1.addressline3,
				t1.landmark,
				t1.areaorlocality,
				t1.city,
				t1.state,
				t1.pincode,
				t1.projecttype,
				t1.typesofapf,
				t1.totalunits,
				t1.numberoftowers,
				t1.noofindependenthouses,
				t1.projectstartdate,
				t1.projectenddate,
				t1.remarks,
				t2.segmentation,
				t1.commencementcertificateno,
				t1.commencecrtfctissuingauthority,
				t1.totalplotarea,
				t1.constructedarea,
				t1.technicaldone,
				t1.legaldone,
				t1.rcudone,
				t1.constrctincompletionpercentage,
				t1.disbursalrecommendedpercentage,
				t1.beneficiaryname,
				t1.bankbranchid,
				t1.bankname,
				t1.branch,
				t1.accountno,
				t4.bankName AS branchbankname,
				t3.branchdesc,
				t3.ifsc
	
				FROM builderprojcet t1
				JOIN buildercompany t2 ON t1.builderid = t2.id
				LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
				LEFT JOIN bmtbankdetail t4 ON t4.bankcode = t3.bankcode
				WHERE NOT (EXISTS ( SELECT 1
				FROM builderprojcet_temp
				WHERE builderprojcet_temp.id = t1.id))
				]]>
		</createView>
	</changeSet>

	<changeSet id="370.1" author="SaiDurga.V">
		<comment>ST#4 TK#156</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
		  <![CDATA[	
				SELECT t1.custcif,
					t1.custfname,
					t1.custlname,
					t1.custdob,
					t1.custcrcpr,
					t1.mobilenumber,
					t1.custnationality,
					t1.custpassportno,
					t1.employer,
					t1.custisactive,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.nationalitydesc AS lovdescnationalitydesc,
					t3.empname AS lovdescempname,
					t1.custctgcode,
					t1.custcin,
					t1.custaadhaar,
					t1.custcompname,
					t1.reasoncode,
					t3.empindustry,
					t1.gender,
					t1.addresstype,
					t1.housenumber,
					t1.country,
					t1.state,
					t1.city,
					t1.street,
					t1.pincode,
					t1.remarks,
					t1.vid,
					t1.dl,
					t1.forged_document_type,
					t1.product_applied_in_other_fi,
					t1.source,
					t1.branch,
					t1.AdditionalField0,
					t1.additionalfield1,
					t1.additionalfield2,
					t1.additionalfield3,
					t1.additionalfield4,
					t1.additionalfield5,
					t1.additionalfield6,
					t1.additionalfield7,
					t1.additionalfield8,
					t1.additionalfield9,
					t1.additionalfield10,
					t1.additionalfield11,
					t1.additionalfield12,
					t1.additionalfield13,
					t1.address
					FROM blacklistcustomer_temp t1
					LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
					LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
					UNION ALL
				SELECT t1.custcif,
					t1.custfname,
					t1.custlname,
					t1.custdob,
					t1.custcrcpr,
					t1.mobilenumber,
					t1.custnationality,
					t1.custpassportno,
					t1.employer,
					t1.custisactive,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.nationalitydesc AS lovdescnationalitydesc,
					t3.empname AS lovdescempname,
					t1.custctgcode,
					t1.custcin,
					t1.custaadhaar,
					t1.custcompname,
					t1.reasoncode,
					t3.empindustry,
					t1.gender,
					t1.addresstype,
					t1.housenumber,
					t1.country,
					t1.state,
					t1.city,
					t1.street,
					t1.pincode,
					t1.remarks,
					t1.vid,
					t1.dl,
					t1.forged_document_type,
					t1.product_applied_in_other_fi,
					t1.source,
					t1.branch,
					t1.AdditionalField0,
					t1.additionalfield1,
					t1.additionalfield2,
					t1.additionalfield3,
					t1.additionalfield4,
					t1.additionalfield5,
					t1.additionalfield6,
					t1.additionalfield7,
					t1.additionalfield8,
					t1.additionalfield9,
					t1.additionalfield10,
					t1.additionalfield11,
					t1.additionalfield12,
					t1.additionalfield13,
					t1.address
					FROM blacklistcustomer t1
					LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
					LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
					WHERE NOT (EXISTS ( SELECT 1
					FROM blacklistcustomer_temp
					WHERE blacklistcustomer_temp.custcif = t1.custcif))
				]]>
		</createView>
	</changeSet>

	<changeSet id="371.1" author="Madhuri.N">
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
			<![CDATA[		 
				 SELECT t1.custcif,
				    t1.custfname,
				    t1.custlname,
				    t1.custdob,
				    t1.custcrcpr,
				    t1.mobilenumber,
				    t1.custnationality,
				    t1.custpassportno,
				    t1.employer,
				    t1.custisactive,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.nationalitydesc AS lovdescnationalitydesc,
				    t3.empname AS lovdescempname,
				    t1.custctgcode,
				    t1.custcin,
				    t1.custaadhaar,
				    t1.custcompname,
				    t1.reasoncode,
				    t3.empindustry,
				    t1.gender,
				    t1.addresstype,
				    t1.housenumber,
				    t1.country,
				    t1.state,
				    t1.city,
				    t1.street,
				    t1.pincode,
				    t1.remarks,
				    t1.vid,
				    t1.dl,
				    t1.forged_document_type,
				    t1.product_applied_in_other_fi,
				    t1.source,
				    t1.branch,
				    t1.AdditionalField0,
				    t1.additionalfield1,
				    t1.additionalfield2,
				    t1.additionalfield3,
				    t1.additionalfield4,
				    t1.additionalfield5,
				    t1.additionalfield6,
				    t1.additionalfield7,
				    t1.additionalfield8,
				    t1.additionalfield9,
				    t1.additionalfield10,
				    t1.additionalfield11,
				    t1.additionalfield12,
				    t1.additionalfield13,
				    t1.address
				   FROM ((blacklistcustomer_temp t1
				     LEFT JOIN bmtnationalitycodes t2 ON ((t2.nationalitycode = t1.custnationality)))
				     LEFT JOIN employerdetail t3 ON ((t3.employerid = t1.employer)))
				UNION ALL
				 SELECT t1.custcif,
				    t1.custfname,
				    t1.custlname,
				    t1.custdob,
				    t1.custcrcpr,
				    t1.mobilenumber,
				    t1.custnationality,
				    t1.custpassportno,
				    t1.employer,
				    t1.custisactive,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.nationalitydesc AS lovdescnationalitydesc,
				    t3.empname AS lovdescempname,
				    t1.custctgcode,
				    t1.custcin,
				    t1.custaadhaar,
				    t1.custcompname,
				    t1.reasoncode,
				    t3.empindustry,
				    t1.gender,
				    t1.addresstype,
				    t1.housenumber,
				    t1.country,
				    t1.state,
				    t1.city,
				    t1.street,
				    t1.pincode,
				    t1.remarks,
				    t1.vid,
				    t1.dl,
				    t1.forged_document_type,
				    t1.product_applied_in_other_fi,
				    t1.source,
				    t1.branch,
				    t1.AdditionalField0,
				    t1.additionalfield1,
				    t1.additionalfield2,
				    t1.additionalfield3,
				    t1.additionalfield4,
				    t1.additionalfield5,
				    t1.additionalfield6,
				    t1.additionalfield7,
				    t1.additionalfield8,
				    t1.additionalfield9,
				    t1.additionalfield10,
				    t1.additionalfield11,
				    t1.additionalfield12,
				    t1.additionalfield13,
				    t1.address
				   FROM ((blacklistcustomer t1
				     LEFT JOIN bmtnationalitycodes t2 ON ((t2.nationalitycode = t1.custnationality)))
				     LEFT JOIN employerdetail t3 ON ((t3.employerid = t1.employer)))
				  WHERE (NOT (EXISTS ( SELECT 1
				           FROM blacklistcustomer_temp
				          WHERE ((blacklistcustomer_temp.custcif) = (t1.custcif)))))
				]]>
		</createView>
	</changeSet>

	<changeSet id="372" author="Venkatesh.Ch">
		<createView viewName="customerempdetails_view" replaceIfExists="true">
			<![CDATA[	
			SELECT ce.custempid,
				ce.custid,
				ce.custempname,
				ce.custempfrom,
				ce.custempto,
				ce.custempdesg,
				de.gendesgdesc AS lovdesccustempdesgname,
				ce.custempdept,
				dp.gendeptdesc AS lovdesccustempdeptname,
				ce.custemptype,
				et.emptypedesc AS lovdesccustemptypename,
				ce.version,
				ce.lastmntby,
				ce.lastmnton,
				ce.recordstatus,
				ce.rolecode,
				ce.nextrolecode,
				ce.taskid,
				ce.nexttaskid,
				ce.recordtype,
				ce.workflowid,
				emp.empname AS lovdesccustempname,
				ce.currentemployer,
				ce.companyname,
				emp.empindustry AS lovdescempindustry,
				emp. empcategory as lovDescEmpCategory
				FROM customerempdetails_temp ce
				JOIN rmtgendesignations de ON ce.custempdesg = de.gendesignation
				LEFT JOIN rmtgendepartments dp ON ce.custempdept = dp.gendepartment
				JOIN rmtemptypes et ON ce.custemptype = et.emptype
				LEFT JOIN employerdetail emp ON ce.custempname = emp.employerid
		UNION ALL
			SELECT ce.custempid,
				ce.custid,
				ce.custempname,
				ce.custempfrom,
				ce.custempto,
				ce.custempdesg,
				de.gendesgdesc AS lovdesccustempdesgname,
				ce.custempdept,
				dp.gendeptdesc AS lovdesccustempdeptname,
				ce.custemptype,
				et.emptypedesc AS lovdesccustemptypename,
				ce.version,
				ce.lastmntby,
				ce.lastmnton,
				ce.recordstatus,
				ce.rolecode,
				ce.nextrolecode,
				ce.taskid,
				ce.nexttaskid,
				ce.recordtype,
				ce.workflowid,
				emp.empname AS lovdesccustempname,
				ce.currentemployer,
				ce.companyname,
				emp.empindustry AS lovdescempindustry,
				emp. empcategory as lovDescEmpCategory
				FROM customerempdetails ce
				JOIN rmtgendesignations de ON ce.custempdesg = de.gendesignation
				LEFT JOIN rmtgendepartments dp ON ce.custempdept = dp.gendepartment
				JOIN rmtemptypes et ON ce.custemptype = et.emptype
				LEFT JOIN employerdetail emp ON ce.custempname = emp.employerid
				WHERE NOT (EXISTS ( SELECT 1 AS expr1
				FROM customerempdetails_temp
				WHERE customerempdetails_temp.custempid = ce.custempid))
				]]>
		</createView>
	</changeSet>

	<changeSet id="373" author="Venkatesh.Ch">
		<createView viewName="customerempdetails_aview" replaceIfExists="true">
			<![CDATA[	
				SELECT ce.custempid,
					ce.custid,
					ce.custempname,
					ce.custempfrom,
					ce.custempto,
					ce.custempdesg,
					de.gendesgdesc AS lovdesccustempdesgname,
					ce.custempdept,
					dp.gendeptdesc AS lovdesccustempdeptname,
					ce.custemptype,
					et.emptypedesc AS lovdesccustemptypename,
					ce.version,
					ce.lastmntby,
					ce.lastmnton,
					ce.recordstatus,
					ce.rolecode,
					ce.nextrolecode,
					ce.taskid,
					ce.nexttaskid,
					ce.recordtype,
					ce.workflowid,
					emp.empname AS lovdesccustempname,
					ce.currentemployer,
					ce.companyname,
					emp.empindustry AS lovdescempindustry,
					emp.empcategory as lovDescEmpCategory
					FROM customerempdetails ce
					JOIN rmtgendesignations de ON ce.custempdesg = de.gendesignation
					LEFT JOIN rmtgendepartments dp ON ce.custempdept = dp.gendepartment
					JOIN rmtemptypes et ON ce.custemptype = et.emptype
					LEFT JOIN employerdetail emp ON ce.custempname = emp.employerid
					]]>
		</createView>
	</changeSet>


	<changeSet id="374" author="Venkatesh.Ch">
		<createView viewName="customerbankinfo_aview" replaceIfExists="true">
			<![CDATA[
				  SELECT t1.bankid,
				    t1.custid,
				    t1.bankname,
				    t1.accountnumber,
				    t1.accounttype,
				    t1.salaryaccount,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t3.bankname AS lovdescbankname,
				    t4.valuedesc AS lovdescaccounttype,
				    t1.credittranno,
				    t1.credittranamt,
				    t1.credittranavg,
				    t1.debittranno,
				    t1.debittranamt,
				    t1.cashdepositno,
				    t1.cashdepositamt,
				    t1.cashwithdrawalno,
				    t1.cashwithdrawalamt,
				    t1.chqdepositno,
				    t1.chqdepositamt,
				    t1.chqissueno,
				    t1.chqissueamt,
				    t1.inwardchqbounceno,
				    t1.outwardchqbounceno,
				    t1.eodbalmin,
				    t1.eodbalmax,
				    t1.eodbalavg,
				    t1.bankbranch,
				    t1.fromdate,
				    t1.todate,
				    t1.repaymentfrom,
				    t1.noofmonthsbanking,
				    t1.lwowratio,
				    t1.cclimit,
				    t1.typeofbanks,
				    t1.accountopeningdate
				   FROM ((customerbankinfo t1
				     JOIN bmtbankdetail t3 ON (((t3.bankcode) = (t1.bankname))))
				     JOIN rmtlovfielddetail t4 ON ((((t4.fieldcodevalue) = (t1.accounttype)) AND ((t4.fieldcode) ='ACC_TYPE'))))
				]]>
		</createView>
	</changeSet>

	<changeSet id="375" author="Venkatesh.Ch">
		<createView viewName="customerbankinfo_view" replaceIfExists="true">
			<![CDATA[	 
				  SELECT t1.bankid,
				    t1.custid,
				    t1.bankname,
				    t1.accountnumber,
				    t1.accounttype,
				    t1.salaryaccount,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t3.bankname AS lovdescbankname,
				    t4.valuedesc AS lovdescaccounttype,
				    t1.credittranno,
				    t1.credittranamt,
				    t1.credittranavg,
				    t1.debittranno,
				    t1.debittranamt,
				    t1.cashdepositno,
				    t1.cashdepositamt,
				    t1.cashwithdrawalno,
				    t1.cashwithdrawalamt,
				    t1.chqdepositno,
				    t1.chqdepositamt,
				    t1.chqissueno,
				    t1.chqissueamt,
				    t1.inwardchqbounceno,
				    t1.outwardchqbounceno,
				    t1.eodbalmin,
				    t1.eodbalmax,
				    t1.eodbalavg,
				    t1.bankbranch,
				    t1.fromdate,
				    t1.todate,
				    t1.repaymentfrom,
				    t1.noofmonthsbanking,
				    t1.lwowratio,
				    t1.cclimit,
				    t1.typeofbanks,
				    t1.accountopeningdate
				   FROM ((customerbankinfo_temp t1
				     JOIN bmtbankdetail t3 ON (((t3.bankcode) = (t1.bankname))))
				     JOIN rmtlovfielddetail t4 ON ((((t4.fieldcodevalue) = (t1.accounttype)) AND ((t4.fieldcode) ='ACC_TYPE'))))
				UNION ALL
				 SELECT t1.bankid,
				    t1.custid,
				    t1.bankname,
				    t1.accountnumber,
				    t1.accounttype,
				    t1.salaryaccount,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t3.bankname AS lovdescbankname,
				    t4.valuedesc AS lovdescaccounttype,
				    t1.credittranno,
				    t1.credittranamt,
				    t1.credittranavg,
				    t1.debittranno,
				    t1.debittranamt,
				    t1.cashdepositno,
				    t1.cashdepositamt,
				    t1.cashwithdrawalno,
				    t1.cashwithdrawalamt,
				    t1.chqdepositno,
				    t1.chqdepositamt,
				    t1.chqissueno,
				    t1.chqissueamt,
				    t1.inwardchqbounceno,
				    t1.outwardchqbounceno,
				    t1.eodbalmin,
				    t1.eodbalmax,
				    t1.eodbalavg,
				    t1.bankbranch,
				    t1.fromdate,
				    t1.todate,
				    t1.repaymentfrom,
				    t1.noofmonthsbanking,
				    t1.lwowratio,
				    t1.cclimit,
				    t1.typeofbanks,
				    t1.accountopeningdate
				   FROM ((customerbankinfo t1
				     JOIN bmtbankdetail t3 ON (((t3.bankcode) = (t1.bankname))))
				     JOIN rmtlovfielddetail t4 ON ((((t4.fieldcodevalue) = (t1.accounttype)) AND ((t4.fieldcode) = 'ACC_TYPE'))))
				  WHERE (NOT (EXISTS ( SELECT 1
				           FROM customerbankinfo_temp
				          WHERE (customerbankinfo_temp.bankid = t1.bankid))))
						  	]]>
		</createView>
	</changeSet>


	<changeSet id="376" author="Rajesh.N">
		<createView viewName="customerbankinfo_aview" replaceIfExists="true">
			<![CDATA[
				   SELECT t1.bankid,
				    t1.custid,
				    t1.bankname,
				    t1.accountnumber,
				    t1.accounttype,
				    t1.salaryaccount,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t3.bankname AS lovdescbankname,
				    t4.valuedesc AS lovdescaccounttype,
				    t1.credittranno,
				    t1.credittranamt,
				    t1.credittranavg,
				    t1.debittranno,
				    t1.debittranamt,
				    t1.cashdepositno,
				    t1.cashdepositamt,
				    t1.cashwithdrawalno,
				    t1.cashwithdrawalamt,
				    t1.chqdepositno,
				    t1.chqdepositamt,
				    t1.chqissueno,
				    t1.chqissueamt,
				    t1.inwardchqbounceno,
				    t1.outwardchqbounceno,
				    t1.eodbalmin,
				    t1.eodbalmax,
				    t1.eodbalavg,
				    t1.bankbranch,
				    t1.fromdate,
				    t1.todate,
				    t1.repaymentfrom,
				    t1.noofmonthsbanking,
				    t1.lwowratio,
				    t1.cclimit,
				    t1.typeofbanks,
				    t1.accountopeningdate,
				    t1.addtobenficiary,
				    t1.bankbranchid,
				    t5.ifsc,
				    t1.accountholdername,
				    t1.phonenumber,
				    t5.city,
				    t5.micr,
				    t5.branchcode
				   FROM (((customerbankinfo t1
				     JOIN bmtbankdetail t3 ON (((t3.bankcode) = (t1.bankname))))
				     JOIN rmtlovfielddetail t4 ON ((((t4.fieldcodevalue) = (t1.accounttype)) AND ((t4.fieldcode) ='ACC_TYPE'))))
				     LEFT JOIN bankbranches t5 ON ((t1.bankbranchid = t5.bankbranchid)))
						]]>
		</createView>
	</changeSet>

	<changeSet id="377" author="Rajesh.N">
		<createView viewName="customerbankinfo_view" replaceIfExists="true">
			<![CDATA[	 
			  SELECT t1.bankid,
			    t1.custid,
			    t1.bankname,
			    t1.accountnumber,
			    t1.accounttype,
			    t1.salaryaccount,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.bankname AS lovdescbankname,
			    t4.valuedesc AS lovdescaccounttype,
			    t1.credittranno,
			    t1.credittranamt,
			    t1.credittranavg,
			    t1.debittranno,
			    t1.debittranamt,
			    t1.cashdepositno,
			    t1.cashdepositamt,
			    t1.cashwithdrawalno,
			    t1.cashwithdrawalamt,
			    t1.chqdepositno,
			    t1.chqdepositamt,
			    t1.chqissueno,
			    t1.chqissueamt,
			    t1.inwardchqbounceno,
			    t1.outwardchqbounceno,
			    t1.eodbalmin,
			    t1.eodbalmax,
			    t1.eodbalavg,
			    t1.bankbranch,
			    t1.fromdate,
			    t1.todate,
			    t1.repaymentfrom,
			    t1.noofmonthsbanking,
			    t1.lwowratio,
			    t1.cclimit,
			    t1.typeofbanks,
			    t1.accountopeningdate,
			    t1.addtobenficiary,
			    t1.bankbranchid,
			    t5.ifsc,
			    t1.accountholdername,
			    t1.phonenumber,
			    t5.city,
			    t5.micr,
			    t5.branchcode
			   FROM (((customerbankinfo_temp t1
			     JOIN bmtbankdetail t3 ON (((t3.bankcode) = (t1.bankname))))
			     JOIN rmtlovfielddetail t4 ON ((((t4.fieldcodevalue) = (t1.accounttype)) AND ((t4.fieldcode) ='ACC_TYPE'))))
			     LEFT JOIN bankbranches t5 ON ((t1.bankbranchid = t5.bankbranchid)))
			UNION ALL
			 SELECT t1.bankid,
			    t1.custid,
			    t1.bankname,
			    t1.accountnumber,
			    t1.accounttype,
			    t1.salaryaccount,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.bankname AS lovdescbankname,
			    t4.valuedesc AS lovdescaccounttype,
			    t1.credittranno,
			    t1.credittranamt,
			    t1.credittranavg,
			    t1.debittranno,
			    t1.debittranamt,
			    t1.cashdepositno,
			    t1.cashdepositamt,
			    t1.cashwithdrawalno,
			    t1.cashwithdrawalamt,
			    t1.chqdepositno,
			    t1.chqdepositamt,
			    t1.chqissueno,
			    t1.chqissueamt,
			    t1.inwardchqbounceno,
			    t1.outwardchqbounceno,
			    t1.eodbalmin,
			    t1.eodbalmax,
			    t1.eodbalavg,
			    t1.bankbranch,
			    t1.fromdate,
			    t1.todate,
			    t1.repaymentfrom,
			    t1.noofmonthsbanking,
			    t1.lwowratio,
			    t1.cclimit,
			    t1.typeofbanks,
			    t1.accountopeningdate,
			    t1.addtobenficiary,
			    t1.bankbranchid,
			    t5.ifsc,
			    t1.accountholdername,
			    t1.phonenumber,
			    t5.city,
			    t5.micr,
			    t5.branchcode
			   FROM (((customerbankinfo t1
			     JOIN bmtbankdetail t3 ON (((t3.bankcode) = (t1.bankname))))
			     JOIN rmtlovfielddetail t4 ON ((((t4.fieldcodevalue) = (t1.accounttype)) AND ((t4.fieldcode) ='ACC_TYPE'))))
			     LEFT JOIN bankbranches t5 ON ((t1.bankbranchid = t5.bankbranchid)))
			  WHERE (NOT (EXISTS ( SELECT 1
			           FROM customerbankinfo_temp
			          WHERE (customerbankinfo_temp.bankid = t1.bankid))))
					  	]]>
		</createView>
	</changeSet>

	<changeSet id="378" author="Madhuri">
		<comment> ST#11_TK#42 LOAN DOWNSIZING </comment>
		<createView replaceIfExists="true" viewName="FINANCEMAINTENANCE_VIEW">
				<![CDATA[
					 SELECT t1.finreference,
						t1.finbranch,
						t1.fintype,
						t1.finccy,
						t1.schedulemethod,
						t1.profitdaysbasis,
						t1.finstartdate,
						t1.numberofterms,
						t1.custid,
						t1.finamount,
						t1.maturitydate,
						t1.finrepaymentamount,
						t1.finisactive,
						t1.blacklisted,
						t1.feechargeamt,
						t1.insuranceamt,
						t1.graceterms,
						t1.allowgrcperiod,
						t1.grcperiodenddate,
						t1.alwmultidisb,
						t1.defferments,
						t1.nextrolecode,
						t1.recordstatus,
						t1.recordtype,
						t1.allowgrcpftrvw,
						t1.allowrepayrvw,
						t1.lastrepaydate,
						t1.lastrepaypftdate,
						t1.alloweddefrpychange,
						t1.availeddefrpychange,
						t1.rcdmaintainsts,
						t1.migratedfinance,
						t1.closingstatus,
						t1.repayratebasis,
						t1.manualschedule,
						t1.fincurrassetvalue,
						t1.takeoverfinance,
						t1.nextrolloverdate,
						t1.availedunplanemi,
						t1.availedreageh,
						t1.maxunplannedemi,
						t1.maxreageholidays,
						t1.downpayment,
						t1.planemihalw,
						t1.calterms,
						t1.ratechganyday,
						t1.finassetvalue,
						t2.custcif AS lovdesccustcif,
						t2.CUSTSHRTNAME LovDescCustShrtName,
						t3.finisalwdifferment AS lovdescfinalwdeferment,
						t3.findivision AS lovdescfindivision,
						t3.fincategory AS lovdescproductcodename,
						t4.productcategory,
						COALESCE(t5.roledesc,  ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
						COALESCE(t9.noinst, 0) AS noinst,
						t1.samplingrequired,
						t1.advemiterms,
						t1.sanbsdschdle,
						t1.promotionseqid,
						t1.svamount,
						t1.cbamount,
						t1.repaypftfrq
					   FROM financemain_temp t1
						 JOIN customers t2 ON t1.custid = t2.custid
						 JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
						 LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
						 JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
						 LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
					UNION ALL
					 SELECT t1.finreference,
						t1.finbranch,
						t1.fintype,
						t1.finccy,
						t1.schedulemethod,
						t1.profitdaysbasis,
						t1.finstartdate,
						t1.numberofterms,
						t1.custid,
						t1.finamount,
						t1.maturitydate,
						t1.finrepaymentamount,
						t1.finisactive,
						t1.blacklisted,
						t1.feechargeamt,
						t1.insuranceamt,
						t1.graceterms,
						t1.allowgrcperiod,
						t1.grcperiodenddate,
						t1.alwmultidisb,
						t1.defferments,
						t1.nextrolecode,
						t1.recordstatus,
						t1.recordtype,
						t1.allowgrcpftrvw,
						t1.allowrepayrvw,
						t1.lastrepaydate,
						t1.lastrepaypftdate,
						t1.alloweddefrpychange,
						t1.availeddefrpychange,
						t1.rcdmaintainsts,
						t1.migratedfinance,
						t1.closingstatus,
						t1.repayratebasis,
						t1.manualschedule,
						t1.fincurrassetvalue,
						t1.takeoverfinance,
						t1.nextrolloverdate,
						t1.availedunplanemi,
						t1.availedreageh,
						t1.maxunplannedemi,
						t1.maxreageholidays,
						t1.downpayment,
						t1.planemihalw,
						t1.calterms,
						t1.ratechganyday,
						t1.finassetvalue,
						t2.custcif AS lovdesccustcif,
						t2.CUSTSHRTNAME LovDescCustShrtName,
						t3.finisalwdifferment AS lovdescfinalwdeferment,
						t3.findivision AS lovdescfindivision,
						t3.fincategory AS lovdescproductcodename,
						t4.productcategory,
						COALESCE(t5.roledesc,  ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
						COALESCE(t9.noinst, 0) AS noinst,
						t1.samplingrequired,
						t1.advemiterms,
						t1.sanbsdschdle,
						t1.promotionseqid,
						t1.svamount,
						t1.cbamount,
						t1.repaypftfrq
					   FROM financemain t1
						 JOIN customers t2 ON t1.custid = t2.custid
						 JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
						 LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
						 JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
						 LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
					  WHERE NOT (EXISTS ( SELECT 1 AS expr1
							   FROM financemain_temp
							  WHERE financemain_temp.finreference = t1.finreference))
				  ]]>
		</createView>
	</changeSet>

	<changeSet id="379" author="Rajesh.N">
		<comment>ST#10 TK#41</comment>
		<createView viewName="blacklistcustomer_Aview" replaceIfExists="true">
			<![CDATA[
					SELECT t1.custcif,
						t1.custfname,
						t1.custlname,
						t1.custdob,
						t1.custcrcpr,
						t1.mobilenumber,
						t1.custnationality,
						t1.custpassportno,
						t1.employer,
						t1.custisactive,
						t1.version,
						t1.lastmntby,
						t1.lastmnton,
						t1.recordstatus,
						t1.rolecode,
						t1.nextrolecode,
						t1.taskid,
						t1.nexttaskid,
						t1.recordtype,
						t1.workflowid,
						t2.nationalitydesc AS lovdescnationalitydesc,
						t3.empname AS lovdescempname,
						t1.custctgcode,
						t1.custcin,
						t1.custaadhaar,
						t1.custcompname,
						t1.reasoncode,
						t3.empindustry,
						t1.gender,
						t1.addresstype,
						t1.housenumber,
						t1.country,
						t1.state,
						t1.city,
						t1.street,
						t1.pincode,
						t1.remarks,
						t1.vid,
						t1.dl,
						t1.forged_document_type,
						t1.product_applied_in_other_fi,
						t1.source,
						t1.branch,
						t1.additionalfield0,
						t1.additionalfield1,
						t1.additionalfield2,
						t1.additionalfield3,
						t1.additionalfield4,
						t1.additionalfield5,
						t1.additionalfield6,
						t1.additionalfield7,
						t1.additionalfield8,
						t1.additionalfield9,
						t1.additionalfield10,
						t1.additionalfield11,
						t1.additionalfield12,
						t1.additionalfield13,
						t1.address,
						t1.additionalfield4 as Director1FirstName,
						t1.additionalfield4 as Director1LastName,
						t1.additionalfield5 as Director2FirstName,
						t1.additionalfield5 as Director2LastName,
						t1.additionalfield6 as Director3FirstName,
						t1.additionalfield6 as Director3LastName,
						t1.additionalfield7 as Director4FirstName,
						t1.additionalfield7 as Director4LastName,
						t1.additionalfield8 as Director5FirstName,
						t1.additionalfield8 as Director5LastName,
						t1.additionalfield9 as Director6FirstName,
						t1.additionalfield9 as Director6LastName,
						t1.additionalfield10 as Director7FirstName,
						t1.additionalfield10 as Director7LastName,
						t1.additionalfield11 as Director8FirstName,
						t1.additionalfield11 as Director8LastName,
						t1.additionalfield12 as Director9FirstName,
						t1.additionalfield12 as Director9LastName,
						t1.additionalfield13 as Director10FirstName,
						t1.additionalfield13 as Director10LastName
					   FROM blacklistcustomer t1
						 LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
						 LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
			]]>
		</createView>
	</changeSet>

	<changeSet id="380" author="rajesh.n">
		<comment>ST#10 TK#41</comment>
		<createView viewName="blacklistcustomer_Aview" replaceIfExists="true">
			<![CDATA[
					SELECT  t1.custcif,
							t1.custfname,
							t1.custlname,
							t1.custdob,
							t1.custcrcpr,
							t1.mobilenumber,
							t1.custnationality,
							t1.custpassportno,
							t1.employer,
							t1.custisactive,
							t1.version,
							t1.lastmntby,
							t1.lastmnton,
							t1.recordstatus,
							t1.rolecode,
							t1.nextrolecode,
							t1.taskid,
							t1.nexttaskid,
							t1.recordtype,
							t1.workflowid,
							t2.nationalitydesc AS lovdescnationalitydesc,
							t3.empname AS lovdescempname,
							t1.custctgcode,
							t1.custcin,
							t1.custaadhaar,
							t1.custcompname,
							t1.reasoncode,
							t3.empindustry,
							t1.gender,
							t1.addresstype,
							t1.housenumber,
							t1.country,
							t1.state,
							t1.city,
							t1.street,
							t1.pincode,
							t1.remarks,
							t1.vid,
							t1.dl,
							t1.forged_document_type,
							t1.product_applied_in_other_fi,
							t1.source,
							t1.branch,
							t1.additionalfield0,
							t1.additionalfield1,
							t1.additionalfield2,
							t1.additionalfield3,
							t1.additionalfield4,
							t1.additionalfield5,
							t1.additionalfield6,
							t1.additionalfield7,
							t1.additionalfield8,
							t1.additionalfield9,
							t1.additionalfield10,
							t1.additionalfield11,
							t1.additionalfield12,
							t1.additionalfield13,
							t1.address,
							t1.additionalfield4 as Director1FirstName,
							t1.additionalfield4 as Director1LastName,
							t1.additionalfield5 as Director2FirstName,
							t1.additionalfield5 as Director2LastName,
							t1.additionalfield6 as Director3FirstName,
							t1.additionalfield6 as Director3LastName,
							t1.additionalfield7 as Director4FirstName,
							t1.additionalfield7 as Director4LastName,
							t1.additionalfield8 as Director5FirstName,
							t1.additionalfield8 as Director5LastName,
							t1.additionalfield9 as Director6FirstName,
							t1.additionalfield9 as Director6LastName,
							t1.additionalfield10 as Director7FirstName,
							t1.additionalfield10 as Director7LastName,
							t1.additionalfield11 as Director8FirstName,
							t1.additionalfield11 as Director8LastName,
							t1.additionalfield12 as Director9FirstName,
							t1.additionalfield12 as Director9LastName,
							t1.additionalfield13 as Director10FirstName,
							t1.additionalfield13 as Director10LastName,
							t1.additionalfield2  as AssOrRelConcernFName,
							t1.additionalfield2  as AssOrRelConcernLName,
							t1.additionalfield3  as OtherSourceFirstName,
							t1.additionalfield3  as OtherSourceLastName
					FROM blacklistcustomer t1
					LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
					LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
			]]>
		</createView>
	</changeSet>

	<changeSet id="381" author="lakshmi.n" dbms="oracle,postgresql">
		<comment>ST#4_TK#7</comment>
		<createView viewName="blacklistcustomer_Aview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.custcif,
					   t1.custfname,
					   t1.custlname,
					   t1.custdob,
					   t1.custcrcpr,
					   t1.mobilenumber,
					   t1.custnationality,
					   t1.custpassportno,
					   t1.employer,
					   t1.custisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t2.nationalitydesc AS lovdescnationalitydesc,
					   t3.empname AS lovdescempname,
					   t1.custctgcode,
					   t1.custcin,
					   t1.custaadhaar,
					   t1.custcompname,
					   t1.reasoncode,
					   t3.empindustry,
					   t1.gender,
					   t1.addresstype,
					   t1.housenumber,
					   t1.country,
					   t1.state,
					   t1.city,
					   t1.street,
					   t1.pincode,
					   t1.remarks,
					   t1.vid,
					   t1.dl,
					   t1.forged_document_type,
					   t1.product_applied_in_other_fi,
					   t1.source,
					   t1.branch,
					   t1.additionalfield0,
					   t1.additionalfield1,
					   t1.additionalfield2,
					   t1.additionalfield3,
					   t1.additionalfield4,
					   t1.additionalfield5,
					   t1.additionalfield6,
					   t1.additionalfield7,
					   t1.additionalfield8,
					   t1.additionalfield9,
					   t1.additionalfield10,
					   t1.additionalfield11,
					   t1.additionalfield12,
					   t1.additionalfield13,
					   t1.address,
					   t1.additionalfield4 AS director1firstname,
					   t1.additionalfield4 AS director1lastname,
					   t1.additionalfield5 AS director2firstname,
					   t1.additionalfield5 AS director2lastname,
					   t1.additionalfield6 AS director3firstname,
					   t1.additionalfield6 AS director3lastname,
					   t1.additionalfield7 AS director4firstname,
					   t1.additionalfield7 AS director4lastname,
					   t1.additionalfield8 AS director5firstname,
					   t1.additionalfield8 AS director5lastname,
					   t1.additionalfield9 AS director6firstname,
					   t1.additionalfield9 AS director6lastname,
					   t1.additionalfield10 AS director7firstname,
					   t1.additionalfield10 AS director7lastname,
					   t1.additionalfield11 AS director8firstname,
					   t1.additionalfield11 AS director8lastname,
					   t1.additionalfield12 AS director9firstname,
					   t1.additionalfield12 AS director9lastname,
					   t1.additionalfield13 AS director10firstname,
					   t1.additionalfield13 AS director10lastname,
					   t1.additionalfield2 AS assorrelconcernfname,
					   t1.additionalfield2 AS assorrelconcernlname,
					   t1.additionalfield3 AS othersourcefirstname,
					   t1.additionalfield3 AS othersourcelastname,
					   t1.custfname ||' '||t1.custlname AS custshrtname
				FROM blacklistcustomer t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
			]]>
		</createView>
	</changeSet>

	<changeSet id="382" author="lakshmi.n" dbms="oracle,postgresql">
		<comment>ST#4_TK#7</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
			<![CDATA[
				SELECT t1.custcif,
					   t1.custfname,
					   t1.custlname,
					   t1.custdob,
					   t1.custcrcpr,
					   t1.mobilenumber,
					   t1.custnationality,
					   t1.custpassportno,
					   t1.employer,
					   t1.custisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t2.nationalitydesc AS lovdescnationalitydesc,
					   t3.empname AS lovdescempname,
					   t1.custctgcode,
					   t1.custcin,
					   t1.custaadhaar,
					   t1.custcompname,
					   t1.reasoncode,
					   t3.empindustry,
					   t1.gender,
					   t1.addresstype,
					   t1.housenumber,
					   t1.country,
					   t1.state,
					   t1.city,
					   t1.street,
					   t1.pincode,
					   t1.remarks,
					   t1.vid,
					   t1.dl,
					   t1.forged_document_type,
					   t1.product_applied_in_other_fi,
					   t1.source,
					   t1.branch,
					   t1.additionalfield0,
					   t1.additionalfield1,
					   t1.additionalfield2,
					   t1.additionalfield3,
					   t1.additionalfield4,
					   t1.additionalfield5,
					   t1.additionalfield6,
					   t1.additionalfield7,
					   t1.additionalfield8,
					   t1.additionalfield9,
					   t1.additionalfield10,
					   t1.additionalfield11,
					   t1.additionalfield12,
					   t1.additionalfield13,
					   t1.address,
					   t1.additionalfield4 AS director1firstname,
					   t1.additionalfield4 AS director1lastname,
					   t1.additionalfield5 AS director2firstname,
					   t1.additionalfield5 AS director2lastname,
					   t1.additionalfield6 AS director3firstname,
					   t1.additionalfield6 AS director3lastname,
					   t1.additionalfield7 AS director4firstname,
					   t1.additionalfield7 AS director4lastname,
					   t1.additionalfield8 AS director5firstname,
					   t1.additionalfield8 AS director5lastname,
					   t1.additionalfield9 AS director6firstname,
					   t1.additionalfield9 AS director6lastname,
					   t1.additionalfield10 AS director7firstname,
					   t1.additionalfield10 AS director7lastname,
					   t1.additionalfield11 AS director8firstname,
					   t1.additionalfield11 AS director8lastname,
					   t1.additionalfield12 AS director9firstname,
					   t1.additionalfield12 AS director9lastname,
					   t1.additionalfield13 AS director10firstname,
					   t1.additionalfield13 AS director10lastname,
					   t1.custfname ||' '||t1.custlname AS custshrtname
				FROM blacklistcustomer_temp t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				UNION ALL
				SELECT t1.custcif,
					   t1.custfname,
					   t1.custlname,
					   t1.custdob,
					   t1.custcrcpr,
					   t1.mobilenumber,
					   t1.custnationality,
					   t1.custpassportno,
					   t1.employer,
					   t1.custisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t2.nationalitydesc AS lovdescnationalitydesc,
					   t3.empname AS lovdescempname,
					   t1.custctgcode,
					   t1.custcin,
					   t1.custaadhaar,
					   t1.custcompname,
					   t1.reasoncode,
					   t3.empindustry,
					   t1.gender,
					   t1.addresstype,
					   t1.housenumber,
					   t1.country,
					   t1.state,
					   t1.city,
					   t1.street,
					   t1.pincode,
					   t1.remarks,
					   t1.vid,
					   t1.dl,
					   t1.forged_document_type,
					   t1.product_applied_in_other_fi,
					   t1.source,
					   t1.branch,
					   t1.additionalfield0,
					   t1.additionalfield1,
					   t1.additionalfield2,
					   t1.additionalfield3,
					   t1.additionalfield4,
					   t1.additionalfield5,
					   t1.additionalfield6,
					   t1.additionalfield7,
					   t1.additionalfield8,
					   t1.additionalfield9,
					   t1.additionalfield10,
					   t1.additionalfield11,
					   t1.additionalfield12,
					   t1.additionalfield13,
					   t1.address,
					   t1.additionalfield4 AS director1firstname,
					   t1.additionalfield4 AS director1lastname,
					   t1.additionalfield5 AS director2firstname,
					   t1.additionalfield5 AS director2lastname,
					   t1.additionalfield6 AS director3firstname,
					   t1.additionalfield6 AS director3lastname,
					   t1.additionalfield7 AS director4firstname,
					   t1.additionalfield7 AS director4lastname,
					   t1.additionalfield8 AS director5firstname,
					   t1.additionalfield8 AS director5lastname,
					   t1.additionalfield9 AS director6firstname,
					   t1.additionalfield9 AS director6lastname,
					   t1.additionalfield10 AS director7firstname,
					   t1.additionalfield10 AS director7lastname,
					   t1.additionalfield11 AS director8firstname,
					   t1.additionalfield11 AS director8lastname,
					   t1.additionalfield12 AS director9firstname,
					   t1.additionalfield12 AS director9lastname,
					   t1.additionalfield13 AS director10firstname,
					   t1.additionalfield13 AS director10lastname,
					   t1.custfname ||' '||t1.custlname AS custshrtname
				FROM blacklistcustomer t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				WHERE NOT (EXISTS ( SELECT 1
				FROM blacklistcustomer_temp
				WHERE blacklistcustomer_temp.custcif = t1.custcif))
			]]>
		</createView>
	</changeSet>

	<changeSet id="381" author="lakshmi.n" dbms="mssql">
		<comment>ST#4_TK#7</comment>
		<createView viewName="blacklistcustomer_Aview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.custcif,
					   t1.custfname,
					   t1.custlname,
					   t1.custdob,
					   t1.custcrcpr,
					   t1.mobilenumber,
					   t1.custnationality,
					   t1.custpassportno,
					   t1.employer,
					   t1.custisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t2.nationalitydesc AS lovdescnationalitydesc,
					   t3.empname AS lovdescempname,
					   t1.custctgcode,
					   t1.custcin,
					   t1.custaadhaar,
					   t1.custcompname,
					   t1.reasoncode,
					   t3.empindustry,
					   t1.gender,
					   t1.addresstype,
					   t1.housenumber,
					   t1.country,
					   t1.state,
					   t1.city,
					   t1.street,
					   t1.pincode,
					   t1.remarks,
					   t1.vid,
					   t1.dl,
					   t1.forged_document_type,
					   t1.product_applied_in_other_fi,
					   t1.source,
					   t1.branch,
					   t1.additionalfield0,
					   t1.additionalfield1,
					   t1.additionalfield2,
					   t1.additionalfield3,
					   t1.additionalfield4,
					   t1.additionalfield5,
					   t1.additionalfield6,
					   t1.additionalfield7,
					   t1.additionalfield8,
					   t1.additionalfield9,
					   t1.additionalfield10,
					   t1.additionalfield11,
					   t1.additionalfield12,
					   t1.additionalfield13,
					   t1.address,
					   t1.additionalfield4 AS director1firstname,
					   t1.additionalfield4 AS director1lastname,
					   t1.additionalfield5 AS director2firstname,
					   t1.additionalfield5 AS director2lastname,
					   t1.additionalfield6 AS director3firstname,
					   t1.additionalfield6 AS director3lastname,
					   t1.additionalfield7 AS director4firstname,
					   t1.additionalfield7 AS director4lastname,
					   t1.additionalfield8 AS director5firstname,
					   t1.additionalfield8 AS director5lastname,
					   t1.additionalfield9 AS director6firstname,
					   t1.additionalfield9 AS director6lastname,
					   t1.additionalfield10 AS director7firstname,
					   t1.additionalfield10 AS director7lastname,
					   t1.additionalfield11 AS director8firstname,
					   t1.additionalfield11 AS director8lastname,
					   t1.additionalfield12 AS director9firstname,
					   t1.additionalfield12 AS director9lastname,
					   t1.additionalfield13 AS director10firstname,
					   t1.additionalfield13 AS director10lastname,
					   t1.additionalfield2 AS assorrelconcernfname,
					   t1.additionalfield2 AS assorrelconcernlname,
					   t1.additionalfield3 AS othersourcefirstname,
					   t1.additionalfield3 AS othersourcelastname,
					   t1.custfname +' '+ t1.custlname AS custshrtname
				FROM blacklistcustomer t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
			]]>
		</createView>
	</changeSet>

	<changeSet id="382" author="lakshmi.n" dbms="mssql">
		<comment>ST#4_TK#7</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
			<![CDATA[
				SELECT t1.custcif,
					   t1.custfname,
					   t1.custlname,
					   t1.custdob,
					   t1.custcrcpr,
					   t1.mobilenumber,
					   t1.custnationality,
					   t1.custpassportno,
					   t1.employer,
					   t1.custisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t2.nationalitydesc AS lovdescnationalitydesc,
					   t3.empname AS lovdescempname,
					   t1.custctgcode,
					   t1.custcin,
					   t1.custaadhaar,
					   t1.custcompname,
					   t1.reasoncode,
					   t3.empindustry,
					   t1.gender,
					   t1.addresstype,
					   t1.housenumber,
					   t1.country,
					   t1.state,
					   t1.city,
					   t1.street,
					   t1.pincode,
					   t1.remarks,
					   t1.vid,
					   t1.dl,
					   t1.forged_document_type,
					   t1.product_applied_in_other_fi,
					   t1.source,
					   t1.branch,
					   t1.additionalfield0,
					   t1.additionalfield1,
					   t1.additionalfield2,
					   t1.additionalfield3,
					   t1.additionalfield4,
					   t1.additionalfield5,
					   t1.additionalfield6,
					   t1.additionalfield7,
					   t1.additionalfield8,
					   t1.additionalfield9,
					   t1.additionalfield10,
					   t1.additionalfield11,
					   t1.additionalfield12,
					   t1.additionalfield13,
					   t1.address,
					   t1.additionalfield4 AS director1firstname,
					   t1.additionalfield4 AS director1lastname,
					   t1.additionalfield5 AS director2firstname,
					   t1.additionalfield5 AS director2lastname,
					   t1.additionalfield6 AS director3firstname,
					   t1.additionalfield6 AS director3lastname,
					   t1.additionalfield7 AS director4firstname,
					   t1.additionalfield7 AS director4lastname,
					   t1.additionalfield8 AS director5firstname,
					   t1.additionalfield8 AS director5lastname,
					   t1.additionalfield9 AS director6firstname,
					   t1.additionalfield9 AS director6lastname,
					   t1.additionalfield10 AS director7firstname,
					   t1.additionalfield10 AS director7lastname,
					   t1.additionalfield11 AS director8firstname,
					   t1.additionalfield11 AS director8lastname,
					   t1.additionalfield12 AS director9firstname,
					   t1.additionalfield12 AS director9lastname,
					   t1.additionalfield13 AS director10firstname,
					   t1.additionalfield13 AS director10lastname,
					   t1.custfname +' '+ t1.custlname AS custshrtname
				FROM blacklistcustomer_temp t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				UNION ALL
				SELECT t1.custcif,
					   t1.custfname,
					   t1.custlname,
					   t1.custdob,
					   t1.custcrcpr,
					   t1.mobilenumber,
					   t1.custnationality,
					   t1.custpassportno,
					   t1.employer,
					   t1.custisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t2.nationalitydesc AS lovdescnationalitydesc,
					   t3.empname AS lovdescempname,
					   t1.custctgcode,
					   t1.custcin,
					   t1.custaadhaar,
					   t1.custcompname,
					   t1.reasoncode,
					   t3.empindustry,
					   t1.gender,
					   t1.addresstype,
					   t1.housenumber,
					   t1.country,
					   t1.state,
					   t1.city,
					   t1.street,
					   t1.pincode,
					   t1.remarks,
					   t1.vid,
					   t1.dl,
					   t1.forged_document_type,
					   t1.product_applied_in_other_fi,
					   t1.source,
					   t1.branch,
					   t1.additionalfield0,
					   t1.additionalfield1,
					   t1.additionalfield2,
					   t1.additionalfield3,
					   t1.additionalfield4,
					   t1.additionalfield5,
					   t1.additionalfield6,
					   t1.additionalfield7,
					   t1.additionalfield8,
					   t1.additionalfield9,
					   t1.additionalfield10,
					   t1.additionalfield11,
					   t1.additionalfield12,
					   t1.additionalfield13,
					   t1.address,
					   t1.additionalfield4 AS director1firstname,
					   t1.additionalfield4 AS director1lastname,
					   t1.additionalfield5 AS director2firstname,
					   t1.additionalfield5 AS director2lastname,
					   t1.additionalfield6 AS director3firstname,
					   t1.additionalfield6 AS director3lastname,
					   t1.additionalfield7 AS director4firstname,
					   t1.additionalfield7 AS director4lastname,
					   t1.additionalfield8 AS director5firstname,
					   t1.additionalfield8 AS director5lastname,
					   t1.additionalfield9 AS director6firstname,
					   t1.additionalfield9 AS director6lastname,
					   t1.additionalfield10 AS director7firstname,
					   t1.additionalfield10 AS director7lastname,
					   t1.additionalfield11 AS director8firstname,
					   t1.additionalfield11 AS director8lastname,
					   t1.additionalfield12 AS director9firstname,
					   t1.additionalfield12 AS director9lastname,
					   t1.additionalfield13 AS director10firstname,
					   t1.additionalfield13 AS director10lastname,
					   t1.custfname +' '+ t1.custlname AS custshrtname
				FROM blacklistcustomer t1
				LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
				LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
				WHERE NOT (EXISTS ( SELECT 1
				FROM blacklistcustomer_temp
				WHERE blacklistcustomer_temp.custcif = t1.custcif))
			]]>
		</createView>
	</changeSet>

	<changeSet id="383" author="Rohit">
		<comment>ST#6_TK#32</comment>
		<createView viewName="pmay_view" replaceIfExists="true">
			<![CDATA[
			SELECT t1.finReference,
                t1.ownedHouse,
                t1.CentralAssistance,
                t1.householdAnnIncome,
                t1.carpetArea,
                t1.womenOwnership,
                t1.villageTown,
                t1.remarks,
                t1.category,
                t1.ackNumber,
                t1.status,
                t1.applicationID,
                t3.pccityname AS cityname,
                c.custshrtname AS customerName,
                c.custcif AS cif,
                t1.version,
                t1.lastmntby,
                t1.lastmnton,
                t1.recordstatus,
                t1.rolecode,
                t1.nextrolecode,
                t1.taskid,
                t1.nexttaskid,
                t1.recordtype,
                t1.workflowid
			FROM pmay_temp t1
			LEFT JOIN rmtprovincevscity t3 ON t1.villageTown = t3.pccity
			inner join financemain f on f.finreference=t1.finreference
			inner join customers c on f.custid=c.custid
		UNION ALL
			SELECT t1.finReference,
				t1.ownedHouse,
				t1.CentralAssistance,
				t1.householdAnnIncome,
				t1.carpetArea,
				t1.womenOwnership,
				t1.villageTown,
				t1.remarks,
				t1.category,
				t1.ackNumber,
				t1.status,
				t1.applicationID,
				t3.pccityname AS cityname,
				c.custshrtname AS customerName,
				c.custcif AS cif,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid
			FROM pmay t1
			LEFT JOIN rmtprovincevscity t3 ON t1.villageTown = t3.pccity
			inner join financemain f on f.finreference=t1.finreference
			inner join customers c on f.custid=c.custid
			WHERE NOT (EXISTS ( SELECT 1
				FROM pmay_temp
				WHERE pmay_temp.finReference = t1.finReference))
			]]>
		</createView>
	</changeSet>

	<changeSet id="384" author="Rohit">
		<comment>ST#6_TK#32</comment>
		<createView viewName="pmay_aview" replaceIfExists="true">
		<![CDATA[
		SELECT t1.finReference,
				t1.ownedHouse,
	            t1.CentralAssistance,
	            t1.householdAnnIncome,
	            t1.carpetArea,
	            t1.womenOwnership,
	            t1.villageTown,
	            t1.remarks,
	            t1.category,
	            t1.ackNumber,
	            t1.status,
	            t1.applicationID,
	            t3.pccityname AS cityname,
	            c.custshrtname AS customerName,
	            c.custcif AS cif,
	            t1.version,
	            t1.lastmntby,
	            t1.lastmnton,
	            t1.recordstatus,
	            t1.rolecode,
	            t1.nextrolecode,
	            t1.taskid,
	            t1.nexttaskid,
	            t1.recordtype,
	            t1.workflowid
		FROM pmay t1
		LEFT JOIN rmtprovincevscity t3 ON t1.villageTown = t3.pccity
		inner join financemain f on f.finreference=t1.finreference
		inner join customers c on f.custid=c.custid
	]]>
		</createView>
	</changeSet>

	<changeSet id="385" author="Venkatesh.ch">
		<comment>PSD#150367</comment>
		<createView viewName="employerdetail_view" replaceIfExists="true">
			<![CDATA[
		 SELECT t1.employerid,
		    t1.empindustry,
		    t1.empname,
		    t1.establishdate,
		    t1.empaddrhnbr,
		    t1.empflatnbr,
		    t1.empaddrstreet,
		    t1.empaddrline1,
		    t1.empaddrline2,
		    t1.emppobox,
		    t1.empcountry,
		    t1.empphone,
		    t1.empfax,
		    t1.emptelexno,
		    t1.empemailid,
		    t1.empprovince,
		    t1.empcity,
		    t1.empwebsite,
		    t1.contactpersonname,
		    t1.contactpersonno,
		    t1.empalocationtype,
		    t1.bankrefno,
		    t1.empisactive,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t2.usrlogin,
		    t2.usrfname,
		    t2.usrmname,
		    t2.usrlname,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t3.industrydesc lovdescindustrydesc,
		    t4.countrydesc lovdesccountrydesc,
		    t5.cpprovincename lovdescprovincename,
		    t6.pccityname lovdesccityname,
			t1.empCategory
		   FROM employerdetail_temp t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		     LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
		     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
		UNION ALL
		 SELECT t1.employerid,
		    t1.empindustry,
		    t1.empname,
		    t1.establishdate,
		    t1.empaddrhnbr,
		    t1.empflatnbr,
		    t1.empaddrstreet,
		    t1.empaddrline1,
		    t1.empaddrline2,
		    t1.emppobox,
		    t1.empcountry,
		    t1.empphone,
		    t1.empfax,
		    t1.emptelexno,
		    t1.empemailid,
		    t1.empprovince,
		    t1.empcity,
		    t1.empwebsite,
		    t1.contactpersonname,
		    t1.contactpersonno,
		    t1.empalocationtype,
		    t1.bankrefno,
		    t1.empisactive,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t2.usrlogin,
		    t2.usrfname,
		    t2.usrmname,
		    t2.usrlname,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t3.industrydesc lovdescindustrydesc,
		    t4.countrydesc lovdesccountrydesc,
		    t5.cpprovincename lovdescprovincename,
		    t6.pccityname lovdesccityname,
			t1.empCategory
		   FROM employerdetail t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		    LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
		     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
		  WHERE NOT (EXISTS ( SELECT 1
		           FROM employerdetail_temp
		          WHERE employerdetail_temp.employerid = t1.employerid))
				  ]]>
		</createView>
	</changeSet>

	<changeSet id="386" author="Venkatesh.ch">
		<comment>PSD#150367</comment>
		<createView viewName="employerdetail_aview" replaceIfExists="true">
		<![CDATA[
			 SELECT t1.employerid,
			    t1.empindustry,
			    t1.empname,
			    t1.establishdate,
			    t1.empaddrhnbr,
			    t1.empflatnbr,
			    t1.empaddrstreet,
			    t1.empaddrline1,
			    t1.empaddrline2,
			    t1.emppobox,
			    t1.empcountry,
			    t1.empphone,
			    t1.empfax,
			    t1.emptelexno,
			    t1.empemailid,
			    t1.empprovince,
			    t1.empcity,
			    t1.empwebsite,
			    t1.contactpersonname,
			    t1.contactpersonno,
			    t1.empalocationtype,
			    t1.bankrefno,
			    t1.empisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t2.usrlogin,
			    t2.usrfname,
			    t2.usrmname,
			    t2.usrlname,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.industrydesc lovdescindustrydesc,
			    t4.countrydesc lovdesccountrydesc,
			    t5.cpprovincename lovdescprovincename,
			    t6.pccityname lovdesccityname,
				t1.empCategory  
		   FROM employerdetail t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		    LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
		     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN rmtprovincevscity t6 ON t1.empcity= t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
			 ]]>
		</createView>
	</changeSet>




	<changeSet id="387" author="Venkatesh.ch">
		<comment>PSD#150367</comment>
		<createView viewName="employerdetail_tview" replaceIfExists="true">
		<![CDATA[
 			SELECT t1.employerid,
			    t1.empindustry,
			    t1.empname,
			    t1.establishdate,
			    t1.empaddrhnbr,
			    t1.empflatnbr,
			    t1.empaddrstreet,
			    t1.empaddrline1,
			    t1.empaddrline2,
			    t1.emppobox,
			    t1.empcountry,
			    t1.empphone,
			    t1.empfax,
			    t1.emptelexno,
			    t1.empemailid,
			    t1.empprovince,
			    t1.empcity,
			    t1.empwebsite,
			    t1.contactpersonname,
			    t1.contactpersonno,
			    t1.empalocationtype,
			    t1.bankrefno,
			    t1.empisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t2.usrlogin,
			    t2.usrfname,
			    t2.usrmname,
			    t2.usrlname,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.industrydesc lovdescindustrydesc,
			    t4.countrydesc lovdesccountrydesc,
			    t5.cpprovincename lovdescprovincename,
			    t6.pccityname lovdesccityname,
				t1.empCategory
			   FROM employerdetail_temp t1
			     JOIN secusers t2 ON t1.lastmntby = t2.usrid
			    LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
			     JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
			     JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
			     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="385.0" author="Venkatesh.ch">
		<comment>PSD#150367</comment>
		<createView viewName="employerdetail_view" replaceIfExists="true">
			<![CDATA[
		 SELECT t1.employerid,
		    t1.empindustry,
		    t1.empname,
		    t1.establishdate,
		    t1.empaddrhnbr,
		    t1.empflatnbr,
		    t1.empaddrstreet,
		    t1.empaddrline1,
		    t1.empaddrline2,
		    t1.emppobox,
		    t1.empcountry,
		    t1.empphone,
		    t1.empfax,
		    t1.emptelexno,
		    t1.empemailid,
		    t1.empprovince,
		    t1.empcity,
		    t1.empwebsite,
		    t1.contactpersonname,
		    t1.contactpersonno,
		    t1.empalocationtype,
		    t1.bankrefno,
		    t1.empisactive,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t2.usrlogin,
		    t2.usrfname,
		    t2.usrmname,
		    t2.usrlname,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t3.industrydesc lovdescindustrydesc,
		    t4.countrydesc lovdesccountrydesc,
		    t5.cpprovincename lovdescprovincename,
		    t6.pccityname lovdesccityname,
			t1.empCategory
		   FROM employerdetail_temp t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		     LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
		     LEFT JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     LEFT JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
		UNION ALL
		 SELECT t1.employerid,
		    t1.empindustry,
		    t1.empname,
		    t1.establishdate,
		    t1.empaddrhnbr,
		    t1.empflatnbr,
		    t1.empaddrstreet,
		    t1.empaddrline1,
		    t1.empaddrline2,
		    t1.emppobox,
		    t1.empcountry,
		    t1.empphone,
		    t1.empfax,
		    t1.emptelexno,
		    t1.empemailid,
		    t1.empprovince,
		    t1.empcity,
		    t1.empwebsite,
		    t1.contactpersonname,
		    t1.contactpersonno,
		    t1.empalocationtype,
		    t1.bankrefno,
		    t1.empisactive,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t2.usrlogin,
		    t2.usrfname,
		    t2.usrmname,
		    t2.usrlname,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t3.industrydesc lovdescindustrydesc,
		    t4.countrydesc lovdesccountrydesc,
		    t5.cpprovincename lovdescprovincename,
		    t6.pccityname lovdesccityname,
			t1.empCategory
		   FROM employerdetail t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
			LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
		     LEFT JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     LEFT JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN  rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
		  WHERE NOT (EXISTS ( SELECT 1
		           FROM employerdetail_temp
		          WHERE employerdetail_temp.employerid = t1.employerid))
				  ]]>
		</createView>
	</changeSet>

	<changeSet id="386.0" author="Venkatesh.ch">
		<comment>PSD#150367</comment>
		<createView viewName="employerdetail_aview" replaceIfExists="true">
		<![CDATA[
			 SELECT t1.employerid,
			    t1.empindustry,
			    t1.empname,
			    t1.establishdate,
			    t1.empaddrhnbr,
			    t1.empflatnbr,
			    t1.empaddrstreet,
			    t1.empaddrline1,
			    t1.empaddrline2,
			    t1.emppobox,
			    t1.empcountry,
			    t1.empphone,
			    t1.empfax,
			    t1.emptelexno,
			    t1.empemailid,
			    t1.empprovince,
			    t1.empcity,
			    t1.empwebsite,
			    t1.contactpersonname,
			    t1.contactpersonno,
			    t1.empalocationtype,
			    t1.bankrefno,
			    t1.empisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t2.usrlogin,
			    t2.usrfname,
			    t2.usrmname,
			    t2.usrlname,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.industrydesc lovdescindustrydesc,
			    t4.countrydesc lovdesccountrydesc,
			    t5.cpprovincename lovdescprovincename,
			    t6.pccityname lovdesccityname,
				t1.empCategory  
		   FROM employerdetail t1
		     JOIN secusers t2 ON t1.lastmntby = t2.usrid
		    LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
		     LEFT JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
		     LEFT JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
		     LEFT JOIN  rmtprovincevscity t6 ON t1.empcity= t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="387.0" author="Venkatesh.ch">
		<comment>PSD#150367</comment>
		<createView viewName="employerdetail_tview" replaceIfExists="true">
		<![CDATA[
 			SELECT t1.employerid,
			    t1.empindustry,
			    t1.empname,
			    t1.establishdate,
			    t1.empaddrhnbr,
			    t1.empflatnbr,
			    t1.empaddrstreet,
			    t1.empaddrline1,
			    t1.empaddrline2,
			    t1.emppobox,
			    t1.empcountry,
			    t1.empphone,
			    t1.empfax,
			    t1.emptelexno,
			    t1.empemailid,
			    t1.empprovince,
			    t1.empcity,
			    t1.empwebsite,
			    t1.contactpersonname,
			    t1.contactpersonno,
			    t1.empalocationtype,
			    t1.bankrefno,
			    t1.empisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t2.usrlogin,
			    t2.usrfname,
			    t2.usrmname,
			    t2.usrlname,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.industrydesc lovdescindustrydesc,
			    t4.countrydesc lovdesccountrydesc,
			    t5.cpprovincename lovdescprovincename,
			    t6.pccityname lovdesccityname,
				t1.empCategory
			   FROM employerdetail_temp t1
			     JOIN secusers t2 ON t1.lastmntby = t2.usrid
			    LEFT JOIN bmtindustries t3 ON t1.empindustry = t3.industrycode 
			     LEFT JOIN bmtcountries t4 ON t1.empcountry = t4.countrycode
			     LEFT JOIN rmtcountryvsprovince t5 ON t1.empprovince = t5.cpprovince AND t1.empcountry = t5.cpcountry
			     LEFT JOIN rmtprovincevscity t6 ON t1.empcity = t6.pccity AND t1.empprovince = t6.pcprovince AND t1.empcountry = t6.pccountry
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="388" author="Rajesh.N">
		<comment>ST#1 TK#21</comment>
		<createView viewName="verificationsreport_view" replaceIfExists="true">
			<![CDATA[
				select distinct keyreference from verifications
			]]>
		</createView>
	</changeSet>

	<changeSet id="389" author="lakshmi.n" dbms="oracle,postgresql">
		<comment>PSD #150040</comment>
		<createView viewName="int_disbursement_request_view" replaceIfExists="true">
				<![CDATA[
					SELECT fa.paymentid,
					fa.finreference,
					'D' AS channel,
					0 AS providerid,
						CASE
							WHEN fa.paymenttype = 'NEFT' THEN 'N'
							WHEN fa.paymenttype = 'RTGS' THEN 'R'
							WHEN fa.paymenttype = 'DD' THEN 'D'
							WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
							ELSE fa.paymenttype
						END AS disbursement_type,
					fa.amttobereleased,
					fa.disbdate,
					fa.lldate,
					fa.payableloc,
					fa.printingloc,
					cu.custcif,
					cu.custshrtname,
					'' AS customer_mobile,
					ce.custemail AS customer_email,
					cs.cpprovincename AS customer_state,
					cc.pccityname AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					pbd.cpprovincename AS benficiary_branch_state,
					pbd.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					fa.beneficiaryaccno,
						CASE
							WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
							ELSE fa.beneficiaryname
						END AS beneficiaryname,
					(fa.phonecountrycode || fa.phoneareacode) || fa.phonenumber AS beneficiary_mobile,
					bce.custemail AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					(((((brca.custaddrhnbr || ',') || brca.custaddrstreet) || ',') || brc.pccityname) || ',') || brs.cpprovincename AS benficiary_address1,
					'' AS benficiary_address2,
					'' AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					fa.status,
					fa.description AS remarks,
					fa.paymenttype,
					fm.fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					fa.inputdate,
					pb.alwfiledownload,
					pb.filename,
					fm.finisactive,
					smd.entitycode,
					pb.accountno AS partnerbank_account
					FROM finadvancepayments fa
					JOIN ( SELECT financemain_temp.custid,
					financemain_temp.finreference,
					financemain_temp.fintype,
					financemain_temp.finisactive
					FROM financemain_temp
					UNION ALL
					SELECT t2.custid,
					t2.finreference,
					t2.fintype,
					t2.finisactive
					FROM financemain t2
					WHERE NOT (EXISTS ( SELECT 1
					FROM financemain_temp t3
					WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
					JOIN customers cu ON cu.custid = fm.custid
					JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
					JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
					LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
					LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN ( SELECT pb_1.partnerbankid,
					pbd_1.bankname,
					pbb.branchdesc,
					pbbrc.pccityname,
					pbbrs.cpprovincename
					FROM partnerbanks pb_1
					JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
					JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
					LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
					LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
					LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
					LEFT JOIN customers bc ON bc.custid = br.custid
					LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
					LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
					LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests)) AND NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
					FROM finadvancepayments_temp))
					UNION ALL
					SELECT pi.paymentinstructionid AS paymentid,
					ph.finreference,
					ph.paymenttype AS channel,
					0 AS providerid,
						CASE
							WHEN pi.paymenttype = 'NEFT' THEN 'N'
							WHEN pi.paymenttype = 'RTGS' THEN 'R'
							WHEN pi.paymenttype = 'DD' THEN 'D'
							WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
							ELSE pi.paymenttype
						END AS disbursement_type,
					pi.paymentamount AS amttobereleased,
					pi.postdate AS disbdate,
					pi.postdate AS lldate,
					pi.payableloc,
					pi.printingloc,
					cu.custcif,
					cu.custshrtname,
					'' AS customer_mobile,
					ce.custemail AS customer_email,
					cs.cpprovincename AS customer_state,
					cc.pccityname AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					bbrs.cpprovincename AS benficiary_branch_state,
					bbrc.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					pi.accountno AS beneficiaryaccno,
					CASE
					WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
					ELSE pi.acctholdername
					END AS beneficiaryname,
					pi.phonecountrycode || pi.phonenumber AS beneficiary_mobile,
					bce.custemail AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					'' AS benficiary_address1,
					'' AS benficiary_address2,
					'' AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					pi.status,
					pi.remarks,
					pi.paymenttype,
					fm.fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					pi.postdate AS inputdate,
					pb.alwfiledownload,
					pb.filename,
					fm.finisactive,
					smd.entitycode,
					pb.accountno AS partnerbank_account
					FROM paymentinstructions pi
					JOIN paymentheader ph ON ph.paymentid = pi.paymentid
					JOIN ( SELECT financemain.custid,
					financemain.finreference,
					financemain.fintype,
					financemain.finisactive
					FROM financemain
					UNION ALL
					SELECT t2.custid,
					t2.finreference,
					t2.fintype,
					t2.finisactive
					FROM financemain_temp t2
					WHERE NOT (EXISTS ( SELECT 1
					FROM financemain_temp t3
					WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
					JOIN customers cu ON cu.custid = fm.custid
					JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
					JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
					LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
					LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
					LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
					LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
					LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
					LEFT JOIN customers bc ON bc.custid = br.custid
					LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
					LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
					LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests))
					UNION ALL
					SELECT pi.id AS paymentid,
					'' AS finreference,
					'I' AS channel,
					pi.providerid,
					CASE
						WHEN pi.paymenttype = 'NEFT' THEN 'N'
						WHEN pi.paymenttype = 'RTGS' THEN 'R'
						WHEN pi.paymenttype = 'DD' THEN 'D'
						WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
						ELSE pi.paymenttype
					END AS disbursement_type,
					pi.paymentamount AS amttobereleased,
					pi.paymentdate AS disbdate,
					pi.paymentdate AS lldate,
					'' AS payableloc,
					'' AS printingloc,
					'' AS custcif,
					'' AS custshrtname,
					'' AS customer_mobile,
					'' AS customer_email,
					'' AS customer_state,
					'' AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					bbrs.cpprovincename AS benficiary_branch_state,
					bbrc.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					vpa.accountnumber AS beneficiaryaccno,
					avd.dealername AS beneficiaryname,
					avd.dealertelephone AS beneficiary_mobile,
					avd.email AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					avd.dealeraddress1 AS benficiary_address1,
					avd.dealeraddress2 AS benficiary_address2,
					avd.dealeraddress3 AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					pi.status,
					pi.remarks,
					pi.paymenttype,
					'' AS fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					pi.paymentdate AS inputdate,
					pb.alwfiledownload,
					pb.filename,
					1 AS finisactive,
					pi.entitycode,
					pb.accountno AS partnerbank_account
					FROM insurancepaymentinstructions pi
					JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
					JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
					JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
					JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
					LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
					LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					WHERE pi.status = 'APPROVED' AND pi.paymentamount > 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests))
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="389" author="lakshmi.n" dbms="mssql">
		<comment>PSD #150040</comment>
		<createView viewName="int_disbursement_request_view" replaceIfExists="true">
				<![CDATA[
					SELECT fa.paymentid,
					fa.finreference,
					'D' AS channel,
					0 AS providerid,
					CASE
							WHEN fa.paymenttype = 'NEFT' THEN 'N'
							WHEN fa.paymenttype = 'RTGS' THEN 'R'
							WHEN fa.paymenttype = 'DD' THEN 'D'
							WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
							ELSE fa.paymenttype
					END AS disbursement_type,
					fa.amttobereleased,
					fa.disbdate,
					fa.lldate,
					fa.payableloc,
					fa.printingloc,
					cu.custcif,
					cu.custshrtname,
					'' AS customer_mobile,
					ce.custemail AS customer_email,
					cs.cpprovincename AS customer_state,
					cc.pccityname AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					pbd.cpprovincename AS benficiary_branch_state,
					pbd.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					fa.beneficiaryaccno,
					CASE
					WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
					ELSE fa.beneficiaryname
					END AS beneficiaryname,
					(fa.phonecountrycode + fa.phoneareacode) + fa.phonenumber AS beneficiary_mobile,
					bce.custemail AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					(((((brca.custaddrhnbr + ',') + brca.custaddrstreet) + ',') + brc.pccityname) + ',') + brs.cpprovincename AS benficiary_address1,
					'' AS benficiary_address2,
					'' AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					fa.status,
					fa.description AS remarks,
					fa.paymenttype,
					fm.fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					fa.inputdate,
					pb.alwfiledownload,
					pb.filename,
					fm.finisactive,
					smd.entitycode,
					pb.accountno AS partnerbank_account
					FROM finadvancepayments fa
					JOIN ( SELECT financemain_temp.custid,
					financemain_temp.finreference,
					financemain_temp.fintype,
					financemain_temp.finisactive
					FROM financemain_temp
					UNION ALL
					SELECT t2.custid,
					t2.finreference,
					t2.fintype,
					t2.finisactive
					FROM financemain t2
					WHERE NOT (EXISTS ( SELECT 1
					FROM financemain_temp t3
					WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
					JOIN customers cu ON cu.custid = fm.custid
					JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
					JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
					LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
					LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN ( SELECT pb_1.partnerbankid,
					pbd_1.bankname,
					pbb.branchdesc,
					pbbrc.pccityname,
					pbbrs.cpprovincename
					FROM partnerbanks pb_1
					JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
					JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
					LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
					LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
					LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
					LEFT JOIN customers bc ON bc.custid = br.custid
					LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
					LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
					LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests)) AND NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
					FROM finadvancepayments_temp))
					UNION ALL
					SELECT pi.paymentinstructionid AS paymentid,
					ph.finreference,
					ph.paymenttype AS channel,
					0 AS providerid,
					CASE
							WHEN pi.paymenttype = 'NEFT' THEN 'N'
							WHEN pi.paymenttype = 'RTGS' THEN 'R'
							WHEN pi.paymenttype = 'DD' THEN 'D'
							WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
							ELSE pi.paymenttype
						END AS disbursement_type,
					pi.paymentamount AS amttobereleased,
					pi.postdate AS disbdate,
					pi.postdate AS lldate,
					pi.payableloc,
					pi.printingloc,
					cu.custcif,
					cu.custshrtname,
					'' AS customer_mobile,
					ce.custemail AS customer_email,
					cs.cpprovincename AS customer_state,
					cc.pccityname AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					bbrs.cpprovincename AS benficiary_branch_state,
					bbrc.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					pi.accountno AS beneficiaryaccno,
					CASE
					WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
					ELSE pi.acctholdername
					END AS beneficiaryname,
					pi.phonecountrycode + pi.phonenumber AS beneficiary_mobile,
					bce.custemail AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					'' AS benficiary_address1,
					'' AS benficiary_address2,
					'' AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					pi.status,
					pi.remarks,
					pi.paymenttype,
					fm.fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					pi.postdate AS inputdate,
					pb.alwfiledownload,
					pb.filename,
					fm.finisactive,
					smd.entitycode,
					pb.accountno AS partnerbank_account
					FROM paymentinstructions pi
					JOIN paymentheader ph ON ph.paymentid = pi.paymentid
					JOIN ( SELECT financemain.custid,
					financemain.finreference,
					financemain.fintype,
					financemain.finisactive
					FROM financemain
					UNION ALL
					SELECT t2.custid,
					t2.finreference,
					t2.fintype,
					t2.finisactive
					FROM financemain_temp t2
					WHERE NOT (EXISTS ( SELECT 1
					FROM financemain_temp t3
					WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
					JOIN customers cu ON cu.custid = fm.custid
					JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
					JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
					LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
					LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
					LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
					LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
					LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
					LEFT JOIN customers bc ON bc.custid = br.custid
					LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
					LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
					LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests))
					UNION ALL
					SELECT pi.id AS paymentid,
					'' AS finreference,
					'I' AS channel,
					pi.providerid,
					CASE
					WHEN pi.paymenttype = 'NEFT' THEN 'N'
					WHEN pi.paymenttype = 'RTGS' THEN 'R'
					WHEN pi.paymenttype = 'DD' THEN 'D'
					WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
					ELSE pi.paymenttype
					END AS disbursement_type,
					pi.paymentamount AS amttobereleased,
					pi.paymentdate AS disbdate,
					pi.paymentdate AS lldate,
					'' AS payableloc,
					'' AS printingloc,
					'' AS custcif,
					'' AS custshrtname,
					'' AS customer_mobile,
					'' AS customer_email,
					'' AS customer_state,
					'' AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					bbrs.cpprovincename AS benficiary_branch_state,
					bbrc.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					vpa.accountnumber AS beneficiaryaccno,
					avd.dealername AS beneficiaryname,
					avd.dealertelephone AS beneficiary_mobile,
					avd.email AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					avd.dealeraddress1 AS benficiary_address1,
					avd.dealeraddress2 AS benficiary_address2,
					avd.dealeraddress3 AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					pi.status,
					pi.remarks,
					pi.paymenttype,
					'' AS fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					pi.paymentdate AS inputdate,
					pb.alwfiledownload,
					pb.filename,
					1 AS finisactive,
					pi.entitycode,
					pb.accountno AS partnerbank_account
					FROM insurancepaymentinstructions pi
					JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
					JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
					JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
					JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
					LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
					LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					WHERE pi.status = 'APPROVED' AND pi.paymentamount > 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests))
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="390" author="rajesh.n" dbms="oracle,postgresql">
		<createView viewName="FinanceMain_LView" replaceIfExists="true">
			<![CDATA[
		 		SELECT t1.finreference,
					    t1.investmentref,
					    t1.fintype,
					    t1.finccy,
					    t1.finamount,
					    t1.downpayment,
					    t1.feechargeamt,
					    t1.schedulemethod,
					    t1.numberofterms,
					    t1.recordstatus,
					    t1.recordtype,
					    t1.rolecode,
					    t1.nextrolecode,
					    t1.finbranch,
					    t1.fincontractdate,
					    t1.linkedfinref,
					    t1.nextuserid,
					    t1.priority,
					    t1.workflowid,
					    t1.taskid,
					    t1.nexttaskid,
					    t1.finpreapprovedref,
					    t1.rcdmaintainsts,
					    t1.insuranceamt,
					    t1.fincurrassetvalue,
					    t1.calterms,
					    t1.deviationapproval,
					    t1.finpurpose,
					    t1.initiatedate,
					    t1.finassetvalue,
					    t2.custcif AS lovdesccustcif,
					    t2.custshrtname AS lovdesccustshrtname,
					    t2.custpassportno AS lovdesccustpassportno,
					    t2.custdob AS lovdesccustdob,
					    t2.custcrcpr AS lovdesccustcrcpr,
					    t2.phonenumber,
					    t3.fincategory AS lovdescproductcodename,
					    t3.findivision AS lovdescfindivision,
					    t3.product AS lovdescfinproduct,
					    t3.fintypedesc AS lovdescfintypename,
					    COALESCE(t4.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
					    t1.samplingrequired,
					    t1.advanceemi,
					    t1.advemiterms,
					    t1.bpipftdaysbasis,
					    t1.graceterms,
					    t1.productcategory,
					    t1.reqloanamt,
					    t1.reqloantenor,
					    t1.finocrrequired,
					    t1.offerproduct,
					    t1.offeramount,
					    t1.custsegmentation,
					    t1.baseproduct,
					    t1.processtype,
					    t1.bureautimeseries,
					    t1.campaignname,
					    t1.existinglanrefno,
					    t1.leadsource,
					    t1.posource,
					    t1.rsa,
					    t1.verification,
					    t1.sourcingbranch,
					    t1.sourchannelcategory,
					    t1.asmname,
					    t1.offerid,
					    t1.applicationno,
					    t1.lastmnton
					   FROM financemain_temp t1
					     JOIN customers t2 ON t1.custid = t2.custid
					     JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
					     LEFT JOIN secroles t4 ON t1.nextrolecode= t4.rolecd
				  ]]>
		</createView>
	</changeSet>

	<changeSet id="390" author="rajesh.n" dbms="mssql">
		<createView viewName="FinanceMain_LView" replaceIfExists="true">
			<![CDATA[
		 		SELECT t1.finreference,
					    t1.investmentref,
					    t1.fintype,
					    t1.finccy,
					    t1.finamount,
					    t1.downpayment,
					    t1.feechargeamt,
					    t1.schedulemethod,
					    t1.numberofterms,
					    t1.recordstatus,
					    t1.recordtype,
					    t1.rolecode,
					    t1.nextrolecode,
					    t1.finbranch,
					    t1.fincontractdate,
					    t1.linkedfinref,
					    t1.nextuserid,
					    t1.priority,
					    t1.workflowid,
					    t1.taskid,
					    t1.nexttaskid,
					    t1.finpreapprovedref,
					    t1.rcdmaintainsts,
					    t1.insuranceamt,
					    t1.fincurrassetvalue,
					    t1.calterms,
					    t1.deviationapproval,
					    t1.finpurpose,
					    t1.initiatedate,
					    t1.finassetvalue,
					    t2.custcif AS lovdesccustcif,
					    t2.custshrtname AS lovdesccustshrtname,
					    t2.custpassportno AS lovdesccustpassportno,
					    t2.custdob AS lovdesccustdob,
					    t2.custcrcpr AS lovdesccustcrcpr,
					    t2.phonenumber,
					    t3.fincategory AS lovdescproductcodename,
					    t3.findivision AS lovdescfindivision,
					    t3.product AS lovdescfinproduct,
					    t3.fintypedesc AS lovdescfintypename,
					    COALESCE(t4.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
					    t1.samplingrequired,
					    t1.advanceemi,
					    t1.advemiterms,
					    t1.bpipftdaysbasis,
					    t1.graceterms,
					    t1.productcategory,
					    t1.reqloanamt,
					    t1.reqloantenor,
					    t1.finocrrequired,
					    t1.offerproduct,
					    t1.offeramount,
					    t1.custsegmentation,
					    t1.baseproduct,
					    t1.processtype,
					    t1.bureautimeseries,
					    t1.campaignname,
					    t1.existinglanrefno,
					    t1.leadsource,
					    t1.posource,
					    t1.rsa,
					    t1.verification,
					    t1.sourcingbranch,
					    t1.sourchannelcategory,
					    t1.asmname,
					    t1.offerid,
					    t1.applicationno,
					    t1.lastmnton
					   FROM financemain_temp t1
					     JOIN customers t2 ON t1.custid = t2.custid
					     JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
					     LEFT JOIN secroles t4 ON t1.nextrolecode= t4.rolecd
				  ]]>
		</createView>
	</changeSet>

	<changeSet id="391" author="rajesh.n">
		<createView viewName="verification_vt_view" replaceIfExists="true">
		<![CDATA[	
				SELECT t.verificationid,
				t.verificationformname,
				t.agentcode,
				t.agentname,
				t.verificationdate,
				t.status,
				t.reason,
				t.reasoncode,
				t.reasondesc,
				t.version,
				t.lastmntby,
				t.lastmnton,
				t.recordstatus,
				t.rolecode,
				t.nextrolecode,
				t.taskid,
				t.nexttaskid,
				t.recordtype,
				t.workflowid,
				t.remarks,
				t.cif,
				t.keyreference,
				t.referencefor,
				t.createdon,
				t.agency,
				t.custid,
				t.custcif,
				t.custname,
				t.collateraltype,
				t.agencyname,
				t.verificationcategory
			   FROM ( SELECT lv.verificationid,
						lv.verificationformname,
						lv.agentcode,
						lv.agentname,
						lv.verificationdate,
						lv.status,
						lv.reason,
						r1.code AS reasoncode,
						r1.description AS reasondesc,
						lv.version,
						lv.lastmntby,
						lv.lastmnton,
						lv.recordstatus,
						lv.rolecode,
						lv.nextrolecode,
						lv.taskid,
						lv.nexttaskid,
						lv.recordtype,
						lv.workflowid,
						lv.remarks,
						c.custcif AS cif,
						v.keyreference,
						v.referencefor,
						v.createdon,
						v.agency,
						c.custid,
						c.custcif,
						c.custshrtname AS custname,
						cs.collateraltype,
						a.dealername AS agencyname,
						v.verificationcategory
					   FROM verification_vt_temp lv
						 JOIN verifications v ON v.id = lv.verificationid
						 JOIN customers c ON c.custcif = v.reference
						 JOIN ( SELECT collateralsetup.collateraltype,
								collateralsetup.collateralref
							   FROM collateralsetup
							UNION
							 SELECT collateralsetup_temp.collateraltype,
								collateralsetup_temp.collateralref
							   FROM collateralsetup_temp) cs ON cs.collateralref = v.referencefor
						 LEFT JOIN reasons r1 ON r1.id = lv.reason
						 LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
					UNION ALL
					 SELECT lv.verificationid,
						lv.verificationformname,
						lv.agentcode,
						lv.agentname,
						lv.verificationdate,
						lv.status,
						lv.reason,
						r1.code AS reasoncode,
						r1.description AS reasondesc,
						lv.version,
						lv.lastmntby,
						lv.lastmnton,
						lv.recordstatus,
						lv.rolecode,
						lv.nextrolecode,
						lv.taskid,
						lv.nexttaskid,
						lv.recordtype,
						lv.workflowid,
						lv.remarks,
						c.custcif AS cif,
						v.keyreference,
						v.referencefor,
						v.createdon,
						v.agency,
						c.custid,
						c.custcif,
						c.custshrtname AS custname,
						cs.collateraltype,
						a.dealername AS agencyname,
						v.verificationcategory
					   FROM verification_vt lv
						 JOIN verifications v ON v.id = lv.verificationid
						 JOIN customers c ON c.custcif = v.reference
						 JOIN ( SELECT collateralsetup.collateraltype,
								collateralsetup.collateralref
							   FROM collateralsetup
							UNION
							 SELECT collateralsetup_temp.collateraltype,
								collateralsetup_temp.collateralref
							   FROM collateralsetup_temp) cs ON cs.collateralref = v.referencefor
						 LEFT JOIN reasons r1 ON r1.id = lv.reason
						 LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
					  WHERE NOT (EXISTS ( SELECT 1
							   FROM verification_vt_temp
							  WHERE verification_vt_temp.verificationid = lv.verificationid))) t
		]]>
		</createView>
	</changeSet>

	<changeSet id="392" author="rajesh.n">
		<createView viewName="verification_vt_dtls_view" replaceIfExists="true">
		<![CDATA[	
				SELECT  t.verificationid,
						t.seqno,
						t.doctype,
						t.docmodule,
						t.docname,
						t.referenceid,
						t.code,
						t.description,
						t.documentid,
						t.documenttype,
						t.docrefid,
						t.documentsubid,
						t.documentrefid,
						t.documenturi,
						t.remarks1,
						t.remarks2,
						t.remarks3,
						t.version,
						t.lastmntby,
						t.lastmnton,
						t.recordstatus,
						t.rolecode,
						t.nextrolecode,
						t.taskid,
						t.nexttaskid,
						t.recordtype,
						t.workflowid
					FROM ( SELECT lvd.verificationid,
								lvd.seqno,
								doc.doctype,
								doc.docmodule,
								doc.doccategory AS docname,
								doc.referenceid,
								dt.doctypecode AS code,
								dt.doctypedesc AS description,
								lvd.documentid,
								lvd.documenttype,
								doc.docrefid,
								lvd.documentsubid,
								lvd.documentrefid,
								lvd.documenturi,
								lvd.remarks1,
								lvd.remarks2,
								lvd.remarks3,
								lvd.version,
								lvd.lastmntby,
								lvd.lastmnton,
								lvd.recordstatus,
								lvd.rolecode,
								lvd.nextrolecode,
								lvd.taskid,
								lvd.nexttaskid,
								lvd.recordtype,
								lvd.workflowid
							FROM verification_vt_dtls_temp lvd
								JOIN documentdetails_view doc ON doc.docid = lvd.documentid
								JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.doccategory
							WHERE lvd.documenttype in (1,2)
							UNION ALL
							SELECT lvd.verificationid,
								lvd.seqno,
								doc.doctype,
								doc.docmodule,
								doc.doccategory AS docname,
								doc.referenceid,
								dt.doctypecode AS code,
								dt.doctypedesc AS description,
								lvd.documentid,
								lvd.documenttype,
								doc.docrefid,
								lvd.documentsubid,
								lvd.documentrefid,
								lvd.documenturi,
								lvd.remarks1,
								lvd.remarks2,
								lvd.remarks3,
								lvd.version,
								lvd.lastmntby,
								lvd.lastmnton,
								lvd.recordstatus,
								lvd.rolecode,
								lvd.nextrolecode,
								lvd.taskid,
								lvd.nexttaskid,
								lvd.recordtype,
								lvd.workflowid
							FROM verification_vt_dtls lvd
								JOIN verification_vt lv ON lv.verificationid = lvd.verificationid
								JOIN documentdetails_view doc ON doc.docid = lvd.documentid
								JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.doccategory
							WHERE NOT (EXISTS ( SELECT 1
									FROM verification_vt_dtls_temp
									WHERE verification_vt_dtls_temp.verificationid = lvd.verificationid AND verification_vt_dtls_temp.seqno = lvd.seqno)) AND (lvd.documenttype in (1, 2))
							UNION ALL
							SELECT lvd.verificationid,
								lvd.seqno,
								doc.custdoctype AS doctype,
								'Customer' AS docmodule,
								doc.custdoccategory AS docname,
								c.custcif AS refereceid,
								dt.doctypecode AS code,
								dt.doctypedesc AS description,
								lvd.documentid,
								lvd.documenttype,
								doc.docrefid,
								lvd.documentsubid,
								lvd.documentrefid,
								lvd.documenturi,
								lvd.remarks1,
								lvd.remarks2,
								lvd.remarks3,
								lvd.version,
								lvd.lastmntby,
								lvd.lastmnton,
								lvd.recordstatus,
								lvd.rolecode,
								lvd.nextrolecode,
								lvd.taskid,
								lvd.nexttaskid,
								lvd.recordtype,
								lvd.workflowid
							FROM verification_vt_dtls_temp lvd
								JOIN customerdocuments_view doc ON doc.custid = lvd.documentid AND doc.custdoccategory = lvd.documentsubid
								JOIN customers_view c ON c.custid = doc.custid
								JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.custdoccategory
							WHERE lvd.documenttype = 3
							UNION ALL
							SELECT lvd.verificationid,
								lvd.seqno,
								doc.custdoctype AS doctype,
								'Customer' AS docmodule,
								doc.custdoccategory AS docname,
								c.custcif AS refereceid,
								dt.doctypecode AS code,
								dt.doctypedesc AS description,
								lvd.documentid,
								lvd.documenttype,
								doc.docrefid,
								lvd.documentsubid,
								lvd.documentrefid,
								lvd.documenturi,
								lvd.remarks1,
								lvd.remarks2,
								lvd.remarks3,
								lvd.version,
								lvd.lastmntby,
								lvd.lastmnton,
								lvd.recordstatus,
								lvd.rolecode,
								lvd.nextrolecode,
								lvd.taskid,
								lvd.nexttaskid,
								lvd.recordtype,
								lvd.workflowid
							FROM verification_vt_dtls lvd
								JOIN customerdocuments_view doc ON doc.custid = lvd.documentid AND doc.custdoccategory = lvd.documentsubid
								JOIN customers_view c ON c.custid = doc.custid
								JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.custdoccategory
							WHERE NOT (EXISTS ( SELECT 1
									FROM verification_vt_dtls_temp
									WHERE verification_vt_dtls_temp.verificationid = lvd.verificationid AND verification_vt_dtls_temp.seqno = lvd.seqno)) AND lvd.documenttype = 3) t
		]]>
		</createView>
	</changeSet>

	<changeSet id="393_pre" author="tejaswi.b" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_aview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="393" author="tejaswi.b">
		<comment> Newly Added:GrcAdjReq,GrcPeriodAftrFullDisb,AutoIncrGrcEndDate,grcAutoIncrMonths,maxAutoIncrAllowed</comment>
		<createView viewName="RMTFINANCETYPES_AVIEW" replaceIfExists="true">
		<![CDATA[	
		SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc AS lovdescfincontingentactypename,
			t5.actypedesc AS lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc AS lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc AS lovdescfinbankcontactypename,
			t39.actypedesc AS lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc AS lovdescfindivisionname,
			t48.entitycode AS lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc AS lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode AS downpayrulecode,
			t59.rulecodedesc AS downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode AS grcpricingmethoddesc,
			t68.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.alwmaxdisbcheckreq,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc AS fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes,
			t1.GrcAdjReq,
			t1.GrcPeriodAftrFullDisb,
			t1.AutoIncrGrcEndDate,
			t1.grcAutoIncrMonths,
			t1.maxAutoIncrAllowed			
			FROM rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			]]>
		</createView>
	</changeSet>

	<changeSet id="393_post" author="tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="394" author="tejaswi.b">
		<createView viewName="RMTFINANCETYPES_VIEW" replaceIfExists="true">
		<![CDATA[
		SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc AS lovdescfincontingentactypename,
			t5.actypedesc AS lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc AS lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc AS lovdescfinbankcontactypename,
			t39.actypedesc AS lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc AS lovdescfindivisionname,
			t48.entitycode AS lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc AS lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode AS downpayrulecode,
			t59.rulecodedesc AS downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode AS grcpricingmethoddesc,
			t68.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc AS fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes,
			t1.GrcAdjReq,
			t1.GrcPeriodAftrFullDisb,
			t1.AutoIncrGrcEndDate,
			t1.grcAutoIncrMonths,
			t1.maxAutoIncrAllowed
			FROM rmtfinancetypes_temp t1
				LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
				LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
				LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
				LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
				LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
				LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
				LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
				LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
				LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
				LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
				LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
				LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
				UNION ALL
			SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.findftstmtfrq,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.finhistretension,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwpartialrpy,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisalwearlyrpy,
			t1.finisalwearlysettle,
			t1.finodrpytries,
			t1.finearlypayrule,
			t1.finearlysettlerule,
			t1.findepositrestrictedto,
			t1.finaebuyorinception,
			t1.finaesellormaturity,
			t1.finisactive,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t4.actypedesc AS lovdescfincontingentactypename,
			t5.actypedesc AS lovdescfinactypename,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finelgrulecode,
			t1.limitelgrulecode,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.finassettype,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t31.actypedesc AS lovdescpftpayactypename,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.finscheduleon,
			t1.fingrcscheduleon,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t38.actypedesc AS lovdescfinbankcontactypename,
			t39.actypedesc AS lovdescfinprovisionactypename,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t48.divisioncodedesc AS lovdescfindivisionname,
			t48.entitycode AS lovdescentitycode,
			t1.finsuspactype,
			t49.actypedesc AS lovdescfinsuspactypename,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.remarks,
			t1.alwearlypaymethods,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t59.rulecode AS downpayrulecode,
			t59.rulecodedesc AS downpayruledesc,
			t1.finsusptrigger,
			t1.finsuspremarks,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t1.manualschedule,
			t1.applygrcpricing,
			t1.grcpricingmethod,
			t1.applyrpypricing,
			t1.rpypricingmethod,
			t1.rpyhierarchy,
			t67.rulecode AS grcpricingmethoddesc,
			t68.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.finrepaypftonfrq,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwmaxdisbcheckreq,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.profitcenterid,
			t69.profitcentercode,
			t69.profitcenterdesc,
			t1.productcategory,
			t2.productdesc AS fincategorydesc,
			t1.developerfinance,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes,
			t1.GrcAdjReq,
			t1.GrcPeriodAftrFullDisb,
			t1.AutoIncrGrcEndDate,
			t1.grcAutoIncrMonths,
			t1.maxAutoIncrAllowed
				FROM rmtfinancetypes t1
			LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM rmtfinancetypes_temp
			WHERE rmtfinancetypes_temp.fintype = t1.fintype))
			]]>
		</createView>
	</changeSet>

	<changeSet id="395" author="tejaswi.b">
		<createView viewName="RMTFINANCETYPES_ORGVIEW" replaceIfExists="true">
			<![CDATA[
		SELECT t1.fintype,
			t1.fincategory,
			t1.fintypedesc,
			t1.finccy,
			t1.findayscaltype,
			t1.finactype,
			t1.fincontingentactype,
			t1.finisgenref,
			t1.finmaxamount,
			t1.finminamount,
			t1.finisopennewfinac,
			t1.finisalwmd,
			t1.finschdmthd,
			t1.finisalwgrace,
			t1.equalrepayment,
			t1.finratetype,
			t1.finbaserate,
			t1.finsplrate,
			t1.finintrate,
			t1.finminrate,
			t1.finmaxrate,
			t1.findftintfrq,
			t1.finisintcpz,
			t1.fincpzfrq,
			t1.finisrvwalw,
			t1.finrvwfrq,
			t1.fingrcratetype,
			t1.fingrcbaserate,
			t1.fingrcsplrate,
			t1.fingrcintrate,
			t1.fingrcminrate,
			t1.fingrcmaxrate,
			t1.fingrcdftintfrq,
			t1.fingrcisintcpz,
			t1.fingrccpzfrq,
			t1.fingrcisrvwalw,
			t1.fingrcrvwfrq,
			t1.finminterm,
			t1.finmaxterm,
			t1.findftterms,
			t1.finrpyfrq,
			t1.finrepaymethod,
			t1.finisalwdifferment,
			t1.finmaxdifferment,
			t1.finisactive,
			t1.stepfinance,
			t1.steppingmandatory,
			t1.alwmanualsteps,
			t1.alwdsteppolicies,
			t1.dftsteppolicy,
			t1.finisdwpayrequired,
			t1.finrvwrateapplfor,
			t1.finalwratechangeanydate,
			t1.finisintcpzatgrcend,
			t1.finschcalcodeonrvw,
			t1.alwplandeferment,
			t1.plandefercount,
			t1.pftpayactype,
			t1.finisopenpftpayacc,
			t1.finisalwgrcrepay,
			t1.fingrcschdmthd,
			t1.fingrcmargin,
			t1.finmargin,
			t1.fincommitmentreq,
			t1.fincollateralreq,
			t1.findepreciationreq,
			t1.findepreciationfrq,
			t1.finbankcontingentactype,
			t1.finprovisionactype,
			t1.allowriainvestment,
			t1.overridelimit,
			t1.limitrequired,
			t1.fincommitmentovrride,
			t1.fincollateralovrride,
			t1.finrepaypftonfrq,
			t1.finpftunchanged,
			t1.applyodpenalty,
			t1.odincgrcdays,
			t1.odchargetype,
			t1.odgracedays,
			t1.odchargecalon,
			t1.odchargeamtorperc,
			t1.odallowwaiver,
			t1.odmaxwaiverperc,
			t1.findivision,
			t3.divisioncodedesc AS lovdescfindivisionname,
			t1.finsuspactype,
			t1.product,
			t1.startdate,
			t1.enddate,
			t1.allowdownpaypgm,
			t1.fintypedesc AS lovdescpromofintypedesc,
			t1.remarks,
			t4.policydesc AS lovdescdftsteppolicyname,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.alwadvancerent,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.rolloverfinance,
			t1.rolloverfrq,
			t1.downpayrule,
			t1.alwmultipartydisb,
			t1.collateraltype,
			t1.tdsapplicable,
			t5.rulecode AS downpayrulecode,
			t5.rulecodedesc AS downpayruledesc,
			t1.applygrcpricing,
			t1.applyrpypricing,
			t6.rulecode AS grcpricingmethoddesc,
			t7.rulecode AS rpypricingmethoddesc,
			t1.droplineod,
			t1.droppingmethod,
			t1.ratechganyday,
			t4.steptype AS dftsteppolicytype,
			t1.manualschedule,
			t1.alwbpi,
			t1.bpitreatment,
			t1.pftdueschon,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.fddlockperiod,
			t1.alwdrpymethods,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.roundingmode,
			t1.roundingtarget,
			t1.frequencydays,
			t1.quickdisb,
			t1.alwreage,
			t1.alwunplanemiholiday,
			t1.alwmaxdisbcheckreq,
			t1.productcategory,
			t1.rpyhierarchy,
			t1.developerfinance,
			t3.entitycode AS lovdescentitycode,
			t8.entitydesc AS lovdescentitydesc,
			t1.costoffunds,
			t1.chequecapturereq,
			t1.finltvcheck,
			t1.partiallysecured,
			t1.alwadvemi,
			t1.advemiminterms,
			t1.advemimaxterms,
			t1.advemidftterms,
			t1.advemischdmthd,
			t1.bpipftdaysbasis,
			t1.eligibilitymethods,
			t1.alwhybridrate,
			t1.fixedratetenor,
			t1.odmincapamount,
			t1.odrulecode,
			t1.alwzerointacc,
			t1.finisalwpartialrpy,
			t1.autorejectiondays,
			t1.taxnomand,
			t1.putcallrequired,
			t1.grcadvintersetreq,
			t1.grcadvtype,
			t1.grcadvminterms,
			t1.grcadvmaxterms,
			t1.grcadvdefaultterms,
			t1.advintersetreq,
			t1.advtype,
			t1.advminterms,
			t1.advmaxterms,
			t1.advdefaultterms,
			t1.advstage,
			t1.dsfreq,
			t1.cashcollateralreq,
			t1.alwearlypaymethods,
			t1.tdsallowtomodify,
			t1.tdsapplicableto,
			t1.alwvan,
			t1.vanallocationmethod,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.alwsanctionamt,
			t1.alwsanctionamtoverride,
			t1.sanbsdschdle,
			t1.finisratervwatgrcend,
			t1.schdonpmtcal,
			t1.autoapprove,
			t1.ocrrequired,
			t1.allowedocrs,
			t1.defaultocr,
			t1.allowedLoanPurposes,
			t1.specificLoanPurposes,
			t1.GrcAdjReq,
			t1.GrcPeriodAftrFullDisb,
			t1.AutoIncrGrcEndDate,
			t1.grcAutoIncrMonths,
			t1.maxAutoIncrAllowed
			FROM rmtfinancetypes t1
			JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
			LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
			LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
			LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
			LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
			LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
			]]>
		</createView>
	</changeSet>

	<changeSet id="396" author="tejaswi.b">
		<comment> Newly Added Columns : AlwGrcAdj, EndGrcPeriodAftrFullDisb, AutoIncGrcEndDate </comment>
		<createView viewName="FinanceMain_Tview" replaceIfExists="true">
		<![CDATA[
		SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
				 ]]>
		</createView>
	</changeSet>


	<changeSet id="397_pre" author="tejaswi.b" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'financemain_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="397" author="tejaswi.b">
		<comment>Newly Added Columns : AlwGrcAdj, EndGrcPeriodAftrFullDisb, AutoIncGrcEndDate </comment>
		<createView viewName="FinanceMain_view" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			UNION ALL
			 SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj
			   FROM (((((((((((((((((financemain t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			  WHERE (NOT (EXISTS ( SELECT 1
			           FROM financemain_temp
			          WHERE ((financemain_temp.finreference) = (t1.finreference)))))
					  ]]>
		</createView>
	</changeSet>

	<changeSet id="397_post" author="tejaswi.b" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="398" author="tejaswi.b">
		<comment> Newly Added Columns : AlwGrcAdj, EndGrcPeriodAftrFullDisb, AutoIncGrcEndDate </comment>
		<createView viewName="Financemain_Aview" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
    t1.offerproduct,
    t1.offeramount,
    t1.custsegmentation,
    t1.baseproduct,
    t1.processtype,
    t1.bureautimeseries,
    t1.campaignname,
    t1.existinglanrefno,
    t1.leadsource,
    t1.posource,
    t1.rsa,
    t1.verification,
    t1.sourcingbranch,
    t1.sourchannelcategory,
    t1.asmname,
	t13.branchdesc AS lovDescSourcingBranch,
    t1.EndGrcPeriodAftrFullDisb,
    t1.AutoIncGrcEndDate,
    t1.AlwGrcAdj
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
	 LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
	 ]]>
		</createView>
	</changeSet>

	<changeSet id="399" author="tejaswi.b">
		<comment>
			New Columns : T1.AlwGrcAdj, T1.EndGrcPeriodAftrFullDisb, T1.AutoIncGrcEndDate
		</comment>
		<createView viewName="FINANCEENQUIRY_VIEW" replaceIfExists="true">
		<![CDATA[
			SELECT t1.finreference,
				t1.finbranch,
				t1.fintype,
				t1.finccy,
				t1.schedulemethod,
				t1.profitdaysbasis,
				t1.finstartdate,
				t1.calterms AS numberofterms,
				t1.custid,
				t1.finamount,
				t1.grcperiodenddate,
				t1.maturitydate,
				t1.finrepaymentamount,
				t1.finisactive,
				t1.allowgrcperiod,
				t1.downpayment,
				t1.migratedfinance,
				t1.lastrepaydate,
				t1.lastrepaypftdate,
				t1.fincurrassetvalue,
				t1.blacklisted,
				t1.feechargeamt,
				t1.closingstatus,
				t1.graceterms,
				t1.alwmultidisb,
				t1.defferments,
				t1.finstatus,
				t1.mandateid,
				t1.finrepaymethod,
				t1.finassetvalue,
				t1.insuranceamt,
				t1.sanbsdschdle,
				t1.promotionseqid,
				t1.svamount,
				t1.cbamount,
				t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
				t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
				t2.fintypedesc AS lovdescfintypename,
				t2.finscheduleon AS lovdescfinscheduleon,
				t2.findivision AS lovdescfindivision,
				t2.fincategory AS lovdescproductcodename,
				t2.finisalwdifferment AS lovdescfinalwdeferment,
				t3.custcif AS lovdesccustcif,
				t3.custshrtname AS lovdesccustshrtname,
				t4.branchdesc AS lovdescfinbranchname,
				t5.custtypectg,
				COALESCE(t9.noinst, 0 ) AS noinst,
				t1.finocrrequired, T1.AlwGrcAdj, T1.endGrcPeriodAftrFullDisb, T1.autoIncGrcEndDate
				FROM financemain t1
				JOIN rmtfinancetypes t2 ON t1.fintype  = t2.fintype 
				JOIN customers t3 ON t1.custid = t3.custid
				JOIN rmtbranches t4 ON t1.finbranch  = t4.branchcode 
				JOIN rmtcusttypes t5 ON t3.custtypecode  = t5.custtypecode 
				LEFT JOIN finpftdetails t9 ON t1.finreference  = t9.finreference 
				]]>
		</createView>
	</changeSet>
	<changeSet id="400" author="tejaswi.b">
		<comment>
			New Columns : T1.AlwGrcAdj, T1.EndGrcPeriodAftrFullDisb, T1.AutoIncGrcEndDate
		</comment>
		<createView viewName="FINANCEENQUIRY_TVIEW" replaceIfExists="true">
		<![CDATA[
		SELECT t1.finreference,
					t1.finbranch,
					t1.fintype,
					t1.finccy,
					t1.schedulemethod,
					t1.profitdaysbasis,
					t1.finstartdate,
					t1.calterms AS numberofterms,
					t1.custid,
					t1.finamount,
					t1.grcperiodenddate,
					t1.maturitydate,
					t1.finrepaymentamount,
					t1.finisactive,
					t1.allowgrcperiod,
					t1.downpayment,
					t1.migratedfinance,
					t1.lastrepaydate,
					t1.lastrepaypftdate,
					t1.fincurrassetvalue,
					t1.blacklisted,
					t1.feechargeamt,
					t1.closingstatus,
					t1.graceterms,
					t1.alwmultidisb,
					t1.defferments,
					t1.finstatus,
					t1.mandateid,
					t1.finrepaymethod,
					t1.finassetvalue,
					t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
					t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
					t2.fintypedesc AS lovdescfintypename,
					t2.finscheduleon AS lovdescfinscheduleon,
					t2.findivision AS lovdescfindivision,
					t2.fincategory AS lovdescproductcodename,
					t2.finisalwdifferment AS lovdescfinalwdeferment,
					t3.custcif AS lovdesccustcif,
					t3.custshrtname AS lovdesccustshrtname,
					t4.branchdesc AS lovdescfinbranchname,
					t5.custtypectg,
					COALESCE(t9.noinst, 0 ) AS noinst,
					t1.finocrrequired, 
					T1.AlwGrcAdj, 
					T1.endGrcPeriodAftrFullDisb, 
					T1.autoIncGrcEndDate 
					FROM financemain_temp t1
					JOIN rmtfinancetypes t2 ON t1.fintype  = t2.fintype 
					JOIN customers t3 ON t1.custid = t3.custid
					JOIN rmtbranches t4 ON t1.finbranch  = t4.branchcode 
					JOIN rmtcusttypes t5 ON t3.custtypecode  = t5.custtypecode 
					LEFT JOIN finpftdetails t9 ON t1.finreference  = t9.finreference
					]]>
		</createView>
	</changeSet>

	<changeSet id="401.1" author="rajesh.n">
		<comment>New view: PMAY_AView</comment>
		<createView viewName="PMAY_AView" replaceIfExists="true">
			<![CDATA[
				Select	T1.FinReference,T1.notifiedTown,T1.TownCode,T4.TOWNNAME,T1.centralAssistance,T1.ownedHouse,carpetArea,T1.householdAnnIncome,
				balanceTransfer,T1.primaryApplicant,T1.transactionFinType,T1.product,T1.PRPRTYOWNEDBYWOMEN,T1.waterSupply,T1.drinage,T1.electricity,T1.
				pmayCategory,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,T1.rolecode,T1.nextrolecode,T1.taskid,T1.
				nexttaskid,T1.recordtype,T1.workflowid,T3.CustCif,T3.CUSTSHRTNAME,T2.FinType
				From 	PMAY T1
				Inner join financemain T2 on T1.Finreference =T2.Finreference
				Inner join Customers T3 on T2.CustId =T3.CustId
				left join Towncode T4 on T1.TownCode = T4.TownCode
			]]>
		</createView>
	</changeSet>
	<changeSet id="402.1" author="rajesh.n">
		<comment>New view: PMAY_View</comment>
		<createView viewName="PMAY_View" replaceIfExists="true">
			<![CDATA[
				Select	T1.FinReference,T1.notifiedTown,T1.TownCode,T4.TOWNNAME,T1.centralAssistance,T1.ownedHouse,T1.carpetArea,T1.householdAnnIncome,
					T1.balanceTransfer,T1.primaryApplicant,T1.transactionFinType,T1.product,T1.PRPRTYOWNEDBYWOMEN,T1.waterSupply,T1.drinage,T1.electricity,
					T1.pmayCategory,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,T1.rolecode,T1.nextrolecode,T1.taskid,T1.
					nexttaskid,T1.recordtype,T1.workflowid,T3.CustCif,T3.CUSTSHRTNAME,T2.FinType
					From PMAY_TEMP T1
					Inner join financemain_view T2 on T1.Finreference =T2.Finreference
					Inner join Customers T3 on T2.CustId =T3.CustId
					left join Towncode T4 on T1.TownCode = T4.TownCode
		      union all 
		       Select	T1.FinReference,T1.notifiedTown,T1.TownCode, T4.TOWNNAME ,T1.centralAssistance,T1.ownedHouse,T1.carpetArea,T1.householdAnnIncome,
					T1.balanceTransfer,T1.primaryApplicant,T1.transactionFinType,T1.	product,T1.PRPRTYOWNEDBYWOMEN,T1.waterSupply,T1.drinage,T1.electricity,T1.
					pmayCategory,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,T1.rolecode,T1.nextrolecode,T1.taskid,T1.
					nexttaskid,T1.recordtype,T1.workflowid,T3.CustCif,T3.CUSTSHRTNAME,T2.FinType
					From PMAY T1
		      Inner join financemain_view T2 on T1.Finreference =T2.Finreference
					Inner join Customers T3 on T2.CustId =T3.CustId
					left join Towncode T4 on T1.TownCode = T4.TownCode
		       WHERE     NOT EXISTS (SELECT 1 FROM PMAY_Temp WHERE finReference = T2.finReference)
       		]]>
		</createView>
	</changeSet>

	<changeSet id="403_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'financemain_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="403" author="rajesh.n">
		<comment>Newly Added Columns : pMay </comment>
		<createView viewName="FinanceMain_view" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			UNION ALL
			 SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay
			   FROM (((((((((((((((((financemain t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			  WHERE (NOT (EXISTS ( SELECT 1
			           FROM financemain_temp
			          WHERE ((financemain_temp.finreference) = (t1.finreference)))))
					  ]]>
		</createView>
	</changeSet>

	<changeSet id="403_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="404" author="rajesh.n">
		<comment> Newly Added Columns : pmay </comment>
		<createView viewName="Financemain_Aview" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.deptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
    t1.appliedloanamt,
    t1.finisratervwatgrcend,
    t1.reqloanamt,
    t1.reqloantenor,
    t1.finocrrequired,
    t1.offerproduct,
    t1.offeramount,
    t1.custsegmentation,
    t1.baseproduct,
    t1.processtype,
    t1.bureautimeseries,
    t1.campaignname,
    t1.existinglanrefno,
    t1.leadsource,
    t1.posource,
    t1.rsa,
    t1.verification,
    t1.sourcingbranch,
    t1.sourchannelcategory,
    t1.asmname,
	t13.branchdesc AS lovDescSourcingBranch,
    t1.EndGrcPeriodAftrFullDisb,
    t1.AutoIncGrcEndDate,
    t1.AlwGrcAdj,
	t1.pMay
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
	 LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
	 ]]>
		</createView>
	</changeSet>

	<changeSet id="405" author="rajesh.n">
		<comment> Newly Added Columns : pmay </comment>
		<createView viewName="FinanceMain_Tview" replaceIfExists="true">
		<![CDATA[
		SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="401.1" author="Ganesh.P">
		<comment>Added CustID</comment>
		<createView viewName="FINANCEMAIN_LVIEW" replaceIfExists="true">
			<![CDATA[
			SELECT
				t1.finreference,
				t1.investmentref,
				t1.fintype,
				t1.finccy,
				t1.finamount,
				t1.downpayment,
				t1.feechargeamt,
				t1.schedulemethod,
				t1.numberofterms,
				t1.recordstatus,
				t1.recordtype,
				t1.rolecode,
				t1.nextrolecode,
				t1.finbranch,
				t1.fincontractdate,
				t1.linkedfinref,
				t1.nextuserid,
				t1.priority,
				t1.workflowid,
				t1.taskid,
				t1.nexttaskid,
				t1.finpreapprovedref,
				t1.rcdmaintainsts,
				t1.insuranceamt,
				t1.fincurrassetvalue,
				t1.calterms,
				t1.deviationapproval,
				t1.finpurpose,
				t1.initiatedate,
				t1.finassetvalue,
				t2.custcif AS lovdesccustcif,
				t2.custshrtname AS lovdesccustshrtname,
				t2.custpassportno AS lovdesccustpassportno,
				t2.custdob AS lovdesccustdob,
				t2.custcrcpr AS lovdesccustcrcpr,
				t2.phonenumber,
				t3.fincategory AS lovdescproductcodename,
				t3.findivision AS lovdescfindivision,
				t3.product AS lovdescfinproduct,
				t3.fintypedesc AS lovdescfintypename,
				COALESCE(t4.roledesc,${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
				t1.samplingrequired,
				t1.advanceemi,
				t1.advemiterms,
				t1.bpipftdaysbasis,
				t1.graceterms,
				t1.productcategory,
				t1.reqloanamt,
				t1.reqloantenor,
				t1.finocrrequired,
				t1.offerproduct,
				t1.offeramount,
				t1.custsegmentation,
				t1.baseproduct,
				t1.processtype,
				t1.bureautimeseries,
				t1.campaignname,
				t1.existinglanrefno,
				t1.leadsource,
				t1.posource,
				t1.rsa,
				t1.verification,
				t1.sourcingbranch,
				t1.sourchannelcategory,
				t1.asmname,
				t1.offerid,
				t1.applicationno,
				t1.lastmnton,
				t1.CustID
				FROM financemain_temp t1
				JOIN customers t2 ON t1.custid = t2.custid
				JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
				LEFT JOIN secroles t4 ON t1.nextrolecode = t4.rolecd
				]]>
		</createView>
	</changeSet>

	<changeSet id="402.1" author="Ganesh.P">
		<comment>Change mapping of Receipt Header and details to temp</comment>
		<createView viewName="FINFEERECEIPTS_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT	T1.Id, T1.FEEID,T1.RECEIPTID, T1.PAIDAMOUNT, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, 
						T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
						T2.AMOUNT ReceiptAmount, T2.TRANSACTIONREF, T2.FAVOURNUMBER,
						T3.FEETYPEID, T3.VASREFERENCE ,
						T4.FeeTypeCode, T4.FeeTypeDesc, 
						T5.RECEIPTMODE ReceiptType
					FROM	FinFeeReceipts_Temp  T1 
					Inner Join FINRECEIPTDETAIL_Temp T2 on T1.ReceiptID = T2.RECEIPTID
					Inner Join FinFeeDetail_View T3 on T1.FeeId = T3.FEEID
					Left Join  FeeTypes T4  On T3.FeeTypeId = T4.FeeTypeId
					Inner Join FINRECEIPTHEADER_Temp T5 on T1.RECEIPTID = T5.RECEIPTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="403.1" author="Ganesh.P">
		<comment>Change mapping of Receipt Header and details to MAIN</comment>
		<createView viewName="FINFEERECEIPTS_AVIEW" replaceIfExists="true">
			<![CDATA[
			 SELECT	 	T1.Id, T1.FEEID,T1.RECEIPTID, T1.PAIDAMOUNT, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, 
				 		T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
			 			T2.AMOUNT ReceiptAmount, T2.TRANSACTIONREF, T2.FAVOURNUMBER,
			 			T3.FEETYPEID, T3.VASREFERENCE ,
			 			T4.FeeTypeCode, T4.FeeTypeDesc, 
			 			T5.RECEIPTMODE ReceiptType,
			 			T3.finreference
			 			FROM    	FinFeeReceipts  T1 
			 			Inner Join FINRECEIPTDETAIL T2 on T1.ReceiptID = T2.RECEIPTID
			 			Inner Join FinFeeDetail_View T3 on T1.FeeId = T3.FEEID
			 			Left Join  FeeTypes T4  On T3.FeeTypeId = T4.FeeTypeId
			 			Inner Join FINRECEIPTHEADER T5 on T1.RECEIPTID = T5.RECEIPTID
			 			]]>
		</createView>
	</changeSet>

	<changeSet id="404.1" author="Ganesh.P">
		<comment>Change mapping of FinFeeDetail table to view </comment>
		<createView viewName="FINFEERECEIPTS_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT	    	T1.Id, T1.FEEID,T1.RECEIPTID, T1.PAIDAMOUNT, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, 
								T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
								T2.AMOUNT ReceiptAmount, T2.TRANSACTIONREF, T2.FAVOURNUMBER,
								T3.FEETYPEID, T3.VASREFERENCE ,
								T4.FeeTypeCode, T4.FeeTypeDesc, 
								T3.finreference,
								T5.RECEIPTMODE ReceiptType
				FROM    	  	FinFeeReceipts_Temp  T1 
				Inner Join  	FINRECEIPTDETAIL T2 on T1.ReceiptID = T2.RECEIPTID
				Inner Join  	FinFeeDetail_view T3 on T1.FeeId = T3.FEEID
				Left Join   	FeeTypes T4  On T3.FeeTypeId = T4.FeeTypeId
				Inner Join  	FINRECEIPTHEADER T5 on T1.RECEIPTID = T5.RECEIPTID
				UNION ALL
				SELECT	    	T1.Id, T1.FEEID,T1.RECEIPTID, T1.PAIDAMOUNT, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, 
								T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
								T2.AMOUNT ReceiptAmount, T2.TRANSACTIONREF, T2.FAVOURNUMBER,
								T3.FEETYPEID, T3.VASREFERENCE ,
								T4.FeeTypeCode, T4.FeeTypeDesc, 
								T3.finreference,
								T5.RECEIPTMODE ReceiptType
				FROM    	  	FinFeeReceipts  T1 
				Inner Join  	FINRECEIPTDETAIL T2 on T1.ReceiptID = T2.RECEIPTID
				Inner Join  	FinFeeDetail_view T3 on T1.FeeId = T3.FEEID
				Left Join   	FeeTypes T4  On T3.FeeTypeId = T4.FeeTypeId
				Inner Join  	FINRECEIPTHEADER T5 on T1.RECEIPTID = T5.RECEIPTID
				WHERE     		(NOT EXISTS  (SELECT 1 FROM FinFeeReceipts_Temp WHERE (Id = T1.Id)))
				]]>
		</createView>
	</changeSet>

	<changeSet id="405.1" author="Ganesh.P">
		<createView viewName="FinFeeRefundHeader_View" replaceIfExists="true">
			<![CDATA[
		SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
			T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc, T5.branchdesc
			FROM FinFeeRefundHeader_TEMP T1
			Left join RejectFinanceMain T2 On T2.FinReference =T1.FinReference
			Left JOIN Customers T3 On T3.CustID=T2.CustID
			Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			UNION ALL 
		SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
			T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc, T5.branchdesc
			FROM FinFeeRefundHeader T1
			Left join RejectFinanceMain T2 On T2.FinReference =T1.FinReference
			Left JOIN Customers T3 On T3.CustID=T2.CustID
			Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			WHERE     NOT EXISTS (SELECT 1 FROM FinFeeRefundHeader_TEMP WHERE HeaderID =T1.HeaderID)
			]]>
		</createView>
	</changeSet>

	<changeSet id="406.1" author="Ganesh.P">
		<createView viewName="FinFeeRefundHeader_TView" replaceIfExists="true">
			<![CDATA[
		SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
			T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc, T5.branchdesc
			FROM FinFeeRefundHeader_TEMP T1
			Left join RejectFinanceMain T2 On T2.FinReference =T1.FinReference
			Left JOIN Customers T3 On T3.CustID=T2.CustID
			Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			]]>
		</createView>
	</changeSet>

	<changeSet id="407.1" author="Ganesh.P">
		<createView viewName="FinFeeRefundHeader_AView" replaceIfExists="true">
			<![CDATA[
		SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
			T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
			T4.fintypedesc, T5.branchdesc
			FROM FinFeeRefundHeader T1
			Left join RejectFinanceMain T2 On T2.FinReference =T1.FinReference
			Left JOIN Customers T3 On T3.CustID=T2.CustID
			Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
			LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			]]>
		</createView>
	</changeSet>

	<changeSet id="408.1" author="Ganesh.P">
		<createView viewName="FinFeeRefundDetails_View" replaceIfExists="true">
			<![CDATA[
		SELECT 		T1.Id,T1.HeaderId, T1.FeeId, T1.refundAmount, T1.refundAmtGST, T1.refundAmtOriginal,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
			FROM FinFeeRefundDetails_temp T1
			UNION ALL 
		SELECT 		T1.Id,T1.HeaderId, T1.FeeId, T1.refundAmount, T1.refundAmtGST, T1.refundAmtOriginal,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
			FROM FinFeeRefundDetails T1
			WHERE     NOT EXISTS (SELECT 1 FROM FinFeeRefundDetails_temp WHERE Id =T1.Id)
			]]>
		</createView>
	</changeSet>

	<changeSet id="409.1" author="Ganesh.P">
		<createView viewName="FinFeeRefundDetails_TView" replaceIfExists="true">
			<![CDATA[
		SELECT 		T1.Id,T1.HeaderId, T1.FeeId, T1.refundAmount, T1.refundAmtGST, T1.refundAmtOriginal,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
			FROM FinFeeRefundDetails_temp T1
			]]>
		</createView>
	</changeSet>

	<changeSet id="410" author="Ganesh.P">
		<createView viewName="FinFeeRefundDetails_AView" replaceIfExists="true">
			<![CDATA[
		SELECT 		T1.Id,T1.HeaderId, T1.FeeId, T1.refundAmount, T1.refundAmtGST, T1.refundAmtOriginal,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
			T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
			FROM FinFeeRefundDetails T1
			]]>
		</createView>
	</changeSet>

	<changeSet id="411.1" author="Ganesh.P">
		<comment>Added PAYMENTTYPE swich case for cash</comment>
		<createView viewName="FINRECEIPTHEADER_FDVIEW" replaceIfExists="true">
			<![CDATA[
		SELECT t1.receiptid,
			    t1.receiptdate,
			    t1.receipttype,
			    t1.recagainst,
			        CASE
			            WHEN t1.recagainst = 'C' THEN t10.custcif
			            ELSE t1.reference
			        END AS reference,
			    t1.receiptpurpose,
			    t1.receiptmode,
			    t1.excessadjustto,
			    t1.allocationtype,
			    t1.receiptamount,
			    t1.effectschdmethod,
			    t1.receiptmodestatus,
			    t1.subreceiptmode,
			    t1.receiptchannel,
			    t1.receivedfrom,
			    t1.pannumber,
			    t1.collectionagentid,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.fintype,
			    t2.finbranch,
			    t3.custcif,
			    t3.custshrtname,
			    t2.finccy,
			    t1.realizationdate,
			    t1.cancelreason,
			    t4.fintypedesc,
			    t6.branchdesc AS finbranchdesc,
			    t5.ccydesc AS finccydesc,
			    t7.rejectdesc AS cancelreasondesc,
			    COALESCE(t2.finisactive, 0) AS finisactive,
			    t2.schedulemethod,
			    t2.profitdaysbasis AS pftdaysbasis,
			    t1.waviedamt,
			    COALESCE(t3.custid, 0) AS custid,
			    t1.totfeeamount,
			    t1.bouncedate,
			    t1.remarks,
			    t1.rcdmaintainsts,
			    t1.depositprocess,
			    t1.depositbranch,
			    t1.lpiamount,
			    t1.lppamount,
			    t1.gstlpiamount,
			    t1.gstlppamount,
			    t1.gdravailable,
			    t1.releasetype,
			    t1.thirdpartyname,
			    t1.thirdpartymobilenum,
			    t2.productcategory,
			    t2.promotioncode,
				(CASE
				WHEN t8.PAYMENTTYPE IN ('CHEQUE', 'DD') THEN t8.FAVOURNUMBER
				WHEN t8.PAYMENTTYPE IN ('CASH') THEN t8.PaymentRef
				ELSE t8.TRANSACTIONREF
				END) TRANSACTIONREF,
			    t1.cashierbranch,
			    t2.nextrepayrvwdate,
			    t1.initiatedate,
			    t9.code AS collectionagentcode,
			    t9.description AS collectionagentdesc,
			    t1.module,
			    t1.extreference,
			    t10.custcif AS customercif,
			    t10.custshrtname AS customername,
			    t1.findivision,
			    t1.postbranch,
			    t11.divisioncodedesc AS findivisiondesc,
			    t12.branchdesc AS postbranchdesc,
			    t13.branchdesc AS cashierbranchdesc,
			    t11.entitycode,
			    t1.instructionuid,
			    t1.actfinreceipt
			   FROM finreceiptheader_temp t1
			     LEFT JOIN financemain_temp t2 ON t1.reference = t2.finreference
			     LEFT JOIN customers t3 ON t2.custid = t3.custid
			     LEFT JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
			     LEFT JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode
			     LEFT JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode
			     LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode
			     LEFT JOIN finreceiptdetail_temp t8 ON t1.receiptid = t8.receiptid AND t1.receiptmode = t8.paymenttype
			     LEFT JOIN collectionagencies t9 ON t1.collectionagentid = t9.id
			     LEFT JOIN CUSTOMERS t10 ON CAST(T10.CUSTID AS VARCHAR(20)) = T1.REFERENCE
			     LEFT JOIN smtdivisiondetail t11 ON t1.findivision = t11.divisioncode
			     LEFT JOIN rmtbranches t12 ON t1.postbranch = t12.branchcode
			     LEFT JOIN rmtbranches t13 ON t1.cashierbranch = t13.branchcode
			     ]]>
		</createView>
	</changeSet>

	<changeSet id="412.1" author="Ganesh.P">
		<comment>Added PAYMENTTYPE swich case for cash</comment>
		<createView viewName="FinReceiptHeader_FEDView" replaceIfExists="true">
		<![CDATA[
			SELECT t1.receiptid,
			    t1.receiptdate,
			    t1.receipttype,
			    t1.recagainst,
				 CASE
			            WHEN t1.recagainst = 'C' THEN t13.custcif
			            ELSE t1.reference
			        END AS reference,
			    t1.receiptpurpose,
			    t1.receiptmode,
			    t1.excessadjustto,
			    t1.allocationtype,
			    t1.receiptamount,
			    t1.effectschdmethod,
			    t1.receiptmodestatus,
			    t1.subreceiptmode,
			    t1.receiptchannel,
			    t1.receivedfrom,
			    t1.pannumber,
			    t1.collectionagentid,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.fintype,
			    t2.finbranch,
			    t3.custcif,
			    t3.custshrtname,
			    t2.finccy,
			    t1.realizationdate,
			    t1.cancelreason,
			    t4.fintypedesc,
			    t6.branchdesc AS finbranchdesc,
			    t5.ccydesc AS finccydesc,
			    t7.rejectdesc AS cancelreasondesc,
			    COALESCE(t2.finisactive, 0) AS finisactive,
			    t2.schedulemethod,
			    t2.profitdaysbasis AS pftdaysbasis,
			    t1.waviedamt,
			    COALESCE(t3.custid, 0) AS custid,
			    t1.totfeeamount,
			    t1.bouncedate,
			    t1.remarks,
			    t1.rcdmaintainsts,
			    t1.depositprocess,
			    t1.depositbranch,
			    t1.lpiamount,
			    t1.lppamount,
			    t1.gstlpiamount,
			    t1.gstlppamount,
			    t1.gdravailable,
			    t1.releasetype,
			    t1.thirdpartyname,
			    t1.thirdpartymobilenum,
			    t2.productcategory,
			    t2.promotioncode,
			    (CASE
				WHEN t8.PAYMENTTYPE IN ('CHEQUE', 'DD') THEN t8.FAVOURNUMBER
				WHEN t8.PAYMENTTYPE IN ('CASH') THEN t8.PaymentRef
				ELSE t8.TRANSACTIONREF
				END) TRANSACTIONREF,
			    t2.nextrepayrvwdate,
			    t1.cashierbranch,
			    t1.initiatedate,
			    t1.instructionuid,
			    t1.findivision,
			    t1.postbranch,
			    t10.divisioncodedesc AS findivisiondesc,
			    t11.branchdesc AS postbranchdesc,
			    t12.branchdesc AS cashierbranchdesc,
			    t10.entitycode,
			    t9.code AS collectionagentcode,
			    t9.description AS collectionagentdesc,
			    t1.module,
			    t1.extreference,
			    t13.custcif AS customercif,
			    t13.custshrtname AS customername
			   FROM finreceiptheader_temp t1
			     LEFT JOIN financemain_temp t2 ON t1.reference = t2.finreference
			     LEFT JOIN customers t3 ON t2.custid = t3.custid
			     LEFT JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
			     LEFT JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode
			     LEFT JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode
			     LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode
			     LEFT JOIN finreceiptdetail t8 ON t1.receiptid = t8.receiptid AND t1.receiptmode = t8.paymenttype
			     LEFT JOIN collectionagencies t9 ON t1.collectionagentid = t9.id
			     LEFT JOIN smtdivisiondetail t10 ON t1.findivision = t10.divisioncode
			     LEFT JOIN rmtbranches t11 ON t1.postbranch = t11.branchcode
			     LEFT JOIN rmtbranches t12 ON t1.cashierbranch = t12.branchcode
				 LEFT JOIN CUSTOMERS t13 ON CAST(t13.custid AS VARCHAR(20)) = t1.reference
			UNION ALL
			 SELECT t1.receiptid,
			    t1.receiptdate,
			    t1.receipttype,
			    t1.recagainst,
			     CASE
			            WHEN t1.recagainst = 'C' THEN t13.custcif
			            ELSE t1.reference
			        END AS reference,
			    t1.receiptpurpose,
			    t1.receiptmode,
			    t1.excessadjustto,
			    t1.allocationtype,
			    t1.receiptamount,
			    t1.effectschdmethod,
			    t1.receiptmodestatus,
			    t1.subreceiptmode,
			    t1.receiptchannel,
			    t1.receivedfrom,
			    t1.pannumber,
			    t1.collectionagentid,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.fintype,
			    t2.finbranch,
			    t3.custcif,
			    t3.custshrtname,
			    t2.finccy,
			    t1.realizationdate,
			    t1.cancelreason,
			    t4.fintypedesc,
			    t6.branchdesc AS finbranchdesc,
			    t5.ccydesc AS finccydesc,
			    t7.rejectdesc AS cancelreasondesc,
			    COALESCE(t2.finisactive, 0) AS finisactive,
			    t2.schedulemethod,
			    t2.profitdaysbasis AS pftdaysbasis,
			    t1.waviedamt,
			    COALESCE(t3.custid, 0) AS custid,
			    t1.totfeeamount,
			    t1.bouncedate,
			    t1.remarks,
			    t1.rcdmaintainsts,
			    t1.depositprocess,
			    t1.depositbranch,
			    t1.lpiamount,
			    t1.lppamount,
			    t1.gstlpiamount,
			    t1.gstlppamount,
			    t1.gdravailable,
			    t1.releasetype,
			    t1.thirdpartyname,
			    t1.thirdpartymobilenum,
			    t2.productcategory,
			    t2.promotioncode,
				(CASE
				WHEN t8.PAYMENTTYPE IN ('CHEQUE', 'DD') THEN t8.FAVOURNUMBER
				WHEN t8.PAYMENTTYPE IN ('CASH') THEN t8.PaymentRef
				ELSE t8.TRANSACTIONREF
				END) TRANSACTIONREF,
			    t2.nextrepayrvwdate,
			    t1.cashierbranch,
			    t1.initiatedate,
			    t1.instructionuid,
			    t1.findivision,
			    t1.postbranch,
			    t10.divisioncodedesc AS findivisiondesc,
			    t11.branchdesc AS postbranchdesc,
			    t12.branchdesc AS cashierbranchdesc,
			    t10.entitycode,
			    t9.code AS collectionagentcode,
			    t9.description AS collectionagentdesc,
			    t1.module,
			    t1.extreference,
			    t13.custcif AS customercif,
			    t13.custshrtname AS customername
			   FROM finreceiptheader t1
			     LEFT JOIN financemain_temp t2 ON t1.reference = t2.finreference
			     LEFT JOIN customers t3 ON t2.custid = t3.custid
			     LEFT JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
			     LEFT JOIN rmtcurrencies t5 ON t2.finccy = t5.ccycode
			     LEFT JOIN rmtbranches t6 ON t2.finbranch = t6.branchcode
			     LEFT JOIN bmtrejectcodes t7 ON t1.cancelreason = t7.rejectcode
			     LEFT JOIN finreceiptdetail t8 ON t1.receiptid = t8.receiptid AND t1.receiptmode = t8.paymenttype
			     LEFT JOIN collectionagencies t9 ON t1.collectionagentid = t9.id
			     LEFT JOIN smtdivisiondetail t10 ON t1.findivision = t10.divisioncode
			     LEFT JOIN rmtbranches t11 ON t1.postbranch = t11.branchcode
			     LEFT JOIN rmtbranches t12 ON t1.cashierbranch = t12.branchcode
				 LEFT JOIN CUSTOMERS t13 ON CAST(t13.custid AS VARCHAR(20)) = t1.reference
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM finreceiptheader_temp
			          WHERE finreceiptheader_temp.receiptid = t1.receiptid))
			          ]]>
		</createView>
	</changeSet>

	<changeSet id="413.1" author="Ganesh.P">
		<comment>View to fetch cancel or rejected finances</comment>
		<createView viewName="FeeRefundFinanceMain_VIEW" replaceIfExists="true">
			<![CDATA[
				Select FM.FinReference,FM.Fintype,FM.FinCcy,FM.FinBranch,FM.ClosingStatus
				From FinanceMain FM Where ClosingStatus ='C'
				UNION ALL 
				Select RF.FinReference,RF.Fintype,RF.FinCcy,RF.FinBranch,RF.ClosingStatus
				From RejectFinanceMain RF
				WHERE     NOT EXISTS (SELECT 1 FROM FinanceMain WHERE FinReference = RF.FinReference And ClosingStatus ='C')
				AND FinReference IN (Select Reference from FinReceiptHeader where ReceiptPurpose ='FEEPAYMENT' AND ReceiptModeStatus !='C')
			]]>
		</createView>
	</changeSet>

	<changeSet id="414.1" author="Ganesh.P">
		<comment>Changed mapping from RejectedFinance to FinanceMain_view</comment>
		<createView viewName="FinFeeRefundHeader_TView" replaceIfExists="true">
			<![CDATA[
				SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
				T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
				T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
				T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
				T4.fintypedesc, T5.branchdesc
				FROM FinFeeRefundHeader_TEMP T1
				Left join FinanceMain_view T2 On T2.FinReference =T1.FinReference
				Left JOIN Customers T3 On T3.CustID=T2.CustID
				Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
				LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
				]]>
		</createView>
	</changeSet>

	<changeSet id="415" author="Ganesh.P">
		<comment>Changed mapping from RejectedFinance to FinanceMain_view</comment>
		<createView viewName="FinFeeRefundHeader_View" replaceIfExists="true">
		<![CDATA[
			SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
				T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
				T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
				T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
				T4.fintypedesc, T5.branchdesc
				FROM FinFeeRefundHeader_TEMP T1
				Left join FinanceMain_view T2 On T2.FinReference =T1.FinReference
				Left JOIN Customers T3 On T3.CustID=T2.CustID
				Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
				LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
				UNION ALL 
			SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
				T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
				T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
				T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
				T4.fintypedesc, T5.branchdesc
				FROM FinFeeRefundHeader T1
				Left join FinanceMain_view T2 On T2.FinReference =T1.FinReference
				Left JOIN Customers T3 On T3.CustID=T2.CustID
				Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
				LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
				WHERE     NOT EXISTS (SELECT 1 FROM FinFeeRefundHeader_TEMP WHERE HeaderID =T1.HeaderID)
			]]>
		</createView>
	</changeSet>

	<changeSet id="416.1" author="Ganesh.P">
		<comment>Changed mapping from RejectedFinance to FinanceMain_view</comment>
		<createView viewName="FinFeeRefundHeader_AView" replaceIfExists="true">
			<![CDATA[
				SELECT 		T1.HeaderID, T1.FinReference, T1.LinkedTranId,
				T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus,
				T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,
				T2.Fintype,T2.FinBranch,T2.CustID,T2.FinCcy,T3.CustCIF LovDescCustCIF,T3.CustShrtName LovDescCustShrtName,
				T4.fintypedesc, T5.branchdesc
				FROM FinFeeRefundHeader T1
				Left join FinanceMain_view T2 On T2.FinReference =T1.FinReference
				Left JOIN Customers T3 On T3.CustID=T2.CustID
				Left JOIN rmtfinancetypes T4 ON T4.fintype = T2.fintype
				LEFT JOIN rmtbranches T5 ON T2.finbranch = T5.branchcode
			]]>
		</createView>
	</changeSet>

	<changeSet id="417" author="rajesh.n">
		<comment> Newly Added Columns : OfferId </comment>
		<createView viewName="Financemain_Aview" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc AS lovdescfintypename,
			t7.finmaxamount AS lovdescfinmaxamt,
			t7.finminamount AS lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment AS lovdescfinalwdeferment,
			t7.finisdwpayrequired AS lovdescdwnpayreq,
			t7.finmaxdifferment AS lovdescfinmaxdifferment,
			t12.branchdesc AS lovdescfinbranchname,
			t12.branchprovince AS finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd AS lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc AS lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon AS lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision AS lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc AS lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername AS lovdescaccountsofficer,
			t28.dealercity AS lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc AS dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc AS referraliddesc,
			t1.dmacode,
			t34.rofficerdesc AS dmacodedesc,
			t1.salesdepartment,
			t35.deptdesc AS salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode AS lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue AS loveligibilitymethod,
			t38.valuedesc AS lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc AS employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername AS connectorcode,
			t40.dealercity AS connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel AS finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code AS businessverticalcode,
			bv.description AS businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanreq,
			t1.vancode,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.sanbsdschdle,
			t1.promotionseqid,
			t1.svamount,
			t1.cbamount,
			t1.appliedloanamt,
			t1.finisratervwatgrcend,
			t1.reqloanamt,
			t1.reqloantenor,
			t1.finocrrequired,
			t1.offerproduct,
			t1.offeramount,
			t1.custsegmentation,
			t1.baseproduct,
			t1.processtype,
			t1.bureautimeseries,
			t1.campaignname,
			t1.existinglanrefno,
			t1.leadsource,
			t1.posource,
			t1.rsa,
			t1.verification,
			t1.sourcingbranch,
			t1.sourchannelcategory,
			t1.asmname,
			t13.branchdesc AS lovDescSourcingBranch,
			t1.EndGrcPeriodAftrFullDisb,
			t1.AutoIncGrcEndDate,
			t1.AlwGrcAdj,
			t1.pMay,
			t1.OfferId
		FROM financemain t1
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
			LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
			LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="418" author="rajesh.n">
		<comment> new documenttype added:4 for coapplicant </comment>
		<createView viewName="verification_rcu_details_view" replaceIfExists="true">
		<![CDATA[
		SELECT 
			rcud.verificationid,
			rcud.seqno,
			doc.doctype,
			doc.docmodule,
			doc.docname,
			doc.referenceid,
			dt.doctypecode code,
			dt.doctypedesc description,
			rcud.documentid,
			rcud.documenttype,
			doc.docrefid,
			rcud.documentsubid,
			rcud.documentrefid,
			rcud.documenturi,
			rcud.reinitid,
			rcud.verificationtype,
			rcud.status,
			rcud.pageseyeballed,
			rcud.pagessampled,
			rcud.initremarks,
			rcud.agentremarks,
			rcud.decision,
			rcud.decisionremarks,
			rcud.version,
			rcud.lastmntby,
			rcud.lastmnton,
			rcud.recordstatus,
			rcud.rolecode,
			rcud.nextrolecode,
			rcud.taskid,
			rcud.nexttaskid,
			rcud.recordtype,
			rcud.workflowid,
			rcud.accnumber,
			rcud.bankName
			FROM  (SELECT rcud.verificationid,
			rcud.seqno,
			rcud.documentid,
			rcud.documenttype,
			rcud.documentsubid,
			rcud.documentrefid,
			rcud.documenturi,
			rcud.reinitid,
			rcud.verificationtype,
			rcud.status,
			rcud.pageseyeballed,
			rcud.pagessampled,
			rcud.initremarks,
			rcud.agentremarks,
			rcud.decision,
			rcud.decisionremarks,
			rcud.version,
			rcud.lastmntby,
			rcud.lastmnton,
			rcud.recordstatus,
			rcud.rolecode,
			rcud.nextrolecode,
			rcud.taskid,
			rcud.nexttaskid,
			rcud.recordtype,
			rcud.workflowid,
			rcud.accnumber,
			rcud.bankName
			FROM verification_rcu_details_temp rcud
			union
			SELECT rcud.verificationid,
			rcud.seqno,
			rcud.documentid,
			rcud.documenttype,
			rcud.documentsubid,
			rcud.documentrefid,
			rcud.documenturi,
			rcud.reinitid,
			rcud.verificationtype,
			rcud.status,
			rcud.pageseyeballed,
			rcud.pagessampled,
			rcud.initremarks,
			rcud.agentremarks,
			rcud.decision,
			rcud.decisionremarks,
			rcud.version,
			rcud.lastmntby,
			rcud.lastmnton,
			rcud.recordstatus,
			rcud.rolecode,
			rcud.nextrolecode,
			rcud.taskid,
			rcud.nexttaskid,
			rcud.recordtype,
			rcud.workflowid,
			rcud.accnumber,
			rcud.bankName
			FROM verification_rcu_details rcud
			WHERE NOT (EXISTS ( SELECT 1
			FROM verification_rcu_details_temp
			WHERE verification_rcu_details_temp.verificationid = rcud.verificationid AND verification_rcu_details_temp.seqno = rcud.seqno))
			AND rcud.documenttype in(1,2,3,4)) rcud
			Inner join (select docid, doctype, docmodule, doccategory docname, referenceid, docrefid  FROM DocumentDetails_Temp
			union
			select docid, doctype, docmodule, doccategory docname, referenceid, docrefid  FROM DocumentDetails
			union
			select c.custid,custdoctype,'CUSTOMER',custdoccategory docname, custcif,docrefid from customerdocuments cdoc inner join
			customers c on c.custid = cdoc.custid union
			select c.custid,custdoctype,'CUSTOMER',custdoccategory docname, custcif,docrefid from customerdocuments_temp cdoc inner join
			customers c on c.custid = cdoc.custid) doc on doc.docid = rcud.documentid and doc.docname = rcud.documentsubid
			Inner join bmtdocumenttypes dt on dt.doctypecode = doc.docname
		]]>
		</createView>
	</changeSet>

	<changeSet id="419.1_pre" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'pmay_Lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="419.1" author="rajesh.n">
		<createView viewName="pmay_Lview" replaceIfExists="true">
		<![CDATA[
			Select	T1.FinReference,T1.notifiedTown,T1.TownCode,T4.TOWNNAME,T1.centralAssistance,T1.ownedHouse,T1.carpetArea,T1.householdAnnIncome,
			T1.balanceTransfer,T1.primaryApplicant,T1.transactionFinType,T1.product,T1.PRPRTYOWNEDBYWOMEN,T1.waterSupply,T1.drinage,T1.electricity,
			T1.pmayCategory,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,T1.rolecode,T1.nextrolecode,T1.taskid,T1.
			nexttaskid,T1.recordtype,T1.workflowid,T3.CustCif,T3.CUSTSHRTNAME,T2.FinType
			From PMAY_TEMP T1
			Inner join financemain T2 on T1.Finreference =T2.Finreference
			Inner join Customers T3 on T2.CustId =T3.CustId
			left join Towncode T4 on T1.TownCode = T4.TownCode
			WHERE t2.FinIsActive = 1
       union all 
       Select	T1.FinReference,T1.notifiedTown,T1.TownCode, T4.TOWNNAME ,T1.centralAssistance,T1.ownedHouse,T1.carpetArea,T1.householdAnnIncome,
			T1.balanceTransfer,T1.primaryApplicant,T1.transactionFinType,T1.	product,T1.PRPRTYOWNEDBYWOMEN,T1.waterSupply,T1.drinage,T1.electricity,T1.
			pmayCategory,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,T1.rolecode,T1.nextrolecode,T1.taskid,T1.
			nexttaskid,T1.recordtype,T1.workflowid,T3.CustCif,T3.CUSTSHRTNAME,T2.FinType
			From PMAY T1
      Inner join financemain T2 on T1.Finreference =T2.Finreference
			Inner join Customers T3 on T2.CustId =T3.CustId
			left join Towncode T4 on T1.TownCode = T4.TownCode
       WHERE     NOT EXISTS (SELECT 1 FROM PMAY_Temp WHERE finReference = T2.finReference) and t2.FinIsActive = 1
		]]>
		</createView>
	</changeSet>

	<changeSet id="419.1_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'pmay_Lview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="420.1_pre" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'pmay_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="420.1" author="rajesh.n">
		<createView viewName="pmay_view" replaceIfExists="true">
		<![CDATA[
			Select	T1.FinReference,T1.notifiedTown,T1.TownCode,T4.TOWNNAME,T1.centralAssistance,T1.ownedHouse,T1.carpetArea,T1.householdAnnIncome,
			T1.balanceTransfer,T1.primaryApplicant,T1.transactionFinType,T1.product,T1.PRPRTYOWNEDBYWOMEN,T1.waterSupply,T1.drinage,T1.electricity,
			T1.pmayCategory,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,T1.rolecode,T1.nextrolecode,T1.taskid,T1.
			nexttaskid,T1.recordtype,T1.workflowid,T3.CustCif,T3.CUSTSHRTNAME,T2.FinType
			From PMAY_TEMP T1
			Inner join financemain_view T2 on T1.Finreference =T2.Finreference
			Inner join Customers T3 on T2.CustId =T3.CustId
			left join Towncode T4 on T1.TownCode = T4.TownCode
			WHERE t2.FinIsActive = 1
       union all 
       Select	T1.FinReference,T1.notifiedTown,T1.TownCode, T4.TOWNNAME ,T1.centralAssistance,T1.ownedHouse,T1.carpetArea,T1.householdAnnIncome,
			T1.balanceTransfer,T1.primaryApplicant,T1.transactionFinType,T1.	product,T1.PRPRTYOWNEDBYWOMEN,T1.waterSupply,T1.drinage,T1.electricity,T1.
			pmayCategory,T1.version,T1.lastmntby,T1.lastmnton,T1.recordstatus,T1.rolecode,T1.nextrolecode,T1.taskid,T1.
			nexttaskid,T1.recordtype,T1.workflowid,T3.CustCif,T3.CUSTSHRTNAME,T2.FinType
			From PMAY T1
      Inner join financemain_view T2 on T1.Finreference =T2.Finreference
			Inner join Customers T3 on T2.CustId =T3.CustId
			left join Towncode T4 on T1.TownCode = T4.TownCode
       WHERE     NOT EXISTS (SELECT 1 FROM PMAY_Temp WHERE finReference = T2.finReference) and t2.FinIsActive = 1
		]]>
		</createView>
	</changeSet>

	<changeSet id="420.1_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'pmay_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="421.1_pre" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finfeeconfig_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="421.1" author="lakshmi">
		<createView viewName="finfeeconfig_view" replaceIfExists="true">
	 <![CDATA[
			SELECT   T1.FINTYPEFEEID, T1.FINREFERENCE, T1.ORIGINATIONFEE, T1.FINEVENT, T1.FEETYPEID, T1.FEEORDER, T1.FEESCHEDULEMETHOD, T1.CALCULATIONTYPE, T1.RULECODE,
			    T1.AMOUNT, T1.PERCENTAGE, T1.CALCULATEON, T1.ALWDEVIATION, T1.MAXWAIVERPERC, T1.ALWMODIFYFEE, T1.ALWMODIFYFEESCHDMTHD, T1.MODULEID, 
			    T1.ALWPREINCOMIZATION, T2.FEETYPECODE, T2.FEETYPEDESC, 
       			 CASE
            	WHEN T3.RULECODEDESC is not null THEN T3.RULECODEDESC
            	 WHEN T4.RULECODEDESC is not null THEN T4.RULECODEDESC
          		ELSE '' END AS   RULEDESC,
          		 T1.REFERENCEID, T2.TAXAPPLICABLE, T2.TAXCOMPONENT,
			   T1.PERCTYPE ,T1.PERCRULE ,T1.PERCRULEID
				FROM finfeeconfig T1
				INNER JOIN FEETYPES T2 ON T1.FEETYPEID = T2.FEETYPEID 
				LEFT JOIN RULES T3 ON T1.PERCRULEID = T3.RULEID 
       			LEFT JOIN RULES T4 ON T1.RULECODE = T4.RULECODE AND T4.RULEMODULE='FEES' AND T1.FINEVENT  = T4.RULEEVENT
				WHERE 	FINEVENT       = T1.FINEVENT AND T1.FEETYPEID      = T1.FEETYPEID AND ORIGINATIONFEE = T1.ORIGINATIONFEE
					
		]]>
		</createView>
	</changeSet>

	<changeSet id="421.1_post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finfeeconfig_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="422.1_pre" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintypefees_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="422.1" author="lakshmi">
		<createView viewName="fintypefees_aview" replaceIfExists="true">
	 <![CDATA[
				
	SELECT t1.fintype,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.feeschedulemethod,
    t1.calculationtype,
    t1.rulecode,
    t1.amount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.moduleid,
    t1.alwpreincomization,
    t2.feetypecode,
    t2.feetypedesc,
    t2.taxapplicable,
    t2.taxcomponent,
    t3.rulecodedesc AS ruledesc,
    t1.referenceid,
	t1.perctype, t1.percrule, t1.finTypeFeeId
   FROM fintypefees t1
     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
     LEFT JOIN rules t3 ON t1.rulecode = t3.rulecode AND t3.rulemodule = 'FEES' AND t1.finevent = t3.ruleevent
	 ]]>
		</createView>
	</changeSet>

	<changeSet id="422.1_post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintypefees_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="423.1_pre" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'fintypefees_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="423.1" author="lakshmi">
		<createView viewName="fintypefees_view" replaceIfExists="true">
	 <![CDATA[
	SELECT t1.fintype,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.feeschedulemethod,
    t1.calculationtype,
    t1.rulecode,
    t1.amount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.moduleid,
    t1.alwpreincomization,
    t2.feetypecode,
    t2.feetypedesc,
    t2.taxapplicable,
    t2.taxcomponent,
    t3.rulecodedesc AS ruledesc,
    t1.referenceid,
	t1.perctype, t1.percrule, t1.finTypeFeeId
   FROM fintypefees_temp t1
     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
     LEFT JOIN rules t3 ON t1.rulecode = t3.rulecode AND t3.rulemodule = 'FEES' AND t1.finevent = t3.ruleevent
	UNION ALL
	SELECT t1.fintype,
    t1.originationfee,
    t1.finevent,
    t1.feetypeid,
    t1.feeorder,
    t1.feeschedulemethod,
    t1.calculationtype,
    t1.rulecode,
    t1.amount,
    t1.percentage,
    t1.calculateon,
    t1.alwdeviation,
    t1.maxwaiverperc,
    t1.alwmodifyfee,
    t1.alwmodifyfeeschdmthd,
    t1.active,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t1.moduleid,
    t1.alwpreincomization,
    t2.feetypecode,
    t2.feetypedesc,
    t2.taxapplicable,
    t2.taxcomponent,
    t3.rulecodedesc AS ruledesc,
    t1.referenceid,
	t1.perctype, t1.percrule, t1.finTypeFeeId
   FROM fintypefees t1
     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
     LEFT JOIN rules t3 ON t1.rulecode = t3.rulecode AND t3.rulemodule = 'FEES' AND t1.finevent = t3.ruleevent
  WHERE NOT (EXISTS ( SELECT 1
           FROM fintypefees_temp f
          WHERE f.fintype = t1.fintype AND f.finevent = t1.finevent AND f.feetypeid = t1.feetypeid AND f.originationfee = t1.originationfee))

	]]>
		</createView>
	</changeSet>

	<changeSet id="423.1_post" author="lakshmi" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'fintypefees_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="424.1_pre" author="rajesh" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_view');
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="424.1" author="rajesh.n">
		<createView viewName="rmtfinancetypes_view" replaceIfExists="true">
			<![CDATA[ 
				 SELECT t1.fintype,
						t1.fincategory,
						t1.fintypedesc,
						t1.finccy,
						t1.findayscaltype,
						t1.finactype,
						t1.fincontingentactype,
						t1.finisgenref,
						t1.finmaxamount,
						t1.finminamount,
						t1.finisopennewfinac,
						t1.findftstmtfrq,
						t1.finisalwmd,
						t1.finschdmthd,
						t1.finisalwgrace,
						t1.finhistretension,
						t1.equalrepayment,
						t1.finratetype,
						t1.finbaserate,
						t1.finsplrate,
						t1.finintrate,
						t1.finminrate,
						t1.finmaxrate,
						t1.findftintfrq,
						t1.finisintcpz,
						t1.fincpzfrq,
						t1.finisrvwalw,
						t1.finrvwfrq,
						t1.fingrcratetype,
						t1.fingrcbaserate,
						t1.fingrcsplrate,
						t1.fingrcintrate,
						t1.fingrcminrate,
						t1.fingrcmaxrate,
						t1.fingrcdftintfrq,
						t1.fingrcisintcpz,
						t1.fingrccpzfrq,
						t1.fingrcisrvwalw,
						t1.fingrcrvwfrq,
						t1.finminterm,
						t1.finmaxterm,
						t1.findftterms,
						t1.finrpyfrq,
						t1.finrepaymethod,
						t1.finisalwpartialrpy,
						t1.finisalwdifferment,
						t1.finmaxdifferment,
						t1.finisalwearlyrpy,
						t1.finisalwearlysettle,
						t1.finodrpytries,
						t1.finearlypayrule,
						t1.finearlysettlerule,
						t1.findepositrestrictedto,
						t1.finaebuyorinception,
						t1.finaesellormaturity,
						t1.finisactive,
						t1.version,
						t1.lastmntby,
						t1.lastmnton,
						t1.recordstatus,
						t1.rolecode,
						t1.nextrolecode,
						t1.taskid,
						t1.nexttaskid,
						t1.recordtype,
						t1.workflowid,
						t1.stepfinance,
						t1.steppingmandatory,
						t1.alwmanualsteps,
						t1.alwdsteppolicies,
						t1.dftsteppolicy,
						t4.actypedesc AS lovdescfincontingentactypename,
						t5.actypedesc AS lovdescfinactypename,
						t1.finisdwpayrequired,
						t1.finrvwrateapplfor,
						t1.finalwratechangeanydate,
						t1.finisintcpzatgrcend,
						t1.finelgrulecode,
						t1.limitelgrulecode,
						t1.finschcalcodeonrvw,
						t1.alwplandeferment,
						t1.plandefercount,
						t1.finassettype,
						t1.pftpayactype,
						t1.finisopenpftpayacc,
						t31.actypedesc AS lovdescpftpayactypename,
						t1.finisalwgrcrepay,
						t1.fingrcschdmthd,
						t1.fingrcmargin,
						t1.finmargin,
						t1.finscheduleon,
						t1.fingrcscheduleon,
						t1.fincommitmentreq,
						t1.fincollateralreq,
						t1.findepreciationreq,
						t1.findepreciationfrq,
						t1.finbankcontingentactype,
						t1.finprovisionactype,
						t38.actypedesc AS lovdescfinbankcontactypename,
						t39.actypedesc AS lovdescfinprovisionactypename,
						t1.allowriainvestment,
						t1.overridelimit,
						t1.limitrequired,
						t1.fincommitmentovrride,
						t1.fincollateralovrride,
						t1.finpftunchanged,
						t1.applyodpenalty,
						t1.odincgrcdays,
						t1.odchargetype,
						t1.odgracedays,
						t1.odchargecalon,
						t1.odchargeamtorperc,
						t1.odallowwaiver,
						t1.odmaxwaiverperc,
						t1.findivision,
						t48.divisioncodedesc AS lovdescfindivisionname,
						t48.entitycode AS lovdescentitycode,
						t1.finsuspactype,
						t49.actypedesc AS lovdescfinsuspactypename,
						t1.product,
						t1.startdate,
						t1.enddate,
						t1.allowdownpaypgm,
						t1.fintypedesc AS lovdescpromofintypedesc,
						t1.remarks,
						t1.alwearlypaymethods,
						t1.pastduepftcalmthd,
						t1.pastduepftmargin,
						t1.alwadvancerent,
						t1.grcadvbaserate,
						t1.grcadvmargin,
						t1.grcadvpftrate,
						t1.rpyadvbaserate,
						t1.rpyadvmargin,
						t1.rpyadvpftrate,
						t1.rolloverfinance,
						t1.rolloverfrq,
						t1.downpayrule,
						t59.rulecode AS downpayrulecode,
						t59.rulecodedesc AS downpayruledesc,
						t1.finsusptrigger,
						t1.finsuspremarks,
						t1.alwmultipartydisb,
						t1.collateraltype,
						t1.tdsapplicable,
						t1.manualschedule,
						t1.applygrcpricing,
						t1.grcpricingmethod,
						t1.applyrpypricing,
						t1.rpypricingmethod,
						t1.rpyhierarchy,
						t67.rulecode AS grcpricingmethoddesc,
						t68.rulecode AS rpypricingmethoddesc,
						t1.droplineod,
						t1.droppingmethod,
						t1.ratechganyday,
						t1.finrepaypftonfrq,
						t1.alwbpi,
						t1.bpitreatment,
						t1.pftdueschon,
						t1.planemihalw,
						t1.planemihmethod,
						t1.planemihmaxperyear,
						t1.planemihmax,
						t1.planemihlockperiod,
						t1.planemicpz,
						t1.unplanemihlockperiod,
						t1.unplanemicpz,
						t1.reagecpz,
						t1.fddlockperiod,
						t1.alwdrpymethods,
						t1.maxunplannedemi,
						t1.maxreageholidays,
						t1.roundingmode,
						t1.roundingtarget,
						t1.frequencydays,
						t1.quickdisb,
						t1.alwmaxdisbcheckreq,
						t1.alwreage,
						t1.alwunplanemiholiday,
						t1.profitcenterid,
						t69.profitcentercode,
						t69.profitcenterdesc,
						t1.productcategory,
						t2.productdesc AS fincategorydesc,
						t1.developerfinance,
						t1.costoffunds,
						t1.chequecapturereq,
						t1.finltvcheck,
						t1.partiallysecured,
						t1.alwadvemi,
						t1.advemiminterms,
						t1.advemimaxterms,
						t1.advemidftterms,
						t1.advemischdmthd,
						t1.bpipftdaysbasis,
						t1.eligibilitymethods,
						t1.alwhybridrate,
						t1.fixedratetenor,
						t1.odmincapamount,
						t1.odrulecode,
						t1.alwzerointacc,
						t1.autorejectiondays,
						t1.taxnomand,
						t1.putcallrequired,
						t1.grcadvintersetreq,
						t1.grcadvtype,
						t1.grcadvminterms,
						t1.grcadvmaxterms,
						t1.grcadvdefaultterms,
						t1.advintersetreq,
						t1.advtype,
						t1.advminterms,
						t1.advmaxterms,
						t1.advdefaultterms,
						t1.advstage,
						t1.dsfreq,
						t1.cashcollateralreq,
						t1.tdsallowtomodify,
						t1.tdsapplicableto,
						t1.alwvan,
						t1.vanallocationmethod,
						t1.allowdrawingpower,
						t1.allowrevolving,
						t1.alwsanctionamt,
						t1.alwsanctionamtoverride,
						t1.sanbsdschdle,
						t1.finisratervwatgrcend,
						t1.schdonpmtcal,
						t1.autoapprove,
						t1.ocrrequired,
						t1.allowedocrs,
						t1.defaultocr,
						t1.allowedloanpurposes,
						t1.specificloanpurposes,
						t1.grcadjreq,
						t1.grcperiodaftrfulldisb,
						t1.autoincrgrcenddate,
						t1.grcautoincrmonths,
						t1.maxautoincrallowed,
						t1.thrldtomaintaingrcprd 
				   FROM rmtfinancetypes_temp t1
					LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
					LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
					LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
					LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
					LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
					LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
					LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
					LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
					LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
					LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
					LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
					LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			UNION ALL
				SELECT t1.fintype,
					   t1.fincategory,
					   t1.fintypedesc,
					   t1.finccy,
					   t1.findayscaltype,
					   t1.finactype,
					   t1.fincontingentactype,
					   t1.finisgenref,
					   t1.finmaxamount,
					   t1.finminamount,
					   t1.finisopennewfinac,
					   t1.findftstmtfrq,
					   t1.finisalwmd,
					   t1.finschdmthd,
					   t1.finisalwgrace,
					   t1.finhistretension,
					   t1.equalrepayment,
					   t1.finratetype,
					   t1.finbaserate,
					   t1.finsplrate,
					   t1.finintrate,
					   t1.finminrate,
					   t1.finmaxrate,
					   t1.findftintfrq,
					   t1.finisintcpz,
					   t1.fincpzfrq,
					   t1.finisrvwalw,
					   t1.finrvwfrq,
					   t1.fingrcratetype,
					   t1.fingrcbaserate,
					   t1.fingrcsplrate,
					   t1.fingrcintrate,
					   t1.fingrcminrate,
					   t1.fingrcmaxrate,
					   t1.fingrcdftintfrq,
					   t1.fingrcisintcpz,
					   t1.fingrccpzfrq,
					   t1.fingrcisrvwalw,
					   t1.fingrcrvwfrq,
					   t1.finminterm,
					   t1.finmaxterm,
					   t1.findftterms,
					   t1.finrpyfrq,
					   t1.finrepaymethod,
					   t1.finisalwpartialrpy,
					   t1.finisalwdifferment,
					   t1.finmaxdifferment,
					   t1.finisalwearlyrpy,
					   t1.finisalwearlysettle,
					   t1.finodrpytries,
					   t1.finearlypayrule,
					   t1.finearlysettlerule,
					   t1.findepositrestrictedto,
					   t1.finaebuyorinception,
					   t1.finaesellormaturity,
					   t1.finisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t1.stepfinance,
					   t1.steppingmandatory,
					   t1.alwmanualsteps,
					   t1.alwdsteppolicies,
					   t1.dftsteppolicy,
					   t4.actypedesc AS lovdescfincontingentactypename,
					   t5.actypedesc AS lovdescfinactypename,
					   t1.finisdwpayrequired,
					   t1.finrvwrateapplfor,
					   t1.finalwratechangeanydate,
					   t1.finisintcpzatgrcend,
					   t1.finelgrulecode,
					   t1.limitelgrulecode,
					   t1.finschcalcodeonrvw,
					   t1.alwplandeferment,
					   t1.plandefercount,
					   t1.finassettype,
					   t1.pftpayactype,
					   t1.finisopenpftpayacc,
					   t31.actypedesc AS lovdescpftpayactypename,
					   t1.finisalwgrcrepay,
					   t1.fingrcschdmthd,
					   t1.fingrcmargin,
					   t1.finmargin,
					   t1.finscheduleon,
					   t1.fingrcscheduleon,
					   t1.fincommitmentreq,
					   t1.fincollateralreq,
					   t1.findepreciationreq,
					   t1.findepreciationfrq,
					   t1.finbankcontingentactype,
					   t1.finprovisionactype,
					   t38.actypedesc AS lovdescfinbankcontactypename,
					   t39.actypedesc AS lovdescfinprovisionactypename,
					   t1.allowriainvestment,
					   t1.overridelimit,
					   t1.limitrequired,
					   t1.fincommitmentovrride,
					   t1.fincollateralovrride,
					   t1.finpftunchanged,
					   t1.applyodpenalty,
					   t1.odincgrcdays,
					   t1.odchargetype,
					   t1.odgracedays,
					   t1.odchargecalon,
					   t1.odchargeamtorperc,
					   t1.odallowwaiver,
					   t1.odmaxwaiverperc,
					   t1.findivision,
					   t48.divisioncodedesc AS lovdescfindivisionname,
					   t48.entitycode AS lovdescentitycode,
					   t1.finsuspactype,
					   t49.actypedesc AS lovdescfinsuspactypename,
					   t1.product,
					   t1.startdate,
					   t1.enddate,
					   t1.allowdownpaypgm,
					   t1.fintypedesc AS lovdescpromofintypedesc,
					   t1.remarks,
					   t1.alwearlypaymethods,
					   t1.pastduepftcalmthd,
					   t1.pastduepftmargin,
					   t1.alwadvancerent,
					   t1.grcadvbaserate,
					   t1.grcadvmargin,
					   t1.grcadvpftrate,
					   t1.rpyadvbaserate,
					   t1.rpyadvmargin,
					   t1.rpyadvpftrate,
					   t1.rolloverfinance,
					   t1.rolloverfrq,
					   t1.downpayrule,
					   t59.rulecode AS downpayrulecode,
					   t59.rulecodedesc AS downpayruledesc,
					   t1.finsusptrigger,
					   t1.finsuspremarks,
					   t1.alwmultipartydisb,
					   t1.collateraltype,
					   t1.tdsapplicable,
					   t1.manualschedule,
					   t1.applygrcpricing,
					   t1.grcpricingmethod,
					   t1.applyrpypricing,
					   t1.rpypricingmethod,
					   t1.rpyhierarchy,
					   t67.rulecode AS grcpricingmethoddesc,
					   t68.rulecode AS rpypricingmethoddesc,
					   t1.droplineod,
					   t1.droppingmethod,
					   t1.ratechganyday,
					   t1.finrepaypftonfrq,
					   t1.alwbpi,
					   t1.bpitreatment,
					   t1.pftdueschon,
					   t1.planemihalw,
					   t1.planemihmethod,
					   t1.planemihmaxperyear,
					   t1.planemihmax,
					   t1.planemihlockperiod,
					   t1.planemicpz,
					   t1.unplanemihlockperiod,
					   t1.unplanemicpz,
					   t1.reagecpz,
					   t1.fddlockperiod,
					   t1.alwdrpymethods,
					   t1.maxunplannedemi,
					   t1.maxreageholidays,
					   t1.roundingmode,
					   t1.roundingtarget,
					   t1.frequencydays,
					   t1.quickdisb,
					   t1.alwmaxdisbcheckreq,
					   t1.alwreage,
					   t1.alwunplanemiholiday,
					   t1.profitcenterid,
					   t69.profitcentercode,
					   t69.profitcenterdesc,
					   t1.productcategory,
					   t2.productdesc AS fincategorydesc,
					   t1.developerfinance,
					   t1.costoffunds,
					   t1.chequecapturereq,
					   t1.finltvcheck,
					   t1.partiallysecured,
					   t1.alwadvemi,
					   t1.advemiminterms,
					   t1.advemimaxterms,
					   t1.advemidftterms,
					   t1.advemischdmthd,
					   t1.bpipftdaysbasis,
					   t1.eligibilitymethods,
					   t1.alwhybridrate,
					   t1.fixedratetenor,
					   t1.odmincapamount,
					   t1.odrulecode,
					   t1.alwzerointacc,
					   t1.autorejectiondays,
					   t1.taxnomand,
					   t1.putcallrequired,
					   t1.grcadvintersetreq,
					   t1.grcadvtype,
					   t1.grcadvminterms,
					   t1.grcadvmaxterms,
					   t1.grcadvdefaultterms,
					   t1.advintersetreq,
					   t1.advtype,
					   t1.advminterms,
					   t1.advmaxterms,
					   t1.advdefaultterms,
					   t1.advstage,
					   t1.dsfreq,
					   t1.cashcollateralreq,
					   t1.tdsallowtomodify,
					   t1.tdsapplicableto,
					   t1.alwvan,
					   t1.vanallocationmethod,
					   t1.allowdrawingpower,
					   t1.allowrevolving,
					   t1.alwsanctionamt,
					   t1.alwsanctionamtoverride,
					   t1.sanbsdschdle,
					   t1.finisratervwatgrcend,
					   t1.schdonpmtcal,
					   t1.autoapprove,
					   t1.ocrrequired,
					   t1.allowedocrs,
					   t1.defaultocr,
					   t1.allowedloanpurposes,
					   t1.specificloanpurposes,
					   t1.grcadjreq,
					   t1.grcperiodaftrfulldisb,
					   t1.autoincrgrcenddate,
					   t1.grcautoincrmonths,
					   t1.maxautoincrallowed,
					   t1.thrldtomaintaingrcprd 
					FROM rmtfinancetypes t1
					  LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
					  LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
					  LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
					  LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
					  LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
					  LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
					  LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
					  LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
					  LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
					  LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
					  LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
					  LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
					  WHERE NOT (EXISTS ( SELECT 1 AS expr1
					  FROM rmtfinancetypes_temp
					  WHERE rmtfinancetypes_temp.fintype = t1.fintype));
			]]>
		</createView>
	</changeSet>

	<changeSet id="424.1_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="425.1_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_aview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="425.1" author="rajesh.n">
		<createView viewName="rmtfinancetypes_aview" replaceIfExists="true">
		<![CDATA[ 
		SELECT t1.fintype,
			   t1.fincategory,
			   t1.fintypedesc,
			   t1.finccy,
			   t1.findayscaltype,
			   t1.finactype,
			   t1.fincontingentactype,
			   t1.finisgenref,
			   t1.finmaxamount,
			   t1.finminamount,
			   t1.finisopennewfinac,
			   t1.findftstmtfrq,
			   t1.finisalwmd,
			   t1.finschdmthd,
			   t1.finisalwgrace,
			   t1.finhistretension,
			   t1.equalrepayment,
			   t1.finratetype,
			   t1.finbaserate,
			   t1.finsplrate,
			   t1.finintrate,
			   t1.finminrate,
			   t1.finmaxrate,
			   t1.findftintfrq,
			   t1.finisintcpz,
			   t1.fincpzfrq,
			   t1.finisrvwalw,
			   t1.finrvwfrq,
			   t1.fingrcratetype,
			   t1.fingrcbaserate,
			   t1.fingrcsplrate,
			   t1.fingrcintrate,
			   t1.fingrcminrate,
			   t1.fingrcmaxrate,
			   t1.fingrcdftintfrq,
			   t1.fingrcisintcpz,
			   t1.fingrccpzfrq,
			   t1.fingrcisrvwalw,
			   t1.fingrcrvwfrq,
			   t1.finminterm,
			   t1.finmaxterm,
			   t1.findftterms,
			   t1.finrpyfrq,
			   t1.finrepaymethod,
			   t1.finisalwpartialrpy,
			   t1.finisalwdifferment,
			   t1.finmaxdifferment,
			   t1.finisalwearlyrpy,
			   t1.finisalwearlysettle,
			   t1.finodrpytries,
			   t1.finearlypayrule,
			   t1.finearlysettlerule,
			   t1.findepositrestrictedto,
			   t1.finaebuyorinception,
			   t1.finaesellormaturity,
			   t1.finisactive,
			   t1.version,
			   t1.lastmntby,
			   t1.lastmnton,
			   t1.recordstatus,
			   t1.rolecode,
			   t1.nextrolecode,
			   t1.taskid,
			   t1.nexttaskid,
			   t1.recordtype,
			   t1.workflowid,
			   t1.stepfinance,
			   t1.steppingmandatory,
			   t1.alwmanualsteps,
			   t1.alwdsteppolicies,
			   t1.dftsteppolicy,
			   t4.actypedesc AS lovdescfincontingentactypename,
			   t5.actypedesc AS lovdescfinactypename,
			   t1.finisdwpayrequired,
			   t1.finrvwrateapplfor,
			   t1.finalwratechangeanydate,
			   t1.finisintcpzatgrcend,
			   t1.finelgrulecode,
			   t1.limitelgrulecode,
			   t1.finschcalcodeonrvw,
			   t1.alwplandeferment,
			   t1.plandefercount,
			   t1.finassettype,
			   t1.pftpayactype,
			   t1.finisopenpftpayacc,
			   t31.actypedesc AS lovdescpftpayactypename,
			   t1.finisalwgrcrepay,
			   t1.fingrcschdmthd,
			   t1.fingrcmargin,
			   t1.finmargin,
			   t1.finscheduleon,
			   t1.fingrcscheduleon,
			   t1.fincommitmentreq,
			   t1.fincollateralreq,
			   t1.findepreciationreq,
			   t1.findepreciationfrq,
			   t1.finbankcontingentactype,
			   t1.finprovisionactype,
			   t38.actypedesc AS lovdescfinbankcontactypename,
			   t39.actypedesc AS lovdescfinprovisionactypename,
			   t1.allowriainvestment,
			   t1.overridelimit,
			   t1.limitrequired,
			   t1.fincommitmentovrride,
			   t1.fincollateralovrride,
			   t1.finpftunchanged,
			   t1.applyodpenalty,
			   t1.odincgrcdays,
			   t1.odchargetype,
			   t1.odgracedays,
			   t1.odchargecalon,
			   t1.odchargeamtorperc,
			   t1.odallowwaiver,
			   t1.odmaxwaiverperc,
			   t1.findivision,
			   t48.divisioncodedesc AS lovdescfindivisionname,
			   t48.entitycode AS lovdescentitycode,
			   t1.finsuspactype,
			   t49.actypedesc AS lovdescfinsuspactypename,
			   t1.product,
			   t1.startdate,
			   t1.enddate,
			   t1.allowdownpaypgm,
			   t1.remarks,
			   t1.alwearlypaymethods,
			   t1.pastduepftcalmthd,
			   t1.pastduepftmargin,
			   t1.alwadvancerent,
			   t1.grcadvbaserate,
			   t1.grcadvmargin,
			   t1.grcadvpftrate,
			   t1.rpyadvbaserate,
			   t1.rpyadvmargin,
			   t1.rpyadvpftrate,
			   t1.rolloverfinance,
			   t1.rolloverfrq,
			   t1.downpayrule,
			   t59.rulecode AS downpayrulecode,
			   t59.rulecodedesc AS downpayruledesc,
			   t1.finsusptrigger,
			   t1.finsuspremarks,
			   t1.alwmultipartydisb,
			   t1.collateraltype,
			   t1.tdsapplicable,
			   t1.manualschedule,
			   t1.applygrcpricing,
			   t1.grcpricingmethod,
			   t1.applyrpypricing,
			   t1.rpypricingmethod,
			   t1.rpyhierarchy,
			   t67.rulecode AS grcpricingmethoddesc,
			   t68.rulecode AS rpypricingmethoddesc,
			   t1.droplineod,
			   t1.droppingmethod,
			   t1.ratechganyday,
			   t1.finrepaypftonfrq,
			   t1.alwbpi,
			   t1.bpitreatment,
			   t1.pftdueschon,
			   t1.planemihalw,
			   t1.planemihmethod,
			   t1.planemihmaxperyear,
			   t1.planemihmax,
			   t1.planemihlockperiod,
			   t1.planemicpz,
			   t1.unplanemihlockperiod,
			   t1.unplanemicpz,
			   t1.reagecpz,
			   t1.fddlockperiod,
			   t1.alwdrpymethods,
			   t1.maxunplannedemi,
			   t1.maxreageholidays,
			   t1.roundingmode,
			   t1.roundingtarget,
			   t1.frequencydays,
			   t1.quickdisb,
			   t1.alwreage,
			   t1.alwunplanemiholiday,
			   t1.alwmaxdisbcheckreq,
			   t1.fintypedesc AS lovdescpromofintypedesc,
			   t1.profitcenterid,
			   t69.profitcentercode,
			   t69.profitcenterdesc,
			   t1.productcategory,
			   t2.productdesc AS fincategorydesc,
			   t1.developerfinance,
			   t1.costoffunds,
			   t1.chequecapturereq,
			   t1.finltvcheck,
			   t1.partiallysecured,
			   t1.alwadvemi,
			   t1.advemiminterms,
			   t1.advemimaxterms,
			   t1.advemidftterms,
			   t1.advemischdmthd,
			   t1.bpipftdaysbasis,
			   t1.eligibilitymethods,
			   t1.alwhybridrate,
			   t1.fixedratetenor,
			   t1.odmincapamount,
			   t1.odrulecode,
			   t1.alwzerointacc,
			   t1.autorejectiondays,
			   t1.taxnomand,
			   t1.putcallrequired,
			   t1.grcadvintersetreq,
			   t1.grcadvtype,
			   t1.grcadvminterms,
			   t1.grcadvmaxterms,
			   t1.grcadvdefaultterms,
			   t1.advintersetreq,
			   t1.advtype,
			   t1.advminterms,
			   t1.advmaxterms,
			   t1.advdefaultterms,
			   t1.advstage,
			   t1.dsfreq,
			   t1.cashcollateralreq,
			   t1.tdsallowtomodify,
			   t1.tdsapplicableto,
			   t1.alwvan,
			   t1.vanallocationmethod,
			   t1.allowdrawingpower,
			   t1.allowrevolving,
			   t1.alwsanctionamt,
			   t1.alwsanctionamtoverride,
			   t1.sanbsdschdle,
			   t1.finisratervwatgrcend,
			   t1.schdonpmtcal,
			   t1.autoapprove,
			   t1.ocrrequired,
			   t1.allowedocrs,
			   t1.defaultocr,
			   t1.allowedloanpurposes,
			   t1.specificloanpurposes,
			   t1.grcadjreq,
			   t1.grcperiodaftrfulldisb,
			   t1.autoincrgrcenddate,
			   t1.grcautoincrmonths,
			   t1.maxautoincrallowed,
			   t1.thrldtomaintaingrcprd 
			FROM rmtfinancetypes t1
			 LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			 LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			 LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			 LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			 LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			 LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			 LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			 LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			 LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			 LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			 LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			 LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			]]>
		</createView>
	</changeSet>

	<changeSet id="425.1_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="426.1_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_orgview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="426.1" author="rajesh.n">
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
		<![CDATA[ 
			 SELECT t1.fintype,
					t1.fincategory,
					t1.fintypedesc,
					t1.finccy,
					t1.findayscaltype,
					t1.finactype,
					t1.fincontingentactype,
					t1.finisgenref,
					t1.finmaxamount,
					t1.finminamount,
					t1.finisopennewfinac,
					t1.finisalwmd,
					t1.finschdmthd,
					t1.finisalwgrace,
					t1.equalrepayment,
					t1.finratetype,
					t1.finbaserate,
					t1.finsplrate,
					t1.finintrate,
					t1.finminrate,
					t1.finmaxrate,
					t1.findftintfrq,
					t1.finisintcpz,
					t1.fincpzfrq,
					t1.finisrvwalw,
					t1.finrvwfrq,
					t1.fingrcratetype,
					t1.fingrcbaserate,
					t1.fingrcsplrate,
					t1.fingrcintrate,
					t1.fingrcminrate,
					t1.fingrcmaxrate,
					t1.fingrcdftintfrq,
					t1.fingrcisintcpz,
					t1.fingrccpzfrq,
					t1.fingrcisrvwalw,
					t1.fingrcrvwfrq,
					t1.finminterm,
					t1.finmaxterm,
					t1.findftterms,
					t1.finrpyfrq,
					t1.finrepaymethod,
					t1.finisalwdifferment,
					t1.finmaxdifferment,
					t1.finisactive,
					t1.stepfinance,
					t1.steppingmandatory,
					t1.alwmanualsteps,
					t1.alwdsteppolicies,
					t1.dftsteppolicy,
					t1.finisdwpayrequired,
					t1.finrvwrateapplfor,
					t1.finalwratechangeanydate,
					t1.finisintcpzatgrcend,
					t1.finschcalcodeonrvw,
					t1.alwplandeferment,
					t1.plandefercount,
					t1.pftpayactype,
					t1.finisopenpftpayacc,
					t1.finisalwgrcrepay,
					t1.fingrcschdmthd,
					t1.fingrcmargin,
					t1.finmargin,
					t1.fincommitmentreq,
					t1.fincollateralreq,
					t1.findepreciationreq,
					t1.findepreciationfrq,
					t1.finbankcontingentactype,
					t1.finprovisionactype,
					t1.allowriainvestment,
					t1.overridelimit,
					t1.limitrequired,
					t1.fincommitmentovrride,
					t1.fincollateralovrride,
					t1.finrepaypftonfrq,
					t1.finpftunchanged,
					t1.applyodpenalty,
					t1.odincgrcdays,
					t1.odchargetype,
					t1.odgracedays,
					t1.odchargecalon,
					t1.odchargeamtorperc,
					t1.odallowwaiver,
					t1.odmaxwaiverperc,
					t1.findivision,
					t3.divisioncodedesc AS lovdescfindivisionname,
					t1.finsuspactype,
					t1.product,
					t1.startdate,
					t1.enddate,
					t1.allowdownpaypgm,
					t1.fintypedesc AS lovdescpromofintypedesc,
					t1.remarks,
					t4.policydesc AS lovdescdftsteppolicyname,
					t1.pastduepftcalmthd,
					t1.pastduepftmargin,
					t1.alwadvancerent,
					t1.grcadvbaserate,
					t1.grcadvmargin,
					t1.grcadvpftrate,
					t1.rpyadvbaserate,
					t1.rpyadvmargin,
					t1.rpyadvpftrate,
					t1.rolloverfinance,
					t1.rolloverfrq,
					t1.downpayrule,
					t1.alwmultipartydisb,
					t1.collateraltype,
					t1.tdsapplicable,
					t5.rulecode AS downpayrulecode,
					t5.rulecodedesc AS downpayruledesc,
					t1.applygrcpricing,
					t1.applyrpypricing,
					t6.rulecode AS grcpricingmethoddesc,
					t7.rulecode AS rpypricingmethoddesc,
					t1.droplineod,
					t1.droppingmethod,
					t1.ratechganyday,
					t4.steptype AS dftsteppolicytype,
					t1.manualschedule,
					t1.alwbpi,
					t1.bpitreatment,
					t1.pftdueschon,
					t1.planemihalw,
					t1.planemihmethod,
					t1.planemihmaxperyear,
					t1.planemihmax,
					t1.planemihlockperiod,
					t1.planemicpz,
					t1.unplanemihlockperiod,
					t1.unplanemicpz,
					t1.reagecpz,
					t1.fddlockperiod,
					t1.alwdrpymethods,
					t1.maxunplannedemi,
					t1.maxreageholidays,
					t1.roundingmode,
					t1.roundingtarget,
					t1.frequencydays,
					t1.quickdisb,
					t1.alwreage,
					t1.alwunplanemiholiday,
					t1.alwmaxdisbcheckreq,
					t1.productcategory,
					t1.rpyhierarchy,
					t1.developerfinance,
					t3.entitycode AS lovdescentitycode,
					t8.entitydesc AS lovdescentitydesc,
					t1.costoffunds,
					t1.chequecapturereq,
					t1.finltvcheck,
					t1.partiallysecured,
					t1.alwadvemi,
					t1.advemiminterms,
					t1.advemimaxterms,
					t1.advemidftterms,
					t1.advemischdmthd,
					t1.bpipftdaysbasis,
					t1.eligibilitymethods,
					t1.alwhybridrate,
					t1.fixedratetenor,
					t1.odmincapamount,
					t1.odrulecode,
					t1.alwzerointacc,
					t1.finisalwpartialrpy,
					t1.autorejectiondays,
					t1.taxnomand,
					t1.putcallrequired,
					t1.grcadvintersetreq,
					t1.grcadvtype,
					t1.grcadvminterms,
					t1.grcadvmaxterms,
					t1.grcadvdefaultterms,
					t1.advintersetreq,
					t1.advtype,
					t1.advminterms,
					t1.advmaxterms,
					t1.advdefaultterms,
					t1.advstage,
					t1.dsfreq,
					t1.cashcollateralreq,
					t1.alwearlypaymethods,
					t1.tdsallowtomodify,
					t1.tdsapplicableto,
					t1.alwvan,
					t1.vanallocationmethod,
					t1.allowdrawingpower,
					t1.allowrevolving,
					t1.alwsanctionamt,
					t1.alwsanctionamtoverride,
					t1.sanbsdschdle,
					t1.finisratervwatgrcend,
					t1.schdonpmtcal,
					t1.autoapprove,
					t1.ocrrequired,
					t1.allowedocrs,
					t1.defaultocr,
					t1.allowedloanpurposes,
					t1.specificloanpurposes,
					t1.grcadjreq,
					t1.grcperiodaftrfulldisb,
					t1.autoincrgrcenddate,
					t1.grcautoincrmonths,
					t1.maxautoincrallowed,
					t1.thrldtomaintaingrcprd
			FROM rmtfinancetypes t1
				JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
				LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
				LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
				LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
				LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
				LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode;
				]]>
		</createView>
	</changeSet>

	<changeSet id="426.1_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_orgview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="427_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="427" author="venkatesh.ch">
		<createView viewName="rmtfinancetypes_view" replaceIfExists="true">
			<![CDATA[ 
				 SELECT t1.fintype,
						t1.fincategory,
						t1.fintypedesc,
						t1.finccy,
						t1.findayscaltype,
						t1.finactype,
						t1.fincontingentactype,
						t1.finisgenref,
						t1.finmaxamount,
						t1.finminamount,
						t1.finisopennewfinac,
						t1.findftstmtfrq,
						t1.finisalwmd,
						t1.finschdmthd,
						t1.finisalwgrace,
						t1.finhistretension,
						t1.equalrepayment,
						t1.finratetype,
						t1.finbaserate,
						t1.finsplrate,
						t1.finintrate,
						t1.finminrate,
						t1.finmaxrate,
						t1.findftintfrq,
						t1.finisintcpz,
						t1.fincpzfrq,
						t1.finisrvwalw,
						t1.finrvwfrq,
						t1.fingrcratetype,
						t1.fingrcbaserate,
						t1.fingrcsplrate,
						t1.fingrcintrate,
						t1.fingrcminrate,
						t1.fingrcmaxrate,
						t1.fingrcdftintfrq,
						t1.fingrcisintcpz,
						t1.fingrccpzfrq,
						t1.fingrcisrvwalw,
						t1.fingrcrvwfrq,
						t1.finminterm,
						t1.finmaxterm,
						t1.findftterms,
						t1.finrpyfrq,
						t1.finrepaymethod,
						t1.finisalwpartialrpy,
						t1.finisalwdifferment,
						t1.finmaxdifferment,
						t1.finisalwearlyrpy,
						t1.finisalwearlysettle,
						t1.finodrpytries,
						t1.finearlypayrule,
						t1.finearlysettlerule,
						t1.findepositrestrictedto,
						t1.finaebuyorinception,
						t1.finaesellormaturity,
						t1.finisactive,
						t1.version,
						t1.lastmntby,
						t1.lastmnton,
						t1.recordstatus,
						t1.rolecode,
						t1.nextrolecode,
						t1.taskid,
						t1.nexttaskid,
						t1.recordtype,
						t1.workflowid,
						t1.stepfinance,
						t1.steppingmandatory,
						t1.alwmanualsteps,
						t1.alwdsteppolicies,
						t1.dftsteppolicy,
						t4.actypedesc AS lovdescfincontingentactypename,
						t5.actypedesc AS lovdescfinactypename,
						t1.finisdwpayrequired,
						t1.finrvwrateapplfor,
						t1.finalwratechangeanydate,
						t1.finisintcpzatgrcend,
						t1.finelgrulecode,
						t1.limitelgrulecode,
						t1.finschcalcodeonrvw,
						t1.alwplandeferment,
						t1.plandefercount,
						t1.finassettype,
						t1.pftpayactype,
						t1.finisopenpftpayacc,
						t31.actypedesc AS lovdescpftpayactypename,
						t1.finisalwgrcrepay,
						t1.fingrcschdmthd,
						t1.fingrcmargin,
						t1.finmargin,
						t1.finscheduleon,
						t1.fingrcscheduleon,
						t1.fincommitmentreq,
						t1.fincollateralreq,
						t1.findepreciationreq,
						t1.findepreciationfrq,
						t1.finbankcontingentactype,
						t1.finprovisionactype,
						t38.actypedesc AS lovdescfinbankcontactypename,
						t39.actypedesc AS lovdescfinprovisionactypename,
						t1.allowriainvestment,
						t1.overridelimit,
						t1.limitrequired,
						t1.fincommitmentovrride,
						t1.fincollateralovrride,
						t1.finpftunchanged,
						t1.applyodpenalty,
						t1.odincgrcdays,
						t1.odchargetype,
						t1.odgracedays,
						t1.odchargecalon,
						t1.odchargeamtorperc,
						t1.odallowwaiver,
						t1.odmaxwaiverperc,
						t1.findivision,
						t48.divisioncodedesc AS lovdescfindivisionname,
						t48.entitycode AS lovdescentitycode,
						t1.finsuspactype,
						t49.actypedesc AS lovdescfinsuspactypename,
						t1.product,
						t1.startdate,
						t1.enddate,
						t1.allowdownpaypgm,
						t1.fintypedesc AS lovdescpromofintypedesc,
						t1.remarks,
						t1.alwearlypaymethods,
						t1.pastduepftcalmthd,
						t1.pastduepftmargin,
						t1.alwadvancerent,
						t1.grcadvbaserate,
						t1.grcadvmargin,
						t1.grcadvpftrate,
						t1.rpyadvbaserate,
						t1.rpyadvmargin,
						t1.rpyadvpftrate,
						t1.rolloverfinance,
						t1.rolloverfrq,
						t1.downpayrule,
						t59.rulecode AS downpayrulecode,
						t59.rulecodedesc AS downpayruledesc,
						t1.finsusptrigger,
						t1.finsuspremarks,
						t1.alwmultipartydisb,
						t1.collateraltype,
						t1.tdsapplicable,
						t1.manualschedule,
						t1.applygrcpricing,
						t1.grcpricingmethod,
						t1.applyrpypricing,
						t1.rpypricingmethod,
						t1.rpyhierarchy,
						t67.rulecode AS grcpricingmethoddesc,
						t68.rulecode AS rpypricingmethoddesc,
						t1.droplineod,
						t1.droppingmethod,
						t1.ratechganyday,
						t1.finrepaypftonfrq,
						t1.alwbpi,
						t1.bpitreatment,
						t1.pftdueschon,
						t1.planemihalw,
						t1.planemihmethod,
						t1.planemihmaxperyear,
						t1.planemihmax,
						t1.planemihlockperiod,
						t1.planemicpz,
						t1.unplanemihlockperiod,
						t1.unplanemicpz,
						t1.reagecpz,
						t1.fddlockperiod,
						t1.alwdrpymethods,
						t1.maxunplannedemi,
						t1.maxreageholidays,
						t1.roundingmode,
						t1.roundingtarget,
						t1.frequencydays,
						t1.quickdisb,
						t1.alwmaxdisbcheckreq,
						t1.alwreage,
						t1.alwunplanemiholiday,
						t1.profitcenterid,
						t69.profitcentercode,
						t69.profitcenterdesc,
						t1.productcategory,
						t2.productdesc AS fincategorydesc,
						t1.developerfinance,
						t1.costoffunds,
						t1.chequecapturereq,
						t1.finltvcheck,
						t1.partiallysecured,
						t1.alwadvemi,
						t1.advemiminterms,
						t1.advemimaxterms,
						t1.advemidftterms,
						t1.advemischdmthd,
						t1.bpipftdaysbasis,
						t1.eligibilitymethods,
						t1.alwhybridrate,
						t1.fixedratetenor,
						t1.odmincapamount,
						t1.odrulecode,
						t1.alwzerointacc,
						t1.autorejectiondays,
						t1.taxnomand,
						t1.putcallrequired,
						t1.grcadvintersetreq,
						t1.grcadvtype,
						t1.grcadvminterms,
						t1.grcadvmaxterms,
						t1.grcadvdefaultterms,
						t1.advintersetreq,
						t1.advtype,
						t1.advminterms,
						t1.advmaxterms,
						t1.advdefaultterms,
						t1.advstage,
						t1.dsfreq,
						t1.cashcollateralreq,
						t1.tdsallowtomodify,
						t1.tdsapplicableto,
						t1.alwvan,
						t1.vanallocationmethod,
						t1.allowdrawingpower,
						t1.allowrevolving,
						t1.alwsanctionamt,
						t1.alwsanctionamtoverride,
						t1.sanbsdschdle,
						t1.finisratervwatgrcend,
						t1.schdonpmtcal,
						t1.autoapprove,
						t1.ocrrequired,
						t1.allowedocrs,
						t1.defaultocr,
						t1.allowedloanpurposes,
						t1.specificloanpurposes,
						t1.grcadjreq,
						t1.grcperiodaftrfulldisb,
						t1.autoincrgrcenddate,
						t1.grcautoincrmonths,
						t1.maxautoincrallowed,
						t1.thrldtomaintaingrcprd, 
						t1.alwLoanSplit,
						t1.splitLoanType
				   FROM rmtfinancetypes_temp t1
					LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
					LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
					LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
					LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
					LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
					LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
					LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
					LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
					LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
					LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
					LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
					LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			UNION ALL
				SELECT t1.fintype,
					   t1.fincategory,
					   t1.fintypedesc,
					   t1.finccy,
					   t1.findayscaltype,
					   t1.finactype,
					   t1.fincontingentactype,
					   t1.finisgenref,
					   t1.finmaxamount,
					   t1.finminamount,
					   t1.finisopennewfinac,
					   t1.findftstmtfrq,
					   t1.finisalwmd,
					   t1.finschdmthd,
					   t1.finisalwgrace,
					   t1.finhistretension,
					   t1.equalrepayment,
					   t1.finratetype,
					   t1.finbaserate,
					   t1.finsplrate,
					   t1.finintrate,
					   t1.finminrate,
					   t1.finmaxrate,
					   t1.findftintfrq,
					   t1.finisintcpz,
					   t1.fincpzfrq,
					   t1.finisrvwalw,
					   t1.finrvwfrq,
					   t1.fingrcratetype,
					   t1.fingrcbaserate,
					   t1.fingrcsplrate,
					   t1.fingrcintrate,
					   t1.fingrcminrate,
					   t1.fingrcmaxrate,
					   t1.fingrcdftintfrq,
					   t1.fingrcisintcpz,
					   t1.fingrccpzfrq,
					   t1.fingrcisrvwalw,
					   t1.fingrcrvwfrq,
					   t1.finminterm,
					   t1.finmaxterm,
					   t1.findftterms,
					   t1.finrpyfrq,
					   t1.finrepaymethod,
					   t1.finisalwpartialrpy,
					   t1.finisalwdifferment,
					   t1.finmaxdifferment,
					   t1.finisalwearlyrpy,
					   t1.finisalwearlysettle,
					   t1.finodrpytries,
					   t1.finearlypayrule,
					   t1.finearlysettlerule,
					   t1.findepositrestrictedto,
					   t1.finaebuyorinception,
					   t1.finaesellormaturity,
					   t1.finisactive,
					   t1.version,
					   t1.lastmntby,
					   t1.lastmnton,
					   t1.recordstatus,
					   t1.rolecode,
					   t1.nextrolecode,
					   t1.taskid,
					   t1.nexttaskid,
					   t1.recordtype,
					   t1.workflowid,
					   t1.stepfinance,
					   t1.steppingmandatory,
					   t1.alwmanualsteps,
					   t1.alwdsteppolicies,
					   t1.dftsteppolicy,
					   t4.actypedesc AS lovdescfincontingentactypename,
					   t5.actypedesc AS lovdescfinactypename,
					   t1.finisdwpayrequired,
					   t1.finrvwrateapplfor,
					   t1.finalwratechangeanydate,
					   t1.finisintcpzatgrcend,
					   t1.finelgrulecode,
					   t1.limitelgrulecode,
					   t1.finschcalcodeonrvw,
					   t1.alwplandeferment,
					   t1.plandefercount,
					   t1.finassettype,
					   t1.pftpayactype,
					   t1.finisopenpftpayacc,
					   t31.actypedesc AS lovdescpftpayactypename,
					   t1.finisalwgrcrepay,
					   t1.fingrcschdmthd,
					   t1.fingrcmargin,
					   t1.finmargin,
					   t1.finscheduleon,
					   t1.fingrcscheduleon,
					   t1.fincommitmentreq,
					   t1.fincollateralreq,
					   t1.findepreciationreq,
					   t1.findepreciationfrq,
					   t1.finbankcontingentactype,
					   t1.finprovisionactype,
					   t38.actypedesc AS lovdescfinbankcontactypename,
					   t39.actypedesc AS lovdescfinprovisionactypename,
					   t1.allowriainvestment,
					   t1.overridelimit,
					   t1.limitrequired,
					   t1.fincommitmentovrride,
					   t1.fincollateralovrride,
					   t1.finpftunchanged,
					   t1.applyodpenalty,
					   t1.odincgrcdays,
					   t1.odchargetype,
					   t1.odgracedays,
					   t1.odchargecalon,
					   t1.odchargeamtorperc,
					   t1.odallowwaiver,
					   t1.odmaxwaiverperc,
					   t1.findivision,
					   t48.divisioncodedesc AS lovdescfindivisionname,
					   t48.entitycode AS lovdescentitycode,
					   t1.finsuspactype,
					   t49.actypedesc AS lovdescfinsuspactypename,
					   t1.product,
					   t1.startdate,
					   t1.enddate,
					   t1.allowdownpaypgm,
					   t1.fintypedesc AS lovdescpromofintypedesc,
					   t1.remarks,
					   t1.alwearlypaymethods,
					   t1.pastduepftcalmthd,
					   t1.pastduepftmargin,
					   t1.alwadvancerent,
					   t1.grcadvbaserate,
					   t1.grcadvmargin,
					   t1.grcadvpftrate,
					   t1.rpyadvbaserate,
					   t1.rpyadvmargin,
					   t1.rpyadvpftrate,
					   t1.rolloverfinance,
					   t1.rolloverfrq,
					   t1.downpayrule,
					   t59.rulecode AS downpayrulecode,
					   t59.rulecodedesc AS downpayruledesc,
					   t1.finsusptrigger,
					   t1.finsuspremarks,
					   t1.alwmultipartydisb,
					   t1.collateraltype,
					   t1.tdsapplicable,
					   t1.manualschedule,
					   t1.applygrcpricing,
					   t1.grcpricingmethod,
					   t1.applyrpypricing,
					   t1.rpypricingmethod,
					   t1.rpyhierarchy,
					   t67.rulecode AS grcpricingmethoddesc,
					   t68.rulecode AS rpypricingmethoddesc,
					   t1.droplineod,
					   t1.droppingmethod,
					   t1.ratechganyday,
					   t1.finrepaypftonfrq,
					   t1.alwbpi,
					   t1.bpitreatment,
					   t1.pftdueschon,
					   t1.planemihalw,
					   t1.planemihmethod,
					   t1.planemihmaxperyear,
					   t1.planemihmax,
					   t1.planemihlockperiod,
					   t1.planemicpz,
					   t1.unplanemihlockperiod,
					   t1.unplanemicpz,
					   t1.reagecpz,
					   t1.fddlockperiod,
					   t1.alwdrpymethods,
					   t1.maxunplannedemi,
					   t1.maxreageholidays,
					   t1.roundingmode,
					   t1.roundingtarget,
					   t1.frequencydays,
					   t1.quickdisb,
					   t1.alwmaxdisbcheckreq,
					   t1.alwreage,
					   t1.alwunplanemiholiday,
					   t1.profitcenterid,
					   t69.profitcentercode,
					   t69.profitcenterdesc,
					   t1.productcategory,
					   t2.productdesc AS fincategorydesc,
					   t1.developerfinance,
					   t1.costoffunds,
					   t1.chequecapturereq,
					   t1.finltvcheck,
					   t1.partiallysecured,
					   t1.alwadvemi,
					   t1.advemiminterms,
					   t1.advemimaxterms,
					   t1.advemidftterms,
					   t1.advemischdmthd,
					   t1.bpipftdaysbasis,
					   t1.eligibilitymethods,
					   t1.alwhybridrate,
					   t1.fixedratetenor,
					   t1.odmincapamount,
					   t1.odrulecode,
					   t1.alwzerointacc,
					   t1.autorejectiondays,
					   t1.taxnomand,
					   t1.putcallrequired,
					   t1.grcadvintersetreq,
					   t1.grcadvtype,
					   t1.grcadvminterms,
					   t1.grcadvmaxterms,
					   t1.grcadvdefaultterms,
					   t1.advintersetreq,
					   t1.advtype,
					   t1.advminterms,
					   t1.advmaxterms,
					   t1.advdefaultterms,
					   t1.advstage,
					   t1.dsfreq,
					   t1.cashcollateralreq,
					   t1.tdsallowtomodify,
					   t1.tdsapplicableto,
					   t1.alwvan,
					   t1.vanallocationmethod,
					   t1.allowdrawingpower,
					   t1.allowrevolving,
					   t1.alwsanctionamt,
					   t1.alwsanctionamtoverride,
					   t1.sanbsdschdle,
					   t1.finisratervwatgrcend,
					   t1.schdonpmtcal,
					   t1.autoapprove,
					   t1.ocrrequired,
					   t1.allowedocrs,
					   t1.defaultocr,
					   t1.allowedloanpurposes,
					   t1.specificloanpurposes,
					   t1.grcadjreq,
					   t1.grcperiodaftrfulldisb,
					   t1.autoincrgrcenddate,
					   t1.grcautoincrmonths,
					   t1.maxautoincrallowed,
					   t1.thrldtomaintaingrcprd,
					   t1.alwLoanSplit,
					   t1.splitLoanType					   
					FROM rmtfinancetypes t1
					  LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
					  LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
					  LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
					  LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
					  LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
					  LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
					  LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
					  LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
					  LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
					  LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
					  LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
					  LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
					  WHERE NOT (EXISTS ( SELECT 1 AS expr1
					  FROM rmtfinancetypes_temp
					  WHERE rmtfinancetypes_temp.fintype = t1.fintype))
			]]>
		</createView>
	</changeSet>

	<changeSet id="427_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="428_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_aview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="428" author="venkatesh.ch">
		<createView viewName="rmtfinancetypes_aview" replaceIfExists="true">
		<![CDATA[ 
		SELECT t1.fintype,
			   t1.fincategory,
			   t1.fintypedesc,
			   t1.finccy,
			   t1.findayscaltype,
			   t1.finactype,
			   t1.fincontingentactype,
			   t1.finisgenref,
			   t1.finmaxamount,
			   t1.finminamount,
			   t1.finisopennewfinac,
			   t1.findftstmtfrq,
			   t1.finisalwmd,
			   t1.finschdmthd,
			   t1.finisalwgrace,
			   t1.finhistretension,
			   t1.equalrepayment,
			   t1.finratetype,
			   t1.finbaserate,
			   t1.finsplrate,
			   t1.finintrate,
			   t1.finminrate,
			   t1.finmaxrate,
			   t1.findftintfrq,
			   t1.finisintcpz,
			   t1.fincpzfrq,
			   t1.finisrvwalw,
			   t1.finrvwfrq,
			   t1.fingrcratetype,
			   t1.fingrcbaserate,
			   t1.fingrcsplrate,
			   t1.fingrcintrate,
			   t1.fingrcminrate,
			   t1.fingrcmaxrate,
			   t1.fingrcdftintfrq,
			   t1.fingrcisintcpz,
			   t1.fingrccpzfrq,
			   t1.fingrcisrvwalw,
			   t1.fingrcrvwfrq,
			   t1.finminterm,
			   t1.finmaxterm,
			   t1.findftterms,
			   t1.finrpyfrq,
			   t1.finrepaymethod,
			   t1.finisalwpartialrpy,
			   t1.finisalwdifferment,
			   t1.finmaxdifferment,
			   t1.finisalwearlyrpy,
			   t1.finisalwearlysettle,
			   t1.finodrpytries,
			   t1.finearlypayrule,
			   t1.finearlysettlerule,
			   t1.findepositrestrictedto,
			   t1.finaebuyorinception,
			   t1.finaesellormaturity,
			   t1.finisactive,
			   t1.version,
			   t1.lastmntby,
			   t1.lastmnton,
			   t1.recordstatus,
			   t1.rolecode,
			   t1.nextrolecode,
			   t1.taskid,
			   t1.nexttaskid,
			   t1.recordtype,
			   t1.workflowid,
			   t1.stepfinance,
			   t1.steppingmandatory,
			   t1.alwmanualsteps,
			   t1.alwdsteppolicies,
			   t1.dftsteppolicy,
			   t4.actypedesc AS lovdescfincontingentactypename,
			   t5.actypedesc AS lovdescfinactypename,
			   t1.finisdwpayrequired,
			   t1.finrvwrateapplfor,
			   t1.finalwratechangeanydate,
			   t1.finisintcpzatgrcend,
			   t1.finelgrulecode,
			   t1.limitelgrulecode,
			   t1.finschcalcodeonrvw,
			   t1.alwplandeferment,
			   t1.plandefercount,
			   t1.finassettype,
			   t1.pftpayactype,
			   t1.finisopenpftpayacc,
			   t31.actypedesc AS lovdescpftpayactypename,
			   t1.finisalwgrcrepay,
			   t1.fingrcschdmthd,
			   t1.fingrcmargin,
			   t1.finmargin,
			   t1.finscheduleon,
			   t1.fingrcscheduleon,
			   t1.fincommitmentreq,
			   t1.fincollateralreq,
			   t1.findepreciationreq,
			   t1.findepreciationfrq,
			   t1.finbankcontingentactype,
			   t1.finprovisionactype,
			   t38.actypedesc AS lovdescfinbankcontactypename,
			   t39.actypedesc AS lovdescfinprovisionactypename,
			   t1.allowriainvestment,
			   t1.overridelimit,
			   t1.limitrequired,
			   t1.fincommitmentovrride,
			   t1.fincollateralovrride,
			   t1.finpftunchanged,
			   t1.applyodpenalty,
			   t1.odincgrcdays,
			   t1.odchargetype,
			   t1.odgracedays,
			   t1.odchargecalon,
			   t1.odchargeamtorperc,
			   t1.odallowwaiver,
			   t1.odmaxwaiverperc,
			   t1.findivision,
			   t48.divisioncodedesc AS lovdescfindivisionname,
			   t48.entitycode AS lovdescentitycode,
			   t1.finsuspactype,
			   t49.actypedesc AS lovdescfinsuspactypename,
			   t1.product,
			   t1.startdate,
			   t1.enddate,
			   t1.allowdownpaypgm,
			   t1.remarks,
			   t1.alwearlypaymethods,
			   t1.pastduepftcalmthd,
			   t1.pastduepftmargin,
			   t1.alwadvancerent,
			   t1.grcadvbaserate,
			   t1.grcadvmargin,
			   t1.grcadvpftrate,
			   t1.rpyadvbaserate,
			   t1.rpyadvmargin,
			   t1.rpyadvpftrate,
			   t1.rolloverfinance,
			   t1.rolloverfrq,
			   t1.downpayrule,
			   t59.rulecode AS downpayrulecode,
			   t59.rulecodedesc AS downpayruledesc,
			   t1.finsusptrigger,
			   t1.finsuspremarks,
			   t1.alwmultipartydisb,
			   t1.collateraltype,
			   t1.tdsapplicable,
			   t1.manualschedule,
			   t1.applygrcpricing,
			   t1.grcpricingmethod,
			   t1.applyrpypricing,
			   t1.rpypricingmethod,
			   t1.rpyhierarchy,
			   t67.rulecode AS grcpricingmethoddesc,
			   t68.rulecode AS rpypricingmethoddesc,
			   t1.droplineod,
			   t1.droppingmethod,
			   t1.ratechganyday,
			   t1.finrepaypftonfrq,
			   t1.alwbpi,
			   t1.bpitreatment,
			   t1.pftdueschon,
			   t1.planemihalw,
			   t1.planemihmethod,
			   t1.planemihmaxperyear,
			   t1.planemihmax,
			   t1.planemihlockperiod,
			   t1.planemicpz,
			   t1.unplanemihlockperiod,
			   t1.unplanemicpz,
			   t1.reagecpz,
			   t1.fddlockperiod,
			   t1.alwdrpymethods,
			   t1.maxunplannedemi,
			   t1.maxreageholidays,
			   t1.roundingmode,
			   t1.roundingtarget,
			   t1.frequencydays,
			   t1.quickdisb,
			   t1.alwreage,
			   t1.alwunplanemiholiday,
			   t1.alwmaxdisbcheckreq,
			   t1.fintypedesc AS lovdescpromofintypedesc,
			   t1.profitcenterid,
			   t69.profitcentercode,
			   t69.profitcenterdesc,
			   t1.productcategory,
			   t2.productdesc AS fincategorydesc,
			   t1.developerfinance,
			   t1.costoffunds,
			   t1.chequecapturereq,
			   t1.finltvcheck,
			   t1.partiallysecured,
			   t1.alwadvemi,
			   t1.advemiminterms,
			   t1.advemimaxterms,
			   t1.advemidftterms,
			   t1.advemischdmthd,
			   t1.bpipftdaysbasis,
			   t1.eligibilitymethods,
			   t1.alwhybridrate,
			   t1.fixedratetenor,
			   t1.odmincapamount,
			   t1.odrulecode,
			   t1.alwzerointacc,
			   t1.autorejectiondays,
			   t1.taxnomand,
			   t1.putcallrequired,
			   t1.grcadvintersetreq,
			   t1.grcadvtype,
			   t1.grcadvminterms,
			   t1.grcadvmaxterms,
			   t1.grcadvdefaultterms,
			   t1.advintersetreq,
			   t1.advtype,
			   t1.advminterms,
			   t1.advmaxterms,
			   t1.advdefaultterms,
			   t1.advstage,
			   t1.dsfreq,
			   t1.cashcollateralreq,
			   t1.tdsallowtomodify,
			   t1.tdsapplicableto,
			   t1.alwvan,
			   t1.vanallocationmethod,
			   t1.allowdrawingpower,
			   t1.allowrevolving,
			   t1.alwsanctionamt,
			   t1.alwsanctionamtoverride,
			   t1.sanbsdschdle,
			   t1.finisratervwatgrcend,
			   t1.schdonpmtcal,
			   t1.autoapprove,
			   t1.ocrrequired,
			   t1.allowedocrs,
			   t1.defaultocr,
			   t1.allowedloanpurposes,
			   t1.specificloanpurposes,
			   t1.grcadjreq,
			   t1.grcperiodaftrfulldisb,
			   t1.autoincrgrcenddate,
			   t1.grcautoincrmonths,
			   t1.maxautoincrallowed,
			   t1.thrldtomaintaingrcprd,
			   t1.alwLoanSplit,
			   t1.splitLoanType				   
			FROM rmtfinancetypes t1
			 LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			 LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			 LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			 LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			 LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			 LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			 LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			 LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			 LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			 LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			 LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			 LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			]]>
		</createView>
	</changeSet>

	<changeSet id="428_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="429_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_orgview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="429" author="venkatesh.ch">
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
		<![CDATA[ 
			 SELECT t1.fintype,
					t1.fincategory,
					t1.fintypedesc,
					t1.finccy,
					t1.findayscaltype,
					t1.finactype,
					t1.fincontingentactype,
					t1.finisgenref,
					t1.finmaxamount,
					t1.finminamount,
					t1.finisopennewfinac,
					t1.finisalwmd,
					t1.finschdmthd,
					t1.finisalwgrace,
					t1.equalrepayment,
					t1.finratetype,
					t1.finbaserate,
					t1.finsplrate,
					t1.finintrate,
					t1.finminrate,
					t1.finmaxrate,
					t1.findftintfrq,
					t1.finisintcpz,
					t1.fincpzfrq,
					t1.finisrvwalw,
					t1.finrvwfrq,
					t1.fingrcratetype,
					t1.fingrcbaserate,
					t1.fingrcsplrate,
					t1.fingrcintrate,
					t1.fingrcminrate,
					t1.fingrcmaxrate,
					t1.fingrcdftintfrq,
					t1.fingrcisintcpz,
					t1.fingrccpzfrq,
					t1.fingrcisrvwalw,
					t1.fingrcrvwfrq,
					t1.finminterm,
					t1.finmaxterm,
					t1.findftterms,
					t1.finrpyfrq,
					t1.finrepaymethod,
					t1.finisalwdifferment,
					t1.finmaxdifferment,
					t1.finisactive,
					t1.stepfinance,
					t1.steppingmandatory,
					t1.alwmanualsteps,
					t1.alwdsteppolicies,
					t1.dftsteppolicy,
					t1.finisdwpayrequired,
					t1.finrvwrateapplfor,
					t1.finalwratechangeanydate,
					t1.finisintcpzatgrcend,
					t1.finschcalcodeonrvw,
					t1.alwplandeferment,
					t1.plandefercount,
					t1.pftpayactype,
					t1.finisopenpftpayacc,
					t1.finisalwgrcrepay,
					t1.fingrcschdmthd,
					t1.fingrcmargin,
					t1.finmargin,
					t1.fincommitmentreq,
					t1.fincollateralreq,
					t1.findepreciationreq,
					t1.findepreciationfrq,
					t1.finbankcontingentactype,
					t1.finprovisionactype,
					t1.allowriainvestment,
					t1.overridelimit,
					t1.limitrequired,
					t1.fincommitmentovrride,
					t1.fincollateralovrride,
					t1.finrepaypftonfrq,
					t1.finpftunchanged,
					t1.applyodpenalty,
					t1.odincgrcdays,
					t1.odchargetype,
					t1.odgracedays,
					t1.odchargecalon,
					t1.odchargeamtorperc,
					t1.odallowwaiver,
					t1.odmaxwaiverperc,
					t1.findivision,
					t3.divisioncodedesc AS lovdescfindivisionname,
					t1.finsuspactype,
					t1.product,
					t1.startdate,
					t1.enddate,
					t1.allowdownpaypgm,
					t1.fintypedesc AS lovdescpromofintypedesc,
					t1.remarks,
					t4.policydesc AS lovdescdftsteppolicyname,
					t1.pastduepftcalmthd,
					t1.pastduepftmargin,
					t1.alwadvancerent,
					t1.grcadvbaserate,
					t1.grcadvmargin,
					t1.grcadvpftrate,
					t1.rpyadvbaserate,
					t1.rpyadvmargin,
					t1.rpyadvpftrate,
					t1.rolloverfinance,
					t1.rolloverfrq,
					t1.downpayrule,
					t1.alwmultipartydisb,
					t1.collateraltype,
					t1.tdsapplicable,
					t5.rulecode AS downpayrulecode,
					t5.rulecodedesc AS downpayruledesc,
					t1.applygrcpricing,
					t1.applyrpypricing,
					t6.rulecode AS grcpricingmethoddesc,
					t7.rulecode AS rpypricingmethoddesc,
					t1.droplineod,
					t1.droppingmethod,
					t1.ratechganyday,
					t4.steptype AS dftsteppolicytype,
					t1.manualschedule,
					t1.alwbpi,
					t1.bpitreatment,
					t1.pftdueschon,
					t1.planemihalw,
					t1.planemihmethod,
					t1.planemihmaxperyear,
					t1.planemihmax,
					t1.planemihlockperiod,
					t1.planemicpz,
					t1.unplanemihlockperiod,
					t1.unplanemicpz,
					t1.reagecpz,
					t1.fddlockperiod,
					t1.alwdrpymethods,
					t1.maxunplannedemi,
					t1.maxreageholidays,
					t1.roundingmode,
					t1.roundingtarget,
					t1.frequencydays,
					t1.quickdisb,
					t1.alwreage,
					t1.alwunplanemiholiday,
					t1.alwmaxdisbcheckreq,
					t1.productcategory,
					t1.rpyhierarchy,
					t1.developerfinance,
					t3.entitycode AS lovdescentitycode,
					t8.entitydesc AS lovdescentitydesc,
					t1.costoffunds,
					t1.chequecapturereq,
					t1.finltvcheck,
					t1.partiallysecured,
					t1.alwadvemi,
					t1.advemiminterms,
					t1.advemimaxterms,
					t1.advemidftterms,
					t1.advemischdmthd,
					t1.bpipftdaysbasis,
					t1.eligibilitymethods,
					t1.alwhybridrate,
					t1.fixedratetenor,
					t1.odmincapamount,
					t1.odrulecode,
					t1.alwzerointacc,
					t1.finisalwpartialrpy,
					t1.autorejectiondays,
					t1.taxnomand,
					t1.putcallrequired,
					t1.grcadvintersetreq,
					t1.grcadvtype,
					t1.grcadvminterms,
					t1.grcadvmaxterms,
					t1.grcadvdefaultterms,
					t1.advintersetreq,
					t1.advtype,
					t1.advminterms,
					t1.advmaxterms,
					t1.advdefaultterms,
					t1.advstage,
					t1.dsfreq,
					t1.cashcollateralreq,
					t1.alwearlypaymethods,
					t1.tdsallowtomodify,
					t1.tdsapplicableto,
					t1.alwvan,
					t1.vanallocationmethod,
					t1.allowdrawingpower,
					t1.allowrevolving,
					t1.alwsanctionamt,
					t1.alwsanctionamtoverride,
					t1.sanbsdschdle,
					t1.finisratervwatgrcend,
					t1.schdonpmtcal,
					t1.autoapprove,
					t1.ocrrequired,
					t1.allowedocrs,
					t1.defaultocr,
					t1.allowedloanpurposes,
					t1.specificloanpurposes,
					t1.grcadjreq,
					t1.grcperiodaftrfulldisb,
					t1.autoincrgrcenddate,
					t1.grcautoincrmonths,
					t1.maxautoincrallowed,
					t1.thrldtomaintaingrcprd,
					t1.alwLoanSplit,
					t1.splitLoanType	
			FROM rmtfinancetypes t1
				JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
				LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
				LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
				LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
				LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
				LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
				]]>
		</createView>
	</changeSet>

	<changeSet id="429_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_orgview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="430_pre" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'covenants_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="430" author="rajesh.n">
		<comment>AllowedPaymentModes are retriving from CovenantTypes</comment>
		<createView viewName="covenants_view" replaceIfExists="true">
		<![CDATA[
			SELECT T1.ID
			,KeyReference
			,Module
			,CovenantTypeId
			,T2.Code CovenantTypeCode
			,T2.Description CovenantTypeDescription
			,T2.CovenantType
			,T2.Category
			,T1.LOS
			,MANDATORYROLE
			,T1.OTC
			,T1.PDD
			,RECEIVABLEDATE
			,ALLOWWAIVER
			,T1.MaxAllowedDays
			,DOCUMENTRECEIVED
			,DOCUMENTRECEIVEDDATE
			,T1.ALLOWPOSTPONEMENT
			,T2.AllowedPaymentModes
			,EXTENDEDDATE
			,T1.FREQUENCY
			,NEXTFREQUENCYDATE
			,T1.GRACEDAYS
			,GRACEDUEDATE
			,T1.AlertsRequired
			,T1.AlertType
			,T1.ALERTTOROLES
			,T1.ALERTDAYS
			,INTERNALUSE
			,REMARKS
			,ADDITIONALFIELD1
			,ADDITIONALFIELD2
			,ADDITIONALFIELD3
			,ADDITIONALFIELD4
			,T1.VERSION
			,T1.LASTMNTBY
			,T1.LASTMNTON
			,T1.RECORDSTATUS
			,T1.ROLECODE
			,T1.NEXTROLECODE
			,T1.TASKID
			,T1.NEXTTASKID
			,T1.RECORDTYPE
			,T1.WORKFLOWID
			from COVENANTS_TEMP T1
			INNER JOIN COVENANT_TYPES T2 ON T2.ID = T1.CovenantTypeId
			UNION ALL
			SELECT T1.ID
			,KeyReference
			,Module
			,CovenantTypeId
			,T2.Code CovenantTypeCode
			,T2.Description CovenantTypeDescription
			,T2.CovenantType
			,T2.Category
			,T1.LOS
			,MANDATORYROLE
			,T1.OTC
			,T1.PDD
			,RECEIVABLEDATE
			,ALLOWWAIVER
			,T1.MaxAllowedDays
			,DOCUMENTRECEIVED
			,DOCUMENTRECEIVEDDATE
			,T1.ALLOWPOSTPONEMENT
			,T2.AllowedPaymentModes
			,EXTENDEDDATE
			,T1.FREQUENCY
			,NEXTFREQUENCYDATE
			,T1.GRACEDAYS
			,GRACEDUEDATE
			,T1.AlertsRequired
			,T1.AlertType
			,T1.ALERTTOROLES
			,T1.ALERTDAYS
			,INTERNALUSE
			,REMARKS
			,ADDITIONALFIELD1
			,ADDITIONALFIELD2
			,ADDITIONALFIELD3
			,ADDITIONALFIELD4
			,T1.VERSION
			,T1.LASTMNTBY
			,T1.LASTMNTON
			,T1.RECORDSTATUS
			,T1.ROLECODE
			,T1.NEXTROLECODE
			,T1.TASKID
			,T1.NEXTTASKID
			,T1.RECORDTYPE
			,T1.WORKFLOWID
			from COVENANTS T1
			INNER JOIN COVENANT_TYPES T2 ON T2.ID = T1.CovenantTypeId
			WHERE NOT EXISTS (SELECT 1 FROM COVENANTS_TEMP WHERE Id = T1.Id)
			]]>
		</createView>
	</changeSet>

	<changeSet id="430_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'covenants_view');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="431_pre" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'covenants_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="431" author="rajesh.n">
		<comment>AllowedPaymentModes are retriving from CovenantTypes</comment>
		<createView viewName="covenants_aview" replaceIfExists="true">
		<![CDATA[
			SELECT T1.ID
			,KeyReference
			,Module
			,CovenantTypeId
			,T2.Code CovenantTypeCode
			,T2.Description CovenantTypeDescription
			,T2.CovenantType
			,T2.Category
			,T1.LOS
			,MANDATORYROLE
			,T1.OTC
			,T1.PDD
			,RECEIVABLEDATE
			,ALLOWWAIVER
			,T1.MaxAllowedDays
			,DOCUMENTRECEIVED
			,DOCUMENTRECEIVEDDATE
			,T1.ALLOWPOSTPONEMENT
			,T2.AllowedPaymentModes
			,EXTENDEDDATE
			,T1.FREQUENCY
			,NEXTFREQUENCYDATE
			,T1.GRACEDAYS
			,GRACEDUEDATE
			,T1.AlertsRequired
			,T1.AlertType
			,T1.ALERTTOROLES
			,T1.ALERTDAYS
			,INTERNALUSE
			,REMARKS
			,ADDITIONALFIELD1
			,ADDITIONALFIELD2
			,ADDITIONALFIELD3
			,ADDITIONALFIELD4
			,T1.VERSION
			,T1.LASTMNTBY
			,T1.LASTMNTON
			,T1.RECORDSTATUS
			,T1.ROLECODE
			,T1.NEXTROLECODE
			,T1.TASKID
			,T1.NEXTTASKID
			,T1.RECORDTYPE
			,T1.WORKFLOWID
			from COVENANTS T1
			INNER JOIN COVENANT_TYPES T2 ON T2.ID = T1.CovenantTypeId
			]]>
		</createView>
	</changeSet>

	<changeSet id="431_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'covenants_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="432_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'financemain_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="432" author="venkatesh.ch">
		<comment>ST#363 TK#773</comment>
		<createView viewName="FinanceMain_view" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay,
				t1.alwLoanSplit
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			UNION ALL
			 SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay,
				t1.alwLoanSplit
			   FROM (((((((((((((((((financemain t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			  WHERE (NOT (EXISTS ( SELECT 1
			           FROM financemain_temp
			          WHERE ((financemain_temp.finreference) = (t1.finreference)))))
					  ]]>
		</createView>
	</changeSet>

	<changeSet id="432_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');	
			]]>
		</sql>
	</changeSet>


	<changeSet id="433_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'FinanceMain_Tview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="433" author="venkatesh.ch">
		<comment>ST#363 TK#773</comment>
		<createView viewName="FinanceMain_Tview" replaceIfExists="true">
		<![CDATA[
		SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay,
				t1.alwLoanSplit
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="433_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'FinanceMain_Tview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="434_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'Financemain_Aview'); 
		]]>
		</sql>
	</changeSet>


	<changeSet id="434" author="venkatesh.ch">
		<comment>ST#363 TK#773</comment>
		<createView viewName="Financemain_Aview" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc AS lovdescfintypename,
			t7.finmaxamount AS lovdescfinmaxamt,
			t7.finminamount AS lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment AS lovdescfinalwdeferment,
			t7.finisdwpayrequired AS lovdescdwnpayreq,
			t7.finmaxdifferment AS lovdescfinmaxdifferment,
			t12.branchdesc AS lovdescfinbranchname,
			t12.branchprovince AS finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd AS lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc AS lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon AS lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision AS lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc AS lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername AS lovdescaccountsofficer,
			t28.dealercity AS lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc AS dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc AS referraliddesc,
			t1.dmacode,
			t34.rofficerdesc AS dmacodedesc,
			t1.salesdepartment,
			t35.deptdesc AS salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode AS lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue AS loveligibilitymethod,
			t38.valuedesc AS lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc AS employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername AS connectorcode,
			t40.dealercity AS connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel AS finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code AS businessverticalcode,
			bv.description AS businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanreq,
			t1.vancode,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.sanbsdschdle,
			t1.promotionseqid,
			t1.svamount,
			t1.cbamount,
			t1.appliedloanamt,
			t1.finisratervwatgrcend,
			t1.reqloanamt,
			t1.reqloantenor,
			t1.finocrrequired,
			t1.offerproduct,
			t1.offeramount,
			t1.custsegmentation,
			t1.baseproduct,
			t1.processtype,
			t1.bureautimeseries,
			t1.campaignname,
			t1.existinglanrefno,
			t1.leadsource,
			t1.posource,
			t1.rsa,
			t1.verification,
			t1.sourcingbranch,
			t1.sourchannelcategory,
			t1.asmname,
			t13.branchdesc AS lovDescSourcingBranch,
			t1.EndGrcPeriodAftrFullDisb,
			t1.AutoIncGrcEndDate,
			t1.AlwGrcAdj,
			t1.pMay,
			t1.OfferId,
			t1.alwLoanSplit
		FROM financemain t1
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
			LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
			LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="434_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'Financemain_Aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="435_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'financemain_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="435" author="venkatesh.ch">
		<comment>ST#363 TK#773</comment>
		<createView viewName="FinanceMain_view" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay,
				t1.alwLoanSplit,
				t1.ParentRef,
				t1.loanSplitted
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			UNION ALL
			 SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay,
				t1.alwLoanSplit,
				t1.ParentRef,
				t1.loanSplitted
			   FROM (((((((((((((((((financemain t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
			  WHERE (NOT (EXISTS ( SELECT 1
			           FROM financemain_temp
			          WHERE ((financemain_temp.finreference) = (t1.finreference)))))
					  ]]>
		</createView>
	</changeSet>

	<changeSet id="435_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="436_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'FinanceMain_Tview'); 
		]]>
		</sql>
	</changeSet>


	<changeSet id="436" author="venkatesh.ch">
		<comment>ST#363 TK#773</comment>
		<createView viewName="FinanceMain_Tview" replaceIfExists="true">
		<![CDATA[
		SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    ((t1.finamount + t1.feechargeamt) - t1.downpayment) AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.deptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
			    t1.promotionseqid,
			    t1.svamount,
			    t1.cbamount,
			    t1.appliedloanamt,
			    t1.finisratervwatgrcend,
			    t1.reqloanamt,
			    t1.reqloantenor,
			    t1.finocrrequired,
			    t1.offerproduct,
			    t1.offeramount,
			    t1.custsegmentation,
			    t1.baseproduct,
			    t1.processtype,
			    t1.bureautimeseries,
			    t1.campaignname,
			    t1.existinglanrefno,
			    t1.leadsource,
			    t1.posource,
			    t1.rsa,
			    t1.verification,
			    t1.sourcingbranch,
			    t1.sourchannelcategory,
			    t1.asmname,
			    t13.branchdesc AS lovdescsourcingbranch,
				t1.OfferId,
                t1.EndGrcPeriodAftrFullDisb,
                t1.AutoIncGrcEndDate,
                t1.AlwGrcAdj,
				t1.pMay,
				t1.alwLoanSplit,
				t1.ParentRef,
				t1.loanSplitted
			   FROM (((((((((((((((((financemain_temp t1
			     JOIN rmtfinancetypes t7 ON (((t1.fintype) = (t7.fintype))))
			     LEFT JOIN rmtbranches t12 ON (((t1.finbranch) = (t12.branchcode))))
			     LEFT JOIN rmtbranches t13 ON (((t1.sourcingbranch) = (t13.branchcode))))
			     LEFT JOIN finpftdetails t17 ON (((t17.finreference) = (t1.finreference))))
			     LEFT JOIN steppolicyheader t24 ON (((t1.steppolicy) = (t24.policycode))))
			     LEFT JOIN bmtcuststatuscodes t27 ON (((t1.finstatus) = (t27.custstscode))))
			     LEFT JOIN amtvehicledealer t28 ON ((t1.accountsofficer = t28.dealerid)))
			     LEFT JOIN relationshipofficers t30 ON (((t1.dsacode) = (t30.rofficercode))))
			     LEFT JOIN relationshipofficers t33 ON (((t1.referralid) = (t33.rofficercode))))
			     LEFT JOIN relationshipofficers t34 ON (((t1.dmacode) = (t34.rofficercode))))
			     LEFT JOIN bmtdepartments t35 ON (((t1.salesdepartment) = (t35.deptcode))))
			     LEFT JOIN smtdivisiondetail t36 ON (((t7.findivision) = (t36.divisioncode))))
			     LEFT JOIN relationshipofficers t37 ON (((t1.employeename) = (t37.rofficercode))))
			     LEFT JOIN rmtlovfielddetail t38 ON (((t1.eligibilitymethod = t38.fieldcodeid) AND ((t38.fieldcode) ='ELGMETHOD'))))
			     LEFT JOIN loanpurposes t39 ON (((t1.finpurpose) = (t39.loanpurposecode))))
			     LEFT JOIN amtvehicledealer t40 ON ((t1.connector = t40.dealerid)))
			     LEFT JOIN business_vertical bv ON ((bv.id = t1.businessvertical)))
				 ]]>
		</createView>
	</changeSet>

	<changeSet id="436_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'FinanceMain_Tview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="437_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'Financemain_Aview'); 
		]]>
		</sql>
	</changeSet>


	<changeSet id="437" author="venkatesh.ch">
		<comment>ST#363 TK#773</comment>
		<createView viewName="Financemain_Aview" replaceIfExists="true">
		<![CDATA[
		    SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc AS lovdescfintypename,
			t7.finmaxamount AS lovdescfinmaxamt,
			t7.finminamount AS lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment AS lovdescfinalwdeferment,
			t7.finisdwpayrequired AS lovdescdwnpayreq,
			t7.finmaxdifferment AS lovdescfinmaxdifferment,
			t12.branchdesc AS lovdescfinbranchname,
			t12.branchprovince AS finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd AS lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc AS lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon AS lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision AS lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc AS lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername AS lovdescaccountsofficer,
			t28.dealercity AS lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc AS dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc AS referraliddesc,
			t1.dmacode,
			t34.rofficerdesc AS dmacodedesc,
			t1.salesdepartment,
			t35.deptdesc AS salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode AS lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue AS loveligibilitymethod,
			t38.valuedesc AS lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc AS employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername AS connectorcode,
			t40.dealercity AS connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel AS finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code AS businessverticalcode,
			bv.description AS businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanreq,
			t1.vancode,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.sanbsdschdle,
			t1.promotionseqid,
			t1.svamount,
			t1.cbamount,
			t1.appliedloanamt,
			t1.finisratervwatgrcend,
			t1.reqloanamt,
			t1.reqloantenor,
			t1.finocrrequired,
			t1.offerproduct,
			t1.offeramount,
			t1.custsegmentation,
			t1.baseproduct,
			t1.processtype,
			t1.bureautimeseries,
			t1.campaignname,
			t1.existinglanrefno,
			t1.leadsource,
			t1.posource,
			t1.rsa,
			t1.verification,
			t1.sourcingbranch,
			t1.sourchannelcategory,
			t1.asmname,
			t13.branchdesc AS lovDescSourcingBranch,
			t1.EndGrcPeriodAftrFullDisb,
			t1.AutoIncGrcEndDate,
			t1.AlwGrcAdj,
			t1.pMay,
			t1.OfferId,
			t1.alwLoanSplit,
			t1.ParentRef,
			t1.loanSplitted
		FROM financemain t1
			JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			LEFT JOIN rmtbranches t13 ON t1.sourcingbranch = t13.branchcode
			LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			LEFT JOIN bmtdepartments t35 ON t1.salesdepartment = t35.deptcode
			LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			 ]]>
		</createView>
	</changeSet>

	<changeSet id="437_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'Financemain_Aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="438_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'CollateralAssignment_tview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="438" author="rajesh.n">
		<comment>ST#27 TK#118, customercif, collateraltype values are getting for Financial Summary Screen</comment>
		<createView viewName="CollateralAssignment_tview" replaceIfExists="true">
			<![CDATA[
					SELECT ca.module,
						ca.reference,
						ca.collateralref,
						ca.assignperc,
						cs.collateralccy,
						ca.active,
						ca.hostreference,
						cs.collateralvalue,
						cs.bankvaluation,
						t.totassignperc - ca.assignperc AS totassignperc,
						fm.fincurrassetvalue - fm.downpayment + fm.feechargeamt + fm.insuranceamt - fm.finrepaymentamount AS utilizedamount,
						ca.version,
						ca.lastmntby,
						ca.lastmnton,
						ca.recordstatus,
						ca.rolecode,
						ca.nextrolecode,
						ca.taskid,
						ca.nexttaskid,
						ca.recordtype,
						ca.workflowid,
						cs.specialltv,
						cs.bankltv,
						cu.custcif AS depositorcif,
						cs.collateraltype
						FROM collateralassignment_temp ca
						JOIN collateralsetup cs ON ca.collateralref = cs.collateralref
						JOIN customers cu ON cu.custid = cs.depositorid
						LEFT JOIN ( SELECT t1.collateralref,
								sum(t1.assignperc) AS totassignperc
							FROM ( SELECT collateralassignment_temp.reference,
										collateralassignment_temp.collateralref,
										collateralassignment_temp.assignperc
									FROM collateralassignment_temp
									UNION
									SELECT ca_1.reference,
										ca_1.collateralref,
										ca_1.assignperc
									FROM collateralassignment ca_1
									WHERE NOT (EXISTS ( SELECT 1
											FROM collateralassignment_temp
											WHERE collateralassignment_temp.collateralref = ca_1.collateralref AND collateralassignment_temp.module = ca_1.module AND collateralassignment_temp.reference = ca_1.reference))) t1
							GROUP BY t1.collateralref) t ON t.collateralref = ca.collateralref
						LEFT JOIN financemain_temp fm ON ca.reference = fm.finreference
					]]>
		</createView>
	</changeSet>

	<changeSet id="438_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'CollateralAssignment_tview');	
			]]>
		</sql>
	</changeSet>


	<changeSet id="439_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'CollateralAssignment_aview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="439" author="rajesh.n">
		<comment>ST#27 TK#118, customercif, collateraltype values are getting for Financial Summary Screen</comment>
		<createView viewName="CollateralAssignment_aview" replaceIfExists="true">
				<![CDATA[
		
					SELECT ca.module,
						ca.reference,
						ca.collateralref,
						ca.assignperc,
						cs.collateralccy,
						ca.active,
						ca.hostreference,
						cs.collateralvalue,
						cs.bankvaluation,
						t.totassignperc - ca.assignperc AS totassignperc,
						COALESCE(fm.fincurrassetvalue - fm.downpayment + fm.feechargeamt + fm.insuranceamt - fm.finrepaymentamount, cm.cmtutilizedamount) AS utilizedamount,
						ca.version,
						ca.lastmntby,
						ca.lastmnton,
						ca.recordstatus,
						ca.rolecode,
						ca.nextrolecode,
						ca.taskid,
						ca.nexttaskid,
						ca.recordtype,
						ca.workflowid,
						cs.specialltv,
						cs.bankltv,
						cu.custcif AS depositorcif,
						cs.collateraltype
						FROM collateralassignment ca
						JOIN collateralsetup cs ON ca.collateralref = cs.collateralref
						JOIN customers cu ON cu.custid = cs.depositorid
						LEFT JOIN ( SELECT t1.collateralref,
								sum(t1.assignperc) AS totassignperc
							FROM ( SELECT collateralassignment_temp.reference,
										collateralassignment_temp.collateralref,
										collateralassignment_temp.assignperc
									FROM collateralassignment_temp
									UNION
									SELECT ca_1.reference,
										ca_1.collateralref,
										ca_1.assignperc
									FROM collateralassignment ca_1
									WHERE NOT (EXISTS ( SELECT 1
											FROM collateralassignment_temp
											WHERE collateralassignment_temp.collateralref = ca_1.collateralref AND collateralassignment_temp.module = ca_1.module AND collateralassignment_temp.reference = ca_1.reference))) t1
							GROUP BY t1.collateralref) t ON t.collateralref = ca.collateralref
						LEFT JOIN financemain fm ON ca.reference = fm.finreference
						LEFT JOIN commitments cm ON cm.cmtreference = ca.reference
					]]>
		</createView>
	</changeSet>

	<changeSet id="439_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'CollateralAssignment_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="440_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'collateralassignment_ctview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="440" author="rajesh.n">
		<comment>ST#27 TK#118, customercif, collateraltype values are getting for Financial Summary Screen</comment>
		<createView viewName="collateralassignment_ctview" replaceIfExists="true">
				<![CDATA[
					SELECT ca.module,
						ca.reference,
						ca.collateralref,
						ca.assignperc,
						cs.collateralccy,
						ca.active,
						cs.collateralvalue,
						cs.bankvaluation,
						t.totassignperc - ca.assignperc AS totassignperc,
						fm.fincurrassetvalue - fm.downpayment + fm.feechargeamt + fm.insuranceamt - fm.finrepaymentamount AS utilizedamount,
						ca.version,
						ca.lastmntby,
						ca.lastmnton,
						ca.recordstatus,
						ca.rolecode,
						ca.nextrolecode,
						ca.taskid,
						ca.nexttaskid,
						ca.recordtype,
						ca.workflowid,
						cs.specialltv,
						cs.bankltv,
						ca.hostreference,
						cu.custcif AS depositorcif,
						cs.collateraltype
						FROM collateralassignment_temp ca
						JOIN collateralsetup_temp cs ON ca.collateralref= cs.collateralref
						JOIN customers cu ON cu.custid = cs.depositorid
						LEFT JOIN ( SELECT t1.collateralref,
								sum(t1.assignperc) AS totassignperc
							FROM ( SELECT collateralassignment_temp.reference,
										collateralassignment_temp.collateralref,
										collateralassignment_temp.assignperc
									FROM collateralassignment_temp
									UNION
									SELECT ca_1.reference,
										ca_1.collateralref,
										ca_1.assignperc
									FROM collateralassignment ca_1
									WHERE NOT (EXISTS ( SELECT 1
											FROM collateralassignment_temp
											WHERE collateralassignment_temp.collateralref = ca_1.collateralref AND collateralassignment_temp.module = ca_1.module AND collateralassignment_temp.reference = ca_1.reference))) t1
							GROUP BY t1.collateralref) t ON t.collateralref = ca.collateralref
						LEFT JOIN financemain_temp fm ON ca.reference = fm.finreference
				]]>
		</createView>
	</changeSet>

	<changeSet id="440_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'collateralassignment_ctview');	
			]]>
		</sql>
	</changeSet>


	<changeSet id="441_pre" author="rajesh.n" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'CollateralAssignment_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="441" author="rajesh.n">
		<comment>ST#27 TK#118, customercif, collateraltype values are getting for Financial Summary Screen</comment>
		<createView viewName="CollateralAssignment_view" replaceIfExists="true">
				<![CDATA[
			SELECT ca.module,
			ca.reference,
			ca.collateralref,
			ca.assignperc,
			cs.collateralccy,
			ca.active,
			ca.hostreference,
			cs.collateralvalue,
			cs.bankvaluation,
			t.totassignperc - ca.assignperc AS totassignperc,
			COALESCE(fm.fincurrassetvalue - fm.downpayment + fm.feechargeamt + fm.insuranceamt - fm.finrepaymentamount, cm.cmtutilizedamount) AS utilizedamount,
			ca.version,
			ca.lastmntby,
			ca.lastmnton,
			ca.recordstatus,
			ca.rolecode,
			ca.nextrolecode,
			ca.taskid,
			ca.nexttaskid,
			ca.recordtype,
			ca.workflowid,
			cs.specialltv,
			cs.bankltv,
			cu.custcif AS depositorcif,
			cs.collateraltype
			FROM collateralassignment_temp ca
			JOIN collateralsetup cs ON ca.collateralref = cs.collateralref
			JOIN customers cu ON cu.custid = cs.depositorid
			LEFT JOIN ( SELECT t1.collateralref,
					sum(t1.assignperc) AS totassignperc
				FROM ( SELECT collateralassignment_temp.reference,
							collateralassignment_temp.collateralref,
							collateralassignment_temp.assignperc
						FROM collateralassignment_temp
						UNION
						SELECT ca_1.reference,
							ca_1.collateralref,
							ca_1.assignperc
						FROM collateralassignment ca_1
						WHERE NOT (EXISTS ( SELECT 1
								FROM collateralassignment_temp
								WHERE collateralassignment_temp.collateralref = ca_1.collateralref AND collateralassignment_temp.module = ca_1.module AND collateralassignment_temp.reference = ca_1.reference))) t1
				GROUP BY t1.collateralref) t ON t.collateralref = ca.collateralref
			LEFT JOIN financemain_temp fm ON ca.reference = fm.finreference
			LEFT JOIN commitments_temp cm ON cm.cmtreference = ca.reference
			UNION ALL
			SELECT ca.module,
			ca.reference,
			ca.collateralref,
			ca.assignperc,
			cs.collateralccy,
			ca.active,
			ca.hostreference,
			cs.collateralvalue,
			cs.bankvaluation,
			t.totassignperc - ca.assignperc AS totassignperc,
			COALESCE(fm.fincurrassetvalue - fm.downpayment + fm.feechargeamt + fm.insuranceamt - fm.finrepaymentamount, cm.cmtutilizedamount) AS utilizedamount,
			ca.version,
			ca.lastmntby,
			ca.lastmnton,
			ca.recordstatus,
			ca.rolecode,
			ca.nextrolecode,
			ca.taskid,
			ca.nexttaskid,
			ca.recordtype,
			ca.workflowid,
			cs.specialltv,
			cs.bankltv,
			cu.custcif AS depositorcif,
			cs.collateraltype
			FROM collateralassignment ca
			JOIN collateralsetup cs ON ca.collateralref = cs.collateralref
			JOIN customers cu ON cu.custid = cs.depositorid
			LEFT JOIN ( SELECT t1.collateralref,
					sum(t1.assignperc) AS totassignperc
				FROM ( SELECT collateralassignment_temp.reference,
							collateralassignment_temp.collateralref,
							collateralassignment_temp.assignperc
						FROM collateralassignment_temp
						UNION
						SELECT ca_1.reference,
							ca_1.collateralref,
							ca_1.assignperc
						FROM collateralassignment ca_1
						WHERE NOT (EXISTS ( SELECT 1
								FROM collateralassignment_temp
								WHERE collateralassignment_temp.collateralref = ca_1.collateralref AND collateralassignment_temp.module = ca_1.module AND collateralassignment_temp.reference = ca_1.reference))) t1
				GROUP BY t1.collateralref) t ON t.collateralref = ca.collateralref
			LEFT JOIN financemain fm ON ca.reference = fm.finreference
			LEFT JOIN commitments cm ON cm.cmtreference = ca.reference
			WHERE NOT (EXISTS ( SELECT 1
				FROM collateralassignment_temp
				WHERE collateralassignment_temp.collateralref = ca.collateralref AND collateralassignment_temp.module = ca.module AND collateralassignment_temp.reference = ca.reference))
			]]>
		</createView>
	</changeSet>

	<changeSet id="441_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'CollateralAssignment_view');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="444_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'paymentinstructions_view'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="444" author="venkatesh.ch">
		<comment>PSD # 149132</comment>
		<createView viewName="paymentinstructions_view" replaceIfExists="true">
			<![CDATA[
				 SELECT t1.paymentinstructionid,
			t1.paymentid,
			t1.paymenttype,
			t1.paymentamount,
			t1.remarks,
			t1.partnerbankid,
			t1.issuingbank,
			t1.favourname,
			t1.favournumber,
			t1.payableloc,
			t1.printingloc,
			t1.valuedate,
			t1.postdate,
			t1.bankbranchid,
			t1.acctholdername,
			t1.accountno,
			t1.phonecountrycode,
			t1.phonenumber,
			t1.clearingdate,
			t1.active,
			t1.paymentccy,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.status,
			t1.transactionref,
			t1.rejectreason,
			t5.partnerbankcode,
			t5.partnerbankname,
			t3.bankcode AS branchbankcode,
			t3.branchcode AS bankbranchcode,
			t3.ifsc AS bankbranchifsc,
			t3.city,
			t4.bankname AS issuingbankname,
			t6.pccityname,
			t3.branchdesc,
			t2.bankname,
			t5.accountno AS partnerbankac,
			t5.actype AS partnerbankactype
		FROM paymentinstructions_temp t1
			LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
			LEFT JOIN bmtbankdetail t2 ON t2.bankcode = t3.bankcode
			LEFT JOIN bmtbankdetail t4 ON t1.issuingbank = t4.bankcode
			LEFT JOIN partnerbanks t5 ON t5.partnerbankid = t1.partnerbankid
			LEFT JOIN rmtprovincevscity t6 ON t6.pccity = t3.city
		UNION ALL
		SELECT t1.paymentinstructionid,
			t1.paymentid,
			t1.paymenttype,
			t1.paymentamount,
			t1.remarks,
			t1.partnerbankid,
			t1.issuingbank,
			t1.favourname,
			t1.favournumber,
			t1.payableloc,
			t1.printingloc,
			t1.valuedate,
			t1.postdate,
			t1.bankbranchid,
			t1.acctholdername,
			t1.accountno,
			t1.phonecountrycode,
			t1.phonenumber,
			t1.clearingdate,
			t1.active,
			t1.paymentccy,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.status,
			t1.transactionref,
			t1.rejectreason,
			t5.partnerbankcode,
			t5.partnerbankname,
			t3.bankcode AS branchbankcode,
			t3.branchcode AS bankbranchcode,
			t3.ifsc AS bankbranchifsc,
			t3.city,
			t4.bankname AS issuingbankname,
			t6.pccityname,
			t3.branchdesc,
			t2.bankname,
			t5.accountno AS partnerbankac,
			t5.actype AS partnerbankactype
		FROM paymentinstructions t1
			LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
			LEFT JOIN bmtbankdetail t2 ON t2.bankcode = t3.bankcode
			LEFT JOIN bmtbankdetail t4 ON t1.issuingbank = t4.bankcode
			LEFT JOIN partnerbanks t5 ON t5.partnerbankid = t1.partnerbankid
			LEFT JOIN rmtprovincevscity t6 ON t6.pccity = t3.city
		WHERE NOT (EXISTS ( SELECT 1
           FROM paymentinstructions_temp
          WHERE paymentinstructions_temp.paymentinstructionid = t1.paymentinstructionid))
			]]>
		</createView>
	</changeSet>

	<changeSet id="444_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'paymentinstructions_view');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="445_pre" author="venkatesh.ch" dbms="postgresql">
		<sql> 
		<![CDATA[ 
			select deps_save_and_drop_dependencies ('plf', 'paymentinstructions_aview'); 
		]]>
		</sql>
	</changeSet>

	<changeSet id="445" author="venkatesh.ch">
		<comment>PSD # 149132</comment>
		<createView viewName="paymentinstructions_Aview" replaceIfExists="true">
			<![CDATA[
			SELECT t1.paymentinstructionid,
				t1.paymentid,
				t1.paymenttype,
				t1.paymentamount,
				t1.remarks,
				t1.partnerbankid,
				t1.issuingbank,
				t1.favourname,
				t1.favournumber,
				t1.payableloc,
				t1.printingloc,
				t1.valuedate,
				t1.postdate,
				t1.bankbranchid,
				t1.acctholdername,
				t1.accountno,
				t1.phonecountrycode,
				t1.phonenumber,
				t1.clearingdate,
				t1.active,
				t1.paymentccy,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t1.status,
				t1.transactionref,
				t1.rejectreason,
				t5.partnerbankcode,
				t5.partnerbankname,
				t3.bankcode AS branchbankcode,
				t3.branchcode AS bankbranchcode,
				t3.ifsc AS bankbranchifsc,
				t3.city,
				t4.bankname AS issuingbankname,
				t6.pccityname,
				t3.branchdesc,
				t2.bankname,
				t5.accountno AS partnerbankac,
				t5.actype AS partnerbankactype
					FROM paymentinstructions t1
				LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
				LEFT JOIN bmtbankdetail t2 ON t2.bankcode = t3.bankcode
				LEFT JOIN bmtbankdetail t4 ON t1.issuingbank = t4.bankcode
				LEFT JOIN partnerbanks t5 ON t5.partnerbankid = t1.partnerbankid
				LEFT JOIN rmtprovincevscity t6 ON t6.pccity = t3.city
			
			]]>
		</createView>
	</changeSet>

	<changeSet id="445_post" author="venkatesh.ch" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'paymentinstructions_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="446" author="lakshmi.n">
		<createView viewName="bankinfodetail_view" replaceIfExists="true">
			<![CDATA[
				
				SELECT t1.bankid,
						t1.monthyear,
						t1.balance,
						t1.debitno,
						t1.debitamt,
						t1.creditno,
						t1.creditamt,
						t1.bouncein,
						t1.bounceout,
						t1.closingbal,
						t1.sanctionlimit,
						t1.avgutilization,
						t1.peakutilizationlevel,
						t1.settlementno,
						t1.settlementcredits,
						t1.odcclimit,
						t1.version,
						t1.lastmntby,
						t1.lastmnton,
						t1.recordstatus,
						t1.rolecode,
						t1.nextrolecode,
						t1.taskid,
						t1.nexttaskid,
						t1.recordtype,
						t1.workflowid,
						t1.interest,
						t1.trf,
						t1.totalemi,
						t1.totalsalary,
						t1.emibounceno
					FROM bankinfodetail_temp t1
					UNION ALL
					SELECT t1.bankid,
						t1.monthyear,
						t1.balance,
						t1.debitno,
						t1.debitamt,
						t1.creditno,
						t1.creditamt,
						t1.bouncein,
						t1.bounceout,
						t1.closingbal,
						t1.sanctionlimit,
						t1.avgutilization,
						t1.peakutilizationlevel,
						t1.settlementno,
						t1.settlementcredits,
						t1.odcclimit,
						t1.version,
						t1.lastmntby,
						t1.lastmnton,
						t1.recordstatus,
						t1.rolecode,
						t1.nextrolecode,
						t1.taskid,
						t1.nexttaskid,
						t1.recordtype,
						t1.workflowid,
						t1.interest,
						t1.trf,
						t1.totalemi,
						t1.totalsalary,
						t1.emibounceno
					FROM bankinfodetail t1
					WHERE NOT (EXISTS ( SELECT 1 AS expr1
							FROM bankinfodetail_temp
							WHERE bankinfodetail_temp.bankid = t1.bankid AND bankinfodetail_temp.monthyear = t1.monthyear))
		  ]]>
		</createView>
	</changeSet>

	<changeSet id="447" author="lakshmi.n">
		<createView viewName="int_disbursement_request_view" replaceIfExists="true">
			<![CDATA[
						SELECT fa.paymentid,
						fa.finreference,
						'D' AS channel,
						0 AS providerid,
							CASE
								WHEN fa.paymenttype = 'NEFT' THEN 'N'
								WHEN fa.paymenttype = 'RTGS' THEN 'R'
								WHEN fa.paymenttype = 'DD' THEN 'D'
								WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
								WHEN fa.paymenttype = 'IFT' THEN 'I'
								ELSE fa.paymenttype
							END AS disbursement_type,
						fa.amttobereleased,
						fa.disbdate,
						fa.lldate,
						fa.payableloc,
						fa.printingloc,
						cu.custcif,
						cu.custshrtname,
						'' AS customer_mobile,
						ce.custemail AS customer_email,
						cs.cpprovincename AS customer_state,
						cc.pccityname AS customer_city,
						'' AS customer_address1,
						'' AS customer_address2,
						'' AS customer_address3,
						'' AS customer_address4,
						'' AS customer_address5,
						bd.bankname,
						bb.branchcode,
						bb.branchdesc,
						pbd.cpprovincename AS benficiary_branch_state,
						pbd.pccityname AS benficiary_branch_city,
						bb.micr AS micr_code,
						bb.ifsc AS ifsc_code,
						fa.beneficiaryaccno,
							CASE
								WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
								ELSE fa.beneficiaryname
							END AS beneficiaryname,
						(fa.phonecountrycode ${call.concatenate} fa.phoneareacode) ${call.concatenate} fa.phonenumber AS beneficiary_mobile,
						bce.custemail AS benficiry_email,
						brs.cpprovincename AS benficiary_state,
						brc.pccityname AS benficiary_city,
						(((((brca.custaddrhnbr ${call.concatenate} ',') ${call.concatenate} brca.custaddrstreet) ${call.concatenate} ',') ${call.concatenate} brc.pccityname) ${call.concatenate} ',') ${call.concatenate} brs.cpprovincename AS benficiary_address1,
						'' AS benficiary_address2,
						'' AS benficiary_address3,
						'' AS benficiary_address4,
						'' AS benficiary_address5,
						'' AS payment_detail1,
						'' AS payment_detail2,
						'' AS payment_detail3,
						'' AS payment_detail4,
						'' AS payment_detail5,
						'' AS payment_detail6,
						'' AS payment_detail7,
						fa.status,
						fa.description AS remarks,
						fa.paymenttype,
						fm.fintype,
						pb.partnerbankid AS partnerbank_id,
						pb.partnerbankcode AS partnerbank_code,
						fa.inputdate,
						pb.alwfiledownload,
						pb.filename,
						fm.finisactive,
						smd.entitycode,
						pb.accountno AS partnerbank_account
					FROM finadvancepayments fa
						JOIN ( SELECT financemain_temp.custid,
								financemain_temp.finreference,
								financemain_temp.fintype,
								financemain_temp.finisactive
							FROM financemain_temp
							UNION ALL
							SELECT t2.custid,
								t2.finreference,
								t2.fintype,
								t2.finisactive
							FROM financemain t2
							WHERE NOT (EXISTS ( SELECT 1
									FROM financemain_temp t3
									WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
						JOIN customers cu ON cu.custid = fm.custid
						JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
						JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
						LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
						LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
						LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
						LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
						LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
						LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
						LEFT JOIN ( SELECT pb_1.partnerbankid,
								pbd_1.bankname,
								pbb.branchdesc,
								pbbrc.pccityname,
								pbbrs.cpprovincename
							FROM partnerbanks pb_1
								JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
								JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
								LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
								LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
						LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
						LEFT JOIN customers bc ON bc.custid = br.custid
						LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
						LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
						LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
						LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
						LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
						LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
							FROM disbursement_requests
							WHERE NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
									FROM finadvancepayments_temp))))
					UNION ALL
					SELECT pi.paymentinstructionid AS paymentid,
						ph.finreference,
						ph.paymenttype AS channel,
						0 AS providerid,
							CASE
								WHEN pi.paymenttype = 'NEFT' THEN 'N'
								WHEN pi.paymenttype = 'RTGS' THEN 'R'
								WHEN pi.paymenttype = 'DD' THEN 'D'
								WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
								WHEN pi.paymenttype = 'IFT' THEN 'I'
								ELSE pi.paymenttype
							END AS disbursement_type,
						pi.paymentamount AS amttobereleased,
						pi.postdate AS disbdate,
						pi.postdate AS lldate,
						pi.payableloc,
						pi.printingloc,
						cu.custcif,
						cu.custshrtname,
						'' AS customer_mobile,
						ce.custemail AS customer_email,
						cs.cpprovincename AS customer_state,
						cc.pccityname AS customer_city,
						'' AS customer_address1,
						'' AS customer_address2,
						'' AS customer_address3,
						'' AS customer_address4,
						'' AS customer_address5,
						bd.bankname,
						bb.branchcode,
						bb.branchdesc,
						bbrs.cpprovincename AS benficiary_branch_state,
						bbrc.pccityname AS benficiary_branch_city,
						bb.micr AS micr_code,
						bb.ifsc AS ifsc_code,
						pi.accountno AS beneficiaryaccno,
							CASE
								WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
								ELSE pi.acctholdername
							END AS beneficiaryname,
						pi.phonecountrycode ${call.concatenate} pi.phonenumber AS beneficiary_mobile,
						bce.custemail AS benficiry_email,
						brs.cpprovincename AS benficiary_state,
						brc.pccityname AS benficiary_city,
						'' AS benficiary_address1,
						'' AS benficiary_address2,
						'' AS benficiary_address3,
						'' AS benficiary_address4,
						'' AS benficiary_address5,
						'' AS payment_detail1,
						'' AS payment_detail2,
						'' AS payment_detail3,
						'' AS payment_detail4,
						'' AS payment_detail5,
						'' AS payment_detail6,
						'' AS payment_detail7,
						pi.status,
						pi.remarks,
						pi.paymenttype,
						fm.fintype,
						pb.partnerbankid AS partnerbank_id,
						pb.partnerbankcode AS partnerbank_code,
						pi.postdate AS inputdate,
						pb.alwfiledownload,
						pb.filename,
						fm.finisactive,
						smd.entitycode,
						pb.accountno AS partnerbank_account
					FROM paymentinstructions pi
						JOIN paymentheader ph ON ph.paymentid = pi.paymentid
						JOIN ( SELECT financemain.custid,
								financemain.finreference,
								financemain.fintype,
								financemain.finisactive
							FROM financemain
							UNION ALL
							SELECT t2.custid,
								t2.finreference,
								t2.fintype,
								t2.finisactive
							FROM financemain_temp t2
							WHERE NOT (EXISTS ( SELECT 1
									FROM financemain_temp t3
									WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
						JOIN customers cu ON cu.custid = fm.custid
						JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
						JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
						LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
						LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
						LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
						LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
						LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
						LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
						LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
						LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
						LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
						LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
						LEFT JOIN customers bc ON bc.custid = br.custid
						LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
						LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
						LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
						LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
						LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
						LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
							FROM disbursement_requests))
					UNION ALL
					SELECT pi.id AS paymentid,
						vr.primarylinkref AS finreference,
						'I' AS channel,
						pi.providerid,
							CASE
								WHEN pi.paymenttype = 'NEFT' THEN 'N'
								WHEN pi.paymenttype = 'RTGS' THEN 'R'
								WHEN pi.paymenttype = 'DD' THEN 'D'
								WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
								WHEN pi.paymenttype = 'IFT' THEN 'I'
								ELSE pi.paymenttype
							END AS disbursement_type,
						pi.paymentamount AS amttobereleased,
						pi.paymentdate AS disbdate,
						pi.paymentdate AS lldate,
						'' AS payableloc,
						'' AS printingloc,
						'' AS custcif,
						'' AS custshrtname,
						'' AS customer_mobile,
						'' AS customer_email,
						'' AS customer_state,
						'' AS customer_city,
						'' AS customer_address1,
						'' AS customer_address2,
						'' AS customer_address3,
						'' AS customer_address4,
						'' AS customer_address5,
						bd.bankname,
						bb.branchcode,
						bb.branchdesc,
						bbrs.cpprovincename AS benficiary_branch_state,
						bbrc.pccityname AS benficiary_branch_city,
						bb.micr AS micr_code,
						bb.ifsc AS ifsc_code,
						vpa.accountnumber AS beneficiaryaccno,
						avd.dealername AS beneficiaryname,
						avd.dealertelephone AS beneficiary_mobile,
						avd.email AS benficiry_email,
						brs.cpprovincename AS benficiary_state,
						brc.pccityname AS benficiary_city,
						avd.dealeraddress1 AS benficiary_address1,
						avd.dealeraddress2 AS benficiary_address2,
						avd.dealeraddress3 AS benficiary_address3,
						'' AS benficiary_address4,
						'' AS benficiary_address5,
						'' AS payment_detail1,
						'' AS payment_detail2,
						'' AS payment_detail3,
						'' AS payment_detail4,
						'' AS payment_detail5,
						'' AS payment_detail6,
						'' AS payment_detail7,
						pi.status,
						pi.remarks,
						pi.paymenttype,
						'' AS fintype,
						pb.partnerbankid AS partnerbank_id,
						pb.partnerbankcode AS partnerbank_code,
						pi.paymentdate AS inputdate,
						pb.alwfiledownload,
						pb.filename,
						1 AS finisactive,
						pi.entitycode,
						pb.accountno AS partnerbank_account
					FROM insurancepaymentinstructions pi
						JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
						JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
						JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
						JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
						JOIN vasrecording vr ON vr.paymentinsid = pi.id
						LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
						LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
						LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
						LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
						LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
						LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					WHERE pi.status = 'APPROVED' AND pi.paymentamount > 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
							FROM disbursement_requests))
					  
						]]>
		</createView>
	</changeSet>

	<changeSet id="448" author="lakshmi.n">
		<comment>PSD#154437</comment>
		<createView viewName="blacklistcustomer_aview" replaceIfExists="true">
			<![CDATA[	SELECT t1.custcif,
								t1.custfname,
								t1.custlname,
								t1.custdob,
								t1.custcrcpr,
								t1.mobilenumber,
								t1.custnationality,
								t1.custpassportno,
								t1.employer,
								t1.custisactive,
								t1.version,
								t1.lastmntby,
								t1.lastmnton,
								t1.recordstatus,
								t1.rolecode,
								t1.nextrolecode,
								t1.taskid,
								t1.nexttaskid,
								t1.recordtype,
								t1.workflowid,
								t2.nationalitydesc AS lovdescnationalitydesc,
								t3.empname AS lovdescempname,
								t1.custctgcode,
								t1.custcin,
								t1.custaadhaar,
								t1.custcompname,
								t1.reasoncode,
								t3.empindustry,
								t1.gender,
								t1.addresstype,
								t1.housenumber,
								t1.country,
								t1.state,
								t1.city,
								t1.street,
								t1.pincode,
								t1.remarks,
								t1.vid,
								t1.dl,
								t1.forged_document_type,
								t1.product_applied_in_other_fi,
								t1.source,
								t1.branch,
								t1.additionalfield0,
								t1.additionalfield1,
								t1.additionalfield2,
								t1.additionalfield3,
								t1.additionalfield4,
								t1.additionalfield5,
								t1.additionalfield6,
								t1.additionalfield7,
								t1.additionalfield8,
								t1.additionalfield9,
								t1.additionalfield10,
								t1.additionalfield11,
								t1.additionalfield12,
								t1.additionalfield13,
								t1.address,
								t1.additionalfield14,
								t1.additionalfield4 AS director1firstname,
								t1.additionalfield4 AS director1lastname,
								t1.additionalfield5 AS director2firstname,
								t1.additionalfield5 AS director2lastname,
								t1.additionalfield6 AS director3firstname,
								t1.additionalfield6 AS director3lastname,
								t1.additionalfield7 AS director4firstname,
								t1.additionalfield7 AS director4lastname,
								t1.additionalfield8 AS director5firstname,
								t1.additionalfield8 AS director5lastname,
								t1.additionalfield9 AS director6firstname,
								t1.additionalfield9 AS director6lastname,
								t1.additionalfield10 AS director7firstname,
								t1.additionalfield10 AS director7lastname,
								t1.additionalfield11 AS director8firstname,
								t1.additionalfield11 AS director8lastname,
								t1.additionalfield12 AS director9firstname,
								t1.additionalfield12 AS director9lastname,
								t1.additionalfield13 AS director10firstname,
								t1.additionalfield13 AS director10lastname,
								t1.additionalfield2 AS assorrelconcernfname,
								t1.additionalfield2 AS assorrelconcernlname,
								t1.additionalfield3 AS othersourcefirstname,
								t1.additionalfield3 AS othersourcelastname,
								case
								when t1.custctgcode = 'RETAIL' THEN (t1.custfname ${call.concatenate} ' ') ${call.concatenate} t1.custlname 
								when t1.custctgcode = 'CORP' THEN t1.custcompname 
								END AS custshrtname
								FROM blacklistcustomer t1
								LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
								LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
			
							]]>
		</createView>
	</changeSet>

	<changeSet id="449" author="lakshmi.n">
		<comment>PSD#154437</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
					<![CDATA[   SELECT t1.custcif,
									t1.custfname,
									t1.custlname,
									t1.custdob,
									t1.custcrcpr,
									t1.mobilenumber,
									t1.custnationality,
									t1.custpassportno,
									t1.employer,
									t1.custisactive,
									t1.version,
									t1.lastmntby,
									t1.lastmnton,
									t1.recordstatus,
									t1.rolecode,
									t1.nextrolecode,
									t1.taskid,
									t1.nexttaskid,
									t1.recordtype,
									t1.workflowid,
									t2.nationalitydesc AS lovdescnationalitydesc,
									t3.empname AS lovdescempname,
									t1.custctgcode,
									t1.custcin,
									t1.custaadhaar,
									t1.custcompname,
									t1.reasoncode,
									t3.empindustry,
									t1.gender,
									t1.addresstype,
									t1.housenumber,
									t1.country,
									t1.state,
									t1.city,
									t1.street,
									t1.pincode,
									t1.remarks,
									t1.vid,
									t1.dl,
									t1.forged_document_type,
									t1.product_applied_in_other_fi,
									t1.source,
									t1.branch,
									t1.additionalfield0,
									t1.additionalfield1,
									t1.additionalfield2,
									t1.additionalfield3,
									t1.additionalfield4,
									t1.additionalfield5,
									t1.additionalfield6,
									t1.additionalfield7,
									t1.additionalfield8,
									t1.additionalfield9,
									t1.additionalfield10,
									t1.additionalfield11,
									t1.additionalfield12,
									t1.additionalfield13,
									t1.address,
									t1.additionalfield14,
									t1.additionalfield4 AS director1firstname,
									t1.additionalfield4 AS director1lastname,
									t1.additionalfield5 AS director2firstname,
									t1.additionalfield5 AS director2lastname,
									t1.additionalfield6 AS director3firstname,
									t1.additionalfield6 AS director3lastname,
									t1.additionalfield7 AS director4firstname,
									t1.additionalfield7 AS director4lastname,
									t1.additionalfield8 AS director5firstname,
									t1.additionalfield8 AS director5lastname,
									t1.additionalfield9 AS director6firstname,
									t1.additionalfield9 AS director6lastname,
									t1.additionalfield10 AS director7firstname,
									t1.additionalfield10 AS director7lastname,
									t1.additionalfield11 AS director8firstname,
									t1.additionalfield11 AS director8lastname,
									t1.additionalfield12 AS director9firstname,
									t1.additionalfield12 AS director9lastname,
									t1.additionalfield13 AS director10firstname,
									t1.additionalfield13 AS director10lastname,
									case
									when t1.custctgcode = 'RETAIL' THEN (t1.custfname ${call.concatenate} ' ') ${call.concatenate} t1.custlname 
									when t1.custctgcode = 'CORP' THEN t1.custcompname 
									END AS custshrtname
								FROM blacklistcustomer_temp t1
									LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
									LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
					UNION ALL
						SELECT t1.custcif,	
								t1.custfname,
								t1.custlname,
								t1.custdob,
								t1.custcrcpr,
								t1.mobilenumber,
								t1.custnationality,
								t1.custpassportno,
								t1.employer,
								t1.custisactive,
								t1.version,
								t1.lastmntby,
								t1.lastmnton,
								t1.recordstatus,
								t1.rolecode,
								t1.nextrolecode,
								t1.taskid,
								t1.nexttaskid,
								t1.recordtype,
								t1.workflowid,
								t2.nationalitydesc AS lovdescnationalitydesc,
								t3.empname AS lovdescempname,
								t1.custctgcode,
								t1.custcin,
								t1.custaadhaar,
								t1.custcompname,
								t1.reasoncode,
								t3.empindustry,
								t1.gender,
								t1.addresstype,
								t1.housenumber,
								t1.country,
								t1.state,
								t1.city,
								t1.street,
								t1.pincode,
								t1.remarks,
								t1.vid,
								t1.dl,
								t1.forged_document_type,
								t1.product_applied_in_other_fi,
								t1.source,
								t1.branch,
								t1.additionalfield0,
								t1.additionalfield1,
								t1.additionalfield2,
								t1.additionalfield3,
								t1.additionalfield4,
								t1.additionalfield5,
								t1.additionalfield6,
								t1.additionalfield7,
								t1.additionalfield8,
								t1.additionalfield9,
								t1.additionalfield10,
								t1.additionalfield11,
								t1.additionalfield12,
								t1.additionalfield13,
								t1.address,
								t1.additionalfield14,
								t1.additionalfield4 AS director1firstname,
								t1.additionalfield4 AS director1lastname,
								t1.additionalfield5 AS director2firstname,
								t1.additionalfield5 AS director2lastname,
								t1.additionalfield6 AS director3firstname,
								t1.additionalfield6 AS director3lastname,
								t1.additionalfield7 AS director4firstname,
								t1.additionalfield7 AS director4lastname,
								t1.additionalfield8 AS director5firstname,
								t1.additionalfield8 AS director5lastname,
								t1.additionalfield9 AS director6firstname,
								t1.additionalfield9 AS director6lastname,
								t1.additionalfield10 AS director7firstname,
								t1.additionalfield10 AS director7lastname,
								t1.additionalfield11 AS director8firstname,
								t1.additionalfield11 AS director8lastname,
								t1.additionalfield12 AS director9firstname,
								t1.additionalfield12 AS director9lastname,
								t1.additionalfield13 AS director10firstname,
								t1.additionalfield13 AS director10lastname,
								case
								when t1.custctgcode = 'RETAIL' THEN (t1.custfname ${call.concatenate} ' ') ${call.concatenate} t1.custlname 
								when t1.custctgcode = 'CORP' THEN t1.custcompname 
								END AS custshrtname
							FROM blacklistcustomer t1
							LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
							LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
							WHERE NOT (EXISTS ( SELECT 1
						FROM blacklistcustomer_temp
						WHERE blacklistcustomer_temp.custcif = t1.custcif))
			
			]]>
		</createView>
	</changeSet>

	<changeSet id="450" author="lakshmi.n">
		<comment>PSD# 156796</comment>
		<createView viewName="financeenquiry_tview" replaceIfExists="true">
					<![CDATA[ 
					 SELECT t1.finreference,
							t1.finbranch,
							t1.fintype,
							t1.finccy,
							t1.schedulemethod,
							t1.profitdaysbasis,
							t1.finstartdate,
							t1.calterms AS numberofterms,
							t1.custid,
							t1.finamount,
							t1.grcperiodenddate,
							t1.maturitydate,
							t1.finrepaymentamount,
							t1.finisactive,
							t1.allowgrcperiod,
							t1.downpayment,
							t1.migratedfinance,
							t1.lastrepaydate,
							t1.lastrepaypftdate,
							t1.fincurrassetvalue,
							t1.blacklisted,
							t1.feechargeamt,
							t1.closingstatus,
							t1.graceterms,
							t1.alwmultidisb,
							t1.defferments,
							t1.finstatus,
							t1.mandateid,
							t1.finrepaymethod,
							t1.finassetvalue,
							t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
							t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
							t2.fintypedesc AS lovdescfintypename,
							t2.finscheduleon AS lovdescfinscheduleon,
							t2.findivision AS lovdescfindivision,
							t2.fincategory AS lovdescproductcodename,
							t2.finisalwdifferment AS lovdescfinalwdeferment,
							t3.custcif AS lovdesccustcif,
							t3.custshrtname AS lovdesccustshrtname,
							t4.branchdesc AS lovdescfinbranchname,
							t5.custtypectg,
							COALESCE(t9.noinst, 0) AS noinst,
							t1.finocrrequired,
							t1.alwgrcadj,
							t1.endgrcperiodaftrfulldisb,
							t1.autoincgrcenddate,
							t1.recordstatus
						FROM   financemain_temp t1
							JOIN   rmtfinancetypes t2 ON t1.fintype = t2.fintype
							JOIN   customers t3 ON t1.custid = t3.custid
							JOIN   rmtbranches t4 ON t1.finbranch = t4.branchcode
							JOIN   rmtcusttypes t5 ON t3.custtypecode = t5.custtypecode
							LEFT JOIN   finpftdetails t9 ON t1.finreference = t9.finreference
							
							]]>
		</createView>
	</changeSet>

	<changeSet id="451" author="lakshmi.n">
		<comment>PSD# 156796</comment>
		<createView viewName="financeenquiry_view" replaceIfExists="true">
					<![CDATA[ 
					 SELECT t1.finreference,
								t1.finbranch,
								t1.fintype,
								t1.finccy,
								t1.schedulemethod,
								t1.profitdaysbasis,
								t1.finstartdate,
								t1.calterms AS numberofterms,
								t1.custid,
								t1.finamount,
								t1.grcperiodenddate,
								t1.maturitydate,
								t1.finrepaymentamount,
								t1.finisactive,
								t1.allowgrcperiod,
								t1.downpayment,
								t1.migratedfinance,
								t1.lastrepaydate,
								t1.lastrepaypftdate,
								t1.fincurrassetvalue,
								t1.blacklisted,
								t1.feechargeamt,
								t1.closingstatus,
								t1.graceterms,
								t1.alwmultidisb,
								t1.defferments,
								t1.finstatus,
								t1.mandateid,
								t1.finrepaymethod,
								t1.finassetvalue,
								t1.insuranceamt,
								t1.sanbsdschdle,
								t1.promotionseqid,
								t1.svamount,
								t1.cbamount,
								t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
								t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
								t2.fintypedesc AS lovdescfintypename,
								t2.finscheduleon AS lovdescfinscheduleon,
								t2.findivision AS lovdescfindivision,
								t2.fincategory AS lovdescproductcodename,
								t2.finisalwdifferment AS lovdescfinalwdeferment,
								t3.custcif AS lovdesccustcif,
								t3.custshrtname AS lovdesccustshrtname,
								t4.branchdesc AS lovdescfinbranchname,
								t5.custtypectg,
								COALESCE(t9.noinst, 0) AS noinst,
								t1.finocrrequired,
								t1.alwgrcadj,
								t1.endgrcperiodaftrfulldisb,
								t1.autoincgrcenddate,
								t1.recordstatus
							FROM   financemain t1
								JOIN   rmtfinancetypes t2 ON t1.fintype = t2.fintype
								JOIN   customers t3 ON t1.custid = t3.custid
								JOIN   rmtbranches t4 ON t1.finbranch = t4.branchcode
								JOIN   rmtcusttypes t5 ON t3.custtypecode = t5.custtypecode
								LEFT JOIN   finpftdetails t9 ON t1.finreference = t9.finreference
				
						]]>
		</createView>
	</changeSet>

	<changeSet id="452" author="lakshmi.n">
		<comment>DE#1038 </comment>
		<createView viewName="financeenquiry_view" replaceIfExists="true">
					<![CDATA[ 
								SELECT t1.finreference,
											t1.finbranch,
											t1.fintype,
											t1.finccy,
											t1.schedulemethod,
											t1.profitdaysbasis,
											t1.finstartdate,
											t1.calterms AS numberofterms,
											t1.custid,
											t1.finamount,
											t1.grcperiodenddate,
											t1.maturitydate,
											t1.finrepaymentamount,
											t1.finisactive,
											t1.allowgrcperiod,
											t1.downpayment,
											t1.migratedfinance,
											t1.lastrepaydate,
											t1.lastrepaypftdate,
											t1.fincurrassetvalue,
											t1.blacklisted,
											t1.feechargeamt,
											t1.closingstatus,
											t1.graceterms,
											t1.alwmultidisb,
											t1.defferments,
											t1.finstatus,
											t1.mandateid,
											t1.finrepaymethod,
											t1.finassetvalue,
											t1.insuranceamt,
											t1.sanbsdschdle,
											t1.promotionseqid,
											t1.svamount,
											t1.cbamount,
											t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
											t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
											t2.fintypedesc AS lovdescfintypename,
											t2.finscheduleon AS lovdescfinscheduleon,
											t2.findivision AS lovdescfindivision,
											t2.fincategory AS lovdescproductcodename,
											t2.finisalwdifferment AS lovdescfinalwdeferment,
											t3.custcif AS lovdesccustcif,
											t3.custshrtname AS lovdesccustshrtname,
											t4.branchdesc AS lovdescfinbranchname,
											t5.custtypectg,
											COALESCE(t9.noinst, 0) AS noinst,
											t1.finocrrequired,
											t1.alwgrcadj,
											t1.endgrcperiodaftrfulldisb,
											t1.autoincgrcenddate,
											t1.recordstatus,
											t1.totalcpz
										FROM financemain t1
											JOIN rmtfinancetypes t2 ON t1.fintype= t2.fintype
											JOIN customers t3 ON t1.custid = t3.custid
											JOIN rmtbranches t4 ON t1.finbranch = t4.branchcode
											JOIN rmtcusttypes t5 ON t3.custtypecode = t5.custtypecode
											LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference			
						]]>
		</createView>
	</changeSet>

	<changeSet id="600" author="madhuri.n">
		<comment>ST#48_TK#128</comment>
		<createView viewName="blacklistcustomer_view" replaceIfExists="true">
			<![CDATA[
				SELECT t1.custcif,
									t1.custfname,
									t1.custlname,
									t1.custdob,
									t1.custcrcpr,
									t1.mobilenumber,
									t1.custnationality,
									t1.custpassportno,
									t1.employer,
									t1.custisactive,
									t1.version,
									t1.lastmntby,
									t1.lastmnton,
									t1.recordstatus,
									t1.rolecode,
									t1.nextrolecode,
									t1.taskid,
									t1.nexttaskid,
									t1.recordtype,
									t1.workflowid,
									t2.nationalitydesc AS lovdescnationalitydesc,
									t3.empname AS lovdescempname,
									t1.custctgcode,
									t1.custcin,
									t1.custaadhaar,
									t1.custcompname,
									t1.reasoncode,
									t3.empindustry,
									t1.gender,
									t1.addresstype,
									t1.housenumber,
									t1.country,
									t1.state,
									t1.city,
									t1.street,
									t1.pincode,
									t1.remarks,
									t1.vid,
									t1.dl,
									t1.forged_document_type,
									t1.product_applied_in_other_fi,
									t1.source,
									t1.branch,
									t1.additionalfield0,
									t1.additionalfield1,
									t1.additionalfield2,
									t1.additionalfield3,
									t1.additionalfield4,
									t1.additionalfield5,
									t1.additionalfield6,
									t1.additionalfield7,
									t1.additionalfield8,
									t1.additionalfield9,
									t1.additionalfield10,
									t1.additionalfield11,
									t1.additionalfield12,
									t1.additionalfield13,
									t1.address,
									t1.additionalfield14,
									t1.additionalfield4 AS director1firstname,
									t1.additionalfield4 AS director1lastname,
									t1.additionalfield5 AS director2firstname,
									t1.additionalfield5 AS director2lastname,
									t1.additionalfield6 AS director3firstname,
									t1.additionalfield6 AS director3lastname,
									t1.additionalfield7 AS director4firstname,
									t1.additionalfield7 AS director4lastname,
									t1.additionalfield8 AS director5firstname,
									t1.additionalfield8 AS director5lastname,
									t1.additionalfield9 AS director6firstname,
									t1.additionalfield9 AS director6lastname,
									t1.additionalfield10 AS director7firstname,
									t1.additionalfield10 AS director7lastname,
									t1.additionalfield11 AS director8firstname,
									t1.additionalfield11 AS director8lastname,
									t1.additionalfield12 AS director9firstname,
									t1.additionalfield12 AS director9lastname,
									t1.additionalfield13 AS director10firstname,
									t1.additionalfield13 AS director10lastname,
									case
									when t1.custctgcode = 'RETAIL' THEN (t1.custfname ${call.concatenate} ' ') ${call.concatenate} t1.custlname 
									when t1.custctgcode = 'CORP' THEN t1.custcompname 
									END AS custshrtname
								FROM blacklistcustomer_temp t1
									LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
									LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
					UNION ALL
						SELECT t1.custcif,	
								t1.custfname,
								t1.custlname,
								t1.custdob,
								t1.custcrcpr,
								t1.mobilenumber,
								t1.custnationality,
								t1.custpassportno,
								t1.employer,
								t1.custisactive,
								t1.version,
								t1.lastmntby,
								t1.lastmnton,
								t1.recordstatus,
								t1.rolecode,
								t1.nextrolecode,
								t1.taskid,
								t1.nexttaskid,
								t1.recordtype,
								t1.workflowid,
								t2.nationalitydesc AS lovdescnationalitydesc,
								t3.empname AS lovdescempname,
								t1.custctgcode,
								t1.custcin,
								t1.custaadhaar,
								t1.custcompname,
								t1.reasoncode,
								t3.empindustry,
								t1.gender,
								t1.addresstype,
								t1.housenumber,
								t1.country,
								t1.state,
								t1.city,
								t1.street,
								t1.pincode,
								t1.remarks,
								t1.vid,
								t1.dl,
								t1.forged_document_type,
								t1.product_applied_in_other_fi,
								t1.source,
								t1.branch,
								t1.additionalfield0,
								t1.additionalfield1,
								t1.additionalfield2,
								t1.additionalfield3,
								t1.additionalfield4,
								t1.additionalfield5,
								t1.additionalfield6,
								t1.additionalfield7,
								t1.additionalfield8,
								t1.additionalfield9,
								t1.additionalfield10,
								t1.additionalfield11,
								t1.additionalfield12,
								t1.additionalfield13,
								t1.address,
								t1.additionalfield14,
								t1.additionalfield4 AS director1firstname,
								t1.additionalfield4 AS director1lastname,
								t1.additionalfield5 AS director2firstname,
								t1.additionalfield5 AS director2lastname,
								t1.additionalfield6 AS director3firstname,
								t1.additionalfield6 AS director3lastname,
								t1.additionalfield7 AS director4firstname,
								t1.additionalfield7 AS director4lastname,
								t1.additionalfield8 AS director5firstname,
								t1.additionalfield8 AS director5lastname,
								t1.additionalfield9 AS director6firstname,
								t1.additionalfield9 AS director6lastname,
								t1.additionalfield10 AS director7firstname,
								t1.additionalfield10 AS director7lastname,
								t1.additionalfield11 AS director8firstname,
								t1.additionalfield11 AS director8lastname,
								t1.additionalfield12 AS director9firstname,
								t1.additionalfield12 AS director9lastname,
								t1.additionalfield13 AS director10firstname,
								t1.additionalfield13 AS director10lastname,
								case
								when t1.custctgcode = 'RETAIL' THEN (t1.custfname ${call.concatenate} ' ') ${call.concatenate} t1.custlname 
								when t1.custctgcode = 'CORP' THEN t1.custcompname 
								END AS custshrtname
							FROM blacklistcustomer t1
							LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
							LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
							WHERE NOT (EXISTS ( SELECT 1
						FROM blacklistcustomer_temp
						WHERE blacklistcustomer_temp.custcif = t1.custcif))
			]]>
		</createView>
	</changeSet>


	<changeSet id="601" author="madhuri.n">
		<comment>ST#48_TK#128</comment>
		<createView viewName="blacklistcustomer_Aview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.custcif,
								t1.custfname,
								t1.custlname,
								t1.custdob,
								t1.custcrcpr,
								t1.mobilenumber,
								t1.custnationality,
								t1.custpassportno,
								t1.employer,
								t1.custisactive,
								t1.version,
								t1.lastmntby,
								t1.lastmnton,
								t1.recordstatus,
								t1.rolecode,
								t1.nextrolecode,
								t1.taskid,
								t1.nexttaskid,
								t1.recordtype,
								t1.workflowid,
								t2.nationalitydesc AS lovdescnationalitydesc,
								t3.empname AS lovdescempname,
								t1.custctgcode,
								t1.custcin,
								t1.custaadhaar,
								t1.custcompname,
								t1.reasoncode,
								t3.empindustry,
								t1.gender,
								t1.addresstype,
								t1.housenumber,
								t1.country,
								t1.state,
								t1.city,
								t1.street,
								t1.pincode,
								t1.remarks,
								t1.vid,
								t1.dl,
								t1.forged_document_type,
								t1.product_applied_in_other_fi,
								t1.source,
								t1.branch,
								t1.additionalfield0,
								t1.additionalfield1,
								t1.additionalfield2,
								t1.additionalfield3,
								t1.additionalfield4,
								t1.additionalfield5,
								t1.additionalfield6,
								t1.additionalfield7,
								t1.additionalfield8,
								t1.additionalfield9,
								t1.additionalfield10,
								t1.additionalfield11,
								t1.additionalfield12,
								t1.additionalfield13,
								t1.address,
								t1.additionalfield14,
								t1.additionalfield4 AS director1firstname,
								t1.additionalfield4 AS director1lastname,
								t1.additionalfield5 AS director2firstname,
								t1.additionalfield5 AS director2lastname,
								t1.additionalfield6 AS director3firstname,
								t1.additionalfield6 AS director3lastname,
								t1.additionalfield7 AS director4firstname,
								t1.additionalfield7 AS director4lastname,
								t1.additionalfield8 AS director5firstname,
								t1.additionalfield8 AS director5lastname,
								t1.additionalfield9 AS director6firstname,
								t1.additionalfield9 AS director6lastname,
								t1.additionalfield10 AS director7firstname,
								t1.additionalfield10 AS director7lastname,
								t1.additionalfield11 AS director8firstname,
								t1.additionalfield11 AS director8lastname,
								t1.additionalfield12 AS director9firstname,
								t1.additionalfield12 AS director9lastname,
								t1.additionalfield13 AS director10firstname,
								t1.additionalfield13 AS director10lastname,
								t1.additionalfield2 AS assorrelconcernfname,
								t1.additionalfield2 AS assorrelconcernlname,
								t1.additionalfield3 AS othersourcefirstname,
								t1.additionalfield3 AS othersourcelastname,
								case
								when t1.custctgcode = 'RETAIL' THEN (t1.custfname ${call.concatenate} ' ') ${call.concatenate} t1.custlname 
								when t1.custctgcode = 'CORP' THEN t1.custcompname 
								END AS custshrtname
								FROM blacklistcustomer t1
								LEFT JOIN bmtnationalitycodes t2 ON t2.nationalitycode = t1.custnationality
								LEFT JOIN employerdetail t3 ON t3.employerid = t1.employer
			]]>
		</createView>
	</changeSet>

	<changeSet id="602" author="rajesh.n">
		<comment>ST#55 and TK#135 bankbranchid,ifsc,branchdesc columns added for IMD</comment>
		<createView viewName="finreceiptdetail_tview" replaceIfExists="true">
			<![CDATA[
				SELECT t1.receiptid,
					t1.receiptseqid,
					t1.receipttype,
					t1.paymentto,
					t1.paymenttype,
					t1.payagainstid,
					t1.amount,
					t1.favournumber,
					t1.valuedate,
					t1.bankcode,
					t1.favourname,
					t1.depositdate,
					t1.depositno,
					t1.paymentref,
					t1.transactionref,
					t1.chequeacno,
					t1.fundingac,
					t1.receiveddate,
					t1.status,
					t2.bankname AS bankcodedesc,
					t3.partnerbankcode AS fundingaccode,
					t3.partnerbankname AS fundingacdesc,
					t1.payorder,
					t1.logkey,
					t3.accountno AS partnerbankac,
					t3.actype AS partnerbankactype,
					t5.feetypecode,
					t1.bankbranchid,
					t6.ifsc,
					t6.branchdesc
				   FROM finreceiptdetail_temp t1
					 LEFT JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
					 LEFT JOIN partnerbanks t3 ON t1.fundingac = t3.partnerbankid
					 LEFT JOIN manualadvise t4 ON t1.payagainstid = t4.adviseid AND t1.paymenttype = 'PAYABLE'
					 LEFT JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
					 LEFT JOIN bankbranches t6 ON t1.bankbranchid = t6.bankbranchid
			]]>
		</createView>
	</changeSet>

	<changeSet id="603" author="rajesh.n">
		<comment>ST#55 and TK#135 bankbranchid,ifsc,branchdesc columns added for IMD</comment>
		<createView viewName="finreceiptdetail_aview" replaceIfExists="true">
			<![CDATA[

			SELECT t1.receiptid,
				t1.receiptseqid,
				t1.receipttype,
				t1.paymentto,
				t1.paymenttype,
				t1.payagainstid,
				t1.amount,
				t1.favournumber,
				t1.valuedate,
				t1.bankcode,
				t1.favourname,
				t1.depositdate,
				t1.depositno,
				t1.paymentref,
				t1.transactionref,
				t1.chequeacno,
				t1.fundingac,
				t1.receiveddate,
				t1.status,
				t2.bankname AS bankcodedesc,
				t3.partnerbankcode AS fundingaccode,
				t3.partnerbankname AS fundingacdesc,
				t1.payorder,
				t1.logkey,
				t3.accountno AS partnerbankac,
				t3.actype AS partnerbankactype,
				t5.feetypecode,
				t5.feetypedesc,
				t1.bankbranchid,
				t6.ifsc,
				t6.branchdesc
			   FROM finreceiptdetail t1
				 LEFT JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
				 LEFT JOIN partnerbanks t3 ON t1.fundingac = t3.partnerbankid
				 LEFT JOIN manualadvise t4 ON t1.payagainstid = t4.adviseid AND t1.paymenttype = 'PAYABLE'
				 LEFT JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
				 LEFT JOIN bankbranches t6 ON t1.bankbranchid = t6.bankbranchid
			]]>
		</createView>
	</changeSet>

	<changeSet id="604" author="rajesh.n">
		<comment>ST#55 and TK#135 bankbranchid,ifsc,branchdesc columns added for IMD</comment>
		<createView viewName="finreceiptdetail_view" replaceIfExists="true">
			<![CDATA[

				SELECT t4.custcif,
					t1.reference,
					t3.fintype,
					t1.receiptid,
					t1.receiptdate,
					t1.receiptamount,
					t2.depositdate,
					t2.bankcode,
						CASE
							WHEN t1.receiptpurpose = 'EarlyPayment' THEN 'Partial Payment'
							ELSE t1.receiptpurpose
						END AS receiptpurpose,
					t1.receiptmode,
					t1.bouncedate AS canceldate,
					t2.valuedate,
					t2.payagainstid,
					t1.bouncedate,
					t1.realizationdate,
					t1.cancelreason,
					t3.closingstatus,
					t3.finbranch,
					t3.fincurrassetvalue,
					t3.productcategory,
					t6.partnerbankcode,
					t2.transactionref,
					t2.fundingac,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t5.roledesc AS lovdescrequeststage,
					t2.paymenttype,
					t6.actype AS partnerbankactype,
					t6.accountno AS partnerbankac,
					t7.bankname AS bankcodedesc,
					t6.partnerbankname AS fundingacdesc,
					t6.partnerbankcode AS fundingaccode,
					t2.logkey,
					t2.payorder,
					t2.status,
					t2.receiveddate,
					t2.chequeacno,
					t2.paymentref,
					t2.depositno,
					t2.favourname,
					t2.favournumber,
					t2.amount,
					t2.paymentto,
					t2.receipttype,
					t2.receiptseqid,
					t2.bankbranchid,
					t8.ifsc,
					t8.branchdesc
				   FROM finreceiptheader_temp t1
					 LEFT JOIN finreceiptdetail_temp t2 ON t1.receiptid = t2.receiptid
					 LEFT JOIN financemain t3 ON t1.reference = t3.finreference
					 LEFT JOIN customers t4 ON t3.custid = t4.custid
					 LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
					 LEFT JOIN partnerbanks t6 ON t6.partnerbankid = t2.fundingac
					 LEFT JOIN bmtbankdetail t7 ON t2.bankcode = t7.bankcode
					 LEFT JOIN bankbranches t8 ON t2.bankbranchid = t8.bankbranchid
				UNION ALL
				 SELECT t4.custcif,
					t1.reference,
					t3.fintype,
					t1.receiptid,
					t1.receiptdate,
					t1.receiptamount,
					t2.depositdate,
					t2.bankcode,
						CASE
							WHEN t1.receiptpurpose = 'EarlyPayment' THEN 'Partial Payment'
							ELSE t1.receiptpurpose
						END AS receiptpurpose,
					t1.receiptmode,
					t1.bouncedate AS canceldate,
					t2.valuedate,
					t2.payagainstid,
					t1.bouncedate,
					t1.realizationdate,
					t1.cancelreason,
					t3.closingstatus,
					t3.finbranch,
					t3.fincurrassetvalue,
					t3.productcategory,
					t6.partnerbankcode,
					t2.transactionref,
					t2.fundingac,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t5.roledesc AS lovdescrequeststage,
					t2.paymenttype,
					t6.actype AS partnerbankactype,
					t6.accountno AS partnerbankac,
					t7.bankname AS bankcodedesc,
					t6.partnerbankname AS fundingacdesc,
					t6.partnerbankcode AS fundingaccode,
					t2.logkey,
					t2.payorder,
					t2.status,
					t2.receiveddate,
					t2.chequeacno,
					t2.paymentref,
					t2.depositno,
					t2.favourname,
					t2.favournumber,
					t2.amount,
					t2.paymentto,
					t2.receipttype,
					t2.receiptseqid,
					t2.bankbranchid,
					t8.ifsc,
					t8.branchdesc
				   FROM finreceiptheader t1
					 LEFT JOIN finreceiptdetail t2 ON t1.receiptid = t2.receiptid
					 LEFT JOIN financemain t3 ON t1.reference = t3.finreference
					 LEFT JOIN customers t4 ON t3.custid = t4.custid
					 LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
					 LEFT JOIN partnerbanks t6 ON t6.partnerbankid = t2.fundingac
					 LEFT JOIN bmtbankdetail t7 ON t2.bankcode = t7.bankcode
					 LEFT JOIN bankbranches t8 ON t2.bankbranchid = t8.bankbranchid
				  WHERE NOT (EXISTS ( SELECT 1
						   FROM finreceiptheader_temp
						  WHERE finreceiptheader_temp.receiptid = t1.receiptid))
			]]>
		</createView>
	</changeSet>
	<changeSet id="605" author="rajesh.n">
		<createView viewName="customers_aview" replaceIfExists="true">
			<![CDATA[
			
			SELECT t1.custid,
				t1.custcif,
				t1.custcorebank,
				t1.custctgcode,
				t1.custtypecode,
				t1.custsalutationcode,
				t1.custfname,
				t1.custmname,
				t1.custlname,
				t1.custshrtname,
				t1.custfnamelcllng,
				t1.custmnamelcllng,
				t1.custlnamelcllng,
				t1.custshrtnamelcllng,
				t1.custdftbranch,
				t1.custgendercode,
				t1.custdob,
				t1.custnationality,
				t1.custpob,
				t1.custcob,
				t1.custpassportno,
				t1.custmothermaiden,
				t1.custisminor,
				t1.custreferedby,
				t1.custdsa,
				t1.custdsadept,
				t1.custro1,
				t1.custro2,
				t1.custgroupid,
				t1.custsts,
				t1.custstschgdate,
				t1.custgroupsts,
				t1.custisblocked,
				t1.custisactive,
				t1.custisclosed,
				t1.custinactivereason,
				t1.custisdecease,
				t1.custisdormant,
				t1.custisdelinquent,
				t1.custistradefincust,
				t1.custtradelicencenum,
				t1.custtradelicenceexpiry,
				t1.custpassportexpiry,
				t1.custvisanum,
				t1.custvisaexpiry,
				t1.custisstaff,
				t1.custstaffid,
				t1.custindustry,
				t1.custsector,
				t1.custsubsector,
				t35.phonenumber,
				t35.phoneareacode,
				t35.phonecountrycode,
				t1.custcrcpr,
				t36.custemail AS emailid,
				t1.custprofession,
				t1.custtotalincome,
				t1.custmaritalsts,
				t1.custempsts,
				t1.custsegment,
				t1.custsubsegment,
				t1.custisblacklisted,
				t1.custblrsncode,
				t1.custisrejected,
				t1.custrejectedrsn,
				t1.custbaseccy,
				t1.custlng,
				t1.custparentcountry,
				t1.custresdcountry,
				t1.custriskcountry,
				t1.custclosedon,
				t1.custstmtfrq,
				t1.custisstmtcombined,
				t1.custstmtlastdate,
				t1.custstmtnextdate,
				t1.custstmtdispatchmode,
				t1.custfirstbusinessdate,
				t1.custaddlvar81,
				t1.custaddlvar82,
				t2.custtypedesc AS lovdesccusttypecodename,
				t2.custtypectg AS lovdesccustctgtype,
				t18.custctgdesc AS lovdesccustctgcodename,
				t1.custaddlvar83,
				t1.custaddlvar84,
				t1.custaddlvar85,
				t1.custaddlvar86,
				t1.custaddlvar87,
				t1.custaddlvar88,
				t1.custaddlvar89,
				t1.custaddldate1,
				t1.custaddldate2,
				t1.custaddldate3,
				t1.custaddldate4,
				t1.custaddldate5,
				t1.custaddlvar1,
				t1.custaddlvar2,
				t1.custaddlvar3,
				t1.custaddlvar4,
				t1.custaddlvar5,
				t1.custaddlvar6,
				t1.custaddlvar7,
				t1.custaddlvar8,
				t1.custaddlvar9,
				t1.custaddlvar10,
				t1.custaddlvar11,
				t1.custaddldec1,
				t1.custaddldec2,
				t1.custaddldec3,
				t1.custaddldec4,
				t1.custaddldec5,
				t1.custaddlint1,
				t1.custaddlint2,
				t1.custaddlint3,
				t1.custaddlint4,
				t1.custaddlint5,
				t1.version,
				t1.custsourceid,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t3.maritalstsdesc AS lovdesccustmaritalstsname,
				t4.empstsdesc AS lovdesccustempstsname,
				t6.custstsdescription AS lovdesccuststsname,
				t7.industrydesc AS lovdesccustindustryname,
				t8.sectordesc AS lovdesccustsectorname,
				t9.subsectordesc AS lovdesccustsubsectorname,
				t10.professiondesc AS lovdesccustprofessionname,
				t11.countrydesc AS lovdesccustcobname,
				t20.segmentdesc AS lovdesccustsegmentname,
				t12.nationalitydesc AS lovdesccustnationalityname,
				t13.genderdesc AS lovdesccustgendercodename,
				t14.deptdesc AS lovdesccustdsadeptname,
				t15.dealername AS lovdesccustro1name,
				t15.dealercity AS lovdesccustro1city,
				t16.grpstsdescription AS lovdesccustgroupstsname,
				t17.branchdesc AS lovdesccustdftbranchname,
				t17.bankrefno AS branchrefno,
				t17.branchswiftbrncde AS custswiftbrncode,
				t19.saluationdesc AS lovdesccustsalutationcodename,
				t21.countrydesc AS lovdesccustparentcountryname,
				t22.countrydesc AS lovdesccustresdcountryname,
				t23.countrydesc AS lovdesccustriskcountryname,
				t24.rofficerdesc AS lovdesccustro2name,
				t25.blrsndesc AS lovdesccustblrsncodename,
				t26.rejectdesc AS lovdesccustrejectedrsnname,
				t27.custgrpdesc AS lovdesccustgroupidname,
				t28.subsegmentdesc AS lovdesccustsubsegmentname,
				t29.lngdesc AS lovdesccustlngname,
				t30.dispatchmodedesc AS lovdescdispatchmodedescname,
				t1.dedupfound,
				t1.skipdedup,
				t1.custtotalexpense,
				t1.custblacklistdate,
				t1.noofdependents,
				t1.jointcust,
				t1.jointcustname,
				t1.jointcustdob,
				t27.custgrpcode AS lovdesccustgroupcode,
				t1.custrelation,
				t1.contactpersonname,
				t1.salariedcustomer,
				t31.targetdesc AS lovdesctargetname,
				t1.custsuspsts,
				t1.custsuspdate,
				t1.custsusptrigger,
				t1.subcategory,
				t1.casteid,
				t1.religionid,
				t32.castecode,
				t32.castedesc,
				t33.religioncode,
				t33.religiondesc,
				COALESCE(t34.roledesc,  ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
				t1.margindeviation,
				t1.applicationno,
				t17.branchprovince,
				t1.dnd,
				t1.othercaste,
				t1.otherreligion,
				t1.natureofbusiness,
				t1.entitytype,
				t1.custresidentialsts,
				t1.qualification,
				t1.custflag,
				t1.vip,
				t37.description AS lovdescqualification
			FROM customers t1
				LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
				LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
				LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
				LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
				LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
				LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
				LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
				LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
				LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
				LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
				LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
				LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
				LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
				LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
				LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
				LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
				LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode AND t1.custgendercode = t19.salutationgendercode
				LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
				LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
				LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
				LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
				LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
				LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
				LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
				LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
				LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
				LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
				LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
				LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
				LEFT JOIN caste t32 ON t1.casteid = t32.casteid
				LEFT JOIN religion t33 ON t1.religionid = t33.religionid
				LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
				LEFT JOIN customerphonenumbers t35 ON t1.custid = t35.phonecustid AND t35.phonetypepriority = 5
				LEFT JOIN customeremails t36 ON t1.custid = t36.custid AND t36.custemailtypecode = 'OFFICE'
				LEFT JOIN qualification t37 ON t1.qualification = t37.code 

				]]>
		</createView>
	</changeSet>

	<changeSet id="606" author="rajesh.n">
		<createView viewName="customers_tview" replaceIfExists="true">
			<![CDATA[	
				SELECT t1.custid,
				t1.custcif,
				t1.custcorebank,
				t1.custctgcode,
				t1.custtypecode,
				t1.custsalutationcode,
				t1.custfname,
				t1.custmname,
				t1.custlname,
				t1.custshrtname,
				t1.custfnamelcllng,
				t1.custmnamelcllng,
				t1.custlnamelcllng,
				t1.custshrtnamelcllng,
				t1.custdftbranch,
				t1.custgendercode,
				t1.custdob,
				t1.custpob,
				t1.custcob,
				t1.custpassportno,
				t1.custmothermaiden,
				t1.custisminor,
				t1.custreferedby,
				t1.custdsa,
				t1.custdsadept,
				t1.custro1,
				t1.custro2,
				t1.custgroupid,
				t1.custsts,
				t1.custstschgdate,
				t1.custgroupsts,
				t1.custisblocked,
				t1.custisactive,
				t1.custisclosed,
				t1.custinactivereason,
				t1.custisdecease,
				t1.custisdormant,
				t1.custisdelinquent,
				t1.custistradefincust,
				t1.custtradelicencenum,
				t1.custtradelicenceexpiry,
				t1.custpassportexpiry,
				t1.custvisanum,
				t1.custvisaexpiry,
				t1.custisstaff,
				t1.custstaffid,
				t1.custindustry,
				t1.custsector,
				t1.custsubsector,
				t1.custprofession,
				t1.custtotalincome,
				t1.custmaritalsts,
				t1.custempsts,
				t1.custsegment,
				t1.custsubsegment,
				t1.custisblacklisted,
				t1.custblrsncode,
				t1.custisrejected,
				t1.custrejectedrsn,
				t1.custbaseccy,
				t1.custlng,
				t1.custparentcountry,
				t1.custresdcountry,
				t1.custriskcountry,
				t1.custnationality,
				t1.custclosedon,
				t1.custstmtfrq,
				t1.custisstmtcombined,
				t1.custstmtlastdate,
				t1.custstmtnextdate,
				t1.custstmtdispatchmode,
				t1.custfirstbusinessdate,
				t1.custaddlvar81,
				t1.custaddlvar82,
				t1.custaddlvar83,
				t1.custaddlvar84,
				t1.custaddlvar85,
				t1.custaddlvar86,
				t1.custaddlvar87,
				t1.custaddlvar88,
				t1.custaddlvar89,
				t1.custaddldate1,
				t1.custaddldate2,
				t1.custaddldate3,
				t1.custaddldate4,
				t1.custaddldate5,
				t1.custaddlvar1,
				t1.custaddlvar2,
				t1.custaddlvar3,
				t1.custaddlvar4,
				t1.custaddlvar5,
				t1.custaddlvar6,
				t1.custaddlvar7,
				t1.custaddlvar8,
				t1.custaddlvar9,
				t1.custaddlvar10,
				t1.custaddlvar11,
				t1.custaddldec1,
				t1.custaddldec2,
				t1.custaddldec3,
				t1.custaddldec4,
				t1.custaddldec5,
				t1.custaddlint1,
				t1.custaddlint2,
				t1.custaddlint3,
				t1.custaddlint4,
				t1.custaddlint5,
				t1.custsourceid,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t2.custtypedesc AS lovdesccusttypecodename,
				t3.maritalstsdesc AS lovdesccustmaritalstsname,
				t4.empstsdesc AS lovdesccustempstsname,
				t6.custstsdescription AS lovdesccuststsname,
				t7.industrydesc AS lovdesccustindustryname,
				t8.sectordesc AS lovdesccustsectorname,
				t9.subsectordesc AS lovdesccustsubsectorname,
				t10.professiondesc AS lovdesccustprofessionname,
				t11.countrydesc AS lovdesccustcobname,
				t20.segmentdesc AS lovdesccustsegmentname,
				t12.nationalitydesc AS lovdesccustnationalityname,
				t13.genderdesc AS lovdesccustgendercodename,
				t14.deptdesc AS lovdesccustdsadeptname,
				t15.dealername AS lovdesccustro1name,
				t15.dealercity AS lovdesccustro1city,
				t16.grpstsdescription AS lovdesccustgroupstsname,
				t17.branchdesc AS lovdesccustdftbranchname,
				t17.bankrefno AS branchrefno,
				t17.branchswiftbrncde AS custswiftbrncode,
				t18.custctgdesc AS lovdesccustctgcodename,
				t2.custtypectg AS lovdesccustctgtype,
				t19.saluationdesc AS lovdesccustsalutationcodename,
				t21.countrydesc AS lovdesccustparentcountryname,
				t22.countrydesc AS lovdesccustresdcountryname,
				t23.countrydesc AS lovdesccustriskcountryname,
				t24.rofficerdesc AS lovdesccustro2name,
				t25.blrsndesc AS lovdesccustblrsncodename,
				t26.rejectdesc AS lovdesccustrejectedrsnname,
				t27.custgrpdesc AS lovdesccustgroupidname,
				t28.subsegmentdesc AS lovdesccustsubsegmentname,
				t29.lngdesc AS lovdesccustlngname,
				t30.dispatchmodedesc AS lovdescdispatchmodedescname,
				t1.dedupfound,
				t1.skipdedup,
				t1.custtotalexpense,
				t1.custblacklistdate,
				t1.noofdependents,
				t1.custcrcpr,
				t1.jointcust,
				t1.jointcustname,
				t1.jointcustdob,
				t27.custgrpcode AS lovdesccustgroupcode,
				t1.contactpersonname,
				t1.phonenumber,
				t1.emailid,
				t1.salariedcustomer,
				t31.targetdesc AS lovdesctargetname,
				t1.custrelation,
				t1.custsuspsts,
				t1.custsuspdate,
				t1.custsusptrigger,
				t1.subcategory,
				t1.casteid,
				t1.religionid,
				t32.castecode,
				t32.castedesc,
				t33.religioncode,
				t33.religiondesc,
				COALESCE(t34.roledesc,  ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
				t1.margindeviation,
				t1.applicationno,
				t17.branchprovince,
				t1.dnd,
				t1.othercaste,
				t1.otherreligion,
				t1.natureofbusiness,
				t1.entitytype,
				t1.custresidentialsts,
				t1.qualification,
				t1.custflag,
				t1.vip,
				t37.description AS lovdescqualification
			FROM customers_temp t1
				LEFT JOIN rmtcusttypes t2 ON t1.custtypecode = t2.custtypecode
				LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts = t3.maritalstscode
				LEFT JOIN bmtempstscodes t4 ON t1.custempsts = t4.empstscode
				LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts = t6.custstscode
				LEFT JOIN bmtindustries t7 ON t1.custindustry = t7.industrycode
				LEFT JOIN bmtsectors t8 ON t1.custsector = t8.sectorcode
				LEFT JOIN bmtsubsectors t9 ON t1.custsector = t9.sectorcode AND t1.custsubsector = t9.subsectorcode
				LEFT JOIN bmtprofessions t10 ON t1.custprofession = t10.professioncode
				LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
				LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
				LEFT JOIN bmtgenders t13 ON t1.custgendercode = t13.gendercode
				LEFT JOIN bmtdepartments t14 ON t1.custdsadept = t14.deptcode
				LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
				LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts = t16.grpstscode
				LEFT JOIN rmtbranches t17 ON t1.custdftbranch = t17.branchcode
				LEFT JOIN bmtcustcategories t18 ON t1.custctgcode = t18.custctgcode
				LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode = t19.salutationcode and t1.custgendercode = t19.SalutationGenderCode    
				LEFT JOIN bmtsegments t20 ON t1.custsegment = t20.segmentcode
				LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
				LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
				LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
				LEFT JOIN relationshipofficers t24 ON t1.custro2 = t24.rofficercode
				LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode = t25.blrsncode
				LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn = t26.rejectcode
				LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
				LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment = t28.subsegmentcode
				LEFT JOIN bmtlanguage t29 ON t1.custlng = t29.lngcode
				LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode = t30.dispatchmodecode
				LEFT JOIN targetdetails t31 ON t1.custaddlvar82 = t31.targetcode
				LEFT JOIN caste t32 ON t1.casteid = t32.casteid
				LEFT JOIN religion t33 ON t1.religionid = t33.religionid
				LEFT JOIN secroles t34 ON t1.nextrolecode = t34.rolecd
				LEFT JOIN qualification t37 ON t1.qualification = t37.code
	
				]]>
		</createView>
	</changeSet>

	<changeSet id="607_pre" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customers_view');
		 	]]>
		</sql>
	</changeSet>


	<changeSet id="607" author="rajesh.n">
		<createView viewName="customers_view" replaceIfExists="true">
			<![CDATA[
			
			SELECT t1.custid,
				t1.custcif,
				t1.custcorebank,
				t1.custctgcode,
				t1.custtypecode,
				t1.custsalutationcode,
				t1.custfname,
				t1.custmname,
				t1.custlname,
				t1.custshrtname,
				t1.custfnamelcllng,
				t1.custmnamelcllng,
				t1.custlnamelcllng,
				t1.custshrtnamelcllng,
				t1.custdftbranch,
				t1.custgendercode,
				t1.custdob,
				t1.custpob,
				t1.custcob,
				t1.custpassportno,
				t1.custmothermaiden,
				t1.custisminor,
				t1.custreferedby,
				t1.custdsa,
				t1.custdsadept,
				t1.custro1,
				t1.custro2,
				t1.custgroupid,
				t1.custsts,
				t1.custstschgdate,
				t1.custgroupsts,
				t1.custisblocked,
				t1.custisactive,
				t1.custisclosed,
				t1.custinactivereason,
				t1.custisdecease,
				t1.custisdormant,
				t1.custisdelinquent,
				t1.custistradefincust,
				t1.custtradelicencenum,
				t1.custtradelicenceexpiry,
				t1.custpassportexpiry,
				t1.custvisanum,
				t1.custvisaexpiry,
				t1.custisstaff,
				t1.custstaffid,
				t1.custindustry,
				t1.custsector,
				t1.custsubsector,
				t1.custprofession,
				t1.custtotalincome,
				t1.custmaritalsts,
				t1.custempsts,
				t1.custsegment,
				t1.custsubsegment,
				t1.custisblacklisted,
				t1.custblrsncode,
				t1.custisrejected,
				t1.custrejectedrsn,
				t1.custbaseccy,
				t1.custlng,
				t1.custparentcountry,
				t1.custresdcountry,
				t1.custriskcountry,
				t1.custnationality,
				t1.custclosedon,
				t1.custstmtfrq,
				t1.custisstmtcombined,
				t1.custstmtlastdate,
				t1.custstmtnextdate,
				t1.custstmtdispatchmode,
				t1.custfirstbusinessdate,
				t1.custaddlvar81,
				t1.custaddlvar82,
				t1.custaddlvar83,
				t1.custaddlvar84,
				t1.custaddlvar85,
				t1.custaddlvar86,
				t1.custaddlvar87,
				t1.custaddlvar88,
				t1.custaddlvar89,
				t1.custaddldate1,
				t1.custaddldate2,
				t1.custaddldate3,
				t1.custaddldate4,
				t1.custaddldate5,
				t1.custaddlvar1,
				t1.custaddlvar2,
				t1.custaddlvar3,
				t1.custaddlvar4,
				t1.custaddlvar5,
				t1.custaddlvar6,
				t1.custaddlvar7,
				t1.custaddlvar8,
				t1.custaddlvar9,
				t1.custaddlvar10,
				t1.custaddlvar11,
				t1.custaddldec1,
				t1.custaddldec2,
				t1.custaddldec3,
				t1.custaddldec4,
				t1.custaddldec5,
				t1.custaddlint1,
				t1.custaddlint2,
				t1.custaddlint3,
				t1.custaddlint4,
				t1.custaddlint5,
				t1.custsourceid,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t2.custtypedesc AS lovdesccusttypecodename,
				t3.maritalstsdesc AS lovdesccustmaritalstsname,
				t4.empstsdesc AS lovdesccustempstsname,
				t6.custstsdescription AS lovdesccuststsname,
				t7.industrydesc AS lovdesccustindustryname,
				t8.sectordesc AS lovdesccustsectorname,
				t9.subsectordesc AS lovdesccustsubsectorname,
				t10.professiondesc AS lovdesccustprofessionname,
				t11.countrydesc AS lovdesccustcobname,
				t20.segmentdesc AS lovdesccustsegmentname,
				t12.nationalitydesc AS lovdesccustnationalityname,
				t13.genderdesc AS lovdesccustgendercodename,
				t14.deptdesc AS lovdesccustdsadeptname,
				t15.dealername AS lovdesccustro1name,
				t15.dealercity AS lovdesccustro1city,
				t16.grpstsdescription AS lovdesccustgroupstsname,
				t17.branchdesc AS lovdesccustdftbranchname,
				t17.bankrefno AS branchrefno,
				t17.branchswiftbrncde AS custswiftbrncode,
				t18.custctgdesc AS lovdesccustctgcodename,
				t2.custtypectg AS lovdesccustctgtype,
				t19.saluationdesc AS lovdesccustsalutationcodename,
				t21.countrydesc AS lovdesccustparentcountryname,
				t22.countrydesc AS lovdesccustresdcountryname,
				t23.countrydesc AS lovdesccustriskcountryname,
				t24.rofficerdesc AS lovdesccustro2name,
				t25.blrsndesc AS lovdesccustblrsncodename,
				t26.rejectdesc AS lovdesccustrejectedrsnname,
				t27.custgrpdesc AS lovdesccustgroupidname,
				t28.subsegmentdesc AS lovdesccustsubsegmentname,
				t29.lngdesc AS lovdesccustlngname,
				t30.dispatchmodedesc AS lovdescdispatchmodedescname,
				t1.dedupfound,
				t1.skipdedup,
				t1.custtotalexpense,
				t1.custblacklistdate,
				t1.noofdependents,
				t1.custcrcpr,
				t1.jointcust,
				t1.jointcustname,
				t1.jointcustdob,
				t27.custgrpcode AS lovdesccustgroupcode,
				t1.custrelation,
				t1.contactpersonname,
				t1.phonenumber,
				t1.emailid,
				t1.salariedcustomer,
				t31.targetdesc AS lovdesctargetname,
				t1.custsuspsts,
				t1.custsuspdate,
				t1.custsusptrigger,
				t1.subcategory,
				t1.casteid,
				t1.religionid,
				t32.castecode,
				t32.castedesc,
				t33.religioncode,
				t33.religiondesc,
				COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
				t1.margindeviation,
				t1.applicationno,
				t17.branchprovince,
				t1.dnd,
				t1.othercaste,
				t1.otherreligion,
				t1.natureofbusiness,
				t1.entitytype,
				t1.custresidentialsts,
				t1.qualification,
				t1.custflag,
				t1.vip,
				t35.description AS lovdescqualification
			FROM customers_temp t1
					LEFT JOIN rmtcusttypes t2 ON t1.custtypecode= t2.custtypecode
					LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts= t3.maritalstscode
					LEFT JOIN bmtempstscodes t4 ON t1.custempsts= t4.empstscode
					LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts= t6.custstscode
					LEFT JOIN bmtindustries t7 ON t1.custindustry= t7.industrycode
					LEFT JOIN bmtsectors t8 ON t1.custsector= t8.sectorcode
					LEFT JOIN bmtsubsectors t9 ON t1.custsector= t9.sectorcode AND t1.custsubsector= t9.subsectorcode
					LEFT JOIN bmtprofessions t10 ON t1.custprofession= t10.professioncode
					LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
					LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
					LEFT JOIN bmtgenders t13 ON t1.custgendercode= t13.gendercode
					LEFT JOIN bmtdepartments t14 ON t1.custdsadept= t14.deptcode
					LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
					LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts= t16.grpstscode
					LEFT JOIN rmtbranches t17 ON t1.custdftbranch= t17.branchcode
					LEFT JOIN bmtcustcategories t18 ON t1.custctgcode= t18.custctgcode
					LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode= t19.salutationcode and t1.custgendercode = t19.SalutationGenderCode
					LEFT JOIN bmtsegments t20 ON t1.custsegment= t20.segmentcode
					LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
					LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
					LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
					LEFT JOIN relationshipofficers t24 ON t1.custro2= t24.rofficercode
					LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode= t25.blrsncode
					LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn= t26.rejectcode
					LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
					LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment= t28.subsegmentcode
					LEFT JOIN bmtlanguage t29 ON t1.custlng= t29.lngcode
					LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode= t30.dispatchmodecode
					LEFT JOIN targetdetails t31 ON t1.custaddlvar82= t31.targetcode
					LEFT JOIN secroles t34 ON t1.nextrolecode= t34.rolecd
					LEFT JOIN caste t32 ON t1.casteid = t32.casteid
					LEFT JOIN religion t33 ON t1.religionid = t33.religionid
					LEFT JOIN qualification t35 ON t1.qualification= t35.code
			UNION ALL
				SELECT t1.custid,
					t1.custcif,
					t1.custcorebank,
					t1.custctgcode,
					t1.custtypecode,
					t1.custsalutationcode,
					t1.custfname,
					t1.custmname,
					t1.custlname,
					t1.custshrtname,
					t1.custfnamelcllng,
					t1.custmnamelcllng,
					t1.custlnamelcllng,
					t1.custshrtnamelcllng,
					t1.custdftbranch,
					t1.custgendercode,
					t1.custdob,
					t1.custpob,
					t1.custcob,
					t1.custpassportno,
					t1.custmothermaiden,
					t1.custisminor,
					t1.custreferedby,
					t1.custdsa,
					t1.custdsadept,
					t1.custro1,
					t1.custro2,
					t1.custgroupid,
					t1.custsts,
					t1.custstschgdate,
					t1.custgroupsts,
					t1.custisblocked,
					t1.custisactive,
					t1.custisclosed,
					t1.custinactivereason,
					t1.custisdecease,
					t1.custisdormant,
					t1.custisdelinquent,
					t1.custistradefincust,
					t1.custtradelicencenum,
					t1.custtradelicenceexpiry,
					t1.custpassportexpiry,
					t1.custvisanum,
					t1.custvisaexpiry,
					t1.custisstaff,
					t1.custstaffid,
					t1.custindustry,
					t1.custsector,
					t1.custsubsector,
					t1.custprofession,
					t1.custtotalincome,
					t1.custmaritalsts,
					t1.custempsts,
					t1.custsegment,
					t1.custsubsegment,
					t1.custisblacklisted,
					t1.custblrsncode,
					t1.custisrejected,
					t1.custrejectedrsn,
					t1.custbaseccy,
					t1.custlng,
					t1.custparentcountry,
					t1.custresdcountry,
					t1.custriskcountry,
					t1.custnationality,
					t1.custclosedon,
					t1.custstmtfrq,
					t1.custisstmtcombined,
					t1.custstmtlastdate,
					t1.custstmtnextdate,
					t1.custstmtdispatchmode,
					t1.custfirstbusinessdate,
					t1.custaddlvar81,
					t1.custaddlvar82,
					t1.custaddlvar83,
					t1.custaddlvar84,
					t1.custaddlvar85,
					t1.custaddlvar86,
					t1.custaddlvar87,
					t1.custaddlvar88,
					t1.custaddlvar89,
					t1.custaddldate1,
					t1.custaddldate2,
					t1.custaddldate3,
					t1.custaddldate4,
					t1.custaddldate5,
					t1.custaddlvar1,
					t1.custaddlvar2,
					t1.custaddlvar3,
					t1.custaddlvar4,
					t1.custaddlvar5,
					t1.custaddlvar6,
					t1.custaddlvar7,
					t1.custaddlvar8,
					t1.custaddlvar9,
					t1.custaddlvar10,
					t1.custaddlvar11,
					t1.custaddldec1,
					t1.custaddldec2,
					t1.custaddldec3,
					t1.custaddldec4,
					t1.custaddldec5,
					t1.custaddlint1,
					t1.custaddlint2,
					t1.custaddlint3,
					t1.custaddlint4,
					t1.custaddlint5,
					t1.custsourceid,
					t1.version,
					t1.lastmntby,
					t1.lastmnton,
					t1.recordstatus,
					t1.rolecode,
					t1.nextrolecode,
					t1.taskid,
					t1.nexttaskid,
					t1.recordtype,
					t1.workflowid,
					t2.custtypedesc AS lovdesccusttypecodename,
					t3.maritalstsdesc AS lovdesccustmaritalstsname,
					t4.empstsdesc AS lovdesccustempstsname,
					t6.custstsdescription AS lovdesccuststsname,
					t7.industrydesc AS lovdesccustindustryname,
					t8.sectordesc AS lovdesccustsectorname,
					t9.subsectordesc AS lovdesccustsubsectorname,
					t10.professiondesc AS lovdesccustprofessionname,
					t11.countrydesc AS lovdesccustcobname,
					t20.segmentdesc AS lovdesccustsegmentname,
					t12.nationalitydesc AS lovdesccustnationalityname,
					t13.genderdesc AS lovdesccustgendercodename,
					t14.deptdesc AS lovdesccustdsadeptname,
					t15.dealername AS lovdesccustro1name,
					t15.dealercity AS lovdesccustro1city,
					t16.grpstsdescription AS lovdesccustgroupstsname,
					t17.branchdesc AS lovdesccustdftbranchname,
					t17.bankrefno AS branchrefno,
					t17.branchswiftbrncde AS custswiftbrncode,
					t18.custctgdesc AS lovdesccustctgcodename,
					t2.custtypectg AS lovdesccustctgtype,
					t19.saluationdesc AS lovdesccustsalutationcodename,
					t21.countrydesc AS lovdesccustparentcountryname,
					t22.countrydesc AS lovdesccustresdcountryname,
					t23.countrydesc AS lovdesccustriskcountryname,
					t24.rofficerdesc AS lovdesccustro2name,
					t25.blrsndesc AS lovdesccustblrsncodename,
					t26.rejectdesc AS lovdesccustrejectedrsnname,
					t27.custgrpdesc AS lovdesccustgroupidname,
					t28.subsegmentdesc AS lovdesccustsubsegmentname,
					t29.lngdesc AS lovdesccustlngname,
					t30.dispatchmodedesc AS lovdescdispatchmodedescname,
					t1.dedupfound,
					t1.skipdedup,
					t1.custtotalexpense,
					t1.custblacklistdate,
					t1.noofdependents,
					t1.custcrcpr,
					t1.jointcust,
					t1.jointcustname,
					t1.jointcustdob,
					t27.custgrpcode AS lovdesccustgroupcode,
					t1.custrelation,
					t1.contactpersonname,
					t1.phonenumber,
					t1.emailid,
					t1.salariedcustomer,
					t31.targetdesc AS lovdesctargetname,
					t1.custsuspsts,
					t1.custsuspdate,
					t1.custsusptrigger,
					t1.subcategory,
					t1.casteid,
					t1.religionid,
					t32.castecode,
					t32.castedesc,
					t33.religioncode,
					t33.religiondesc,
					COALESCE(t34.roledesc, ${add.schema}fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
					t1.margindeviation,
					t1.applicationno,
					t17.branchprovince,
					t1.dnd,
					t1.othercaste,
					t1.otherreligion,
					t1.natureofbusiness,
					t1.entitytype,
					t1.custresidentialsts,
					t1.qualification,
					t1.custflag,
					t1.vip,
					t35.description AS lovdescqualification
				FROM customers t1
					LEFT JOIN rmtcusttypes t2 ON t1.custtypecode= t2.custtypecode
					LEFT JOIN bmtmaritalstatuscodes t3 ON t1.custmaritalsts= t3.maritalstscode
					LEFT JOIN bmtempstscodes t4 ON t1.custempsts= t4.empstscode
					LEFT JOIN bmtcuststatuscodes t6 ON t1.custsts= t6.custstscode
					LEFT JOIN bmtindustries t7 ON t1.custindustry= t7.industrycode
					LEFT JOIN bmtsectors t8 ON t1.custsector= t8.sectorcode
					LEFT JOIN bmtsubsectors t9 ON t1.custsector= t9.sectorcode AND t1.custsubsector= t9.subsectorcode
					LEFT JOIN bmtprofessions t10 ON t1.custprofession= t10.professioncode
					LEFT JOIN bmtcountries t11 ON t1.custcob = t11.countrycode
					LEFT JOIN bmtnationalitycodes t12 ON t1.custnationality = t12.nationalitycode
					LEFT JOIN bmtgenders t13 ON t1.custgendercode= t13.gendercode
					LEFT JOIN bmtdepartments t14 ON t1.custdsadept= t14.deptcode
					LEFT JOIN amtvehicledealer t15 ON t1.custro1 = t15.dealerid
					LEFT JOIN bmtgrpstatuscodes t16 ON t1.custgroupsts= t16.grpstscode
					LEFT JOIN rmtbranches t17 ON t1.custdftbranch= t17.branchcode
					LEFT JOIN bmtcustcategories t18 ON t1.custctgcode= t18.custctgcode
					LEFT JOIN bmtsalutations t19 ON t1.custsalutationcode= t19.salutationcode  and t1.custgendercode = t19.SalutationGenderCode
					LEFT JOIN bmtsegments t20 ON t1.custsegment= t20.segmentcode
					LEFT JOIN bmtcountries t21 ON t1.custparentcountry = t21.countrycode
					LEFT JOIN bmtcountries t22 ON t1.custresdcountry = t22.countrycode
					LEFT JOIN bmtcountries t23 ON t1.custriskcountry = t23.countrycode
					LEFT JOIN relationshipofficers t24 ON t1.custro2= t24.rofficercode
					LEFT JOIN bmtblacklistrsncodes t25 ON t1.custblrsncode= t25.blrsncode
					LEFT JOIN bmtrejectcodes t26 ON t1.custrejectedrsn= t26.rejectcode
					LEFT JOIN customergroups t27 ON t1.custgroupid = t27.custgrpid
					LEFT JOIN bmtsubsegments t28 ON t1.custsubsegment= t28.subsegmentcode
					LEFT JOIN bmtlanguage t29 ON t1.custlng= t29.lngcode
					LEFT JOIN bmtdispatchmodes t30 ON t1.custstmtdispatchmode= t30.dispatchmodecode
					LEFT JOIN targetdetails t31 ON t1.custaddlvar82= t31.targetcode
					LEFT JOIN secroles t34 ON t1.nextrolecode= t34.rolecd
					LEFT JOIN caste t32 ON t1.casteid = t32.casteid
					LEFT JOIN religion t33 ON t1.religionid = t33.religionid
					LEFT JOIN qualification t35 ON t1.qualification= t35.code
				WHERE NOT (EXISTS ( SELECT 1 AS expr1
					FROM customers_temp
						WHERE customers_temp.custid = t1.custid))
			]]>
		</createView>
	</changeSet>

	<changeSet id="607_post" author="rajesh.n" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'customers_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="608" author="rajesh.n">
		<comment>ST#99 TK#199 PB.BRANCHIFSCCODE, PB.UTILITYCODE columns are added</comment>
		<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
		<![CDATA[
			SELECT  M.MANDATEID,
					BD.BANKSHORTCODE BANKCODE,
					BD.BANKNAME,
					case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
					case when LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
					CUST.CUSTCIF,
					CUST.CUSTSHRTNAME,
					CUST.CustCoreBank,
					FT.FINTYPEDESC FINTYPE ,
					FIN.FINREFERENCE ,
					COALESCE((SELECT SUM(TotalAmount) from (Select
					MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount
					FROM FINSCHEDULEDETAILS FSD
					INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE=FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID
					GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
					COALESCE((SELECT SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD 
								WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID =
					M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
					CASE M.OPENMANDATE WHEN 1 THEN 'New Open ECS' ELSE 'No Open ECS' END OPENMANDATE,
					M.ACCNUMBER,
					CASE WHEN M.ACCTYPE = '10' then 'Savings Account' WHEN M.ACCTYPE = '11' then 'Current Account' WHEN M.ACCTYPE = '11' then 'Cash Credit Account' ELSE M.ACCTYPE END ACCTYPE,
					M.ACCHOLDERNAME,
					BB.MICR,
					BB.IFSC,
					BB.ADDOFBRANCH,
					(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
					(select MAX(SCHDATE) from FINSCHEDULEDETAILS where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID)) EMIENDDATE,
					COALESCE (M.MAXLIMIT, 0) MAXLIMIT,
					COALESCE((SELECT SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID=M.MANDATEID) GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
					FIN.NumberOfTerms,
					M.periodicity,
					M.STARTDATE,
					M.EXPIRYDATE,
					FIN.APPLICATIONNO,
					M.MANDATETYPE,
					M.STATUS,
					M.INPUTDATE,
					M.RECORDSTATUS,
					M.RECORDTYPE,
					M.MANDATECCY,
					COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,
					M.EntityCode,
					CP.PHONENUMBER,
					CE.CUSTEMAIL,
					PB.PARTNERBANKNAME,
					M.LASTMNTON,
					BB.BranchDesc BANK_BRANCH_NAME,
					PB.BRANCHIFSCCODE,
					PB.UTILITYCODE
					FROM MANDATES M
				INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
				INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE
				INNER JOIN CUSTOMERS CUST ON CUST.CUSTID = M.CUSTID
				INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH
				LEFT JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = M.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
				LEFT OUTER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
				LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
				LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH
				LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE=FT.FINTYPE
				WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC' OR status ='NEW'))
			]]>
		</createView>
	</changeSet>

	<changeSet id="609" author="rajesh.n">
		<comment>cheque_number column added </comment>
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
			 SELECT fa.paymentid,
					fa.finreference,
					'D' AS channel,
					0 AS providerid,
					CASE
							WHEN fa.paymenttype = 'NEFT' THEN 'N'
							WHEN fa.paymenttype = 'RTGS' THEN 'R'
							WHEN fa.paymenttype = 'DD' THEN 'D'
							WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
							ELSE fa.paymenttype
					END AS disbursement_type,
					fa.amttobereleased,
					fa.disbdate,
					fa.lldate,
					fa.payableloc,
					fa.printingloc,
					fa.LLReferenceNo as CHEQUE_NUMBER,
					cu.custcif,
					cu.custshrtname,
					'' AS customer_mobile,
					ce.custemail AS customer_email,
					cs.cpprovincename AS customer_state,
					cc.pccityname AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					pbd.cpprovincename AS benficiary_branch_state,
					pbd.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					fa.beneficiaryaccno,
					CASE
					WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
					ELSE fa.beneficiaryname
					END AS beneficiaryname,
					(fa.phonecountrycode ${call.concatenate} fa.phoneareacode) ${call.concatenate} fa.phonenumber AS beneficiary_mobile,
					bce.custemail AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					(((((brca.custaddrhnbr ${call.concatenate} ',') ${call.concatenate} brca.custaddrstreet) ${call.concatenate} ',') ${call.concatenate} brc.pccityname) ${call.concatenate} ',') ${call.concatenate} brs.cpprovincename AS benficiary_address1,
					'' AS benficiary_address2,
					'' AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					fa.status,
					fa.description AS remarks,
					fa.paymenttype,
					fm.fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					fa.inputdate,
					pb.alwfiledownload,
					pb.filename,
					fm.finisactive,
					smd.entitycode,
					pb.accountno AS partnerbank_account
					FROM finadvancepayments fa
					JOIN ( SELECT financemain_temp.custid,
					financemain_temp.finreference,
					financemain_temp.fintype,
					financemain_temp.finisactive
					FROM financemain_temp
					UNION ALL
					SELECT t2.custid,
					t2.finreference,
					t2.fintype,
					t2.finisactive
					FROM financemain t2
					WHERE NOT (EXISTS ( SELECT 1
					FROM financemain_temp t3
					WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
					JOIN customers cu ON cu.custid = fm.custid
					JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
					JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
					LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
					LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN ( SELECT pb_1.partnerbankid,
					pbd_1.bankname,
					pbb.branchdesc,
					pbbrc.pccityname,
					pbbrs.cpprovincename
					FROM partnerbanks pb_1
					JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
					JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
					LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
					LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
					LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
					LEFT JOIN customers bc ON bc.custid = br.custid
					LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
					LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
					LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests)) AND NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
					FROM finadvancepayments_temp))
					
					UNION ALL
					
					SELECT pi.paymentinstructionid AS paymentid,
					ph.finreference,
					ph.paymenttype AS channel,
					0 AS providerid,
					CASE
							WHEN pi.paymenttype = 'NEFT' THEN 'N'
							WHEN pi.paymenttype = 'RTGS' THEN 'R'
							WHEN pi.paymenttype = 'DD' THEN 'D'
							WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
							ELSE pi.paymenttype
						END AS disbursement_type,
					pi.paymentamount AS amttobereleased,
					pi.postdate AS disbdate,
					pi.postdate AS lldate,
					pi.payableloc,
					pi.printingloc,
					pi.FavourNumber as CHEQUE_NUMBER,
					cu.custcif,
					cu.custshrtname,
					'' AS customer_mobile,
					ce.custemail AS customer_email,
					cs.cpprovincename AS customer_state,
					cc.pccityname AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					bbrs.cpprovincename AS benficiary_branch_state,
					bbrc.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					pi.accountno AS beneficiaryaccno,
					CASE
					WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
					ELSE pi.acctholdername
					END AS beneficiaryname,
					pi.phonecountrycode ${call.concatenate} pi.phonenumber AS beneficiary_mobile,
					bce.custemail AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					'' AS benficiary_address1,
					'' AS benficiary_address2,
					'' AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					pi.status,
					pi.remarks,
					pi.paymenttype,
					fm.fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					pi.postdate AS inputdate,
					pb.alwfiledownload,
					pb.filename,
					fm.finisactive,
					smd.entitycode,
					pb.accountno AS partnerbank_account
					FROM paymentinstructions pi
					JOIN paymentheader ph ON ph.paymentid = pi.paymentid
					JOIN ( SELECT financemain.custid,
					financemain.finreference,
					financemain.fintype,
					financemain.finisactive
					FROM financemain
					
					UNION ALL
					
					SELECT t2.custid,
					t2.finreference,
					t2.fintype,
					t2.finisactive
					FROM financemain_temp t2
					WHERE NOT (EXISTS ( SELECT 1
					FROM financemain_temp t3
					WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
					JOIN customers cu ON cu.custid = fm.custid
					JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
					JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
					LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
					LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
					LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
					LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
					LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
					LEFT JOIN customers bc ON bc.custid = br.custid
					LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
					LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
					LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
					WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests))
					
					UNION ALL
					
					SELECT pi.id AS paymentid,
					'' AS finreference,
					'I' AS channel,
					pi.providerid,
					CASE
					WHEN pi.paymenttype = 'NEFT' THEN 'N'
					WHEN pi.paymenttype = 'RTGS' THEN 'R'
					WHEN pi.paymenttype = 'DD' THEN 'D'
					WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
					ELSE pi.paymenttype
					END AS disbursement_type,
					pi.paymentamount AS amttobereleased,
					pi.paymentdate AS disbdate,
					pi.paymentdate AS lldate,
					'' AS payableloc,
					'' AS printingloc,
					'' as CHEQUE_NUMBER,
					'' AS custcif,
					'' AS custshrtname,
					'' AS customer_mobile,
					'' AS customer_email,
					'' AS customer_state,
					'' AS customer_city,
					'' AS customer_address1,
					'' AS customer_address2,
					'' AS customer_address3,
					'' AS customer_address4,
					'' AS customer_address5,
					bd.bankname,
					bb.branchcode,
					bb.branchdesc,
					bbrs.cpprovincename AS benficiary_branch_state,
					bbrc.pccityname AS benficiary_branch_city,
					bb.micr AS micr_code,
					bb.ifsc AS ifsc_code,
					vpa.accountnumber AS beneficiaryaccno,
					avd.dealername AS beneficiaryname,
					avd.dealertelephone AS beneficiary_mobile,
					avd.email AS benficiry_email,
					brs.cpprovincename AS benficiary_state,
					brc.pccityname AS benficiary_city,
					avd.dealeraddress1 AS benficiary_address1,
					avd.dealeraddress2 AS benficiary_address2,
					avd.dealeraddress3 AS benficiary_address3,
					'' AS benficiary_address4,
					'' AS benficiary_address5,
					'' AS payment_detail1,
					'' AS payment_detail2,
					'' AS payment_detail3,
					'' AS payment_detail4,
					'' AS payment_detail5,
					'' AS payment_detail6,
					'' AS payment_detail7,
					pi.status,
					pi.remarks,
					pi.paymenttype,
					'' AS fintype,
					pb.partnerbankid AS partnerbank_id,
					pb.partnerbankcode AS partnerbank_code,
					pi.paymentdate AS inputdate,
					pb.alwfiledownload,
					pb.filename,
					1 AS finisactive,
					pi.entitycode,
					pb.accountno AS partnerbank_account
					FROM insurancepaymentinstructions pi
					JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
					JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
					JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
					JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
					LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
					LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
					LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
					LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
					LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
					LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
					WHERE pi.status = 'APPROVED' AND pi.paymentamount > 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
					FROM disbursement_requests))
					]]>
		</createView>
	</changeSet>

</databaseChangeLog>
