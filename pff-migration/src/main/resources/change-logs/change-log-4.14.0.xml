<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />


	<changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1" author="Vinay">
		<createView viewName="rmtfinancetypes_aview" replaceIfExists="true">
 	 		SELECT t1.fintype,
			    t1.fincategory,
			    t1.fintypedesc,
			    t1.finccy,
			    t1.findayscaltype,
			    t1.finactype,
			    t1.fincontingentactype,
			    t1.finisgenref,
			    t1.finmaxamount,
			    t1.finminamount,
			    t1.finisopennewfinac,
			    t1.findftstmtfrq,
			    t1.finisalwmd,
			    t1.finschdmthd,
			    t1.finisalwgrace,
			    t1.finhistretension,
			    t1.equalrepayment,
			    t1.finratetype,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finintrate,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.findftintfrq,
			    t1.finisintcpz,
			    t1.fincpzfrq,
			    t1.finisrvwalw,
			    t1.finrvwfrq,
			    t1.fingrcratetype,
			    t1.fingrcbaserate,
			    t1.fingrcsplrate,
			    t1.fingrcintrate,
			    t1.fingrcminrate,
			    t1.fingrcmaxrate,
			    t1.fingrcdftintfrq,
			    t1.fingrcisintcpz,
			    t1.fingrccpzfrq,
			    t1.fingrcisrvwalw,
			    t1.fingrcrvwfrq,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.findftterms,
			    t1.finrpyfrq,
			    t1.finrepaymethod,
			    t1.finisalwpartialrpy,
			    t1.finisalwdifferment,
			    t1.finmaxdifferment,
			    t1.finisalwearlyrpy,
			    t1.finisalwearlysettle,
			    t1.finodrpytries,
			    t1.finearlypayrule,
			    t1.finearlysettlerule,
			    t1.findepositrestrictedto,
			    t1.finaebuyorinception,
			    t1.finaesellormaturity,
			    t1.finisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.stepfinance,
			    t1.steppingmandatory,
			    t1.alwmanualsteps,
			    t1.alwdsteppolicies,
			    t1.dftsteppolicy,
			    t4.actypedesc AS lovdescfincontingentactypename,
			    t5.actypedesc AS lovdescfinactypename,
			    t1.finisdwpayrequired,
			    t1.finrvwrateapplfor,
			    t1.finalwratechangeanydate,
			    t1.finisintcpzatgrcend,
			    t1.finelgrulecode,
			    t1.limitelgrulecode,
			    t1.finschcalcodeonrvw,
			    t1.alwplandeferment,
			    t1.plandefercount,
			    t1.finassettype,
			    t1.pftpayactype,
			    t1.finisopenpftpayacc,
			    t31.actypedesc AS lovdescpftpayactypename,
			    t1.finisalwgrcrepay,
			    t1.fingrcschdmthd,
			    t1.fingrcmargin,
			    t1.finmargin,
			    t1.finscheduleon,
			    t1.fingrcscheduleon,
			    t1.fincommitmentreq,
			    t1.fincollateralreq,
			    t1.findepreciationreq,
			    t1.findepreciationfrq,
			    t1.finbankcontingentactype,
			    t1.finprovisionactype,
			    t38.actypedesc AS lovdescfinbankcontactypename,
			    t39.actypedesc AS lovdescfinprovisionactypename,
			    t1.allowriainvestment,
			    t1.overridelimit,
			    t1.limitrequired,
			    t1.fincommitmentovrride,
			    t1.fincollateralovrride,
			    t1.finpftunchanged,
			    t1.applyodpenalty,
			    t1.odincgrcdays,
			    t1.odchargetype,
			    t1.odgracedays,
			    t1.odchargecalon,
			    t1.odchargeamtorperc,
			    t1.odallowwaiver,
			    t1.odmaxwaiverperc,
			    t1.findivision,
			    t48.divisioncodedesc AS lovdescfindivisionname,
			    t48.entitycode AS lovdescentitycode,
			    t1.finsuspactype,
			    t49.actypedesc AS lovdescfinsuspactypename,
			    t1.product,
			    t1.startdate,
			    t1.enddate,
			    t1.allowdownpaypgm,
			    t1.remarks,
			    t1.alwearlypaymethods,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.alwadvancerent,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.rolloverfinance,
			    t1.rolloverfrq,
			    t1.downpayrule,
			    t59.rulecode AS downpayrulecode,
			    t59.rulecodedesc AS downpayruledesc,
			    t1.finsusptrigger,
			    t1.finsuspremarks,
			    t1.alwmultipartydisb,
			    t1.collateraltype,
			    t1.tdsapplicable,
			    t1.manualschedule,
			    t1.applygrcpricing,
			    t1.grcpricingmethod,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.rpyhierarchy,
			    t67.rulecode AS grcpricingmethoddesc,
			    t68.rulecode AS rpypricingmethoddesc,
			    t1.droplineod,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.finrepaypftonfrq,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.pftdueschon,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.fddlockperiod,
			    t1.alwdrpymethods,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.roundingmode,
			    t1.roundingtarget,
			    t1.frequencydays,
			    t1.quickdisb,
			    t1.alwreage,
			    t1.alwunplanemiholiday,
			    t1.alwmaxdisbcheckreq,
			    t1.fintypedesc AS lovdescpromofintypedesc,
			    t1.profitcenterid,
			    t69.profitcentercode,
			    t69.profitcenterdesc,
			    t1.productcategory,
			    t2.productdesc AS fincategorydesc,
			    t1.developerfinance,
			    t1.costoffunds,
			    t1.chequecapturereq,
			    t1.finltvcheck,
			    t1.partiallysecured,
			    t1.alwadvemi,
			    t1.advemiminterms,
			    t1.advemimaxterms,
			    t1.advemidftterms,
			    t1.advemischdmthd,
			    t1.bpipftdaysbasis,
			    t1.eligibilitymethods,
			    t1.alwhybridrate,
			    t1.fixedratetenor,
			    t1.odmincapamount,
			    t1.odrulecode,
			    t1.alwzerointacc,
			    t1.autorejectiondays,
			    t1.taxnomand,
			    t1.putcallrequired,
			    t1.grcadvintersetreq,
			    t1.grcadvtype,
			    t1.grcadvminterms,
			    t1.grcadvmaxterms,
			    t1.grcadvdefaultterms,
			    t1.advintersetreq,
			    t1.advtype,
			    t1.advminterms,
			    t1.advmaxterms,
			    t1.advdefaultterms,
			    t1.advstage,
			    t1.dsfreq,
			    t1.cashcollateralreq
			   FROM rmtfinancetypes t1
			     LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			     LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			     LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			     LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			     LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			     LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			     LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			     LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			     LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			     LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			     LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			     LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
 	 	</createView>
	</changeSet>

	<changeSet id="2" author="Vinay">
		<createView viewName="rmtfinancetypes_view" replaceIfExists="true">
 	 		SELECT t1.fintype,
			    t1.fincategory,
			    t1.fintypedesc,
			    t1.finccy,
			    t1.findayscaltype,
			    t1.finactype,
			    t1.fincontingentactype,
			    t1.finisgenref,
			    t1.finmaxamount,
			    t1.finminamount,
			    t1.finisopennewfinac,
			    t1.findftstmtfrq,
			    t1.finisalwmd,
			    t1.finschdmthd,
			    t1.finisalwgrace,
			    t1.finhistretension,
			    t1.equalrepayment,
			    t1.finratetype,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finintrate,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.findftintfrq,
			    t1.finisintcpz,
			    t1.fincpzfrq,
			    t1.finisrvwalw,
			    t1.finrvwfrq,
			    t1.fingrcratetype,
			    t1.fingrcbaserate,
			    t1.fingrcsplrate,
			    t1.fingrcintrate,
			    t1.fingrcminrate,
			    t1.fingrcmaxrate,
			    t1.fingrcdftintfrq,
			    t1.fingrcisintcpz,
			    t1.fingrccpzfrq,
			    t1.fingrcisrvwalw,
			    t1.fingrcrvwfrq,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.findftterms,
			    t1.finrpyfrq,
			    t1.finrepaymethod,
			    t1.finisalwpartialrpy,
			    t1.finisalwdifferment,
			    t1.finmaxdifferment,
			    t1.finisalwearlyrpy,
			    t1.finisalwearlysettle,
			    t1.finodrpytries,
			    t1.finearlypayrule,
			    t1.finearlysettlerule,
			    t1.findepositrestrictedto,
			    t1.finaebuyorinception,
			    t1.finaesellormaturity,
			    t1.finisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.stepfinance,
			    t1.steppingmandatory,
			    t1.alwmanualsteps,
			    t1.alwdsteppolicies,
			    t1.dftsteppolicy,
			    t4.actypedesc AS lovdescfincontingentactypename,
			    t5.actypedesc AS lovdescfinactypename,
			    t1.finisdwpayrequired,
			    t1.finrvwrateapplfor,
			    t1.finalwratechangeanydate,
			    t1.finisintcpzatgrcend,
			    t1.finelgrulecode,
			    t1.limitelgrulecode,
			    t1.finschcalcodeonrvw,
			    t1.alwplandeferment,
			    t1.plandefercount,
			    t1.finassettype,
			    t1.pftpayactype,
			    t1.finisopenpftpayacc,
			    t31.actypedesc AS lovdescpftpayactypename,
			    t1.finisalwgrcrepay,
			    t1.fingrcschdmthd,
			    t1.fingrcmargin,
			    t1.finmargin,
			    t1.finscheduleon,
			    t1.fingrcscheduleon,
			    t1.fincommitmentreq,
			    t1.fincollateralreq,
			    t1.findepreciationreq,
			    t1.findepreciationfrq,
			    t1.finbankcontingentactype,
			    t1.finprovisionactype,
			    t38.actypedesc AS lovdescfinbankcontactypename,
			    t39.actypedesc AS lovdescfinprovisionactypename,
			    t1.allowriainvestment,
			    t1.overridelimit,
			    t1.limitrequired,
			    t1.fincommitmentovrride,
			    t1.fincollateralovrride,
			    t1.finpftunchanged,
			    t1.applyodpenalty,
			    t1.odincgrcdays,
			    t1.odchargetype,
			    t1.odgracedays,
			    t1.odchargecalon,
			    t1.odchargeamtorperc,
			    t1.odallowwaiver,
			    t1.odmaxwaiverperc,
			    t1.findivision,
			    t48.divisioncodedesc AS lovdescfindivisionname,
			    t48.entitycode AS lovdescentitycode,
			    t1.finsuspactype,
			    t49.actypedesc AS lovdescfinsuspactypename,
			    t1.product,
			    t1.startdate,
			    t1.enddate,
			    t1.allowdownpaypgm,
			    t1.fintypedesc AS lovdescpromofintypedesc,
			    t1.remarks,
			    t1.alwearlypaymethods,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.alwadvancerent,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.rolloverfinance,
			    t1.rolloverfrq,
			    t1.downpayrule,
			    t59.rulecode AS downpayrulecode,
    			t59.rulecodedesc AS downpayruledesc,
			    t1.finsusptrigger,
			    t1.finsuspremarks,
			    t1.alwmultipartydisb,
			    t1.collateraltype,
			    t1.tdsapplicable,
			    t1.manualschedule,
			    t1.applygrcpricing,
			    t1.grcpricingmethod,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.rpyhierarchy,
			    t67.rulecode AS grcpricingmethoddesc,
			    t68.rulecode AS rpypricingmethoddesc,
			    t1.droplineod,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.finrepaypftonfrq,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.pftdueschon,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.fddlockperiod,
			    t1.alwdrpymethods,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.roundingmode,
			    t1.roundingtarget,
			    t1.frequencydays,
			    t1.quickdisb,
			    t1.alwmaxdisbcheckreq,
			    t1.alwreage,
			    t1.alwunplanemiholiday,
			    t1.profitcenterid,
			    t69.profitcentercode,
			    t69.profitcenterdesc,
			    t1.productcategory,
			    t2.productdesc AS fincategorydesc,
			    t1.developerfinance,
			    t1.costoffunds,
			    t1.chequecapturereq,
			    t1.finltvcheck,
			    t1.partiallysecured,
			    t1.alwadvemi,
			    t1.advemiminterms,
			    t1.advemimaxterms,
			    t1.advemidftterms,
			    t1.advemischdmthd,
			    t1.bpipftdaysbasis,
			    t1.eligibilitymethods,
			    t1.alwhybridrate,
			    t1.fixedratetenor,
			    t1.odmincapamount,
			    t1.odrulecode,
			    t1.alwzerointacc,
			    t1.autorejectiondays,
			    t1.taxnomand,
			    t1.putcallrequired,
			    t1.grcadvintersetreq,
			    t1.grcadvtype,
			    t1.grcadvminterms,
			    t1.grcadvmaxterms,
			    t1.grcadvdefaultterms,
			    t1.advintersetreq,
			    t1.advtype,
			    t1.advminterms,
			    t1.advmaxterms,
			    t1.advdefaultterms,
			    t1.advstage,
			    t1.dsfreq,
			    t1.cashcollateralreq
			   FROM rmtfinancetypes_temp t1
			     LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			     LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			     LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			     LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			     LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			     LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			     LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			     LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			     LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			     LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			     LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			     LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			UNION ALL
			 SELECT t1.fintype,
			    t1.fincategory,
			    t1.fintypedesc,
			    t1.finccy,
			    t1.findayscaltype,
			    t1.finactype,
			    t1.fincontingentactype,
			    t1.finisgenref,
			    t1.finmaxamount,
			    t1.finminamount,
			    t1.finisopennewfinac,
			    t1.findftstmtfrq,
			    t1.finisalwmd,
			    t1.finschdmthd,
			    t1.finisalwgrace,
			    t1.finhistretension,
			    t1.equalrepayment,
			    t1.finratetype,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finintrate,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.findftintfrq,
			    t1.finisintcpz,
			    t1.fincpzfrq,
			    t1.finisrvwalw,
			    t1.finrvwfrq,
			    t1.fingrcratetype,
			    t1.fingrcbaserate,
			    t1.fingrcsplrate,
			    t1.fingrcintrate,
			    t1.fingrcminrate,
			    t1.fingrcmaxrate,
			    t1.fingrcdftintfrq,
			    t1.fingrcisintcpz,
			    t1.fingrccpzfrq,
			    t1.fingrcisrvwalw,
			    t1.fingrcrvwfrq,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.findftterms,
			    t1.finrpyfrq,
			    t1.finrepaymethod,
			    t1.finisalwpartialrpy,
			    t1.finisalwdifferment,
			    t1.finmaxdifferment,
			    t1.finisalwearlyrpy,
			    t1.finisalwearlysettle,
			    t1.finodrpytries,
			    t1.finearlypayrule,
			    t1.finearlysettlerule,
			    t1.findepositrestrictedto,
			    t1.finaebuyorinception,
			    t1.finaesellormaturity,
			    t1.finisactive,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.stepfinance,
			    t1.steppingmandatory,
			    t1.alwmanualsteps,
			    t1.alwdsteppolicies,
			    t1.dftsteppolicy,
			    t4.actypedesc AS lovdescfincontingentactypename,
			    t5.actypedesc AS lovdescfinactypename,
			    t1.finisdwpayrequired,
			    t1.finrvwrateapplfor,
			    t1.finalwratechangeanydate,
			    t1.finisintcpzatgrcend,
			    t1.finelgrulecode,
			    t1.limitelgrulecode,
			    t1.finschcalcodeonrvw,
			    t1.alwplandeferment,
			    t1.plandefercount,
			    t1.finassettype,
			    t1.pftpayactype,
			    t1.finisopenpftpayacc,
			    t31.actypedesc AS lovdescpftpayactypename,
			    t1.finisalwgrcrepay,
			    t1.fingrcschdmthd,
			    t1.fingrcmargin,
			    t1.finmargin,
			    t1.finscheduleon,
			    t1.fingrcscheduleon,
			    t1.fincommitmentreq,
			    t1.fincollateralreq,
			    t1.findepreciationreq,
			    t1.findepreciationfrq,
			    t1.finbankcontingentactype,
			    t1.finprovisionactype,
			    t38.actypedesc AS lovdescfinbankcontactypename,
			    t39.actypedesc AS lovdescfinprovisionactypename,
			    t1.allowriainvestment,
			    t1.overridelimit,
			    t1.limitrequired,
			    t1.fincommitmentovrride,
			    t1.fincollateralovrride,
			    t1.finpftunchanged,
			    t1.applyodpenalty,
			    t1.odincgrcdays,
			    t1.odchargetype,
			    t1.odgracedays,
			    t1.odchargecalon,
			    t1.odchargeamtorperc,
			    t1.odallowwaiver,
			    t1.odmaxwaiverperc,
			    t1.findivision,
			    t48.divisioncodedesc AS lovdescfindivisionname,
			    t48.entitycode AS lovdescentitycode,
			    t1.finsuspactype,
			    t49.actypedesc AS lovdescfinsuspactypename,
			    t1.product,
			    t1.startdate,
			    t1.enddate,
			    t1.allowdownpaypgm,
			    t1.fintypedesc AS lovdescpromofintypedesc,
			    t1.remarks,
			    t1.alwearlypaymethods,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.alwadvancerent,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.rolloverfinance,
			    t1.rolloverfrq,
			    t1.downpayrule,
			    t59.rulecode AS downpayrulecode,
    			t59.rulecodedesc AS downpayruledesc,
			    t1.finsusptrigger,
			    t1.finsuspremarks,
			    t1.alwmultipartydisb,
			    t1.collateraltype,
			    t1.tdsapplicable,
			    t1.manualschedule,
			    t1.applygrcpricing,
			    t1.grcpricingmethod,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.rpyhierarchy,
			    t67.rulecode AS grcpricingmethoddesc,
			    t68.rulecode AS rpypricingmethoddesc,
			    t1.droplineod,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.finrepaypftonfrq,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.pftdueschon,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.fddlockperiod,
			    t1.alwdrpymethods,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.roundingmode,
			    t1.roundingtarget,
			    t1.frequencydays,
			    t1.quickdisb,
			    t1.alwmaxdisbcheckreq,
			    t1.alwreage,
			    t1.alwunplanemiholiday,
			    t1.profitcenterid,
			    t69.profitcentercode,
			    t69.profitcenterdesc,
			    t1.productcategory,
			    t2.productdesc AS fincategorydesc,
			    t1.developerfinance,
			    t1.costoffunds,
			    t1.chequecapturereq,
			    t1.finltvcheck,
			    t1.partiallysecured,
			    t1.alwadvemi,
			    t1.advemiminterms,
			    t1.advemimaxterms,
			    t1.advemidftterms,
			    t1.advemischdmthd,
			    t1.bpipftdaysbasis,
			    t1.eligibilitymethods,
			    t1.alwhybridrate,
			    t1.fixedratetenor,
			    t1.odmincapamount,
			    t1.odrulecode,
			    t1.alwzerointacc,
			    t1.autorejectiondays,
			    t1.taxnomand,
			    t1.putcallrequired,
			    t1.grcadvintersetreq,
			    t1.grcadvtype,
			    t1.grcadvminterms,
			    t1.grcadvmaxterms,
			    t1.grcadvdefaultterms,
			    t1.advintersetreq,
			    t1.advtype,
			    t1.advminterms,
			    t1.advmaxterms,
			    t1.advdefaultterms,
			    t1.advstage,
			    t1.dsfreq,
			    t1.cashcollateralreq
			   FROM rmtfinancetypes t1
			     LEFT JOIN bmtproduct t2 ON t1.fincategory = t2.productcode
			     LEFT JOIN rmtaccounttypes t4 ON t1.fincontingentactype = t4.actype
			     LEFT JOIN rmtaccounttypes t38 ON t1.finbankcontingentactype = t38.actype
			     LEFT JOIN rmtaccounttypes t39 ON t1.finprovisionactype = t39.actype
			     LEFT JOIN rmtaccounttypes t5 ON t1.finactype = t5.actype
			     LEFT JOIN rmtaccounttypes t31 ON t1.pftpayactype = t31.actype
			     LEFT JOIN smtdivisiondetail t48 ON t1.findivision = t48.divisioncode
			     LEFT JOIN rmtaccounttypes t49 ON t1.finsuspactype = t49.actype
			     LEFT JOIN rules t59 ON t1.downpayrule = t59.ruleid
			     LEFT JOIN rules t67 ON t1.grcpricingmethod = t67.ruleid
			     LEFT JOIN rules t68 ON t1.rpypricingmethod = t68.ruleid
			     LEFT JOIN profitcenters t69 ON t69.profitcenterid = t1.profitcenterid
			  WHERE NOT (EXISTS ( SELECT 1 AS expr1
			           FROM rmtfinancetypes_temp
			          WHERE rmtfinancetypes_temp.fintype = t1.fintype))
 	 	</createView>
	</changeSet>

	<changeSet id="3" author="Vinay">
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
 	 		SELECT t1.fintype,
			    t1.fincategory,
			    t1.fintypedesc,
			    t1.finccy,
			    t1.findayscaltype,
			    t1.finactype,
			    t1.fincontingentactype,
			    t1.finisgenref,
			    t1.finmaxamount,
			    t1.finminamount,
			    t1.finisopennewfinac,
			    t1.finisalwmd,
			    t1.finschdmthd,
			    t1.finisalwgrace,
			    t1.equalrepayment,
			    t1.finratetype,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finintrate,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.findftintfrq,
			    t1.finisintcpz,
			    t1.fincpzfrq,
			    t1.finisrvwalw,
			    t1.finrvwfrq,
			    t1.fingrcratetype,
			    t1.fingrcbaserate,
			    t1.fingrcsplrate,
			    t1.fingrcintrate,
			    t1.fingrcminrate,
			    t1.fingrcmaxrate,
			    t1.fingrcdftintfrq,
			    t1.fingrcisintcpz,
			    t1.fingrccpzfrq,
			    t1.fingrcisrvwalw,
			    t1.fingrcrvwfrq,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.findftterms,
			    t1.finrpyfrq,
			    t1.finrepaymethod,
			    t1.finisalwdifferment,
			    t1.finmaxdifferment,
			    t1.finisactive,
			    t1.stepfinance,
			    t1.steppingmandatory,
			    t1.alwmanualsteps,
			    t1.alwdsteppolicies,
			    t1.dftsteppolicy,
			    t1.finisdwpayrequired,
			    t1.finrvwrateapplfor,
			    t1.finalwratechangeanydate,
			    t1.finisintcpzatgrcend,
			    t1.finschcalcodeonrvw,
			    t1.alwplandeferment,
			    t1.plandefercount,
			    t1.pftpayactype,
			    t1.finisopenpftpayacc,
			    t1.finisalwgrcrepay,
			    t1.fingrcschdmthd,
			    t1.fingrcmargin,
			    t1.finmargin,
			    t1.fincommitmentreq,
			    t1.fincollateralreq,
			    t1.findepreciationreq,
			    t1.findepreciationfrq,
			    t1.finbankcontingentactype,
			    t1.finprovisionactype,
			    t1.allowriainvestment,
			    t1.overridelimit,
			    t1.limitrequired,
			    t1.fincommitmentovrride,
			    t1.fincollateralovrride,
			    t1.finrepaypftonfrq,
			    t1.finpftunchanged,
			    t1.applyodpenalty,
			    t1.odincgrcdays,
			    t1.odchargetype,
			    t1.odgracedays,
			    t1.odchargecalon,
			    t1.odchargeamtorperc,
			    t1.odallowwaiver,
			    t1.odmaxwaiverperc,
			    t1.findivision,
			    t3.divisioncodedesc AS lovdescfindivisionname,
			    t1.finsuspactype,
			    t1.product,
			    t1.startdate,
			    t1.enddate,
			    t1.allowdownpaypgm,
			    t1.fintypedesc AS lovdescpromofintypedesc,
			    t1.remarks,
			    t4.policydesc AS lovdescdftsteppolicyname,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.alwadvancerent,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.rolloverfinance,
			    t1.rolloverfrq,
			    t1.downpayrule,
			    t1.alwmultipartydisb,
			    t1.collateraltype,
			    t1.tdsapplicable,
			    t5.rulecode AS downpayrulecode,
    			t5.rulecodedesc AS downpayruledesc,
			    t1.applygrcpricing,
			    t1.applyrpypricing,
			    t6.rulecode AS grcpricingmethoddesc,
			    t7.rulecode AS rpypricingmethoddesc,
			    t1.droplineod,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t4.steptype AS dftsteppolicytype,
			    t1.manualschedule,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.pftdueschon,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.fddlockperiod,
			    t1.alwdrpymethods,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.roundingmode,
			    t1.roundingtarget,
			    t1.frequencydays,
			    t1.quickdisb,
			    t1.alwreage,
			    t1.alwunplanemiholiday,
			    t1.alwmaxdisbcheckreq,
			    t1.productcategory,
			    t1.rpyhierarchy,
			    t1.developerfinance,
			    t3.entitycode AS lovdescentitycode,
			    t8.entitydesc AS lovdescentitydesc,
			    t1.costoffunds,
			    t1.chequecapturereq,
			    t1.finltvcheck,
			    t1.partiallysecured,
			    t1.alwadvemi,
			    t1.advemiminterms,
			    t1.advemimaxterms,
			    t1.advemidftterms,
			    t1.advemischdmthd,
			    t1.bpipftdaysbasis,
			    t1.eligibilitymethods,
			    t1.alwhybridrate,
			    t1.fixedratetenor,
			    t1.odmincapamount,
			    t1.odrulecode,
			    t1.alwzerointacc,
			    t1.finisalwpartialrpy,
			    t1.autorejectiondays,
			    t1.taxnomand,
			    t1.putcallrequired,
			    t1.grcadvintersetreq,
			    t1.grcadvtype,
			    t1.grcadvminterms,
			    t1.grcadvmaxterms,
			    t1.grcadvdefaultterms,
			    t1.advintersetreq,
			    t1.advtype,
			    t1.advminterms,
			    t1.advmaxterms,
			    t1.advdefaultterms,
			    t1.advstage,
			    t1.dsfreq,
			    t1.cashcollateralreq
			   FROM rmtfinancetypes t1
			     JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
			     LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
			     LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
			     LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
			     LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
			     LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
 	 	</createView>
	</changeSet>
	<changeSet author="Varaprasad.k" id="04" dbms="postgresql">
		<createSequence sequenceName="SeqFinExpenseDetails" startValue="1" incrementBy="1" />
	</changeSet>

	<changeSet id="3" author="Vinay">
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
 	 		SELECT t1.fintype,
			    t1.fincategory,
			    t1.fintypedesc,
			    t1.finccy,
			    t1.findayscaltype,
			    t1.finactype,
			    t1.fincontingentactype,
			    t1.finisgenref,
			    t1.finmaxamount,
			    t1.finminamount,
			    t1.finisopennewfinac,
			    t1.finisalwmd,
			    t1.finschdmthd,
			    t1.finisalwgrace,
			    t1.equalrepayment,
			    t1.finratetype,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finintrate,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.findftintfrq,
			    t1.finisintcpz,
			    t1.fincpzfrq,
			    t1.finisrvwalw,
			    t1.finrvwfrq,
			    t1.fingrcratetype,
			    t1.fingrcbaserate,
			    t1.fingrcsplrate,
			    t1.fingrcintrate,
			    t1.fingrcminrate,
			    t1.fingrcmaxrate,
			    t1.fingrcdftintfrq,
			    t1.fingrcisintcpz,
			    t1.fingrccpzfrq,
			    t1.fingrcisrvwalw,
			    t1.fingrcrvwfrq,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.findftterms,
			    t1.finrpyfrq,
			    t1.finrepaymethod,
			    t1.finisalwdifferment,
			    t1.finmaxdifferment,
			    t1.finisactive,
			    t1.stepfinance,
			    t1.steppingmandatory,
			    t1.alwmanualsteps,
			    t1.alwdsteppolicies,
			    t1.dftsteppolicy,
			    t1.finisdwpayrequired,
			    t1.finrvwrateapplfor,
			    t1.finalwratechangeanydate,
			    t1.finisintcpzatgrcend,
			    t1.finschcalcodeonrvw,
			    t1.alwplandeferment,
			    t1.plandefercount,
			    t1.pftpayactype,
			    t1.finisopenpftpayacc,
			    t1.finisalwgrcrepay,
			    t1.fingrcschdmthd,
			    t1.fingrcmargin,
			    t1.finmargin,
			    t1.fincommitmentreq,
			    t1.fincollateralreq,
			    t1.findepreciationreq,
			    t1.findepreciationfrq,
			    t1.finbankcontingentactype,
			    t1.finprovisionactype,
			    t1.allowriainvestment,
			    t1.overridelimit,
			    t1.limitrequired,
			    t1.fincommitmentovrride,
			    t1.fincollateralovrride,
			    t1.finrepaypftonfrq,
			    t1.finpftunchanged,
			    t1.applyodpenalty,
			    t1.odincgrcdays,
			    t1.odchargetype,
			    t1.odgracedays,
			    t1.odchargecalon,
			    t1.odchargeamtorperc,
			    t1.odallowwaiver,
			    t1.odmaxwaiverperc,
			    t1.findivision,
			    t3.divisioncodedesc AS lovdescfindivisionname,
			    t1.finsuspactype,
			    t1.product,
			    t1.startdate,
			    t1.enddate,
			    t1.allowdownpaypgm,
			    t1.fintypedesc AS lovdescpromofintypedesc,
			    t1.remarks,
			    t4.policydesc AS lovdescdftsteppolicyname,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.alwadvancerent,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.rolloverfinance,
			    t1.rolloverfrq,
			    t1.downpayrule,
			    t1.alwmultipartydisb,
			    t1.collateraltype,
			    t1.tdsapplicable,
			    t5.rulecode AS downpayrulecode,
    			t5.rulecodedesc AS downpayruledesc,
			    t1.applygrcpricing,
			    t1.applyrpypricing,
			    t6.rulecode AS grcpricingmethoddesc,
			    t7.rulecode AS rpypricingmethoddesc,
			    t1.droplineod,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t4.steptype AS dftsteppolicytype,
			    t1.manualschedule,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.pftdueschon,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.fddlockperiod,
			    t1.alwdrpymethods,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.roundingmode,
			    t1.roundingtarget,
			    t1.frequencydays,
			    t1.quickdisb,
			    t1.alwreage,
			    t1.alwunplanemiholiday,
			    t1.alwmaxdisbcheckreq,
			    t1.productcategory,
			    t1.rpyhierarchy,
			    t1.developerfinance,
			    t3.entitycode AS lovdescentitycode,
			    t8.entitydesc AS lovdescentitydesc,
			    t1.costoffunds,
			    t1.chequecapturereq,
			    t1.finltvcheck,
			    t1.partiallysecured,
			    t1.alwadvemi,
			    t1.advemiminterms,
			    t1.advemimaxterms,
			    t1.advemidftterms,
			    t1.advemischdmthd,
			    t1.bpipftdaysbasis,
			    t1.eligibilitymethods,
			    t1.alwhybridrate,
			    t1.fixedratetenor,
			    t1.odmincapamount,
			    t1.odrulecode,
			    t1.alwzerointacc,
			    t1.finisalwpartialrpy,
			    t1.autorejectiondays,
			    t1.taxnomand,
			    t1.putcallrequired,
			    t1.grcadvintersetreq,
			    t1.grcadvtype,
			    t1.grcadvminterms,
			    t1.grcadvmaxterms,
			    t1.grcadvdefaultterms,
			    t1.advintersetreq,
			    t1.advtype,
			    t1.advminterms,
			    t1.advmaxterms,
			    t1.advdefaultterms,
			    t1.advstage,
			    t1.dsfreq,
			    t1.cashcollateralreq
			   FROM rmtfinancetypes t1
			     JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
			     LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
			     LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
			     LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
			     LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
			     LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
 	 	</createView>
	</changeSet>

	<changeSet id="4" author="Vinay">
		<createView viewName="rmtfinancetypes_orgview" replaceIfExists="true">
 	 		SELECT t1.fintype,
			    t1.fincategory,
			    t1.fintypedesc,
			    t1.finccy,
			    t1.findayscaltype,
			    t1.finactype,
			    t1.fincontingentactype,
			    t1.finisgenref,
			    t1.finmaxamount,
			    t1.finminamount,
			    t1.finisopennewfinac,
			    t1.finisalwmd,
			    t1.finschdmthd,
			    t1.finisalwgrace,
			    t1.equalrepayment,
			    t1.finratetype,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finintrate,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.findftintfrq,
			    t1.finisintcpz,
			    t1.fincpzfrq,
			    t1.finisrvwalw,
			    t1.finrvwfrq,
			    t1.fingrcratetype,
			    t1.fingrcbaserate,
			    t1.fingrcsplrate,
			    t1.fingrcintrate,
			    t1.fingrcminrate,
			    t1.fingrcmaxrate,
			    t1.fingrcdftintfrq,
			    t1.fingrcisintcpz,
			    t1.fingrccpzfrq,
			    t1.fingrcisrvwalw,
			    t1.fingrcrvwfrq,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.findftterms,
			    t1.finrpyfrq,
			    t1.finrepaymethod,
			    t1.finisalwdifferment,
			    t1.finmaxdifferment,
			    t1.finisactive,
			    t1.stepfinance,
			    t1.steppingmandatory,
			    t1.alwmanualsteps,
			    t1.alwdsteppolicies,
			    t1.dftsteppolicy,
			    t1.finisdwpayrequired,
			    t1.finrvwrateapplfor,
			    t1.finalwratechangeanydate,
			    t1.finisintcpzatgrcend,
			    t1.finschcalcodeonrvw,
			    t1.alwplandeferment,
			    t1.plandefercount,
			    t1.pftpayactype,
			    t1.finisopenpftpayacc,
			    t1.finisalwgrcrepay,
			    t1.fingrcschdmthd,
			    t1.fingrcmargin,
			    t1.finmargin,
			    t1.fincommitmentreq,
			    t1.fincollateralreq,
			    t1.findepreciationreq,
			    t1.findepreciationfrq,
			    t1.finbankcontingentactype,
			    t1.finprovisionactype,
			    t1.allowriainvestment,
			    t1.overridelimit,
			    t1.limitrequired,
			    t1.fincommitmentovrride,
			    t1.fincollateralovrride,
			    t1.finrepaypftonfrq,
			    t1.finpftunchanged,
			    t1.applyodpenalty,
			    t1.odincgrcdays,
			    t1.odchargetype,
			    t1.odgracedays,
			    t1.odchargecalon,
			    t1.odchargeamtorperc,
			    t1.odallowwaiver,
			    t1.odmaxwaiverperc,
			    t1.findivision,
			    t3.divisioncodedesc AS lovdescfindivisionname,
			    t1.finsuspactype,
			    t1.product,
			    t1.startdate,
			    t1.enddate,
			    t1.allowdownpaypgm,
			    t1.fintypedesc AS lovdescpromofintypedesc,
			    t1.remarks,
			    t4.policydesc AS lovdescdftsteppolicyname,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.alwadvancerent,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.rolloverfinance,
			    t1.rolloverfrq,
			    t1.downpayrule,
			    t1.alwmultipartydisb,
			    t1.collateraltype,
			    t1.tdsapplicable,
			    t5.rulecode AS downpayrulecode,
    			t5.rulecodedesc AS downpayruledesc,
			    t1.applygrcpricing,
			    t1.applyrpypricing,
			    t6.rulecode AS grcpricingmethoddesc,
			    t7.rulecode AS rpypricingmethoddesc,
			    t1.droplineod,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t4.steptype AS dftsteppolicytype,
			    t1.manualschedule,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.pftdueschon,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.fddlockperiod,
			    t1.alwdrpymethods,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.roundingmode,
			    t1.roundingtarget,
			    t1.frequencydays,
			    t1.quickdisb,
			    t1.alwreage,
			    t1.alwunplanemiholiday,
			    t1.alwmaxdisbcheckreq,
			    t1.productcategory,
			    t1.rpyhierarchy,
			    t1.developerfinance,
			    t3.entitycode AS lovdescentitycode,
			    t8.entitydesc AS lovdescentitydesc,
			    t1.costoffunds,
			    t1.chequecapturereq,
			    t1.finltvcheck,
			    t1.partiallysecured,
			    t1.alwadvemi,
			    t1.advemiminterms,
			    t1.advemimaxterms,
			    t1.advemidftterms,
			    t1.advemischdmthd,
			    t1.bpipftdaysbasis,
			    t1.eligibilitymethods,
			    t1.alwhybridrate,
			    t1.fixedratetenor,
			    t1.odmincapamount,
			    t1.odrulecode,
			    t1.alwzerointacc,
			    t1.finisalwpartialrpy,
			    t1.autorejectiondays,
			    t1.taxnomand,
			    t1.putcallrequired,
			    t1.grcadvintersetreq,
			    t1.grcadvtype,
			    t1.grcadvminterms,
			    t1.grcadvmaxterms,
			    t1.grcadvdefaultterms,
			    t1.advintersetreq,
			    t1.advtype,
			    t1.advminterms,
			    t1.advmaxterms,
			    t1.advdefaultterms,
			    t1.advstage,
			    t1.dsfreq,
			    t1.cashcollateralreq,
			    t1.alwearlypaymethods
			   FROM rmtfinancetypes t1
			     JOIN smtdivisiondetail t3 ON t1.findivision = t3.divisioncode
			     LEFT JOIN steppolicyheader t4 ON t1.dftsteppolicy = t4.policycode
			     LEFT JOIN rules t5 ON t1.downpayrule = t5.ruleid
			     LEFT JOIN rules t6 ON t1.grcpricingmethod = t6.ruleid
			     LEFT JOIN rules t7 ON t1.rpypricingmethod = t7.ruleid
			     LEFT JOIN entity t8 ON t3.entitycode = t8.entitycode
 	 	</createView>
	</changeSet>
	
	<changeSet id="1" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'COMMODITY_TYPES_VIEW', 		'Role for commodity types enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'COMMODITY_TYPES_MAKER', 	'Role for commodity types maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'COMMODITY_TYPES_APPROVER', 	'Role for commodity types approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
								
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COMMODITY_TYPES_VIEW',			'Group for commodity types enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COMMODITY_TYPES_MAKER',		'Group for commodity types maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COMMODITY_TYPES_APPROVER',		'Group for commodity types approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Commodity_Type','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommodityTypeList_PrintList','CommodityTypeList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommodityTypeList_NewCommodityDetails','CommodityTypeList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommodityTypeDialog_btnNew','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommodityTypeDialog_btnEdit','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommodityTypeDialog_btnDelete','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommodityTypeDialog_btnSave','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CommodityType_Type','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CommodityType_Description','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CommodityType_UnitType','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'CommodityType_Active','CommodityTypeDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_VIEW'), (Select RightID from SecRights where RightName = 'button_CommodityTypeList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_Commodity_Type'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeList_NewCommodityDetails'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeDialog_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeDialog_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeDialog_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'CommodityType_Type'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'CommodityType_Description'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'CommodityType_UnitType'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_MAKER'), (Select RightID from SecRights where RightName = 'CommodityType_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_Commodity_Type'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_APPROVER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITY_TYPES_APPROVER'), (Select RightID from SecRights where RightName = 'button_CommodityTypeDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='COMMODITY_TYPES_VIEW'),(select RoleID from secRoles where RoleCd='COMMODITY_TYPES_VIEW'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='COMMODITY_TYPES_MAKER'),(select RoleID from secRoles where RoleCd='COMMODITY_TYPES_MAKER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				Insert into secRoleGroups Values ((select MAX(RoleGrpID)+1 From secRoleGroups),(select GrpID from SecGroups where grpCode='COMMODITY_TYPES_APPROVER'),(select RoleID from secRoles where RoleCd='COMMODITY_TYPES_APPROVER'), 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="1.1" author="vijaya.a" dbms="postgresql, oracle">
		<comment>Commodity and LAS</comment>
		<createSequence sequenceName="SEQCOMMODITY_TYPES" />
	</changeSet>

	<changeSet id="1.2" author="vijaya.a" dbms="mssql">
		<comment>Commodity and LAS</comment>
		<createTable tableName="SEQCOMMODITY_TYPES">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="1.3" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createTable tableName="COMMODITY_TYPES">
			<column name="Id" type="bigint">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_COMMODITY_TYPES_ID" />
			</column>
			<column name="CommodityType" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="Description" type="varchar(500)">
				<constraints nullable="false" />
			</column>
			<column name="UnitType" type="int">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="1.4" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createTable tableName="COMMODITY_TYPES_TEMP">
			<column name="Id" type="bigint">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_COMMODITY_TYPES_TEMP_ID" />
			</column>
			<column name="CommodityType" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="Description" type="varchar(500)">
				<constraints nullable="false" />
			</column>
			<column name="UnitType" type="int">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="1.5" author="vijaya.a" dbms="mssql">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				ALTER TABLE COMMODITY_TYPES ADD CONSTRAINT DF_COMMODITY_TYPES_ACTIVE DEFAULT 1 FOR ACTIVE;
				ALTER TABLE COMMODITY_TYPES ADD CONSTRAINT DF_COMMODITY_TYPES_UNITTYPE DEFAULT 0 FOR UNITTYPE;
				
				ALTER TABLE COMMODITY_TYPES_TEMP ADD CONSTRAINT DF_COMMODITY_TYPES_TEMP_ACTIVE DEFAULT 1 FOR ACTIVE;
				ALTER TABLE COMMODITY_TYPES_TEMP ADD CONSTRAINT DF_COMMODITY_TYPES_TEMP_UNITTYPE DEFAULT 0 FOR UNITTYPE;
			]]>
		</sql>
	</changeSet>

	<changeSet id="1.6" author="vijaya.a" dbms="postgresql, oracle">
		<comment>Commodity and LAS</comment>
		<addDefaultValue columnName="Active" tableName="COMMODITY_TYPES" defaultValue="1" />
		<addDefaultValue columnName="UnitType" tableName="COMMODITY_TYPES" defaultValue="0" />

		<addDefaultValue columnName="Active" tableName="COMMODITY_TYPES_TEMP" defaultValue="1" />
		<addDefaultValue columnName="UnitType" tableName="COMMODITY_TYPES_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="2" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
				
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'COMMODITIES_VIEW', 		'Role for commodity details enquiry',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'COMMODITIES_MAKER', 	'Role for commodity details maker',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
				INSERT INTO SecRoles  VALUES ((select max(roleid)+1 from secroles), 1, 'COMMODITIES_APPROVER', 	'Role for commodity details approver',	NULL, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL,NULL,NULL,NULL,NULL,0) ;
								
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COMMODITIES_VIEW',			'Group for commodity details enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COMMODITIES_MAKER',		'Group for commodity details maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'COMMODITIES_APPROVER',		'Group for commodity details approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
							
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Commodity_Details','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommoditiesList_PrintList','CommoditiesList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommoditiesList_NewCommodities','CommoditiesList',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommoditiesDialog_btnNew','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommoditiesDialog_btnEdit','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommoditiesDialog_btnDelete','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_CommoditiesDialog_btnSave','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_Type','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_Code','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_Description','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_CurrentValue','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_HSNCode','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 'Commodities_Active','CommoditiesDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_VIEW'), (Select RightID from SecRights where RightName = 'button_CommoditiesList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_Commodity_Details'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommoditiesList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommoditiesList_NewCommodities'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommoditiesDialog_btnNew'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommoditiesDialog_btnEdit'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommoditiesDialog_btnDelete'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'button_CommoditiesDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_Type'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_Code'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_Description'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_CurrentValue'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_HSNCode'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_MAKER'), (Select RightID from SecRights where RightName = 'Commodities_Active'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_Commodity_Details'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_APPROVER'), (Select RightID from SecRights where RightName = 'button_CommoditiesList_PrintList'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COMMODITIES_APPROVER'), (Select RightID from SecRights where RightName = 'button_CommoditiesDialog_btnSave'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
							
				INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMODITIES_VIEW'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='COMMODITIES_VIEW'), 0, 1000, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMODITIES_MAKER'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='COMMODITIES_MAKER'), 0, 1000, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECROLEGROUPS VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMODITIES_APPROVER'),(SELECT ROLEID FROM SECROLES WHERE ROLECD='COMMODITIES_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, 'APPROVED', NULL, NULL, NULL, NULL, NULL, 0);
				
				
				UPDATE SEQSECRIGHTS SET SEQNO = (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
				UPDATE SEQSECROLES SET SEQNO = (SELECT MAX(ROLEID)  FROM SECROLES);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID)  FROM SECGROUPRIGHTS);
				UPDATE SEQSECROLEGROUPS SET SEQNO = (SELECT MAX(ROLEGRPID)  FROM SECROLEGROUPS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="2.1" author="vijaya.a" dbms="postgresql, oracle">
		<comment>Commodity and LAS</comment>
		<createSequence sequenceName="SEQCOMMODITIES" />
	</changeSet>

	<changeSet id="2.2" author="vijaya.a" dbms="mssql">
		<comment>Commodity and LAS</comment>
		<createTable tableName="SEQCOMMODITIES">
			<column name="SeqNo" type="bigint" autoIncrement="true" />
			<column name="Value" type="int"></column>
		</createTable>
	</changeSet>

	<changeSet id="2.3" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createTable tableName="COMMODITIES">
			<column name="Id" type="bigint">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_COMMODITIES_ID" />
			</column>
			<column name="CommodityType" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Code" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="Description" type="varchar(500)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="HSNCode" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean" defaultValue="1">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="2.4" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createTable tableName="COMMODITIES_TEMP">
			<column name="Id" type="bigint">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_COMMODITIES_TEMP_ID" />
			</column>
			<column name="CommodityType" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Code" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="Description" type="varchar(500)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="HSNCode" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean" defaultValue="1">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="2.5" author="vijaya.a" dbms="mssql">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				ALTER TABLE COMMODITIES_TEMP ADD CONSTRAINT DF_COMMODITIES_TEMP_ACTIVE DEFAULT 1 FOR ACTIVE;
				ALTER TABLE COMMODITIES ADD CONSTRAINT DF_COMMODITIES_ACTIVE DEFAULT 1 FOR ACTIVE;
			]]>
		</sql>
	</changeSet>

	<changeSet id="2.6" author="vijaya.a" dbms="postgresql, oracle">
		<comment>Commodity and LAS</comment>
		<addDefaultValue columnName="Active" tableName="COMMODITIES_TEMP" defaultValue="1" />
		<addDefaultValue columnName="Active" tableName="COMMODITIES" defaultValue="1" />
	</changeSet>

	<changeSet id="2.7" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_TEMP_CT_ID" referencedTableName="COMMODITY_TYPES"
			baseColumnNames="CommodityType" baseTableName="COMMODITIES_TEMP" referencedColumnNames="Id" />
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_CT_ID" referencedTableName="COMMODITY_TYPES"
			baseColumnNames="CommodityType" baseTableName="COMMODITIES" referencedColumnNames="Id" />
	</changeSet>

	<changeSet id="3" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<renameColumn tableName="COMMODITY_TYPES_TEMP" oldColumnName="CommodityType" newColumnName="Code" />
		<renameColumn tableName="COMMODITY_TYPES" oldColumnName="CommodityType" newColumnName="Code" />
	</changeSet>

	<changeSet id="3.1" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<addUniqueConstraint tableName="COMMODITIES_TEMP" columnNames="CommodityType, Code"
			constraintName="UK_COMMODITIES_TEMP_CODE_TYPE" />
		<addUniqueConstraint tableName="COMMODITIES" columnNames="CommodityType, Code" constraintName="UK_COMMODITIES_CODE_TYPE" />
	</changeSet>

	<changeSet id="4" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITY_TYPES_VIEW" replaceIfExists="true">
			  SELECT t1.id,
    			t1.code,
   				t1.description,
    			case when t1.unittype = 1 then 'Killos'
     	 			 when t1.unittype = 2 then 'Tonnes'
         		     when t1.unittype = 3 then 'Grams'
         			 when t1.unittype = 4 then 'Ounce'
         			 when t1.unittype = 5 then 'Quantity'
         			 else '' 
    			End  As unittypeValue,
    			t1.unitType,     
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
   				t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			FROM commodity_types_temp t1
			UNION ALL
 			SELECT t1.id,
    			t1.code,
    			t1.description,
   				case when t1.unittype = 1 then 'Killos'
     	 			 when t1.unittype = 2 then 'Tonnes'
        	 		 when t1.unittype = 3 then 'Grams'
         			 when t1.unittype = 4 then 'Ounce'
         			 when t1.unittype = 5 then 'Quantity'
         			 else ''
       		End As unittypeValue,
    			t1.unittype,
   				t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   				FROM commodity_types t1
  			WHERE NOT (EXISTS ( SELECT 1
            FROM commodity_types_temp
            WHERE commodity_types_temp.id = t1.id))
		</createView>
	</changeSet>

	<changeSet id="4.1" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITY_TYPES_AVIEW" replaceIfExists="true">
			  SELECT t1.id,
    			t1.code,
    			t1.description,
    			case when t1.unittype = 1 then 'Killos'
     	 			 when t1.unittype = 2 then 'Tonnes'
        			 when t1.unittype = 3 then 'Grams'
        			 when t1.unittype = 4 then 'Ounce'
        			 when t1.unittype = 5 then 'Quantity'
        			 else ''
    			End As unittypeValue,
    			t1.unittype,
    			t1.active,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodity_types t1
		</createView>
	</changeSet>

	<changeSet id="5" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITIES_VIEW" replaceIfExists="true">
			  SELECT t1.id,
    			t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t2.active,
    			t2.unittype,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities_temp t1
     		  JOIN commodity_types t2 ON t2.id = t1.commoditytype
			  UNION ALL
 			  SELECT t1.id,
 				t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t2.active,
    			t2.unittype,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,	
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities t1
     		  JOIN commodity_types t2 ON t2.id = t1.commoditytype
  			  WHERE NOT (EXISTS ( SELECT 1
              FROM commodities_temp
              WHERE commodities_temp.id = t1.id))
		</createView>
	</changeSet>

	<changeSet id="5.1" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<createView viewName="COMMODITIES_AVIEW" replaceIfExists="true">
			  SELECT t1.id,
 				t2.code commodityTypeCode,
    			t1.commoditytype,
    			t1.code,
    			t2.description,
    			t1.currentvalue,
    			t1.hsncode,
    			t2.active,
    			t2.unittype,
    			t1.version,
    			t1.lastmntby,
    			t1.lastmnton,
    			t1.recordstatus,
    			t1.rolecode,
    			t1.nextrolecode,
    			t1.taskid,
    			t1.nexttaskid,
    			t1.recordtype,
    			t1.workflowid
   			  FROM commodities t1
     		  JOIN commodity_types t2 ON t2.id = t1.commoditytype
		</createView>
	</changeSet>

	<changeSet id="6" author="amanullah.m">
		<comment>Commodity and LAS</comment>
		<addColumn tableName="CollateralStructure">
			<column name="thresholdLtvPercentage" type="decimal(5,2)"/>
		</addColumn>
		<addColumn tableName="CollateralStructure">
			<column name="commodityId" type="bigint"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="6.1" author="vijaya.a" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE COLLATERALSTRUCTURE ADD CONSTRAINT DF_COMMODITIES_THRESHOLDLTVPERCENTAGE DEFAULT 0.0 FOR THRESHOLDLTVPERCENTAGE;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="6.2" author="vijaya.a"  dbms="postgresql, oracle">
		<addDefaultValue columnName="thresholdLtvPercentage" tableName="CollateralStructure"  defaultValue="0.00"/>
	</changeSet>

	<changeSet id="6.3" author="vijaya.a">
		<sql>
			<![CDATA[
				Update COLLATERALSTRUCTURE set THRESHOLDLTVPERCENTAGE = 0.0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="7" author="amanullah.m">
		<comment>Commodity and LAS</comment>
		<addColumn tableName="CollateralStructure_Temp">
			<column name="thresholdLtvPercentage" type="decimal(5,2)"/>
		</addColumn>
		<addColumn tableName="CollateralStructure_Temp">
			<column name="commodityId" type="bigint"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="7.1" author="vijaya.a" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE COLLATERALSTRUCTURE_TEMP ADD CONSTRAINT DF_COMMODITIES_THRESHOLDLTVPERCENTAGE DEFAULT 0.0 FOR THRESHOLDLTVPERCENTAGE;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="7.2" author="vijaya.a"  dbms="postgresql, oracle">
		<addDefaultValue columnName="thresholdLtvPercentage" tableName="CollateralStructure_Temp"  defaultValue="0.00"/>
	</changeSet>

	<changeSet id="7.3" author="vijaya.a">
		<sql>
			<![CDATA[
				Update COLLATERALSTRUCTURE_TEMP set THRESHOLDLTVPERCENTAGE = 0.0;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="8" author="amanullah.m">
		<createView viewName="COLLATERALSTRUCTURE_VIEW" replaceIfExists="true">
		 SELECT t1.collateraltype,
		    t1.collateraldesc,
		    t1.ltvtype,
		    t1.ltvpercentage,
		    t1.marketablesecurities,
		    t1.prevalidationreq,
		    t1.postvalidationreq,
		    t1.collaterallocreq,
		    t1.collateralvaluatorreq,
		    t1.remarks,
		    t1.allowltvwaiver,
		    t1.prevalidation,
		    t1.postvalidation,
		    t1.maxltvwaiver,
		    t1.actualblock,
		    t1.sqlrule,
		    t1.fields,
		    t1.active,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t1.valuationfrequency,
		    t1.nextvaluationdate,
		    t1.valuationpending,
		    t1.queryid,
		    t2.querycode,
		    t2.querysubcode,
		    t1.thresholdltvpercentage,
		    t1.commodityId
		   FROM collateralstructure_temp t1
		     LEFT JOIN dedupparams t2 ON t1.queryid = t2.queryid AND t2.querymodule = 'Collateral'
		UNION ALL
		 SELECT t1.collateraltype,
		    t1.collateraldesc,
		    t1.ltvtype,
		    t1.ltvpercentage,
		    t1.marketablesecurities,
		    t1.prevalidationreq,
		    t1.postvalidationreq,
		    t1.collaterallocreq,
		    t1.collateralvaluatorreq,
		    t1.remarks,
		    t1.allowltvwaiver,
		    t1.prevalidation,
		    t1.postvalidation,
		    t1.maxltvwaiver,
		    t1.actualblock,
		    t1.sqlrule,
		    t1.fields,
		    t1.active,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t1.valuationfrequency,
		    t1.nextvaluationdate,
		    t1.valuationpending,
		    t1.queryid,
		    t2.querycode,
		    t2.querysubcode,
		    t1.thresholdltvpercentage,
		    t1.commodityId
		   FROM collateralstructure t1
		     LEFT JOIN dedupparams t2 ON t1.queryid = t2.queryid AND t2.querymodule = 'Collateral'
		  WHERE NOT (EXISTS ( SELECT 1
		           FROM collateralstructure_temp
		          WHERE collateralstructure_temp.collateraltype = t1.collateraltype))
		</createView>
	</changeSet>

	<changeSet id="9" author="amanullah.m">
		<createView viewName="COLLATERALSTRUCTURE_AVIEW" replaceIfExists="true">
		SELECT t1.collateraltype,
		    t1.collateraldesc,
		    t1.ltvtype,
		    t1.ltvpercentage,
		    t1.marketablesecurities,
		    t1.prevalidationreq,
		    t1.postvalidationreq,
		    t1.collaterallocreq,
		    t1.collateralvaluatorreq,
		    t1.remarks,
		    t1.allowltvwaiver,
		    t1.prevalidation,
		    t1.postvalidation,
		    t1.maxltvwaiver,
		    t1.actualblock,
		    t1.sqlrule,
		    t1.fields,
		    t1.active,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t1.valuationfrequency,
		    t1.nextvaluationdate,
		    t1.valuationpending,
		    t1.queryid,
		    t2.querycode,
		    t2.querysubcode,
		    t1.thresholdltvpercentage,
		    t1.commodityId
		   FROM collateralstructure t1
		     LEFT JOIN dedupparams t2 ON t1.queryid = t2.queryid AND t2.querymodule = 'Collateral'
		</createView>
	</changeSet>


	<changeSet id="10" author="amanullah.m">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				INSERT INTO SecRights values((SELECT max(RightId) + 1 from SecRights), 3,'CollateralStructureDialog_ThresholdLtvPercentage','CollateralStructureDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COLLATERALSTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'CollateralStructureDialog_ThresholdLtvPercentage'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0 );
				INSERT INTO SecRights values((SELECT max(RightId) + 1 from SecRights), 3,'CollateralStructureDialog_Commodity','CollateralStructureDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'COLLATERALSTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'CollateralStructureDialog_Commodity'), 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', '', '', '', '', '', 0 );
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
			]]>
		</sql>
	</changeSet>

	<changeSet id="11" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				Delete from reportList where code ='CommodityType';
				INSERT INTO ReportList VALUES ('CommodityType', 'CommodityType', 'listheader_CommodityType.label,listheader_UnitType.label,listheader_Active.label,listheader_Description.label',  'Code,UnitTypeValue,Active,Description', 'String,String,String,String', ' ', 'ReportList04', 'CommodityType',  'Application Masters', 1, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="12" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<sql>
			<![CDATA[
				Delete from reportList where code ='Commodities';
				INSERT INTO ReportList VALUES ('Commodities', 'Commodities', 'listheader_CommodityType.label,listheader_Code.label,listheader_CurrentValue.label,listheader_Description.label,listheader_HSNCode.label,listheader_Active.label',  'CommodityTypeCode,Code,CurrentValue,Description,HSNCode,Active', 'String,String,int,String,String,String', ' ', 'ReportList06', 'Commodities', 'Application Masters', 1, 1000, CURRENT_TIMESTAMP, 'Approved', ' ', ' ', ' ', ' ', ' ', 0, 0); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="13" author="vijaya.a">
	<comment>Current Value File Upload</comment>
		<createTable tableName="COMMODITIES_LOG">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints nullable="false" primaryKey="true" primaryKeyName="PK_COMMODITIES_LOG_ID" />
			</column>
			<column name="CommodityId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="AuditImage" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="CurrentValue" type="decimal(18, 0)">
				<constraints nullable="false" />
			</column>
			<column name="BatchId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="ModifiedBy" type="varchar(10)">
				<constraints nullable="false" />
			</column>
			<column name="ModifiedOn" type="datetime">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	
	<changeSet id="13.1" author="vijaya.a">
		<comment>Commodity and LAS</comment>
		<addForeignKeyConstraint constraintName="FK_COMMODITIES_LOG_CT_ID" referencedTableName="COMMODITIES"
			baseColumnNames="CommodityId" baseTableName="COMMODITIES_LOG" referencedColumnNames="Id" />
	</changeSet>
	
	<changeSet id="14" author="vijaya.a">
		<comment>commodity file upload</comment>
			<sql>
			<![CDATA[
				DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='COLLETARAL_VALUE_UPDATE';

				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'COLLETARAL_VALUE_UPDATE';

				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'COLLETARAL_VALUE_UPDATE', 'Colletaral value update', 12, 'Colletaral', NULL, NULL, NULL , 0, 0, NULL, 'CommodityTypeCode,  Code, Description, CurrentValue, HSNCode, Active',  '', 'A', 'D:/Colletaral/Values', 'COLLETARAL_', '.xls', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE'), 'COLLETARAL_VALUES',  0, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);

				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'CommodityTypeCode', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'Code', 0, 'N', NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'Description', 0, 'N', NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'CurrentValue', 0, 'N', NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'HSNCode', 0, 'N', NULL, NULL, NULL, NULL, 4, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'COLLETARAL_VALUES' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'COLLETARAL_VALUE_UPDATE')),	'Active', 0, 'N', NULL, NULL, NULL, NULL, 5, NULL, NULL, NULL, NULL, 'O');

				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			]]>
			</sql>
	</changeSet>
	
	<changeSet id="15" author="vijaya.a">
		<sql>
		<![CDATA[
			INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_Collateral_Values_Upload','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
		]]>
		</sql>
	</changeSet>
	
	<changeSet id="16" author="aditya.a">
	   <createView viewName="Postings_View" replaceIfExists="true">
     SELECT t1.linkedtranid,
    t1.postref,
    t1.postingid,
    t1.finreference,
    t1.finevent,
    t1.postdate,
    t1.valuedate,
    t1.appvaluedate,
    t1.appdate,
    t1.trancode,
    t1.revtrancode,
    t1.drorcr,
    t1.account,
    t1.postamount,
    t1.poststatus,
    t1.errorid,
    t1.errormsg,
    t2.aeeventcodedesc AS lovdesceventcodename,
    t1.shadowposting,
    t1.trandesc,
    t1.amounttype,
    t1.acccy,
    t1.postbranch,
    t1.userbranch,
    t1.tranorderid,
    t1.transorder
   FROM postings t1
     JOIN bmtaeevents t2 ON t1.finevent = t2.aeeventcode
     JOIN (Select FinReference from FinanceMain UNION 
           SELECT FinReference from FinanceMain_Temp) t3 ON t3.finreference = t1.finreference
UNION ALL
 SELECT t1.linkedtranid,
    t1.postref,
    t1.postingid,
    t3.primarylinkref AS finreference,
    t1.finevent,
    t1.postdate,
    t1.valuedate,
    t1.appvaluedate,
    t1.appdate,
    t1.trancode,
    t1.revtrancode,
    t1.drorcr,
    t1.account,
    t1.postamount,
    t1.poststatus,
    t1.errorid,
    t1.errormsg,
    t2.aeeventcodedesc AS lovdesceventcodename,
    t1.shadowposting,
    t1.trandesc,
    t1.amounttype,
    t1.acccy,
    t1.postbranch,
    t1.userbranch,
    t1.tranorderid,
    t1.transorder
   FROM postings t1
     JOIN bmtaeevents t2 ON t1.finevent = t2.aeeventcode
     JOIN vasrecording t3 ON t3.vasreference = t1.finreference
UNION ALL
 SELECT t1.linkedtranid,
    t1.postref,
    t1.postingid,
    cast(t3.reference as varchar2(20)) AS finreference,
    t1.finevent,
    t1.postdate,
    t1.valuedate,
    t1.appvaluedate,
    t1.appdate,
    t1.trancode,
    t1.revtrancode,
    t1.drorcr,
    t1.account,
    t1.postamount,
    t1.poststatus,
    t1.errorid,
    t1.errormsg,
    t2.aeeventcodedesc AS lovdesceventcodename,
    t1.shadowposting,
    t1.trandesc,
    t1.amounttype,
    t1.acccy,
    t1.postbranch,
    t1.userbranch,
    t1.tranorderid,
    t1.transorder
   FROM postings t1
     JOIN bmtaeevents t2 ON t1.finevent = t2.aeeventcode
     JOIN jvpostings t3 ON cast(t3.batchreference as varchar2(20)) = t1.finreference
		</createView>
    </changeSet>
   
	<!--This change log xml is Freezed dont add change sets in this version.
		please add new change sets on change-log-{pff.version}.xml 
		i.e pff.version  from pom.xml in pff pff-aggregator -->
	
	
</databaseChangeLog>