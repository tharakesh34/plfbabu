<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true" dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="DE#419" author="vijaya.a">
		<modifyDataType tableName="Collection_CustomerDetails" columnName="CustShrtName" newDataType="varchar(200)" />
	</changeSet>

	<changeSet id="DE#429" author="Gopal.p" dbms="postgresql,mssql">
		<createSequence sequenceName="SeqFinExpenseMovements" incrementBy="1" startValue="1" minValue="1"
			maxValue="999999999999999999" />
	</changeSet>

	<changeSet author="murthy.y" id="DE#485.1">
		<createTable tableName="App_SessionValidation">
			<column name="EntityCode" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="AgentID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="UserToken" type="varchar(10)" />
			<column name="UserTokenExpiry" type="datetime" />
			<column name="RegistrationId" type="varchar(300)" />
			<column name="Flag" type="char(1)" defaultValue="0" />
		</createTable>
	</changeSet>

	<changeSet author="murthy.y" id="DE#485.2">
		<addPrimaryKey columnNames="EntityCode, AgentID" tableName="App_SessionValidation" />
	</changeSet>

	<changeSet id="DE#414" author="Durga Prasad G">
		<sql>
			<![CDATA[
				UPDATE SeqSecRights SET SeqNo= (SELECT MAX(rightid) FROM SecRights );	
				UPDATE SeqSecGroupRights SET SeqNo= (SELECT MAX(GRPrightID) FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_Temp)t);
				
				DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='FIN_FEEWAIVER_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeWaiverHeaderDialog_valueDate');
				DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='FIN_FEEWAIVER_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeWaiverHeaderDialog_remarks');
								
				DELETE FROM SecRights where RightName='FeeWaiverHeaderDialog_valueDate';
				DELETE FROM SecRights where RightName='FeeWaiverHeaderDialog_remarks';
								
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'FeeWaiverHeaderDialog_valueDate','FeeWaiverHeaderDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3,'FeeWaiverHeaderDialog_remarks','FeeWaiverHeaderDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_FEEWAIVER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeWaiverHeaderDialog_valueDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_FEEWAIVER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeWaiverHeaderDialog_remarks'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
								
				UPDATE SeqSecRights SET SeqNo= (SELECT MAX(rightid) FROM SecRights );	
				UPDATE SeqSecGroupRights SET SeqNo= (SELECT MAX(GRPrightID) FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_Temp)t);
			]]>
		</sql>
	</changeSet>

	<!-- <changeSet id="DE#510" author="swamy.p">
		<sql>
			<![CDATA[
			    UPDATE CIBIL_STATES_MAPPING SET Code ='08' where Segment_Type='CORP' and CPProvince ='DN';
				UPDATE CIBIL_STATES_MAPPING SET Code ='28' where Segment_Type='RETAIL' and CPProvince ='AP';		
				UPDATE CIBIL_STATES_MAPPING SET Code ='35' where Segment_Type='RETAIL' and CPProvince ='AN';
				
				DELETE FROM CIBIL_STATES_MAPPING where Segment_Type='RETAIL' and CPProvince ='TL';
				INSERT INTO CIBIL_STATES_MAPPING Values ('36', 'RETAIL', 'IN', 'TL',  'Telangana',	50, 56,   1, 1000, current_timestamp, 'Approved','','','','','', 0);
			]]>
		</sql>
	</changeSet> -->

	<changeSet author="keerthi.p" id="ST#482 .1">
		<createTable tableName="PUSH_PULL_CONTROL">
			<column name="ID" type="bigint" autoIncrement="true" />
			<column name="Name" type="varchar(100)" />
			<column name="Type" type="char(4)" />
			<column name="Status" type="char(1)" />
			<column name="LastRunDate" type="datetime" />
		</createTable>
	</changeSet>

	<changeSet author="keerthi.p" id="ST#482 .2">
		<addUniqueConstraint columnNames="Name,Type" constraintName="UK_PUSH_PULL_CONTROL_NT" tableName="PUSH_PULL_CONTROL" />
	</changeSet>
	<changeSet id="DE#594" author="Varaprasad.K">
		<sql>
			<![CDATA[
				Delete from ErrorDetails WHERE code='FC0001';
				INSERT INTO ErrorDetails VALUES('FC0001','EN','W','Insufficient funds to process Early Settlement. Please click Override to park amount into Excess.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#616_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_mandate_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#616" author="vijaya.a">
		<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT M.MANDATEID,
						M.DOCUMENTNAME,
						BD.BANKSHORTCODE
						BANKCODE,
						BD.BANKNAME,
						case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
						case when
						LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
						CUST.CUSTCIF,
						CUST.CUSTSHRTNAME,
						CUST.CustCoreBank,
						FT.FINTYPEDESC FINTYPE ,
						FIN.FINREFERENCE ,
						COALESCE((SELECT SUM(TotalAmount) from (Select
						MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount
						FROM FINSCHEDULEDETAILS FSD
						INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE
						=FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID
						GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
						COALESCE((SELECT
						SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD WHERE
						(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID =
						M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
						CASE M.OPENMANDATE WHEN 1 THEN 'New Open ECS' ELSE 'No
						Open ECS' END OPENMANDATE,
						M.ACCNUMBER,
						CASE WHEN M.ACCTYPE = '10' then 'Savings Account' WHEN M.ACCTYPE = '11' then
						'Current Account' WHEN M.ACCTYPE = '11' then
						'Cash Credit Account' ELSE M.ACCTYPE END ACCTYPE,
						M.ACCHOLDERNAME,
						BB.MICR,
						BB.IFSC,
						BB.ADDOFBRANCH,
						(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT
						FINREFERENCE FROM FINANCEMAIN WHERE
						MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
						(select MAX(SCHDATE) from FINSCHEDULEDETAILS
						where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT
						FINREFERENCE FROM FINANCEMAIN WHERE
						MANDATEID=M.MANDATEID)) EMIENDDATE,
						M.MAXLIMIT MAXLIMIT,
						COALESCE((SELECT SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE
						(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE
						MANDATEID=M.MANDATEID) GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
						FIN.NumberOfTerms,
						M.periodicity,
						M.STARTDATE,
						M.EXPIRYDATE,
						FIN.APPLICATIONNO,
						M.MANDATETYPE,
						M.STATUS,
						M.INPUTDATE,
						M.RECORDSTATUS,
						M.RECORDTYPE,
						M.MANDATECCY,
						COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,
						M.EntityCode,
						CP.PHONENUMBER,
						CE.CUSTEMAIL,
						PB.PARTNERBANKNAME,
						M.LASTMNTON,
						BB.BranchDesc BANK_BRANCH_NAME
						FROM MANDATES M
					INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
					INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE
					INNER JOIN CUSTOMERS CUST ON CUST.CUSTID = M.CUSTID
					INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH
					LEFT JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = M.PARTNERBANKID
					LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
					LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
					LEFT OUTER JOIN	RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
					LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE = FIN.FINREFERENCE
					LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH
					LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE = FT.FINTYPE
					WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC' OR status = 'NEW'))
			]]>
		</createView>
	</changeSet>

	<changeSet id="DE#616_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_mandate_request_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#50" author="aditya.a" dbms="postgresql">
		<dropNotNullConstraint tableName="FINANCEMAIN" columnName="REFERRALID" columnDataType="VARCHAR(10)" />
		<dropNotNullConstraint tableName="FINANCEMAIN_TEMP" columnName="REFERRALID" columnDataType="VARCHAR(10)" />
	</changeSet>

	<changeSet id="DE#50" author="aditya.a" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FINANCEMAIN ALTER COLUMN REFERRALID VARCHAR(10) NULL;
				ALTER TABLE FINANCEMAIN_TEMP ALTER COLUMN REFERRALID VARCHAR(10) NULL;
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#699" author="vijaya.a">
		<dropForeignKeyConstraint baseTableName="COVENANT_DOCUMENTS" constraintName="FK_COVENANT_DOCUMENTS_DID" />
	</changeSet>

	<changeSet id="DE#710" author="Manoj.P">
		<createView viewName="Int_Mandate_Request_view" replaceIfExists="true">
		<![CDATA[
			SELECT m.mandateid,
		    m.documentname,
		    bd.bankshortcode AS bankcode,
		    bd.bankname,
		        CASE
		            WHEN (lb.branchcode IS NULL) THEN cb.branchcode
		            ELSE lb.branchcode
		        END AS branchcode,
		        CASE
		            WHEN (lb.branchdesc IS NULL) THEN cb.branchdesc
		            ELSE lb.branchdesc
		        END AS branchdesc,
		    cust.custcif,
		    cust.custshrtname,
		    cust.custcorebank,
		    ft.fintypedesc AS fintype,
		    fin.finreference,
		    COALESCE((( SELECT sum(t.totalamount) AS sum
		           FROM ( SELECT max((fsd.repayamount + fsd.feeschd)) AS totalamount
		                   FROM (finscheduledetails fsd
		                     JOIN financemain fm ON ((((fm.finreference) = (fsd.finreference)) AND (fm.custid = m.custid))))
		                  GROUP BY fm.finreference) t) / ccy.ccyminorccyunits), (0)) AS cust_emi,
		    COALESCE((( SELECT sum(t.totalamount) AS sum
		           FROM ( SELECT max((fsd.repayamount + fsd.feeschd)) AS totalamount
		                   FROM finscheduledetails fsd
		                  WHERE (((fsd.repayonschdate = 1) OR (fsd.pftonschdate = 1)) AND ((fsd.finreference) = ANY ( SELECT financemain.finreference
		                           FROM financemain
		                          WHERE (financemain.mandateid = m.mandateid))))
		                  GROUP BY fsd.finreference) t) / ccy.ccyminorccyunits), (0)) AS emi,
		        CASE m.openmandate
		            WHEN 1 THEN 'New Open ECS'
		            ELSE 'No
								Open ECS'
		        END AS openmandate,
		    m.accnumber,
		        CASE
		            WHEN ((m.acctype) = '10') THEN 'Savings Account'
		            WHEN ((m.acctype) = '11') THEN 'Current Account'
		            WHEN ((m.acctype) = '11') THEN 'Cash Credit Account'
		            ELSE m.acctype
		        END AS acctype,
		    m.accholdername,
		    bb.micr,
		    bb.ifsc,
		    bb.addofbranch,
		    ( SELECT min(finpftdetails.firstrepaydate) AS min
		           FROM finpftdetails
		          WHERE ((finpftdetails.finreference) = ANY ( SELECT financemain.finreference
		                   FROM financemain
		                  WHERE (financemain.mandateid = m.mandateid)))) AS firstduedate,
		    ( SELECT max(finscheduledetails.schdate) AS max
		           FROM finscheduledetails
		          WHERE (((finscheduledetails.repayonschdate = 1) OR (finscheduledetails.pftonschdate = 1)) AND ((finscheduledetails.finreference) = ANY ( SELECT financemain.finreference
		                   FROM financemain
		                  WHERE (financemain.mandateid = m.mandateid))))) AS emienddate,
		     COALESCE(m.maxlimit, 0) AS maxlimit,
		    (COALESCE(( SELECT sum(t.mandatedebitamount) AS sum
		           FROM ( SELECT max((finscheduledetails.repayamount + finscheduledetails.feeschd)) AS mandatedebitamount
		                   FROM finscheduledetails
		                  WHERE (((finscheduledetails.repayonschdate = 1) OR (finscheduledetails.pftonschdate = 1)) AND ((finscheduledetails.finreference) = ANY ( SELECT financemain.finreference
		                           FROM financemain
		                          WHERE (financemain.mandateid = m.mandateid))))
		                  GROUP BY finscheduledetails.finreference) t), (0)) / ccy.ccyminorccyunits) AS debitamount,
		    fin.numberofterms,
		    m.periodicity,
		    m.startdate,
		    m.expirydate,
		    fin.applicationno,
		    m.mandatetype,
		    m.status,
		    m.inputdate,
		    m.recordstatus,
		    m.recordtype,
		    m.mandateccy,
		    COALESCE(ccy.ccyminorccyunits, (100)) AS ccyminorccyunits,
		    m.entitycode,
		    cp.phonenumber,
		    ce.custemail,
		    pb.partnerbankname,
		    m.lastmnton,
		    bb.branchdesc AS bank_branch_name
		   FROM (((((((((((mandates m
		     JOIN bankbranches bb ON ((bb.bankbranchid = m.bankbranchid)))
		     JOIN bmtbankdetail bd ON (((bd.bankcode) = (bb.bankcode))))
		     JOIN customers cust ON ((cust.custid = m.custid)))
		     JOIN rmtbranches cb ON (((cb.branchcode) = (cust.custdftbranch))))
		     LEFT JOIN partnerbanks pb ON ((pb.partnerbankid = m.partnerbankid)))
		     LEFT JOIN customeremails ce ON (((ce.custid = cust.custid) AND (ce.custemailpriority = 5))))
		     LEFT JOIN customerphonenumbers cp ON (((cp.phonecustid = cust.custid) AND (cp.phonetypepriority = 5))))
		     LEFT JOIN rmtcurrencies ccy ON ((ccy.ccycode = m.mandateccy)))
		     LEFT JOIN financemain fin ON (((m.orgreference) = (fin.finreference))))
		     LEFT JOIN rmtbranches lb ON (((lb.branchcode) = (fin.finbranch))))
		     LEFT JOIN rmtfinancetypes ft ON (((fin.fintype) = (ft.fintype))))
		     WHERE (((m.status) = 'NEW') AND (NOT (m.mandateid IN ( SELECT mandate_requests.mandateid
		           FROM mandate_requests
		          WHERE (((mandate_requests.status) = 'AC') OR ((mandate_requests.status) = 'NEW'))))))
		        ]]>
		</createView>
	</changeSet>

	<changeSet id="DE#24_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'manualadvise_lovview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#24" author="vijaya.a">
		<createView viewName="MANUALADVISE_LOVVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT ADVISEID,
				  	FEETYPEID,
				  	ADVISETYPE,
				  	FINREFERENCE,
				  	cast(round(ADVISEAMOUNT / 100, 2) as numeric(36,2)) ADVISEAMOUNT,
				  	VALUEDATE,
				  	POSTDATE,
				  	cast(round(RESERVEDAMT / 100, 2) as numeric(36,2)) RESERVEDAMT,
				  	cast(round(BALANCEAMT / 100, 2) as numeric(36,2)) BALANCEAMT
					FROM MANUALADVISE_AVIEW where holdDue=0
			]]>
		</createView>
	</changeSet>

	<changeSet id="DE#24_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'MANUALADVISE_LOVVIEW');
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#1009" author="vijaya.a">
		<sql>
			<![CDATA[
				update Dedupfields set FieldName = 'CustCompName' where FieldDesc = 'Company Name' and QueryModule = 'CORPBlackList';
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#1028" author="vijaya.a">
		<sql>
			<![CDATA[
				update Dedupfields set FieldName = 'CustCompName' where FieldDesc = 'Company Name' and QueryModule = 'SMEBlacklist';
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#1201" author="saiteja.r">
		<addUniqueConstraint columnNames="custcrcpr, custctgcode" constraintName="uk_cust_ctgcode_crcpr"
			tableName="CUSTOMERS" />
	</changeSet>

	<changeSet id="DE#1201.1" author="saiteja.r">
		<addUniqueConstraint columnNames="custcrcpr, custctgcode" constraintName="uk_cust_ctgcode_crcpr_temp"
			tableName="CUSTOMERS_TEMP" />
	</changeSet>
	
	<changeSet id="105" author="keerthi.P">
		<sql>
			<![CDATA[
				UPDATE SMTPARAMETERS SET SYSPARMLENGTH = 10 WHERE SYSPARMCODE ='TAX_ROUNDINGMODE';
			]]>
		</sql>
	</changeSet>

    <changeSet id="105.1" author="keerthi.P">
		<sql>
			<![CDATA[
				UPDATE SMTPARAMETERS SET SYSPARMLENGTH = 10 WHERE SYSPARMCODE ='TDS_ROUNDINGMODE';
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#26_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disbursement_request_view');
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="DE#26" author="vijaya.a">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FA.PAYMENTID,
				FA.FINREFERENCE,
				'D' CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN FA.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN FA.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN
				FA.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				WHEN FA.PAYMENTTYPE = 'IFT'
				THEN 'I'
				ELSE FA.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				FA.AMTTOBERELEASED,
				FA.DISBDATE,
				FA.LLDATE,
				FA.PAYABLELOC,
				FA.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				FA.BENEFICIARYACCNO,
				CASE
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				OR FA.PAYMENTTYPE = 'DD'
				THEN
				FA.LIABILITYHOLDNAME
				ELSE FA.BENEFICIARYNAME
				END BENEFICIARYNAME,
				(FA.PHONECOUNTRYCODE ${call.concatenate} FA.PHONEAREACODE) ${call.concatenate} FA.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				BRCA.CustAddrHNbr ${call.concatenate}','${call.concatenate} BRCA.CustAddrStreet ${call.concatenate}','${call.concatenate} BRC.PCCITYNAME ${call.concatenate}','${call.concatenate} BRS.CPPROVINCENAME  BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				FA.STATUS,
				FA.DESCRIPTION REMARKS,
				FA.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID
				PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				FA.INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT
				FROM FINADVANCEPAYMENTS FA
				JOIN
				(SELECT FINANCEMAIN_TEMP.CUSTID,
				FINANCEMAIN_TEMP.FINREFERENCE,
				FINANCEMAIN_TEMP.FINTYPE,
				FINANCEMAIN_TEMP.FINISACTIVE
				FROM FINANCEMAIN_TEMP
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM
				ON FM.FINREFERENCE = FA.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID	
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE	= FA.DISBCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE	ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID	AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE =	BB.BANKCODE
				LEFT JOIN ( SELECT PB_1.PARTNERBANKID,	
				PBD_1.BANKNAME,
				PBB.BRANCHDESC,
				PBBRC.PCCITYNAME,
				PBBRS.CPPROVINCENAME FROM PARTNERBANKS PB_1
				JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE
				JOIN BMTBANKDETAIL PBD_1 ON PBD_1.BANKCODE = PBB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
				) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND
				BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID
				AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES	BRCA ON	BRCA.CUSTID = BR.CUSTID
				AND BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE FA.STATUS = 'APPROVED' AND NOT (FA.PAYMENTID IN ( 
				SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
				AND NOT	(FA.PAYMENTID IN ( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP))
				UNION ALL
				SELECT
				PI.PAYMENTINSTRUCTIONID PAYMENTID,
				PH.FINREFERENCE,
				PH.PAYMENTTYPE CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN PI.PAYMENTTYPE =
				'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				WHEN PI.PAYMENTTYPE = 'IFT'
				THEN 'I'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.POSTDATE
				DISBDATE,
				PI.POSTDATE LLDATE,
				PI.PAYABLELOC,
				PI.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL
				CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				PI.ACCOUNTNO BENEFICIARYACCNO,
				CASE
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				OR PI.PAYMENTTYPE = 'DD'
				THEN
				PI.FAVOURNAME
				ELSE PI.ACCTHOLDERNAME
				END BENEFICIARYNAME,
				PI.PHONECOUNTRYCODE ${call.concatenate} PI.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				'' BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE
				PARTNERBANK_CODE,
				PI.POSTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO
				PARTNERBANK_ACCOUNTNO
				FROM PAYMENTINSTRUCTIONS PI
				JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
				JOIN (SELECT
				FINANCEMAIN.CUSTID,
				FINANCEMAIN.FINREFERENCE,
				FINANCEMAIN.FINTYPE,
				FINANCEMAIN.FINISACTIVE
				FROM FINANCEMAIN
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN_TEMP T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM ON FM.FINREFERENCE = PH.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID
				AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY	BBRC ON BBRC.PCCITY = BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID
				AND BR.ACCNUMBER = PI.ACCOUNTNO	AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON	BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID	AND	BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY = BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE PI.STATUS = 'APPROVED'
				AND NOT
				(PI.PAYMENTINSTRUCTIONID IN
				( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
				DISBURSEMENT_REQUESTS
				))
				UNION ALL
				SELECT PI.ID PAYMENTID,
				VR.PRIMARYLINKREF FINREFERENCE,
				'I' CHANNEL,
				PI.PROVIDERID,
				CASE
				WHEN
				PI.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN
				PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				WHEN PI.PAYMENTTYPE = 'IFT'
				THEN 'I'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.PAYMENTDATE DISBDATE,
				PI.PAYMENTDATE LLDATE,
				'' PAYABLELOC,
				'' PRINTINGLOC,
				'' CUSTCIF,
				'' CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				'' CUSTOMER_EMAIL,
				'' CUSTOMER_STATE,
				'' CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
				AVD.DEALERNAME BENEFICIARYNAME,
				AVD.DEALERTELEPHONE
				BENEFICIARY_MOBILE,
				AVD.EMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
				AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
				AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				'' FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				PI.PAYMENTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				1 FINISACTIVE,
				PI.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT
				FROM INSURANCEPAYMENTINSTRUCTIONS PI
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON	PB.PARTNERBANKID = PI.PARTNERBANKID
				JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
				JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
				JOIN VASRECORDING VR ON VR.PAYMENTINSID = PI.ID
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY	= BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	AVD.DEALERCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				WHERE PI.STATUS = 'APPROVED' AND PI.PAYMENTAMOUNT > 0
				AND NOT (PI.ID IN( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
			]]>
		</createView>
	</changeSet>

	<changeSet id="DE#26_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disbursement_request_view');
		 	]]>
		</sql>
	</changeSet>
	
	<!-- ST#1407 : Moving Columns from Receipt Details to Receipt Header start -->

	<changeSet id="ST#1407.1.1" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="RefWaiverAmt" type="decimal(18,0)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.2" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="Source" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.3" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="TransactionRef" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.4" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="PartnerBankId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.5" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="PrvReceiptPurpose" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.6" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="ReceiptSource" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.7" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="ValueDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.8" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="DepositDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.9" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="RecAppDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.10" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="ReceivedDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.1.11" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="BankCode" type="varchar(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.1" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="RefWaiverAmt" type="decimal(18,0)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.2" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="Source" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.3" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="TransactionRef" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.4" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="PartnerBankId" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.5" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="PrvReceiptPurpose" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.6" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="ReceiptSource" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.7" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="ValueDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.8" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="DepositDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.9" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="RecAppDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.10" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="ReceivedDate" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.2.11" author="Gopal.p">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="BankCode" type="varchar(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="ST#1407.3" author="Gopal.p" dbms="postgresql, oracle">
		<addDefaultValue columnName="RefWaiverAmt" tableName="FINRECEIPTHEADER" defaultValue="0" />
		<addDefaultValue columnName="RefWaiverAmt" tableName="FINRECEIPTHEADER_TEMP" defaultValue="0" />
		<addDefaultValue columnName="Source" tableName="FINRECEIPTHEADER" defaultValue="PLF" />
		<addDefaultValue columnName="Source" tableName="FINRECEIPTHEADER_TEMP" defaultValue="PLF" />
	</changeSet>

	<changeSet id="ST#1407.3" author="Gopal.p" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FINRECEIPTHEADER add constraint DK_RECEIPTHEADER_RWA default 0 for RefWaiverAmt;
				ALTER TABLE FINRECEIPTHEADER_TEMP add constraint DK_RECEIPTHEADER_T_RWA default 0 for RefWaiverAmt;
				ALTER TABLE FINRECEIPTHEADER add constraint DK_RECEIPTHEADER_S default 'PLF' for Source;
				ALTER TABLE FINRECEIPTHEADER_TEMP add constraint DK_RECEIPTHEADER_T_S default 'PLF' for Source;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.4_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.4" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					T1.REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.EXTREFERENCE,
					T1.MODULE,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					T2.FINISACTIVE,
					T1.WAVIEDAMT,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T1.ACTFINRECEIPT,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE, 
					T1.TRANSACTIONREF,               
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.RECEIVEDDATE
					FROM FINRECEIPTHEADER T1
					INNER JOIN FINANCEMAIN T2 ON T1.REFERENCE = T2.FINREFERENCE
					INNER JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					INNER JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					INNER JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					INNER JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.4_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.5_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_dview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.5" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_DVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
				T1.RECEIPTPURPOSE,
				T1.RECEIPTMODE,
				T1.REMARKS,
				T1.DEPOSITBRANCH,
				T1.RECEIPTAMOUNT AMOUNT,
				T3.FINREFERENCE,
				T4.CUSTSHRTNAME,
				T1.FINDIVISION,
				T1.POSTBRANCH,
				T10.DIVISIONCODEDESC FINDIVISIONDESC,
				T11.BRANCHDESC POSTBRANCHDESC,
				T12.BRANCHDESC CASHIERBRANCHDESC,
				T10.ENTITYCODE,
				T1.CANCELREMARKS,
				T1.REFWAIVERAMT,        
				T1.SOURCE,             
				T1.VALUEDATE,           
				T1.TRANSACTIONREF,      
				T1.DEPOSITDATE,         
				T1.PARTNERBANKID FUNDINGAC,       
				T1.PRVRECEIPTPURPOSE,   
				T1.RECEIPTSOURCE,       
				T1.RECAPPDATE,          
				T1.ReceivedDate
				FROM FINRECEIPTHEADER_TEMP T1
				INNER JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				INNER JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
				LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
				LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
				LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH   = T12.BRANCHCODE
				WHERE T1.RECEIPTMODE IN ('CHEQUE', 'DD')
				AND T1.DEPOSITPROCESS = 1
				AND T1.RECEIPTID NOT IN
				(SELECT RECEIPTID FROM DEPOSITCHEQUES_TEMP
				)
				UNION ALL
				SELECT T1.RECEIPTID,
				T1.RECEIPTPURPOSE,
				T1.RECEIPTMODE,
				T1.REMARKS,
				T1.DEPOSITBRANCH,
				T1.RECEIPTAMOUNT AMOUNT,
				T3.FINREFERENCE,
				T4.CUSTSHRTNAME,
				T1.FINDIVISION,
				T1.POSTBRANCH,
				T10.DIVISIONCODEDESC FINDIVISIONDESC,
				T11.BRANCHDESC POSTBRANCHDESC,
				T12.BRANCHDESC CASHIERBRANCHDESC,
				T10.ENTITYCODE,
				T1.CANCELREMARKS,
				T1.REFWAIVERAMT,        
				T1.SOURCE,             
				T1.VALUEDATE,           
				T1.TRANSACTIONREF,      
				T1.DEPOSITDATE,         
				T1.PARTNERBANKID FUNDINGAC,       
				T1.PRVRECEIPTPURPOSE,   
				T1.RECEIPTSOURCE,       
				T1.RECAPPDATE,          
				T1.ReceivedDate
				FROM FINRECEIPTHEADER T1
				INNER JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				INNER JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
				LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
				LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
				LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
				WHERE NOT EXISTS
				(SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
				)
				AND T1.RECEIPTMODE   IN ('CHEQUE', 'DD')
				AND T1.DEPOSITPROCESS = 1
				AND T1.RECEIPTID NOT IN
				(SELECT RECEIPTID FROM DEPOSITCHEQUES_TEMP)
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.5_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_dview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.6_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fcdview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.6" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_FCDVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					(
					CASE
					WHEN T1.RECAGAINST ='C'
					THEN T13.CUSTCIF
					ELSE T1.REFERENCE
					END) REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					UNION ALL
					SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					(
					CASE
					WHEN T1.RECAGAINST ='C'
					THEN T13.CUSTCIF
					ELSE T1.REFERENCE
					END) REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					WHERE NOT EXISTS
					( SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.6_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fcdview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.7_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fcview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.7" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_FCVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					T1.REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.ACTFINRECEIPT,
					T1.REASONCODE,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.RECEIVEDDATE
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					UNION ALL
					SELECT
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					T1.REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.ACTFINRECEIPT,
					T1.REASONCODE,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					WHERE NOT EXISTS
					( SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.7_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fcview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.8_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fdview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.8" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_FDVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					(
					CASE
					WHEN T1.RECAGAINST ='C'
					THEN T10.CUSTCIF
					ELSE T1.REFERENCE
					END) REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T1.CASHIERBRANCH,
					T2.NEXTREPAYRVWDATE,
					T1.INITIATEDATE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T10.CUSTCIF CUSTOMERCIF,
					T10.CUSTSHRTNAME CUSTOMERNAME,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T11.DIVISIONCODEDESC FINDIVISIONDESC,
					T12.BRANCHDESC POSTBRANCHDESC,
					T13.BRANCHDESC CASHIERBRANCHDESC,
					T11.ENTITYCODE,
					T1.INSTRUCTIONUID,
					T1.ACTFINRECEIPT,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN CUSTOMERS T10 ON CAST(T10.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					LEFT JOIN SMTDIVISIONDETAIL T11 ON T1.FINDIVISION = T11.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.POSTBRANCH = T12.BRANCHCODE
					LEFT JOIN RMTBRANCHES T13 ON T1.CASHIERBRANCH = T13.BRANCHCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.8_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fdview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#1407.9_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fedview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.9" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_FEDVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					(
					CASE
					WHEN T1.RECAGAINST ='C'
					THEN T13.CUSTCIF
					ELSE T1.REFERENCE
					END) REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					UNION ALL
					SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					(
					CASE
					WHEN T1.RECAGAINST ='C'
					THEN T13.CUSTCIF
					ELSE T1.REFERENCE
					END) REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					WHERE NOT EXISTS
					( SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.9_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fedview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="ST#1407.10_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_feview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.10" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_FEVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					T1.REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T4.FINDIVISION LOVDESCFINDIVISION,
					T2.BUSINESSVERTICAL,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.INSTRUCTIONUID,
					T1.MODULE,
					T1.EXTREFERENCE,
					T1.COLLECTIONAGENTID,
					T1.PANNUMBER,
					T1.RECEIVEDFROM,
					T1.RECEIPTCHANNEL,
					T1.SUBRECEIPTMODE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.ACTFINRECEIPT,
					T1.REASONCODE,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					UNION ALL
					SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					T1.REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T4.FINDIVISION LOVDESCFINDIVISION,
					T2.BUSINESSVERTICAL,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.INSTRUCTIONUID,
					T1.MODULE,
					T1.EXTREFERENCE,
					T1.COLLECTIONAGENTID,
					T1.PANNUMBER,
					T1.RECEIVEDFROM,
					T1.RECEIPTCHANNEL,
					T1.SUBRECEIPTMODE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME,
					T1.ACTFINRECEIPT,
					T1.REASONCODE,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER T1
					LEFT JOIN
					(SELECT FINREFERENCE,
					FINBRANCH,
					FINTYPE,
					FINCCY,
					SCHEDULEMETHOD,
					PROFITDAYSBASIS,
					FINISACTIVE,
					CUSTID,
					PRODUCTCATEGORY,
					PROMOTIONCODE,
					NEXTREPAYRVWDATE,
					BUSINESSVERTICAL
					FROM FINANCEMAIN_TEMP
					UNION
					SELECT FINREFERENCE,
					FINBRANCH,
					FINTYPE,
					FINCCY,
					SCHEDULEMETHOD,
					PROFITDAYSBASIS,
					FINISACTIVE,
					CUSTID,
					PRODUCTCATEGORY,
					PROMOTIONCODE,
					NEXTREPAYRVWDATE,
					BUSINESSVERTICAL
					FROM FINANCEMAIN
					) T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					WHERE NOT EXISTS
					( SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.10_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_feview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.11_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_fview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.11" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_FVIEW" replaceIfExists="true">
			<![CDATA[
				   SELECT T1.RECEIPTID,
						  T1.RECEIPTDATE,
						  T1.RECEIPTTYPE,
						  T1.ACTFINRECEIPT,
						  T1.RECAGAINST,
						  T1.REFERENCE,
						  T1.RECEIPTPURPOSE,
						  T1.RECEIPTMODE,
						  T1.EXCESSADJUSTTO,
						  T1.ALLOCATIONTYPE,
						  T1.RECEIPTAMOUNT,
						  T1.EFFECTSCHDMETHOD,
						  T1.RECEIPTMODESTATUS,
						  T1.SUBRECEIPTMODE,
						  T1.RECEIPTCHANNEL,
						  T1.RECEIVEDFROM,
						  T1.PANNUMBER,
						  T1.COLLECTIONAGENTID,
						  T1.VERSION,
						  T1.LASTMNTBY,
						  T1.LASTMNTON,
						  T1.RECORDSTATUS,
						  T1.ROLECODE,
						  T1.NEXTROLECODE,
						  T1.TASKID,
						  T1.NEXTTASKID,
						  T1.RECORDTYPE,
						  T1.WORKFLOWID,
						  T2.FINTYPE,
						  T2.FINBRANCH,
						  T3.CUSTCIF,
						  T3.CUSTSHRTNAME,
						  T2.FINCCY,
						  T1.REALIZATIONDATE,
						  T1.CANCELREASON,
						  T4.FINTYPEDESC,
						  T6.BRANCHDESC FINBRANCHDESC,
						  T5.CCYDESC FINCCYDESC,
						  T7.REJECTDESC CANCELREASONDESC,
						  COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
						  T2.SCHEDULEMETHOD,
						  T2.PROFITDAYSBASIS PFTDAYSBASIS,
						  T1.WAVIEDAMT,
						  COALESCE(T3.CUSTID, 0) CUSTID,
						  T1.TOTFEEAMOUNT,
						  T1.BOUNCEDATE,
						  T1.REMARKS,
						  T1.RCDMAINTAINSTS,
						  T1.DEPOSITPROCESS,
						  T1.DEPOSITBRANCH,
						  T1.LPIAMOUNT,
						  T1.LPPAMOUNT,
						  T1.GSTLPIAMOUNT,
						  T1.GSTLPPAMOUNT,
						  T1.GDRAVAILABLE,
						  T1.RELEASETYPE,
						  T1.THIRDPARTYNAME,
						  T1.THIRDPARTYMOBILENUM,
						  T2.PRODUCTCATEGORY,
						  T2.PROMOTIONCODE,
						  T1.CASHIERBRANCH,
						  T2.NEXTREPAYRVWDATE,
						  T1.INITIATEDATE,
						  T9.CODE COLLECTIONAGENTCODE,
						  T9.DESCRIPTION COLLECTIONAGENTDESC,
						  T1.MODULE,
						  T1.INSTRUCTIONUID,
						  T1.EXTREFERENCE,
						  T10.CUSTCIF CustomerCif,
						  T10.CustShrtName CustomerName,
						  T1.FINDIVISION,
						  T1.POSTBRANCH,
						  T11.DIVISIONCODEDesc FinDivisionDesc,
						  T12.BRANCHDESC PostBranchDesc,
						  T13.BRANCHDESC CashierBranchDesc,
						  T11.ENTITYCODE,
						  T3.CUSTBASECCY,
						  T1.REASONCODE,
						  T1.CANCELREMARKS,
						  T1.REFWAIVERAMT,        
						  T1.SOURCE,             
						  T1.VALUEDATE,           
						  T1.TRANSACTIONREF,      
						  T1.DEPOSITDATE,         
						  T1.PARTNERBANKID,       
						  T1.PRVRECEIPTPURPOSE,   
						  T1.RECEIPTSOURCE,       
						  T1.RECAPPDATE,          
						  T1.RECEIVEDDATE
						FROM FINRECEIPTHEADER_TEMP T1
						LEFT JOIN FINANCEMAIN_TEMP T2 ON T1.REFERENCE = T2.FINREFERENCE
						LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
						LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
						LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
						LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
						LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
						LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
						LEFT JOIN Customers T10 ON CAST(T10.CustId AS VARCHAR(20)) = T1.REFERENCE
						LEFT JOIN SMTDIVISIONDETAIL T11 ON T1.FINDIVISION = T11.DIVISIONCODE
						LEFT JOIN RMTBranches T12 ON T1.PostBranch = T12.BranchCode
						LEFT JOIN RMTBranches T13 ON T1.CASHIERBRANCH = T13.BranchCode
						LEFT JOIN RMTCURRENCIES T14 ON T14.CCYCODE= T3.CustBaseCcy
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.11_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_fview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.12_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.12" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					T1.REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.EXTREFERENCE,
					T1.MODULE,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					T2.FINISACTIVE,
					T1.WAVIEDAMT,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T1.ACTFINRECEIPT,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
					FROM FINRECEIPTHEADER_TEMP T1
					INNER JOIN FINANCEMAIN T2 ON T1.REFERENCE = T2.FINREFERENCE
					INNER JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					INNER JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					INNER JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					INNER JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.12_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.13_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'finreceiptheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.13" author="Gopal.p">
		<createView viewName="FINRECEIPTHEADER_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID,
				    T1.RECEIPTDATE,
				    T1.RECEIPTTYPE,
				    T1.RECAGAINST,
				    T1.REFERENCE,
				    T1.RECEIPTPURPOSE,
				    T1.RECEIPTMODE,
				    T1.EXCESSADJUSTTO,
				    T1.ALLOCATIONTYPE,
				    T1.RECEIPTAMOUNT,
				    T1.EFFECTSCHDMETHOD,
				    T1.EXTREFERENCE,
				    T1.MODULE,
				    T1.RECEIPTMODESTATUS,
				    T1.SUBRECEIPTMODE,
				    T1.RECEIPTCHANNEL,
				    T1.RECEIVEDFROM,
				    T1.PANNUMBER,
				    T1.COLLECTIONAGENTID,
				    T9.CODE COLLECTIONAGENTCODE,
				    T9.DESCRIPTION COLLECTIONAGENTDESC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.FINTYPE,
				    T2.FINBRANCH,
				    T3.CUSTCIF,
				    T3.CUSTSHRTNAME,
				    T2.FINCCY,
				    T1.REALIZATIONDATE,
				    T1.CANCELREASON,
				    T4.FINTYPEDESC,
				    T6.BRANCHDESC FINBRANCHDESC,
				    T5.CCYDESC FINCCYDESC,
				    T7.REJECTDESC CANCELREASONDESC,
				    T2.FINISACTIVE,
				    T1.WAVIEDAMT,
				    T1.TOTFEEAMOUNT,
				    T1.BOUNCEDATE,
				    T1.REMARKS,
				    T1.RCDMAINTAINSTS,
				    T1.GDRAVAILABLE,
				    T1.RELEASETYPE,
				    T1.THIRDPARTYNAME,
				    T1.THIRDPARTYMOBILENUM,
				    T1.DEPOSITPROCESS,
				    T1.DEPOSITBRANCH,
				    T1.LPIAMOUNT,
				    T1.LPPAMOUNT,
				    T1.GSTLPIAMOUNT,
				    T1.GSTLPPAMOUNT,
				    T2.PRODUCTCATEGORY,
				    T2.PROMOTIONCODE,
				    T2.NEXTREPAYRVWDATE,
				    T1.CASHIERBRANCH,
				    T1.INITIATEDATE,
				    T1.INSTRUCTIONUID,
				    T1.FINDIVISION,
				    T1.POSTBRANCH,
				    T10.DIVISIONCODEDESC FINDIVISIONDESC,
				    T11.BRANCHDESC POSTBRANCHDESC,
				    T12.BRANCHDESC CASHIERBRANCHDESC,
				    T10.ENTITYCODE,
				    T1.ACTFINRECEIPT,
					T1.REASONCODE,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.ReceivedDate
				   FROM FINRECEIPTHEADER_TEMP T1
				     JOIN FINANCEMAIN T2 ON T1.REFERENCE = T2.FINREFERENCE
				     JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
				     JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
				     JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
				     JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
				     LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
				     LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
				     LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
				     LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
				     LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
				UNION ALL
				 SELECT T1.RECEIPTID,
				    T1.RECEIPTDATE,
				    T1.RECEIPTTYPE,
				    T1.RECAGAINST,
				    T1.REFERENCE,
				    T1.RECEIPTPURPOSE,
				    T1.RECEIPTMODE,
				    T1.EXCESSADJUSTTO,
				    T1.ALLOCATIONTYPE,
				    T1.RECEIPTAMOUNT,
				    T1.EFFECTSCHDMETHOD,
				    T1.EXTREFERENCE,
				    T1.MODULE,
				    T1.RECEIPTMODESTATUS,
				    T1.SUBRECEIPTMODE,
				    T1.RECEIPTCHANNEL,
				    T1.RECEIVEDFROM,
				    T1.PANNUMBER,
				    T1.COLLECTIONAGENTID,
				    T9.CODE COLLECTIONAGENTCODE,
				    T9.DESCRIPTION COLLECTIONAGENTDESC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T2.FINTYPE,
				    T2.FINBRANCH,
				    T3.CUSTCIF,
				    T3.CUSTSHRTNAME,
				    T2.FINCCY,
				    T1.REALIZATIONDATE,
				    T1.CANCELREASON,
				    T4.FINTYPEDESC,
				    T6.BRANCHDESC FINBRANCHDESC,
				    T5.CCYDESC FINCCYDESC,
				    T7.REJECTDESC CANCELREASONDESC,
				    T2.FINISACTIVE,
				    T1.WAVIEDAMT,
				    T1.TOTFEEAMOUNT,
				    T1.BOUNCEDATE,
				    T1.REMARKS,
				    T1.RCDMAINTAINSTS,
				    T1.GDRAVAILABLE,
				    T1.RELEASETYPE,
				    T1.THIRDPARTYNAME,
				    T1.THIRDPARTYMOBILENUM,
				    T1.DEPOSITPROCESS,
				    T1.DEPOSITBRANCH,
				    T1.LPIAMOUNT,
				    T1.LPPAMOUNT,
				    T1.GSTLPIAMOUNT,
				    T1.GSTLPPAMOUNT,
				    T2.PRODUCTCATEGORY,
				    T2.PROMOTIONCODE,
				    T2.NEXTREPAYRVWDATE,
				    T1.CASHIERBRANCH,
				    T1.INITIATEDATE,
				    T1.INSTRUCTIONUID,
				    T1.FINDIVISION,
				    T1.POSTBRANCH,
				    T10.DIVISIONCODEDESC FINDIVISIONDESC,
				    T11.BRANCHDESC POSTBRANCHDESC,
				    T12.BRANCHDESC CASHIERBRANCHDESC,
				    T10.ENTITYCODE,
				    T1.ACTFINRECEIPT,
					T1.REASONCODE,
					T1.CANCELREMARKS,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.RECEIVEDDATE
				   FROM FINRECEIPTHEADER T1
				     JOIN FINANCEMAIN T2 ON T1.REFERENCE = T2.FINREFERENCE
				     JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
				     JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
				     JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
				     JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
				     LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
				     LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
				     LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
				     LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
				     LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM FINRECEIPTHEADER_TEMP
				          WHERE FINRECEIPTHEADER_TEMP.RECEIPTID = T1.RECEIPTID))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.13_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'finreceiptheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.14_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'receiptdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.14" author="Gopal.p">
		<createView viewName="RECEIPTDETAILS_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T1.BANKCODE,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE ,
					T1.RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T1.RECEIPTMODE PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID FUNDINGAC,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.RECEIVEDDATE
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					INNER JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					UNION ALL
					SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T1.BANKCODE,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T1.RECEIPTMODE PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T1.REFWAIVERAMT,        
					T1.SOURCE,             
					T1.VALUEDATE,           
					T1.TRANSACTIONREF,      
					T1.DEPOSITDATE,         
					T1.PARTNERBANKID FUNDINGAC,       
					T1.PRVRECEIPTPURPOSE,   
					T1.RECEIPTSOURCE,       
					T1.RECAPPDATE,          
					T1.RECEIVEDDATE
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					WHERE NOT EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.14_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'receiptdetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.15_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'receiptdetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.15" author="Gopal.p">
		<createView viewName="RECEIPTDETAILS_TVIEW" replaceIfExists="true">
		<![CDATA[
			SELECT T4.CUSTCIF,
			    T1.REFERENCE,
			    T3.FINTYPE,
			    T1.RECEIPTID,
			    T1.RECEIPTDATE,
			    T1.RECEIPTAMOUNT,
			    T1.BANKCODE,
			        CASE
			            WHEN T1.RECEIPTPURPOSE = 'EARLYPAYMENT' THEN 'PARTIAL PAYMENT'
			            ELSE T1.RECEIPTPURPOSE
			        END AS RECEIPTPURPOSE,
			    T1.RECEIPTMODE,
			    T1.BOUNCEDATE AS CANCELDATE,
			    T2.PAYAGAINSTID,
			    T1.BOUNCEDATE,
			    T1.REALIZATIONDATE,
			    T1.CANCELREASON,
			    T3.CLOSINGSTATUS,
			    T3.FINBRANCH,
			    T3.FINCURRASSETVALUE,
			    T3.PRODUCTCATEGORY,
			    T6.PARTNERBANKCODE,
			    T1.VERSION,
			    T1.LASTMNTBY,
			    T1.LASTMNTON,
			    T1.RECORDSTATUS,
			    T1.ROLECODE,
			    T1.NEXTROLECODE,
			    T1.TASKID,
			    T1.NEXTTASKID,
			    T1.RECORDTYPE,
			    T1.WORKFLOWID,
			    T5.ROLEDESC AS LOVDESCREQUESTSTAGE,
			    T1.RECEIPTMODE PAYMENTTYPE,
			    T1.RECEIPTMODESTATUS,
			    T1.ACTFINRECEIPT,
				T1.REFWAIVERAMT,        
				T1.SOURCE,             
				T1.VALUEDATE,           
				T1.TRANSACTIONREF,      
				T1.DEPOSITDATE,         
				T1.PARTNERBANKID FUNDINGAC,       
				T1.PRVRECEIPTPURPOSE,   
				T1.RECEIPTSOURCE,       
				T1.RECAPPDATE,          
				T1.RECEIVEDDATE
			   FROM FINRECEIPTHEADER_TEMP T1
			     LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
			     LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
			     LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
			     JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
			     LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.15_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'receiptdetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.16_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'foreclosure_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.16" author="Gopal.p">
		<createView viewName="FORECLOSURE_TVIEW" replaceIfExists="true">
		<![CDATA[
			SELECT T3.CUSTCIF,
					T1.REFERENCE,
					T2.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T1.RECEIPTPURPOSE,
					T2.FINBRANCH,
					T2.FINCURRASSETVALUE,
					T2.PRODUCTCATEGORY,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T4.ROLEDESC LOVDESCREQUESTSTAGE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T1.RECEIVEDDATE
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINANCEMAIN T2 ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					INNER JOIN SECROLES T4 ON T1.NEXTROLECODE = T4.ROLECD
					]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.16_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'foreclosure_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.17_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'receipt_realization_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.17" author="Gopal.p">
		<createView viewName="RECEIPT_REALIZATION_VIEW" replaceIfExists="true">
		<![CDATA[
			SELECT T4.CUSTCIF,
			    T1.REFERENCE,
			    T3.FINTYPE,
			    T1.RECEIPTID,
			    T1.RECEIPTDATE,
			    T1.RECEIPTAMOUNT,
			    T1.DEPOSITDATE,
			    T1.BANKCODE,
			        CASE
			            WHEN T1.RECEIPTPURPOSE = 'EARLYPAYMENT' THEN 'PARTIAL PAYMENT'
			            ELSE T1.RECEIPTPURPOSE
			        END AS RECEIPTPURPOSE,
			    T1.RECEIPTMODE,
			    T1.BOUNCEDATE AS CANCELDATE,
			    T1.VALUEDATE,
			    T2.PAYAGAINSTID,
			    T1.BOUNCEDATE,
			    T1.REALIZATIONDATE,
			    T1.CANCELREASON,
			    T3.CLOSINGSTATUS,
			    T3.FINBRANCH,
			    T3.FINCURRASSETVALUE,
			    T3.PRODUCTCATEGORY,
			    T6.PARTNERBANKCODE,
			    T1.TRANSACTIONREF,
			    T1.PARTNERBANKID FUNDINGAC,
			    T1.VERSION,
			    T1.LASTMNTBY,
			    T1.LASTMNTON,
			    T1.RECORDSTATUS,
			    T1.ROLECODE,
			    T1.NEXTROLECODE,
			    T1.TASKID,
			    T1.NEXTTASKID,
			    T1.RECORDTYPE,
			    T1.WORKFLOWID,
			    T5.ROLEDESC AS LOVDESCREQUESTSTAGE,
			    T1.RECEIPTMODE PAYMENTTYPE,
			    T1.RECEIPTMODESTATUS,
			    T1.ACTFINRECEIPT,
				T1.RECEIVEDDATE
			   FROM FINRECEIPTHEADER_TEMP T1
			     LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
			     LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
			     LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
			     LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
			     LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
			UNION ALL
			 SELECT T4.CUSTCIF,
			    T1.REFERENCE,
			    T3.FINTYPE,
			    T1.RECEIPTID,
			    T1.RECEIPTDATE,
			    T1.RECEIPTAMOUNT,
			    T1.DEPOSITDATE,
			    T1.BANKCODE,
			        CASE
			            WHEN T1.RECEIPTPURPOSE = 'EARLYPAYMENT' THEN 'PARTIAL PAYMENT'
			            ELSE T1.RECEIPTPURPOSE
			        END AS RECEIPTPURPOSE,
			    T1.RECEIPTMODE,
			    T1.BOUNCEDATE AS CANCELDATE,
			    T1.VALUEDATE,
			    T2.PAYAGAINSTID,
			    T1.BOUNCEDATE,
			    T1.REALIZATIONDATE,
			    T1.CANCELREASON,
			    T3.CLOSINGSTATUS,
			    T3.FINBRANCH,
			    T3.FINCURRASSETVALUE,
			    T3.PRODUCTCATEGORY,
			    T6.PARTNERBANKCODE,
			    T1.TRANSACTIONREF,
			    T1.PARTNERBANKID FUNDINGAC,
			    T1.VERSION,
			    T1.LASTMNTBY,
			    T1.LASTMNTON,
			    T1.RECORDSTATUS,
			    T1.ROLECODE,
			    T1.NEXTROLECODE,
			    T1.TASKID,
			    T1.NEXTTASKID,
			    T1.RECORDTYPE,
			    T1.WORKFLOWID,
			    T5.ROLEDESC AS LOVDESCREQUESTSTAGE,
			    T1.RECEIPTMODE PAYMENTTYPE,
			    T1.RECEIPTMODESTATUS,
			    T1.ACTFINRECEIPT,
				T1.RECEIVEDDATE
			   FROM FINRECEIPTHEADER T1
			     LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
			     LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
			     LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
			     LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
			     LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM FINRECEIPTHEADER_TEMP
			          WHERE FINRECEIPTHEADER_TEMP.RECEIPTID = T1.RECEIPTID))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1407.17_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'receipt_realization_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.18" author="Gopal.p" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO FinReceiptHeader_Temp RH
	            USING(SELECT distinct T2.RECEIPTID, 0 REFWAIVERAMT, 'PLF' SOURCE, VALUEDATE, 
	            (CASE
                WHEN PAYMENTTYPE = 'DD' THEN FAVOURNUMBER
                WHEN PAYMENTTYPE = 'CHEQUE' THEN FAVOURNUMBER
                ELSE TRANSACTIONREF
                END) TRANSACTIONREF, DEPOSITDATE, FUNDINGAC PARTNERBANKID, VALUEDATE RECAPPDATE, RECEIVEDDATE, BANKCODE
	             FROM FinReceiptDetail_Temp T2
	              INNER JOIN (Select max(receiptseqid) receiptseqid, RECEIPTID from FinReceiptDetail_Temp group by RECEIPTID) T1
	            ON (T1.receiptseqid = T2.receiptseqid)
	            ) RD ON (RD.RECEIPTID = RH.RECEIPTID)
	            WHEN MATCHED THEN UPDATE SET 
	            REFWAIVERAMT = RD.REFWAIVERAMT
	            , SOURCE = RD.SOURCE
	            , VALUEDATE = RD.VALUEDATE
	            , TRANSACTIONREF = RD.TRANSACTIONREF
	            , DEPOSITDATE = RD.DEPOSITDATE
	            , PARTNERBANKID = RD.PARTNERBANKID
	            , RECAPPDATE = RD.RECAPPDATE
	            , RECEIVEDDATE = RD.RECEIVEDDATE
	            , BANKCODE = RD.BANKCODE;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.19" author="Gopal.p" dbms="oracle">
		<sql>
			<![CDATA[
				MERGE INTO FinReceiptHeader RH
	            USING(SELECT distinct T2.RECEIPTID, 0 REFWAIVERAMT, 'PLF' SOURCE, VALUEDATE, 
	            (CASE
                WHEN PAYMENTTYPE = 'DD' THEN FAVOURNUMBER
                WHEN PAYMENTTYPE = 'CHEQUE' THEN FAVOURNUMBER
                ELSE TRANSACTIONREF
                END) TRANSACTIONREF, DEPOSITDATE, FUNDINGAC PARTNERBANKID, VALUEDATE RECAPPDATE, RECEIVEDDATE, BANKCODE
	             FROM FinReceiptDetail T2
	              INNER JOIN (Select max(receiptseqid) receiptseqid, RECEIPTID from FinReceiptDetail group by RECEIPTID) T1
	            ON (T1.receiptseqid = T2.receiptseqid)
	            ) RD ON (RD.RECEIPTID = RH.RECEIPTID)
	            WHEN MATCHED THEN UPDATE SET 
	            REFWAIVERAMT = RD.REFWAIVERAMT
	            , SOURCE = RD.SOURCE
	            , VALUEDATE = RD.VALUEDATE
	            , TRANSACTIONREF = RD.TRANSACTIONREF
	            , DEPOSITDATE = RD.DEPOSITDATE
	            , PARTNERBANKID = RD.PARTNERBANKID
	            , RECAPPDATE = RD.RECAPPDATE
	            , RECEIVEDDATE = RD.RECEIVEDDATE
	            , BANKCODE = RD.BANKCODE;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.18" author="Gopal.p" dbms="mssql">
		<sql>
			<![CDATA[
				UPDATE RH set RH.REFWAIVERAMT = 0
						, RH.SOURCE = 'PLF'
						, RH.VALUEDATE = RD.VALUEDATE
						, RH.TRANSACTIONREF = (CASE
	               				 WHEN RD.PAYMENTTYPE = 'DD' THEN RD.FAVOURNUMBER
	                			 WHEN RD.PAYMENTTYPE = 'CHEQUE' THEN RD.FAVOURNUMBER
	               				 ELSE RD.TRANSACTIONREF END)
						, RH.DEPOSITDATE = RD.DEPOSITDATE
						, RH.PARTNERBANKID = RD.FUNDINGAC
						, RH.RECAPPDATE = RD.VALUEDATE
						, RH.RECEIVEDDATE = RD.RECEIVEDDATE
						, RH.BANKCODE = RD.BANKCODE
					From FinReceiptHeader_Temp RH 
					INNER JOIN FinReceiptDetail_Temp RD on RD.RECEIPTID = RH.RECEIPTID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.19" author="Gopal.p" dbms="mssql">
		<sql>
			<![CDATA[
				UPDATE RH set RH.REFWAIVERAMT = 0
						, RH.SOURCE = 'PLF'
						, RH.VALUEDATE = RD.VALUEDATE
						, RH.TRANSACTIONREF = (CASE
	               				 WHEN RD.PAYMENTTYPE = 'DD' THEN RD.FAVOURNUMBER
	                			 WHEN RD.PAYMENTTYPE = 'CHEQUE' THEN RD.FAVOURNUMBER
	               				 ELSE RD.TRANSACTIONREF END )
						, RH.DEPOSITDATE = RD.DEPOSITDATE
						, RH.PARTNERBANKID = RD.FUNDINGAC
						, RH.RECAPPDATE = RD.VALUEDATE
						, RH.RECEIVEDDATE = RD.RECEIVEDDATE
						, RH.BANKCODE = RD.BANKCODE
					From FinReceiptHeader RH 
					INNER JOIN FinReceiptDetail RD on RD.RECEIPTID = RH.RECEIPTID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.18.1" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				UPDATE FinReceiptHeader_Temp set REFWAIVERAMT = 0
						, SOURCE = 'PLF'
						, VALUEDATE = RD.VALUEDATE
						, TRANSACTIONREF = (CASE
               				 WHEN RD.PAYMENTTYPE = 'DD' THEN RD.FAVOURNUMBER
                			 WHEN RD.PAYMENTTYPE = 'CHEQUE' THEN RD.FAVOURNUMBER
               				 ELSE RD.TRANSACTIONREF END)
						, DEPOSITDATE = RD.DEPOSITDATE
						, PARTNERBANKID = RD.FUNDINGAC
						, RECAPPDATE = RD.VALUEDATE
						, RECEIVEDDATE = RD.RECEIVEDDATE
						, BANKCODE = RD.BANKCODE
					From FinReceiptDetail_Temp RD 
					Where FinReceiptHeader_Temp.RECEIPTID = RD.RECEIPTID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1407.19.1" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				UPDATE FinReceiptHeader set REFWAIVERAMT = 0
						, SOURCE = 'PLF'
						, VALUEDATE = RD.VALUEDATE
						, TRANSACTIONREF = (CASE
	               			 WHEN RD.PAYMENTTYPE = 'DD' THEN RD.FAVOURNUMBER
	               			 WHEN RD.PAYMENTTYPE = 'CHEQUE' THEN RD.FAVOURNUMBER
	               			 ELSE RD.TRANSACTIONREF END)
						, DEPOSITDATE = RD.DEPOSITDATE
						, PARTNERBANKID = RD.FUNDINGAC
						, RECAPPDATE = RD.VALUEDATE
						, RECEIVEDDATE = RD.RECEIVEDDATE
						, BANKCODE = RD.BANKCODE
					From FinReceiptDetail RD 
					Where FinReceiptHeader.RECEIPTID = RD.RECEIPTID;
			]]>
		</sql>
	</changeSet>
	
	<!-- ST#1407 : Moving Columns from Receipt Details to Receipt Header end -->
	
	<changeSet id="ST#1428" author="Saikrishna.k">
		<sql>
			<![CDATA[
				DELETE FROM SECGROUPRIGHTS WHERE GRPID IN (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'FIN_RECEIPT_ENQUIRY');
				DELETE FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Receipts_enquiry';
				DELETE FROM SECGROUPS WHERE GRPcode='FIN_RECEIPT_ENQUIRY';
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS_VIEW);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS_VIEW);
				UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES_VIEW);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS_VIEW);
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Receipts_enquiry','MENU',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				Insert into SECGROUPS Values ((Select MAX(GrpID)+1 From SecGroups_view), 'FIN_RECEIPT_ENQUIRY','WORK FLOW FOR ENQUIRY', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL,	NULL, NULL, NULL,0);
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS
				WHERE GRPCODE='FIN_RECEIPT_ENQUIRY') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Receipts_enquiry'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS_VIEW);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS_VIEW);
				UPDATE SEQSECROLES SET SEQNO= (SELECT MAX(ROLEID) FROM SECROLES_VIEW);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS_VIEW);	
 			 ]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#105" author="Gopalaswamy.M">
		<sql>
			 <![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE = 'GST_TAX_DOWNLOAD_DAILY';
				INSERT INTO SMTPARAMETERS (SYSPARMCODE, SYSPARMDESC, SYSPARMTYPE, SYSPARMMAINT, SYSPARMVALUE, SYSPARMLENGTH, SYSPARMDEC, SYSPARMLIST, SYSPARMVALDMOD, SYSPARMDESCRIPTION, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('GST_TAX_DOWNLOAD_DAILY', 'Allow GST Tax Download Daily', 'String', 1, 'N', 1, 0, null, null, 'Allow GST Tax Download Daily', 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0);
			 ]]>
		</sql>
	</changeSet>
	
	<changeSet id="195" author="Gopalaswamy.M">
		<sql>
			 <![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE = 'EOD_INTERVAL_TIME';
				INSERT INTO SMTPARAMETERS (SYSPARMCODE, SYSPARMDESC, SYSPARMTYPE, SYSPARMMAINT, SYSPARMVALUE, SYSPARMLENGTH, SYSPARMDEC, SYSPARMLIST, SYSPARMVALDMOD, SYSPARMDESCRIPTION, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('EOD_INTERVAL_TIME', 'Allow consecutive eod only after eod interval time.', 'String', 1, '20', 2, 0, null, null, 'Allow consecutive eod only after eod interval time.', 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0);
			 ]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#60" author="saisandeep.b">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE ALLOWEDEVENT = 'PAYMTINS' and AMOUNTCODE = 'pi_advInst';
				INSERT INTO BMTAMOUNTCODES VALUES ('PAYMTINS', 0, 'pi_advInst', 'Advance Inst Amount', '1', 1, 1005, current_timestamp, 'Approved', null, null, null, null, null, 0);
			]]>
		</sql>
	</changeSet>
	
		<changeSet id="ST#1520.1_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'limitheader_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1520.1" author="vijaya.a">
		<createView viewName="LIMITHEADER_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE,
					T1.BLOCKLIMIT
				 FROM LIMITHEADER T1
				 JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
				 LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
				 LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
				 LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
				 LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
				 LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
				 LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1520.1_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'limitheader_aview');
			]]>
		</sql>
	</changeSet>
	
	
	<changeSet id="ST#1520.2_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'limitheader_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1520.2" author="vijaya.a">
		<createView viewName="LIMITHEADER_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE,
                    T1.BLOCKLIMIT
				FROM LIMITHEADER_TEMP T1
				JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
				LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
				LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
				LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
				LEFT JOIN RMTBRANCHES T9  ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
				LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
				LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
				UNION ALL
				SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE,
					T1.BLOCKLIMIT
				FROM LIMITHEADER T1
				JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
				LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
				LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
				LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
				LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
				LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
				LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
				WHERE NOT (EXISTS (SELECT 1 FROM LIMITHEADER_TEMP
					WHERE LIMITHEADER_TEMP.HEADERID = T1.HEADERID
					))
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1520.2_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'limitheader_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#1520.3_pre" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'limitheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#1520.3" author="vijaya.a">
		<createView viewName="LIMITHEADER_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.HEADERID,
					T1.RULECODE,
					T1.RULEVALUE,
					T8.QUERYDESC,
					T1.CUSTOMERGROUP,
					T3.CUSTGRPCODE,
					T3.CUSTGRPDESC AS GROUPNAME,
					T3.CUSTGRPRO1,
					T1.CUSTOMERID,
					T4.CUSTCIF,
					T4.CUSTSHRTNAME,
					T4.CUSTFNAME,
					T4.CUSTMNAME,
					T4.CUSTLNAME AS CUSTFULLNAME,
					T4.CUSTCOREBANK,
					T4.CUSTSALUTATIONCODE,
					T4.CUSTDFTBRANCH,
					T9.BRANCHDESC AS CUSTDFTBRANCHNAME,
					T1.RESPONSIBLEBRANCH,
					T5.BRANCHDESC AS RESPONSIBLEBRANCHNAME,
					T1.LIMITCCY,
					T1.LIMITEXPIRYDATE,
					T1.LIMITRVWDATE,
					T1.LIMITSTRUCTURECODE,
					T6.STRUCTURENAME,
					T6.SHOWLIMITSIN,
					T1.LIMITSETUPREMARKS,
					T1.REBUILD,
					T1.ACTIVE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.VALIDATEMATURITYDATE,
					T1.BLOCKLIMIT
				FROM LIMITHEADER_TEMP T1
				JOIN LIMITSTRUCTURE T6 ON T1.LIMITSTRUCTURECODE = T6.STRUCTURECODE
				LEFT JOIN RMTBRANCHES T5 ON T1.RESPONSIBLEBRANCH = T5.BRANCHCODE
				LEFT JOIN CUSTOMERGROUPS T3 ON T1.CUSTOMERGROUP = T3.CUSTGRPID
				LEFT JOIN CUSTOMERS T4 ON T1.CUSTOMERID = T4.CUSTID
				LEFT JOIN RMTBRANCHES T9 ON T9.BRANCHCODE = T4.CUSTDFTBRANCH
				LEFT JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
				LEFT JOIN LIMITPARAMS T8 ON T1.RULECODE = T8.QUERYCODE
			]]>
		</createView>
	</changeSet>

	<changeSet id="ST#1520.3_post" author="vijaya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'limitheader_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="PSD#157148.1" author="naga.g">
		<addColumn tableName="PaymentInstructions_Temp">
			<column name="REJECTREASON" type="VARCHAR2(200)" />
		</addColumn>
   </changeSet>

   <changeSet id="PSD#157148.2_pre" author="naga.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'paymentinstructions_view');
			]]>
		</sql>
	</changeSet>
	
   <changeSet id="PSD#157148.2" author="naga.g">
		<createView viewName="PAYMENTINSTRUCTIONS_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.PAYMENTINSTRUCTIONID,
					T1.PAYMENTID,
					T1.PAYMENTTYPE,
					T1.PAYMENTAMOUNT,
					T1.REMARKS,
					T1.PARTNERBANKID,
					T1.ISSUINGBANK,
					T1.FAVOURNAME,
					T1.FAVOURNUMBER,
					T1.PAYABLELOC,
					T1.PRINTINGLOC,
					T1.VALUEDATE,
					T1.POSTDATE,
					T1.BANKBRANCHID,
					T1.ACCTHOLDERNAME,
					T1.ACCOUNTNO,
					T1.PHONECOUNTRYCODE,
					T1.PHONENUMBER,
					T1.CLEARINGDATE,
					T1.ACTIVE,
					T1.PAYMENTCCY,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.STATUS,
					T1.TRANSACTIONREF,
					T5.PARTNERBANKCODE,
					T5.PARTNERBANKNAME,
					T3.BANKCODE BRANCHBANKCODE,
					T3.BRANCHCODE BANKBRANCHCODE,
					T3.IFSC BANKBRANCHIFSC,
					T3.CITY,
					T4.BANKNAME ISSUINGBANKNAME,
					T6.PCCITYNAME,
					T3.BRANCHDESC,
					T2.BANKNAME,
					T5.ACCOUNTNO PARTNERBANKAC,
					T5.ACTYPE PARTNERBANKACTYPE,
					T1.REJECTREASON
				FROM PAYMENTINSTRUCTIONS_TEMP T1
				LEFT JOIN BANKBRANCHES T3 ON T1.BANKBRANCHID = T3.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL T2 ON T2.BANKCODE = T3.BANKCODE
				LEFT JOIN BMTBANKDETAIL T4 ON T1.ISSUINGBANK = T4.BANKCODE
				LEFT JOIN PARTNERBANKS T5 ON T5.PARTNERBANKID = T1.PARTNERBANKID
				LEFT JOIN RMTPROVINCEVSCITY T6 ON T6.PCCITY = T3.CITY
				UNION ALL
				SELECT T1.PAYMENTINSTRUCTIONID,
					T1.PAYMENTID,
					T1.PAYMENTTYPE,
					T1.PAYMENTAMOUNT,
					T1.REMARKS,
					T1.PARTNERBANKID,
					T1.ISSUINGBANK,
					T1.FAVOURNAME,
					T1.FAVOURNUMBER,
					T1.PAYABLELOC,
					T1.PRINTINGLOC,
					T1.VALUEDATE,
					T1.POSTDATE,
					T1.BANKBRANCHID,
					T1.ACCTHOLDERNAME,
					T1.ACCOUNTNO,
					T1.PHONECOUNTRYCODE,
					T1.PHONENUMBER,
					T1.CLEARINGDATE,
					T1.ACTIVE,
					T1.PAYMENTCCY,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.STATUS,
					T1.TRANSACTIONREF,
					T5.PARTNERBANKCODE,
					T5.PARTNERBANKNAME,
					T3.BANKCODE BRANCHBANKCODE,
					T3.BRANCHCODE BANKBRANCHCODE,
					T3.IFSC BANKBRANCHIFSC,
					T3.CITY,
					T4.BANKNAME ISSUINGBANKNAME,
					T6.PCCITYNAME,
					T3.BRANCHDESC,
					T2.BANKNAME,
					T5.ACCOUNTNO PARTNERBANKAC,
					T5.ACTYPE PARTNERBANKACTYPE,
					T1.REJECTREASON
				FROM PAYMENTINSTRUCTIONS T1
				LEFT JOIN BANKBRANCHES T3 ON T1.BANKBRANCHID = T3.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL T2 ON T2.BANKCODE = T3.BANKCODE
				LEFT JOIN BMTBANKDETAIL T4 ON T1.ISSUINGBANK = T4.BANKCODE
				LEFT JOIN PARTNERBANKS T5 ON T5.PARTNERBANKID = T1.PARTNERBANKID
				LEFT JOIN RMTPROVINCEVSCITY T6 ON T6.PCCITY = T3.CITY
				WHERE NOT (EXISTS ( SELECT 1 FROM PAYMENTINSTRUCTIONS_TEMP
						WHERE PAYMENTINSTRUCTIONS_TEMP.PAYMENTINSTRUCTIONID = T1.PAYMENTINSTRUCTIONID))
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="PSD#157148.2_post" author="naga.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'paymentinstructions_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="PSD#157148.3_pre" author="naga.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'paymentinstructions_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="PSD#157148.3" author="naga.g">
		<createView viewName="PAYMENTINSTRUCTIONS_AVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.PAYMENTINSTRUCTIONID,
					T1.PAYMENTID,
					T1.PAYMENTTYPE,
					T1.PAYMENTAMOUNT,
					T1.REMARKS,
					T1.PARTNERBANKID,
					T1.ISSUINGBANK,
					T1.FAVOURNAME,
					T1.FAVOURNUMBER,
					T1.PAYABLELOC,
					T1.PRINTINGLOC,
					T1.VALUEDATE,
					T1.POSTDATE,
					T1.BANKBRANCHID,
					T1.ACCTHOLDERNAME,
					T1.ACCOUNTNO,
					T1.PHONECOUNTRYCODE,
					T1.PHONENUMBER,
					T1.CLEARINGDATE,
					T1.ACTIVE,
					T1.PAYMENTCCY,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.STATUS,
					T1.TRANSACTIONREF,
					T5.PARTNERBANKCODE,
					T5.PARTNERBANKNAME,
					T3.BANKCODE BRANCHBANKCODE,
					T3.BRANCHCODE BANKBRANCHCODE,
					T3.IFSC BANKBRANCHIFSC,
					T3.CITY,
					T4.BANKNAME ISSUINGBANKNAME,
					T6.PCCITYNAME,
					T3.BRANCHDESC,
					T2.BANKNAME,
					T5.ACCOUNTNO PARTNERBANKAC,
					T5.ACTYPE PARTNERBANKACTYPE,
					T1.REJECTREASON
				FROM PAYMENTINSTRUCTIONS T1
				LEFT JOIN BANKBRANCHES T3 ON T1.BANKBRANCHID = T3.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL T2 ON T2.BANKCODE = T3.BANKCODE
				LEFT JOIN BMTBANKDETAIL T4 ON T1.ISSUINGBANK = T4.BANKCODE
				LEFT JOIN PARTNERBANKS T5 ON T5.PARTNERBANKID = T1.PARTNERBANKID
				LEFT JOIN RMTPROVINCEVSCITY T6 ON T6.PCCITY = T3.CITY
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="PSD#157148.3_post" author="naga.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'paymentinstructions_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#68" author="Vijaya.a" >
		<modifyDataType tableName="PRESENTMENT_REQ_DETAILS" columnName="BANK_ADDRESS" newDataType="VARCHAR(200)" />
	</changeSet>

	<changeSet id="DE#69" author="Vijaya.a" >
		<modifyDataType tableName="DISBURSEMENT_REQUESTS" columnName="BENFICIARY_ADDRESS1" newDataType="VARCHAR(500)" />
	</changeSet>
		
	<changeSet id="DE#70" author="Vijaya.a" >
		<modifyDataType tableName="MANDATE_RESPONSE" columnName="ACCT_HOLDER_NAME" newDataType="VARCHAR(100)" />
	</changeSet>
	
	<changeSet id="DE#79" author="Vijaya.a" >
		<modifyDataType tableName="MANDATE_REQUESTS" columnName="ACCT_HOLDER_NAME" newDataType="VARCHAR(100)" />
	</changeSet>
	
	<changeSet id="ST#147.1" author="Saikrishna.K">
		<sql>
			<![CDATA[
				DELETE FROM ERRORDETAILS WHERE Code = 'RU0099';
				INSERT INTO ERRORDETAILS VALUES ('RU0099', 'EN', 'E', ' EarlySettlement Date: {0} can not be before latest waiver date: {1}', null, 'Approved', null, null, null, null, null, 0, null, 1000, 0);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#147" author="DurgaPrasad G">
		<sql>
			<![CDATA[
				DELETE FROM ErrorDetails WHERE CODE='RU0098';
				INSERT INTO ErrorDetails (CODE, LANGUAGE, SEVERITY, MESSAGE, EXTENDEDMESSAGE, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, LASTMNTON, LASTMNTBY, VERSION) VALUES('RU0098', 'EN', 'E', 'Early Settlement date cannot be before latest waiver date.', '', 'Approved', '', '', '', '', '', 0, current_timestamp, 1000, 0);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="PSD#162966.1" author="aditya.a">
		<addColumn tableName="DISBURSEMENT_REQUESTS">
			<column name="TRANSACTION_TYPE_CODE" type="VARCHAR(20)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="PSD#162966.2_pre" author="aditya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'int_disbursement_request_view');
		 	]]>
		</sql>
	</changeSet>

	<changeSet id="PSD#162966.2" author="aditya.a">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT FA.PAYMENTID,
				FA.FINREFERENCE,
				'D' CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN FA.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN FA.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN
				FA.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				WHEN FA.PAYMENTTYPE = 'IFT'
				THEN 'I'
				ELSE FA.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				FA.AMTTOBERELEASED,
				FA.DISBDATE,
				FA.LLDATE,
				FA.PAYABLELOC,
				FA.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				FA.BENEFICIARYACCNO,
				CASE
				WHEN FA.PAYMENTTYPE = 'CHEQUE'
				OR FA.PAYMENTTYPE = 'DD'
				THEN
				FA.LIABILITYHOLDNAME
				ELSE FA.BENEFICIARYNAME
				END BENEFICIARYNAME,
				(FA.PHONECOUNTRYCODE ${call.concatenate} FA.PHONEAREACODE) ${call.concatenate} FA.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				BRCA.CustAddrHNbr ${call.concatenate}','${call.concatenate} BRCA.CustAddrStreet ${call.concatenate}','${call.concatenate} BRC.PCCITYNAME ${call.concatenate}','${call.concatenate} BRS.CPPROVINCENAME  BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				FA.STATUS,
				FA.DESCRIPTION REMARKS,
				FA.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID
				PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				FA.INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				CASE WHEN FA.PAYMENTTYPE = 'NEFT' OR FA.PAYMENTTYPE   = 'RTGS' THEN 'LBT'
				WHEN FA.PAYMENTTYPE = 'IMPS' THEN 'BT' ELSE ''
			  		END TRANSACTION_TYPE_CODE
				FROM FINADVANCEPAYMENTS FA
				JOIN
				(SELECT FINANCEMAIN_TEMP.CUSTID,
				FINANCEMAIN_TEMP.FINREFERENCE,
				FINANCEMAIN_TEMP.FINTYPE,
				FINANCEMAIN_TEMP.FINISACTIVE
				FROM FINANCEMAIN_TEMP
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM
				ON FM.FINREFERENCE = FA.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID	
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE	= FA.DISBCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE	ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID	AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE =	BB.BANKCODE
				LEFT JOIN ( SELECT PB_1.PARTNERBANKID,	
				PBD_1.BANKNAME,
				PBB.BRANCHDESC,
				PBBRC.PCCITYNAME,
				PBBRS.CPPROVINCENAME FROM PARTNERBANKS PB_1
				JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE
				JOIN BMTBANKDETAIL PBD_1 ON PBD_1.BANKCODE = PBB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE
				) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND
				BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID
				AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES	BRCA ON	BRCA.CUSTID = BR.CUSTID
				AND BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE FA.STATUS = 'APPROVED' AND NOT (FA.PAYMENTID IN ( 
				SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
				AND NOT	(FA.PAYMENTID IN ( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP))
				UNION ALL
				SELECT
				PI.PAYMENTINSTRUCTIONID PAYMENTID,
				PH.FINREFERENCE,
				PH.PAYMENTTYPE CHANNEL,
				0 PROVIDERID,
				CASE
				WHEN PI.PAYMENTTYPE =
				'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				WHEN PI.PAYMENTTYPE = 'IFT'
				THEN 'I'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.POSTDATE
				DISBDATE,
				PI.POSTDATE LLDATE,
				PI.PAYABLELOC,
				PI.PRINTINGLOC,
				CU.CUSTCIF,
				CU.CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				CE.CUSTEMAIL
				CUSTOMER_EMAIL,
				CS.CPPROVINCENAME CUSTOMER_STATE,
				CC.PCCITYNAME CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				PI.ACCOUNTNO BENEFICIARYACCNO,
				CASE
				WHEN PI.PAYMENTTYPE = 'CHEQUE'
				OR PI.PAYMENTTYPE = 'DD'
				THEN
				PI.FAVOURNAME
				ELSE PI.ACCTHOLDERNAME
				END BENEFICIARYNAME,
				PI.PHONECOUNTRYCODE ${call.concatenate} PI.PHONENUMBER BENEFICIARY_MOBILE,
				BCE.CUSTEMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				'' BENFICIARY_ADDRESS1,
				'' BENFICIARY_ADDRESS2,
				'' BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				FM.FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE
				PARTNERBANK_CODE,
				PI.POSTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				FM.FINISACTIVE,
				SMD.ENTITYCODE,
				PB.ACCOUNTNO
				PARTNERBANK_ACCOUNTNO,
				CASE WHEN PI.PAYMENTTYPE = 'NEFT' OR PI.PAYMENTTYPE   = 'RTGS' THEN 'LBT'
					WHEN PI.PAYMENTTYPE = 'IMPS' THEN 'BT' ELSE '' 
					END TRANSACTION_TYPE_CODE
				FROM PAYMENTINSTRUCTIONS PI
				JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
				JOIN (SELECT
				FINANCEMAIN.CUSTID,
				FINANCEMAIN.FINREFERENCE,
				FINANCEMAIN.FINTYPE,
				FINANCEMAIN.FINISACTIVE
				FROM FINANCEMAIN
				UNION ALL
				SELECT T2.CUSTID,
				T2.FINREFERENCE,
				T2.FINTYPE,
				T2.FINISACTIVE
				FROM FINANCEMAIN_TEMP T2
				WHERE NOT (EXISTS
				( SELECT 1 FROM
				FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE))) FM ON FM.FINREFERENCE = PH.FINREFERENCE
				JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
				LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID
				AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY	BBRC ON BBRC.PCCITY = BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID
				AND BR.ACCNUMBER = PI.ACCOUNTNO	AND BR.CUSTID = FM.CUSTID
				LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				LEFT JOIN CUSTOMEREMAILS BCE ON	BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID	AND	BRCA.CUSTADDRPRIORITY = 5
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY = BRCA.CUSTADDRCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				LEFT JOIN RMTFINANCETYPES RFT ON FM.FINTYPE = RFT.FINTYPE
				LEFT JOIN SMTDIVISIONDETAIL SMD	ON RFT.FINDIVISION = SMD.DIVISIONCODE
				WHERE PI.STATUS = 'APPROVED'
				AND NOT
				(PI.PAYMENTINSTRUCTIONID IN
				( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
				DISBURSEMENT_REQUESTS
				))
				UNION ALL
				SELECT PI.ID PAYMENTID,
				VR.PRIMARYLINKREF FINREFERENCE,
				'I' CHANNEL,
				PI.PROVIDERID,
				CASE
				WHEN
				PI.PAYMENTTYPE = 'NEFT'
				THEN 'N'
				WHEN PI.PAYMENTTYPE = 'RTGS'
				THEN 'R'
				WHEN PI.PAYMENTTYPE = 'DD'
				THEN 'D'
				WHEN
				PI.PAYMENTTYPE = 'CHEQUE'
				THEN 'C'
				WHEN PI.PAYMENTTYPE = 'IFT'
				THEN 'I'
				ELSE PI.PAYMENTTYPE
				END DISBURSEMENT_TYPE,
				PI.PAYMENTAMOUNT  AMTTOBERELEASED,
				PI.PAYMENTDATE DISBDATE,
				PI.PAYMENTDATE LLDATE,
				'' PAYABLELOC,
				'' PRINTINGLOC,
				'' CUSTCIF,
				'' CUSTSHRTNAME,
				'' CUSTOMER_MOBILE,
				'' CUSTOMER_EMAIL,
				'' CUSTOMER_STATE,
				'' CUSTOMER_CITY,
				'' CUSTOMER_ADDRESS1,
				'' CUSTOMER_ADDRESS2,
				'' CUSTOMER_ADDRESS3,
				'' CUSTOMER_ADDRESS4,
				'' CUSTOMER_ADDRESS5,
				BD.BANKNAME,
				BB.BRANCHCODE,
				BB.BRANCHDESC,
				BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
				BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
				BB.MICR MICR_CODE,
				BB.IFSC IFSC_CODE,
				VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
				AVD.DEALERNAME BENEFICIARYNAME,
				AVD.DEALERTELEPHONE
				BENEFICIARY_MOBILE,
				AVD.EMAIL BENFICIRY_EMAIL,
				BRS.CPPROVINCENAME BENFICIARY_STATE,
				BRC.PCCITYNAME BENFICIARY_CITY,
				AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
				AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
				AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
				'' BENFICIARY_ADDRESS4,
				'' BENFICIARY_ADDRESS5,
				'' PAYMENT_DETAIL1,
				'' PAYMENT_DETAIL2,
				'' PAYMENT_DETAIL3,
				'' PAYMENT_DETAIL4,
				'' PAYMENT_DETAIL5,
				'' PAYMENT_DETAIL6,
				'' PAYMENT_DETAIL7,
				PI.STATUS,
				PI.REMARKS,
				PI.PAYMENTTYPE,
				'' FINTYPE,
				PB.PARTNERBANKID PARTNERBANK_ID,
				PB.PARTNERBANKCODE PARTNERBANK_CODE,
				PI.PAYMENTDATE INPUTDATE,
				PB.ALWFILEDOWNLOAD,
				PB.FILENAME,
				1 FINISACTIVE,
				PI.ENTITYCODE,
				PB.ACCOUNTNO PARTNERBANK_ACCOUNT,
				CASE WHEN PI.PAYMENTTYPE = 'NEFT' OR PI.PAYMENTTYPE   = 'RTGS' THEN 'LBT'
				WHEN PI.PAYMENTTYPE = 'IMPS' THEN 'BT' ELSE ''
			  		END TRANSACTION_TYPE_CODE
				FROM INSURANCEPAYMENTINSTRUCTIONS PI
				JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				JOIN PARTNERBANKS PB ON	PB.PARTNERBANKID = PI.PARTNERBANKID
				JOIN VASPROVIDERACCDETAIL VPA ON VPA.PROVIDERID = PI.PROVIDERID
				JOIN AMTVEHICLEDEALER AVD ON AVD.DEALERID = VPA.PROVIDERID
				JOIN VASRECORDING VR ON VR.PAYMENTINSID = PI.ID
				LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = VPA.BANKBRANCHID
				LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY	= BB.CITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS	ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				LEFT JOIN RMTPROVINCEVSCITY BRC	ON BRC.PCCITY =	AVD.DEALERCITY
				LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				WHERE PI.STATUS = 'APPROVED' AND PI.PAYMENTAMOUNT > 0
				AND NOT (PI.ID IN( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS))
			]]>
		</createView>
	</changeSet>

	<changeSet id="PSD#162966.2_post" author="aditya.a" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'int_disbursement_request_view');
		 	]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#54.1_pre" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financededup_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#54.1" author="ravi.m">
		<createView viewName="FINANCEDEDUP_VIEW" replaceIfExists="true">
		  <![CDATA[
			 	 SELECT DISTINCT 
				 	T1.FINREFERENCE, 
				 	T1.FINREFERENCE DUPREFERENCE,
				 	T1.CUSTID,
	             	T2.CUSTCIF,
				 	T2.CUSTFNAME,
				 	T2.CUSTLNAME,
				 	T2.CUSTMNAME, 
					T2.CUSTSHRTNAME, 
				 	T2.CUSTDOB,
				 	T2.CUSTNATIONALITY, 
                 	T2.CUSTMOTHERMAIDEN, 
				 	T2.CUSTPARENTCOUNTRY,
				 	T2.CUSTCRCPR, 
				 	T1.FINSTARTDATE STARTDATE, 
				 	T1.FINAMOUNT FINANCEAMOUNT, 
                 	T1.TOTALGROSSPFT PROFITAMOUNT, 
				 	T1.NEXTROLECODE STAGE,
				 	T4.ROLEDESC STAGEDESC,  
				 	'' DEDUPERULE, 
				 	T2.CUSTPASSPORTNO,
				 	T1.FINTYPE FINANCETYPE, 
                 	T2.CUSTTRADELICENCENUM TRADELICENCENO , 
				 	T1.FINLIMITREF
          		FROM FINANCEMAIN_TEMP T1 
          		INNER JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				LEFT OUTER JOIN SECROLES T4 ON T1.NEXTROLECODE = T4.ROLECD
          		UNION ALL      
            	SELECT DISTINCT  
					T1.FINREFERENCE, 
				 	T1.FINREFERENCE DUPREFERENCE,
					T1.CUSTID,
	             	T2.CUSTCIF,
				 	T2.CUSTFNAME,
				 	T2.CUSTLNAME,
				 	T2.CUSTMNAME, 
				 	T2.CUSTSHRTNAME, 
				 	T2.CUSTDOB,
				 	T2.CUSTNATIONALITY, 
                 	T2.CUSTMOTHERMAIDEN, 
				 	T2.CUSTPARENTCOUNTRY,
				 	T2.CUSTCRCPR, 
				 	T1.FINSTARTDATE STARTDATE, 
				 	T1.FINAMOUNT FINANCEAMOUNT, 
                 	T1.TOTALGROSSPFT PROFITAMOUNT, 
				 	T1.NEXTROLECODE STAGE,
				 	T4.ROLEDESC STAGEDESC,  
				 	'' DEDUPERULE, 
				 	T2.CUSTPASSPORTNO,
				 	T1.FINTYPE FINANCETYPE, 
                 	T2.CUSTTRADELICENCENUM TRADELICENCENO , 
				 	T1.FINLIMITREF
         		FROM FINANCEMAIN T1 
         		INNER JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
         		LEFT OUTER JOIN SecRoles T4 ON T1.NEXTROLECODE = T4.ROLECD
  		 	]]>
		</createView>
	</changeSet>
	
	<changeSet id="ST#54.1_post" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financededup_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#54.2_pre" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'customersdedup_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#54.2" author="ravi.m">
		<createView viewName="CUSTOMERSDEDUP_VIEW" replaceIfExists="true">
		     <![CDATA[	
                SELECT DISTINCT
		        	T1.CUSTID,
		        	T1.CUSTCIF,
					T1.CUSTFNAME,
		        	T1.CUSTLNAME,
		        	T1.CUSTCRCPR,
		        	CDPP.CUSTDOCTITLE CUSTPASSPORTNO,
		        	T1.CUSTSHRTNAME,
		        	T1.CUSTDOB,
		        	T1.CUSTNATIONALITY,
		            COALESCE(CASE WHEN T1.PHONENUMBER = ' ' THEN NULL
		               ELSE T1.PHONENUMBER END, T7.PHONENUMBER) MOBILENUMBER,
		       		T1.CUSTCTGCODE,
		       		T1.CUSTDFTBRANCH,
		       		T1.CUSTTYPECODE,
		       		T1.CUSTSECTOR,
		       		T1.CUSTSUBSECTOR,
		       		T1.SUBCATEGORY,
		       		T1.CASTEID,
		       		T1.RELIGIONID,
		       		T3.CASTECODE,
		       		T3.CASTEDESC,
		       		T4.RELIGIONCODE,
		       		T4.RELIGIONDESC,
		       		T2.CUSTTYPECTG LOVDESCCUSTCTGTYPE,
		       		CDA.CUSTDOCTITLE AADHARNUMBER,
		       		CDP.CUSTDOCTITLE PANNUMBER,
		       		T6.CUSTEMAIL,
               		CDV.CUSTDOCTITLE VOTERID,
               		CDD.CUSTDOCTITLE DRIVINGLICENCENO
		  		FROM CUSTOMERS_TEMP T1
		     	LEFT JOIN RMTCUSTTYPES T2 ON T1.CUSTTYPECODE = T2.CUSTTYPECODE
		     	LEFT JOIN CASTE T3 ON T1.CASTEID = T3.CASTEID
		     	LEFT JOIN RELIGION T4 ON T1.RELIGIONID = T4.RELIGIONID
		     	LEFT JOIN CUSTOMERDOCUMENTS CDA ON CDA.CUSTID = T1.CUSTID AND CDA.CUSTDOCCATEGORY IN (
		     		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
		          		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'AADHAAR')))
		     	LEFT JOIN CUSTOMERDOCUMENTS CDP ON CDP.CUSTID = T1.CUSTID AND CDP.CUSTDOCCATEGORY IN (
		     		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
		          		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'PAN')))
		     	LEFT JOIN CUSTOMERDOCUMENTS CDPP ON CDPP.CUSTID = T1.CUSTID AND CDPP.CUSTDOCCATEGORY IN (
		     		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
		          		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'PASSPORT')))
			 	LEFT JOIN CUSTOMERDOCUMENTS CDV ON CDV.CUSTID = T1.CUSTID AND CDV.CUSTDOCCATEGORY IN (
			 		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
                 	 	WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'VOTERID')))
             	LEFT JOIN CUSTOMERDOCUMENTS CDD ON CDD.CUSTID = T1.CUSTID AND CDD.CUSTDOCCATEGORY IN (
             		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
                  		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'DLNO')))
		     	LEFT JOIN CUSTOMEREMAILS T6 ON T1.CUSTID = T6.CUSTID AND T6.CUSTEMAILPRIORITY = 5
		     	LEFT JOIN CUSTOMERPHONENUMBERS T7 ON T1.CUSTID = T7.PHONECUSTID
				UNION ALL 
		 		SELECT DISTINCT 
		 			T1.CUSTID,
		      		T1.CUSTCIF,
		      		T1.CUSTFNAME,
		      		T1.CUSTLNAME,
		      		T1.CUSTCRCPR,
		      		CDPP.CUSTDOCTITLE CUSTPASSPORTNO,
		      		T1.CUSTSHRTNAME,
		      		T1.CUSTDOB,
		      		T1.CUSTNATIONALITY,
		      		COALESCE(CASE WHEN T1.PHONENUMBER = ' ' THEN NULL
		            	ELSE T1.PHONENUMBER END, T7.PHONENUMBER) MOBILENUMBER,
		     		T1.CUSTCTGCODE,
		     		T1.CUSTDFTBRANCH,
		     		T1.CUSTTYPECODE,
		     		T1.CUSTSECTOR,
		     		T1.CUSTSUBSECTOR,
		     		T1.SUBCATEGORY,
		     		T1.CASTEID,
		     		T1.RELIGIONID,
		     		T3.CASTECODE,
		     		T3.CASTEDESC,
		     		T4.RELIGIONCODE,
		     		T4.RELIGIONDESC,
		     		T2.CUSTTYPECTG LOVDESCCUSTCTGTYPE,
		     		CDA.CUSTDOCTITLE AADHARNUMBER,
		     		CDP.CUSTDOCTITLE PANNUMBER,
		     		T6.CUSTEMAIL,
             		CDV.CUSTDOCTITLE VOTERID,
             		CDD.CUSTDOCTITLE DRIVINGLICENCENO
		  		FROM CUSTOMERS T1
		     	LEFT JOIN RMTCUSTTYPES T2 ON T1.CUSTTYPECODE = T2.CUSTTYPECODE
		     	LEFT JOIN CASTE T3 ON T1.CASTEID = T3.CASTEID
		     	LEFT JOIN RELIGION T4 ON T1.RELIGIONID = T4.RELIGIONID
		     	LEFT JOIN CUSTOMERDOCUMENTS CDA ON CDA.CUSTID = T1.CUSTID AND CDA.CUSTDOCCATEGORY IN (
		     		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
		          		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'AADHAAR')))
		     	LEFT JOIN CUSTOMERDOCUMENTS CDP ON CDP.CUSTID = T1.CUSTID AND CDP.CUSTDOCCATEGORY IN (
		     		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
		          		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'PAN')))
		     	LEFT JOIN CUSTOMERDOCUMENTS CDPP ON CDPP.CUSTID = T1.CUSTID AND CDPP.CUSTDOCCATEGORY IN (
		     		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
		          		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'PASSPORT')))
		     	LEFT JOIN CUSTOMERDOCUMENTS CDV ON CDV.CUSTID = T1.CUSTID AND CDV.CUSTDOCCATEGORY IN (
		     		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
                  		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'VOTERID')))
             	LEFT JOIN CUSTOMERDOCUMENTS CDD ON CDD.CUSTID = T1.CUSTID AND CDD.CUSTDOCCATEGORY IN (
             		(( SELECT MASTER_DEF.KEY_CODE FROM MASTER_DEF
                  		WHERE MASTER_DEF.MASTER_TYPE = 'DOC_TYPE' AND MASTER_DEF.KEY_TYPE = 'DLNO')))
		     	LEFT JOIN CUSTOMEREMAILS T6 ON T1.CUSTID = T6.CUSTID AND T6.CUSTEMAILPRIORITY = 5
		     	LEFT JOIN CUSTOMERPHONENUMBERS T7 ON T1.CUSTID = T7.PHONECUSTID
				WHERE NOT (EXISTS ( SELECT 1 FROM CUSTOMERS_TEMP WHERE CUSTOMERS_TEMP.CUSTID = T1.CUSTID))
			]]>
     	</createView>
	</changeSet>
	
	<changeSet id="ST#54.2_post" author="ravi.m" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'customersdedup_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="DE#797.1" author="sampath.d" dbms="postgresql">
		<sql>
			<![CDATA[
				SELECT setval('SeqFinRepayHeader', (select coalesce(max(repayID),0)+10 from FinTaxIncomeDetail));
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#797.1" author="sampath.d" dbms="mssql">
		<sql splitStatements="false">
			<![CDATA[
				DECLARE @Seq VARCHAR(10)
				SELECT @Seq = CAST(MAX(ISNULL(repayID, 0)) AS VARCHAR(MAX)) + 10 FROM FinTaxIncomeDetail

				DECLARE @SQL VARCHAR(4000) ;
				SET @SQL = '
				ALTER SEQUENCE SeqFinRepayHeader
				RESTART WITH ' + @Seq +  '
				INCREMENT BY 1
				MINVALUE -9223372036854775808
				MAXVALUE 9223372036854775807;'
				
				EXEC(@SQL)
			]]>
		</sql>
	</changeSet>

	<changeSet id="DE#797.1" author="sampath.d" dbms="oracle">
		<sql splitStatements="false">
			<![CDATA[
				declare st varchar2(200);
 				nu number;
				begin
					select coalesce(max(repayID),0)+10 into nu from FinTaxIncomeDetail;
					st:= 'ALTER SEQUENCE SeqFinRepayHeader RESTART START WITH ' ||nu ;
					execute immediate st;
				end;
			]]>
		</sql>
	</changeSet>
	<changeSet id="DE#183" author="Saikrishna.k">
		<sql>
			<![CDATA[
				DELETE FROM SecRoleGroups WHERE grpid = (SELECT GrpId FROM SecGroups WHERE GrpCode = 'FIN_RECEIPT_ENQUIRY');
			
				INSERT INTO SecRoleGroups VALUES((SELECT MAX(RoleGrpID) + 1 FROM SecRoleGroups), (SELECT GrpId FROM SecGroups WHERE GrpCode = 'FIN_RECEIPT_ENQUIRY'), (SELECT MAX(RoleID) FROM SecRoles WHERE RoleCd = 'ADMIN'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="ST#143.4" author="Durgaprasad G">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE  ALLOWEDEVENT = 'LATEPAY' AND  AMOUNTCODE='LPP_TDS_P';
				DELETE FROM BMTAMOUNTCODES WHERE  ALLOWEDEVENT = 'REPAY' AND  AMOUNTCODE='LPP_TDS_P';
				DELETE FROM BMTAMOUNTCODES WHERE  ALLOWEDEVENT = 'EARLYSTL' AND  AMOUNTCODE='LPP_TDS_P';
				DELETE FROM BMTAMOUNTCODES WHERE  ALLOWEDEVENT = 'EARLYPAY' AND  AMOUNTCODE='LPP_TDS_P';
				
				INSERT INTO BMTAMOUNTCODES VALUES('LATEPAY',0,'LPP_TDS_P','PENALTY CHARGE TDS PAID',1,1,1000,CURRENT_TIMESTAMP,'APPROVED',NULL,NULL,NULL,NULL,NULL,0);
				INSERT INTO BMTAMOUNTCODES VALUES('REPAY',0,'LPP_TDS_P','Paid Late Payment Penalty TDS',1,1,'1000',Current_TimeStamp,'Approved','','','','','','0');
				INSERT INTO BMTAMOUNTCODES VALUES('EARLYSTL',0,'LPP_TDS_P','Paid Late Payment Penalty TDS',1,1,'1000',Current_TimeStamp,'Approved','','','','','','0');
				INSERT INTO BMTAMOUNTCODES VALUES('EARLYPAY',0,'LPP_TDS_P','Paid Late Payment Penalty TDS',1,1,'1000',Current_TimeStamp,'Approved','','','','','','0');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="ST#147_post" author="DurgaPrasad G">
		<sql>
			<![CDATA[
			 delete from ErrorDetails where Code='RU0098';
			]]>
		</sql>
	</changeSet>
	
</databaseChangeLog>