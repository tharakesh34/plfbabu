<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="1" author="Prasad" dbms="mssql">
		<sql>
		<![CDATA[	
			alter table FinScheduleDetails alter column SchPriPaid bit not null;	
			alter table FinScheduleDetails_Log alter column SchPriPaid bit not null;	
			alter table FinScheduleDetails_PA alter column SchPriPaid bit not null;	
			alter table FinScheduleDetails_Temp alter column SchPriPaid bit not null;	
			alter table RejectFinScheduledetails alter column SchPriPaid bit not null;		
		]]>
		</sql>
	</changeSet>
	<changeSet id="1" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[
			alter table FinScheduleDetails modify SchPriPaid number(1);
			alter table FinScheduleDetails modify SchPriPaid number(1) not null;
			alter table FinScheduleDetails_Log modify SchPriPaid number(1);
			alter table FinScheduleDetails_Log modify SchPriPaid number(1) not null;
			alter table FinScheduleDetails_PA modify SchPriPaid number(1);
			alter table FinScheduleDetails_PA modify SchPriPaid number(1) not null;
			alter table FinScheduleDetails_Temp modify SchPriPaid number(1);
			alter table FinScheduleDetails_Temp modify SchPriPaid number(1) not null;
			alter table RejectFinScheduledetails modify SchPriPaid number(1);	
			alter table RejectFinScheduledetails modify SchPriPaid number(1) not null;
		]]>
		</sql>
	</changeSet>
	<changeSet id="1" author="Prasad" dbms="postgresql">
		<sql>
		<![CDATA[
			drop View finscheduledetails_aview ;
           drop View finscheduledetails_view ;
           drop view finscheduledetails_tview;
       

update FinScheduleDetails set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails alter column SchPriPaid SET NOT NULL;

update FinScheduleDetails_Log set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails_Log alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails_Log alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails_Log alter column SchPriPaid SET NOT NULL;

update FinScheduleDetails_PA set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails_PA alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails_PA alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails_PA alter column SchPriPaid SET NOT NULL;

update FinScheduleDetails_Temp set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails_Temp alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails_Temp alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails_Temp alter column SchPriPaid SET NOT NULL;

update RejectFinScheduledetails set SchPriPaid = 0 where SchPriPaid is null;
alter table RejectFinScheduledetails alter column SchPriPaid DROP DEFAULT;
alter table RejectFinScheduledetails alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table RejectFinScheduledetails alter column SchPriPaid SET NOT NULL;
 
	Create or replace view finscheduledetails_aview AS
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate
FROM         FinScheduleDetails  T1
                      
     Create or replace view FinScheduleDetails_View AS                 
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails_Temp  T1
UNION ALL
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails  T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference);
     
     
     create or replace view finscheduledetails_tview as
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate
				FROM         FinScheduleDetails_Temp  T1
                
                
                
                        
            update adtFinScheduleDetails set SchPriPaid = 0 where SchPriPaid is null;
			alter table adtFinScheduleDetails alter column SchPriPaid DROP DEFAULT;
			alter table adtFinScheduleDetails alter column SchPriPaid type smallint using SchPriPaid::smallint ;
			alter table adtFinScheduleDetails alter column SchPriPaid SET NOT NULL;
		]]>
		</sql>
	</changeSet>

	<changeSet id="2" author="durgaPrasadG">
		<addColumn tableName="SecUsers_RTemp">
			<column name="AuthType" type="char(3)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="3" author="durgaPrasadG">
		<sql>
	   Update SecUsers_RTemp set Authtype = 'DAO';
		</sql>
	</changeSet>
	
	<changeSet id="4" author="durgaPrasadG">
		<addNotNullConstraint tableName="SecUsers_RTemp"
			columnName="AuthType" columnDataType="char(3)" />
	</changeSet>
	
	<changeSet id="5" author="durgaPrasadG">
		<addColumn tableName="SecUsers_Temp">
			<column name="AuthType" type="char(3)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="6" author="durgaPrasadG">
		<sql>
	   Update SecUsers_Temp set Authtype = 'DAO';
		</sql>
	</changeSet>
	
	<changeSet id="7" author="durgaPrasadG">
		<addNotNullConstraint tableName="SecUsers_Temp"
			columnName="AuthType" columnDataType="char(3)" />
	</changeSet>
	


<changeSet id="8" author="durgaPrasadG">
	<createView viewName="SecUsers_View" replaceIfExists="true">
		SELECT T1.UsrID , T1.UsrLogin ,  T1.UsrPwd ,  T1.UserStaffID , T1.UsrFName ,  T1.UsrMName , T1.UsrLName , T1.UsrMobile ,  T1.UsrEmail ,   T1.UsrEnabled ,
		  T1.UsrCanSignonFrom ,   T1.UsrCanSignonTo ,  T1.UsrCanOverrideLimits ,  T1.UsrAcExp ,  T1.UsrAcExpDt ,  T1.UsrCredentialsExp ,  T1.UsrAcLocked ,
		  T1.UsrLanguage ,  T5.LngDesc LovDescUsrLanguage  , T1.UsrDftAppId ,   T2.AppCode LovDescUsrDftAppCode  , T2.AppDescription LovDescUsrDftAppCodeName  , 
          T1.UsrBranchCode ,   T4.BranchDesc LovDescUsrBranchCodeName  ,   T1.UsrDeptCode ,  T3.DeptDesc LovDescUsrDeptCodeName  , T1.UsrToken , 
          T1.UsrIsMultiBranch ,  T1.UsrInvldLoginTries ,  T1.UsrDesg , T6.DesgDesc LovDescUsrDesg  , T1.Version ,
		  T1.LastMntBy ,T1.LastMntOn ,  T1.RecordStatus , T1.RoleCode , T1.NextRoleCode ,  T1.TaskId , T1.NextTaskId ,  
		  T1.RecordType , T1.WorkflowId ,T1.UsrDftAppCode, T1.AuthType 
     FROM SecUsers_Temp T1
            LEFT OUTER JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            LEFT OUTER JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            LEFT OUTER JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            LEFT OUTER JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            LEFT OUTER JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
   UNION ALL 
   SELECT T1.UsrID ,
          T1.UsrLogin ,  T1.UsrPwd , T1.UserStaffID , T1.UsrFName , T1.UsrMName , T1.UsrLName , T1.UsrMobile ,
          T1.UsrEmail , T1.UsrEnabled ,  T1.UsrCanSignonFrom ,  T1.UsrCanSignonTo ,  T1.UsrCanOverrideLimits ,  T1.UsrAcExp ,
		  T1.UsrAcExpDt , T1.UsrCredentialsExp , T1.UsrAcLocked ,  T1.UsrLanguage , T5.LngDesc LovDescUsrLanguage  , T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,  T2.AppDescription LovDescUsrDftAppCodeName  , T1.UsrBranchCode ,  T4.BranchDesc LovDescUsrBranchCodeName  , 
          T1.UsrDeptCode ,T3.Deptdesc LovDescUsrDeptCodeName  , T1.UsrToken , T1.UsrIsMultiBranch , T1.UsrInvldLoginTries ,  T1.UsrDesg , 
          T6.DesgDesc LovDescUsrDesg  , T1.Version , T1.LastMntBy ,T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode ,
		  T1.TaskId , T1.NextTaskId ,T1.RecordType ,  T1.WorkflowId ,   T1.UsrDftAppCode, T1.AuthType 
     FROM SecUsers T1
            LEFT OUTER JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            LEFT OUTER JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            LEFT OUTER JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            LEFT OUTER JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            LEFT OUTER JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
     WHERE NOT EXISTS ( SELECT 1  FROM SecUsers_Temp   WHERE UsrID = T1.UsrID )
		</createView>
</changeSet>


<changeSet id="9" author="durgaPrasadG">
	<createView viewName="SecUsers_RView" replaceIfExists="true">
		SELECT T1.UsrID ,
          T1.UsrLogin ,
          T1.UsrPwd ,
          T1.UserStaffID ,
          T1.UsrFName ,
          T1.UsrMName ,
          T1.UsrLName ,
          T1.UsrMobile ,
          T1.UsrEmail ,
          T1.UsrEnabled ,
          T1.UsrCanSignonFrom ,
          T1.UsrCanSignonTo ,
          T1.UsrCanOverrideLimits ,
          T1.UsrAcExp ,
          T1.UsrAcExpDt ,
          T1.UsrCredentialsExp ,
          T1.UsrAcLocked ,
          T1.UsrLanguage ,
          T5.LngDesc LovDescUsrLanguage  ,
          T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,
          T2.AppDescription LovDescUsrDftAppCodeName  ,
          T1.UsrBranchCode ,
          T4.BranchDesc LovDescUsrBranchCodeName  ,
          T1.UsrDeptCode ,
          T3.DeptDesc LovDescUsrDeptCodeName  ,
          T1.UsrToken ,
          T1.UsrIsMultiBranch ,
          T1.UsrInvldLoginTries ,
          T1.UsrDesg ,
          T6.DesgDesc LovDescUsrDesg  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T1.UsrDftAppCode,
		  T1.AuthType 		  
     FROM SecUsers_RTemp T1
            JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
           JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
   UNION ALL 
   SELECT T1.UsrID ,
          T1.UsrLogin ,
          T1.UsrPwd ,
          T1.UserStaffID ,
          T1.UsrFName ,
          T1.UsrMName ,
          T1.UsrLName ,
          T1.UsrMobile ,
          T1.UsrEmail ,
          T1.UsrEnabled ,
          T1.UsrCanSignonFrom ,
          T1.UsrCanSignonTo ,
          T1.UsrCanOverrideLimits ,
          T1.UsrAcExp ,
          T1.UsrAcExpDt ,
          T1.UsrCredentialsExp ,
          T1.UsrAcLocked ,
          T1.UsrLanguage ,
          T5.LngDesc LovDescUsrLanguage  ,
          T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,
          T2.AppDescription LovDescUsrDftAppCodeName  ,
          T1.UsrBranchCode ,
          T4.BranchDesc LovDescUsrBranchCodeName  ,
          T1.UsrDeptCode ,
          T3.DeptDesc LovDescUsrDeptCodeName  ,
          T1.UsrToken ,
          T1.UsrIsMultiBranch ,
          T1.UsrInvldLoginTries ,
          T1.UsrDesg ,
          T6.DesgDesc LovDescUsrDesg  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T1.UsrDftAppCode,
		  T1.AuthType 		  
     FROM SecUsers T1
            JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
     WHERE NOT EXISTS ( SELECT 1   FROM SecUsers_RTemp  WHERE UsrID = T1.UsrID )
		</createView>
</changeSet>


<changeSet id="10" author="durgaPrasadG">
	<createView viewName="SecUsers_AView" replaceIfExists="true">
		SELECT T1.UsrID ,
          T1.UsrLogin ,
          T1.UsrPwd ,
          T1.UserStaffID ,
          T1.UsrFName ,
          T1.UsrMName ,
          T1.UsrLName ,
          T1.UsrMobile ,
          T1.UsrEmail ,
          T1.UsrEnabled ,
          T1.UsrCanSignonFrom ,
          T1.UsrCanSignonTo ,
          T1.UsrCanOverrideLimits ,
          T1.UsrAcExp ,
          T1.UsrAcExpDt ,
          T1.UsrCredentialsExp ,
          T1.UsrAcLocked ,
          T1.UsrLanguage ,
          T5.LngDesc LovDescUsrLanguage  ,
          T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,
          T2.AppDescription LovDescUsrDftAppCodeName  ,
          T1.UsrBranchCode ,
          T4.BranchDesc LovDescUsrBranchCodeName  ,
          T1.UsrDeptCode ,
          T3.DeptDesc LovDescUsrDeptCodeName  ,
          T1.UsrToken ,
          T1.UsrIsMultiBranch ,
          T1.UsrInvldLoginTries ,
          T1.UsrDesg ,
          T6.DesgDesc LovDescUsrDesg  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T1.UsrDftAppCode,
		  T1.AuthType 			  
     FROM SecUsers T1
           LEFT OUTER JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            LEFT OUTER JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            LEFT OUTER JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            LEFT OUTER JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            LEFT OUTER JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
		</createView>
</changeSet>
 <changeSet id="11" author="Irfan">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Enquiry_Loans','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_LOAN_ENQUIRY') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Enquiry_Loans'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	<changeSet id="12" author="SreeRavali">
		<sql>
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='CL_ORIGINATION_MAKER'), (select RightID from SecRights where RightName='FinanceMainDialog_droplineFrq'),1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	<changeSet id="13" author="SreeRavali">
		<createView viewName="FinanceMaintenance_View" replaceIfExists="true">
	SELECT	T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt, T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision, T1.RepayRateBasis,
                   T1.ManualSchedule , T1.TakeOverFinance , T1.NextRolloverDate,
                   COALESCE(T5.RoleDesc, dbo.FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		   T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF, T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
              T1.planEMIHAlw,T1.FinCurrAssetValue   
            FROM           FinanceMain_Temp T1 INNER JOIN
			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
 UNION ALL
SELECT      T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt,T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,  
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision,  T1.RepayRateBasis ,
                   T1.ManualSchedule , T1.TakeOverFinance  , T1.NextRolloverDate,
                    COALESCE(T5.RoleDesc, dbo.FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		    T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF,  T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
		    T1.planEMIHAlw,T1.FinCurrAssetValue  
            FROM           FinanceMain T1 INNER JOIN
	    			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           FinanceMain_Temp
                            WHERE      (FinReference = T1.FinReference)))
					
		</createView>
	</changeSet>

	<changeSet id="14" author="SreeRavali">
		<createView viewName="FinanceMaintenance_AView" replaceIfExists="true">
		SELECT  T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive,  T1.Blacklisted, T1.FeeChargeAmt, T1.InsuranceAmt,T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate, 
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.MigratedFinance, T1.RcdMaintainSts,T1.ClosingStatus, T1.RepayRateBasis,
                  T1.ManualSchedule , T1.TakeOverFinance , T1.NextRolloverDate, T1.DownPayment,
		  T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF,T1.planEMIHAlw,T1.FinCurrAssetValue   
            FROM           FinanceMain T1 INNER JOIN
	    			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
					
	</createView>
</changeSet>
<changeSet id="15" author="Irfan">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			
			Delete from SECGROUPRIGHTS where GrpID=(SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_LOAN_ENQUIRY')
			and RightID=(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Enquiry_Loans');
			Delete from SECRIGHTS where RightName='menuItem_Enquiry_Loans';
					
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
</databaseChangeLog>
