<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="1" author="Prasad" dbms="mssql">
		<sql>
		<![CDATA[	
			alter table FinScheduleDetails alter column SchPriPaid bit not null;	
			alter table FinScheduleDetails_Log alter column SchPriPaid bit not null;	
			alter table FinScheduleDetails_PA alter column SchPriPaid bit not null;	
			alter table FinScheduleDetails_Temp alter column SchPriPaid bit not null;	
			alter table RejectFinScheduledetails alter column SchPriPaid bit not null;		
		]]>
		</sql>
	</changeSet>
	<changeSet id="1" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[
			alter table FINSCHEDULEDETAILS modify SchPriPaid default null;
update FINSCHEDULEDETAILS set SchPriPaid = 0 where SchPriPaid is null;
create table sai_temp as select * from FINSCHEDULEDETAILS;
update FINSCHEDULEDETAILS set SchPriPaid = null;
alter table FINSCHEDULEDETAILS modify SchPriPaid number(1);
update FINSCHEDULEDETAILS m set (m.SchPriPaid) = (select t.SchPriPaid from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ) where exists (select 1 from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ);
alter table FINSCHEDULEDETAILS modify SchPriPaid number(1) not null;
drop table sai_temp;
		]]>
		</sql>
	</changeSet>
	 <changeSet id="1.1" author="Prasad" dbms="oracle">
		<sql>
		<![CDATA[
				alter table FinScheduleDetails_Log modify SchPriPaid default null;
update FinScheduleDetails_Log set SchPriPaid = 0 where SchPriPaid is null;
create table sai_temp as select * from FinScheduleDetails_Log;
update FinScheduleDetails_Log set SchPriPaid = null;
alter table FinScheduleDetails_Log modify SchPriPaid number(1);
update FinScheduleDetails_Log m set (m.SchPriPaid) = (select t.SchPriPaid from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ) where exists (select 1 from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ);
alter table FinScheduleDetails_Log modify SchPriPaid number(1) not null;
drop table sai_temp;

		alter table FinScheduleDetails_PA modify SchPriPaid default null;
update FinScheduleDetails_PA set SchPriPaid = 0 where SchPriPaid is null;
create table sai_temp as select * from FinScheduleDetails_PA;
update FinScheduleDetails_PA set SchPriPaid = null;
alter table FinScheduleDetails_PA modify SchPriPaid number(1);
update FinScheduleDetails_PA m set (m.SchPriPaid) = (select t.SchPriPaid from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ) where exists (select 1 from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ);
alter table FinScheduleDetails_PA modify SchPriPaid number(1) not null;
drop table sai_temp;

		alter table FinScheduleDetails_Temp modify SchPriPaid default null;
update FinScheduleDetails_Temp set SchPriPaid = 0 where SchPriPaid is null;
create table sai_temp as select * from FinScheduleDetails_Temp;
update FinScheduleDetails_Temp set SchPriPaid = null;
alter table FinScheduleDetails_Temp modify SchPriPaid number(1);
update FinScheduleDetails_Temp m set (m.SchPriPaid) = (select t.SchPriPaid from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ) where exists (select 1 from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ);
alter table FinScheduleDetails_Temp modify SchPriPaid number(1) not null;
drop table sai_temp;

		alter table RejectFinScheduledetails modify SchPriPaid default null;
update RejectFinScheduledetails set SchPriPaid = 0 where SchPriPaid is null;
create table sai_temp as select * from RejectFinScheduledetails;
update RejectFinScheduledetails set SchPriPaid = null;
alter table RejectFinScheduledetails modify SchPriPaid number(1);
update RejectFinScheduledetails m set (m.SchPriPaid) = (select t.SchPriPaid from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ) where exists (select 1 from sai_temp t where t.FINREFERENCE = m.FINREFERENCE and t.SCHDATE=m.SCHDATE and t.SCHSEQ=m.SCHSEQ);
alter table RejectFinScheduledetails modify SchPriPaid number(1) not null;
drop table sai_temp;
		]]>
		</sql>
	</changeSet>
	<changeSet id="1" author="Prasad" dbms="postgresql">
		<sql>
		<![CDATA[
			drop View finscheduledetails_aview ;
           drop View finscheduledetails_view ;
           drop view finscheduledetails_tview;
       

update FinScheduleDetails set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails alter column SchPriPaid SET NOT NULL;

update FinScheduleDetails_Log set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails_Log alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails_Log alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails_Log alter column SchPriPaid SET NOT NULL;

update FinScheduleDetails_PA set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails_PA alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails_PA alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails_PA alter column SchPriPaid SET NOT NULL;

update FinScheduleDetails_Temp set SchPriPaid = 0 where SchPriPaid is null;
alter table FinScheduleDetails_Temp alter column SchPriPaid DROP DEFAULT;
alter table FinScheduleDetails_Temp alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table FinScheduleDetails_Temp alter column SchPriPaid SET NOT NULL;

update RejectFinScheduledetails set SchPriPaid = 0 where SchPriPaid is null;
alter table RejectFinScheduledetails alter column SchPriPaid DROP DEFAULT;
alter table RejectFinScheduledetails alter column SchPriPaid type smallint using SchPriPaid::smallint ;
alter table RejectFinScheduledetails alter column SchPriPaid SET NOT NULL;
 
	Create or replace view finscheduledetails_aview AS
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate
FROM         FinScheduleDetails  T1
                      
     Create or replace view FinScheduleDetails_View AS                 
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails_Temp  T1
UNION ALL
SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate

FROM         FinScheduleDetails  T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinScheduleDetails_Temp
                            WHERE      FinReference = T1.FinReference);
     
     
     create or replace view finscheduledetails_tview as
		SELECT     T1.FinReference, T1.SchSeq, T1.SchDate, T1.PftOnSchDate, T1.RepayOnSchDate, T1.CpzOnSchDate, T1.RvwOnSchDate, T1.DisbOnSchDate, 
                     T1.DownpaymentOnSchDate, T1.BalanceForPftCal, T1.BaseRate, T1.SplRate, T1.ActRate, T1.NoOfDays, T1.DayFactor, T1.ProfitCalc, T1.ProfitSchd, 
                      T1.PrincipalSchd, T1.RepayAmount, T1.ProfitBalance, T1.DisbAmount, T1.CpzAmount, T1.DownPaymentAmount,  
                      T1.ClosingBalance, T1.ProfitFraction, T1.PrvRepayAmount, T1.SchdPftPaid, T1.SchPftPaid, T1.SchdPriPaid, T1.SchPriPaid, 
                      T1.Specifier, T1.DefSchdDate, T1.SchdMethod, T1.MrgRate, 
                      T1.CalOnIndRate,T1.FeeChargeAmt, T1.CalculatedRate, T1.EarlyPaidBal, T1.EarlyPaid, T1.RefundOrWaiver, T1.WriteoffPrincipal, 
                      T1.WriteoffProfit, T1.OrgPft, T1.OrgPri, T1.OrgEndBal, T1.OrgPlanPft, T1.FeeSchd, T1.SchdFeePaid, T1.SchdFeeOS, T1.InsSchd, T1. SchdInsPaid, 
                       T1.AdvPftRate , T1.AdvProfit ,  T1.AdvRepayAmount , T1.AdvBaseRate , T1.AdvMargin , T1.AdvCalRate, T1.SuplRent ,  T1.IncrCost ,  T1.SuplRentPaid ,  T1.IncrCostPaid ,
                       T1.RolloverOnSchDate,  T1.RolloverAmount,  T1.RolloverAmountPaid, T1.TDSAmount,
                       T1.PftDaysBasis,T1.WriteoffIns,T1.WriteoffIncrCost,T1.WriteoffSuplRent,T1.WriteoffSchFee,T1.InsuranceAmt, T1.InstNumber, T1.BpiOrHoliday, T1.FrqDate
				FROM         FinScheduleDetails_Temp  T1
                
                
                
                        
            update adtFinScheduleDetails set SchPriPaid = 0 where SchPriPaid is null;
			alter table adtFinScheduleDetails alter column SchPriPaid DROP DEFAULT;
			alter table adtFinScheduleDetails alter column SchPriPaid type smallint using SchPriPaid::smallint ;
			alter table adtFinScheduleDetails alter column SchPriPaid SET NOT NULL;
		]]>
		</sql>
	</changeSet>

	<changeSet id="2" author="durgaPrasadG">
		<addColumn tableName="SecUsers_RTemp">
			<column name="AuthType" type="char(3)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="3" author="durgaPrasadG">
		<sql>
	   Update SecUsers_RTemp set Authtype = 'DAO';
		</sql>
	</changeSet>
	
	<changeSet id="4" author="durgaPrasadG">
		<addNotNullConstraint tableName="SecUsers_RTemp"
			columnName="AuthType" columnDataType="char(3)" />
	</changeSet>
	
	<changeSet id="5" author="durgaPrasadG">
		<addColumn tableName="SecUsers_Temp">
			<column name="AuthType" type="char(3)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="6" author="durgaPrasadG">
		<sql>
	   Update SecUsers_Temp set Authtype = 'DAO';
		</sql>
	</changeSet>
	
	<changeSet id="7" author="durgaPrasadG">
		<addNotNullConstraint tableName="SecUsers_Temp"
			columnName="AuthType" columnDataType="char(3)" />
	</changeSet>
	


<changeSet id="8" author="durgaPrasadG">
	<createView viewName="SecUsers_View" replaceIfExists="true">
		SELECT T1.UsrID , T1.UsrLogin ,  T1.UsrPwd ,  T1.UserStaffID , T1.UsrFName ,  T1.UsrMName , T1.UsrLName , T1.UsrMobile ,  T1.UsrEmail ,   T1.UsrEnabled ,
		  T1.UsrCanSignonFrom ,   T1.UsrCanSignonTo ,  T1.UsrCanOverrideLimits ,  T1.UsrAcExp ,  T1.UsrAcExpDt ,  T1.UsrCredentialsExp ,  T1.UsrAcLocked ,
		  T1.UsrLanguage ,  T5.LngDesc LovDescUsrLanguage  , T1.UsrDftAppId ,   T2.AppCode LovDescUsrDftAppCode  , T2.AppDescription LovDescUsrDftAppCodeName  , 
          T1.UsrBranchCode ,   T4.BranchDesc LovDescUsrBranchCodeName  ,   T1.UsrDeptCode ,  T3.DeptDesc LovDescUsrDeptCodeName  , T1.UsrToken , 
          T1.UsrIsMultiBranch ,  T1.UsrInvldLoginTries ,  T1.UsrDesg , T6.DesgDesc LovDescUsrDesg  , T1.Version ,
		  T1.LastMntBy ,T1.LastMntOn ,  T1.RecordStatus , T1.RoleCode , T1.NextRoleCode ,  T1.TaskId , T1.NextTaskId ,  
		  T1.RecordType , T1.WorkflowId ,T1.UsrDftAppCode, T1.AuthType 
     FROM SecUsers_Temp T1
            LEFT OUTER JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            LEFT OUTER JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            LEFT OUTER JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            LEFT OUTER JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            LEFT OUTER JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
   UNION ALL 
   SELECT T1.UsrID ,
          T1.UsrLogin ,  T1.UsrPwd , T1.UserStaffID , T1.UsrFName , T1.UsrMName , T1.UsrLName , T1.UsrMobile ,
          T1.UsrEmail , T1.UsrEnabled ,  T1.UsrCanSignonFrom ,  T1.UsrCanSignonTo ,  T1.UsrCanOverrideLimits ,  T1.UsrAcExp ,
		  T1.UsrAcExpDt , T1.UsrCredentialsExp , T1.UsrAcLocked ,  T1.UsrLanguage , T5.LngDesc LovDescUsrLanguage  , T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,  T2.AppDescription LovDescUsrDftAppCodeName  , T1.UsrBranchCode ,  T4.BranchDesc LovDescUsrBranchCodeName  , 
          T1.UsrDeptCode ,T3.Deptdesc LovDescUsrDeptCodeName  , T1.UsrToken , T1.UsrIsMultiBranch , T1.UsrInvldLoginTries ,  T1.UsrDesg , 
          T6.DesgDesc LovDescUsrDesg  , T1.Version , T1.LastMntBy ,T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode ,
		  T1.TaskId , T1.NextTaskId ,T1.RecordType ,  T1.WorkflowId ,   T1.UsrDftAppCode, T1.AuthType 
     FROM SecUsers T1
            LEFT OUTER JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            LEFT OUTER JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            LEFT OUTER JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            LEFT OUTER JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            LEFT OUTER JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
     WHERE NOT EXISTS ( SELECT 1  FROM SecUsers_Temp   WHERE UsrID = T1.UsrID )
		</createView>
</changeSet>


<changeSet id="9" author="durgaPrasadG">
	<createView viewName="SecUsers_RView" replaceIfExists="true">
		SELECT T1.UsrID ,
          T1.UsrLogin ,
          T1.UsrPwd ,
          T1.UserStaffID ,
          T1.UsrFName ,
          T1.UsrMName ,
          T1.UsrLName ,
          T1.UsrMobile ,
          T1.UsrEmail ,
          T1.UsrEnabled ,
          T1.UsrCanSignonFrom ,
          T1.UsrCanSignonTo ,
          T1.UsrCanOverrideLimits ,
          T1.UsrAcExp ,
          T1.UsrAcExpDt ,
          T1.UsrCredentialsExp ,
          T1.UsrAcLocked ,
          T1.UsrLanguage ,
          T5.LngDesc LovDescUsrLanguage  ,
          T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,
          T2.AppDescription LovDescUsrDftAppCodeName  ,
          T1.UsrBranchCode ,
          T4.BranchDesc LovDescUsrBranchCodeName  ,
          T1.UsrDeptCode ,
          T3.DeptDesc LovDescUsrDeptCodeName  ,
          T1.UsrToken ,
          T1.UsrIsMultiBranch ,
          T1.UsrInvldLoginTries ,
          T1.UsrDesg ,
          T6.DesgDesc LovDescUsrDesg  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T1.UsrDftAppCode,
		  T1.AuthType 		  
     FROM SecUsers_RTemp T1
            JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
           JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
   UNION ALL 
   SELECT T1.UsrID ,
          T1.UsrLogin ,
          T1.UsrPwd ,
          T1.UserStaffID ,
          T1.UsrFName ,
          T1.UsrMName ,
          T1.UsrLName ,
          T1.UsrMobile ,
          T1.UsrEmail ,
          T1.UsrEnabled ,
          T1.UsrCanSignonFrom ,
          T1.UsrCanSignonTo ,
          T1.UsrCanOverrideLimits ,
          T1.UsrAcExp ,
          T1.UsrAcExpDt ,
          T1.UsrCredentialsExp ,
          T1.UsrAcLocked ,
          T1.UsrLanguage ,
          T5.LngDesc LovDescUsrLanguage  ,
          T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,
          T2.AppDescription LovDescUsrDftAppCodeName  ,
          T1.UsrBranchCode ,
          T4.BranchDesc LovDescUsrBranchCodeName  ,
          T1.UsrDeptCode ,
          T3.DeptDesc LovDescUsrDeptCodeName  ,
          T1.UsrToken ,
          T1.UsrIsMultiBranch ,
          T1.UsrInvldLoginTries ,
          T1.UsrDesg ,
          T6.DesgDesc LovDescUsrDesg  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T1.UsrDftAppCode,
		  T1.AuthType 		  
     FROM SecUsers T1
            JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
     WHERE NOT EXISTS ( SELECT 1   FROM SecUsers_RTemp  WHERE UsrID = T1.UsrID )
		</createView>
</changeSet>


<changeSet id="10" author="durgaPrasadG">
	<createView viewName="SecUsers_AView" replaceIfExists="true">
		SELECT T1.UsrID ,
          T1.UsrLogin ,
          T1.UsrPwd ,
          T1.UserStaffID ,
          T1.UsrFName ,
          T1.UsrMName ,
          T1.UsrLName ,
          T1.UsrMobile ,
          T1.UsrEmail ,
          T1.UsrEnabled ,
          T1.UsrCanSignonFrom ,
          T1.UsrCanSignonTo ,
          T1.UsrCanOverrideLimits ,
          T1.UsrAcExp ,
          T1.UsrAcExpDt ,
          T1.UsrCredentialsExp ,
          T1.UsrAcLocked ,
          T1.UsrLanguage ,
          T5.LngDesc LovDescUsrLanguage  ,
          T1.UsrDftAppId ,
          T2.AppCode LovDescUsrDftAppCode  ,
          T2.AppDescription LovDescUsrDftAppCodeName  ,
          T1.UsrBranchCode ,
          T4.BranchDesc LovDescUsrBranchCodeName  ,
          T1.UsrDeptCode ,
          T3.DeptDesc LovDescUsrDeptCodeName  ,
          T1.UsrToken ,
          T1.UsrIsMultiBranch ,
          T1.UsrInvldLoginTries ,
          T1.UsrDesg ,
          T6.DesgDesc LovDescUsrDesg  ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
          T1.UsrDftAppCode,
		  T1.AuthType 			  
     FROM SecUsers T1
           LEFT OUTER JOIN PTApplicationDetails T2   ON T1.UsrDftAppId = T2.AppID
            LEFT OUTER JOIN BMTDepartments T3   ON T1.UsrDeptCode = T3.DeptCode
            LEFT OUTER JOIN RMTBranches T4   ON T1.UsrBranchCode = T4.BranchCode
            LEFT OUTER JOIN BMTLanguage T5   ON T1.UsrLanguage = T5.LngCode
            LEFT OUTER JOIN BMTDesignations T6   ON T1.UsrDesg = T6.DesgCode
		</createView>
</changeSet>
 <changeSet id="11" author="Irfan">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Enquiry_Loans','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_LOAN_ENQUIRY') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Enquiry_Loans'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	<changeSet id="12" author="SreeRavali">
		<sql>
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='CL_ORIGINATION_MAKER'), (select RightID from SecRights where RightName='FinanceMainDialog_droplineFrq'),1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	<changeSet id="13" author="SreeRavali">
		<createView viewName="FinanceMaintenance_View" replaceIfExists="true">
	SELECT	T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt, T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision, T1.RepayRateBasis,
                   T1.ManualSchedule , T1.TakeOverFinance , T1.NextRolloverDate,
                   COALESCE(T5.RoleDesc, ${add.schema}FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		   T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF, T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
              T1.planEMIHAlw,T1.FinCurrAssetValue   
            FROM           FinanceMain_Temp T1 INNER JOIN
			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
 UNION ALL
SELECT      T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive, T1.Blacklisted, T1.FeeChargeAmt,T1.InsuranceAmt, T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate,  
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.RcdMaintainSts, T1.MigratedFinance, T1.ClosingStatus, T3.FinDivision LovDescFinDivision,  T1.RepayRateBasis ,
                   T1.ManualSchedule , T1.TakeOverFinance  , T1.NextRolloverDate,
                    COALESCE(T5.RoleDesc, ${add.schema}FN_GET_ROLEDESC(T1.NextRoleCode)) LovDescRequestStage,T1.DownPayment,
		    T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF,  T1.AvailedUnPlanEmi, T1.AvailedReAgeH, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays,
		    T1.planEMIHAlw,T1.FinCurrAssetValue  
            FROM           FinanceMain T1 INNER JOIN
	    			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType LEFT OUTER JOIN
              SecRoles T5 ON T1.NextRoleCode = T5.RoleCd INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           FinanceMain_Temp
                            WHERE      (FinReference = T1.FinReference)))
					
		</createView>
	</changeSet>

	<changeSet id="14" author="SreeRavali">
		<createView viewName="FinanceMaintenance_AView" replaceIfExists="true">
		SELECT  T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, 
                  T1.FinStartDate, T1.NumberOfTerms, T1.CustID, T1.FinAmount, T1.MaturityDate, T1.FinRepaymentAmount, 
                  T1.FinIsActive,  T1.Blacklisted, T1.FeeChargeAmt, T1.InsuranceAmt,T1.GraceTerms,T1.AllowGrcPeriod,T1.GrcPeriodEndDate, 
                  T1.AlwMultiDisb, T3.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments, 
                  T1.NextRoleCode, T1.RecordStatus, T1.RecordType, T1.allowgrcpftrvw, T1.allowrepayrvw, T1.lastrepaydate, T1.lastrepaypftdate,
                  T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.MigratedFinance, T1.RcdMaintainSts,T1.ClosingStatus, T1.RepayRateBasis,
                  T1.ManualSchedule , T1.TakeOverFinance , T1.NextRolloverDate, T1.DownPayment,
		  T4.ProductCategory, T3.FinCategory LovDescProductCodeName, T2.CustCIF LovDescCustCIF,T1.planEMIHAlw,T1.FinCurrAssetValue   
            FROM           FinanceMain T1 INNER JOIN
	    			Customers T2 ON T1.CustId = T2.CustId INNER JOIN
                       RMTFinanceTypes T3 ON T1.FinType = T3.FinType INNER JOIN
                       BMTProduct T4 ON T3.FinCategory = T4.ProductCode
					
	</createView>
</changeSet>
<changeSet id="15" author="Irfan">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			
			Delete from SECGROUPRIGHTS where GrpID=(SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_LOAN_ENQUIRY')
			and RightID=(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Enquiry_Loans');
			Delete from SECRIGHTS where RightName='menuItem_Enquiry_Loans';
					
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
<changeSet id="16" author="Madhubabu">
		<sql>
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PFSPARAMETER_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_SolutionFactory'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PFSPARAMETER_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_SolutionFactory_PFSParameter'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	
	<changeSet author="Kesav" id="17">
		<addColumn tableName="FinTypeFees_Temp">
			<column name="ModuleId" type="int" />
		</addColumn>
	</changeSet>
	
	<changeSet author="Kesav" id="18">
		<addColumn tableName="FinTypeFees">
			<column name="ModuleId" type="int" />
		</addColumn>
	</changeSet>
	<changeSet id="19" author="Prasad">
		<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		 Select LinkedTranId,PostDate,TransOrder,finReference,TranDesc,PostAmount DEBITS,0 CREDITS from Postings
      where DrOrCr='D'  union
      Select LinkedTranId,PostDate,TransOrder,finReference,TranDesc,0 DEBITS,PostAmount CREDITS from Postings
      where DrOrCr='C'					
	</createView>
</changeSet>

	<changeSet id="20" author="Kesav">
		<createView viewName="FinTypeFees_AView" replaceIfExists="true">
			SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
					   T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
					   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.ModuleId,
					   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees T1 INNER JOIN 
					   FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent		
		</createView>
	</changeSet>
	
	<changeSet id="21" author="Kesav">
		<createView viewName="FinTypeFees_View" replaceIfExists="true">
			SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
					   T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
					   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.ModuleId,
					   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees_Temp T1 INNER JOIN 
					   FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
			UNION ALL
			SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
					   T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
					   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.ModuleId,
					   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
			FROM       FinTypeFees T1 INNER JOIN 
					   FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
					   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
			WHERE     NOT EXISTS (SELECT 1 FROM FinTypeFees_Temp
										WHERE  FinType = T1.FinType AND FinEvent = T1.FinEvent AND FeeTypeID = T1.FeeTypeID AND OriginationFee = T1.OriginationFee)
		</createView>
	</changeSet>
	<changeSet id="22" author="Pruthvi">
	<sql>
	update reportlist set ReportHeading='Mandate Enquiry'
where code='Mandate';

update reportlist set ReportHeading='Beneficiary Enquiry'
where code='Beneficiary';


  update reportlist set ReportHeading='Customer',ModuleType='Customers'
  where code='Customer';
  
INSERT INTO ReportList  VALUES 
(N'CustomerEnquiry', N'Customer', 
N'listheader_CustCIF.label,listheader_CustShrtName.label,listheader_CustCoreBank.label,listheader_CustDftBranch.label,listheader_CustCtgCode.label,listheader_CustTypeCode.label', 
N'custCIF,custShrtName,custCoreBank,custDftBranch,lovDescCustCtgCodeName,lovDescCustTypeCodeName', 
N'String,String,String,String,String,String', N'', N'ReportList06', N'Customer Enquiry', N'Customer Enquiry', 3, 1001, CURRENT_TIMESTAMP, 
N'Approved', N'', N'', N'', N'', N'', 0, 0);
	</sql>
	</changeSet>
	<changeSet id="23" author="Pruthvi">
		<createView viewName="CUSTOMEREMPDETAILS_AVIEW" replaceIfExists="true">
			SELECT     CE.CustEmpId,CE.CustID, CE.CustEmpName, CE.CustEmpFrom, CE.CustEmpTo, CE.CustEmpDesg, 
                      DE.GenDesgDesc lovDescCustEmpDesgName, CE.CustEmpDept, DP.GenDeptDesc lovDescCustEmpDeptName, CE.CustEmpType, 
                      ET.EmpTypeDesc lovDescCustEmpTypeName, CE.Version, CE.LastMntBy, CE.LastMntOn, CE.RecordStatus, CE.RoleCode, CE.NextRoleCode, CE.TaskId, 
                      CE.NextTaskId, CE.RecordType, CE.WorkflowId, EMP.EmpName lovDesccustEmpName, CE.CurrentEmployer, 
                      EMP.EmpAlocationType
FROM          CustomerEmpDetails CE INNER JOIN
                       RMTGenDesignations DE ON CE.CustEmpDesg = DE.GenDesignation INNER JOIN
                       RMTGenDepartments DP ON CE.CustEmpDept = DP.GenDepartment INNER JOIN
                       RMTEmpTypes ET ON CE.CustEmpType = ET.EmpType INNER JOIN
                       EmployerDetail EMP ON CE.CustEmpName = EMP.EmployerId
		</createView>
	</changeSet>
	
	<changeSet id="24" author="Pruthvi">
		<createView viewName="CUSTOMEREMPDETAILS_VIEW" replaceIfExists="true">
		SELECT     CE.CustEmpId,CE.CustID, CE.CustEmpName, CE.CustEmpFrom, CE.CustEmpTo, CE.CustEmpDesg, 
                      DE.GenDesgDesc lovDescCustEmpDesgName, CE.CustEmpDept, DP.GenDeptDesc lovDescCustEmpDeptName, CE.CustEmpType, 
                      ET.EmpTypeDesc lovDescCustEmpTypeName, CE.Version, CE.LastMntBy, CE.LastMntOn, CE.RecordStatus, CE.RoleCode, CE.NextRoleCode, CE.TaskId, 
                      CE.NextTaskId, CE.RecordType, CE.WorkflowId, EMP.EmpName lovDesccustEmpName, CE.CurrentEmployer
FROM          CustomerEmpDetails_temp CE INNER JOIN
                       RMTGenDesignations DE ON CE.CustEmpDesg = DE.GenDesignation INNER JOIN
                       RMTGenDepartments DP ON CE.CustEmpDept = DP.GenDepartment INNER JOIN
                       RMTEmpTypes ET ON CE.CustEmpType = ET.EmpType INNER JOIN
                       EmployerDetail EMP ON CE.CustEmpName = EMP.EmployerId
UNION ALL
SELECT     CE.CustEmpId,CE.CustID, CE.CustEmpName, CE.CustEmpFrom, CE.CustEmpTo, CE.CustEmpDesg, 
                      DE.GenDesgDesc lovDescCustEmpDesgName, CE.CustEmpDept, DP.GenDeptDesc lovDescCustEmpDeptName, CE.CustEmpType, 
                      ET.EmpTypeDesc lovDescCustEmpTypeName, CE.Version, CE.LastMntBy, CE.LastMntOn, CE.RecordStatus, CE.RoleCode, CE.NextRoleCode, CE.TaskId, 
                      CE.NextTaskId, CE.RecordType, CE.WorkflowId, EMP.EmpName lovDesccustEmpName, CE.CurrentEmployer
FROM          CustomerEmpDetails CE INNER JOIN
                       RMTGenDesignations DE ON CE.CustEmpDesg = DE.GenDesignation INNER JOIN
                       RMTGenDepartments DP ON CE.CustEmpDept = DP.GenDepartment INNER JOIN
                       RMTEmpTypes ET ON CE.CustEmpType = ET.EmpType INNER JOIN
                       EmployerDetail EMP ON CE.CustEmpName = EMP.EmployerId
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           CustomerEmpDetails_Temp
                            WHERE      (CustID = CE.CustID)))
			</createView>
	</changeSet>
	
	<changeSet id="25" author="Pruthvi">
		<createView viewName="CUSTOMERDIRECTORDETAIL_AVIEW" replaceIfExists="true">
		SELECT     T1.DirectorId, T1.CustID, T1.FirstName, T1.MiddleName, T1.LastName, T1.ShortName, 
                      T1.CustGenderCode, T1.CustSalutationCode, T1.SharePerc, T1.CustAddrHNbr, T1.CustFlatNbr, T1.CustAddrStreet, T1.CustAddrLine1, T1.CustAddrLine2, T1.CustPOBox, 
                      T1.CustAddrCity, T1.CustAddrProvince, T1.CustAddrCountry, T1.CustAddrZIP, T1.CustAddrPhone, T1.CustAddrFrom, T1.Shareholder, T1.Director, T1.Designation, 
                      T1.IDType, T1.IDReference, T1.Nationality, T1.DOB, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T5.PCCityName lovDescCustAddrCityName, 
                      T6.CPProvinceName lovDescCustAddrProvinceName, T7.CountryDesc lovDescCustAddrCountryName, T3.GenderDesc lovDescCustGenderCodeName, 
                      T4.SaluationDesc lovDescCustSalutationCodeName, T8.DesgDesc lovDescDesignationName, T9.CountryDesc lovDescNationalityName, 
                      T10.DocTypeDesc lovDescCustDocCategoryName,COALESCE(T10.DocIdNumMand,0) IDReferenceMand
FROM          CustomerDirectorDetail T1 INNER JOIN
                       BMTGenders T3 ON T1.CustGenderCode = T3.GenderCode LEFT OUTER JOIN
                       BMTSalutations T4 ON T1.CustSalutationCode = T4.SalutationCode LEFT OUTER JOIN
                       RMTProvinceVsCity T5 ON T1.CustAddrCountry = T5.PCCountry AND T1.CustAddrProvince = T5.PCProvince AND T1.CustAddrCity = T5.PCCity LEFT OUTER JOIN
                       RMTCountryVsProvince T6 ON T1.CustAddrCountry = T6.CPCountry AND T1.CustAddrProvince = T6.CPProvince INNER JOIN
                       BMTCountries T7 ON T1.CustAddrCountry = T7.CountryCode LEFT OUTER JOIN
                       BMTDesignations T8 ON T1.Designation = T8.DesgCode LEFT OUTER JOIN
                       BMTCountries T9 ON T1.Nationality = T9.CountryCode LEFT OUTER JOIN
                       BMTDocumentTypes T10 ON T1.IDType = T10.DocTypeCode
			</createView>
	</changeSet>
	
	<changeSet id="26" author="Pruthvi">
		<createView viewName="CUSTOMERDIRECTORDETAIL_VIEW" replaceIfExists="true">
		SELECT	  T1.DirectorId, T1.CustID, T1.FirstName, T1.MiddleName, T1.LastName, T1.ShortName, 
                      T1.CustGenderCode, T1.CustSalutationCode, T1.SharePerc, T1.CustAddrHNbr, T1.CustFlatNbr, T1.CustAddrStreet, T1.CustAddrLine1, T1.CustAddrLine2, T1.CustPOBox, 
                      T1.CustAddrCity, T1.CustAddrProvince, T1.CustAddrCountry, T1.CustAddrZIP, T1.CustAddrPhone, T1.CustAddrFrom, T1.Shareholder, T1.Director, T1.Designation, 
                      T1.IDType, T1.IDReference, T1.Nationality, T1.DOB, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T5.PCCityName lovDescCustAddrCityName, 
                      T6.CPProvinceName lovDescCustAddrProvinceName, T7.CountryDesc lovDescCustAddrCountryName, T3.GenderDesc lovDescCustGenderCodeName, 
                      T4.SaluationDesc lovDescCustSalutationCodeName, T8.DesgDesc lovDescDesignationName, T9.CountryDesc lovDescNationalityName, 
                      T10.DocTypeDesc lovDescCustDocCategoryName,COALESCE(T10.DocIdNumMand,0) IDReferenceMand
			FROM         CustomerDirectorDetail_TEMP T1 INNER JOIN
                       BMTGenders T3 ON T1.CustGenderCode = T3.GenderCode LEFT OUTER JOIN
                       BMTSalutations T4 ON T1.CustSalutationCode = T4.SalutationCode LEFT OUTER JOIN
                       RMTProvinceVsCity T5 ON T1.CustAddrCountry = T5.PCCountry AND T1.CustAddrProvince = T5.PCProvince AND T1.CustAddrCity = T5.PCCity LEFT OUTER JOIN
                       RMTCountryVsProvince T6 ON T1.CustAddrCountry = T6.CPCountry AND T1.CustAddrProvince = T6.CPProvince INNER JOIN
                       BMTCountries T7 ON T1.CustAddrCountry = T7.CountryCode LEFT OUTER JOIN
                       BMTDesignations T8 ON T1.Designation = T8.DesgCode LEFT OUTER JOIN
                       BMTCountries T9 ON T1.Nationality = T9.CountryCode LEFT OUTER JOIN
                       BMTDocumentTypes T10 ON T1.IDType = T10.DocTypeCode
		UNION ALL
		SELECT     T1.DirectorId, T1.CustID, T1.FirstName, T1.MiddleName, T1.LastName, T1.ShortName, 
                      T1.CustGenderCode, T1.CustSalutationCode, T1.SharePerc, T1.CustAddrHNbr, T1.CustFlatNbr, T1.CustAddrStreet, T1.CustAddrLine1, T1.CustAddrLine2, T1.CustPOBox, 
                      T1.CustAddrCity, T1.CustAddrProvince, T1.CustAddrCountry, T1.CustAddrZIP, T1.CustAddrPhone, T1.CustAddrFrom, T1.Shareholder, T1.Director, T1.Designation, 
                      T1.IDType, T1.IDReference, T1.Nationality, T1.DOB, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T5.PCCityName lovDescCustAddrCityName, 
                      T6.CPProvinceName lovDescCustAddrProvinceName, T7.CountryDesc lovDescCustAddrCountryName, T3.GenderDesc lovDescCustGenderCodeName, 
                      T4.SaluationDesc lovDescCustSalutationCodeName, T8.DesgDesc lovDescDesignationName, T9.CountryDesc lovDescNationalityName, 
                      T10.DocTypeDesc lovDescCustDocCategoryName,COALESCE(T10.DocIdNumMand,0) IDReferenceMand
		FROM         CustomerDirectorDetail T1 INNER JOIN
                       BMTGenders T3 ON T1.CustGenderCode = T3.GenderCode LEFT OUTER JOIN
                       BMTSalutations T4 ON T1.CustSalutationCode = T4.SalutationCode LEFT OUTER JOIN
                       RMTProvinceVsCity T5 ON T1.CustAddrCountry = T5.PCCountry AND T1.CustAddrProvince = T5.PCProvince AND T1.CustAddrCity = T5.PCCity LEFT OUTER JOIN
                       RMTCountryVsProvince T6 ON T1.CustAddrCountry = T6.CPCountry AND T1.CustAddrProvince = T6.CPProvince INNER JOIN
                       BMTCountries T7 ON T1.CustAddrCountry = T7.CountryCode LEFT OUTER JOIN
                       BMTDesignations T8 ON T1.Designation = T8.DesgCode LEFT OUTER JOIN
                       BMTCountries T9 ON T1.Nationality = T9.CountryCode LEFT OUTER JOIN
                       BMTDocumentTypes T10 ON T1.IDType = T10.DocTypeCode
		WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerDirectorDetail_TEMP
                            WHERE      DirectorId = T1.DirectorId AND CustID = T1.CustID)
			</createView>
	</changeSet>
	
	<changeSet id="27" author="Pruthvi">
		<createView viewName="CUSTOMERRATINGS_AVIEW" replaceIfExists="true">
		  SELECT     T1.CustID, T1.CustRatingType, T3.RatingTypeDesc lovDescCustRatingTypeName, 
                      T1.CustRatingCode, T1.CustRating, T1.ValueType, T1.Version, T1.LastMntOn, T1.LastMntBy, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T4.RatingCodeDesc lovDescCustRatingName, 
                      T5.RatingCodeDesc lovDesccustRatingCodeDesc
FROM          CustomerRatings T1 INNER JOIN
                       BMTRatingTypes T3 ON T1.CustRatingType = T3.RatingType LEFT OUTER JOIN
                       BMTRatingCodes T4 ON T1.CustRatingType = T4.RatingType AND T1.CustRating = T4.RatingCode LEFT OUTER JOIN
                       BMTRatingCodes T5 ON T1.CustRatingType = T5.RatingType AND T1.CustRatingCode = T5.RatingCode
			</createView>
	</changeSet>
	
	<changeSet id="28" author="Pruthvi">
		<createView viewName="CUSTOMERRATINGS_VIEW" replaceIfExists="true">
		SELECT     T1.CustID, T1.CustRatingType, T3.RatingTypeDesc lovDescCustRatingTypeName, 
                      T1.CustRatingCode, T1.CustRating, T1.ValueType, T1.Version, T1.LastMntOn, T1.LastMntBy, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T4.RatingCodeDesc lovDescCustRatingName, 
                      T5.RatingCodeDesc lovDesccustRatingCodeDesc
FROM          CustomerRatings_Temp T1 INNER JOIN
                       BMTRatingTypes T3 ON T1.CustRatingType = T3.RatingType LEFT OUTER JOIN
                       BMTRatingCodes T4 ON T1.CustRatingType = T4.RatingType AND T1.CustRating = T4.RatingCode LEFT OUTER JOIN
                       BMTRatingCodes T5 ON T1.CustRatingType = T5.RatingType AND T1.CustRatingCode = T5.RatingCode
UNION ALL
SELECT     T1.CustID, T1.CustRatingType, T3.RatingTypeDesc lovDescCustRatingTypeName, 
                      T1.CustRatingCode, T1.CustRating, T1.ValueType, T1.Version, T1.LastMntOn, T1.LastMntBy, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T4.RatingCodeDesc lovDescCustRatingName, 
                      T5.RatingCodeDesc lovDesccustRatingCodeDesc
FROM          CustomerRatings T1 INNER JOIN
                       BMTRatingTypes T3 ON T1.CustRatingType = T3.RatingType LEFT OUTER JOIN
                       BMTRatingCodes T4 ON T1.CustRatingType = T4.RatingType AND T1.CustRating = T4.RatingCode LEFT OUTER JOIN
                       BMTRatingCodes T5 ON T1.CustRatingType = T5.RatingType AND T1.CustRatingCode = T5.RatingCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerRatings_Temp
                            WHERE      CustID = T1.CustID AND CustRatingType = T1.CustRatingType)
			</createView>
	</changeSet>
	
	<changeSet id="29" author="Pruthvi">
		<createView viewName="CUSTOMERDOCUMENTS_AVIEW" replaceIfExists="true">
		SELECT T1.CustID,T1.CustDocType,T2.DocTypeDesc lovDescCustDocCategory ,
          T1.CustDocTitle,T1.CustDocSysName,T1.CustDocRcvdOn,T1.CustDocExpDate,T1.CustDocIssuedOn,T1.CustDocIssuedCountry,
          T3.CountryDesc lovDescCustDocIssuedCountry,T1.CustDocIsVerified,T1.CustDocVerifiedBy,T1.CustDocIsAcrive,T1.Version,
          T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,T1.NextRoleCode,T1.CustDocName,T1.CustDocCategory,T1.CustDocImage,
          T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T2.DocExpDateIsMand,T2.DocIssueDateMand,
          T2.DocIdNumMand,T2.DocIssuedAuthorityMand,T1.DocRefId,T1.DocPurpose,T1.DocUri
  FROM CustomerDocuments T1
            JOIN BMTDocumentTypes T2   ON T1.CustDocCategory = T2.DocTypeCode
            JOIN BMTCountries T3   ON T1.CustDocIssuedCountry = T3.CountryCode
			</createView>
	</changeSet>
	
	<changeSet id="30" author="Pruthvi">
		<createView viewName="CUSTOMERDOCUMENTS_VIEW" replaceIfExists="true">
		SELECT T1.CustID ,
          T1.CustDocType ,
          T2.DocTypeDesc lovDescCustDocCategory  ,
          T1.CustDocTitle ,
          T1.CustDocSysName ,
          T1.CustDocRcvdOn ,
          T1.CustDocExpDate ,
          T1.CustDocIssuedOn ,
          T1.CustDocIssuedCountry ,
          T3.CountryDesc lovDescCustDocIssuedCountry  ,
          T1.CustDocIsVerified ,
          T1.CustDocVerifiedBy ,
          T1.CustDocIsAcrive ,
          T1.DocPurpose,
          T1.DocUri,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.CustDocName ,
          T1.CustDocCategory ,
          T1.CustDocImage ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
T2.DocExpDateIsMand ,
      T2.DocIssueDateMand ,
      T2.DocIdNumMand	 ,
      T2.DocIssuedAuthorityMand	,
	  T1.DocRefId	  
     FROM CustomerDocuments_Temp T1
            JOIN BMTDocumentTypes T2   ON T1.CustDocCategory = T2.DocTypeCode
            JOIN BMTCountries T3   ON T1.CustDocIssuedCountry = T3.CountryCode
   UNION ALL 
   SELECT T1.CustID ,
          T1.CustDocType ,
          T2.DocTypeDesc lovDescCustDocCategory  ,
          T1.CustDocTitle ,
          T1.CustDocSysName ,
          T1.CustDocRcvdOn ,
          T1.CustDocExpDate ,
          T1.CustDocIssuedOn ,
          T1.CustDocIssuedCountry ,
          T3.CountryDesc lovDescCustDocIssuedCountry  ,
          T1.CustDocIsVerified ,
          T1.CustDocVerifiedBy ,
          T1.CustDocIsAcrive ,
          T1.DocPurpose,
          T1.DocUri,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.CustDocName ,
          T1.CustDocCategory ,
          T1.CustDocImage ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId ,
		  T2.DocExpDateIsMand ,
      T2.DocIssueDateMand ,
      T2.DocIdNumMand,
      T2.DocIssuedAuthorityMand,
	  T1.DocRefId
     FROM CustomerDocuments T1
            JOIN BMTDocumentTypes T2   ON T1.CustDocCategory = T2.DocTypeCode
            JOIN BMTCountries T3   ON T1.CustDocIssuedCountry = T3.CountryCode
     WHERE NOT EXISTS ( SELECT 1 
                        FROM CustomerDocuments_Temp 
                          WHERE CustID = T1.CustID
                                  AND CustDocCategory = T1.CustDocCategory )
			</createView>
	</changeSet>
	
	<changeSet id="31" author="Pruthvi">
		<createView viewName="CUSTOMERADDRESSES_AVIEW" replaceIfExists="true">
		SELECT T1.CustID ,
          T1.CustAddrType ,
          T2.AddrTypeDesc lovDescCustAddrTypeName  ,
          T1.CustAddrHNbr ,
          T1.CustFlatNbr ,
          T1.CustAddrStreet ,
          T1.CustAddrLine1 ,
          T1.CustAddrLine2 ,
          T1.CustPOBox ,
          T1.CustAddrCity ,
		  T1.TypeOfResidence,
          T3.PCCityName lovDescCustAddrCityName  ,
          T1.CustAddrProvince ,
          T4.CPProvinceName lovDescCustAddrProvinceName  ,
          T1.CustAddrCountry ,
          T5.CountryDesc lovDescCustAddrCountryName  ,
          T1.CustAddrZIP ,
          T1.CustAddrPhone ,
          T1.CustAddrFrom ,
          T1.custAddrPriority ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId
     FROM CustomerAddresses T1
            LEFT JOIN BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
            LEFT JOIN RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry
            AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
            LEFT JOIN RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry
            AND T1.CustAddrProvince = T4.CPProvince
            LEFT JOIN BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
			</createView>
	</changeSet>
	
	<changeSet id="32" author="Pruthvi">
		<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
		SELECT T1.CustID ,
          T1.CustAddrType ,
          T2.AddrTypeDesc lovDescCustAddrTypeName  ,
          T1.CustAddrHNbr ,
          T1.CustFlatNbr ,
          T1.CustAddrStreet ,
          T1.CustAddrLine1 ,
          T1.CustAddrLine2 ,
          T1.CustPOBox ,
          T1.CustAddrCity ,
		  T1.TypeOfResidence,
          T3.PCCityName lovDescCustAddrCityName  ,
          T1.CustAddrProvince ,
          T4.CPProvinceName lovDescCustAddrProvinceName  ,
          T1.CustAddrCountry ,
          T5.CountryDesc lovDescCustAddrCountryName  ,
          T1.CustAddrZIP ,
          T1.CustAddrPhone ,
          T1.CustAddrFrom ,
          T1.custAddrPriority ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId
     FROM CustomerAddresses_Temp T1
            LEFT JOIN BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
            LEFT JOIN RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry
            AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
            LEFT JOIN RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry
            AND T1.CustAddrProvince = T4.CPProvince
            LEFT JOIN BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
   UNION ALL 
   SELECT T1.CustID ,
          T1.CustAddrType ,
          T2.AddrTypeDesc lovDescCustAddrTypeName  ,
          T1.CustAddrHNbr ,
          T1.CustFlatNbr ,
          T1.CustAddrStreet ,
          T1.CustAddrLine1 ,
          T1.CustAddrLine2 ,
          T1.CustPOBox ,
          T1.CustAddrCity ,
		  T1.TypeOfResidence,
          T3.PCCityName lovDescCustAddrCityName  ,
          T1.CustAddrProvince ,
          T4.CPProvinceName lovDescCustAddrProvinceName  ,
          T1.CustAddrCountry ,
          T5.CountryDesc lovDescCustAddrCountryName  ,
          T1.CustAddrZIP ,
          T1.CustAddrPhone ,
          T1.CustAddrFrom ,
          T1.custAddrPriority ,
          T1.Version ,
          T1.LastMntBy ,
          T1.LastMntOn ,
          T1.RecordStatus ,
          T1.RoleCode ,
          T1.NextRoleCode ,
          T1.TaskId ,
          T1.NextTaskId ,
          T1.RecordType ,
          T1.WorkflowId
     FROM CustomerAddresses T1
            LEFT JOIN BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
            LEFT JOIN RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry
            AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
            LEFT JOIN RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry
            AND T1.CustAddrProvince = T4.CPProvince
            LEFT JOIN BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
     WHERE NOT EXISTS ( SELECT 1 
                        FROM CustomerAddresses_Temp 
                          WHERE CustID = T1.CustID
                                  AND CustAddrType = T1.CustAddrType )
			</createView>
	</changeSet>
	
	<changeSet id="33" author="Pruthvi">
		<createView viewName="CUSTOMERPHONENUMBERS_AVIEW" replaceIfExists="true">
		SELECT     T1.PhoneCustID, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
           T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
           T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName
FROM         CustomerPhoneNumbers T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode
			</createView>
	</changeSet>
	
	<changeSet id="34" author="Pruthvi">
		<createView viewName="CUSTOMERPHONENUMBERS_VIEW" replaceIfExists="true">
		SELECT     T1.PhoneCustID, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
                      T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName
FROM         CustomerPhoneNumbers_TEMP T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode
UNION ALL
SELECT     T1.PhoneCustID, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
                      T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName
FROM         CustomerPhoneNumbers T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerPhoneNumbers_TEMP
                            WHERE      PhoneCustID = T1.PhoneCustID AND PhoneTypeCode = T1.PhoneTypeCode)
			</createView>
	</changeSet>
	
	
	<changeSet id="35" author="Pruthvi">
		<createView viewName="CUSTOMEREMAILS_AVIEW" replaceIfExists="true">
		SELECT     CE.CustID, CE.CustEMailTypeCode, 
                      E.EmailTypeDesc lovDescCustEMailTypeCode, CE.CustEMailPriority, CE.CustEMail, CE.Version, CE.LastMntBy, CE.LastMntOn, CE.RecordStatus, 
                      CE.RoleCode, CE.NextRoleCode, CE.TaskId, CE.NextTaskId, CE.RecordType, CE.WorkflowId
FROM          CustomerEMails CE INNER JOIN
                       BMTEMailTypes E ON CE.CustEMailTypeCode = E.EmailTypeCode
			</createView>
	</changeSet>
	
	<changeSet id="36" author="Pruthvi">
		<createView viewName="CUSTOMEREMAILS_VIEW" replaceIfExists="true">
		  SELECT     CE.CustID, CE.CustEMailTypeCode, 
                      E.EmailTypeDesc lovDescCustEMailTypeCode, CE.CustEMailPriority, CE.CustEMail, CE.Version, CE.LastMntBy, CE.LastMntOn, 
                      CE.RecordStatus, CE.RoleCode, CE.NextRoleCode, CE.TaskId, CE.NextTaskId, CE.RecordType, CE.WorkflowId
		FROM          CustomerEMails_Temp CE INNER JOIN
                       BMTEMailTypes E ON CE.CustEMailTypeCode = E.EmailTypeCode
		UNION ALL
			SELECT     CE.CustID, CE.CustEMailTypeCode, 
                      E.EmailTypeDesc lovDescCustEMailTypeCode, CE.CustEMailPriority, CE.CustEMail, CE.Version, CE.LastMntBy, CE.LastMntOn, 
                      CE.RecordStatus, CE.RoleCode, CE.NextRoleCode, CE.TaskId, CE.NextTaskId, CE.RecordType, CE.WorkflowId
			FROM          CustomerEMails CE INNER JOIN
                       BMTEMailTypes E ON CE.CustEMailTypeCode = E.EmailTypeCode
			WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerEMails_Temp
                            WHERE      CustID = CE.CustID AND CustEMailTypeCode = CE.CustEMailTypeCode)
			</createView>
	</changeSet>
	
	<changeSet id="37" author="Pruthvi">
		<createView viewName="CUSTOMERBANKINFO_AVIEW" replaceIfExists="true">
		 SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
		     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		     T3.BankName lovDescBankName,T4.AcTypeDesc lovDescAccountType
  FROM       CustomerBankInfo T1 INNER JOIN 
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             RMTAccountTypes T4 ON T4.AcType = T1.AccountType
			</createView>
	</changeSet>
	
	<changeSet id="38" author="Pruthvi">
		<createView viewName="CUSTOMERBANKINFO_VIEW" replaceIfExists="true">
		  SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
		     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		     T3.BankName lovDescBankName,T4.AcTypeDesc lovDescAccountType
  FROM       CustomerBankInfo_Temp T1 INNER JOIN 
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             RMTAccountTypes T4 ON T4.AcType = T1.AccountType 
UNION ALL

  SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
		     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		     T3.BankName lovDescBankName,T4.AcTypeDesc lovDescAccountType
  FROM       CustomerBankInfo T1 INNER JOIN 
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             RMTAccountTypes T4 ON T4.AcType = T1.AccountType
WHERE     NOT EXISTS (SELECT 1 FROM CustomerBankInfo_TEMP WHERE BankId = T1.BankId)
			</createView>
	</changeSet>
	
	<changeSet id="39" author="Pruthvi">
		<createView viewName="CUSTOMERCHEQUEINFO_AVIEW" replaceIfExists="true">
		SELECT      T1.CustID, T1.ChequeSeq, T1.MonthYear, T1.TotChequePayment, T1.Salary, T1.Debits, T1.ReturnChequeAmt,
			T1.ReturnChequeCount, T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId
FROM         CustomerChequeInfo T1
			</createView>
	</changeSet>
	
	<changeSet id="40" author="Pruthvi">
		<createView viewName="CUSTOMERCHEQUEINFO_VIEW" replaceIfExists="true">
		  SELECT      T1.CustID, T1.ChequeSeq, T1.MonthYear, T1.TotChequePayment, T1.Salary,T1.Debits, T1.ReturnChequeAmt,
			T1.ReturnChequeCount, T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId
FROM         CustomerChequeInfo_Temp T1
UNION ALL

 SELECT      T1.CustID, T1.ChequeSeq, T1.MonthYear, T1.TotChequePayment, T1.Salary,T1.Debits, T1.ReturnChequeAmt,
			T1.ReturnChequeCount, T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId
FROM         CustomerChequeInfo T1

WHERE     NOT EXISTS (SELECT 1 FROM CustomerChequeInfo_TEMP WHERE CustID = T1.CustID And ChequeSeq = T1.ChequeSeq)
			</createView>
	</changeSet>
	
	<changeSet id="41" author="Pruthvi">
		<createView viewName="CUSTOMEREXTLIABILITY_AVIEW" replaceIfExists="true">
		SELECT      T1.CustID, T1.LiabilitySeq, T1.FinDate, T1.FinType, T1.BankName, T1.OriginalAmount, T1.InstalmentAmount,
	        T1.OutStandingBal, T1.FinStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T3.BankName lovDescBankName,T4.FinTypeDesc lovDescFinType,T5.CustStsDescription lovDescFinStatus
FROM         CustomerExtLiability T1 INNER JOIN 
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             OtherBankFinanceType T4 ON T4.FinType = T1.FinType LEFT OUTER JOIN
             BMTCustStatusCodes T5 ON T5.CustStsCode = T1.FinStatus
			</createView>
	</changeSet>
	
	<changeSet id="42" author="Pruthvi">
		<createView viewName="CUSTOMEREXTLIABILITY_VIEW" replaceIfExists="true">
		SELECT      T1.CustID, T1.LiabilitySeq, T1.FinDate, T1.FinType, T1.BankName, T1.OriginalAmount, T1.InstalmentAmount,
	        T1.OutStandingBal, T1.FinStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T3.BankName lovDescBankName,T4.FinTypeDesc lovDescFinType, T5.CustStsDescription lovDescFinStatus
FROM         CustomerExtLiability_Temp T1 INNER JOIN 
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             OtherBankFinanceType T4 ON T4.FinType = T1.FinType LEFT OUTER JOIN
             BMTCustStatusCodes T5 ON T5.CustStsCode = T1.FinStatus 

UNION ALL

SELECT      T1.CustID, T1.LiabilitySeq, T1.FinDate, T1.FinType, T1.BankName, T1.OriginalAmount, T1.InstalmentAmount,
	        T1.OutStandingBal, T1.FinStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T3.BankName lovDescBankName,T4.FinTypeDesc lovDescFinType,T5.CustStsDescription lovDescFinStatus
FROM         CustomerExtLiability T1 INNER JOIN 
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             OtherBankFinanceType T4 ON T4.FinType = T1.FinType LEFT OUTER JOIN
             BMTCustStatusCodes T5 ON T5.CustStsCode = T1.FinStatus 

WHERE     NOT EXISTS (SELECT 1 FROM CustomerExtLiability_TEMP WHERE CustID = T1.CustID  And LiabilitySeq = T1.LiabilitySeq)
			</createView>
	</changeSet>
	
	<changeSet id="43" author="Pruthvi">
		<createView viewName="FINANCEENQUIRY_VIEW" replaceIfExists="true">
		SELECT     T1.FinReference, T1.FinBranch, T1.FinType, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.FinStartDate, T1.CalTerms NumberOfTerms, T1.CustID, T1.FinAmount, 
                      T1.GrcPeriodEndDate, T1.MaturityDate, T1.FinRepaymentAmount, T1.FinIsActive, T1.AllowGrcPeriod,T1.DownPayment, 
                      T1.MigratedFinance,T1.LastRepayDate, T1.LastRepayPftDate,T1.InsuranceAmt,
                      T5.FinTypeDesc LovDescFinTypeName, T6.CustCIF LovDescCustCIF, T6.CustShrtName LovDescCustShrtName, T7.BranchDesc LovDescFinBranchName, 
                      T1.Blacklisted, T5.FinScheduleOn LovDescFinScheduleOn, T1.FeeChargeAmt, T1.ClosingStatus, T8.CustTypeCtg, 
                      T1.GraceTerms, T5.FinDivision lovDescFinDivision, T5.FinCategory lovDescProductCodeName, 
                      T1.AlwMultiDisb , T5.FinIsAlwDifferment lovDescFinAlwDeferment,T1.Defferments,
                       (T1.FinAmount-T1.DownPayment+ T1.FeeChargeAmt+T1.InsuranceAmt) FinancingAmount,
                      (T1.FinAmount-T1.DownPayment- T1.FinRepaymentAmount+ T1.FeeChargeAmt+T1.InsuranceAmt) CurFinAmount,
                      T1.FinStatus ,T1.MandateID,T1.FinRepayMethod 
FROM          FinanceMain T1 INNER JOIN
                       RMTFinanceTypes T5 ON T1.FinType = T5.FinType INNER JOIN
                       Customers T6 ON T1.CustID = T6.CustID INNER JOIN
                       RMTBranches T7 ON T1.FinBranch = T7.BranchCode INNER JOIN
                       RMTCustTypes T8 ON T6.CustTypeCode = T8.CustTypeCode
			</createView>
	</changeSet>
	
	<changeSet id="44" author="Pruthvi">
		<createView viewName="RMTFINANCETYPES_ORGVIEW" replaceIfExists="true">
		SELECT		T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, 
					T1.FinContingentAcType, T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, 
					T1.FinIsAlwMD, T1.FinSchdMthd, T1.FInIsAlwGrace, T1.EqualRepayment, T1.FinRateType, 
					T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, 
					T1.FinIsIntCpz, T1.FinCpzFrq, T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, 
					T1.FinGrcSplRate, T1.FinGrcIntRate, T1.FInGrcMinRate, T1.FinGrcMaxRate, T1.FinGrcDftIntFrq, 
					T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, T1.FinGrcRvwFrq, T1.FinMinTerm, 
					T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwDifferment, 
					T1.FinMaxDifferment, T1.FinIsActive, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, 
					T1.AlwdStepPolicies, T1.DftStepPolicy, T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,
					T1.FinAlwRateChangeAnyDate,  T1.FinIsIntCpzAtGrcEnd, T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment, 
					T1.PlanDeferCount, T1.PftPayAcType, T1.FinIsOpenPftPayAcc, T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, 
					T1.FinGrcMargin, T1.FinMargin, T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, 
					T1.FinDepreciationFrq, T1.FinBankContingentAcType, T1.FinProvisionAcType, T1.AllowRIAInvestment, 
					T1.OverrideLimit, T1.LimitRequired, T1.FinCommitmentOvrride, T1.FinCollateralOvrride, 
					T1.FinRepayPftOnFrq, T1.FinPftUnChanged, T1.ApplyODPenalty, T1.ODIncGrcDays, T1.ODChargeType, 
					T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc, T1.ODAllowWaiver, T1.ODMaxWaiverPerc, 
					T1.FinDivision, T3.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType, T1.Product, 
					T1.StartDate, T1.EndDate, T1.AllowDownpayPgm, T1.FinTypeDesc lovDescPromoFinTypeDesc, T1.Remarks, 
					T4.PolicyDesc lovDescDftStepPolicyName, T1.PastduePftCalMthd,  T1.AlwAdvanceRent, 
					T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, 
					T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule, T1.AlwMultiPartyDisb, 
					T1.collateralType, T1.TDSApplicable, T5.RuleCode DownPayRuleDesc, T1.ApplyGrcPricing, 
					T1.ApplyRpyPricing, T6.RuleCode GrcPricingMethodDesc, T7.RuleCode RpyPricingMethodDesc, 
					T1.DroplineOD, T1.DroppingMethod, T1.RateChgAnyDay, T4.StepType DftStepPolicyType, 
					T1.ManualSchedule,T8.ProductCategory, T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , 
					T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax ,T1.PlanEMIHLockPeriod , 
					T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, 
					T1.AlwdRpyMethods, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, 
					T1.QuickDisb,T1.AlwReage,T1.AlwUnPlanEmiHoliday,T1.AlwMaxDisbCheckReq
					FROM			RMTFinanceTypes T1 INNER JOIN
                    SMTDivisionDetail T3 ON T1.FinDivision = T3.DivisionCode LEFT OUTER JOIN
					                StepPolicyHeader T4 ON T1.DftStepPolicy = T4.PolicyCode LEFT OUTER JOIN
					                Rules T5 ON T1.DownPayRule = T5.RuleId LEFT OUTER JOIN
					                Rules T6 ON T1.GrcPricingMethod = T6.RuleId LEFT OUTER JOIN
					                Rules T7 ON T1.RpyPricingMethod = T7.RuleId INNER JOIN
									BMTProduct T8 ON T1.FinCategory = T8.ProductCode
			</createView>
	</changeSet>
	
	<changeSet id="45" author="Pruthvi">
		<createView viewName="RMTFINANCETYPES_AVIEW" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
				           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
						   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension,  T1.EqualRepayment, T1.FinRateType,
						   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
				           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
						   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
						   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
						   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
						   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
						   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
						   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
						   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
				           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
						   T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
						   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
				           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
				           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
				           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
				           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,
						   T1.FinCommitmentOvrride, T1.FinCollateralOvrride, 
				           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
						   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
						   T49.AcTypeDesc lovDescFinSuspAcTypeName,T1.Product, T1.StartDate, T1.EndDate,
						   T1.AllowDownpayPgm, T1.Remarks, 
						   T1.AlwEarlyPayMethods,T1.PastduePftCalMthd,T1.PastduePftMargin, 
						   T1.AlwAdvanceRent, T1.GrcAdvBaseRate, 
				           T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate,  
				           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
						   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
						   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
						   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
						   T1.RateChgAnyDay, T1.FinRepayPftOnFrq,
						    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
							T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, 
							T1.AlwdRpyMethods, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwReage,
							T1.AlwUnPlanEmiHoliday,T1.AlwMaxDisbCheckReq, T1.FinTypeDesc lovDescPromoFinTypeDesc, T3.ProductDesc lovDescProductCodeDesc,T3.ProductCategory 
				FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
				           BMTProduct T3 ON T1.FinCategory = T3.ProductCode LEFT OUTER JOIN
				           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
				           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
				           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
				           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
				           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
				           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
				           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
				           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
				           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
				           Rules T68 ON T1.RpyPricingMethod = T68.RuleId
			</createView>
	</changeSet>
	
	<changeSet id="46" author="Pruthvi">
		<createView viewName="RMTFINANCETYPES_VIEW" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					   T1.AllowDownpayPgm, T1.FinTypeDesc lovDescPromoFinTypeDesc, 
			          T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					  T1.AlwAdvanceRent, T1.GrcAdvBaseRate,T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory , T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday
			FROM       RMTFinanceTypes_Temp T1 LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId 
			UNION ALL
			SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName, 
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinGrcRvwRateApplFor, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired, T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					  T1.AllowDownpayPgm, T1.FinTypeDesc lovDescPromoFinTypeDesc, T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					   T1.AlwAdvanceRent, T1.GrcAdvBaseRate,  T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory ,T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday
			FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId 
			WHERE     (NOT EXISTS
			                          (SELECT     1 Expr1
			                            FROM          RMTFinanceTypes_Temp
			                            WHERE      (FinType = T1.FinType)))
			</createView>
	</changeSet>
	
	<changeSet id="47" author="Pruthvi">
		<createView viewName="LMTFINREFDETAIL_FINVIEW" replaceIfExists="true">
		SELECT     T1.AccountSetid, T1.EventCode, T1.AccountSetCode, T1.AccountSetCodeName, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.AEEventCodeDesc lovDescEventCodeName, 
                      T1.SystemDefault, T1.EntryByInvestment

FROM         RMTAccountingSet_Temp T1 INNER JOIN
                       BMTAEEvents T2 ON T1.EventCode = T2.AEEventCode
UNION ALL
SELECT     T1.AccountSetid, T1.EventCode, T1.AccountSetCode, T1.AccountSetCodeName, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.AEEventCodeDesc lovDescEventCodeName, 
                      T1.SystemDefault, T1.EntryByInvestment

FROM         RMTAccountingSet T1 INNER JOIN
                       BMTAEEvents T2 ON T1.EventCode = T2.AEEventCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          RMTAccountingSet_TEMP
                            WHERE      AccountSetid = T1.AccountSetid)
			</createView>
	</changeSet>
	<changeSet id="48" author="Pruthvi">
		<createView viewName="LMTFINREFDETAIL_VASVIEW" replaceIfExists="true">
		SELECT     T1.FinRefDetailId, T1.FinType, T1.FinRefType, T1.FinRefId,T1.IsActive, T1.ShowInStage,
			           T1.MandInputInStage,T1.AllowInputInStage, T1.AllowDeviation, T1.AllowWaiver, T1.AllowPostpone,
					   T1.AllowExpire,T1.OverRide,T1.OverRideValue,T1.FinEvent, T1.AlertType,
					   T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
					   T1.RecordType, T1.WorkflowId, 
					   T11.ProductDesc  lovDescFinTypeDescName, T3.AggImage lovDescAggImage,
					   COALESCE (T3.AggName, T4.EventCode) lovDescNamelov,
					   T3.AggCode  lovDescCodelov,
					   COALESCE (T3.AggDesc, T4.AccountSetCodeName, T5.CheckListDesc) lovDescRefDesc,
					   T3.AggReportName lovDescAggReportName,T3.AggReportPath lovDescAggReportPath,
					   T3.AgrRule lovDescAggRuleName, T3.Aggtype,T3.moduleType,COALESCE(T3.AllowMultiple, 0) AllowMultiple,
					   COALESCE(T5.Remarks, '0') lovDescIsRemarksAllowed,COALESCE(T5.CheckMinCount, 0) lovDescCheckMinCount,
					   COALESCE(T5.CheckMaxCount, 0) lovDescCheckMaxCount
			FROM       LMTFinRefDetail T1 INNER JOIN
					   VasStructure T11 ON T1.FinType = T11.ProductCode LEFT OUTER JOIN
			           BMTAggrementDef T3 ON T1.FinRefId = T3.AggId AND T1.FinRefType = 2 LEFT OUTER JOIN
					   RMTAccountingSet T4 ON T1.FinRefId = T4.AccountSetid AND T1.FinRefType = 5 LEFT OUTER JOIN
			           BMTCheckList T5 ON T1.FinRefId = T5.CheckListId AND T1.FinRefType = 1 LEFT OUTER JOIN
			           Rules T6 ON T6.RuleCode = T5.CheckRule AND T6.RuleModule = 'CLRULE' AND T6.RuleEvent = 'CLRULE'
					</createView>
	</changeSet>
	
	<changeSet id="49" author="Pruthvi">
		<createView viewName="LMTFINREFDETAIL_CMTVIEW" replaceIfExists="true">
	SELECT     T1.FinRefDetailId, T1.FinType, T1.FinRefType, T1.FinRefId,T1.IsActive, T1.ShowInStage,
			           T1.MandInputInStage,T1.AllowInputInStage, T1.AllowDeviation, T1.AllowWaiver, T1.AllowPostpone,
					   T1.AllowExpire,T1.OverRide,T1.OverRideValue,T1.FinEvent, T1.AlertType,
					   T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
					   T1.RecordType, T1.WorkflowId, 
					   T3.AggImage lovDescAggImage,
					   COALESCE (T3.AggName, T4.EventCode) lovDescNamelov,
					   T3.AggCode  lovDescCodelov,
					   COALESCE (T3.AggDesc, T4.AccountSetCodeName, T5.CheckListDesc) lovDescRefDesc,
					   T3.AggReportName lovDescAggReportName,T3.AggReportPath lovDescAggReportPath,
					   T3.AgrRule lovDescAggRuleName, T3.Aggtype,T3.moduleType,COALESCE(T3.AllowMultiple, 0) AllowMultiple,
					   COALESCE(T5.Remarks, '0') lovDescIsRemarksAllowed,COALESCE(T5.CheckMinCount, 0) lovDescCheckMinCount,
					   COALESCE(T5.CheckMaxCount, 0) lovDescCheckMaxCount
			FROM       LMTFinRefDetail T1 LEFT OUTER JOIN
			           BMTAggrementDef T3 ON T1.FinRefId = T3.AggId AND T1.FinRefType = 2 LEFT OUTER JOIN
					   RMTAccountingSet T4 ON T1.FinRefId = T4.AccountSetid AND T1.FinRefType = 5 LEFT OUTER JOIN
			           BMTCheckList T5 ON T1.FinRefId = T5.CheckListId AND T1.FinRefType = 1 LEFT OUTER JOIN
			           Rules T6 ON T6.RuleCode = T5.CheckRule AND T6.RuleModule = 'CLRULE' AND T6.RuleEvent = 'CLRULE'
						</createView>
	</changeSet>
	
	
		<changeSet id="50" author="Pruthvi">
		<createView viewName="LMTFINREFDETAIL_CLTVIEW" replaceIfExists="true">
		SELECT     T1.FinRefDetailId, T1.FinType, T1.FinRefType, T1.FinRefId,T1.IsActive, T1.ShowInStage,
			           T1.MandInputInStage,T1.AllowInputInStage, T1.AllowDeviation, T1.AllowWaiver, T1.AllowPostpone,
					   T1.AllowExpire,T1.OverRide,T1.OverRideValue,T1.FinEvent, T1.AlertType,
					   T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
					   T1.RecordType, T1.WorkflowId, 
					   T10.CollateralDesc  lovDescFinTypeDescName, T3.AggImage lovDescAggImage,
					   COALESCE (T3.AggName, T4.EventCode) lovDescNamelov,
					   T3.AggCode lovDescCodelov,
					   COALESCE (T3.AggDesc, T4.AccountSetCodeName, T5.CheckListDesc)
					   lovDescRefDesc,T3.AggReportName lovDescAggReportName,T3.AggReportPath lovDescAggReportPath,
					   T3.AgrRule lovDescAggRuleName, T3.Aggtype,T3.moduleType,COALESCE(T3.AllowMultiple, 0) AllowMultiple,
					   COALESCE(T5.Remarks, '0') lovDescIsRemarksAllowed,COALESCE(T5.CheckMinCount, 0) lovDescCheckMinCount,
					   COALESCE(T5.CheckMaxCount, 0) lovDescCheckMaxCount,T6.SQLRule LovDescElgRuleValue,T6.ReturnType lovDescRuleReturnType
					   		   
			FROM       LMTFinRefDetail T1 INNER JOIN
					  CollateralStructure T10 ON T1.FinType = T10.CollateralType  LEFT JOIN
			           BMTAggrementDef T3 ON T1.FinRefId = T3.AggId AND T1.FinRefType = 2 LEFT OUTER JOIN
					   RMTAccountingSet T4 ON T1.FinRefId = T4.AccountSetid AND T1.FinRefType = 5 LEFT OUTER JOIN
			           BMTCheckList T5 ON T1.FinRefId = T5.CheckListId AND T1.FinRefType = 1 LEFT OUTER JOIN
			           Rules T6 ON T6.RuleCode = T5.CheckRule AND T6.RuleModule = 'CLRULE' AND T6.RuleEvent = 'CLRULE'
								</createView>
	</changeSet>
	
			<changeSet id="51" author="Pruthvi">
		<createView viewName="LMTFINREFDETAIL_FINVIEW" replaceIfExists="true">
		SELECT     T1.FinRefDetailId, T1.FinType, T1.FinRefType, T1.FinRefId,T1.IsActive, T1.ShowInStage,
			           T1.MandInputInStage,T1.AllowInputInStage, T1.AllowDeviation, T1.AllowWaiver, T1.AllowPostpone,
					   T1.AllowExpire,T1.OverRide,T1.OverRideValue,T1.FinEvent, T1.AlertType,
					   T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId,
					   T1.RecordType, T1.WorkflowId, T2.FinTypeDesc lovDescFinTypeDescName, T2.FinCcy lovDescFinCcyCode,T2.FinCategory lovDescProductCodeName,
					   T3.AggImage lovDescAggImage,
					   COALESCE (T3.AggName, T4.EventCode, T7.RuleCodeDesc, T8.ScoreGroupName, T9.ScoreGroupName) lovDescNamelov,
					   COALESCE (T3.AggCode, T7.RuleCode, T8.ScoreGroupCode, T9.ScoreGroupCode) lovDescCodelov,
					   COALESCE (T3.AggDesc, T4.AccountSetCodeName, T5.CheckListDesc, cast(T7.RuleCode as varchar(8)), cast(T8.ScoreGroupCode as varchar(8)), cast(T9.ScoreGroupCode as varchar(8)))
					   lovDescRefDesc,T3.AggReportName lovDescAggReportName,T3.AggReportPath lovDescAggReportPath,
					   T3.AgrRule lovDescAggRuleName, T3.Aggtype,T3.moduleType,COALESCE(T3.AllowMultiple, 0) AllowMultiple,
					   COALESCE(T5.Remarks, '0') lovDescIsRemarksAllowed,COALESCE(T5.CheckMinCount, 0) lovDescCheckMinCount,
					   COALESCE(T5.CheckMaxCount, 0) lovDescCheckMaxCount,
					   COALESCE (T6.SQLRule, T7.SQLRule) LovDescElgRuleValue,COALESCE (T6.ReturnType, T7.ReturnType) lovDescRuleReturnType,
					   COALESCE (T8.MinScore, T9.MinScore, '0') lovDescminScore,COALESCE (T8.IsOverride, T9.IsOverride, 0) lovDescisoverride,
					   COALESCE (T8.OverrideScore, T9.OverrideScore, '0') lovDescoverrideScore
					   		   
			FROM       LMTFinRefDetail T1 INNER JOIN
					  RMTFinanceTypes T2 ON T1.FinType = T2.FinType  LEFT JOIN
			           BMTAggrementDef T3 ON T1.FinRefId = T3.AggId AND T1.FinRefType = 2 LEFT OUTER JOIN
					   RMTAccountingSet T4 ON T1.FinRefId = T4.AccountSetid AND T1.FinRefType = 5 LEFT OUTER JOIN
			           BMTCheckList T5 ON T1.FinRefId = T5.CheckListId AND T1.FinRefType = 1 LEFT OUTER JOIN
			           Rules T6 ON T6.RuleCode = T5.CheckRule AND T6.RuleModule = 'CLRULE' AND T6.RuleEvent = 'CLRULE' LEFT OUTER JOIN
			           Rules T7 ON T1.FinRefId = T7.RuleId AND T1.FinRefType = 3 LEFT OUTER JOIN
			           RMTScoringGroup T8 ON T1.FinRefId = T8.ScoreGroupId AND T1.FinRefType = 4 AND 
					   T8.CategoryType = 'RETAIL'  LEFT OUTER JOIN
			           RMTScoringGroup T9 ON T1.FinRefId = T9.ScoreGroupId AND T1.FinRefType = 7 AND T9.CategoryType = 'CORP'
										</createView>
	</changeSet>
	
			<changeSet id="52" author="SreeRavali">
		<sql>
			Delete from SecGroupRights where GrpID in (select GrpID from secGroups where GrpCode = 'OD_ODMAINTENANCE_MAKER');
			Delete from SecGroupRights where GrpID in (select GrpID from secGroups where GrpCode = 'OD_MAINTENANCE_APPROVER');
			
			delete from secrolegroups where roleid in (select roleid from secroles where rolecd = 'OPERATIONS_OFFICER') and grpid in(select grpid from secgroups where grpcode ='OD_ODMAINTENANCE_MAKER');
			delete from secrolegroups where roleid in (select roleid from secroles where rolecd = 'OPERATIONS_MANAGER') and grpid in(select grpid from secgroups where grpcode ='OD_MAINTENANCE_APPROVER');
			
			delete from secgroups where grpid = (select grpid from secgroups where grpcode ='OD_MAINTENANCE_APPROVER');
			delete from secgroups where grpid = (select grpid from secgroups where grpcode ='OD_ODMAINTENANCE_MAKER');
		</sql>
	</changeSet>

		<changeSet author="SreeRavali" id="53">
		<sql>
		
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'OD_MAINTENANCE_APPROVER', 'Overdraft Maintenance Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;

			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'OD_ODMAINTENANCE_MAKER', 'Overdraft Maintenance Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_dmaCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_salesDepartment'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_applyODPenalty'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDIncGrcDays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDChargeType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDGraceDays'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDChargeCalOn'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDAllowWaiver'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDMaxWaiverPerc'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDChargeAmtOrPerc'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_disbAcctId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnFlagDetails'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_finRepayMethod'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnValidate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_accountsOfficer'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_finAssetValue'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_odYearlyTerms'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_pftServicingODLimit'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_repayFrq'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_droplineFrq'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_firstDroplineDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_scheduleMethod'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_repayRvwFrq'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_nextRepayRvwDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_nextRepayDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnBuildSchd'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_OverdraftSchedule'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_MAINTENANCE_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_FinanceManagement'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_MAINTENANCE_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinanceManagement_OverdraftSchedule'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_MAINTENANCE_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
						
				
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='OD_ODMAINTENANCE_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_OFFICER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='OD_MAINTENANCE_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='OPERATIONS_MANAGER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 



			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		
		</sql>
	</changeSet>  	
	
	<changeSet  author="SreeRavali" id="54">
	<sql>
		delete from ErrorDetails where ErrorCode = '30576';
		INSERT INTO ErrorDetails VALUES('30576','EN','E','Limit Increase Date is greater than Newly Calculated Maturity date,Tenor should be 
		modified.','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		update ErrorDetails set ErrorMessage = 'Disbursement Date exists with {0} is greater than New Maturity date,Terms Should be modified.'
		 where ErrorCode = '30575';
	</sql>
</changeSet>	
	<changeSet  author="Madhubabu" id="55">
	<sql>
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CUSTOMER_DDE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CustomerIncomeDialog_custIncomeType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_WRM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CustomerIncomeDialog_custIncomeType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CUSTOMER_DDE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CustomerIncomeDialog_custID'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_WRM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CustomerIncomeDialog_custID'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CUSTOMER_DDE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CustomerIncomeDialog_custIncome'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='CL_ORIGINATION_WRM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='CustomerIncomeDialog_custIncome'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
	</sql>
</changeSet>
<changeSet  author="Prasad" id="56">
	<sql>
		Insert into REPORTCONFIGURATION 
values ((select max(reportid)+1 from REPORTCONFIGURATION),'No Objection Certificate','No Objection Certificate',1,'NoObjectionCertificate','pfsDatasource',
0,'menu_Item_NoObjectionCertificate',2,1000,'','','','','','',0,current_Timestamp,0);

Insert into REPORTFILTERFIELDS 
values ((select max(reportid)from REPORTCONFIGURATION),1,'FinReference','LOVSEARCH','Loan Reference','FinReference',null,'FinanceMain','getFinReference','getFinReference',0,0,0,0,1,1,' ',' ',' ',' ',250,0,'=',1,1000,'Approved','','','','','',0,current_Timestamp);
	</sql>
</changeSet>	
			<changeSet  author="Pruthvi" id="57">
<createTable tableName="CF_CONTROL_DUMP">
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="SCHEMEID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="BRANCHID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="NPASTAGEID" type="varchar(8)">
				<constraints nullable="false" />
			</column>
			<column name="LOANSTATUS" type="varchar(1)">
				<constraints nullable="false" />
			</column>
			<column name="DISBSTATUS" type="varchar(2)">
				<constraints nullable="false" />
			</column>
			<column name="FIRSTDUEDATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="MATURITYDATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="AMTFIN" type="Number" />
			<column name="DISBURSEDAMOUNT" type="Number" />
			<column name="EMIDUE" type="Number" />
			<column name="PRINCIPALDUE" type="Number" />
			<column name="INTERESTDUE" type="Number" />
			<column name="EMIRECEIVED" type="Number" />
			<column name="PRINCIPALRECEIVED" type="Number" />
			<column name="INTERESTRECEIVED" type="Number" />
			<column name="EMIOS" type="Number" />
			<column name="PRINCIPALOS" type="Number" />
			<column name="INTERESTOS" type="Number" />
			<column name="BULKREFUND" type="Number" />
			<column name="PRINCIPALWAIVED" type="Number" />
			<column name="EMIPRINCIPALWAIVED" type="Number" />
			<column name="EMIINTERESTWAIVED" type="Number" />
			<column name="PRINCIPALATTERM" type="Number" />
			<column name="ADVANCEEMIBILLED" type="Number" />
			<column name="MIGRATEDADVANCEEMI" type="Number" />
			<column name="MIGRATEDADVANCEEMIBILLED" type="Number" />
			<column name="MIGRATEDADVANCEEMIUNBILLED" type="Number" />
			<column name="CLOSEDCANADVEMI" type="Number" />
			<column name="PRINCIPALBALANCE" type="Number" />
			<column name="INTERESTBALANCE" type="Number" />
			<column name="SOHBALANCE" type="Number" />
			<column name="NOOFUNBILLEDEMI" type="Number" />
			<column name="TOTALINTEREST" type="Number" />
			<column name="ACCRUEDAMOUNT" type="Number" />
			<column name="BALANCEUMFC" type="Number" />
			<column name="EMIINADVANCERECEIVEDMAKER" type="Number" />
			<column name="EMIINADVANCEBILLED" type="Number" />
			<column name="EMIINADVANCEUNBILLED" type="Number" />
			<column name="MIGADVEMIBILLEDPRINCOMP" type="Number" />
			<column name="MIGADVEMIBILLEDINTCOMP" type="Number" />
			<column name="MIGADVEMIUNBILLEDPRINCOMP" type="Number" />
			<column name="EMIINADVBILLEDPRINCOMP" type="Number" />
			<column name="EMIINADVBILLEDINTCOMP" type="Number" />
			<column name="EMIINADVUNBILLEDPRINCOMP" type="Number" />
			<column name="EMIINADVUNBILLEDINTCOMP" type="Number" />
			<column name="CLOSCANADVEMIPRINCOMP" type="Number" />
			<column name="CLOSCANADVEMIINTCOMP" type="Number" />
			<column name="SECURITYDEPOSIT" type="Number" />
			<column name="SECURITYDEPOSITADJUSTED" type="Number" />
			<column name="ROUNDINGDIFFRECEIVABLE" type="Number" />
			<column name="ROUNDINGDIFFRECEIVED" type="Number" />
			<column name="MIGDIFFERENCERECEIVABLE" type="Number" />
			<column name="MIGDIFFERENCERECEIVED" type="Number" />
			<column name="MIGDIFFERENCEPAYABLE" type="Number" />
			<column name="MIGDIFFERENCEPAID" type="Number" />
			<column name="WRITEOFFDUE" type="Number" />
			<column name="WRITEOFFRECEIVED" type="Number" />
			<column name="SOLDSEIZERECEIVABLE" type="Number" />
			<column name="SOLDSEIZERECEIVED" type="Number" />
			<column name="SOLDSEIZEPAYABLE" type="Number" />
			<column name="SOLDSEIZEPAID" type="Number" />
			<column name="NETEXCESSRECEIVED" type="Number" />
			<column name="NETEXCESSADJUSTED" type="Number" />
			<column name="LPPCHARGESRECEIVABLE" type="Number" />
			<column name="LPPCHARGESRECEIVED" type="Number" />			
			<column name="PDCSWAPCHARGESRECEIVABLE" type="Number" />			
			<column name="PDCSWAPCHARGESRECEIVED" type="Number" />			
			<column name="REPOCHARGESRECEIVABLE" type="Number" />
			<column name="REPOCHARGESRECEIVED" type="Number" />
			<column name="FORECLOSURECHARGESDUE" type="Number" />
			<column name="FORECLOSURECHARGESRECEIVED" type="Number" />
			<column name="BOUNCECHARGESDUE" type="Number" />
			<column name="BOUNCECHARGESRECEIVED" type="Number" />
			<column name="INSURRENEWCHARGE" type="Number" />
			<column name="INSURRENEWCHARGERECD" type="Number" />
			<column name="INSURRECEIVABLE" type="Number" />
			<column name="INSURRECEIVED" type="Number" />
			<column name="INSURPAYABLE" type="Number" />
			<column name="INSURPAID" type="Number" />
			<column name="CUSTOMERID" type="Number(8)" />
			<column name="CUSTOMERNAME" type="varchar(300)" />
			<column name="SANCTIONED_TENURE" type="Number(3)" />
			<column name="LOANEMI" type="Number(16,2)" />
			<column name="FLATRATE" type="Number(10,7)" />
			<column name="EFFECTIVERATE" type="Number(10,7)" />
			<column name="AGREEMENTDATE" type="datetime" />
			<column name="DISBURSALDATE" type="datetime" />
			<column name="CLOSUREDATE" type="datetime" />
			<column name="NOOFADVANCEEMIS" type="Number(3)" />
			<column name="ASSETCOST" type="Number(16,2)" />
			<column name="NOOFEMIOS" type="Number" />
			<column name="DPD" type="Number(8)" />
			<column name="CURRENTBUCKET" type="Number(3)" />
			<column name="BRANCHNAME" type="varchar(600)" />
			<column name="SCHEMENAME" type="varchar(200)" />
			<column name="DERIVEDBUCKET" type="Number" />
			<column name="ASSETDESC" type="varchar(150)" />
			<column name="MAKE" type="varchar(35)" />
			<column name="CHASISNUM" type="varchar(50)" />
			<column name="REGDNUM" type="varchar(30)" />
			<column name="ENGINENUM" type="varchar(30)" />
			<column name="INVOICEAMT" type="Number(16,2)" />
			<column name="SUPPLIERDESC" type="varchar(300)" />
			<column name="INSTRUMENT" type="varchar(1)" />
			<column name="REPODATE" type="datetime" />
			<column name="LOCALOUTSTATIONFLAG" type="varchar(1)" />
			<column name="FIRSTREPAYDUEDATE" type="datetime" />			
		</createTable>
		
		
<createTable tableName="ALM">
			<column name="AGREEMENTID" type="Number(8)">
				<constraints nullable="false" />
			</column>
			<column name="AGREEMENTNO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="PRODUCTFLAG" type="varchar(12)">
				<constraints nullable="false" />
			</column>
			<column name="NPASTAGEID" type="varchar(12)"/>
			<column name="INSTLAMT" type="NUMBER (16,2)"/>
			<column name="PRINCOMP" type="NUMBER (16,2)"/>
			<column name="INTCOMP" type="NUMBER (16,2)"/>
			<column name="DUEDATE" type="datetime" />
			<column name="ACCRUEDAMT" type="NUMBER (16,2)"/>
			<column name="ACCRUEDON" type="datetime" />
			<column name="CUMULATIVEACCRUALAMT" type="NUMBER (16,2)"/>
			<column name="ADVFLAG" type="varchar(1)"/>
</createTable>


<createTable tableName="DISBURSMENTS">
           <column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="PaymentSeq" type="int">
				<constraints nullable="false" />
			</column>
			<column name="PaymentDetail" type="varchar(8)" />
			<column name="AmtToBeReleased" type="decimal(18, 0)" />
			<column name="LiabilityHoldName" type="varchar(100)" />
			<column name="BeneficiaryName" type="varchar(100)" />
			<column name="BeneficiaryAccNo" type="varchar(50)" />
			<column name="Description" type="varchar(500)" />
			<column name="PaymentType" type="varchar(8)" />
			<column name="LLReferenceNo" type="varchar(50)" />
			<column name="LLDate" type="datetime" />
			<column name="CustContribution" type="decimal(18, 0)" />
			<column name="SellerContribution" type="decimal(18, 0)" />
			<column name="Remarks" type="varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint"/>
            <column name="LastMntOn" type="datetime"/>
            <column name="RecordStatus" type="varchar(50)"/>
            <column name="RoleCode" type="varchar(100)"/>
            <column name="NextRoleCode" type="varchar(200)"/>
            <column name="TaskId" type="varchar(50)"/>
            <column name="NextTaskId" type="varchar(200)"/>
            <column name="RecordType" type="varchar(50)"/>
            <column name="WorkflowId" type="bigint"/>
	        <column name="BankCode" type="varchar(8)"/>
			<column name="PayableLoc" type="varchar(50)"/>
			<column name="PrintingLoc" type="varchar(50)"/>
			<column name="ValueDate" type="datetime"/>
			<column name="PhoneCountryCode" type="varchar(5)"/>
			<column name="PhoneAreaCode" type="varchar(8)"/>
			<column name="PhoneNumber" type="varchar(12)"/>
			<column name="ClearingDate" type="datetime"/>
			<column name="Status" type="varchar(50)"/>
			<column name="Active" type="char(1)"/>
			<column name="InputDate" type="datetime"/>
			<column name="DisbCCy" type="varchar(3)"/>
			<column name="BankBranchID" type="bigint"/>
			<column name="POIssued" type="boolean"/>
			<column name="DisbDate" type="datetime"/>
			<column name="DisbSeq" type="int"/>
			<column name="ErrorCode" type="varchar(50)"/>
			<column name="ErrorDescription" type="varchar(500)"/>
</createTable>

</changeSet>
			
</databaseChangeLog>
