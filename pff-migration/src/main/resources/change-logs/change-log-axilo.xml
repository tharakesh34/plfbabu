<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="add.schema" value=" " dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="Jayant" runAlways="true"
		dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="1" author="murthy.y">
		<comment>Map the PAYMENT_DETAIL3 with DebitAccount Number, this view is on top of core version 14.11.0</comment>
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW"
			replaceIfExists="true">
			SELECT FA. PAYMENTID,
				   FA.FINREFERENCE,
				   'D' CHANNEL, 
				   CASE WHEN FA.PAYMENTTYPE = 'NEFT' THEN 'N' WHEN FA.PAYMENTTYPE = 'RTGS' THEN 'R' WHEN FA.PAYMENTTYPE = 'DD' THEN 'D' WHEN FA.PAYMENTTYPE = 'CHEQUE' THEN 'C' ELSE  FA.PAYMENTTYPE END  DISBURSEMENT_TYPE,
				   FA.AMTTOBERELEASED/CCY.CCYMINORCCYUNITS  AMTTOBERELEASED,
				   FA.DISBDATE,
	               FA.LLDATE,
				   FA.PAYABLELOC,
				   FA.PRINTINGLOC,
				   CU.CUSTCIF,            
				   CU.CUSTSHRTNAME,     
				   '' AS CUSTOMER_MOBILE,
				   CE.CUSTEMAIL       CUSTOMER_EMAIL,
				   CS.CPPROVINCENAME  CUSTOMER_STATE,
				   CC.PCCITYNAME      CUSTOMER_CITY,
				   ''                 CUSTOMER_ADDRESS1,
				   ''                 CUSTOMER_ADDRESS2,
				   ''                 CUSTOMER_ADDRESS3,
				   ''                 CUSTOMER_ADDRESS4,
				   ''                 CUSTOMER_ADDRESS5,
	              BD.BANKNAME BANKNAME,
	              BB.BRANCHCODE,
	              BB.BRANCHDESC BRANCHDESC,
				  PBD.CPPROVINCENAME  BENFICIARY_BRANCH_STATE,
				  PBD.PCCITYNAME      BENFICIARY_BRANCH_CITY,
				   BB.MICR             MICR_CODE,
				   BB.IFSC             IFSC_CODE,
				   FA.BENEFICIARYACCNO,
				   CASE WHEN FA.PAYMENTTYPE = 'CHEQUE' OR  FA.PAYMENTTYPE = 'DD' THEN FA.LIABILITYHOLDNAME ELSE FA.BENEFICIARYNAME END BENEFICIARYNAME,
				   FA.PHONECOUNTRYCODE||FA.PHONEAREACODE||FA.PHONENUMBER AS BENEFICIARY_MOBILE, 
				   BCE.CUSTEMAIL        BENFICIRY_EMAIL,
				   BRS.CPPROVINCENAME  BENFICIARY_STATE,
				   BRC.PCCITYNAME      BENFICIARY_CITY,
				   ''                  BENFICIARY_ADDRESS1,
				   ''                  BENFICIARY_ADDRESS2,
				   ''                  BENFICIARY_ADDRESS3,
				   ''                  BENFICIARY_ADDRESS4,
				   ''                  BENFICIARY_ADDRESS5,
				   ''				           PAYMENT_DETAIL1,
				   ''                  PAYMENT_DETAIL2,
				   PB.ACCOUNTNO        PAYMENT_DETAIL3,
				   ''                  PAYMENT_DETAIL4,
				   ''                  PAYMENT_DETAIL5,
				   ''                  PAYMENT_DETAIL6,
				   ''                  PAYMENT_DETAIL7,     
				   FA.STATUS           STATUS,
				   FA.DESCRIPTION      REMARKS,
				     FA.PAYMENTTYPE      PAYMENTTYPE,
				     FM.FINTYPE,
				     PB.PARTNERBANKID,
				     PB.PARTNERBANKCODE,
				     FA.INPUTDATE,
				     PB.ALWFILEDOWNLOAD,
	                PB.FILENAME,
				     FM.FINISACTIVE,
					 SMD.ENTITYCODE
				   FROM FINADVANCEPAYMENTS FA
				   INNER JOIN (select CUSTID, FINREFERENCE, FINTYPE,  FINISACTIVE from financemain union all select CUSTID, FINREFERENCE, FINTYPE,  FINISACTIVE from financemain_temp where QUICKDISB=1) FM on FM.FINREFERENCE = FA.FINREFERENCE
				   INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				   INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = FA.DISBCCY
        		   INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
				   LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				   LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				   LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE  
				   LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
				   LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
	         	   LEFT JOIN  (select PB.PARTNERBANKID, PBD.BANKNAME, PBB.BRANCHDESC, PBBRC.PCCITYNAME, PBBRS.CPPROVINCENAME from PARTNERBANKS PB INNER JOIN BANKBRANCHES PBB ON PBB.BRANCHCODE = PB.BANKBRANCHCODE INNER JOIN BMTBANKDETAIL PBD ON PBD.BANKCODE = PBB.BANKCODE LEFT JOIN RMTPROVINCEVSCITY PBBRC ON PBBRC.PCCITY = PBB.CITY LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS ON PBBRS.CPPROVINCE = PBBRC.PCPROVINCE ) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
				   LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND BR.ACCNUMBER = FA.BENEFICIARYACCNO AND BR.CUSTID = FM.CUSTID
				   LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				   LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				   LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID AND BRCA.CUSTADDRPRIORITY = 5
				   LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = BRCA.CUSTADDRCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				   LEFT JOIN RMTFINANCETYPES RFT ON  FM.FINTYPE=RFT.FINTYPE
				   LEFT JOIN SMTDIVISIONDETAIL SMD ON RFT.FINDIVISION=SMD.DIVISIONCODE
				   WHERE STATUS='APPROVED' AND PAYMENTID NOT IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS) AND PB.PARTNERBANKCODE NOT IN('DUPBANK')
				   
				   UNION ALL
				   
				   SELECT PI. PAYMENTINSTRUCTIONID PAYMENTID,
				   PH.FINREFERENCE,
				   PH.PAYMENTTYPE CHANNEL, 
				   CASE WHEN PI.PAYMENTTYPE = 'NEFT' THEN 'N' WHEN PI.PAYMENTTYPE = 'RTGS' THEN 'R' WHEN PI.PAYMENTTYPE = 'DD' THEN 'D' WHEN PI.PAYMENTTYPE = 'CHEQUE' THEN 'C' ELSE  PI.PAYMENTTYPE END  DISBURSEMENT_TYPE,
				   PI.PAYMENTAMOUNT/CCY.CCYMINORCCYUNITS  AMTTOBERELEASED,
				   PI.POSTDATE DISBDATE, 
				   PI.POSTDATE LLDATE, 
				   PI.PAYABLELOC, 
				   PI.PRINTINGLOC, 
				   CU.CUSTCIF,            
				   CU.CUSTSHRTNAME,     
				   '' AS CUSTOMER_MOBILE,
				   CE.CUSTEMAIL       CUSTOMER_EMAIL,
				   CS.CPPROVINCENAME  CUSTOMER_STATE,
				   CC.PCCITYNAME      CUSTOMER_CITY,
				   ''                 CUSTOMER_ADDRESS1,
				   ''                 CUSTOMER_ADDRESS2,
				   ''                 CUSTOMER_ADDRESS3,
				   ''                 CUSTOMER_ADDRESS4,
				   ''                 CUSTOMER_ADDRESS5,
				   BD.BANKNAME,
				   BB.BRANCHCODE,
				   BB.BRANCHDESC,
				   BBRS.CPPROVINCENAME  BENFICIARY_BRANCH_STATE,
				   BBRC.PCCITYNAME      BENFICIARY_BRANCH_CITY,
				   BB.MICR              MICR_CODE,
				   BB.IFSC              IFSC_CODE,
				   PI.ACCOUNTNO BENEFICIARYACCNO,
				   CASE WHEN PI.PAYMENTTYPE = 'CHEQUE' OR  PI.PAYMENTTYPE = 'DD' THEN PI.FAVOURNAME ELSE PI.ACCTHOLDERNAME END BENEFICIARYNAME,
				   PI.PHONECOUNTRYCODE||PI.PHONENUMBER AS BENEFICIARY_MOBILE,
				   BCE.CUSTEMAIL       BENFICIRY_EMAIL,
				   BRS.CPPROVINCENAME  BENFICIARY_STATE,
				   BRC.PCCITYNAME      BENFICIARY_CITY,
				   ''                  BENFICIARY_ADDRESS1,
				   ''                  BENFICIARY_ADDRESS2,
				   ''                  BENFICIARY_ADDRESS3,
				   ''                  BENFICIARY_ADDRESS4,
				   ''                  BENFICIARY_ADDRESS5,
				   ''				           PAYMENT_DETAIL1,
				   ''                  PAYMENT_DETAIL2,
				   PB.ACCOUNTNO        PAYMENT_DETAIL3,
				   ''                  PAYMENT_DETAIL4,
				   ''                  PAYMENT_DETAIL5,
				   ''                  PAYMENT_DETAIL6,
				   ''                  PAYMENT_DETAIL7,     
				   PI.STATUS           STATUS, 
				   PI.REMARKS          REMARKS,
				   PI.PAYMENTTYPE      PAYMENTTYPE,
				   FM.FINTYPE,
				   PB.PARTNERBANKID,
				   PB.PARTNERBANKCODE,
				   PI.POSTDATE INPUTDATE, 
				   PB.ALWFILEDOWNLOAD,
				   PB.FILENAME,
				   FM.FINISACTIVE,
				    SMD.ENTITYCODE
				   FROM PAYMENTINSTRUCTIONS PI 
				   INNER JOIN PAYMENTHEADER PH ON PH.PAYMENTID = PI.PAYMENTID
				   INNER JOIN (select CUSTID, FINREFERENCE, FINTYPE,  FINISACTIVE from financemain union all select CUSTID, FINREFERENCE, FINTYPE,  FINISACTIVE from financemain_temp where QUICKDISB=1) FM on FM.FINREFERENCE = PH.FINREFERENCE 
				   INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
				   INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = PI.PAYMENTCCY
				   INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = PI.PARTNERBANKID
				   LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 5
				   LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
				   LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
				   LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5  
				   LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = PI.BANKBRANCHID
				   LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
				   LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY = BB.CITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
				   LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = PI.BANKBRANCHID AND BR.ACCNUMBER = PI.ACCOUNTNO  AND BR.CUSTID = FM.CUSTID
				   LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
				   LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 5
				   LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID AND BRCA.CUSTADDRPRIORITY = 5
				   LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = BRCA.CUSTADDRCITY
				   LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
				    LEFT JOIN RMTFINANCETYPES RFT ON  FM.FINTYPE=RFT.FINTYPE
				   LEFT JOIN SMTDIVISIONDETAIL SMD ON RFT.FINDIVISION=SMD.DIVISIONCODE
				   WHERE PI.STATUS='APPROVED' AND PI.PAYMENTINSTRUCTIONID NOT IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS) AND PB.PARTNERBANKCODE NOT IN('DUPBANK')
		</createView>
	</changeSet>

	<changeSet id="2" author="murthy.y">
		<comment>On top of core version 14.11.0</comment>
		<sql>
			<![CDATA[
				update DATA_ENGINE_COLUMN 
				set RuleForValue = 'if((DISBURSEMENT_TYPE ==  ''N'' )){Result =''NE'';  return;} 
				else if((DISBURSEMENT_TYPE ==  ''R'' )){Result =''RT'';  return;}
				else if((DISBURSEMENT_TYPE ==  ''C'' )){Result =''CC'';  return;}
				else if((DISBURSEMENT_TYPE ==  ''IFT'' )){Result =''FT'';  return;}
				else if((DISBURSEMENT_TYPE ==  ''DD'' )){Result =''DD'';  return;}
				else if((DISBURSEMENT_TYPE ==  ''DD'' )){Result =''DD'';  return;}
				else {Result ='''';  return;}'
				where TABLEID = (select ID from DATA_ENGINE_TABLE where CONFIGID = (select ID from DATA_ENGINE_CONFIG where NAME = 'DISB_HDFC_EXPORT')) and Name = 'DISBURSEMENT_TYPE';
			]]>
		</sql>
	</changeSet>

	<changeSet id="277" author="prabhakar.g">
		<sql>
			<![CDATA[
				update CIBIL_MEMBER_DETAILS  set FILE_FORMATE = 'XLSX' where SEGMENT_TYPE = 'RETAIL';
			]]>
		</sql>
	</changeSet>

	<changeSet id="278" author="kranthikumar.k">
		<sql>
			<![CDATA[
				Insert into REPORTFILTERFIELDS values ((select reportid from reportconfiguration where menuitemcode='menu_Item_NPAReport'),6,'Date','DATERANGE','Date','provisioncaldate',null,'---Select----',null,null,0,0,0,0,6,0,null,null,null,null,150,0,'=',3,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
			]]>
		</sql>
	</changeSet>

	<changeSet id="279" author="kranthikumar.k">
		<sql>
			<![CDATA[
				INSERT INTO CIBIL_STATES_MAPPING VALUES ('36', 'RETAIL', 'IN', 'TL', 'Telangana', 50, 56, 1, 1000, current_timestamp, 'Approved', '','','','','', 0);
				INSERT INTO CIBIL_STATES_MAPPING VALUES ('36', 'CORP', 'IN', 'TL', 'Telangana', 50, 56, 1, 1000, current_timestamp, 'Approved', '','','','','', 0); 
				INSERT INTO CIBIL_ADDRESS_TYPES_MAPPING VALUES('01', 'RETAIL', 'PERM',  1, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				INSERT INTO CIBIL_ADDRESS_TYPES_MAPPING VALUES('02', 'RETAIL', 'CURR', 1, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
				INSERT INTO CIBIL_ADDRESS_TYPES_MAPPING VALUES('03', 'RETAIL', 'OFFICE',  1, 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="280" author="kranthikumar.k">
		<sql>
			<![CDATA[
				update data_engine_config set parser='3' where name='TRIAL_BALANCE_EXPORT_STATE';

				update data_engine_config set parser='3' where name='TRIAL_BALANCE_EXPORT_CONSOLIDATE';
			]]>
		</sql>
	</changeSet>

	<changeSet id="281" author="kranthikumar.k">
		<comment>File Extension changed to .xlsx</comment>
		<sql>
			<![CDATA[
				update data_engine_config set fileextension='.xlsx' where name='TRIAL_BALANCE_EXPORT_STATE';

				update data_engine_config set fileextension='.xlsx' where name='TRIAL_BALANCE_EXPORT_CONSOLIDATE';
			]]>
		</sql>
	</changeSet>


	<changeSet id="282" author="kranthi.k">
		<comment>Past Due Report Right Added</comment>
		<sql>
		<![CDATA[
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FinDeptReports_PastDue','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;

			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='REPORTS_ADMIN') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FinDeptReports_PastDue'),1,0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		]]>
		</sql>
	</changeSet>

	<changeSet id="283" author="kranthi.k">
		<comment>DateRange Fields Added in Past Due Report Filter Fields</comment>
		<sql>
		<![CDATA[
			Insert into REPORTFILTERFIELDS values ((select reportid from reportconfiguration where menuitemcode='menu_Item_PastDue'),8,'Date','DATERANGE','Date','PastDueFrom',null,'---Select----',null,null,0,0,0,0,6,0,null,null,null,null,150,0,'=',3,1000,'Approved',null,null,null,null,null,0,current_timestamp,null);
		]]>
		</sql>
	</changeSet>

	<changeSet id="284" author="kranthi.k">
		<comment>accholdername length changed to 100 instead of 50</comment>

		<modifyDataType tableName="mandates" columnName="accholdername"
			newDataType="varchar(100)" />
	</changeSet>

	<changeSet id="285" author="kranthi.k">
		<comment>accholdername length changed to 100 instead of 50</comment>

		<modifyDataType tableName="mandates_temp" columnName="accholdername"
			newDataType="varchar(100)" />
	</changeSet>

	<changeSet id="286" author="kranthi.k">
		<comment>Posting Report BranchDetails Multiselection Enabled</comment>
		<sql>
		<![CDATA[
			update reportfilterfields set MULTISELECTSEARCH=1 where reportid in (select reportid from reportconfiguration where menuitemcode='menu_Item_Postings') and fieldid=1;
			]]>
		</sql>
	</changeSet>

	<changeSet id="287" author="kranthi.k">
		<sql>
				<![CDATA[
					Insert into SMTPARAMETERS (SYSPARMCODE, SYSPARMDESC, SYSPARMTYPE, SYSPARMMAINT, SYSPARMVALUE, SYSPARMLENGTH, SYSPARMDEC, SYSPARMLIST, SYSPARMVALDMOD, SYSPARMDESCRIPTION, VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('GST_DEFAULT_FROM_STATE',' GST Default From State ','String',1,'Y',1,0,null,null,'GST Default From State',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
				]]>
		</sql>
	</changeSet>
	<changeSet id="288" author="kranthi.k">
		<sql>
				<![CDATA[
					Insert into SMTPARAMETERS (SYSPARMCODE, SYSPARMDESC, SYSPARMTYPE, SYSPARMMAINT, SYSPARMVALUE, SYSPARMLENGTH, SYSPARMDEC, SYSPARMLIST, SYSPARMVALDMOD, SYSPARMDESCRIPTION, VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('GST_DEFAULT_STATE_CODE','GST Default State Code','String',1,'0021',10,0,null,null,'GST Default State Code',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
				]]>
		</sql>
	</changeSet>

	<changeSet id="289" author="kranthi.k">
		<sql>
				<![CDATA[
					delete from SMTPARAMETERS where SYSPARMCODE='ALW_SCH_RECAL_LOCK';
					
					Insert into SMTPARAMETERS (SYSPARMCODE, SYSPARMDESC, SYSPARMTYPE, SYSPARMMAINT, SYSPARMVALUE, SYSPARMLENGTH, SYSPARMDEC, SYSPARMLIST, SYSPARMVALDMOD, SYSPARMDESCRIPTION, VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('ALW_SCH_RECAL_LOCK',' Allow Schedule Recal Lock ','String',1,'Y',1,0,null,null,'Allow Schedule Recal Lock',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
				]]>
		</sql>
	</changeSet>


	<changeSet id="290" author="kranthi.k">
		<sql>
				<![CDATA[
					delete from SMTPARAMETERS where sysparmcode='CUST_LASTNAME_MANDATORY';		
					Insert into SMTPARAMETERS (SYSPARMCODE, SYSPARMDESC, SYSPARMTYPE, SYSPARMMAINT, SYSPARMVALUE, SYSPARMLENGTH, SYSPARMDEC, SYSPARMLIST, SYSPARMVALDMOD, SYSPARMDESCRIPTION, VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('CUST_LASTNAME_MANDATORY',' Customer Last Name Mandatory ','String',1,'N',1,0,null,null,'Customer Last Name Mandatory',1,1000,current_timestamp,'Approved',null,null,null,null,null,0);
				]]>
		</sql>
	</changeSet>

	<changeSet id="291" author="kranthi.k">
		<sql>
				<![CDATA[
					Update SMTParameters set SysParmValue = 'N' where SysParmCode ='HOLD_DISB_INST_POST';	
				]]>
		</sql>
	</changeSet>


	<changeSet id="292" author="kranthi.k">
		<addColumn tableName="Loan_El_Adsb_Ed">
			<column name="InstructionUID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="293" author="kranthi.k">
		<addColumn tableName="Loan_El_Adsb_Ed_Temp">
			<column name="InstructionUID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>


	<changeSet id="294" author="kranthi.k">
		<addColumn tableName="Loan_Eil_Adsb_Ed">
			<column name="InstructionUID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="295" author="kranthi.k">
		<addColumn tableName="Loan_Eil_Adsb_Ed_Temp">
			<column name="InstructionUID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="296" author="kranthi.k">
		<sql>
			<![CDATA[
				DELETE  FROM REPORTFILTERFIELDS WHERE REPORTID IN (SELECT REPORTID FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_Presentment') AND FIELDID=3;		
			]]>
		</sql>
	</changeSet>

	<changeSet id="297" author="kranthi.k">
		<sql>
			<![CDATA[
				update reportfilterfields set multiselectsearch=0 where reportid in (select reportid from reportconfiguration where menuitemcode='menu_Item_Postings') and fieldid=1;		
			]]>
		</sql>
	</changeSet>

	<changeSet id="298" author="kranthi.k">
		<sql>
			<![CDATA[
				update reportfilterfields set MULTISELECTSEARCH=0 where reportid in (select reportid from reportconfiguration where menuitemcode='menu_Item_PastDue') and fieldid=1;		
			]]>
		</sql>
	</changeSet>
	<changeSet id="299" author="kranthi.k">
		<createView viewName="INT_MANDATE_REQUEST_VIEW"
			replaceIfExists="true">
			<![CDATA[
				 SELECT M.MANDATEID,
						M.DOCUMENTNAME,
						BD.BANKSHORTCODE
						BANKCODE,
						BD.BANKNAME,
						case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
						case when
						LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
						CUST.CUSTCIF,
						CUST.CUSTSHRTNAME,
						CUST.CustCoreBank,
						FT.FINTYPEDESC FINTYPE ,
						FIN.FINREFERENCE ,
						COALESCE((SELECT SUM(TotalAmount) from (Select
						MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount
						FROM FINSCHEDULEDETAILS FSD
						INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE
						=FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID
						GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
						COALESCE((SELECT
						SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD WHERE
						(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID =
						M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
						CASE M.OPENMANDATE WHEN 1 THEN 'New Open ECS' ELSE 'No
						Open ECS' END OPENMANDATE,
						M.ACCNUMBER,
						CASE WHEN M.ACCTYPE = '10' then 'Savings Account' WHEN M.ACCTYPE = '11' then
						'Current Account' WHEN M.ACCTYPE = '11' then
						'Cash Credit Account' ELSE M.ACCTYPE END ACCTYPE,
						M.ACCHOLDERNAME,
						BB.MICR,
						BB.IFSC,
						BB.ADDOFBRANCH,
						(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT
						FINREFERENCE FROM FINANCEMAIN WHERE
						MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
						(select MAX(SCHDATE) from FINSCHEDULEDETAILS
						where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT
						FINREFERENCE FROM FINANCEMAIN WHERE
						MANDATEID=M.MANDATEID)) EMIENDDATE,
						COALESCE (M.MAXLIMIT, 0) MAXLIMIT,
						COALESCE((SELECT SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE
						(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE
						MANDATEID=M.MANDATEID) GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
						FIN.NumberOfTerms,
						M.periodicity,
						M.STARTDATE,
						M.EXPIRYDATE,
						FIN.APPLICATIONNO,
						M.MANDATETYPE,
						M.STATUS,
						M.INPUTDATE,
						M.RECORDSTATUS,
						M.RECORDTYPE,
						M.MANDATECCY,
						COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,
						M.EntityCode,
						CP.PHONENUMBER,
						CE.CUSTEMAIL,
						PB.PARTNERBANKNAME,
						M.LASTMNTON,
						BB.BranchDesc BANK_BRANCH_NAME
						FROM MANDATES M
					INNER JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = M.BANKBRANCHID
					INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE
					INNER JOIN CUSTOMERS CUST ON CUST.CUSTID = M.CUSTID
					INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH
					LEFT JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = M.PARTNERBANKID
					LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
					LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
					LEFT OUTER JOIN	RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
					LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE = FIN.FINREFERENCE
					LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH
					LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE = FT.FINTYPE
					WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC' OR status = 'NEW'))
			]]>
		</createView>
	</changeSet>
	<changeSet id="300" author="sandeep.m">
		<createView viewName="FINANCEENQUIRY_VIEW" replaceIfExists="true">
			<![CDATA[
				  SELECT T1.FINREFERENCE,
				  T1.FINBRANCH,
				  T1.FINTYPE,
				  T1.FINCCY,
				  T1.SCHEDULEMETHOD,
				  T1.PROFITDAYSBASIS,
				  T1.FINSTARTDATE,
				  T1.CALTERMS NUMBEROFTERMS,
				  T1.CUSTID,
				  T1.FINAMOUNT,
				  T1.GRCPERIODENDDATE,
				  T1.MATURITYDATE,
				  T1.FINREPAYMENTAMOUNT,
				  T1.FINISACTIVE,
				  T1.ALLOWGRCPERIOD,
				  T1.DOWNPAYMENT,
				  T1.MIGRATEDFINANCE,
				  T1.LASTREPAYDATE,
				  T1.LASTREPAYPFTDATE,
				  T1.FINCURRASSETVALUE,
				  T1.BLACKLISTED,
				  T1.FEECHARGEAMT,
				  T1.CLOSINGSTATUS,
				  T1.GRACETERMS,
				  T1.ALWMULTIDISB,
				  T1.DEFFERMENTS,
				  T1.FINSTATUS ,
				  T1.MANDATEID,
				  T1.FINREPAYMETHOD,
				  T1.FINASSETVALUE,
				  T1.INSURANCEAMT,
				  T1.SANBSDSCHDLE,
				  T1.PROMOTIONSEQID,
				  T1.SVAMOUNT,
				  T1.CBAMOUNT,
				  (T1.FINCURRASSETVALUE+ T1.FEECHARGEAMT+T1.INSURANCEAMT) FINANCINGAMOUNT,
				  (T1.FINCURRASSETVALUE- T1.FINREPAYMENTAMOUNT+ T1.FEECHARGEAMT+T1.INSURANCEAMT) CURFINAMOUNT,
				  T2.FINTYPEDESC LOVDESCFINTYPENAME,
				  T2.FINSCHEDULEON LOVDESCFINSCHEDULEON,
				  T2.FINDIVISION LOVDESCFINDIVISION,
				  T2.FINCATEGORY LOVDESCPRODUCTCODENAME,
				  T2.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				  T3.CUSTCIF LOVDESCCUSTCIF,
				  T3.CUSTSHRTNAME LOVDESCCUSTSHRTNAME,
				  T4.BRANCHDESC LOVDESCFINBRANCHNAME,
				  T5.CUSTTYPECTG,
				  COALESCE(T9.NOINST,0) NOINST,T1.TotalCpz FROM FINANCEMAIN T1
				INNER JOIN RMTFINANCETYPES T2 ON T1.FINTYPE = T2.FINTYPE
				INNER JOIN CUSTOMERS T3 ON T1.CUSTID = T3.CUSTID
				INNER JOIN RMTBRANCHES T4 ON T1.FINBRANCH = T4.BRANCHCODE
				INNER JOIN RMTCUSTTYPES T5 ON T3.CUSTTYPECODE = T5.CUSTTYPECODE
				LEFT JOIN FINPFTDETAILS T9 ON T1.FINREFERENCE = T9.FINREFERENCE				 
			]]>
		</createView>
	</changeSet>
	<changeSet id="301" author="sandeep.m">
		<sql>
			<![CDATA[
				update reportfilterfields set FIELDDBNAME='T2.CustCif' where REPORTID=150 and FIELDNAME='CustCIF';

				update reportfilterfields set FIELDDBNAME='T1.finreference' where REPORTID=151 and FIELDNAME='FinReference';
				
				insert into reportconfiguration values
				((select max(reportID)+1 from reportconfiguration),'Excel:Write-Off Details','Write-Off Details',1,'writeoff','dataSource',1,
				'menu_Item_WriteoffReport',2,1005,NULL,NULL,NULL,NULL,NULL,NULL,0,CURRENT_TIMESTAMP,0,1,0);
				
				INSERT INTO reportfilterfields VALUES
				((SELECT MAX(reportID) FROM reportconfiguration) ,1,'BranchCode','LOVSEARCH','Branch','FM.FinBranch',' ','Branch','getBranchCode','getBranchDesc',1,0,0,0,2,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',NULL,NULL,NULL,NULL,NULL,0,CURRENT_TIMESTAMP,NULL);  
                insert into reportfilterfields values
				((select max(reportID) from reportconfiguration),2,'FinType','LOVSEARCH','Loan Type','FM.fintype',' ','FinanceType','getFinType','getFinTypeDesc',1,0,0,0,2,0,'','','','',250,0,'=',1,1000,'Approved','','','','','',0,CURRENT_TIMESTAMP,'');	
				insert into reportfilterfields values
				((select max(reportID) from reportconfiguration),3,'CustCIF','LOVSEARCH','Customer Number','C.custcif','','Customer','getCustCIF','getCustShrtName',1,0,0,0,3,0,'','','','',250,0,'=',1,1000,'Approved','','','','','',0,CURRENT_TIMESTAMP,'');		
				insert into reportfilterfields values
				((select max(reportID) from reportconfiguration),4,'FinReference','LOVSEARCH','Loan Reference','FM.Finreference','','FinanceMain','getFinReference','getFinReference',0,0,0,0,4,0,'','','','',250,0,'=',1,1000,'Approved','','','','','',0,CURRENT_TIMESTAMP,'');		
			]]>
		</sql>
	</changeSet>
	<changeSet id="302" author="sandeep.m">
		<createView viewName="FINRECEIPTHEADER_FEDVIEW"
			replaceIfExists="true">
			<![CDATA[				 
 					SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					(
					CASE
					WHEN T1.RECAGAINST ='C'
					THEN T13.CUSTCIF
					ELSE T1.REFERENCE
					END) REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					(
					CASE
					WHEN T8.PAYMENTTYPE IN ('CHEQUE', 'DD')
					THEN T8.FAVOURNUMBER
					ELSE T8.TRANSACTIONREF
					END ) TRANSACTIONREF,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME
					,T1.CANCELREMARKS
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN (SELECT FINREFERENCE,   FINBRANCH,   FINTYPE,   FINCCY,   SCHEDULEMETHOD,   PROFITDAYSBASIS,   FINISACTIVE,   CUSTID,   PRODUCTCATEGORY,   PROMOTIONCODE,   NEXTREPAYRVWDATE,   businessvertical
							 FROM FINANCEMAIN_TEMP
							 UNION
							 SELECT FINREFERENCE,   FINBRANCH,   FINTYPE,   FINCCY,   SCHEDULEMETHOD,   PROFITDAYSBASIS,   FINISACTIVE,   CUSTID,   PRODUCTCATEGORY,   PROMOTIONCODE,   NEXTREPAYRVWDATE,   businessvertical
							 FROM FINANCEMAIN
							 ) T2  ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN FINRECEIPTDETAIL T8 ON T1.RECEIPTID = T8.RECEIPTID AND T1.RECEIPTMODE = T8.PAYMENTTYPE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					UNION ALL
					SELECT T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTTYPE,
					T1.RECAGAINST,
					(
					CASE
					WHEN T1.RECAGAINST ='C'
					THEN T13.CUSTCIF
					ELSE T1.REFERENCE
					END) REFERENCE,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.EXCESSADJUSTTO,
					T1.ALLOCATIONTYPE,
					T1.RECEIPTAMOUNT,
					T1.EFFECTSCHDMETHOD,
					T1.RECEIPTMODESTATUS,
					T1.SUBRECEIPTMODE,
					T1.RECEIPTCHANNEL,
					T1.RECEIVEDFROM,
					T1.PANNUMBER,
					T1.COLLECTIONAGENTID,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T2.FINTYPE,
					T2.FINBRANCH,
					T3.CUSTCIF,
					T3.CUSTSHRTNAME,
					T2.FINCCY,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T4.FINTYPEDESC,
					T6.BRANCHDESC FINBRANCHDESC,
					T5.CCYDESC FINCCYDESC,
					T7.REJECTDESC CANCELREASONDESC,
					COALESCE(T2.FINISACTIVE, 0) FINISACTIVE,
					T2.SCHEDULEMETHOD,
					T2.PROFITDAYSBASIS PFTDAYSBASIS,
					T1.WAVIEDAMT,
					COALESCE(T3.CUSTID, 0) CUSTID,
					T1.TOTFEEAMOUNT,
					T1.BOUNCEDATE,
					T1.REMARKS,
					T1.RCDMAINTAINSTS,
					T1.DEPOSITPROCESS,
					T1.DEPOSITBRANCH,
					T1.LPIAMOUNT,
					T1.LPPAMOUNT,
					T1.GSTLPIAMOUNT,
					T1.GSTLPPAMOUNT,
					T1.GDRAVAILABLE,
					T1.RELEASETYPE,
					T1.THIRDPARTYNAME,
					T1.THIRDPARTYMOBILENUM,
					T2.PRODUCTCATEGORY,
					T2.PROMOTIONCODE,
					(
					CASE
					WHEN T8.PAYMENTTYPE IN ('CHEQUE', 'DD')
					THEN T8.FAVOURNUMBER
					ELSE T8.TRANSACTIONREF
					END) TRANSACTIONREF,
					T2.NEXTREPAYRVWDATE,
					T1.CASHIERBRANCH,
					T1.INITIATEDATE,
					T1.INSTRUCTIONUID,
					T1.FINDIVISION,
					T1.POSTBRANCH,
					T10.DIVISIONCODEDESC FINDIVISIONDESC,
					T11.BRANCHDESC POSTBRANCHDESC,
					T12.BRANCHDESC CASHIERBRANCHDESC,
					T10.ENTITYCODE,
					T9.CODE COLLECTIONAGENTCODE,
					T9.DESCRIPTION COLLECTIONAGENTDESC,
					T1.MODULE,
					T1.EXTREFERENCE,
					T13.CUSTCIF CUSTOMERCIF,
					T13.CUSTSHRTNAME CUSTOMERNAME
					,T1.CANCELREMARKS
					FROM FINRECEIPTHEADER T1
					LEFT JOIN (SELECT FINREFERENCE,   FINBRANCH,   FINTYPE,   FINCCY,   SCHEDULEMETHOD,   PROFITDAYSBASIS,   FINISACTIVE,   CUSTID,   PRODUCTCATEGORY,   PROMOTIONCODE,   NEXTREPAYRVWDATE,   businessvertical
							 FROM FINANCEMAIN_TEMP
							 UNION
							 SELECT FINREFERENCE,   FINBRANCH,   FINTYPE,   FINCCY,   SCHEDULEMETHOD,   PROFITDAYSBASIS,   FINISACTIVE,   CUSTID,   PRODUCTCATEGORY,   PROMOTIONCODE,   NEXTREPAYRVWDATE,   businessvertical
							 FROM FINANCEMAIN
							 ) T2   ON T1.REFERENCE = T2.FINREFERENCE
					LEFT JOIN CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
					LEFT JOIN RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
					LEFT JOIN RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
					LEFT JOIN RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
					LEFT JOIN BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
					LEFT JOIN FINRECEIPTDETAIL T8 ON T1.RECEIPTID = T8.RECEIPTID AND T1.RECEIPTMODE = T8.PAYMENTTYPE
					LEFT JOIN COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
					LEFT JOIN SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
					LEFT JOIN RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
					LEFT JOIN RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
					LEFT JOIN CUSTOMERS T13 ON CAST(T13.CUSTID AS VARCHAR(20)) = T1.REFERENCE
					WHERE NOT EXISTS( SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID)          			 
			]]>
		</createView>
	</changeSet>

	<changeSet id="303" author="kranthi.k">
		<sql>
			<![CDATA[
				update CIBIL_ACCOUNT_TYPES_MAPPING set CODE='8' where code='08';

				update CIBIL_ACCOUNT_TYPES set CODE='8' where code='08';		
			]]>
		</sql>
	</changeSet>
	<changeSet id="304" author="Sandeep.m">
		<createView viewName="FINADVANCEPAYMENTS_VIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT t1.finreference,
			t1.paymentid,
			t1.paymentseq,
			t1.paymentdetail,
			t1.amttobereleased,
			t1.liabilityholdname,
			t1.transactionref,
			t1.beneficiaryname,
			t1.beneficiaryaccno,
			t1.reenterbeneficiaryaccno,
			t1.description,
			t1.paymenttype,
			t1.llreferenceno,
			t1.lldate,
			t1.custcontribution,
			t1.sellercontribution,
			t1.remarks,
			t1.disbdate,
			t1.disbseq,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.bankcode,
			t1.payableloc,
			t1.printingloc,
			t1.valuedate,
			t1.bankbranchid,
			t1.phonecountrycode,
			t1.phoneareacode,
			t1.phonenumber,
			t1.clearingdate,
			t1.status,
			t1.active,
			t1.inputdate,
			t1.disbccy,
			t1.poissued,
			t3.bankcode branchbankcode,
			t31.bankname branchbankname,
			t3.branchcode,
			t3.branchdesc,
			t3.ifsc,
			t3.city,
			t4.bankname,
			t1.partnerbankid,
			t5.partnerbankcode,
			t5.partnerbankname,
			t1.linkedtranid,
			t5.actype partnerbankactype,
			t5.accountno partnerbankac,
			t6.branchdesc printinglocdesc,
			t1.rejectreason,
			t1.realizationdate
			FROM finadvancepayments_temp t1
			LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
			LEFT JOIN bmtbankdetail t31 ON t31.bankcode = t3.bankcode
			LEFT JOIN bmtbankdetail t4 ON t1.bankcode = t4.bankcode
			LEFT JOIN partnerbanks t5 ON t5.partnerbankid = t1.partnerbankid
			LEFT JOIN bankbranches t6 ON t6.branchcode = t1.printingloc and t6.bankcode = t1.bankcode
			UNION ALL
			SELECT t1.finreference,
			t1.paymentid,
			t1.paymentseq,
			t1.paymentdetail,
			t1.amttobereleased,
			t1.liabilityholdname,
			t1.transactionref,
			t1.beneficiaryname,
			t1.beneficiaryaccno,
			t1.reenterbeneficiaryaccno,
			t1.description,
			t1.paymenttype,
			t1.llreferenceno,
			t1.lldate,
			t1.custcontribution,
			t1.sellercontribution,
			t1.remarks,
			t1.disbdate,
			t1.disbseq,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.bankcode,
			t1.payableloc,
			t1.printingloc,
			t1.valuedate,
			t1.bankbranchid,
			t1.phonecountrycode,
			t1.phoneareacode,
			t1.phonenumber,
			t1.clearingdate,
			t1.status,
			t1.active,
			t1.inputdate,
			t1.disbccy,
			t1.poissued,
			t3.bankcode branchbankcode,
			t31.bankname branchbankname,
			t3.branchcode,
			t3.branchdesc,
			t3.ifsc,
			t3.city,
			t4.bankname,
			t1.partnerbankid,
			t5.partnerbankcode,
			t5.partnerbankname,
			t1.linkedtranid,
			t5.actype partnerbankactype,
			t5.accountno partnerbankac,
			t6.branchdesc printinglocdesc,
			t1.rejectreason,
			t1.realizationdate
			FROM finadvancepayments t1
			LEFT JOIN bankbranches t3 ON t1.bankbranchid = t3.bankbranchid
			LEFT JOIN bmtbankdetail t31 ON t31.bankcode = t3.bankcode
			LEFT JOIN bmtbankdetail t4 ON t1.bankcode = t4.bankcode
			LEFT JOIN partnerbanks t5 ON t5.partnerbankid = t1.partnerbankid
			LEFT JOIN bankbranches t6 ON t6.branchcode = t1.printingloc and t6.bankcode = t1.bankcode 
			WHERE NOT (EXISTS ( SELECT 1
			FROM finadvancepayments_temp
			WHERE finadvancepayments_temp.finreference = t1.finreference AND finadvancepayments_temp.paymentseq = t1.paymentseq))
			]]>
		</createView>
	</changeSet>
	<changeSet id="305" author="sandeep.m">
		<sql>
			<![CDATA[
				Update SMTParameters set SYSPARMVALUE='Y' where sysparmcode='GST_DEFAULT_FROM_STATE';	
			]]>
		</sql>
	</changeSet>

	<changeSet id="306" author="kranthi.k">
		<sql>
        <![CDATA[
            INSERT INTO CIBIL_ACCOUNT_TYPES_MAPPING VALUES('5000', 'CORP', 'ELSEC',1,1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
          	INSERT INTO CIBIL_ACCOUNT_TYPES_MAPPING VALUES('5000', 'CORP', 'ELUSEC',1,1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
            INSERT INTO CIBIL_ACCOUNT_TYPES_MAPPING VALUES('5000', 'CORP', 'AILSEC',1,1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
        ]]>
		</sql>
	</changeSet>

	<changeSet id="307" author="kranthi.k">
		<sql>
        <![CDATA[
            Insert into CIBIL_ACCOUNT_TYPES_MAPPING values ('08','RETAIL','AILSEC',1,1000,to_date('10-APR-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
			Insert into CIBIL_ACCOUNT_TYPES_MAPPING values ('08','RETAIL','AILUSEC',1,1000,to_date('10-APR-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
			Insert into CIBIL_ACCOUNT_TYPES_MAPPING values ('08','RETAIL','EILSEC',1,1000,to_date('10-APR-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
			Insert into CIBIL_ACCOUNT_TYPES_MAPPING values ('08','RETAIL','ESLSEC',1,1000,to_date('10-APR-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
        ]]>
		</sql>
	</changeSet>

	<changeSet id="308" author="kranthi.k">
		<sql>
        <![CDATA[
			ALTER TABLE LOAN_EL_ORG_ED_TEMP  ADD InstructionUID varchar(100);
			ALTER TABLE LOAN_EIL_ORG_ED_TEMP ADD InstructionUID varchar(100);
        ]]>
		</sql>
	</changeSet>

	<changeSet id="308.1" author="kranthi.k">
		<sql>
        <![CDATA[
			ALTER TABLE LOAN_EL_ORG_ED  ADD InstructionUID varchar(100);
			ALTER TABLE LOAN_EIL_ORG_ED ADD InstructionUID varchar(100);
        ]]>
		</sql>
	</changeSet>

	<changeSet id="309" author="kranthi.k">
		<sql>
        <![CDATA[
			UPDATE LMTFinRefDetail set RecordType = '';
        ]]>
		</sql>
	</changeSet>

	<changeSet id="310" author="kranthi.k">
		<createView viewName="LMTFINREFDETAIL_FINVIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT t1.finrefdetailid,
    		t1.fintype,
    		t1.finreftype,
    		t1.finrefid,
    		t1.isactive,
    		t1.showinstage,
    		t1.mandinputinstage,
    		t1.allowinputinstage,
    		t1.allowdeviation,
    		t1.allowwaiver,
    		t1.allowpostpone,
    		t1.allowexpire,
    		t1.override,
    		t1.overridevalue,
    		t1.finevent,
    		t1.alerttype,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid,
    		t2.fintypedesc AS lovdescfintypedescname,
    		t2.finccy AS lovdescfinccycode,
    		t2.fincategory AS lovdescproductcodename,
    		t3.aggimage AS lovdescaggimage,
    		COALESCE(t3.aggname, t4.eventcode) AS lovdescnamelov,
    		COALESCE(t3.aggcode, t7.rulecode) AS lovdesccodelov,
    		COALESCE(t3.aggdesc, t4.accountsetcodename) AS lovdescrefdesc,
    		t3.aggreportname AS lovdescaggreportname,
    		t3.aggreportpath AS lovdescaggreportpath,
    		t3.agrrule AS lovdescaggrulename,
    		t3.aggtype,
    		t3.moduletype,
    		COALESCE(t3.allowmultiple, 0) AS allowmultiple,
    		COALESCE(t5.remarks, '') AS lovdescisremarksallowed,
    		COALESCE(t5.checkmincount,0) AS lovdesccheckmincount,
    		COALESCE(t5.checkmaxcount, 0) AS lovdesccheckmaxcount,
    		COALESCE(t6.sqlrule, t7.sqlrule) AS lovdescelgrulevalue,
    		COALESCE(t6.returntype, t7.returntype) AS lovdescrulereturntype,
    		COALESCE(t8.minscore, t9.minscore, '0') AS lovdescminscore,
    		COALESCE(cast(t8.isoverride as number(10)), t9.isoverride, 0) AS lovdescisoverride
    		FROM lmtfinrefdetail t1
     		JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
     		LEFT JOIN bmtaggrementdef t3 ON t1.finrefid = t3.aggid AND t1.finreftype = '2'
     		LEFT JOIN rmtaccountingset t4 ON t1.finrefid = t4.accountsetid AND t1.finreftype = '5'
     		LEFT JOIN bmtchecklist t5 ON t1.finrefid = t5.checklistid AND t1.finreftype = '1'
     		LEFT JOIN rules t6 ON t6.rulecode = t5.checkrule AND t6.rulemodule = 'CLRULE' AND t6.ruleevent = 'CLRULE'
     		LEFT JOIN rules t7 ON t1.finrefid = t7.ruleid AND t1.finreftype = '3'
     		LEFT JOIN rmtscoringgroup t8 ON t1.finrefid = t8.scoregroupid AND t1.finreftype = '4' AND t8.categorytype = 'RETAIL'
     		LEFT JOIN rmtscoringgroup t9 ON t1.finrefid = t9.scoregroupid AND t1.finreftype = '7' AND t9.categorytype = 'CORP'
     		LEFT JOIN limitcodedetail t10 ON t10.limitid = t1.finrefid
	 		LEFT JOIN StageTabDetail t11 ON t1.finrefid = t11.TabId AND t1.finreftype = '15'
			]]>
			</createView>
	</changeSet>
	<!-- <comment> Scripts Already Executed in Auxilo VQC no need to execute 
		again Change set Id 311 to 356 </comment> -->
	<changeSet id="311" author="kranthi.k">
		<createTable tableName="SponsorBank">
			<column name="SponsorBankCode" type="varchar(100)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SponsorBankName" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="BankCode" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="BankBranchCode" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="BranchMICRCode" type="varchar(100)" />
			<column name="BranchIFSCCode" type="varchar(100)" />
			<column name="BranchCity" type="varchar(100)" />
			<column name="UtilityCode" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="AccountNo" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="AccountType" type="char(100)">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean" />
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(100)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(100)" />
			<column name="TaskId" type="varchar(100)" />
			<column name="NextTaskId" type="varchar(100)" />
			<column name="RecordType" type="varchar(100)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="312" author="kranthi.k">
		<createTable tableName="SPONSORBANK_TEMP">
			<column name="SponsorBankCode" type="varchar(100)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SponsorBankName" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="BankCode" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="BankBranchCode" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="BranchMICRCode" type="varchar(100)" />
			<column name="BranchIFSCCode" type="varchar(100)" />
			<column name="BranchCity" type="varchar(100)" />
			<column name="UtilityCode" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="AccountNo" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="AccountType" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="Active" type="boolean" />
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(100)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(100)" />
			<column name="TaskId" type="varchar(100)" />
			<column name="NextTaskId" type="varchar(100)" />
			<column name="RecordType" type="varchar(100)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="313" author="kranthi.k">
		<createTable tableName="VERIFICATION_HEADER">
			<column name="ID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="VERIFICATIONFOR" type="varchar(10)">
				<constraints nullable="false" />
			</column>
			<column name="MODULE" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="REFERENCENO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="boolean" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="314" author="kranthi.k">
		<createTable tableName="VERIFICATION_HEADER_TEMP">
			<column name="ID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="VERIFICATIONFOR" type="varchar(10)">
				<constraints nullable="false" />
			</column>
			<column name="MODULE" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="REFERENCENO" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="boolean" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="315" author="kranthi.k">
		<createTable tableName="BATCH_STAGE_PROCESS_HEADER">
			<column name="ID" type="bigint" autoIncrement="true">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="PROCESSNAME" type="varchar(30)">
			</column>
			<column name="INITIATEDBY" type="bigint">
			</column>
			<column name="INITIATEDON" type="datetime">
			</column>
		</createTable>
	</changeSet>

	<changeSet id="316" author="kranthi.k">
		<createTable tableName="BATCH_STAGE_PROCESS_DETAILS">
			<column name="ID" type="bigint" autoIncrement="true">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="PROCESSID" type="bigint">
			</column>
			<column name="KEYID" type="bigint">
			</column>
			<column name="KEYREFERENCE" type="varchar(20)">
			</column>
			<column name="REQUESTDATE" type="datetime">
			</column>
		</createTable>
	</changeSet>

	<changeSet id="317" author="kranthi.k">
		<createTable tableName="REPAY_EXCESS">
			<column name="FINREFERENCE" type="varchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="REPAYID" type="bigint">
			</column>
			<column name="EXCESSAMOUNT" type="bigint">
			</column>
			<column name="MINREPAYID" type="bigint">
			</column>
			<column name="RECEIPTSEQID" type="bigint">
			</column>
		</createTable>
	</changeSet>

	<changeSet id="318" author="kranthi.k">
		<createTable tableName="MAXFINTYPE">
			<column name="ROW_NUMBER" type="bigint">
			</column>
			<column name="FINTYPE" type="varchar(100)">
			</column>
			<column name="TO_CHAR" type="varchar(100)">
			</column>
			<column name="COUNT" type="bigint">
			</column>
		</createTable>
	</changeSet>

	<changeSet id="319" author="kranthi.k">
		<createTable tableName="DATA_ENGINE_PROCESS_LOG">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SEQNO" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FILEID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="REFID1" type="bigint" />
			<column name="REFID2" type="bigint" />
			<column name="REFNO1" type="varchar(50)" />
			<column name="REFNO2" type="varchar(50)" />
			<column name="CATEGORY" type="varchar(1000)">
				<constraints nullable="false" />
			</column>
			<column name="STATUS" type="varchar(1000)">
				<constraints nullable="false" />
			</column>
			<column name="REMARKS" type="varchar(1000)" />
			<column name="VALUEDATE" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="ADDFIELD1" type="varchar(1000)" />
			<column name="ADDFIELD2" type="varchar(1000)" />
			<column name="ADDFIELD3" type="varchar(1000)" />
			<column name="ADDFIELD4" type="varchar(1000)" />
			<column name="ADDFIELD5" type="datetime" />
			<column name="ADDFIELD6" type="datetime" />
			<column name="ADDFIELD7" type="datetime" />
			<column name="ADDFIELD8" type="datetime" />
		</createTable>
	</changeSet>

	<changeSet id="320" author="kranthi.k">
		<createTable tableName="CIBIL_MEMBER">
			<column name="Code" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Bureau_Type" type="varchar(10)">
				<constraints nullable="false" />
			</column>
			<column name="Member_Name" type="varchar(50)">
				<constraints nullable="false" />
			</column>
			<column name="Member_Short_Name" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Member_Id" type="varchar(10)">
				<constraints nullable="false" />
			</column>
			<column name="Previous_Member_Id" type="varchar(10)">
				<constraints nullable="false" />
			</column>
			<column name="Member_Password" type="varchar(1000)">
				<constraints nullable="false" />
			</column>
			<column name="File_Path" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="Delimiter" type="char(1)" />
		</createTable>
	</changeSet>

	<changeSet id="321" author="kranthi.k">
		<createTable tableName="DM_MASTER_HEALTH_CHECK">
			<column name="ID" type="bigint">
			</column>
			<column name="MODULE" type="varchar(100)">
			</column>
			<column name="TABLENAME" type="varchar(100)">
			</column>
			<column name="COLUMNNAME" type="varchar(100)">
			</column>
			<column name="CNT" type="bigint">
			</column>
			<column name="REMARKS" type="varchar(4000)">
			</column>
			<column name="EXEC_DATE" type="datetime">
			</column>
			<column name="AUTHOR" type="varchar(100)">
			</column>
		</createTable>
	</changeSet>

	<changeSet id="322" author="kranthi.k">
		<createTable tableName="AGENCYDETAILS">
			<column name="AgencyId" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="AgencyCode" type="varchar(10)">
			</column>
			<column name="AgencyDescription" type="varchar(50)">
			</column>
			<column name="Version" type="boolean" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="323" author="kranthi.k">
		<createTable tableName="AGENCYDETAILS_TEMP">
			<column name="AgencyId" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="AgencyCode" type="varchar(10)">
			</column>
			<column name="AgencyDescription" type="varchar(50)">
			</column>
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="324" author="kranthi.k">
		<createTable tableName="VERIFICATION_DETAILS">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="HeaderId" type="bigint" />
			<column name="Category" type="varchar(20)" />
			<column name="Type" type="varchar(20)" />
			<column name="CustCif" type="varchar(20)" />
			<column name="Agency" type="bigint" />
			<column name="RequestReason" type="bigint" />
			<column name="RequestStatus" type="bigint" />
			<column name="verifycationstatus" type="bigint" />
			<column name="VERIFYCATIONDATE" type="datetime" />
			<column name="ApproverStatus" type="bigint" />
			<column name="ApprovedReason" type="bigint" />
			<column name="ApprovedRemarks" type="varchar(500)" />
			<column name="RequestedUser" type="bigint" />
			<column name="RequestedDate" type="datetime" />
			<column name="ApprovedUser" type="bigint" />
			<column name="ApprovedDate" type="datetime" />
			<column name="ReverificationId" type="bigint" />
			<column name="version" type="bigint" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="325" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DETAIL_HEADERID"
			referencedTableName="VERIFICATION_HEADER" referencedColumnNames="ID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="HEADERID" />
	</changeSet>

	<changeSet id="326" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DETAILS_AGENCY"
			referencedTableName="AGENCYDETAILS" referencedColumnNames="AGENCYID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="AGENCY" />
	</changeSet>

	<changeSet id="327" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DETAILS_APPRSN"
			referencedTableName="REASONS" referencedColumnNames="ID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="APPROVEDREASON" />
	</changeSet>

	<changeSet id="328" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DETAILS_APPUSER"
			referencedTableName="SECUSERS" referencedColumnNames="USRID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="APPROVEDUSER" />
	</changeSet>

	<changeSet id="329" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DETAILS_REQRSN"
			referencedTableName="REASONS" referencedColumnNames="ID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="REQUESTREASON" />
	</changeSet>

	<changeSet id="330" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DETAILS_REQUSER"
			referencedTableName="SECUSERS" referencedColumnNames="USRID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="REQUESTEDUSER" />
	</changeSet>

	<changeSet id="331" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DTL_TEMP_HEADERID"
			referencedTableName="VERIFICATION_HEADER_TEMP" referencedColumnNames="ID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="HEADERID" />
	</changeSet>

	<changeSet id="332" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DTL_TEMP_AGENCY"
			referencedTableName="AGENCYDETAILS_TEMP" referencedColumnNames="AGENCYID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="AGENCY" />
	</changeSet>

	<changeSet id="333" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DTL_TEMP_APPRESP"
			referencedTableName="REASONS_TEMP" referencedColumnNames="ID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="APPROVEDREASON" />
	</changeSet>

	<changeSet id="334" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DTL_TEMP_APPUSER"
			referencedTableName="SECUSERS_TEMP" referencedColumnNames="USRID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="APPROVEDUSER" />
	</changeSet>

	<changeSet id="335" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DTL_TEMP_REQRESP"
			referencedTableName="REASONS_TEMP" referencedColumnNames="ID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="REQUESTREASON" />
	</changeSet>

	<changeSet id="336" author="kranthi.k">
		<addForeignKeyConstraint constraintName="FK_VERFCTION_DTL_TEMP_REQUSER"
			referencedTableName="SECUSERS_TEMP" referencedColumnNames="USRID"
			baseTableName="VERIFICATION_DETAILS" baseColumnNames="REQUESTEDUSER" />
	</changeSet>

	<changeSet id="337" author="kranthi.k">
		<createTable tableName="VERIFICATION_DETAILS_TEMP">
			<column name="Id" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="HeaderId" type="bigint">
			</column>
			<column name="Category" type="varchar(20)">
			</column>
			<column name="Type" type="varchar(20)">
			</column>
			<column name="CustCif" type="varchar(20)">
			</column>
			<column name="Agency" type="bigint">
			</column>
			<column name="RequestReason" type="bigint">
			</column>
			<column name="RequestStatus" type="bigint">
			</column>
			<column name="verifycationstatus" type="bigint">
			</column>
			<column name="VERIFYCATIONDATE" type="datetime">
			</column>
			<column name="ApproverStatus" type="bigint">
			</column>
			<column name="ApprovedReason" type="bigint">
			</column>
			<column name="ApprovedRemarks" type="varchar(500)">
			</column>
			<column name="RequestedUser" type="bigint">
			</column>
			<column name="requesteddatetime" type="datetime">
			</column>
			<column name="ApprovedUser" type="bigint">
			</column>
			<column name="ApprovedDate" type="datetime">
			</column>
			<column name="ReverificationId" type="bigint">
			</column>
			<column name="version" type="bigint" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>

	<changeSet id="338" author="kranthi.k">
		<createTable tableName="CUST_PERS_INFO_V">
			<column name="FinancierID" type="varchar(50)">
			</column>
			<column name="Appl_Id" type="varchar(50)">
			</column>
			<column name="Cust_Id" type="varchar(50)">
			</column>
			<column name="Cust_Name" type="varchar(30)">
				<constraints nullable="false" />
			</column>
			<column name="Salutation" type="varchar(50)">
			</column>
			<column name="Sex" type="varchar(50)">
			</column>
			<column name="Dob" type="datetime">
			</column>
			<column name="Nationality" type="varchar(60)">
			</column>
			<column name="Marital_Status" type="varchar(50)">
			</column>
			<column name="Passport_No" type="varchar(45)">
			</column>
			<column name="Dl_No" type="varchar(45)">
			</column>
			<column name="Ssn" type="varchar(105)">
			</column>
			<column name="Constitution" type="varchar(105)">
			</column>
			<column name="Profession" type="varchar(105)">
			</column>
			<column name="Industry" type="varchar(105)">
			</column>
			<column name="Current_Org" type="varchar(200)">
			</column>
			<column name="Prev_Org" type="varchar(200)">
			</column>
			<column name="Desig" type="varchar(50)">
			</column>
			<column name="Pan_No" type="varchar(50)">
			</column>
			<column name="custCoApplicantFlag" type="char(1)">
			</column>
			<column name="Add_On_Card" type="varchar(50)">
			</column>
			<column name="Cif_Number" type="varchar(18)">
			</column>
			<column name="Acct_Number" type="varchar(40)">
			</column>
			<column name="Delinquency_Months" type="varchar(50)">
			</column>
			<column name="Branch_Code" type="varchar(30)">
			</column>
			<column name="BPType_Code" type="varchar(4)">
			</column>
			<column name="MakeDate" type="datetime">
			</column>
			<column name="Card_Number" type="varchar(40)">
			</column>
			<column name="Region_Code" type="char(2)">
			</column>
			<column name="Map_Code" type="varchar(40)">
			</column>
			<column name="ProposalId" type="varchar(20)">
			</column>
			<column name="Coll_Business_Type" type="varchar(10)">
			</column>
			<column name="Customer_Type" type="varchar(25)">
			</column>
			<column name="Business_Group" type="varchar(25)">
			</column>
			<column name="Business_Reg_No" type="varchar(20)">
			</column>
			<column name="Date_Of_Incorporation" type="varchar(50)">
			</column>
			<column name="Business_Sector" type="varchar(50)">
			</column>
			<column name="Region" type="varchar(50)">
			</column>
			<column name="Date_Of_Commencement" type="datetime">
			</column>
			<column name="Turnover" type="bigint">
			</column>
			<column name="Case_Detail_Seq" type="bigint">
			</column>
			<column name="Rltnshp_Mrg_Id" type="varchar(50)">
			</column>
			<column name="Stake_Perc" type="bigint">
			</column>
			<column name="DealId" type="bigint">
			</column>
			<column name="Employeement_Type" type="varchar(3)">
			</column>
			<column name="EMICardFlag" type="char(1)">
			</column>
			<column name="Ivr_Flag" type="char(1)">
			</column>
			<column name="Sms_Blast_Dlvry" type="char(1)">
			</column>
			<column name="B2C_Flag" type="char(1)">
			</column>
			<column name="NCM_Uid" type="varchar(20)">
			</column>
		</createTable>
	</changeSet>

	<changeSet id="339" author="kranthi.k">
		<createView viewName="AGENCYDETAILS_VIEW" replaceIfExists="true">
		<![CDATA[
		  	SELECT t1.agencyid,
    	  	t1.agencycode,
    		t1.agencydescription,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
   			t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
   		 	t1.workflowid
  			FROM agencydetails_temp t1
			UNION ALL
 			SELECT t1.agencyid,
    		t1.agencycode,
    		t1.agencydescription,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid
  			FROM agencydetails t1
  			WHERE NOT (EXISTS ( SELECT 1
  			FROM agencydetails_temp
  			WHERE agencydetails_temp.agencyid = t1.agencyid))
			]]>
		</createView>
	</changeSet>

	<changeSet id="340" author="kranthi.k">
		<createView viewName="AGENCYDETAILS_AVIEW" replaceIfExists="true">
		<![CDATA[
		  	 SELECT t1.agencyid,
   			 t1.agencycode,
    		t1.agencydescription,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid
  			FROM agencydetails t1
			]]>
		</createView>
	</changeSet>

	<changeSet id="341" author="kranthi.k">
		<createView viewName="DISBURSEMENT_DOWNLOAD_FILE"
			replaceIfExists="true">
		<![CDATA[
		  	SELECT fa.paymenttype,
    		fm.custid,
    		fa.beneficiaryaccno,
    		fa.amttobereleased,
    		fa.beneficiaryname,
    		fa.payableloc AS draweeloc,
    		fa.payableloc AS printloc,
    		'' AS adline1,
    		'' AS adline2,
    		'' AS adline3,
    		'' AS adline4,
    		'' AS adline5,
    		'' AS irn,
    		fa.finreference,
    		'' AS pd1,
    		'' AS pd2,
    		'' AS pd3,
    		'' AS pd4,
    		'' AS pd5,
    		'' AS pd6,
    		'' AS pd7,
    		fa.llreferenceno,
    		fa.valuedate AS trandate,
    		fa.bankbranchid AS micrnum,
    		fa.bankbranchid AS ifsccode,
    		fa.bankbranchid AS bbrnname,
    		fa.bankbranchid AS bbankname,
    		b.email AS benemail
   			FROM finadvancepayments fa
     		JOIN financemain fm ON fa.finreference = fm.finreference
     		JOIN ( SELECT DISTINCT beneficiary.custid,
            beneficiary.email
          	FROM beneficiary) b ON b.custid = fm.custid
			]]>
		</createView>
	</changeSet>

	<changeSet id="342" author="kranthi.k">
		<createView viewName="PRESENTMENT_REQ_DETAILS_VIEW"
			replaceIfExists="true">
		<![CDATA[
		  	 SELECT t1.txn_ref,
			t1.entity_code,
			t1.cycle_type,
			t1.instrument_mode,
			t1.presentationdate,
			t1.bank_code,
			t1.product_code,
			t1.customerid,
			t1.agreementno,
			t1.chequeamount,
			t1.emi_no,
			t1.txn_type_code,
			t1.source_code,
			t1.br_code,
			t1.umrn_no,
			t1.bank_name,
			t1.micr_code,
			t1.accountno,
			t1.dest_acc_holder,
			t1.acc_type,
			t1.bank_address,
			t1.resub_flag,
			t1.orgin_system,
			t1.data_gen_date,
			t1.specialhit_file,
			t1.userid,
			t1.batchid,
			t1.job_id,
			t1.pickup_batchid,
			t1.processed_flag,
			t1.accountfield1,
			t1.accountfield2,
			t1.accountfield3,
			t1.cycledate,
			t1.partner_bank,
			t1.ifsc,
			t1.chequeserialno,
			t1.chequedate,
			t3.accholdername as accholdername
			FROM presentment_req_details_temp t1
			left JOIN CHEQUEHEADER T2 ON T2.FINREFERENCE = T1.agreementno
			left JOIN CHEQUEDETAIL T3 ON T3.HEADERID = T2.HEADERID and t1.chequeserialno = t3.chequeserialno
			]]>
		</createView>
	</changeSet>

	<changeSet id="343" author="kranthi.k">
		<createView viewName="SPONSORBANK_AVIEW" replaceIfExists="true">
		<![CDATA[
		  	SELECT t1.sponsorbankcode,
    	t1.sponsorbankname,
    	t1.bankcode,
    	t1.bankbranchcode,
    	t1.branchmicrcode,
    	t1.branchifsccode,
    	t1.branchcity,
    	t1.utilitycode,
    	t1.accountno,
    	t1.accounttype,
    	t1.active,
    	t1.version,
    	t1.lastmntby,
    	t1.lastmnton,
    	t1.recordstatus,
    	t1.rolecode,
    	t1.nextrolecode,
    	t1.taskid,
    	t1.nexttaskid,
    	t1.recordtype,
    	t1.workflowid,
    	t2.bankname AS bankcodename,
    	t3.branchdesc AS bankbranchcodename
   		FROM sponsorbank t1
     	JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
     	JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode
			]]>
		</createView>
	</changeSet>

	<changeSet id="344" author="kranthi.k">
		<createView viewName="SPONSORBANK_VIEW" replaceIfExists="true">
		<![CDATA[
		SELECT t1.sponsorbankcode,
    	t1.sponsorbankname,
    	t1.bankcode,
    	t1.bankbranchcode,
    	t1.branchmicrcode,
    	t1.branchifsccode,
    	t1.branchcity,
    	t1.utilitycode,
    	t1.accountno,
    	t1.accounttype,
    	t1.active,
    	t1.version,
    	t1.lastmntby,
    	t1.lastmnton,
    	t1.recordstatus,
    	t1.rolecode,
    	t1.nextrolecode,
    	t1.taskid,
    	t1.nexttaskid,
    	t1.recordtype,
    	t1.workflowid,
    	t2.bankname AS bankcodename,
    	t3.branchdesc AS bankbranchcodename
   		FROM sponsorbank_temp t1
     	JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
     	JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode
		UNION ALL
 		SELECT t1.sponsorbankcode,
    	t1.sponsorbankname,
    	t1.bankcode,
    	t1.bankbranchcode,
    	t1.branchmicrcode,
    	t1.branchifsccode,
    	t1.branchcity,
    	t1.utilitycode,
    	t1.accountno,
    	t1.accounttype,
    	t1.active,
    	t1.version,
    	t1.lastmntby,
    	t1.lastmnton,
    	t1.recordstatus,
    	t1.rolecode,
    	t1.nextrolecode,
    	t1.taskid,
    	t1.nexttaskid,
    	t1.recordtype,
    	t1.workflowid,
    	t2.bankname AS bankcodename,
    	t3.branchdesc AS bankbranchcodename
   		FROM sponsorbank t1
     	JOIN bmtbankdetail t2 ON t1.bankcode = t2.bankcode
     	JOIN bankbranches t3 ON t1.bankbranchcode = t3.branchcode
  		WHERE NOT (EXISTS ( SELECT 1
        FROM sponsorbank_temp
        WHERE sponsorbank_temp.sponsorbankcode = t1.sponsorbankcode))
			]]>
		</createView>
	</changeSet>

	<changeSet id="345" author="kranthi.k">
		<createView viewName="CIBIL_CUSTOMER_LOANS_VIEW"
			replaceIfExists="true">
		<![CDATA[
		 SELECT
			AT.SEGMENT_TYPE,  
			CU.CUSTID,
			AT.CODE FINTYPE,
			FM.FINREFERENCE, 
			FM.FINSTARTDATE,
			FM.FINAPPROVEDDATE,
			PD.LATESTRPYDATE,
			FM.REPAYFRQ,
			UDF_CONVERTCURRENCY(FINASSETVALUE, FM.FINCCY, 'INR') FINASSETVALUE,
			UDF_CONVERTCURRENCY(PD.TOTALPRIBAL, FM.FINCCY, 'INR') FUTURE_SCHEDULE_PRIN,
			UDF_CONVERTCURRENCY((PD.ODPRINCIPAL + PD.ODPROFIT), FM.FINCCY, 'INR') INSTALMENT_DUE,
			UDF_CONVERTCURRENCY((PD.TOTALPFTPAID + PD.TOTALPRIPAID), FM.FINCCY, 'INR') INSTALMENT_PAID,
			UDF_CONVERTCURRENCY(BOUNCE_DUE, FM.FINCCY, 'INR') BOUNCE_DUE,
			UDF_CONVERTCURRENCY(BOUNCE_PAID, FM.FINCCY, 'INR') BOUNCE_PAID,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_DUE, FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_DUE,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_PAID,FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_PAID,
			UDF_CONVERTCURRENCY(TOTALPRISCHD, FM.FINCCY, 'INR') TOTAL_PRI_SCHD,
			UDF_CONVERTCURRENCY(TOTALPRIPAID, FM.FINCCY, 'INR') TOTAL_PRI_PAID,
			UDF_CONVERTCURRENCY(TOTALPFTSCHD, FM.FINCCY, 'INR') TOTAL_PFT_SCHD,
			UDF_CONVERTCURRENCY(TOTALPFTPAID, FM.FINCCY, 'INR') TOTAL_PFT_PAID,
			UDF_CONVERTCURRENCY(EXCESS_AMOUNT, FM.FINCCY, 'INR') EXCESS_AMOUNT,
			UDF_CONVERTCURRENCY(EXCESS_AMT_PAID, FM.FINCCY, 'INR') EXCESS_AMT_PAID,
			PD.CURODDAYS,
			FM.CLOSINGSTATUS,
			CU.OWNERSHIP,
			FM.NUMBEROFTERMS,
			UDF_CONVERTCURRENCY(CUSTINCOME, FM.FINCCY, 'INR') CUSTINCOME
			FROM  FINANCEMAIN FM 
			INNER JOIN CIBIL_CUSTOMER_EXTRACT CU ON  CU.FINREFERENCE = FM.FINREFERENCE 
			INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = FM.FINREFERENCE
			INNER JOIN CIBIL_ACCOUNT_TYPES_MAPPING ATM ON ATM.FIN_TYPE = FM.FINTYPE
			INNER JOIN CIBIL_ACCOUNT_TYPES AT ON AT.CODE = ATM.CODE AND AT.SEGMENT_TYPE = ATM.SEGMENT_TYPE
			LEFT JOIN (SELECT MA.FINREFERENCE, SUM(COALESCE(MA.ADVISEAMOUNT,0)- COALESCE(MA.PAIDAMOUNT,0)- COALESCE(MA.WAIVEDAMOUNT,0)) BOUNCE_DUE, SUM(MA.PAIDAMOUNT) BOUNCE_PAID FROM MANUALADVISE  MA  WHERE BOUNCEID > 0 GROUP BY MA.FINREFERENCE) MA ON MA.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(TOTPENALTYBAL) LATE_PAYMENT_PENALTY_DUE, SUM(TOTPENALTYPAID) LATE_PAYMENT_PENALTY_PAID FROM FINODDETAILS GROUP BY FINREFERENCE) FO ON FO.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(AMOUNT) EXCESS_AMOUNT, SUM (COALESCE(UTILISEDAMT,0)+ COALESCE(RESERVEDAMT,0)) EXCESS_AMT_PAID FROM FINEXCESSAMOUNT  GROUP BY FINREFERENCE) FE ON FE.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN  (SELECT CUSTID, COALESCE(SUM(CUSTINCOME), 0) CUSTINCOME FROM CUSTOMERINCOMES GROUP BY CUSTID) CI ON CI.CUSTID = CU.CUSTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="346" author="kranthi.k">
		<createView viewName="COLLATERALCOOWNERS_AVIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT T1.CollateralRef, 
		           	T1.CoOwnerId,
		            T1.CustomerId, 
		            T1.BankCustomer, 
		            T1.CoOwnerIDType, 
		            T1.CoOwnerIDNumber, 		
					T1.CoOwnerCIFName, 
					T1.CoOwnerPercentage, 
					T1.MobileNo, 
					T1.EmailId, 
					T1.CoOwnerProofName, 
					T1.Remarks, 				
					T1.Version, 
					T1.LastMntBy, 
					T1.LastMntOn, 
					T1.RecordStatus, 
					T1.RoleCode, 
					T1.NextRoleCode, 
					T1.TaskId, 				
					T1.NextTaskId, 
					T1.RecordType, 
					T1.WorkflowId, 
					T1.AddrHNbr, 
					T1.FlatNbr, 
					T1.AddrStreet, 
					T1.AddrLine1, 			
					T1.AddrLine2, 
					T1.POBox, 
					T1.AddrCity, 
					T1.AddrProvince, 
					T1.AddrCountry, 
					T1.AddrZIP, 
					T1.CoOwnerProof,
					T2.CustCIF as CoOwnerCIF  
		            FROM   CollateralCoOwners T1
		            INNER JOIN CUSTOMERS T2 ON T2.CUSTID = T1.CustomerId
			]]>
		</createView>
	</changeSet>

	<changeSet id="347" author="kranthi.k">
		<createView viewName="COLLATERALCOOWNERS_VIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT T1.CollateralRef, 
			            T1.CoOwnerId,
			            T1.CustomerId, 
			            T1.BankCustomer, 
			            T1.CoOwnerIDType, 
			            T1.CoOwnerIDNumber, 		
			            T1.CoOwnerCIFName, 
			            T1.CoOwnerPercentage, 
			            T1.MobileNo, 
			            T1.EmailId, 
			            T1.CoOwnerProofName, 
			            T1.Remarks, 				
		            	T1.Version, 
			            T1.LastMntBy, 
			            T1.LastMntOn, 
			            T1.RecordStatus, 
			            T1.RoleCode, 
			            T1.NextRoleCode, 
			            T1.TaskId, 				
			            T1.NextTaskId,
			            T1.RecordType, 
			            T1.WorkflowId, 
			            T1.AddrHNbr, 
			            T1.FlatNbr, 
			            T1.AddrStreet, 
			            T1.AddrLine1, 			
		             	T1.AddrLine2, 
		             	T1.POBox, 
		             	T1.AddrCity, 
		             	T1.AddrProvince, 
		             	T1.AddrCountry, 
		             	T1.AddrZIP, 
		             	T1.CoOwnerProof,
			            T2.CustCIF as CoOwnerCIF 
			            FROM  CollateralCoOwners_Temp T1
			            INNER JOIN CUSTOMERS T2 ON T2.CUSTID = T1.CustomerId
			            UNION ALL
			     		SELECT	T1.CollateralRef, 
			            T1.CoOwnerId,
			            T1.CustomerId, 
			            T1.BankCustomer, 
			            T1.CoOwnerIDType, 
			            T1.CoOwnerIDNumber, 		
						T1.CoOwnerCIFName, 
						T1.CoOwnerPercentage, 
						T1.MobileNo, 
						T1.EmailId, 
						T1.CoOwnerProofName, 
						T1.Remarks, 				
						T1.Version, 
						T1.LastMntBy, 
						T1.LastMntOn, 
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 				
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId, 
						T1.AddrHNbr, 
						T1.FlatNbr, 
						T1.AddrStreet, 
						T1.AddrLine1, 			
						T1.AddrLine2, 
						T1.POBox, 
						T1.AddrCity,
					    T1.AddrProvince, 
					    T1.AddrCountry, 
					    T1.AddrZIP, 
					    T1.CoOwnerProof,
						T2.CustCIF as CoOwnerCIF  
			            FROM  CollateralCoOwners T1
			            INNER JOIN CUSTOMERS T2 ON T2.CUSTID = T1.CustomerId
			            WHERE  NOT EXISTS (SELECT 1 FROM CollateralCoOwners_Temp WHERE CoOwnerId = T1.CoOwnerId AND CollateralRef = T1.CollateralRef)
			]]>
		</createView>
	</changeSet>


	<changeSet id="348" author="kranthi.k">
		<createView viewName="CUSTOMERADDRESSES_AVIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT t1.custaddressid,
    		t1.custid,
    		t1.custaddrtype,
    		t2.addrtypedesc AS lovdesccustaddrtypename,
    		t1.custaddrhnbr,
    		t1.custflatnbr,
    		t1.custaddrstreet,
    		t1.custaddrline1,
    		t1.custaddrline2,
    		t1.custaddrline3,
    		t1.custaddrline4,
    		t1.custdistrict,
    		t1.custpobox,
    		t1.custaddrcity,
    		t1.typeofresidence,
    		t3.pccityname AS lovdesccustaddrcityname,
    		t1.custaddrprovince,
    		t4.cpprovincename AS lovdesccustaddrprovincename,
   		 	t1.custaddrcountry,
    		t5.countrydesc AS lovdesccustaddrcountryname,
    		t1.custaddrzip,
    		t1.custaddrphone,
    		t1.custaddrfrom,
    		t1.custaddrpriority,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid,
    		t6.areaname AS lovdesccustaddrzip
   			FROM customeraddresses t1
     		LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
     		LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
     		LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
     		LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
     		LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
			]]>
		</createView>
	</changeSet>

	<changeSet id="349" author="kranthi.k">
		<createView viewName="CUSTOMERADDRESSES_VIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT t1.custaddressid,
    		t1.custid,
    		t1.custaddrtype,
    		t2.addrtypedesc AS lovdesccustaddrtypename,
    		t1.custaddrhnbr,
    		t1.custflatnbr,
    		t1.custaddrstreet,
    		t1.custaddrline1,
    		t1.custaddrline2,
    		t1.custaddrline3,
    		t1.custaddrline4,
    		t1.custdistrict,
    		t1.custpobox,
    		t1.custaddrcity,
    		t1.typeofresidence,
    		t3.pccityname AS lovdesccustaddrcityname,
    		t1.custaddrprovince,
    		t4.cpprovincename AS lovdesccustaddrprovincename,
    		t1.custaddrcountry,
   	 		t5.countrydesc AS lovdesccustaddrcountryname,
    		t1.custaddrzip,
    		t1.custaddrphone,
    		t1.custaddrfrom,
    		t1.custaddrpriority,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid,
    		t6.areaname AS lovdesccustaddrzip
   			FROM customeraddresses_temp t1
    		LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
    		LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
    		LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
    		LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
    		LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
			UNION ALL
 			SELECT t1.custaddressid,
    		t1.custid,
    		t1.custaddrtype,
    		t2.addrtypedesc AS lovdesccustaddrtypename,
    		t1.custaddrhnbr,
    		t1.custflatnbr,
    		t1.custaddrstreet,
    		t1.custaddrline1,
    		t1.custaddrline2,
    		t1.custaddrline3,
    		t1.custaddrline4,
    		t1.custdistrict,
    		t1.custpobox,
    		t1.custaddrcity,
    		t1.typeofresidence,
    		t3.pccityname AS lovdesccustaddrcityname,
    		t1.custaddrprovince,
    		t4.cpprovincename AS lovdesccustaddrprovincename,
    		t1.custaddrcountry,
    		t5.countrydesc AS lovdesccustaddrcountryname,
    		t1.custaddrzip,
    		t1.custaddrphone,
    		t1.custaddrfrom,
    		t1.custaddrpriority,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid,
    		t6.areaname AS lovdesccustaddrzip
    		FROM customeraddresses t1
    		LEFT JOIN bmtaddresstypes t2 ON t1.custaddrtype = t2.addrtypecode
    		LEFT JOIN rmtprovincevscity t3 ON t1.custaddrcountry = t3.pccountry AND t1.custaddrprovince = t3.pcprovince AND t1.custaddrcity = t3.pccity
    		LEFT JOIN rmtcountryvsprovince t4 ON t1.custaddrcountry = t4.cpcountry AND t1.custaddrprovince = t4.cpprovince
    		LEFT JOIN bmtcountries t5 ON t1.custaddrcountry = t5.countrycode
    		LEFT JOIN pincodes t6 ON t1.custaddrzip = t6.pincode
  			WHERE NOT (EXISTS ( SELECT 1
   	 		FROM customeraddresses_temp
    		WHERE customeraddresses_temp.custid = t1.custid AND customeraddresses_temp.custaddrtype = t1.custaddrtype))
			]]>
		</createView>
	</changeSet>

	<changeSet id="350" author="kranthi.k">
		<createView viewName="DPDBUCKETSCONFIG_VIEW"
			replaceIfExists="true">
		<![CDATA[
			 SELECT T1.ConfigID,
			 		T1.ProductCode,
			 		T1.BucketID,
			 		T1.DueDays,
			 		T1.SuspendProfit,
			 		T1.Version,
			 		T1.LastMntBy,
			 		T1.LastMntOn,
			 		T1.RecordStatus,
			 		T1.RoleCode,
			 		T1.NextRoleCode,
			 		T1.TaskId, 
                    T1.NextTaskId,
                    T1.RecordType,
                    T1.WorkflowId,
                    T2.ProductDesc ProductCodeName,
                    T3.BucketDesc BucketIDName,
                    T3.BucketCode
					FROM DPDBUCKETSCONFIG_Temp  
					T1  INNER JOIN
					BMTProduct T2 ON T1.ProductCode = T2.ProductCode 
					LEFT JOIN DPDBUCKETS T3 ON T1.BucketID = T3.BucketID
					UNION ALL
					SELECT T1.ConfigID,
					T1.ProductCode,
					T1.BucketID,
					T1.DueDays,
					T1.SuspendProfit,		
					T1.Version,
					T1.LastMntBy,
					T1.LastMntOn,
					T1.RecordStatus,
					T1.RoleCode,
					T1.NextRoleCode,
					T1.TaskId, 
                    T1.NextTaskId,
                    T1.RecordType,
                    T1.WorkflowId,
                    T2.ProductDesc ProductCodeName,
                    T3.BucketDesc BucketIDName,
                    T3.BucketCode
					FROM DPDBUCKETSCONFIG  T1 INNER JOIN
					BMTProduct T2 ON T1.ProductCode = T2.ProductCode 
					LEFT JOIN DPDBUCKETS T3 ON T1.BucketID = T3.BucketID
					WHERE NOT EXISTS (SELECT 1 FROM DPDBUCKETSCONFIG_TEMP WHERE ConfigID = T1.ConfigID)
			]]>
		</createView>
	</changeSet>

	<changeSet id="351" author="kranthi.k">
		<createView viewName="FINCREDITREVIEWDETAILS_VIEW"
			replaceIfExists="true">
		<![CDATA[
			 SELECT t1.detailid,
    		t1.creditrevcode,
    		t1.customerid,
    		t1.audityear,
    		t1.bankname,
    		t1.auditors,
    		t1.consolidated,
    		t1.location,
   			t1.conversionrate,
    		t1.auditeddate,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid,
    		t1.auditperiod,
    		t1.audittype,
    		t1.qualified,
    		t1.currency,
    		t2.custcif AS lovdesccustcif,
    		t2.custctgcode AS lovdesccustctgcode,
    		t2.custshrtname AS lovdesccustshrtname,
    		t1.noofshares,
    		t1.marketprice,
    		t3.ccyeditfield AS lovdescccyeditfield,
    		t1.division
   			FROM fincreditreviewdetails_temp t1
     		JOIN customers t2 ON t1.customerid = t2.custid
     		JOIN rmtcurrencies t3 ON t1.currency = t3.ccycode
			UNION ALL
 			SELECT t1.detailid,
    		t1.creditrevcode,
    		t1.customerid,
    		t1.audityear,
    		t1.bankname,
   	 		t1.auditors,
    		t1.consolidated,
    		t1.location,
    		t1.conversionrate,
    		t1.auditeddate,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid,
    		t1.auditperiod,
    		t1.audittype,
    		t1.qualified,
    		t1.currency,
    		t2.custcif AS lovdesccustcif,
    		t2.custctgcode AS lovdesccustctgcode,
    		t2.custshrtname AS lovdesccustshrtname,
    		t1.noofshares,
    		t1.marketprice,
    		t3.ccyeditfield AS lovdescccyeditfield,
    		t1.division
  		 	FROM fincreditreviewdetails t1
     		JOIN customers t2 ON t1.customerid = t2.custid
     		JOIN rmtcurrencies t3 ON t1.currency = t3.ccycode
  			WHERE NOT (EXISTS ( SELECT 1
           	FROM fincreditreviewdetails_temp
          	WHERE fincreditreviewdetails_temp.detailid = t1.detailid))
			]]>
		</createView>
	</changeSet>

	<changeSet id="352" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
		<![CDATA[
		   Select row_number() over(partition by T1.LINKEDTRANID order by T1.LINKEDTRANID)*10000 LINENO,
		   T1.PostDate,
		   'LMS' || T1.LINKEDTRANID ExternalDocNo,
		    T12.HOSTACCOUNT AccountNo, 
  			CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
  			T3.ACTYPEDESC Disc,
  			'HO' LOC,
  			CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
 	 		CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
  			T4.BranchDesc Branches,
  			T4.BranchProvince GSTShiptoStCode, 
  			T7.ProductDesc BusinessSegment,
  			T6.FINTYPEDESC ProductSegment,
  			''GSTCustType, 
  			T11.CUSTADDRPROVINCE GSTBilltoBuyFrStCode,   
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
  			ROUND(CASE WHEN T1.ACCOUNTTYPE='IGST' THEN (T1.POSTAMOUNT*100/18) WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN (T1.POSTAMOUNT*100/9) END/100,0) GstBaseAmount,
  			CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.Invoice_Amt/100 END TotalGSTAmt,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.company_gstin  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,
  			'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8
  			from POSTINGS T1 
  			LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
  			INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
  			INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
  			LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
 		 	LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
  			LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
  			LEFT JOIN GST_INVOICE_TXN T9 ON T9.Transactionid = T1.Linkedtranid
  			LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
  			LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID 
  			LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5 where T1.POSTAMOUNT <> 0
			]]>
		</createView>
	</changeSet>

	<changeSet id="353" author="kranthi.k">
		<createView viewName="LMTFINREFDETAIL_FINVIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT t1.finrefdetailid,
    		t1.fintype,
    		t1.finreftype,
    		t1.finrefid,
    		t1.isactive,
    		t1.showinstage,
    		t1.mandinputinstage,
    		t1.allowinputinstage,
    		t1.allowdeviation,
    		t1.allowwaiver,
    		t1.allowpostpone,
    		t1.allowexpire,
    		t1.override,
    		t1.overridevalue,
    		t1.finevent,
    		t1.alerttype,
    		t1.version,
    		t1.lastmntby,
    		t1.lastmnton,
    		t1.recordstatus,
    		t1.rolecode,
    		t1.nextrolecode,
    		t1.taskid,
    		t1.nexttaskid,
    		t1.recordtype,
    		t1.workflowid,
    		t2.fintypedesc AS lovdescfintypedescname,
    		t2.finccy AS lovdescfinccycode,
    		t2.fincategory AS lovdescproductcodename,
   			t3.aggimage AS lovdescaggimage,
    		COALESCE(t3.aggname, t4.eventcode, t7.rulecodedesc, t8.scoregroupname, t9.scoregroupname, t11.TabDescription) AS lovdescnamelov,
    		COALESCE(t3.aggcode, t7.rulecode, t8.scoregroupcode, t9.scoregroupcode, cast(t11.TabCode as nvarchar2(100))) AS lovdesccodelov,
   			COALESCE(t3.aggdesc, t4.accountsetcodename, t5.checklistdesc, cast(t7.rulecode as varchar(100)), cast(t8.scoregroupcode as varchar(100)), cast(t9.scoregroupcode as  varchar(100)), t10.limitcode, t11.TabCode) AS lovdescrefdesc,
    		t3.aggreportname AS lovdescaggreportname,
    		t3.aggreportpath AS lovdescaggreportpath,
    		t3.agrrule AS lovdescaggrulename,
    		t3.aggtype,
    		t3.moduletype,
    		COALESCE(t3.allowmultiple, 0) AS allowmultiple,
    		COALESCE(t5.remarks, '0') AS lovdescisremarksallowed,
    		COALESCE(t5.checkmincount, 0) AS lovdesccheckmincount,
    		COALESCE(t5.checkmaxcount, 0) AS lovdesccheckmaxcount,
    		COALESCE(t6.sqlrule, t7.sqlrule) AS lovdescelgrulevalue,
    		COALESCE(t6.returntype, t7.returntype) AS lovdescrulereturntype,
    		COALESCE(t8.minscore, t9.minscore, '0') AS lovdescminscore,
    		COALESCE(cast(t8.isoverride as number(10)), t9.isoverride, 0) AS lovdescisoverride
    		FROM lmtfinrefdetail t1
     		JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
     		LEFT JOIN bmtaggrementdef t3 ON t1.finrefid = t3.aggid AND t1.finreftype = 2
     		LEFT JOIN rmtaccountingset t4 ON t1.finrefid = t4.accountsetid AND t1.finreftype = 5
     		LEFT JOIN bmtchecklist t5 ON t1.finrefid = t5.checklistid AND t1.finreftype = 1
    	 	LEFT JOIN rules t6 ON t6.rulecode = t5.checkrule AND t6.rulemodule = 'CLRULE' AND t6.ruleevent = 'CLRULE'
     		LEFT JOIN rules t7 ON t1.finrefid = t7.ruleid AND t1.finreftype = 3
     		LEFT JOIN rmtscoringgroup t8 ON t1.finrefid = t8.scoregroupid AND t1.finreftype = 4 AND t8.categorytype = 'RETAIL'
     		LEFT JOIN rmtscoringgroup t9 ON t1.finrefid = t9.scoregroupid AND t1.finreftype = 7 AND t9.categorytype = 'CORP'
     		LEFT JOIN limitcodedetail t10 ON t10.limitid = t1.finrefid
	 		LEFT JOIN StageTabDetail t11 ON t1.finrefid = t11.TabId AND t1.finreftype = 15
			]]>
		</createView>
	</changeSet>

	<changeSet id="354" author="kranthi.k">
		<createView viewName="RPT_PROVISION_VIEW" replaceIfExists="true">
		<![CDATA[
			SELECT 
  			t3.findivision,
    		t2.fintype,
    		t3.fintypedesc,
    		CASE WHEN t2.fintype IS NULL THEN '' ELSE (t2.fintype || '-') || t3.fintypedesc END AS loantype,
    		'Performing 0-90' AS classifications,
    		4 AS gradeorder,
    		sum(t1.fincurodpri + t1.fincurodpft) AS exposurebhd,
    		count(DISTINCT t2.finaccount) AS noofaccounts,
    		sum(t4.provisiondue) AS provision
   			FROM finoddetails t1
     		JOIN finpftdetails t2 ON t1.finreference = t2.finreference
     		JOIN rmtfinancetypes t3 ON t2.fintype = t3.fintype
     		JOIN finprovisions t4 ON t4.finreference = t1.finreference
  			WHERE t1.fincurodamt <> 0 AND t1.fincuroddays >= 0 AND t1.fincuroddays <= 90 AND COALESCE(t2.closingstatus, '') <> 'C'
  			GROUP BY t2.fintype, t3.fintypedesc, t3.findivision
			UNION
 			SELECT 
			t3.findivision,
    		t2.fintype,
    		t3.fintypedesc,
        	CASE WHEN t2.fintype IS NULL THEN '' ELSE (t2.fintype || '-') || t3.fintypedesc END AS loantype,
			'Substandard 91-180' AS classifications,
        	3 AS gradeorder,
        	sum(t1.fincurodpri + t1.fincurodpft) AS exposurebhd,
        	count(DISTINCT t2.finaccount) AS noofaccounts,
       		sum(t4.provisiondue) AS provision
   			FROM finoddetails t1
        	JOIN finpftdetails t2 ON t1.finreference = t2.finreference
        	JOIN rmtfinancetypes t3 ON t2.fintype = t3.fintype
        	JOIN finprovisions t4 ON t4.finreference = t1.finreference
  			WHERE t1.fincurodamt <> 0 AND t1.fincuroddays >= 91 AND t1.fincuroddays <= 180 AND COALESCE(t2.closingstatus, '') <> 'C'
  			GROUP BY t2.fintype, t3.fintypedesc, t3.findivision
			UNION
 			SELECT 
			t3.findivision,
      		t2.fintype,
    		t3.fintypedesc,
        	CASE WHEN t2.fintype IS NULL THEN '' ELSE (t2.fintype || '-') || t3.fintypedesc END AS loantype,
			'Doubtful 181-365' AS classifications,
    		2 AS gradeorder,
    		sum(t1.fincurodpri + t1.fincurodpft) AS exposurebhd,
    		count(DISTINCT t2.finaccount) AS noofaccounts,
    		sum(t4.provisiondue) AS provision
   			FROM finoddetails t1
     		JOIN finpftdetails t2 ON t1.finreference = t2.finreference
     		JOIN rmtfinancetypes t3 ON t2.fintype = t3.fintype
     		JOIN finprovisions t4 ON t4.finreference = t1.finreference
  			WHERE t1.fincurodamt <> 0 AND t1.fincuroddays >= 181 AND t1.fincuroddays <= 365 AND COALESCE(t2.closingstatus, '') <> 'C'
  			GROUP BY t2.fintype, t3.fintypedesc, t3.findivision
			UNION
 			SELECT 
			t3.findivision,
    		t2.fintype,
    		t3.fintypedesc,
        	CASE WHEN t2.fintype IS NULL THEN '' ELSE (t2.fintype || '-') || t3.fintypedesc END AS loantype,
        	'Loss 365>' AS classifications,
        	1 AS gradeorder,
        	sum(t1.fincurodpri + t1.fincurodpft) AS exposurebhd,
        	count(DISTINCT t2.finaccount) AS noofaccounts,
        	sum(t4.provisiondue) AS provision
   			FROM finoddetails t1
        	JOIN finpftdetails t2 ON t1.finreference = t2.finreference
        	JOIN rmtfinancetypes t3 ON t2.fintype = t3.fintype
        	JOIN finprovisions t4 ON t4.finreference = t1.finreference
  			WHERE t1.fincurodamt <> 0 AND t1.fincuroddays > 365 AND COALESCE(t2.closingstatus, '') <> 'C'
  			GROUP BY t2.fintype, t3.fintypedesc, t3.findivision
			]]>
		</createView>
	</changeSet>

	<changeSet id="355" author="kranthi.k">
		<createView viewName="RPT_SOA_CUSTOMER_VIEW"
			replaceIfExists="true">
		<![CDATA[
			SELECT t1.finreference,
    		t1.finpurpose,
    		t1.finstartdate,
    		t4.branchdesc AS finbranch,
    		t3.productdesc AS fintype,
    		'' AS interest_type,
    		t1.linkedfinref AS linked_agreement_no,
    		t1.closedlinkedfinref AS closed_linked_agree_no,
    		t.custshrtname,
    		t.custcif,
    		t.custid,
    		t.custaddrhnbr,
    		t.custflatnbr,
    		(((((t.custaddrstreet || ' ') || COALESCE(t.custaddrline1, '')) || ' ') || COALESCE(t.custaddrline2, '')) || ' ') || COALESCE(t.custpobox, '') AS custaddrstreet,
    		t.custaddrzip AS custpobox,
    		t.custaddrcity,
    		t.custaddrprovince,
    		t.custaddrcountry,
    		'' AS propertydetails,
    		'' AS propertyaddress,
    		t.phonecountrycode,
    		t.phoneareacode,
    		t.phonenumber,
    		t.custemail,
    		t.activecnt,
    		t.closecnt,
    		t.tot
   			FROM ( SELECT t1_1.custshrtname,
            t1_1.custcif,
            t1_1.custid,
            t2_1.custaddrhnbr,
            t2_1.custflatnbr,
            t2_1.custaddrstreet,
            t2_1.custaddrline1,
            t2_1.custaddrline2,
            t2_1.custpobox,
            t2_1.custaddrzip,
            rc.pccityname AS custaddrcity,
            rp.cpprovincename AS custaddrprovince,
            bc.countrydesc AS custaddrcountry,
            t3_1.phonecountrycode,
            t3_1.phoneareacode,
            t3_1.phonenumber,
            t4_1.custemail,
            t5.activecnt,
            t6.closecnt,
            t5.activecnt + COALESCE(t6.closecnt, 0) AS tot
            FROM customers t1_1
             LEFT JOIN customeraddresses t2_1 ON t1_1.custid = t2_1.custid AND t2_1.custaddrpriority = 5
             LEFT JOIN rmtprovincevscity rc ON rc.pccity = t2_1.custaddrcity
             LEFT JOIN rmtcountryvsprovince rp ON rp.cpprovince = t2_1.custaddrprovince
             LEFT JOIN bmtcountries bc ON bc.countrycode = t2_1.custaddrcountry
             LEFT JOIN customerphonenumbers t3_1 ON t1_1.custid = t3_1.phonecustid AND t3_1.phonetypepriority = 5
             LEFT JOIN customeremails t4_1 ON t4_1.custid = t1_1.custid AND t4_1.custemailpriority = 5
             LEFT JOIN ( SELECT finpftdetails.custid,
             count(*) AS activecnt
             FROM finpftdetails
             WHERE finpftdetails.finisactive = 1
             GROUP BY finpftdetails.custid) t5 ON t1_1.custid = t5.custid
             LEFT JOIN ( SELECT finpftdetails.custid,
             count(*) AS closecnt
             FROM finpftdetails
             WHERE finpftdetails.finisactive <> 1
             GROUP BY finpftdetails.custid) t6 ON t1_1.custid = t6.custid) t
     		LEFT JOIN finpftdetails t1 ON t.custid = t1.custid
     		JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
     		JOIN bmtproduct t3 ON t3.productcode = t2.fincategory
     		JOIN rmtbranches t4 ON t4.branchcode = t1.finbranch
			]]>
		</createView>
	</changeSet>

	<changeSet id="356" author="kranthi.k">
		<createView viewName="RPT_SOA_LOAN_VIEW" replaceIfExists="true">
	 <![CDATA[
			SELECT 	fm.finreference,
        	CASE
            	WHEN rf.productcategory = 'ODFCLITY' THEN fm.finassetvalue
            	ELSE fp.totalprischd 
            	END AS loanamount,
    			fm.repaybaserate AS plrrate,
    			fm.repaymargin AS variance,
    			fm.effectiverateofreturn AS irr,
    			fp.curreducingrate AS roi,
    			fp.noinst AS tenure,
				FM.REPAYFRQ,
    			fp.totalpripaid AS emireceivedpri,
    			fp.totalpftpaid AS emireceivedpft,
    			0.00 AS preferredcardlimit,
    			fp.prvrpyschpri AS previnstamtpri,
    			fp.prvrpyschpft AS previnstamtpft,
        		CASE
            	WHEN fm.rvwrateapplfor IS NULL OR fm.rvwrateapplfor = '#' THEN 'Fixed'
            	ELSE 'Floating'
        		END AS intratetype,
	    		fp.latestdisbdate AS lastdisbursaldate,
    			fp.firstrepaydate AS firstduedate,
    			fm.maturitydate AS endinstallmentdate,
 			   	'0.00/ 0' AS advinstamt,
    			fm.finisactive,
    			fm.closingstatus,
    			fp.futureinst AS futureinstno,
    			fp.totalprischd AS futurepri1,
    			fp.tdschdpri AS futurepri2,
    			fp.totalpftschd AS futurerpypft1,
    			fp.tdschdpft AS futurerpypft2,
    			fp.totchargespaid AS charge_coll_cust,
    			fp.upfrontfee AS upfront_int_cust,
    			0 AS int_paid_dealer_upfront,
    			0 AS pre_emi_int_paid,
    			'' AS repo_status,
    			'' AS repo_date,
    			'' AS sale_date,
    			'' AS release_date,
    	   		fp.latestrpydate,
    			c.ccyminorccyunits,
    			c.ccyeditfield,
				COALESCE(fp.totalpftcpz, 0) AS totalpftcpz
   				FROM financemain fm
    			JOIN finpftdetails fp ON fp.finreference = fm.finreference
    			JOIN rmtfinancetypes rf ON rf.fintype = fm.fintype
    			JOIN rmtcurrencies c ON c.ccycode = fp.finccy
			]]>
		</createView>
	</changeSet>
	<!-- <comment> Scripts Already Executed in Auxilo VQC no need to execute 
		again Change set Id 311 to 356</comment> -->
	<changeSet id="357" author="kranthi.k">
		<addColumn tableName="LegalApplicantDetails_Temp">
			<column name="RelationshipName" type="VARCHAR(50)" />
		</addColumn>
		<addColumn tableName="LegalApplicantDetails">
			<column name="RelationshipName" type="VARCHAR(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="358" author="kranthi.k">
		<addColumn tableName="RMTFINANCETYPES_TEMP">
			<column name="FINGRCRVWRATEAPPLFOR" type="VARCHAR(50)" />
		</addColumn>

		<addColumn tableName="RMTFINANCETYPES">
			<column name="FINGRCRVWRATEAPPLFOR" type="VARCHAR(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="359" author="kranthi.k">
		<sql>
			<![CDATA[	
				DELETE FROM SECROLES WHERE ROLECD='CHEQUEMAINTENANCE_MAKER';
				DELETE FROM SECROLES WHERE ROLECD='CHEQUEMAINTENANCE_APPROVER'; 
			
				INSERT INTO SECROLES SELECT (SELECT MAX(ROLEID)+1 FROM SECROLES),1, 'CHEQUEMAINTENANCE_MAKER', 'CHEQUEMAINTENANCE_MAKER','', 0,1000,CURRENT_TIMESTAMP,'NULL',NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECROLES WHERE 0=0;
				INSERT INTO SECROLES SELECT (SELECT MAX(ROLEID)+1 FROM SECROLES),1, 'CHEQUEMAINTENANCE_APPROVER', 'CHEQUEMAINTENANCE_APPROVER','', 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECROLES WHERE 0=0;

				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='CHEQUEDETAIL_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='CHEQUEMAINTENANCE_MAKER'),0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0); 
				INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='CHEQUEDETAIL_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='CHEQUEMAINTENANCE_APPROVER'),0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
			
				INSERT INTO SecOperationRoles values((Select MAX(OprRoleID)+1 From SecOperationRoles),(Select OprId  From SecOperations Where OprCode='ADMIN'), (Select  RoleID  From SecRoles Where RoleCd='CHEQUEMAINTENANCE_MAKER'),0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0); 
				INSERT INTO SecOperationRoles values((Select MAX(OprRoleID)+1 From SecOperationRoles),(Select OprId  From SecOperations Where OprCode='ADMIN'), (Select  RoleID  From SecRoles Where RoleCd='CHEQUEMAINTENANCE_APPROVER'),0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);	
			]]>
		</sql>
	</changeSet>

	<changeSet id="360" author="kranthi.k">
		<sql>
			update workflowdetails set WorkFlowActive='0' where
			WorkFlowType='CHEQUEMAINTENANCE';
		</sql>
		<insert tableName="WorkFlowDetails">
			<column name="WorkFlowId" valueComputed="(select max(Seqno) + 1 from SeqWorkFlowDetails)" />
			<column name="WorkFlowType">CHEQUEMAINTENANCE</column>
			<column name="WorkFlowSubType">CHEQUEMAINTENANCE</column>
			<column name="WorkFlowDesc">CHEQUEMAINTENANCE</column>
			<column name="JsonDesign" type="nclob"><![CDATA[NULL]]></column>
			<column name="SvgDesign" type="nclob"><![CDATA[NULL]]></column>
			<column name="WorkFlowXml" type="clob"><![CDATA[NULL]]></column>
			<column name="WorkFlowRoles">CHEQUEMAINTENANCE_MAKER;CHEQUEMAINTENANCE_APPROVER
			</column>
			<column name="FirstTaskOwner">CHEQUEMAINTENANCE_MAKER</column>
			<column name="WorkFlowActive">1</column>
			<column name="Version">0</column>
			<column name="LastMntBy">1000</column>
			<column name="LastMntOn" valueDate="current_timestamp" />
			<column name="RecordStatus">Null</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType">NULL</column>
		</insert>
	</changeSet>

	<changeSet id="361" author="kranthi.k">
		<update tableName="WORKFLOWDETAILS">
			<column name="JSONDESIGN" type="NCLOB"><![CDATA[{"resourceId":792,"properties":{"process_id":"CHEQUEMAINTENANCE","name":"CHEQUEMAINTENANCE","documentation":"MakerChecker Master WorkFlow","category":"","listenerclass":"","listenerentitytype":""},"stencil":{"id":"BPMNDiagram"},"childShapes":[{"resourceId":"startEvent1","properties":{"overrideid":"","name":"Start"},"stencil":{"id":"StartNoneEvent"},"childShapes":[],"outgoing":[{"resourceId":"sid-CB1DEE00-A9A1-4162-BD4A-CC3D4B6E7CC1"}],"bounds":{"lowerRight":{"x":130,"y":193},"upperLeft":{"x":100,"y":163}},"dockers":[]},{"resourceId":"sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897","properties":{"overrideid":"","name":"Maker","usertaskassignment":{"assignment":{"type":"idm","idm":{"type":"user","assignee":{"email":"CHEQUEMAINTENANCE_MAKER","firstName":"CHEQUEMAINTENANCE_MAKER","fullName":"CHEQUEMAINTENANCE_MAKER","id":"CHEQUEMAINTENANCE_MAKER","roledesc":"Workflow Maker","$$hashKey":"object:575"}}}},"additionalforms":"","formkeydefinition":"","prioritydefinition":"Role Queue","baseactor":"","duedatedefinition":"","multiinstance_type":"None","isforcompensation":"false"},"stencil":{"id":"UserTask"},"childShapes":[],"outgoing":[{"resourceId":"sid-F8AD09C4-9AD3-4E9F-9432-0B753ACDBFF3"},{"resourceId":"sid-751124CB-1CC1-40AF-B5DB-360706ED6035"}],"bounds":{"lowerRight":{"x":275,"y":218},"upperLeft":{"x":175,"y":138}},"dockers":[]},{"resourceId":"sid-CB1DEE00-A9A1-4162-BD4A-CC3D4B6E7CC1","properties":{"overrideid":"","name":"","repruseaction":"false","conditionsequenceflow":"","defaultflow":"false","action":"","state":"","mandatenotes":"false"},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897"}],"bounds":{"lowerRight":{"x":174.15625,"y":178},"upperLeft":{"x":130.609375,"y":178}},"dockers":[{"x":15,"y":15},{"x":50,"y":40}],"target":{"resourceId":"sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897"}},{"resourceId":"sid-0E4577E1-11E1-450D-A2B6-DBE242378F08","properties":{"overrideid":"","name":"Approver","usertaskassignment":{"assignment":{"type":"idm","idm":{"type":"user","assignee":{"email":"CHEQUEMAINTENANCE_APPROVER","firstName":"CHEQUEMAINTENANCE_APPROVER","fullName":"CHEQUEMAINTENANCE_APPROVER","id":"CHEQUEMAINTENANCE_APPROVER","roledesc":"Workflow Approver","$$hashKey":"object:965"}}}},"additionalforms":"","formkeydefinition":"","prioritydefinition":"Role Queue","baseactor":"","duedatedefinition":"","multiinstance_type":"None","isforcompensation":"false"},"stencil":{"id":"UserTask"},"childShapes":[],"outgoing":[{"resourceId":"sid-E75E07AC-22E7-4F1C-B6E9-733C5C1A3E22"}],"bounds":{"lowerRight":{"x":490,"y":218},"upperLeft":{"x":390,"y":138}},"dockers":[]},{"resourceId":"sid-F8AD09C4-9AD3-4E9F-9432-0B753ACDBFF3","properties":{"overrideid":"","name":"Submit","repruseaction":true,"conditionsequenceflow":{"expression":{"type":"static","staticValue":"vo.recordStatus == 'Submitted'"}},"defaultflow":"false","action":"Submit","state":"Submitted","mandatenotes":"false"},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-0E4577E1-11E1-450D-A2B6-DBE242378F08"}],"bounds":{"lowerRight":{"x":389.44921875,"y":178},"upperLeft":{"x":275.55078125,"y":178}},"dockers":[{"x":50,"y":40},{"x":50,"y":40}],"target":{"resourceId":"sid-0E4577E1-11E1-450D-A2B6-DBE242378F08"}},{"resourceId":"sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01","properties":{"overrideid":"","name":"","sequencefloworder":""},"stencil":{"id":"ExclusiveGateway"},"childShapes":[],"outgoing":[{"resourceId":"sid-90A1D39E-E70D-4EB1-BB50-DF5F8F43359D"},{"resourceId":"sid-79F17746-BC9F-45F8-A31F-CA3969C76736"},{"resourceId":"sid-4A389521-29A1-4967-8A99-23A3D1BA8CDE"}],"bounds":{"lowerRight":{"x":575,"y":198},"upperLeft":{"x":535,"y":158}},"dockers":[]},{"resourceId":"sid-E75E07AC-22E7-4F1C-B6E9-733C5C1A3E22","properties":{"overrideid":"","name":"","repruseaction":"false","conditionsequenceflow":"","defaultflow":"false","action":"","state":"","mandatenotes":"false"},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01"}],"bounds":{"lowerRight":{"x":534.6484468700075,"y":178.4097335362338},"upperLeft":{"x":490.62889687999245,"y":178.2191727137662}},"dockers":[{"x":50,"y":40},{"x":20.5,"y":20.5}],"target":{"resourceId":"sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01"}},{"resourceId":"sid-90A1D39E-E70D-4EB1-BB50-DF5F8F43359D","properties":{"overrideid":"","name":"Resubmit","repruseaction":true,"conditionsequenceflow":{"expression":{"type":"static","staticValue":"vo.recordStatus == 'Resubmitted'"}},"defaultflow":"false","action":"Resubmit","state":"Resubmitted","mandatenotes":true},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897"}],"bounds":{"lowerRight":{"x":555.5,"y":157.48046875},"upperLeft":{"x":225,"y":76}},"dockers":[{"x":20.5,"y":20.5},{"x":555.5,"y":76},{"x":225,"y":76},{"x":50,"y":40}],"target":{"resourceId":"sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897"}},{"resourceId":"sid-22D15E29-D37A-4505-A48C-7A329DF13429","properties":{"overrideid":"","name":"Complete Process","servicetaskexpression":"doApprove","isforcompensation":"false","multiinstance_type":"None"},"stencil":{"id":"approveTask"},"childShapes":[],"outgoing":[{"resourceId":"sid-5AABA17A-E718-463D-95FA-7B0E9E938247"}],"bounds":{"lowerRight":{"x":760,"y":218},"upperLeft":{"x":660,"y":138}},"dockers":[]},{"resourceId":"sid-79F17746-BC9F-45F8-A31F-CA3969C76736","properties":{"overrideid":"","name":"Approve","repruseaction":true,"conditionsequenceflow":{"expression":{"type":"static","staticValue":"vo.recordStatus == 'Approved'"}},"defaultflow":"false","action":"Approve","state":"Approved","mandatenotes":"false"},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-22D15E29-D37A-4505-A48C-7A329DF13429"}],"bounds":{"lowerRight":{"x":659.5117239866028,"y":178.43426377099223},"upperLeft":{"x":575.8124947633972,"y":178.16339247900777}},"dockers":[{"x":20.5,"y":20.5},{"x":50,"y":40}],"target":{"resourceId":"sid-22D15E29-D37A-4505-A48C-7A329DF13429"}},{"resourceId":"sid-5FF3A069-112E-49C0-9A73-07B73600334B","properties":{"overrideid":"","name":"Approved"},"stencil":{"id":"EndNoneEvent"},"childShapes":[],"outgoing":[],"bounds":{"lowerRight":{"x":833,"y":192},"upperLeft":{"x":805,"y":164}},"dockers":[]},{"resourceId":"sid-5AABA17A-E718-463D-95FA-7B0E9E938247","properties":{"overrideid":"","name":"","repruseaction":"false","conditionsequenceflow":"","defaultflow":"false","action":"","state":"","mandatenotes":"false"},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-5FF3A069-112E-49C0-9A73-07B73600334B"}],"bounds":{"lowerRight":{"x":804.375,"y":178},"upperLeft":{"x":760.390625,"y":178}},"dockers":[{"x":50,"y":40},{"x":14,"y":14}],"target":{"resourceId":"sid-5FF3A069-112E-49C0-9A73-07B73600334B"}},{"resourceId":"sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB","properties":{"overrideid":"","name":"Cancel Process","servicetaskexpression":"doReject","isforcompensation":"false","multiinstance_type":"None"},"stencil":{"id":"rejectTask"},"childShapes":[],"outgoing":[{"resourceId":"sid-9E25CBF1-5C3D-444E-B619-F8DF70F8710B"}],"bounds":{"lowerRight":{"x":605,"y":369},"upperLeft":{"x":505,"y":289}},"dockers":[]},{"resourceId":"sid-4A389521-29A1-4967-8A99-23A3D1BA8CDE","properties":{"overrideid":"","name":"Reject","repruseaction":true,"conditionsequenceflow":{"expression":{"type":"static","staticValue":"vo.recordStatus == 'Rejected'"}},"defaultflow":"false","action":"Reject","state":"Rejected","mandatenotes":true},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB"}],"bounds":{"lowerRight":{"x":555.4341777591982,"y":288.0234430186572},"upperLeft":{"x":555.1361347408018,"y":198.3124944813428}},"dockers":[{"x":20.5,"y":20.5},{"x":50,"y":40}],"target":{"resourceId":"sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB"}},{"resourceId":"sid-751124CB-1CC1-40AF-B5DB-360706ED6035","properties":{"overrideid":"","name":"Cancel","repruseaction":true,"conditionsequenceflow":{"expression":{"type":"static","staticValue":"vo.recordStatus == 'Cancelled'"}},"defaultflow":"false","action":"Cancel","state":"Cancelled","mandatenotes":true},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB"}],"bounds":{"lowerRight":{"x":504.37109375,"y":329},"upperLeft":{"x":225,"y":218.51953125}},"dockers":[{"x":50,"y":40},{"x":225,"y":329},{"x":50,"y":40}],"target":{"resourceId":"sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB"}},{"resourceId":"sid-B8114559-3D1A-4A63-A65F-B62B0D0812CA","properties":{"overrideid":"","name":"Rejected"},"stencil":{"id":"EndNoneEvent"},"childShapes":[],"outgoing":[],"bounds":{"lowerRight":{"x":678,"y":343},"upperLeft":{"x":650,"y":315}},"dockers":[]},{"resourceId":"sid-9E25CBF1-5C3D-444E-B619-F8DF70F8710B","properties":{"overrideid":"","name":"","repruseaction":"false","conditionsequenceflow":"","defaultflow":"false","action":"","state":"","mandatenotes":"false"},"stencil":{"id":"SequenceFlow"},"childShapes":[],"outgoing":[{"resourceId":"sid-B8114559-3D1A-4A63-A65F-B62B0D0812CA"}],"bounds":{"lowerRight":{"x":649.375,"y":329},"upperLeft":{"x":605.390625,"y":329}},"dockers":[{"x":50,"y":40},{"x":14,"y":14}],"target":{"resourceId":"sid-B8114559-3D1A-4A63-A65F-B62B0D0812CA"}}],"bounds":{"lowerRight":{"x":1200,"y":1050},"upperLeft":{"x":0,"y":0}},"stencilset":{"url":"stencilsets/bpmn2.0/bpmn2.0.json","namespace":"http://b3mn.org/stencilset/bpmn2.0#"},"ssextensions":[]}]]></column>
			<column name="WORKFLOWXML" type="CLOB"><![CDATA[<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://activiti.org/test"><process id="CHEQUEMAINTENANCE" name="CHEQUEMAINTENANCE" isExecutable="true"><documentation>MakerChecker Master WorkFlow</documentation><startEvent id="startEvent1" name="Start" /><userTask id="sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897" name="Maker" activiti:actor="CHEQUEMAINTENANCE_MAKER" activiti:assignmentLevel="Role Queue" /><sequenceFlow id="sid-CB1DEE00-A9A1-4162-BD4A-CC3D4B6E7CC1" sourceRef="startEvent1" targetRef="sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897" representsUserAction="false" mandateNotes="false" /><userTask id="sid-0E4577E1-11E1-450D-A2B6-DBE242378F08" name="Approver" activiti:actor="CHEQUEMAINTENANCE_APPROVER" activiti:assignmentLevel="Role Queue" /><sequenceFlow id="sid-F8AD09C4-9AD3-4E9F-9432-0B753ACDBFF3" name="Submit" sourceRef="sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897" targetRef="sid-0E4577E1-11E1-450D-A2B6-DBE242378F08" action="Submit" state="Submitted" representsUserAction="true" mandateNotes="false"><conditionExpression xsi:type="tFormalExpression">vo.recordStatus == 'Submitted'</conditionExpression></sequenceFlow><exclusiveGateway id="sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01" /><sequenceFlow id="sid-E75E07AC-22E7-4F1C-B6E9-733C5C1A3E22" sourceRef="sid-0E4577E1-11E1-450D-A2B6-DBE242378F08" targetRef="sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01" representsUserAction="false" mandateNotes="false" /><sequenceFlow id="sid-90A1D39E-E70D-4EB1-BB50-DF5F8F43359D" name="Resubmit" sourceRef="sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01" targetRef="sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897" action="Resubmit" state="Resubmitted" representsUserAction="true" mandateNotes="true"><conditionExpression xsi:type="tFormalExpression">vo.recordStatus == 'Resubmitted'</conditionExpression></sequenceFlow><serviceTask id="sid-22D15E29-D37A-4505-A48C-7A329DF13429" name="Complete Process" activiti:operation="doApprove" /><sequenceFlow id="sid-79F17746-BC9F-45F8-A31F-CA3969C76736" name="Approve" sourceRef="sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01" targetRef="sid-22D15E29-D37A-4505-A48C-7A329DF13429" action="Approve" state="Approved" representsUserAction="true" mandateNotes="false"><conditionExpression xsi:type="tFormalExpression">vo.recordStatus == 'Approved'</conditionExpression></sequenceFlow><endEvent id="sid-5FF3A069-112E-49C0-9A73-07B73600334B" name="Approved" /><sequenceFlow id="sid-5AABA17A-E718-463D-95FA-7B0E9E938247" sourceRef="sid-22D15E29-D37A-4505-A48C-7A329DF13429" targetRef="sid-5FF3A069-112E-49C0-9A73-07B73600334B" representsUserAction="false" mandateNotes="false" /><serviceTask id="sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB" name="Cancel Process" activiti:operation="doReject" /><sequenceFlow id="sid-4A389521-29A1-4967-8A99-23A3D1BA8CDE" name="Reject" sourceRef="sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01" targetRef="sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB" action="Reject" state="Rejected" representsUserAction="true" mandateNotes="true"><conditionExpression xsi:type="tFormalExpression">vo.recordStatus == 'Rejected'</conditionExpression></sequenceFlow><sequenceFlow id="sid-751124CB-1CC1-40AF-B5DB-360706ED6035" name="Cancel" sourceRef="sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897" targetRef="sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB" action="Cancel" state="Cancelled" representsUserAction="true" mandateNotes="true"><conditionExpression xsi:type="tFormalExpression">vo.recordStatus == 'Cancelled'</conditionExpression></sequenceFlow><endEvent id="sid-B8114559-3D1A-4A63-A65F-B62B0D0812CA" name="Rejected" /><sequenceFlow id="sid-9E25CBF1-5C3D-444E-B619-F8DF70F8710B" sourceRef="sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB" targetRef="sid-B8114559-3D1A-4A63-A65F-B62B0D0812CA" representsUserAction="false" mandateNotes="false" /></process><bpmndi:BPMNDiagram id="BPMNDiagram_CHEQUEMAINTENANCE"><bpmndi:BPMNPlane bpmnElement="CHEQUEMAINTENANCE" id="BPMNPlane_CHEQUEMAINTENANCE"><bpmndi:BPMNShape bpmnElement="startEvent1" id="BPMNShape_startEvent1"><omgdc:Bounds height="30.0" width="30.0" x="100.0" y="163.0" /></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement="sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897" id="BPMNShape_sid-38272C15-118D-4D4F-80E0-DD3A3FEC8897"><omgdc:Bounds height="80.0" width="100.0" x="175.0" y="138.0" /></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement="sid-0E4577E1-11E1-450D-A2B6-DBE242378F08" id="BPMNShape_sid-0E4577E1-11E1-450D-A2B6-DBE242378F08"><omgdc:Bounds height="80.0" width="100.0" x="390.0" y="138.0" /></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement="sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01" id="BPMNShape_sid-6D2A3EE4-19BA-44FF-93AB-717BFF16FC01"><omgdc:Bounds height="40.0" width="40.0" x="535.0" y="158.0" /></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement="sid-22D15E29-D37A-4505-A48C-7A329DF13429" id="BPMNShape_sid-22D15E29-D37A-4505-A48C-7A329DF13429"><omgdc:Bounds height="80.0" width="100.0" x="660.0" y="138.0" /></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement="sid-5FF3A069-112E-49C0-9A73-07B73600334B" id="BPMNShape_sid-5FF3A069-112E-49C0-9A73-07B73600334B"><omgdc:Bounds height="28.0" width="28.0" x="805.0" y="164.0" /></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement="sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB" id="BPMNShape_sid-0AD002F0-2C5A-4D9F-B0D2-7A03A8025FEB"><omgdc:Bounds height="80.0" width="100.0" x="505.0" y="289.0" /></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement="sid-B8114559-3D1A-4A63-A65F-B62B0D0812CA" id="BPMNShape_sid-B8114559-3D1A-4A63-A65F-B62B0D0812CA"><omgdc:Bounds height="28.0" width="28.0" x="650.0" y="315.0" /></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement="sid-F8AD09C4-9AD3-4E9F-9432-0B753ACDBFF3" id="BPMNEdge_sid-F8AD09C4-9AD3-4E9F-9432-0B753ACDBFF3"><omgdi:waypoint x="275.0" y="178.0" /><omgdi:waypoint x="390.0" y="178.0" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-5AABA17A-E718-463D-95FA-7B0E9E938247" id="BPMNEdge_sid-5AABA17A-E718-463D-95FA-7B0E9E938247"><omgdi:waypoint x="760.0" y="178.0" /><omgdi:waypoint x="805.0" y="178.0" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-79F17746-BC9F-45F8-A31F-CA3969C76736" id="BPMNEdge_sid-79F17746-BC9F-45F8-A31F-CA3969C76736"><omgdi:waypoint x="574.5616883116883" y="178.4383116883117" /><omgdi:waypoint x="660.0" y="178.16181229773463" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-90A1D39E-E70D-4EB1-BB50-DF5F8F43359D" id="BPMNEdge_sid-90A1D39E-E70D-4EB1-BB50-DF5F8F43359D"><omgdi:waypoint x="555.5" y="158.5" /><omgdi:waypoint x="555.5" y="76.0" /><omgdi:waypoint x="225.0" y="76.0" /><omgdi:waypoint x="225.0" y="138.0" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-CB1DEE00-A9A1-4162-BD4A-CC3D4B6E7CC1" id="BPMNEdge_sid-CB1DEE00-A9A1-4162-BD4A-CC3D4B6E7CC1"><omgdi:waypoint x="130.0" y="178.0" /><omgdi:waypoint x="175.0" y="178.0" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-751124CB-1CC1-40AF-B5DB-360706ED6035" id="BPMNEdge_sid-751124CB-1CC1-40AF-B5DB-360706ED6035"><omgdi:waypoint x="225.0" y="218.0" /><omgdi:waypoint x="225.0" y="329.0" /><omgdi:waypoint x="505.0" y="329.0" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-4A389521-29A1-4967-8A99-23A3D1BA8CDE" id="BPMNEdge_sid-4A389521-29A1-4967-8A99-23A3D1BA8CDE"><omgdi:waypoint x="555.4366666666667" y="197.56333333333333" /><omgdi:waypoint x="555.1328903654485" y="289.0" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-9E25CBF1-5C3D-444E-B619-F8DF70F8710B" id="BPMNEdge_sid-9E25CBF1-5C3D-444E-B619-F8DF70F8710B"><omgdi:waypoint x="605.0" y="329.0" /><omgdi:waypoint x="650.0" y="329.0" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement="sid-E75E07AC-22E7-4F1C-B6E9-733C5C1A3E22" id="BPMNEdge_sid-E75E07AC-22E7-4F1C-B6E9-733C5C1A3E22"><omgdi:waypoint x="490.0" y="178.2164502164502" /><omgdi:waypoint x="535.4130434782609" y="178.41304347826087" /></bpmndi:BPMNEdge></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></definitions>]]></column>
			<where>workflowtype='CHEQUEMAINTENANCE'and workflowactive=1</where>
		</update>
	</changeSet>
	<changeSet id="362" author="kranthi.k">
		<sql>
			UPDATE SeqWorkFlowDetails SET SEQNO= (SELECT MAX(WorkflowId)+1
			FROM
			workflowdetails);
		</sql>
	</changeSet>

	<changeSet id="363" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
		<![CDATA[
		  	Select row_number() over(partition by T1.LINKEDTRANID order by T1.LINKEDTRANID)*10000 LINENO,
   		  	T1.PostDate,
   		  	'LMS' || T1.LINKEDTRANID ExternalDocNo,
    	  	T12.HOSTACCOUNT AccountNo, 
  		  	CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
  			T3.ACTYPEDESC Disc,
  			'HO' LOC,
 			CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
  			CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
  			T4.BranchDesc Branches,
  			T4.BranchProvince GSTShiptoStCode, 
  			T7.ProductDesc BusinessSegment,
  			T6.FINTYPEDESC ProductSegment,
  			''GSTCustType, 
  			COALESCE(T11.CUSTADDRPROVINCE, T12.BranchProvince)  GSTBilltoBuyFrStCode,   
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
  			ROUND(CASE WHEN T1.ACCOUNTTYPE='IGST' THEN (T1.POSTAMOUNT*100/18) WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN (T1.POSTAMOUNT*100/9) END/100,0) GstBaseAmount,
  			CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.Invoice_Amt/100 END TotalGSTAmt,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.company_gstin  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,
  			'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8
  			from POSTINGS T1 
  			LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
  			INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
  			INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
  			LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
  			LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
  			LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
  			LEFT JOIN GST_INVOICE_TXN T9 ON T9.Transactionid = T1.Linkedtranid
  			LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
  			LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID 
  			LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
        	LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH where T1.POSTAMOUNT <> 0
			]]>
		</createView>
	</changeSet>

	<changeSet id="364" author="kranthi.k">
		<sql>
			<![CDATA[	
				DELETE  FROM BMTAMOUNTCODES where  ALLOWEDEVENT = 'EARLYPAY' AND 
				AMOUNTCODE  in ('bounceCharge_CGST_P','bounceCharge_CGST_W','bounceCharge_IGST_P','bounceCharge_IGST_W',
				'bounceCharge_SGST_P','bounceCharge_SGST_W','bounceCharge_UGST_P','bounceCharge_UGST_W');
			
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_CGST_P','Bounce charge CGST paid','1',1,1000,to_date('03-SEP-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_CGST_W','Bounce charge CGST Waived','1',1,1000,to_date('21-SEP-19','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_IGST_P','Bounce charge IGST paid','1',1,1000,to_date('03-SEP-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_IGST_W','Bounce charge IGST Waived','1',1,1000,to_date('21-SEP-19','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_SGST_P','Bounce charge SGST paid','1',1,1000,to_date('03-SEP-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_SGST_W','Bounce charge SGST Waived','1',1,1000,to_date('21-SEP-19','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_UGST_P','Bounce charge UGST paid','1',1,1000,to_date('03-SEP-18','DD-MON-RR'),'Approved',null,null,null,null,null,0);
				Insert into  BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYPAY',0,'bounceCharge_UGST_W','Bounce charge UGST Waived','1',1,1000,to_date('21-SEP-19','DD-MON-RR'),'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="365" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
		<![CDATA[
			Select row_number() over(partition by T1.LINKEDTRANID order by T1.LINKEDTRANID)*10000 LINENO,
   			T1.PostDate,
   			'LMS' || T1.LINKEDTRANID ExternalDocNo,
    		T12.HOSTACCOUNT AccountNo, 
  			CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
  			T3.ACTYPEDESC Disc,
  			'HO' LOC,
  			CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
  			CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
  			T4.BranchDesc Branches,
        	(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
  			T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,''GSTCustType, 
  			(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
 			ROUND(CASE WHEN T1.ACCOUNTTYPE='IGST' THEN (T1.POSTAMOUNT*100/18) WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN (T1.POSTAMOUNT*100/9) END/100,0) GstBaseAmount,
  			CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.Invoice_Amt/100 END TotalGSTAmt,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.company_gstin  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,
  			'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8
  			from POSTINGS T1 
  			LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
  			INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
  			INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
  			LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
  			LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
  			LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
  			LEFT JOIN GST_INVOICE_TXN T9 ON T9.Transactionid = T1.Linkedtranid
  			LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
  			LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID 
  			LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
        	LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH where T1.POSTAMOUNT <> 0
			]]>
		</createView>
	</changeSet>

	<changeSet id="366" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
		<![CDATA[
			Select row_number() over(partition by T1.LINKEDTRANID order by T1.LINKEDTRANID)*10000 LINENO,
   			T1.PostDate,
   			'LMS' || T1.LINKEDTRANID ExternalDocNo,
    		T12.HOSTACCOUNT AccountNo, 
 			CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
  			T3.ACTYPEDESC Disc,
  			'HO' LOC,
  			CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
  			CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
  			T4.BranchDesc Branches,
        	(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
  			T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
        	(CASE WHEN T18.TAXNUMBER is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
  			(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
 			ROUND(CASE WHEN T1.ACCOUNTTYPE='IGST' THEN (T1.POSTAMOUNT*100/18) WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN (T1.POSTAMOUNT*100/9) END/100,0) GstBaseAmount,
  			CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.Invoice_Amt/100 END TotalGSTAmt,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.company_gstin  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,
  			'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8
  			from POSTINGS T1 
  			LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
  			INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
  			INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
  			LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
  			LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
  			LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
  			LEFT JOIN GST_INVOICE_TXN T9 ON T9.Transactionid = T1.Linkedtranid
  			LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
  			LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
        	LEFT JOIN FINTAXDETAIL T18 on T18.TAXCUSTID = T5.CUSTID 
  			LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
        	LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH where T1.POSTAMOUNT <> 0
			]]>
		</createView>
	</changeSet>

	<changeSet id="367" author="kranthi.k">
		<sql>
			<![CDATA[	
				update data_engine_config set FILENAMEFORMAT='${PARTNER_BANK_CODE},${SEQ_FILE},_${ddMMYYYYHHmmss}'  where id='239' and name='DISB_EXPORT_DEFAULT';			
			]]>
		</sql>
	</changeSet>

	<changeSet id="368.0" author="kranthi.k">
		<createView viewName="INTERESTCERTIFICATE_VIEW"
			replaceIfExists="true">
			<![CDATA[
			 select T2.CUSTSHRTNAME as CUSTNAME,T3.CUSTADDRHNBR ,T3.CUSTADDRSTREET,T11.COUNTRYDESC,
			 T12.CPPROVINCENAME as CUSTADDRSTATE,T13.PCCITYNAME as CUSTADDRCITY,T3.CUSTADDRZIP,
			 T8.FINREFERENCE,T4.CUSTEMAIL,T5.PHONENUMBER as CUSTPHONENUMBER,T6.FINTYPEDESC,
			 T8.FINASSETVALUE,T8.EFFECTIVERATEOFRETURN as EFFECTIVERATE ,T10.ENTITYCODE,T10.ENTITYDESC,T10.PANNUMBER as ENTITYPANNUMBER,
			 T10.ENTITYADDRHNBR,T10.ENTITYFLATNBR,T10.ENTITYADDRSTREET,
			 T14.CPPROVINCENAME as ENTITYSTATE,T15.PCCITYNAME as ENTITYCITY,T10.pincode as entityZip,
			 T1.FINPOSTDATE,T1.FINSCHDPFTPAID,T1.FINSCHDPRIPAID,T8.FINCCY,T8.finAssetValue as FinAmount,T8.fintype,t3.CUSTFLATNBR,(T16.TotalPftBal + T16.TotalPriBal) as TotOustandingAmt,T16.TotalPftBal,T16.TotalPriBal
			from    FINANCEMAIN T8
			left join FINREPAYDETAILS T1 on T8.FINREFERENCE =T1.FINREFERENCE 
			inner join CUSTOMERS T2 on T2.CUSTID=T8.CUSTID 
			left join CUSTOMERADDRESSES T3 on T3.CUSTID=T8.CUSTID and T3.CUSTADDRPRIORITY=5
			left join CUSTOMEREMAILS T4 on T4.CUSTID=T8.CUSTID and T4.CUSTEMAILPRIORITY=5
			left join CUSTOMERPHONENUMBERS T5 on T5.PHONECUSTID=T8.CUSTID and T5.PHONETYPEPRIORITY=5
			inner join RMTFINANCETYPES T6 on T6.FINTYPE=T8.FINTYPE
			inner join SMTDIVISIONDETAIL T9 on T9.DIVISIONCODE=T6.FINDIVISION
			inner join ENTITY T10 on T10.ENTITYCODE=T9.ENTITYCODE
			left join BMTCOUNTRIES T11 on T11.COUNTRYCODE=T3.CUSTADDRCOUNTRY
			left join RMTCOUNTRYVSPROVINCE T12 on T12.CPPROVINCE=T3.CUSTADDRPROVINCE
			left join RMTPROVINCEVSCITY T13 on T13.PCCITY=T3.CUSTADDRCITY
			left join RMTCOUNTRYVSPROVINCE T14 on T14.CPPROVINCE=T10.STATECODE
			inner join RMTPROVINCEVSCITY T15 on T15.PCCITY=T10.CITYCODE
			inner join FINPFTDETAILS T16 on T16.Finreference = T8.Finreference
			]]>
		</createView>
	</changeSet>

	<changeSet id="369" author="kranthi.k">
		<sql>
			<![CDATA[
				update data_engine_config set filenameformat='${ddMMYYYY},_${SEQ_FILE}' where id='239' and name='DISB_EXPORT_DEFAULT';
			]]>
		</sql>
	</changeSet>

	<changeSet id="370" author="kranthi.k">
		<sql>
			<![CDATA[
				update reportfilterfields set MULTISELECTSEARCH=1 where reportid in (select reportid from reportconfiguration where menuitemcode='menu_Item_PastDue') and fieldid=1;		
			]]>
		</sql>
	</changeSet>

	<changeSet id="371" author="kranthi.k">
		<sql>
			<![CDATA[
				update reportconfiguration set wherecondition=0 where menuitemcode='menu_Item_NPAReport';		
			]]>
		</sql>
	</changeSet>

	<changeSet id="372" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
		<![CDATA[
			Select row_number() over(partition by T1.LINKEDTRANID order by T1.LINKEDTRANID)*10000 LINENO,
   			T1.PostDate,
   			'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,  
    		T12.HOSTACCOUNT AccountNo, 
 			CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
  			T3.ACTYPEDESC Disc,
  			'HO' LOC,
  			CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
  			CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
  			T4.BranchDesc Branches,
        	(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
  			T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
        	(CASE WHEN T9.COMPANY_GSTIN is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
  			(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
  			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
 			ROUND(CASE WHEN T1.ACCOUNTTYPE='IGST' THEN (T1.POSTAMOUNT*100/18) WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN (T1.POSTAMOUNT*100/9) END/100,0) GstBaseAmount,
  			CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.Invoice_Amt/100 END TotalGSTAmt,
 			CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.COMPANY_GSTIN  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,
  			'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8
  			from POSTINGS T1 
  			LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
  			INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
  			INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
  			LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
  			LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
  			LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
  			LEFT JOIN GST_INVOICE_TXN T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
  			LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
  			LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
  			LEFT JOIN FINTAXDETAIL T18 on T18.TAXCUSTID = T5.CUSTID 
  			LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
  			LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH where T1.POSTAMOUNT <> 0			
  			]]>
		</createView>
	</changeSet>

	<changeSet id="373" author="sudheer.t">
		<createView viewName="CIBIL_CUSTOMER_LOANS_VIEW"
			replaceIfExists="true">
		<![CDATA[
		 SELECT
			AT.SEGMENT_TYPE,  
			CU.CUSTID,
			AT.CODE FINTYPE,
			FM.FINREFERENCE, 
			FM.FINSTARTDATE,
			FM.FINAPPROVEDDATE,
			PD.LATESTRPYDATE,
			FM.REPAYFRQ,
			UDF_CONVERTCURRENCY(FINASSETVALUE, FM.FINCCY, 'INR') FINASSETVALUE,
			UDF_CONVERTCURRENCY(PD.TOTALPRIBAL, FM.FINCCY, 'INR') FUTURE_SCHEDULE_PRIN,
			UDF_CONVERTCURRENCY((PD.ODPRINCIPAL + PD.ODPROFIT), FM.FINCCY, 'INR') INSTALMENT_DUE,
			UDF_CONVERTCURRENCY((PD.TOTALPFTPAID + PD.TOTALPRIPAID), FM.FINCCY, 'INR') INSTALMENT_PAID,
			UDF_CONVERTCURRENCY(BOUNCE_DUE, FM.FINCCY, 'INR') BOUNCE_DUE,
			UDF_CONVERTCURRENCY(BOUNCE_PAID, FM.FINCCY, 'INR') BOUNCE_PAID,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_DUE, FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_DUE,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_PAID,FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_PAID,
			UDF_CONVERTCURRENCY(TOTALPRISCHD, FM.FINCCY, 'INR') TOTAL_PRI_SCHD,
			UDF_CONVERTCURRENCY(TOTALPRIPAID, FM.FINCCY, 'INR') TOTAL_PRI_PAID,
			UDF_CONVERTCURRENCY(TOTALPFTSCHD, FM.FINCCY, 'INR') TOTAL_PFT_SCHD,
			UDF_CONVERTCURRENCY(TOTALPFTPAID, FM.FINCCY, 'INR') TOTAL_PFT_PAID,
			UDF_CONVERTCURRENCY(EXCESS_AMOUNT, FM.FINCCY, 'INR') EXCESS_AMOUNT,
			UDF_CONVERTCURRENCY(EXCESS_AMT_PAID, FM.FINCCY, 'INR') EXCESS_AMT_PAID,
			PD.CURODDAYS,
			PD.MATURITYDATE,
			PD.CURREDUCINGRATE,
			FM.CLOSINGSTATUS,
			CU.OWNERSHIP,
			FM.NUMBEROFTERMS,
			UDF_CONVERTCURRENCY(CUSTINCOME, FM.FINCCY, 'INR') CUSTINCOME
			FROM  FINANCEMAIN FM 
			INNER JOIN CIBIL_CUSTOMER_EXTRACT CU ON  CU.FINREFERENCE = FM.FINREFERENCE 
			INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = FM.FINREFERENCE
			INNER JOIN CIBIL_ACCOUNT_TYPES_MAPPING ATM ON ATM.FIN_TYPE = FM.FINTYPE
			INNER JOIN CIBIL_ACCOUNT_TYPES AT ON AT.CODE = ATM.CODE AND AT.SEGMENT_TYPE = ATM.SEGMENT_TYPE
			LEFT JOIN (SELECT MA.FINREFERENCE, SUM(COALESCE(MA.ADVISEAMOUNT,0)- COALESCE(MA.PAIDAMOUNT,0)- COALESCE(MA.WAIVEDAMOUNT,0)) BOUNCE_DUE, SUM(MA.PAIDAMOUNT) BOUNCE_PAID FROM MANUALADVISE  MA  WHERE BOUNCEID > 0 GROUP BY MA.FINREFERENCE) MA ON MA.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(TOTPENALTYBAL) LATE_PAYMENT_PENALTY_DUE, SUM(TOTPENALTYPAID) LATE_PAYMENT_PENALTY_PAID FROM FINODDETAILS GROUP BY FINREFERENCE) FO ON FO.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(AMOUNT) EXCESS_AMOUNT, SUM (COALESCE(UTILISEDAMT,0)+ COALESCE(RESERVEDAMT,0)) EXCESS_AMT_PAID FROM FINEXCESSAMOUNT  GROUP BY FINREFERENCE) FE ON FE.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN  (SELECT CUSTID, COALESCE(SUM(CUSTINCOME), 0) CUSTINCOME FROM CUSTOMERINCOMES GROUP BY CUSTID) CI ON CI.CUSTID = CU.CUSTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="374" author="kranthi.k">
		<createView viewName="INTERESTCERTIFICATE_VIEW"
			replaceIfExists="true">
			<![CDATA[
			 select T2.CUSTSHRTNAME as CUSTNAME,T3.CUSTADDRHNBR ,T3.CUSTADDRSTREET,T11.COUNTRYDESC,
			 T12.CPPROVINCENAME as CUSTADDRSTATE,T13.PCCITYNAME as CUSTADDRCITY,T3.CUSTADDRZIP,
			 T8.FINREFERENCE,T4.CUSTEMAIL,T5.PHONENUMBER as CUSTPHONENUMBER,T6.FINTYPEDESC,
			 T8.FINASSETVALUE,T8.EFFECTIVERATEOFRETURN as EFFECTIVERATE ,T10.ENTITYCODE,T10.ENTITYDESC,T10.PANNUMBER as ENTITYPANNUMBER,
			 T10.ENTITYADDRHNBR,T10.ENTITYFLATNBR,T10.ENTITYADDRSTREET,
			 T14.CPPROVINCENAME as ENTITYSTATE,T15.PCCITYNAME as ENTITYCITY,T10.pincode as entityZip,
			 T1.FINPOSTDATE,T1.FINSCHDPFTPAID,T1.FINSCHDPRIPAID,T8.FINCCY,T8.finAssetValue as FinAmount,T8.fintype,T8.FinCurrAssetValue,t3.CUSTFLATNBR,(T16.TotalPftBal + T16.TotalPriBal) as TotOustandingAmt,T16.TotalPftBal,T16.TotalPriBal
			from    FINANCEMAIN T8
			left join FINREPAYDETAILS T1 on T8.FINREFERENCE =T1.FINREFERENCE 
			inner join CUSTOMERS T2 on T2.CUSTID=T8.CUSTID 
			left join CUSTOMERADDRESSES T3 on T3.CUSTID=T8.CUSTID and T3.CUSTADDRPRIORITY=5
			left join CUSTOMEREMAILS T4 on T4.CUSTID=T8.CUSTID and T4.CUSTEMAILPRIORITY=5
			left join CUSTOMERPHONENUMBERS T5 on T5.PHONECUSTID=T8.CUSTID and T5.PHONETYPEPRIORITY=5
			inner join RMTFINANCETYPES T6 on T6.FINTYPE=T8.FINTYPE
			inner join SMTDIVISIONDETAIL T9 on T9.DIVISIONCODE=T6.FINDIVISION
			inner join ENTITY T10 on T10.ENTITYCODE=T9.ENTITYCODE
			left join BMTCOUNTRIES T11 on T11.COUNTRYCODE=T3.CUSTADDRCOUNTRY
			left join RMTCOUNTRYVSPROVINCE T12 on T12.CPPROVINCE=T3.CUSTADDRPROVINCE
			left join RMTPROVINCEVSCITY T13 on T13.PCCITY=T3.CUSTADDRCITY
			left join RMTCOUNTRYVSPROVINCE T14 on T14.CPPROVINCE=T10.STATECODE
			inner join RMTPROVINCEVSCITY T15 on T15.PCCITY=T10.CITYCODE
			inner join FINPFTDETAILS T16 on T16.Finreference = T8.Finreference
			]]>
		</createView>
	</changeSet>

	<changeSet id="375" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT row_number() over(partition by T1.LINKEDTRANID order by T1.LINKEDTRANID)*10000 LINENO,
				T1.PostDate,
				'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,  
				T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
  				T3.ACTYPEDESC Disc,
  				'HO' LOC,
  				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
 	 			CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
  				T4.BranchDesc Branches,
        		(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
  				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
        		(CASE WHEN T9.COMPANY_GSTIN is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
  				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
  				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
  				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
 				ROUND(CASE WHEN T1.ACCOUNTTYPE='IGST' THEN (T1.POSTAMOUNT*100/18) WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN (T1.POSTAMOUNT*100/9) END/100,0) GstBaseAmount,
  				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
 				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.Invoice_Amt/100 END TotalGSTAmt,
 				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.COMPANY_GSTIN  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,
  				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8
  				from POSTINGS T1 
  				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
  				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
  				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
  				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
  				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
  				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
  				LEFT JOIN GST_INVOICE_TXN T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
  				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
  				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
  				LEFT JOIN FINTAXDETAIL T18 on T18.TAXCUSTID = T5.CUSTID 
  				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
  				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH where T1.POSTAMOUNT <> 0
  				and T1.FINEVENT||T1.ACCOUNTTYPE NOT IN ('EARLYSTLINTEX','EARLYSTLINTIN')
			 	]]>
		</createView>
	</changeSet>

	<changeSet id="376" author="kranthi.k">
		<createView viewName="RECEIPTDETAILS_VIEW" replaceIfExists="true">
			<![CDATA[
			SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE ,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					INNER JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					UNION ALL
					SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					WHERE NOT EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
			  ]]>
		</createView>
	</changeSet>

	<changeSet id="377" author="kranthi.k">
		<createView viewName="RECEIPTDETAILS_VIEW" replaceIfExists="true">
			<![CDATA[
			SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE ,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					INNER JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					UNION ALL
					SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					WHERE NOT EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
			  ]]>
		</createView>
	</changeSet>


	<changeSet id="378" author="kranthi.k">
		<sql>
			<![CDATA[
				UPDATE SMTPARAMETERS SET SYSPARMVALUE='Y' WHERE SYSPARMCODE='ALLOW_FEE_CALC_ADJU_PRINCIPAL';	
			]]>
		</sql>
	</changeSet>

	<changeSet id="379" author="kranthi.k">
		<createView viewName="RECEIPTDETAILS_VIEW" replaceIfExists="true">
			<![CDATA[
  				SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T2.AMOUNT AS RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE ,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					INNER JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					UNION ALL
					SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T2.AMOUNT AS RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					WHERE NOT EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
					]]>
		</createView>
	</changeSet>

	<changeSet id="380" author="kranthi.k">
		<createView viewName="CIBIL_CUSTOMER_LOANS_VIEW"
			replaceIfExists="true">
		<![CDATA[
		 	SELECT
			AT.SEGMENT_TYPE,  
			CU.CUSTID,
			AT.CODE FINTYPE,
			FM.FINREFERENCE, 
			FM.FINSTARTDATE,
			FM.FINAPPROVEDDATE,
			PD.LATESTRPYDATE,
			FM.REPAYFRQ,
			UDF_CONVERTCURRENCY(FINASSETVALUE, FM.FINCCY, 'INR') FINASSETVALUE,
			UDF_CONVERTCURRENCY(PD.TOTALPRIBAL, FM.FINCCY, 'INR') FUTURE_SCHEDULE_PRIN,
			UDF_CONVERTCURRENCY((PD.ODPRINCIPAL + PD.ODPROFIT), FM.FINCCY, 'INR') INSTALMENT_DUE,
			UDF_CONVERTCURRENCY((PD.TOTALPFTPAID + PD.TOTALPRIPAID), FM.FINCCY, 'INR') INSTALMENT_PAID,
			UDF_CONVERTCURRENCY(BOUNCE_DUE, FM.FINCCY, 'INR') BOUNCE_DUE,
			UDF_CONVERTCURRENCY(BOUNCE_PAID, FM.FINCCY, 'INR') BOUNCE_PAID,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_DUE, FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_DUE,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_PAID,FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_PAID,
			UDF_CONVERTCURRENCY(TOTALPRISCHD, FM.FINCCY, 'INR') TOTAL_PRI_SCHD,
			UDF_CONVERTCURRENCY(TOTALPRIPAID, FM.FINCCY, 'INR') TOTAL_PRI_PAID,
			UDF_CONVERTCURRENCY(TOTALPFTSCHD, FM.FINCCY, 'INR') TOTAL_PFT_SCHD,
			UDF_CONVERTCURRENCY(TOTALPFTPAID, FM.FINCCY, 'INR') TOTAL_PFT_PAID,
			UDF_CONVERTCURRENCY(EXCESS_AMOUNT, FM.FINCCY, 'INR') EXCESS_AMOUNT,
			UDF_CONVERTCURRENCY(EXCESS_AMT_PAID, FM.FINCCY, 'INR') EXCESS_AMT_PAID,
			PD.CURODDAYS,
			PD.MATURITYDATE,
			PD.CURREDUCINGRATE,
			FM.CLOSINGSTATUS,
			CU.OWNERSHIP,
			FM.NUMBEROFTERMS,
			UDF_CONVERTCURRENCY(CUSTINCOME, FM.FINCCY, 'INR') CUSTINCOME
			FROM  FINANCEMAIN FM 
			INNER JOIN CIBIL_CUSTOMER_EXTRACT CU ON  CU.FINREFERENCE = FM.FINREFERENCE 
			INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = FM.FINREFERENCE
			INNER JOIN CIBIL_ACCOUNT_TYPES_MAPPING ATM ON ATM.FIN_TYPE = FM.FINTYPE
			INNER JOIN CIBIL_ACCOUNT_TYPES AT ON AT.CODE = ATM.CODE AND AT.SEGMENT_TYPE = ATM.SEGMENT_TYPE
			LEFT JOIN (SELECT MA.FINREFERENCE, SUM(COALESCE(MA.ADVISEAMOUNT,0)- COALESCE(MA.PAIDAMOUNT,0)- COALESCE(MA.WAIVEDAMOUNT,0)) BOUNCE_DUE, SUM(MA.PAIDAMOUNT) BOUNCE_PAID FROM MANUALADVISE  MA  WHERE BOUNCEID > 0 GROUP BY MA.FINREFERENCE) MA ON MA.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(TOTPENALTYBAL) LATE_PAYMENT_PENALTY_DUE, SUM(TOTPENALTYPAID) LATE_PAYMENT_PENALTY_PAID FROM FINODDETAILS GROUP BY FINREFERENCE) FO ON FO.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(AMOUNT) EXCESS_AMOUNT, SUM (COALESCE(UTILISEDAMT,0)+ COALESCE(RESERVEDAMT,0)) EXCESS_AMT_PAID FROM FINEXCESSAMOUNT  GROUP BY FINREFERENCE) FE ON FE.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN  (SELECT CUSTID, COALESCE(SUM(CUSTINCOME), 0) CUSTINCOME FROM CUSTOMERINCOMES GROUP BY CUSTID) CI ON CI.CUSTID = CU.CUSTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="381" author="kranthi.k">
		<sql>
			<![CDATA[
				DELETE FROM CIBIL_ADDRESS_TYPES_MAPPING where segment_type='CORP';
				INSERT INTO CIBIL_ADDRESS_TYPES_MAPPING VALUES('01', 'CORP',   'PERM',   1, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO CIBIL_ADDRESS_TYPES_MAPPING VALUES('02', 'CORP',   'CURR', 1, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO CIBIL_ADDRESS_TYPES_MAPPING VALUES('03', 'CORP',   'OFFICE',   1, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO CIBIL_ADDRESS_TYPES_MAPPING VALUES('04', 'CORP',   'REGD', 1, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);	
			]]>
		</sql>
	</changeSet>

	<changeSet id="382" author="kranthi.k">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE AllowedEvent ='REPAY' and amountCode = 'CACLT_ReceiptAmount';
				DELETE FROM BMTAMOUNTCODES WHERE AllowedEvent ='REPAY' and amountCode = 'DSF_ReceiptAmount';
				INSERT INTO BMTAMOUNTCODES VALUES('REPAY',  0, 'CACLT_ReceiptAmount',  'Cash Collateral', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0);
				INSERT INTO BMTAMOUNTCODES VALUES('REPAY', 0, 'DSF_ReceiptAmount', 'Debt Service Fund', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="383" author="kranthi.k">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE AllowedEvent ='EARLYSTL' and amountCode = 'CACLT_ReceiptAmount';
				DELETE FROM BMTAMOUNTCODES WHERE AllowedEvent ='EARLYSTL' and amountCode = 'DSF_ReceiptAmount';
				INSERT INTO BMTAMOUNTCODES VALUES('EARLYSTL',  0, 'CACLT_ReceiptAmount',  'Cash Collateral', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0);
				INSERT INTO BMTAMOUNTCODES VALUES('EARLYSTL', 0, 'DSF_ReceiptAmount', 'Debt Service Fund', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0);			
			]]>
		</sql>
	</changeSet>

	<changeSet id="384" author="kranthi.k">
		<sql>
			<![CDATA[
				DELETE FROM BMTAMOUNTCODES WHERE AllowedEvent ='EARLYPAY' and amountCode = 'CACLT_ReceiptAmount';
				DELETE FROM BMTAMOUNTCODES WHERE AllowedEvent ='EARLYPAY' and amountCode = 'DSF_ReceiptAmount';
				INSERT INTO BMTAMOUNTCODES VALUES('EARLYPAY',  0, 'CACLT_ReceiptAmount',  'Cash Collateral', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0);
				INSERT INTO BMTAMOUNTCODES VALUES('EARLYPAY', 0, 'DSF_ReceiptAmount', 'Debt Service Fund', 1, 1, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="385" author="kranthi.k">
		<sql>
			<![CDATA[
				UPDATE SMTPARAMETERS SET SYSPARMVALUE='Y' WHERE SYSPARMCODE='ALLOWED_BACKDATED_RECEIPT';	
			]]>
		</sql>
	</changeSet>

	<changeSet id="386" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
				select row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate, ExternalDocNo,AccountNo,AccountType,Disc,LOC,DebitAmt,CreditAmt ,Branches ,GSTShiptoStCode ,BusinessSegment,ProductSegment,
				GSTCustType,GSTBilltoBuyFrStCode,GSTGroupCode,HSNSACCode,BaseAmount,GSTPER,TotalGSTAmt,GSTRegistrationNumber,DocumentType,Department,GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT DISTINCT T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
 				T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN T9.COMPANY_GSTIN is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.Invoice_Amt/100 END TotalGSTAmt,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t9.COMPANY_GSTIN  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8  from POSTINGS T1
				Left Join (select P.LINKEDTRANID, postAmount, BaseAmount from postings p 
				Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType = 'PROIN') BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID
				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				LEFT JOIN (select T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT where t1.POSTAMOUNT <> 0
				and T1.FINEVENT||T1.ACCOUNTTYPE NOT IN ('EARLYSTLINTEX','EARLYSTLINTIN') and ACCOUNTTYPE in('SGST','IGST','UGST','CGST')) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Inner JOIN GST_INVOICE_TXN T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				Inner join GST_INVOICE_TXN_DETAILS T13 ON T9.INVOICEID=T13.INVOICEID and T13.FeeCode='PFE'
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN FINTAXDETAIL T18 on T18.TAXCUSTID = T5.CUSTID 
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH where T1.POSTAMOUNT <> 0
				AND T1.FINEVENT||T1.ACCOUNTTYPE NOT IN ('EARLYSTLINTEX','EARLYSTLINTIN'))
			 	]]>
		</createView>
	</changeSet>

	<changeSet id="387" author="kranthi.k">
		<createView viewName="CIBIL_CUSTOMER_LOANS_VIEW"
			replaceIfExists="true">
		<![CDATA[
		 	SELECT
			AT.SEGMENT_TYPE,  
			CU.CUSTID,
			AT.CODE FINTYPE,
			FM.FINREFERENCE, 
			FM.FINSTARTDATE,
			FM.FINAPPROVEDDATE,
			PD.LATESTRPYDATE,
			FM.REPAYFRQ,
			UDF_CONVERTCURRENCY(FINASSETVALUE, FM.FINCCY, 'INR') FINASSETVALUE,
			UDF_CONVERTCURRENCY(PD.TOTALPRIBAL, FM.FINCCY, 'INR') FUTURE_SCHEDULE_PRIN,
			UDF_CONVERTCURRENCY((PD.ODPRINCIPAL + PD.ODPROFIT), FM.FINCCY, 'INR') INSTALMENT_DUE,
			UDF_CONVERTCURRENCY((PD.TOTALPFTPAID + PD.TOTALPRIPAID), FM.FINCCY, 'INR') INSTALMENT_PAID,
			UDF_CONVERTCURRENCY(BOUNCE_DUE, FM.FINCCY, 'INR') BOUNCE_DUE,
			UDF_CONVERTCURRENCY(BOUNCE_PAID, FM.FINCCY, 'INR') BOUNCE_PAID,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_DUE, FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_DUE,
			UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_PAID,FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_PAID,
			UDF_CONVERTCURRENCY(TOTALPRISCHD, FM.FINCCY, 'INR') TOTAL_PRI_SCHD,
			UDF_CONVERTCURRENCY(TOTALPRIPAID, FM.FINCCY, 'INR') TOTAL_PRI_PAID,
			UDF_CONVERTCURRENCY(TOTALPFTSCHD, FM.FINCCY, 'INR') TOTAL_PFT_SCHD,
			UDF_CONVERTCURRENCY(TOTALPFTPAID, FM.FINCCY, 'INR') TOTAL_PFT_PAID,
			UDF_CONVERTCURRENCY(EXCESS_AMOUNT, FM.FINCCY, 'INR') EXCESS_AMOUNT,
			UDF_CONVERTCURRENCY(EXCESS_AMT_PAID, FM.FINCCY, 'INR') EXCESS_AMT_PAID,
			PD.CURODDAYS,
			PD.MATURITYDATE,
			PD.CURREDUCINGRATE,
			FM.CLOSINGSTATUS,
			CU.OWNERSHIP,
			FM.CALTERMS AS NUMBEROFTERMS,
			UDF_CONVERTCURRENCY(CUSTINCOME, FM.FINCCY, 'INR') CUSTINCOME
			FROM  FINANCEMAIN FM 
			INNER JOIN CIBIL_CUSTOMER_EXTRACT CU ON  CU.FINREFERENCE = FM.FINREFERENCE 
			INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = FM.FINREFERENCE
			INNER JOIN CIBIL_ACCOUNT_TYPES_MAPPING ATM ON ATM.FIN_TYPE = FM.FINTYPE
			INNER JOIN CIBIL_ACCOUNT_TYPES AT ON AT.CODE = ATM.CODE AND AT.SEGMENT_TYPE = ATM.SEGMENT_TYPE
			LEFT JOIN (SELECT MA.FINREFERENCE, SUM(COALESCE(MA.ADVISEAMOUNT,0)- COALESCE(MA.PAIDAMOUNT,0)- COALESCE(MA.WAIVEDAMOUNT,0)) BOUNCE_DUE, SUM(MA.PAIDAMOUNT) BOUNCE_PAID FROM MANUALADVISE  MA  WHERE BOUNCEID > 0 GROUP BY MA.FINREFERENCE) MA ON MA.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(TOTPENALTYBAL) LATE_PAYMENT_PENALTY_DUE, SUM(TOTPENALTYPAID) LATE_PAYMENT_PENALTY_PAID FROM FINODDETAILS GROUP BY FINREFERENCE) FO ON FO.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN (SELECT FINREFERENCE, SUM(AMOUNT) EXCESS_AMOUNT, SUM (COALESCE(UTILISEDAMT,0)+ COALESCE(RESERVEDAMT,0)) EXCESS_AMT_PAID FROM FINEXCESSAMOUNT  GROUP BY FINREFERENCE) FE ON FE.FINREFERENCE = FM.FINREFERENCE
			LEFT JOIN  (SELECT CUSTID, COALESCE(SUM(CUSTINCOME), 0) CUSTINCOME FROM CUSTOMERINCOMES GROUP BY CUSTID) CI ON CI.CUSTID = CU.CUSTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="388" author="kranthi.k">
		<comment>custshrtname length changed to 200</comment>

		<modifyDataType tableName="COLLECTION_CUSTOMERDETAILS"
			columnName="CUSTSHRTNAME" newDataType="varchar(200)" />
	</changeSet>

	<changeSet id="389.1" author="kranthi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate, ExternalDocNo,AccountNo,AccountType,Disc,LOC,DebitAmt,CreditAmt ,Branches,GSTShiptoStCode ,BusinessSegment,ProductSegment,				
				GSTCustType,stCode GSTBilltoBuyFrStCode,GSTGroupCode,HSNSACCode,BaseAmount,GSTPER,Round((TotalGSTAmt*18/100),0) TotalGSTAmt,GSTRegistrationNumber,DocumentType,Department,GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
 				T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN T9.LOANACCOUNTNO is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,
				(CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA1.BaseAmount_new/100 ELSE 0 END) TotalGSTAmt,				
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8,rpv.bankrefno stCode  from POSTINGS T1
				Left Join (select distinct P.LINKEDTRANID, postAmount, BaseAmount from postings p 
				Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID
				left Join (select  finreference, sum(BaseAmount) BaseAmount_new from postings p 				
				left Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0 group by finreference) BA1 ON BA1.finreference=T1.finreference
				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				LEFT JOIN (select T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT where t1.POSTAMOUNT <> 0
				and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST')) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
				LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
			 	]]>
		</createView>
	</changeSet>

	<changeSet id="390" author="saijyothi.k">
		<sql>
			<![CDATA[
				update CIBIL_ACCOUNT_TYPES_MAPPING set CODE='8' where code='08';	
			]]>
		</sql>
	</changeSet>

	<changeSet id="391" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
      			SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount,GSTPER,
				Round((TotalGSTAmt*18/100),0) TotalGSTAmt,GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTShiptoStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
 				T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,
				(CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA1.BaseAmount_new/100 ELSE 0 END) TotalGSTAmt,				
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8,rpv.bankrefno stCode  from POSTINGS T1
				Left Join (select distinct P.LINKEDTRANID, postAmount, BaseAmount from postings p 
				Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID
				left Join (select  finreference, sum(BaseAmount) BaseAmount_new from postings p 				
				left Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0 group by finreference) BA1 ON BA1.finreference=T1.finreference
				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				LEFT JOIN (select T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT where t1.POSTAMOUNT <> 0
				and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST')) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
				LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
			]]>
		</createView>
	</changeSet>

	<changeSet id="392" author="saijyothi.k">
		<sql>
			<![CDATA[
				update smtparameters set sysparmvalue='PRESENTMENT_REQUEST' where sysparmcode='PRESENTMENT_REQUEST_PDC';
			]]>
		</sql>
	</changeSet>

	<changeSet id="393" author="saijyothi.k">
		<sql>
			<![CDATA[
				delete from smtparameters_temp where sysparmcode='PRESENTMENT_REQUEST_PDC';	
			]]>
		</sql>
	</changeSet>

	<changeSet id="394" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
      			SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,
				Round((TotalGSTAmt*18/100),0) TotalGSTAmt,GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTShiptoStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
 				T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,
				(CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA1.BaseAmount_new/100 ELSE 0 END) TotalGSTAmt,				
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8,rpv.bankrefno stCode  from POSTINGS T1
				Left Join (select distinct P.LINKEDTRANID, postAmount, BaseAmount from postings p 
				Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID
				left Join (select  finreference, sum(BaseAmount) BaseAmount_new from postings p 				
				left Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0 group by finreference) BA1 ON BA1.finreference=T1.finreference
				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				LEFT JOIN (select T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT where t1.POSTAMOUNT <> 0
				and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST')) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
				LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
			]]>
		</createView>
	</changeSet>

	<changeSet id="395" author="saijyothi.k">
		<sql>
			<![CDATA[
				update smtparameters set sysparmlength='3' where sysparmcode='BACKDAYS_STARTDATE';
			]]>
		</sql>
	</changeSet>
	<changeSet id="396" author="saijyothi.k">
		<sql>
			<![CDATA[
				Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('REPAY', 0, 'EX_ReceiptAmount', 'Amount Code for Excess Balance', 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', null, null, null, null, null, 0);
			]]>
		</sql>
	</changeSet>
	<changeSet id="397" author="saijyothi.k">
		<sql>
			<![CDATA[
				update SMTPARAMETERS set SYSPARMVALUE='Y' where sysparmcode='MANDATE_DOWNLOAD_STOP_CIF_VALIDATION';	
			]]>
		</sql>
	</changeSet>
	<changeSet id="398" author="saijyothi.k">
		<sql>
			<![CDATA[
				update SMTPARAMETERS set SYSPARMVALUE='15' where sysparmcode='ALW_SP_BACK_DAYS';
			]]>
		</sql>
	</changeSet>
	<changeSet id="399" author="saijyothi.k">
		<sql>
			<![CDATA[
				update SMTPARAMETERS set SYSPARMVALUE='TRUE' where sysparmcode='BPI_INCOMIZED_ON_ORG';
			]]>
		</sql>
	</changeSet>
	<changeSet id="400" author="saijyothi.k">
		<sql>
			<![CDATA[
				update SMTPARAMETERS set SYSPARMVALUE='HALF_DOWN' where sysparmcode='TAX_ROUNDINGMODE';
			]]>
		</sql>
	</changeSet>
	<changeSet id="401" author="saijyothi.k">
		<sql>
			<![CDATA[
				Insert into SMTPARAMETERS (SYSPARMCODE,SYSPARMDESC,SYSPARMTYPE,SYSPARMMAINT,SYSPARMVALUE,SYSPARMLENGTH,SYSPARMDEC,SYSPARMLIST,SYSPARMVALDMOD,SYSPARMDESCRIPTION,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('PRESENTMENT_EXCLUDE_RESPONSE_ROW_LENGTH','Presentment Exclude Response Row Length','int',0,'2',2,0,null,null,'Presentment Exclude Response Row Lenght',1,1000,to_date('08-11-19','DD-MM-RR'),'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>
	<changeSet id="402" author="saijyothi.k">
		<createView viewName=" CIBIL_CUSTOMER_EXTARCT_VIEW"
			replaceIfExists="true">
			<![CDATA[
      			select C.CUSTID, FM.FINREFERENCE, case when FM.FINREFERENCE is null then 4 else 1 end ownership, PD.LATESTRPYDATE from FINANCEMAIN FM
				INNER JOIN CUSTOMERS C ON C.CUSTID = FM.CUSTID
				INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = FM.FINREFERENCE
				INNER JOIN RMTFINANCETYPES RFT ON RFT.FINTYPE = PD.FINTYPE
				where C.custid in (select distinct custid  from financemain) 
				and CUSTTYPECODE IN (select CUSTTYPECODE from RMTCUSTTYPES WHERE CUSTTYPECTG = 'RETAIL')
		UNION ALL
             select C.CUSTID, FM.FINREFERENCE, 3 OWNERSHIP, PD.LATESTRPYDATE  from FINGUARANTORSDETAILS GD
				INNER JOIN CUSTOMERS C ON C.CUSTCIF = GD.GUARANTORCIF
				INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = GD.FINREFERENCE
				INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = GD.FINREFERENCE
				INNER JOIN RMTFINANCETYPES RFT ON RFT.FINTYPE = PD.FINTYPE
				where C.custid in (select distinct custid  from financemain) 
				and CUSTTYPECODE IN (select CUSTTYPECODE from RMTCUSTTYPES WHERE CUSTTYPECTG = 'RETAIL')  
		UNION ALL
			select  C.CUSTID, FM.FINREFERENCE, 4 OWNERSHIP, PD.LATESTRPYDATE from FINJOINTACCOUNTDETAILS JA
				INNER JOIN CUSTOMERS C ON C.CUSTCIF = JA.CUSTCIF
				INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = JA.FINREFERENCE
				INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = JA.FINREFERENCE
				INNER JOIN RMTFINANCETYPES RFT ON RFT.FINTYPE = PD.FINTYPE
			    where C.custid in (select distinct custid  from financemain) 
				and CUSTTYPECODE IN (select CUSTTYPECODE from RMTCUSTTYPES WHERE CUSTTYPECTG = 'RETAIL')
			]]>
		</createView>
	</changeSet>
	<changeSet id="403" author="saijyothi.k">
		<createView viewName=" CIBIL_CUSTOMER_EXTARCT_VIEW"
			replaceIfExists="true">
			<![CDATA[
      			select C.CUSTID, FM.FINREFERENCE, case when FM.FINREFERENCE is null then 4 else 1 end ownership, PD.LATESTRPYDATE from FINANCEMAIN FM
				INNER JOIN CUSTOMERS C ON C.CUSTID = FM.CUSTID
				INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = FM.FINREFERENCE
				INNER JOIN RMTFINANCETYPES RFT ON RFT.FINTYPE = PD.FINTYPE
				
				and CUSTTYPECODE IN (select CUSTTYPECODE from RMTCUSTTYPES WHERE CUSTTYPECTG = 'RETAIL')
		UNION ALL
 			select C.CUSTID, FM.FINREFERENCE, 3 OWNERSHIP, PD.LATESTRPYDATE  from FINGUARANTORSDETAILS GD
				INNER JOIN CUSTOMERS C ON C.CUSTCIF = GD.GUARANTORCIF
				INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = GD.FINREFERENCE
				INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = GD.FINREFERENCE
				INNER JOIN RMTFINANCETYPES RFT ON RFT.FINTYPE = PD.FINTYPE
				 
				and CUSTTYPECODE IN (select CUSTTYPECODE from RMTCUSTTYPES WHERE CUSTTYPECTG = 'RETAIL')  
		UNION ALL
			select  C.CUSTID, FM.FINREFERENCE, 4 OWNERSHIP, PD.LATESTRPYDATE from FINJOINTACCOUNTDETAILS JA
				INNER JOIN CUSTOMERS C ON C.CUSTCIF = JA.CUSTCIF
				INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = JA.FINREFERENCE
				INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = JA.FINREFERENCE
				INNER JOIN RMTFINANCETYPES RFT ON RFT.FINTYPE = PD.FINTYPE
			
				and CUSTTYPECODE IN (select CUSTTYPECODE from RMTCUSTTYPES WHERE CUSTTYPECTG = 'RETAIL')
			]]>
		</createView>
	</changeSet>
	<changeSet id="404" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
      		SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,
        
        case when accountno='30301002' and finevent='EARLYPAY' then CreditAmt
        when accountno like '%BOUIN' then CreditAmt else BaseAmount end GSTBASEAMOUNT,
                GSTPER,
				Round((TotalGSTAmt*18/100),0) TotalGSTAmt,GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTShiptoStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
 				T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,
				(CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA1.BaseAmount_new/100 ELSE 0 END) TotalGSTAmt,				
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8,rpv.bankrefno stCode,t1.finevent  from POSTINGS T1
				Left Join (select distinct P.LINKEDTRANID, postAmount, BaseAmount 
        from postings p 
				Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID
				left Join (select  finreference, sum(BaseAmount) BaseAmount_new from postings p 				
				left Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0 group by finreference) BA1 ON BA1.finreference=T1.finreference
				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				LEFT JOIN (select T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT where t1.POSTAMOUNT <> 0
				and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST')) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
				LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0 and T1.finreference='62345294532' )
			]]>
		</createView>
	</changeSet>

	<changeSet id="405" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
      		SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,
        
        case when accountno='30301002' and finevent='EARLYPAY' then CreditAmt
        when accountno like '%BOUIN' then CreditAmt else BaseAmount end GSTBASEAMOUNT,
                GSTPER,
				Round((TotalGSTAmt*18/100),0) TotalGSTAmt,GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTShiptoStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
 				T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,
				(CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA1.BaseAmount_new/100 ELSE 0 END) TotalGSTAmt,				
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8,rpv.bankrefno stCode,t1.finevent  from POSTINGS T1
				Left Join (select distinct P.LINKEDTRANID, postAmount, BaseAmount 
        from postings p 
				Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID
				left Join (select  finreference, sum(BaseAmount) BaseAmount_new from postings p 				
				left Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0 group by finreference) BA1 ON BA1.finreference=T1.finreference
				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				LEFT JOIN (select T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT where t1.POSTAMOUNT <> 0
				and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST')) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
				LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
			]]>
		</createView>
	</changeSet>

	<changeSet id="406" author="narendra.m">
		<sql>
        <![CDATA[
		update DATA_ENGINE_TABLE set FILTER='PROCESS_ID = :PROCESS_ID',STATUSUPDATE='UPDATE MANDATE_REQUESTS SET BATCH_ID = :FILEID, STATUS =''AC''  WHERE PROCESS_ID = :PROCESS_ID QUERY:UPDATE MANDATES SET STATUS = ''AC'' WHERE MANDATEID IN (SELECT MANDATEID FROM MANDATE_REQUESTS WHERE PROCESS_ID = :PROCESS_ID AND STATUS = ''AC'')' 
        where configid=(Select id from DATA_ENGINE_CONFIG where Name='MANDATES_EXPORT');
			 ]]>
		</sql>
	</changeSet>
	<changeSet id="407" author="narendra.m">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
      			SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,
				Round((TotalGSTAmt*18/100),0) TotalGSTAmt,GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTShiptoStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
 				CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
 				T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END) GSTShiptoStCode, 
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,
				(CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA1.BaseAmount_new/100 ELSE 0 END) TotalGSTAmt,				
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8,rpv.bankrefno stCode  from POSTINGS T1
				Left Join (select distinct P.LINKEDTRANID, postAmount, BaseAmount from postings p 
				Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID
				left Join (select  finreference, sum(BaseAmount) BaseAmount_new from postings p 				
				left Join (select LINKEDTRANID, postAmount BaseAmount from postings where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
				where AccountType in ('SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0 group by finreference) BA1 ON BA1.finreference=T1.finreference
				LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				LEFT JOIN (select T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT where t1.POSTAMOUNT <> 0
				and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST')) BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
				LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
			]]>
		</createView>
	</changeSet>

	<changeSet id="408" author="narendra.m">
		<sql>
        <![CDATA[
       update DATA_ENGINE_CONFIG set Name='DISB_EXPORT_HDFC' where Name='DISB_EXPORT_HDFC';
       update DATA_ENGINE_CONFIG set FieldNames = null where NAME = 'DISB_EXPORT_HDFC';
       ]]>
		</sql>
	</changeSet>

	<changeSet id="409" author="narendra.m">
		<sql>
        <![CDATA[
		 Update data_engine_column set RuleforValue = 'if((STATUS == ''F'')){Result = ''Y'';  return;} else if((STATUS == ''E'')) {Result = ''N'';  return;}' Where Name = 'STATUS' And  TableId = (Select Id from data_engine_table where configId = (Select Id from data_engine_config where Name = 'MANDATES_IMPORT'));
	     ]]>
		</sql>
	</changeSet>

	<changeSet id="410" author="narendra.m">
		<sql>
        <![CDATA[
	 update DATA_ENGINE_TABLE set Filter='JOB_ID = :JOB_ID',keyFields='JOB_ID' where id = (Select Id from data_engine_table where configId = (Select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
	     ]]>
		</sql>
	</changeSet>

	<changeSet id="411" author="narendra.m">
		<sql>
        <![CDATA[
	update data_engine_column set Name ='IFSC' Where Name = 'IFSC_CODE' And  TableId = (Select Id from data_engine_table where configId = (Select Id from data_engine_config where Name = 'PRESENTMENT_REQUEST'));
	    ]]>
		</sql>
	</changeSet>

	<changeSet id="412" author="narendra.m">
		<sql>
        <![CDATA[
	
				 DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='PRESENTMENT_RESPONSE';
								
				DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE'));
				DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE');
				DELETE FROM DATA_ENGINE_CONFIG where Name = 'PRESENTMENT_RESPONSE';
								
				INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG), 'PRESENTMENT_RESPONSE', 'Presentment Default Response file.', 12, 'Presentment', NULL, NULL, NULL , 0, 1, NULL, 'Corporate User No, Corporate Name, UMRN, Customer to be debited, Customer IFSC, Customer Debit AC, Transaction ID/REF, Amount (Rs), Date of Txn, File No, Status Description, Reason Description', '', 'C', '/opt/PFF/presentment/response', 'Presentment_', '.xlsx', 0, current_timestamp, NULL, NULL, 0, NULL, 1, 1); 
				INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE'), 'PRESENTMENT_FILEIMPORT',  0, 'BatchId', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
				
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'INSTALMENTNO', 1, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BATCHID', 0, 'N', NULL, NULL, NULL, NULL, 12, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AMOUNTCLEARED', 0, 'N', NULL, NULL, NULL, NULL, 7, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'CLEARINGDATE', 0, 'N', NULL, NULL, NULL, NULL, 8, NULL, NULL, NULL,'dd-MM-yyyy', 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BRANCHCODE', 1, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'BFLREFERENCENO', 1, 'N', NULL, NULL, NULL, NULL, 6, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'AGREEMENTNO', 1, 'N', NULL, NULL, NULL, NULL, 8, NULL, NULL, NULL, NULL, 'O');	
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'STATUS', 0, 'N', NULL, NULL, NULL, NULL, 10, NULL, NULL, NULL, NULL, 'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'REASONCODE', 0, 'N', NULL, NULL, NULL, NULL, 11, NULL, NULL, NULL, NULL, 'O');
						
				UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
				UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
				UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
				
				]]>
		</sql>
	</changeSet>


	<changeSet id="413" author="narendra.m">
		<sql>
        <![CDATA[
         update DATA_ENGINE_CONFIG set Name='DISB_EXPORT_HDFC' where Name='DISB_HDFC_EXPORT';
      	 update DATA_ENGINE_CONFIG set FieldNames = null where NAME = 'DISB_EXPORT_HDFC';
         update data_engine_column set Name ='PARTNERBANK_ACCOUNT' Where Name = 'PAYMENT_DETAIL3' And  TableId = (Select Id from data_engine_table where configId = (Select Id from data_engine_config where Name = 'DISB_EXPORT_HDFC'));
 		 update data_engine_column set Name ='PAYMENT_DETAIL4' Where Name = 'BENFICIARY_ADDRESS1' And  TableId = (Select Id from data_engine_table where configId = (Select Id from data_engine_config where Name = 'DISB_EXPORT_HDFC'));   
	    ]]>
		</sql>
	</changeSet>

	<changeSet id="414" author="narendra.m">
		<sql>
        <![CDATA[
         update data_engine_column set skip =0 Where Name = 'DISBURSEMENT_DATE' And  TableId = (Select Id from data_engine_table where configId = (Select Id from data_engine_config where Name = 'DISB_EXPORT_HDFC'));
         ]]>
		</sql>
	</changeSet>

	<changeSet id="415" author="narendra.m">
		<sql>
        <![CDATA[
        update SMTPARAMETERS set sysparmvalue='03' where sysparmcode='CUST_PRIMARY_ID_RETL_DOC_TYPE';
         ]]>
		</sql>
	</changeSet>

	<changeSet id="416" author="narendra.m">
		<sql>
        <![CDATA[
		update SMTPARAMETERS set sysparmvalue='Y' where sysparmcode='UDC_ALLOW_ZERO_AMT';       
		  ]]>
		</sql>
	</changeSet>

	<changeSet id="417" author="narendra.m">
		<sql>
        <![CDATA[
        update SMTPARAMETERS set sysparmvalue='03' where sysparmcode='CUST_PRIMARY_ID_CORP_DOC_TYPE';
         ]]>
		</sql>
	</changeSet>

	<changeSet id="469" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
			    SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,
				GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8,LINKEDTRANID
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
                CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
                T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T11.CUSTADDRPROVINCE ELSE T12.BranchProvince END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100 ELSE 0 END BaseAmount,			
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8,rpv.bankrefno stCode  from POSTINGS T1
                Left Join (select LINKEDTRANID,postAmount,sum(BaseAmount) BaseAmount from (
                select distinct P.LINKEDTRANID, postAmount, BaseAmount from postings p 
                Inner Join (select LINKEDTRANID, postAmount BaseAmount from postings 
                where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC')) PR on PR.LINKEDTRANID=P.LINKEDTRANID
                where AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and postAmount> 0 and BaseAmount>0
                union all     
                select distinct T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL from postings T1 
                Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT 
                where t1.POSTAMOUNT <> 0  and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST'))T
                group by LINKEDTRANID,postAmount)
                BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT
                LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
				LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
					]]>
		</createView>
	</changeSet>

	<changeSet id="470" author="saijyothi.k">
		<sql>
        <![CDATA[
         delete from DATA_ENGINE_COLUMN where name = 'TotalGSTAmt' AND tableid=(select id from DATA_ENGINE_TABLE where name='GLPOSTINGS_VIEW');
         delete from DATA_ENGINE_COLUMN where name = 'GSTShiptoStCode' AND tableid=(select id from DATA_ENGINE_TABLE where name='GLPOSTINGS_VIEW');
          ]]>
		</sql>
	</changeSet>

	<changeSet id="471" author="saijyothi.k">
		<sql>
        <![CDATA[
        update data_engine_config set header='ROW:{LineNo,PostingDate,DocumentType,ExternalDocNo,AccountType,AccountNo,Disc,LocCode,DebitAmt,CreditAmt,GSTGroupCode,GSTBaseAmt,GSTPER,GSTCustType,HSNSACCode,GSTBilltoBuyFrStCode,GSTRegistrationNumber,Branches,BusinessSegment,Department,ProductSegment,GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8}' where name='POSTINGS_DOWNLOAD';
         ]]>
		</sql>
	</changeSet>

	<changeSet id="474" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
		      SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,LINKEDTRANID,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,
				GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
                CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
                T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent = 'FEEPAY' THEN T12.BranchProvince ELSE T11.CUSTADDRPROVINCE END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100  ELSE 0 END BaseAmount,			
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8 ,rpv.bankrefno stCode from POSTINGS T1
               Left Join (
                select distinct LINKEDTRANID,postAmount,AccountType,sum(BaseAmount) BaseAmount  from 
                (select distinct P.LINKEDTRANID, P.postAmount, BA.BaseAmount ,P.AccountType from postings p 
                Inner Join (select distinct LINKEDTRANID, postAmount BaseAmount,AccountType from postings 
                where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC','BOUIN')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
                 where p.AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and p.postAmount> 0 and ba.BaseAmount>0
               union      
               select distinct T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL,T1.AccountType from postings T1 
               Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT 
               where t1.POSTAMOUNT <> 0  and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST') )group by(LINKEDTRANID,POSTAMOUNT,AccountType)
               )BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT AND BA.AccountType = T1.AccountType
               LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
			    LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent = 'FEEPAY' THEN T4.BranchProvince ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0 )
	  	      ]]>
		  </createView>
	</changeSet>

	<changeSet id="475" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
		    SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,LINKEDTRANID,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,
				GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
                CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
                T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
				(CASE WHEN T1.FInEvent in ('FEEPAY','DISBINS','INSTDATE','LATEPAY','AMZ','ADDDBSP','REPAY','EARLYPAY','EARLYSTL') THEN T11.CUSTADDRPROVINCE ELSE T12.BranchProvince END)  GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100  ELSE 0 END BaseAmount,			
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8 ,rpv.bankrefno stCode from POSTINGS T1
                Left Join (
                select distinct LINKEDTRANID,postAmount,AccountType,sum(BaseAmount) BaseAmount  from 
                (select distinct P.LINKEDTRANID, P.postAmount, BA.BaseAmount ,P.AccountType from postings p 
                Inner Join (select distinct LINKEDTRANID, postAmount BaseAmount,AccountType from postings 
                where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC','BOUIN')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
                 where p.AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and p.postAmount> 0 and ba.BaseAmount>0
              union      
               select distinct T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL,T1.AccountType from postings T1 
               Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT 
               where t1.POSTAMOUNT <> 0  and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST') )group by(LINKEDTRANID,POSTAMOUNT,AccountType)
               )
                BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT AND BA.AccountType = T1.AccountType
                LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
			    LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN T1.FInEvent in ('FEEPAY','DISBINS','INSTDATE','LATEPAY','AMZ','ADDDBSP','REPAY','EARLYPAY','EARLYSTL') THEN T11.CUSTADDRPROVINCE ELSE T4.BranchProvince END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0 )
				]]>
		  </createView>
	</changeSet>

	<changeSet id="476" author="saijyothi.k">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
			   SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,LINKEDTRANID,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,
				GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
                CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
                T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
			    (CASE WHEN t14.taxnumber is not null THEN T14.province ELSE T11.CUSTADDRPROVINCE  END) GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100  ELSE 0 END BaseAmount,			
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8 ,rpv.bankrefno stCode from POSTINGS T1
                Left Join (
                select distinct LINKEDTRANID,postAmount,AccountType,sum(BaseAmount) BaseAmount  from 
                (select distinct P.LINKEDTRANID, P.postAmount, BA.BaseAmount ,P.AccountType from postings p 
                Inner Join (select distinct LINKEDTRANID, postAmount BaseAmount,AccountType from postings 
                where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC','BOUIN')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
                 where p.AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and p.postAmount> 0 and ba.BaseAmount>0
              union      
               select distinct T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL,T1.AccountType from postings T1 
               Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT 
               where t1.POSTAMOUNT <> 0  and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST') )group by(LINKEDTRANID,POSTAMOUNT,AccountType)
               )
                BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT AND BA.AccountType = T1.AccountType
                LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
			    LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN t14.taxnumber is not null THEN T14.province ELSE T11.CUSTADDRPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0 )
             ]]>
		  </createView>
	</changeSet>

	<changeSet id="477" author="sampath.d">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="ToState" type="VARCHAR2(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="478" author="sampath.d">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="FromState" type="VARCHAR2(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="479" author="sampath.d">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="FinType" type="VARCHAR2(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="480" author="sampath.d">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="ToState" type="VARCHAR2(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="481" author="sampath.d">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="FromState" type="VARCHAR2(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="482" author="sampath.d">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="FinType" type="VARCHAR2(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="489" author="sampath.d">
		<sql>
        <![CDATA[
        update data_engine_config set header='ROW:{LineNo,PostingDate,DocumentType,ExternalDocNo,AccountType,AccountNo,Disc,LocCode,DebitAmt,CreditAmt,GSTGroupCode,GSTBaseAmt,GSTPER,TotalGSTAmt,GSTCustType,HSNSACCode,GSTBilltoBuyFrStCode,GSTShipToStCode,GSTRegistrationNumber,Branches,BusinessSegment,Department,ProductSegment,GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8}' where name='POSTINGS_DOWNLOAD';
         ]]>
		</sql>
	</changeSet>

	<changeSet id="490" author="sampath.d">
		<sql>
        <![CDATA[
        DELETE FROM DATA_ENGINE_COLUMN WHERE NAME = 'TOTALGSTAMT';
        DELETE FROM DATA_ENGINE_COLUMN WHERE NAME = 'GSTShipToStCode';
        INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'GLPOSTINGS_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'POSTINGS_DOWNLOAD')), 'TOTALGSTAMT', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');	
		INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'GLPOSTINGS_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'POSTINGS_DOWNLOAD')), 'GSTShipToStCode', 0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 'O');
          ]]>
		</sql>
	</changeSet>

	<changeSet id="491" author="sampath.d">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
			   SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,LINKEDTRANID,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,'' TOTALGSTAMT,
				GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,'' GSTShipToStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
                CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
                T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
			    (CASE WHEN t14.taxnumber is not null THEN T14.province WHEN T5.FINREFERENCE IS NOT NULL THEN T11.CUSTADDRPROVINCE WHEN T15.EXTREFERENCE IS NOT NULL THEN T15.TOSTATE ELSE T4.BRANCHPROVINCE  END) GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100  ELSE 0 END BaseAmount,			
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' TOTALGSTAMT,'' GSTShipToStCode,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8 ,rpv.bankrefno stCode from POSTINGS T1
                Left Join (
                select distinct LINKEDTRANID,postAmount,AccountType,sum(BaseAmount) BaseAmount  from 
                (select distinct P.LINKEDTRANID, P.postAmount, BA.BaseAmount ,P.AccountType from postings p 
                Inner Join (select distinct LINKEDTRANID, postAmount BaseAmount,AccountType from postings 
                where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC','BOUIN')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
                 where p.AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and p.postAmount> 0 and ba.BaseAmount>0
              union      
               select distinct T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL,T1.AccountType from postings T1 
               Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT 
               where t1.POSTAMOUNT <> 0  and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST') )group by(LINKEDTRANID,POSTAMOUNT,AccountType)
               )
                BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT AND BA.AccountType = T1.AccountType
                LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
       			LEFT JOIN FINRECEIPTHEADER T15 ON T15.EXTREFERENCE = T1.FINREFERENCE
			    LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN t14.taxnumber is not null THEN T14.province  WHEN T5.FINREFERENCE IS NOT NULL THEN T11.CUSTADDRPROVINCE WHEN T15.EXTREFERENCE IS NOT NULL THEN T15.TOSTATE ELSE T4.BRANCHPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
             ]]>
		  </createView>
	</changeSet>

	<changeSet id="492" author="sampath.d">
		<sql>
        <![CDATA[
        		DELETE FROM DATA_ENGINE_COLUMN WHERE NAME = 'TOTALGSTAMT';
        		DELETE FROM DATA_ENGINE_COLUMN WHERE NAME = 'GSTShipToStCode';
        		INSERT INTO DATA_ENGINE_COLUMN VALUES (201,245,'TOTALGSTAMT',0,'N',NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,'O');
				INSERT INTO DATA_ENGINE_COLUMN VALUES (205,245,'GSTSHIPTOSTCODE',0,'N',NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,'O');	
          ]]>
		</sql>
	</changeSet>
	
		<changeSet id="493" author="sampath.d">
		<sql>
        <![CDATA[
        		UPDATE DATA_ENGINE_CONFIG SET FIELDNAMES = NULL WHERE NAME = 'POSTINGS_DOWNLOAD';
          ]]>
		</sql>
	</changeSet>
	<changeSet id="DE#90.1" author="gopalaswamy.m">
		<createView viewName=" CIBIL_CUSTOMER_LOANS_VIEW" replaceIfExists="true">
			<![CDATA[
      	  			SELECT
					AT.SEGMENT_TYPE,  
					CU.CUSTID,
					AT.CODE FINTYPE,
					FM.FINREFERENCE, 
					FM.FINSTARTDATE,
					FM.FINAPPROVEDDATE,
					PD.LATESTRPYDATE,
					FM.REPAYFRQ,
					UDF_CONVERTCURRENCY(FINASSETVALUE, FM.FINCCY, 'INR') FINASSETVALUE,
					UDF_CONVERTCURRENCY(PD.TOTALPRIBAL, FM.FINCCY, 'INR') FUTURE_SCHEDULE_PRIN,
					UDF_CONVERTCURRENCY((PD.ODPRINCIPAL + PD.ODPROFIT), FM.FINCCY, 'INR') INSTALMENT_DUE,
					UDF_CONVERTCURRENCY((PD.TOTALPFTPAID + PD.TOTALPRIPAID), FM.FINCCY, 'INR') INSTALMENT_PAID,
					UDF_CONVERTCURRENCY(BOUNCE_DUE, FM.FINCCY, 'INR') BOUNCE_DUE,
					UDF_CONVERTCURRENCY(BOUNCE_PAID, FM.FINCCY, 'INR') BOUNCE_PAID,
					UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_DUE, FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_DUE,
					UDF_CONVERTCURRENCY(LATE_PAYMENT_PENALTY_PAID,FM.FINCCY, 'INR') LATE_PAYMENT_PENALTY_PAID,
					UDF_CONVERTCURRENCY(TOTALPRISCHD, FM.FINCCY, 'INR') TOTAL_PRI_SCHD,
					UDF_CONVERTCURRENCY(TOTALPRIPAID, FM.FINCCY, 'INR') TOTAL_PRI_PAID,
					UDF_CONVERTCURRENCY(TOTALPFTSCHD, FM.FINCCY, 'INR') TOTAL_PFT_SCHD,
					UDF_CONVERTCURRENCY(TOTALPFTPAID, FM.FINCCY, 'INR') TOTAL_PFT_PAID,
					UDF_CONVERTCURRENCY(EXCESS_AMOUNT, FM.FINCCY, 'INR') EXCESS_AMOUNT,
					UDF_CONVERTCURRENCY(EXCESS_AMT_PAID, FM.FINCCY, 'INR') EXCESS_AMT_PAID,
					PD.CURODDAYS,
					PD.MATURITYDATE,
					PD.CURREDUCINGRATE,
					FM.CLOSINGSTATUS,
					CU.OWNERSHIP,
					FM.CALTERMS AS NUMBEROFTERMS,
					UDF_CONVERTCURRENCY(CUSTINCOME, FM.FINCCY, 'INR') CUSTINCOME,
					UDF_CONVERTCURRENCY(ODPROFIT, FM.FINCCY, 'INR') ODPROFIT,
					FM.FINISACTIVE
					FROM  FINANCEMAIN FM 
					INNER JOIN CIBIL_CUSTOMER_EXTRACT CU ON  CU.FINREFERENCE = FM.FINREFERENCE 
					INNER JOIN FINPFTDETAILS PD ON PD.FINREFERENCE = FM.FINREFERENCE
					INNER JOIN CIBIL_ACCOUNT_TYPES_MAPPING ATM ON ATM.FIN_TYPE = FM.FINTYPE
					INNER JOIN CIBIL_ACCOUNT_TYPES AT ON AT.CODE = ATM.CODE AND AT.SEGMENT_TYPE = ATM.SEGMENT_TYPE
					LEFT JOIN (SELECT MA.FINREFERENCE, SUM(COALESCE(MA.ADVISEAMOUNT,0)- COALESCE(MA.PAIDAMOUNT,0)- COALESCE(MA.WAIVEDAMOUNT,0)) BOUNCE_DUE, SUM(MA.PAIDAMOUNT) BOUNCE_PAID FROM MANUALADVISE  MA  WHERE BOUNCEID > 0 GROUP BY MA.FINREFERENCE) MA ON MA.FINREFERENCE = FM.FINREFERENCE
					LEFT JOIN (SELECT FINREFERENCE, SUM(TOTPENALTYBAL) LATE_PAYMENT_PENALTY_DUE, SUM(TOTPENALTYPAID) LATE_PAYMENT_PENALTY_PAID FROM FINODDETAILS GROUP BY FINREFERENCE) FO ON FO.FINREFERENCE = FM.FINREFERENCE
					LEFT JOIN (SELECT FINREFERENCE, SUM(AMOUNT) EXCESS_AMOUNT, SUM (COALESCE(UTILISEDAMT,0)+ COALESCE(RESERVEDAMT,0)) EXCESS_AMT_PAID FROM FINEXCESSAMOUNT  GROUP BY FINREFERENCE) FE ON FE.FINREFERENCE = FM.FINREFERENCE
					LEFT JOIN  (SELECT CUSTID, COALESCE(SUM(CUSTINCOME), 0) CUSTINCOME FROM CUSTOMERINCOMES GROUP BY CUSTID) CI ON CI.CUSTID = CU.CUSTID
			]]>
		</createView>
	</changeSet>

	<changeSet id="DE#106.1" author="gopalaswamy.m">
	<createView viewName="RECEIPTDETAILS_TVIEW" replaceIfExists="true">
			<![CDATA[
      	  		SELECT T4.CUSTCIF,
				    T1.REFERENCE,
				    T3.FINTYPE,
				    T1.RECEIPTID,
				    T1.RECEIPTDATE,
				    T1.RECEIPTAMOUNT,
				    T2.DEPOSITDATE,
				    T2.BANKCODE AS DEPOSITBANK,
	          		T1.RECEIPTPURPOSE,
				    T1.RECEIPTMODE,
				    T1.BOUNCEDATE AS CANCELDATE,
				    T2.VALUEDATE,
				    T2.PAYAGAINSTID,
				    T1.BOUNCEDATE,
				    T1.REALIZATIONDATE,
				    T1.CANCELREASON,
				    T3.CLOSINGSTATUS,
				    T3.FINBRANCH,
				    T3.FINCURRASSETVALUE,
				    T3.PRODUCTCATEGORY,
				    T6.PARTNERBANKCODE,
				    T2.TRANSACTIONREF,
				    T2.FUNDINGAC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T5.ROLEDESC AS LOVDESCREQUESTSTAGE,
				    T2.PAYMENTTYPE,
				    T1.RECEIPTMODESTATUS,
				    T1.ACTFINRECEIPT,
				    T2.FAVOURNUMBER
				   FROM FINRECEIPTHEADER_TEMP T1
				     LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
				     LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				     LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
				     JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
				     LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
		]]>
	</createView>
</changeSet>

	<changeSet id="DE#106.2" author="gopalaswamy.m">
		<createView viewName="RECEIPTDETAILS_VIEW" replaceIfExists="true">
			<![CDATA[
      	  		SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T2.AMOUNT AS RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					T1.RECEIPTPURPOSE ,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					INNER JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					UNION ALL
					SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T2.AMOUNT AS RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					T1.RECEIPTPURPOSE,
					T2.PAYMENTTYPE AS RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER,
					T1.DEPOSITPROCESS,
					T2.STATUS
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					WHERE NOT EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
		]]>
		</createView>
	</changeSet>

	<changeSet id="DE#106.3" author="gopalaswamy.m">
		<createView viewName="FINRECEIPTDETAIL_VIEW" replaceIfExists="true">
			<![CDATA[
      	  			SELECT 
      	  			  T4.CUSTCIF,
					  T1.REFERENCE,
					  T3.FINTYPE,
					  T1.RECEIPTID,
					  T1.RECEIPTDATE,
					  T1.RECEIPTAMOUNT,
					  T2.DEPOSITDATE,
					  T2.BANKCODE ,
					  T1.RECEIPTPURPOSE,
					  T1.RECEIPTMODE,
					  T1.BOUNCEDATE CANCELDATE,
					  T2.VALUEDATE,
					  T2.PAYAGAINSTID,
					  T1.BOUNCEDATE,
					  T1.REALIZATIONDATE,
					  T1.CANCELREASON,
					  T3.CLOSINGSTATUS,
					  T3.FINBRANCH,
					  T3.FINCURRASSETVALUE,
					  T3.PRODUCTCATEGORY,
					  T6.PARTNERBANKCODE,
					  T2.TRANSACTIONREF,
					  T2.FUNDINGAC,
					  T1.VERSION ,
					  T1.LASTMNTBY,
					  T1.LASTMNTON,
					  T1.RECORDSTATUS,
					  T1.ROLECODE,
					  T1.NEXTROLECODE,
					  T1.TASKID,
					  T1.NEXTTASKID,
					  T1.RECORDTYPE,
					  T1.WORKFLOWID,
					  T5.ROLEDESC LOVDESCREQUESTSTAGE,
					  T2.PAYMENTTYPE,
					  T6.ACTYPE PARTNERBANKACTYPE,
					  T6.ACCOUNTNO PARTNERBANKAC,
					  T7.BANKNAME BANKCODEDESC,
					  T6.PARTNERBANKNAME FUNDINGACDESC,
					  T6.PARTNERBANKCODE FUNDINGACCODE,
					  T2.LOGKEY,
					  T2.PAYORDER,
					  T2.STATUS,
					  T2.RECEIVEDDATE,
					  T2.CHEQUEACNO,
					  T2.PAYMENTREF,
					  T2.DEPOSITNO,
					  T2.FAVOURNAME,
					  T2.FAVOURNUMBER,
					  T2.AMOUNT,
					  T2.PAYMENTTO,
					  T2.RECEIPTTYPE,
					  T2.RECEIPTSEQID
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					LEFT JOIN BMTBANKDETAIL T7 ON T2.BANKCODE = T7.BANKCODE
					UNION ALL
					SELECT T4.CUSTCIF,
					  T1.REFERENCE,
					  T3.FINTYPE,
					  T1.RECEIPTID,
					  T1.RECEIPTDATE,
					  T1.RECEIPTAMOUNT,
					  T2.DEPOSITDATE,
					  T2.BANKCODE ,
					  T1.RECEIPTPURPOSE,
					  T1.RECEIPTMODE,
					  T1.BOUNCEDATE CANCELDATE,
					  T2.VALUEDATE,
					  T2.PAYAGAINSTID,
					  T1.BOUNCEDATE,
					  T1.REALIZATIONDATE,
					  T1.CANCELREASON,
					  T3.CLOSINGSTATUS,
					  T3.FINBRANCH,
					  T3.FINCURRASSETVALUE,
					  T3.PRODUCTCATEGORY,
					  T6.PARTNERBANKCODE,
					  T2.TRANSACTIONREF,
					  T2.FUNDINGAC,
					  T1.VERSION ,
					  T1.LASTMNTBY,
					  T1.LASTMNTON,
					  T1.RECORDSTATUS,
					  T1.ROLECODE,
					  T1.NEXTROLECODE,
					  T1.TASKID,
					  T1.NEXTTASKID,
					  T1.RECORDTYPE,
					  T1.WORKFLOWID,
					  T5.ROLEDESC LOVDESCREQUESTSTAGE,
					  T2.PAYMENTTYPE,
					  T6.ACTYPE PARTNERBANKACTYPE,
					  T6.ACCOUNTNO PARTNERBANKAC,
					  T7.BANKNAME BANKCODEDESC,
					  T6.PARTNERBANKNAME FUNDINGACDESC,
					  T6.PARTNERBANKCODE FUNDINGACCODE,
					  T2.LOGKEY,
					  T2.PAYORDER,
					  T2.STATUS,
					  T2.RECEIVEDDATE,
					  T2.CHEQUEACNO,
					  T2.PAYMENTREF,
					  T2.DEPOSITNO,
					  T2.FAVOURNAME,
					  T2.FAVOURNUMBER,
					  T2.AMOUNT,
					  T2.PAYMENTTO,
					  T2.RECEIPTTYPE,
					  T2.RECEIPTSEQID
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					LEFT JOIN BMTBANKDETAIL T7 ON T2.BANKCODE = T7.BANKCODE
					WHERE NOT EXISTS
					  (SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					  )
		]]>
		</createView>
	</changeSet>

	<changeSet id="DE#106.4" author="gopalaswamy.m">
		<createView viewName="RECEIPT_REALIZATION_VIEW" replaceIfExists="true">
			<![CDATA[
      	  		SELECT
	      	  	 	T4.CUSTCIF,
				    T1.REFERENCE,
				    T3.FINTYPE,
				    T1.RECEIPTID,
				    T1.RECEIPTDATE,
				    T1.RECEIPTAMOUNT,
				    T2.DEPOSITDATE,
				    T2.BANKCODE AS DEPOSITBANK,
				    T1.RECEIPTPURPOSE,
				    T1.RECEIPTMODE,
				    T1.BOUNCEDATE AS CANCELDATE,
				    T2.VALUEDATE,
				    T2.PAYAGAINSTID,
				    T1.BOUNCEDATE,
				    T1.REALIZATIONDATE,
				    T1.CANCELREASON,
				    T3.CLOSINGSTATUS,
				    T3.FINBRANCH,
				    T3.FINCURRASSETVALUE,
				    T3.PRODUCTCATEGORY,
				    T6.PARTNERBANKCODE,
				    T2.TRANSACTIONREF,
				    T2.FUNDINGAC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T5.ROLEDESC AS LOVDESCREQUESTSTAGE,
				    T2.PAYMENTTYPE,
				    T1.RECEIPTMODESTATUS,
				    T1.ACTFINRECEIPT,
				    T2.FAVOURNUMBER
				   FROM FINRECEIPTHEADER_TEMP T1
				     LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
				     LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				     LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
				     LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
				     LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
				UNION ALL
				 SELECT T4.CUSTCIF,
				    T1.REFERENCE,
				    T3.FINTYPE,
				    T1.RECEIPTID,
				    T1.RECEIPTDATE,
				    T1.RECEIPTAMOUNT,
				    T2.DEPOSITDATE,
				    T2.BANKCODE AS DEPOSITBANK,
				    T1.RECEIPTPURPOSE,
				    T1.RECEIPTMODE,
				    T1.BOUNCEDATE AS CANCELDATE,
				    T2.VALUEDATE,
				    T2.PAYAGAINSTID,
				    T1.BOUNCEDATE,
				    T1.REALIZATIONDATE,
				    T1.CANCELREASON,
				    T3.CLOSINGSTATUS,
				    T3.FINBRANCH,
				    T3.FINCURRASSETVALUE,
				    T3.PRODUCTCATEGORY,
				    T6.PARTNERBANKCODE,
				    T2.TRANSACTIONREF,
				    T2.FUNDINGAC,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T5.ROLEDESC AS LOVDESCREQUESTSTAGE,
				    T2.PAYMENTTYPE,
				    T1.RECEIPTMODESTATUS,
				    T1.ACTFINRECEIPT,
				    T2.FAVOURNUMBER
				   FROM FINRECEIPTHEADER T1
				     LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
				     LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				     LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
				     LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
				     LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
				  WHERE NOT (EXISTS ( SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE FINRECEIPTHEADER_TEMP.RECEIPTID = T1.RECEIPTID))
		]]>
		</createView>
	</changeSet>
	
	<changeSet id="DE#107" author="gopalaswamy.m">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
			   SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,LINKEDTRANID,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,'' TOTALGSTAMT,
				GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,'' GSTShipToStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
                CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
                T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
			    (CASE WHEN t14.taxnumber is not null THEN T14.province WHEN T5.FINREFERENCE IS NOT NULL THEN T11.CUSTADDRPROVINCE WHEN T15.EXTREFERENCE IS NOT NULL THEN T15.TOSTATE ELSE T4.BRANCHPROVINCE  END) GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100  ELSE 0 END BaseAmount,			
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' TOTALGSTAMT,'' GSTShipToStCode,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8 ,rpv.bankrefno stCode from POSTINGS T1
                Left Join (
                select distinct LINKEDTRANID,postAmount,AccountType,sum(BaseAmount) BaseAmount  from 
                (select distinct P.LINKEDTRANID, P.postAmount, BA.BaseAmount ,P.AccountType from postings p 
                Inner Join (select distinct LINKEDTRANID, postAmount BaseAmount,AccountType from postings 
                where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC','BOUIN')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
                 where p.AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and p.postAmount> 0 and ba.BaseAmount>0
              union      
               select distinct T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL,T1.AccountType from postings T1 
               Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT 
               where t1.POSTAMOUNT <> 0  and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST') )group by(LINKEDTRANID,POSTAMOUNT,AccountType)
               )
                BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT AND BA.AccountType = T1.AccountType
                LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
       			LEFT JOIN FINRECEIPTHEADER T15 ON T15.EXTREFERENCE = T1.FINREFERENCE and TO_CHAR(T15.receiptid) = T1.postref
			    LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN t14.taxnumber is not null THEN T14.province  WHEN T5.FINREFERENCE IS NOT NULL THEN T11.CUSTADDRPROVINCE WHEN T15.EXTREFERENCE IS NOT NULL THEN T15.TOSTATE ELSE T4.BRANCHPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
             ]]>
		  </createView>
	</changeSet>

	<changeSet id="DE#108.1" author="gopal.m">
		<addColumn tableName="FINANCEMAIN">
			<column name="MIGRDATE" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="DE#108.2" author="gopal.m">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="MIGRDATE" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="DE#108.3" author="gopal.m">
		<addColumn tableName="REJECTFINANCEMAIN">
			<column name="MIGRDATE" type="datetime" />
		</addColumn>
	</changeSet>
	<!-- Duplicate Indexes drop -->	
	<changeSet id="DE#115.1" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index ACCOUNTSBYREFERENCE_NLS_IDX;
				]]>
			</sql>	
	</changeSet> 		
				
	<changeSet id="DE#115.2" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_ACT_CD_ST;
				]]>
			</sql>	
	</changeSet>	
				
	<changeSet id="DE#115.3" author="Srikanth.M">
			<sql>
				<![CDATA[			
					drop index IX_CDTYM_CD_ST;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.4" author="Srikanth.M">
			<sql>
				<![CDATA[			
					drop index IX_CCTM_CD_ST;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.5" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_DE_EP_CID;
				]]>
			</sql>	
	</changeSet>	
				
	<changeSet id="DE#115.6" author="Srikanth.M">
			<sql>
				<![CDATA[			
					drop index IX_DEDPARM_T1_QRYCD;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.7" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_FIN_CID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.8" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index INDEX_FINREFERENCE;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.9" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index INCOMEAMORTIZATION_NLS_IDX;
				]]>
			</sql>	
	</changeSet>
				
	<changeSet id="DE#115.10" author="Srikanth.M">
			<sql>
				<![CDATA[			
					drop index IX_INCOME_DETAILS_T_LINKID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.11" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_CUST_EXT_LIABILIT_CUSTID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.12" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IDX_POSTINGS_LINKEDTRANID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.13" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index PROJECTEDACCRUALS_NLS_IDX;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.14" author="Srikanth.M">
			<sql>
				<![CDATA[	
					drop index IX_RPRTSRCHTMPLT_RPRTID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.15" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_SGR_GID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.16" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_OPER_ROLE_OPER_ID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.17" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_ROLE_GROUP_GROUP_ID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#115.18" author="Srikanth.M">
			<sql>
				<![CDATA[
					drop index IX_USER_OPER_USER_ID;
				]]>
			</sql>	
	</changeSet>
	
	<changeSet id="DE#116" author="gopalaswamy.m">
		<createView viewName="GLPOSTINGS_VIEW" replaceIfExists="true">
			<![CDATA[
			   SELECT row_number() over(partition by LINKEDTRANID order by LINKEDTRANID)*10000 LINENO,PostDate,'' DOCUMENTTYPE, 
				ExternalDocNo,AccountType,AccountNo,Disc,LOC,DebitAmt,CreditAmt ,GSTGroupCode,BaseAmount GSTBASEAMOUNT,GSTPER,'' TOTALGSTAMT,
				GSTCustType,HSNSACCode,stCode GSTBilltoBuyFrStCode,'' GSTShipToStCode,GSTRegistrationNumber,
				Branches,BusinessSegment,Department,ProductSegment,				
				GlobalDim5,GlobalDim6,GlobalDim7,GlobalDim8
				from(SELECT  T1.DRORCR, T1.LINKEDTRANID,T1.PostDate,'LMS' || T1.LINKEDTRANID || '/' || t1.finevent ExternalDocNo,T12.HOSTACCOUNT AccountNo, 
                CASE WHEN T2.ACTYPE = T1.ACCOUNTTYPE THEN 'Bank Account' ELSE 'G/L Account' END AccountType,
                T3.ACTYPEDESC Disc,'HO' LOC,
				CASE WHEN T1.DRORCR='D' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END DebitAmt,
				CASE WHEN T1.DRORCR='C' AND T1.POSTAMOUNT>0 THEN T1.POSTAMOUNT/100  END CreditAmt,
				T4.BranchDesc Branches,
				T7.ProductDesc BusinessSegment,T6.FINTYPEDESC ProductSegment,
				(CASE WHEN t14.taxnumber is null  THEN 'UnRegistered' ELSE 'Registered' END)GSTCustType, 
			    (CASE WHEN t14.taxnumber is not null THEN T14.province WHEN T5.FINREFERENCE IS NOT NULL THEN T11.CUSTADDRPROVINCE WHEN T15.EXTREFERENCE IS NOT NULL THEN T15.TOSTATE ELSE T4.BRANCHPROVINCE  END) GSTBilltoBuyFrStCode,   
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '0006' ELSE ' ' END GSTGroupCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN '9997' ELSE ' ' END HSNSACCode,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN BA.BaseAmount/100  ELSE 0 END BaseAmount,			
				CASE WHEN T1.ACCOUNTTYPE='IGST' THEN '18' WHEN T1.ACCOUNTTYPE in ('SGST','CGST','UGST') THEN  '9' ELSE ' ' END GSTPER,
				CASE WHEN T1.ACCOUNTTYPE in ('SGST','CGST','IGST','UGST') THEN t14.taxnumber  ELSE ' ' END GSTRegistrationNumber, '' DocumentType,				
				'' Department,'' TOTALGSTAMT,'' GSTShipToStCode,'' GlobalDim5,'' GlobalDim6,'' GlobalDim7,T1.FINREFERENCE GlobalDim8 ,rpv.bankrefno stCode from POSTINGS T1
                Left Join (
                select distinct LINKEDTRANID,postAmount,AccountType,sum(BaseAmount) BaseAmount  from 
                (select distinct P.LINKEDTRANID, P.postAmount, BA.BaseAmount ,P.AccountType from postings p 
                Inner Join (select distinct LINKEDTRANID, postAmount BaseAmount,AccountType from postings 
                where AccountType in( 'PROIN','FCCHGS','PPCHGS','CHGSINC','BOUIN')) BA on BA.LINKEDTRANID=P.LINKEDTRANID
                 where p.AccountType in ('CGST', 'SGST', 'IGST', 'UGST') and p.postAmount> 0 and ba.BaseAmount>0
              union      
               select distinct T1.LINKEDTRANID,T1.POSTAMOUNT,FD.REMAININGFEEORIGINAL,T1.AccountType from postings T1 
               Inner JOIN FINFEEDETAIL FD ON FD.FINREFERENCE= T1.FINREFERENCE AND FD.REMAININGFEEGST=T1.POSTAMOUNT 
               where t1.POSTAMOUNT <> 0  and  T1.POSTAMOUNTLCCCY >0 and ACCOUNTTYPE in('SGST','IGST','UGST','CGST') )group by(LINKEDTRANID,POSTAMOUNT,AccountType)
               )
                BA ON BA.LINKEDTRANID=T1.LINKEDTRANID AND BA.POSTAMOUNT=T1.POSTAMOUNT AND BA.AccountType = T1.AccountType
                LEFT JOIN (Select distinct ACTYPE from PARTNERBANKS) T2 ON T2.ACTYPE= T1.ACCOUNTTYPE 
				INNER JOIN RMTACCOUNTTYPES T3 ON T3.ACTYPE = T1.ACCOUNTTYPE 
				INNER JOIN RMTBRANCHES T4 ON T4.BRANCHCODE = T1.POSTBRANCH 
				LEFT JOIN FINANCEMAIN T5 ON T5.FINREFERENCE = T1.FINREFERENCE 
				LEFT JOIN RMTFINANCETYPES T6 ON T6.FINTYPE = T5.FINTYPE 
				LEFT JOIN BMTPRODUCT T7 on T7.PRODUCTCODE = T6.FINCATEGORY 
				Left JOIN (select distinct LOANACCOUNTNO from GST_INVOICE_TXN where COMPANY_GSTIN is not null) T9 ON T1.FINREFERENCE = T9.LOANACCOUNTNO
				LEFT JOIN Accountmapping t12 on T1.ACCOUNT = t12.ACCOUNT
				LEFT JOIN CUSTOMERS T8 on T8.CUSTID = T5.CUSTID
				LEFT JOIN CUSTOMERADDRESSES T11 on T11.CUSTID = T8.CUSTID And CustAddrPriority = 5
				LEFT Join FINTAXDETAIL T14 on T14.FINREFERENCE = T1.FINREFERENCE
				LEFT JOIN RMTBRANCHES T12 ON T12.BRANCHCODE = T1.UserBRANCH
       			LEFT JOIN FINRECEIPTHEADER T15 ON T15.EXTREFERENCE = T1.FINREFERENCE and TO_CHAR(T15.receiptid) = T1.postref
			    LEFT JOIN rmtcountryvsprovince rpv on rpv.cpprovince =  (CASE WHEN t14.taxnumber is not null THEN T14.province  WHEN T5.FINREFERENCE IS NOT NULL THEN T11.CUSTADDRPROVINCE WHEN T15.EXTREFERENCE IS NOT NULL THEN T15.TOSTATE ELSE T4.BRANCHPROVINCE END)				
				where T1.POSTAMOUNT <> 0 and T1.POSTAMOUNTLCCCY > 0)
             ]]>
		  </createView>
	</changeSet>
	
	<changeSet id="ST#129.1" author="kavya.n">
		<sql>
			<![CDATA[
				INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN), (Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'PRESENTMENT_FILEIMPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'PRESENTMENT_RESPONSE')), 'HEADER_ID', 0, 'N', NULL, NULL, '${HEADER_ID}', NULL, 0, NULL, NULL, NULL, NULL, 'O');
			]]>
		</sql>
	</changeSet>

</databaseChangeLog>