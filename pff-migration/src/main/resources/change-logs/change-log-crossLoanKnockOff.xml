<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	
	<changeSet id="01_pre" author="Rahul">
		<createSequence sequenceName="SeqCross_Loan_Transfer" incrementBy="1" startValue="1" maxValue="999999999999999"/>
	</changeSet>

	<changeSet id="01" author="Rahul">
		<createTable tableName="Cross_Loan_Transfer">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="CustId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="ReceiptId" type="bigint" />
			<column name="FromFinID" type="bigint" />
			<column name="ToFinID" type="bigint" />
			<column name="FromFinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ToFinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ExcessAmount" type="decimal(18,0)" />
			<column name="UtiliseAmount" type="decimal(18,0)" />
			<column name="ReserveAmount" type="decimal(18,0)" />
			<column name="AvailableAmount" type="decimal(18,0)" />
			<column name="TransferAmount" type="decimal(18,0)" />
			<column name="ExcessId" type="bigint" />
			<column name="ToLinkedTranId" type="bigint" />
			<column name="FromLinkedTranId" type="bigint" />
			<column name="ToExcessId" type="bigint" />
			<column name="Source" type="Varchar(20)" />
			<column name="ExcessType" type="Varchar(10)" />
			<column name="Version" type="int" />
			<column name="CreatedBy" type="bigint" />
			<column name="CreatedOn" type="datetime" />
			<column name="ApprovedBy" type="bigint" />
			<column name="ApprovedOn" type="datetime" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="01_post" author="Rahul">
		<addPrimaryKey tableName="Cross_Loan_Transfer" columnNames="ID"
			constraintName="PK_CrossLoanKnockOff_Id" />
	</changeSet>

	<changeSet id="01.1" author="Rahul" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE CROSS_LOAN_TRANSFER ADD CONSTRAINT DF_CLT_TOEXCESSID DEFAULT 0 FOR TOEXCESSID;
				ALTER TABLE CROSS_LOAN_TRANSFER ADD CONSTRAINT DF_CLT_WORKFLOWID DEFAULT 0 FOR WORKFLOWID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="01.1" author="Rahul" dbms="postgresql, oracle">
		<addDefaultValue columnName="ToExcessId" tableName="Cross_Loan_Transfer" defaultValue="0" />
		<addDefaultValue columnName="WorkFlowId" tableName="Cross_Loan_Transfer" defaultValue="0" />
	</changeSet>

	<changeSet id="02" author="Rahul">
		<createTable tableName="Cross_Loan_Transfer_Temp">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="CustId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="ReceiptId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FromFinID" type="bigint" />
			<column name="ToFinID" type="bigint" />
			<column name="FromFinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ToFinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ExcessAmount" type="decimal(18,0)" />
			<column name="UtiliseAmount" type="decimal(18,0)" />
			<column name="ReserveAmount" type="decimal(18,0)" />
			<column name="AvailableAmount" type="decimal(18,0)" />
			<column name="TransferAmount" type="decimal(18,0)" />
			<column name="ExcessId" type="bigint" />
			<column name="ToLinkedTranId" type="bigint" />
			<column name="FromLinkedTranId" type="bigint" />
			<column name="ToExcessId" type="bigint" />
			<column name="Source" type="Varchar(20)" />
			<column name="ExcessType" type="Varchar(10)" />
			<column name="Version" type="int" />
			<column name="CreatedBy" type="bigint" />
			<column name="CreatedOn" type="datetime" />
			<column name="ApprovedBy" type="bigint" />
			<column name="ApprovedOn" type="datetime" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="02_post" author="Rahul">
		<addPrimaryKey tableName="Cross_Loan_Transfer_Temp" columnNames="ID"
			constraintName="PK_CrossLoanKnockOff_Temp_Id" />
	</changeSet>

	<changeSet id="02.1" author="Rahul" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE CROSS_LOAN_TRANSFER_TEMP ADD CONSTRAINT DF_CLT_TOEXCESSID DEFAULT 0 FOR TOEXCESSID;
				ALTER TABLE CROSS_LOAN_TRANSFER_TEMP ADD CONSTRAINT DF_CLT_WORKFLOWID DEFAULT 0 FOR WORKFLOWID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="02.1" author="Rahul" dbms="postgresql, oracle">
		<addDefaultValue columnName="ToExcessId" tableName="Cross_Loan_Transfer_Temp" defaultValue="0" />
		<addDefaultValue columnName="WorkFlowId" tableName="Cross_Loan_Transfer_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="14" author="Somasekhar">
		<createSequence sequenceName="SeqCROSS_LOAN_KNOCKOFF" minValue="1" startValue="1"
			maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="06" author="Somasekhar.P">
		<createTable tableName="CROSS_LOAN_KNOCKOFF">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="TransferId" type="bigint" />
			<column name="knockOffId" type="bigint" />
			<column name="ValueDate" type="datetime" />
			<column name="PostDate" type="datetime" />
			<column name="Version" type="int" />
			<column name="CreatedBy" type="bigint" />
			<column name="CreatedOn" type="datetime" />
			<column name="ApprovedBy" type="bigint" />
			<column name="ApprovedOn" type="datetime" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="06_post" author="Rahul">
		<addPrimaryKey tableName="CROSS_LOAN_KNOCKOFF" columnNames="ID"
			constraintName="pk_cross_loan_knockoff_id" />
	</changeSet>
	
	<changeSet id="06.1" author="Rahul" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE CROSS_LOAN_KNOCKOFF ADD CONSTRAINT DF_CLK_WORKFLOWID DEFAULT 0 FOR WORKFLOWID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="06.1" author="Rahul" dbms="postgresql, oracle">
		<addDefaultValue columnName="WorkFlowId" tableName="CROSS_LOAN_KNOCKOFF" defaultValue="0" />
	</changeSet>

	<changeSet id="07" author="Somasekhar.P">
		<createTable tableName="CROSS_LOAN_KNOCKOFF_TEMP">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="TransferId" type="bigint" />
			<column name="knockOffId" type="bigint" />
			<column name="ValueDate" type="datetime" />
			<column name="PostDate" type="datetime" />
			<column name="Version" type="int" />
			<column name="CreatedBy" type="bigint" />
			<column name="CreatedOn" type="datetime" />
			<column name="ApprovedBy" type="bigint" />
			<column name="ApprovedOn" type="datetime" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="07_post" author="Rahul">
		<addPrimaryKey tableName="CROSS_LOAN_KNOCKOFF_TEMP" columnNames="ID"
			constraintName="pk_cross_loan_knockoff_t_id" />
	</changeSet>
	
	<changeSet id="07.1" author="Rahul" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE CROSS_LOAN_KNOCKOFF_TEMP ADD CONSTRAINT DF_CLK_T_WORKFLOWID DEFAULT 0 FOR WORKFLOWID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="07.1" author="Rahul" dbms="postgresql, oracle">
		<addDefaultValue columnName="WorkFlowId" tableName="CROSS_LOAN_KNOCKOFF_TEMP" defaultValue="0" />
	</changeSet>
	
	<changeSet id="18" author="Rahul">
		<sql>
			<![CDATA[
				INSERT INTO BMTAEEVENTS (AEEVENTCODE, AEEVENTCODEDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, ACTIVE) VALUES ('CRSLANFR', 'Cross Loan Excess Amount Transfer From', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0, 1);
				INSERT INTO BMTAEEVENTS (AEEVENTCODE, AEEVENTCODEDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, ACTIVE) VALUES ('CRSLANTO', 'Cross Loan Excess Amount Transfer To',   1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0, 1);
				
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('CRSLANFR', 0, 'rd_amount', 'Cross Loan Transfer Amount', 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0); 
				INSERT INTO BMTAMOUNTCODES (ALLOWEDEVENT, ALLOWEDRIA, AMOUNTCODE, AMOUNTCODEDESC, AMOUNTCODEISACTIVE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ('CRSLANTO', 0, 'rd_amount', 'Cross Loan Transfer Amount', 1, 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0); 
			]]>
		</sql>
	</changeSet>

	<changeSet id="19" author="Sateesh">
		<sql>
			<![CDATA[
				DELETE FROM REPORTLIST WHERE CODE = 'CrossLoanKnockOffEnquiry';
				INSERT INTO REPORTLIST (CODE, MODULE, FIELDLABELS, FIELDVALUES, FIELDTYPE, ADDFIELDS, REPORTFILENAME, REPORTHEADING, MODULETYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID, FORMATREQ) VALUES ('CrossLoanKnockOffEnquiry', 'CrossLoanKnockOffEnquiry', 'listheader_CrossLoanKnockOff_Customer.label,listheader_CrossLoanKnockOff_ReceiptId.label,listheader_CrossLoanKonckOff_TransferRef.label,listheader_CrossLoanKnockOff_FromFinReference.label,listheader_CrossLoanKnockOff_ToFinReference.label,listheader_CrossLoanKnockOff_TransferAmount.label', 'custCif,receiptId,fromFinReference,toFinReference,transactionRef,transferAmount', 'String,String,String,String,String,BigDecimal', '', 'ReportList06', 'Cross Loan KnockOff Enquiry', 'Receipts', 1, 1001, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0, 0);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="03_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_transfer_aview'); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="03" author="Rahul">
		<createView viewName="CROSS_LOAN_TRANSFER_AVIEW" replaceIfExists="true">
			<![CDATA[	
				SELECT T1.ID, 
					T4.CUSTID, 
					T4.CUSTCIF, 
					T4.CUSTSHRTNAME, 
					T2.RECEIPTID, 
					T2.RECEIPTDATE, 
					T2.RECEIPTAMOUNT,
		            T2.TRANSACTIONREF,
		            T1.FROMFINID, 
		          	T1.TOFINID,
		          	T1.FROMFINREFERENCE, 
		          	T1.TOFINREFERENCE, 
		          	T1.TRANSFERAMOUNT, 
		          	T1.EXCESSAMOUNT, 
		          	T1.UTILISEAMOUNT, 
		          	T1.RESERVEAMOUNT, 
		          	T1.TOEXCESSID,
				    T1.AVAILABLEAMOUNT, 
				    T1.EXCESSID, 
				    T1.TOLINKEDTRANID, 
				    T1.FROMLINKEDTRANID, 
				    T5.FINTYPE FROMFINTYPE, 
				    T6.FINTYPE TOFINTYPE,
		          	T1.VERSION, 
		          	T1.CREATEDBY, 
		          	T1.CREATEDON, 
		          	T1.APPROVEDBY, 
		          	T1.APPROVEDON, 
		          	T1.LASTMNTBY, 
		          	T1.LASTMNTON, 
		          	T1.RECORDSTATUS, 
		          	T1.ROLECODE, 
		          	T1.NEXTROLECODE, 
		          	T1.TASKID, 
		          	T1.NEXTTASKID,
		          	T1.RECORDTYPE, 
		          	T1.WORKFLOWID,
		          	T1.EXCESSTYPE,
		          	T1.SOURCE
				FROM CROSS_LOAN_TRANSFER T1 
				LEFT JOIN FINRECEIPTHEADER T2 ON T1.RECEIPTID = T2.RECEIPTID
				LEFT JOIN FINRECEIPTDETAIL T3 ON T1.RECEIPTID  = T3.RECEIPTID 
				LEFT JOIN CUSTOMERS T4 ON T1.CUSTID  = T4.CUSTID
				LEFT JOIN FINANCEMAIN T5 ON T1.FROMFINID = T5.FINID
			    LEFT JOIN FINANCEMAIN T6 ON T1.TOFINID = T6.FINID
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="03_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_transfer_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="04_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_transfer_view'); 
			]]>
		</sql>
	</changeSet>

	<changeSet id="04" author="Rahul">
		<createView viewName="CROSS_LOAN_TRANSFER_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ID, 
					T4.CUSTID, 
					T4.CUSTCIF, 
					T4.CUSTSHRTNAME, 
					T2.RECEIPTID, 
					T2.RECEIPTDATE, 
			   		T2.RECEIPTAMOUNT,
		       		T2.TRANSACTIONREF,
		       		T1.FROMFINID, 
		          	T1.TOFINID,
		       		T1.FROMFINREFERENCE, 
		       		T1.TOFINREFERENCE, 
		       		T1.TRANSFERAMOUNT, 
		       		T1.EXCESSAMOUNT, 
		       		T1.UTILISEAMOUNT, 
		       		T1.RESERVEAMOUNT,
		       		T1.TOEXCESSID,
					T1.AVAILABLEAMOUNT, 
					T1.EXCESSID, 
					T1.TOLINKEDTRANID, 
					T1.FROMLINKEDTRANID, 
					T5.FINTYPE FROMFINTYPE, 
					T6.FINTYPE TOFINTYPE,
		       		T1.VERSION, 
		       		T1.CREATEDBY, 
		          	T1.CREATEDON, 
		          	T1.APPROVEDBY, 
		          	T1.APPROVEDON, 
		          	T1.LASTMNTBY, 
		          	T1.LASTMNTON, 
		       		T1.RECORDSTATUS, 
		       		T1.ROLECODE, 
		       		T1.NEXTROLECODE, 
		       		T1.TASKID, 
		       		T1.NEXTTASKID,
		       		T1.RECORDTYPE, 
		       		T1.WORKFLOWID,
		       		T1.EXCESSTYPE,
		       		T1.SOURCE
			  	FROM CROSS_LOAN_TRANSFER_TEMP T1
			  	INNER JOIN FINANCEMAIN T6 ON T1.TOFINID = T6.FINID 
			  	INNER JOIN FINANCEMAIN T5 ON T1.FROMFINID = T5.FINID
			  	INNER JOIN CUSTOMERS T4 ON T1.CUSTID  = T4.CUSTID
				LEFT JOIN FINRECEIPTHEADER T2 ON T1.RECEIPTID = T2.RECEIPTID
				UNION ALL
				SELECT T1.ID, 
					T4.CUSTID, 
					T4.CUSTCIF, 
					T4.CUSTSHRTNAME, 
					T2.RECEIPTID, 
					T2.RECEIPTDATE,
					T2.RECEIPTAMOUNT,
		          	T2.TRANSACTIONREF,
		          	T1.FROMFINID, 
		          	T1.TOFINID,
		          	T1.FROMFINREFERENCE, 
		          	T1.TOFINREFERENCE, 
		          	T1.TRANSFERAMOUNT, 
		          	T1.EXCESSAMOUNT, 
		          	T1.UTILISEAMOUNT, 
		          	T1.RESERVEAMOUNT, 
		          	T1.TOEXCESSID,
				  	T1.AVAILABLEAMOUNT, 
				  	T1.EXCESSID, 
				  	T1.TOLINKEDTRANID, 
				  	T1.FROMLINKEDTRANID, 
				  	T5.FINTYPE FROMFINTYPE, 
				  	T6.FINTYPE TOFINTYPE,
		          	T1.VERSION, 
		          	T1.CREATEDBY, 
		          	T1.CREATEDON, 
		          	T1.APPROVEDBY, 
		          	T1.APPROVEDON, 
		          	T1.LASTMNTBY, 
		          	T1.LASTMNTON, 
		          	T1.RECORDSTATUS, 
		          	T1.ROLECODE, 
		          	T1.NEXTROLECODE, 
		          	T1.TASKID, 
		          	T1.NEXTTASKID,
		          	T1.RECORDTYPE,
		          	T1.WORKFLOWID,
		          	T1.EXCESSTYPE,
		          	T1.SOURCE
				FROM CROSS_LOAN_TRANSFER T1 
				INNER JOIN FINANCEMAIN T5 ON T1.FROMFINID = T5.FINID
			    INNER JOIN FINANCEMAIN T6 ON T1.TOFINID = T6.FINID
			    INNER JOIN CUSTOMERS T4 ON T1.CUSTID  = T4.CUSTID
				LEFT JOIN FINRECEIPTHEADER T2 ON T1.RECEIPTID = T2.RECEIPTID
				WHERE NOT EXISTS (SELECT 1 FROM CROSS_LOAN_TRANSFER_TEMP WHERE ID = T1.ID)
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="04_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_transfer_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="05_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_transfer_eview'); 
			]]>
		</sql>
	</changeSet>

	<changeSet id="05" author="Rahul">
		<createView viewName="CROSS_LOAN_TRANSFER_EVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.RECEIPTID, 
		    		T1.RECEIPTDATE, 
		    		T1.RECEIPTAMOUNT,
	        		T1.TRANSACTIONREF,
	        		T3.FINID,
	          		T3.FINREFERENCE, 
	          		T3.AMOUNT EXCESSAMOUNT, 
	          		T3.UTILISEDAMT UTILISEAMOUNT, 
	          		T3.RESERVEDAMT RESERVEAMOUNT,
			  		T3.BALANCEAMT AVAILABLEAMOUNT, 
			  		T3.EXCESSID, 
			  		T3.AMOUNTTYPE
				FROM FINEXCESSAMOUNT T3 
				LEFT JOIN FINRECEIPTHEADER T1 ON T3.RECEIPTID = T1.RECEIPTID
				LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="05_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_transfer_eview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="08_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_transfer_tview'); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="08" author="Somasekhar.P">
		<createView viewName="CROSS_LOAN_KNOCKOFF_TVIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T4.CUSTCIF,
					T3.FINID,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T1.DEPOSITDATE,
					'' DEPOSITBANK ,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T1.VALUEDATE,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T1.TRANSACTIONREF,
					T1.PARTNERBANKID FUNDINGAC,
					T1.VERSION,
					CH.CREATEDBY, 
			        CH.CREATEDON, 
			        CH.APPROVEDBY, 
			        CH.APPROVEDON, 
			        CH.LASTMNTBY, 
			        CH.LASTMNTON, 
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T1.RECEIPTMODESTATUS,
					T1.REFWAIVERAMT,
					T1.PRVRECEIPTPURPOSE,
					T1.RECEIPTSOURCE,
					T1.SUBRECEIPTMODE PAYMENTTYPE,
					FT.FINDIVISION LOVDESCFINDIVISION, 
					T1.KNOCKOFFTYPE,
					CF.FROMFINREFERENCE,
					CF.TOFINREFERENCE
				FROM CROSS_LOAN_KNOCKOFF_TEMP CH
				INNER JOIN CROSS_LOAN_TRANSFER_TEMP CF ON CH.TRANSFERID = CF.ID
				INNER JOIN FINRECEIPTHEADER_TEMP T1 ON CH.KNOCKOFFID = T1.RECEIPTID
				INNER JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				INNER JOIN RMTFINANCETYPES FT ON FT.FINTYPE  = T3.FINTYPE 
				INNER JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
				INNER JOIN SECROLES T5 ON CH.NEXTROLECODE = T5.ROLECD
			]]>
		</createView>
	</changeSet>

	<changeSet id="05_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_transfer_eview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="08_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_transfer_aview'); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="09" author="Somu">
		<comment>New View</comment>
		<createView viewName="CROSS_LOAN_KNOCKOFF_AVIEW" replaceIfExists="true">
			<![CDATA[
			    SELECT T1.ID,
				    T1.TRANSFERID,
				    T1.KNOCKOFFID,
				    T1.VALUEDATE,
				    T1.POSTDATE,
				    T1.VERSION, 
				    T1.CREATEDBY, 
			        T1.CREATEDON, 
			        T1.APPROVEDBY, 
			        T1.APPROVEDON, 
			        T1.LASTMNTBY, 
			        T1.LASTMNTON,
		   			T1.RECORDSTATUS, 
		   			T1.ROLECODE, 
		   			T1.NEXTROLECODE, 
		   			T1.TASKID, 
		   			T1.NEXTTASKID,
		   			T1.RECORDTYPE, 
		   			T1.WORKFLOWID 
				FROM CROSS_LOAN_KNOCKOFF T1
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="09_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_transfer_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="10_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_knockoff_view'); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="10" author="Somu">
		<createView viewName="CROSS_LOAN_KNOCKOFF_VIEW" replaceIfExists="true">
			<![CDATA[
				SELECT T1.ID,
					T1.TRANSFERID,
					T1.KNOCKOFFID,
					T1.VALUEDATE,
					T1.POSTDATE,
					T1.VERSION, 
					T1.CREATEDBY, 
					T1.CREATEDON, 
					T1.APPROVEDBY, 
					T1.APPROVEDON, 
					T1.LASTMNTBY, 
					T1.LASTMNTON,
					T1.RECORDSTATUS, 
					T1.ROLECODE,
					T1.NEXTROLECODE, 
					T1.TASKID, 
					T1.NEXTTASKID,
					T1.RECORDTYPE, 
					T1.WORKFLOWID 
				FROM CROSS_LOAN_KNOCKOFF_TEMP T1
				UNION ALL
				SELECT T1.ID,
					T1.TRANSFERID,
					T1.KNOCKOFFID,
					T1.VALUEDATE,
					T1.POSTDATE,
					T1.VERSION,
					T1.CREATEDBY, 
					T1.CREATEDON, 
					T1.APPROVEDBY, 
					T1.APPROVEDON, 
					T1.LASTMNTBY, 
					T1.LASTMNTON,
					T1.RECORDSTATUS, 
					T1.ROLECODE, 
					T1.NEXTROLECODE, 
					T1.TASKID, 
					T1.NEXTTASKID,
					T1.RECORDTYPE, 
					T1.WORKFLOWID 
				FROM CROSS_LOAN_KNOCKOFF T1
				WHERE NOT EXISTS (SELECT 1 FROM CROSS_LOAN_KNOCKOFF_TEMP WHERE ID = T1.ID)
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="10_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_knockoff_view');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="11_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_knockoff_tview'); 
			]]>
		</sql>
	</changeSet>

	<changeSet id="11" author="Somasekhar.P">
		<createView viewName="CROSS_LOAN_KNOCKOFF_TVIEW" replaceIfExists="true">
			<![CDATA[
	     		SELECT T4.CUSTCIF,
	     			T1.REFERENCE,
	     			T3.FINTYPE,
	     			T1.RECEIPTID,
	     			T1.RECEIPTDATE,
	     			T1.RECEIPTAMOUNT,
	     			T1.DEPOSITDATE,
	     			'' DEPOSITBANK,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T1.VALUEDATE,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T1.TRANSACTIONREF,
					T1.PARTNERBANKID FUNDINGAC,
					T1.VERSION,
					CH.CREATEDBY, 
			        CH.CREATEDON, 
			        CH.APPROVEDBY, 
			        CH.APPROVEDON, 
			        CH.LASTMNTBY, 
			        CH.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T1.RECEIPTMODESTATUS,
					T1.REFWAIVERAMT,
					T1.PRVRECEIPTPURPOSE,
					T1.RECEIPTSOURCE,
					T1.SUBRECEIPTMODE PAYMENTTYPE,
					FT.FINDIVISION LOVDESCFINDIVISION, 
					T1.KNOCKOFFTYPE,
					CF.FROMFINREFERENCE,
                    CF.TOFINREFERENCE,
                    CH.ID,
                    CH.TRANSFERID,
                    CH.KNOCKOFFID
				FROM CROSS_LOAN_KNOCKOFF_TEMP CH
				INNER JOIN CROSS_LOAN_TRANSFER_TEMP CF ON CH.TRANSFERID = CF.ID
				INNER JOIN FINRECEIPTHEADER_TEMP T1 ON CH.KNOCKOFFID = T1.RECEIPTID
				INNER JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				INNER JOIN RMTFINANCETYPES FT ON FT.FINTYPE  = T3.FINTYPE 
				INNER JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
				INNER JOIN SECROLES T5 ON CH.NEXTROLECODE = T5.ROLECD
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="11_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_knockoff_tview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="13_pre" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'cross_loan_knockoff_aview'); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="13" author="Somasekhar.P">
		<createView viewName="CROSS_LOAN_KNOCKOFF_AVIEW" replaceIfExists="true">
			<![CDATA[
		    	SELECT T4.CUSTCIF,
		    		T1.REFERENCE,
		    		T3.FINTYPE,
		    		T1.RECEIPTID,
		    		T1.RECEIPTDATE,
		    		T1.RECEIPTAMOUNT,
		    		T1.DEPOSITDATE,
		    		'' DEPOSITBANK,
					T1.RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T1.VALUEDATE,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T1.TRANSACTIONREF,
					T1.PARTNERBANKID FUNDINGAC,
					T1.VERSION,
					CH.CREATEDBY, 
			        CH.CREATEDON, 
			        CH.APPROVEDBY, 
			        CH.APPROVEDON, 
			        CH.LASTMNTBY, 
			        CH.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.RECEIPTMODESTATUS,
					T1.REFWAIVERAMT,
					T1.PRVRECEIPTPURPOSE,
					T1.RECEIPTSOURCE,
					T1.subreceiptMode paymentType,
					FT.FINDIVISION LOVDESCFINDIVISION, 
					T1.KNOCKOFFTYPE,
					CF.FROMFINREFERENCE,
                    CF.TOFINREFERENCE,
                    CH.ID,
                    CH.TRANSFERID,
                    CH.KNOCKOFFID
				FROM CROSS_LOAN_KNOCKOFF CH
				INNER JOIN CROSS_LOAN_TRANSFER CF ON CH.TRANSFERID = CF.ID
				INNER JOIN FINRECEIPTHEADER T1 ON CH.KNOCKOFFID = T1.RECEIPTID
				INNER JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
				INNER JOIN RMTFINANCETYPES FT ON FT.FINTYPE  = T3.FINTYPE 
				INNER JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
			]]>
		</createView>
	</changeSet>
	
	<changeSet id="13_post" author="Gopal.p" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'cross_loan_knockoff_aview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="25" author="Somasekhar.P">
		<sql>
			<![CDATA[
				DELETE FROM SECROLEGROUPS WHERE ROLEID IN (SELECT ROLEID FROM SECROLES WHERE ROLECD IN ('CROSS_LOAN_KNOCKOFF_MAKER', 'CROSS_LOAN_KNOCKOFF_APPROVER', 'CROSS_LOAN_KNOCKOFF_ENQUIRY'));
				DELETE FROM SECROLEGROUPS WHERE GRPID IN (SELECT GRPID FROM SECGROUPS WHERE GRPCODE  IN ('CROSS_LOAN_KNOCKOFF_MAKER', 'CROSS_LOAN_KNOCKOFF_APPROVER', 'CROSS_LOAN_KNOCKOFF_ENQUIRY'));
				
				DELETE FROM SECGROUPRIGHTS WHERE GRPID IN (SELECT GRPID FROM SECGROUPS WHERE GRPCODE  IN ('CROSS_LOAN_KNOCKOFF_MAKER', 'CROSS_LOAN_KNOCKOFF_APPROVER', 'CROSS_LOAN_KNOCKOFF_ENQUIRY'));
				
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'menu_Item_CrossLoanKnockoffMaker');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnReceipt');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffList_NewReceipt');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnChangeReceipt');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnCalcReceipts');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_excessAdjustTo');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_allocationMethod');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_effScheduleMethod');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_remarks');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_valueDate');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_collectionAgent');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_panNumber'); 
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_externalRefrenceNumber');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_fundingAccount');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_paymentRef');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_PaidAmount');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_WaivedAmount');
				DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_DrawerName');
				
				DELETE FROM SECROLES WHERE ROLECD IN ('CROSS_LOAN_KNOCKOFF_MAKER', 'CROSS_LOAN_KNOCKOFF_APPROVER', 'CROSS_LOAN_KNOCKOFF_ENQUIRY');
				DELETE FROM SECGROUPS WHERE GRPCODE IN ('CROSS_LOAN_KNOCKOFF_MAKER', 'CROSS_LOAN_KNOCKOFF_APPROVER', 'CROSS_LOAN_KNOCKOFF_ENQUIRY');
				
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'menu_Item_CrossLoanKnockoffMaker';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnReceipt';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffList_NewReceipt';, 
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnChangeReceipt';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnCalcReceipts';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_excessAdjustTo';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_allocationMethod';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_effScheduleMethod';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_remarks';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_valueDate';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_collectionAgent';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_panNumber'; 
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_externalRefrenceNumber';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_fundingAccount';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_paymentRef';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_PaidAmount';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_WaivedAmount';
				DELETE FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_DrawerName';

				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Item_CrossLoanKnockoffMaker', 	 'MENU', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Item_CrossLoanKnockoffApprover',   'MENU', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Item_NewCrossLoanKnockOffEnquiry', 'MENU', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_CrossLoanKnockOffDialog_btnReceipt', 		'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_CrossLoanKnockOffDialog_btnChangeReceipt',  'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_CrossLoanKnockOffDialog_btnCalcReceipts',   'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_CrossLoanKnockOffList_NewReceipt', 			'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_excessAdjustTo', 			'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_allocationMethod', 		'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_effScheduleMethod', 		'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_remarks', 					'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_valueDate', 				'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_collectionAgent', 			'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_panNumber', 				'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_externalRefrenceNumber', 	'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_fundingAccount', 			'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_paymentRef', 				'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_PaidAmount', 				'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_WaivedAmount', 			'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECRIGHTS (RIGHTID, RIGHTTYPE, RIGHTNAME, PAGE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'CrossLoanKnockOffDialog_DrawerName', 				'CrossLoanKnockOffDialog', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SECGROUPS (GRPID, GRPCODE, GRPDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'CROSS_LOAN_KNOCKOFF_MAKER', 'CrossLoan KnockOff Maker', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPS (GRPID, GRPCODE, GRPDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'CROSS_LOAN_KNOCKOFF_APPROVER', 'CrossLoan KnockOff Approver', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPS (GRPID, GRPCODE, GRPDESC, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'CROSS_LOAN_KNOCKOFF_ENQUIRY', 'CrossLoan KnockOff Enquiry', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SECROLES (ROLEID, ROLEAPP, ROLECD, ROLEDESC, ROLECATEGORY, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES), 1, 'CROSS_LOAN_KNOCKOFF_MAKER',     'Maker role for CrossLoan KnockOff',    '', 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0); 
		  		INSERT INTO SECROLES (ROLEID, ROLEAPP, ROLECD, ROLEDESC, ROLECATEGORY, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES), 1, 'CROSS_LOAN_KNOCKOFF_APPROVER',  'Approver role for CrossLoan KnockOff', '', 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
		  		INSERT INTO SECROLES (ROLEID, ROLEAPP, ROLECD, ROLEDESC, ROLECATEGORY, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES((SELECT MAX(ROLEID)+1 FROM SECROLES), 1, 'CROSS_LOAN_KNOCKOFF_ENQUIRY',   'Enquiry role for CrossLoan KnockOff',	 '', 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
		    
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'menu_Item_CrossLoanKnockoffMaker'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnReceipt'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffList_NewReceipt'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnChangeReceipt'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnCalcReceipts'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_excessAdjustTo'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_allocationMethod'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_effScheduleMethod'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_remarks'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_valueDate'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_collectionAgent'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_panNumber'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_externalRefrenceNumber'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_fundingAccount'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_paymentRef'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_PaidAmount'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_WaivedAmount'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'CrossLoanKnockOffDialog_DrawerName'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_APPROVER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'menu_Item_CrossLoanKnockoffApprover'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_APPROVER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnReceipt'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_APPROVER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnChangeReceipt'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_APPROVER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'button_CrossLoanKnockOffDialog_btnCalcReceipts'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);

				INSERT INTO SECGROUPRIGHTS (GRPRIGHTID, GRPID, RIGHTID, ACCESSTYPE, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID) VALUES ((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_ENQUIRY'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME = 'menu_Item_NewCrossLoanKnockOffEnquiry'), 1, 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				INSERT INTO SECROLEGROUPS (ROLEGRPID, GRPID, ROLEID, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID)VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_MAKER'),    (SELECT ROLEID FROM SECROLES WHERE ROLECD = 'CROSS_LOAN_KNOCKOFF_MAKER'),    0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
		    	INSERT INTO SECROLEGROUPS (ROLEGRPID, GRPID, ROLEID, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID)VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_APPROVER'), (SELECT ROLEID FROM SECROLES WHERE ROLECD = 'CROSS_LOAN_KNOCKOFF_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
		    	INSERT INTO SECROLEGROUPS (ROLEGRPID, GRPID, ROLEID, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, ROLECODE, NEXTROLECODE, TASKID, NEXTTASKID, RECORDTYPE, WORKFLOWID)VALUES ((SELECT MAX(ROLEGRPID)+1 FROM SECROLEGROUPS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE = 'CROSS_LOAN_KNOCKOFF_ENQUIRY'),  (SELECT ROLEID FROM SECROLES WHERE ROLECD = 'CROSS_LOAN_KNOCKOFF_ENQUIRY'),  0, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>
	
</databaseChangeLog>