<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />

	<changeSet id="01" author="Surekha">
		<sql>
			delete from PTMenuDetails where MenuCode='BounceReason';
			delete from PTMenuDetails where MenuCode='BounceReasonEnquiry';
			
			delete from SecRoleGroups where GrpId=(select GrpId from SecGroups where GrpCode='BOUNCEREASON_MAKER');
			delete from SecRoleGroups where GrpId=(select GrpId from SecGroups where GrpCode='BOUNCEREASON_APPROVER');
			
			delete from SecGroupRights where GrpId=(select GrpId from SecGroups where GrpCode='BOUNCEREASON_MAKER') ;
			delete from SecGroupRights where GrpId=(select GrpId from SecGroups where GrpCode='BOUNCEREASON_APPROVER');
			delete from SecGroupRights where GrpId=(select GrpId from SecGroups where GrpCode='BOUNCEREASON_VIEW');
			
			delete from SecRights where RightName='menuItem_applicationmaster_BounceReason';
			delete from SecRights where RightName='menuItem_applicationmaster_BounceReasonEnquiry';
			delete from SecRights where RightName='button_BounceReasonList_PrintList';
			delete from SecRights where RightName='button_BounceReasonList_NewBounceReason';
			delete from SecRights where RightName='button_BounceReasonDialog_btnNew';
			delete from SecRights where RightName='button_BounceReasonDialog_btnEdit';
			delete from SecRights where RightName='button_BounceReasonDialog_btnDelete';
			delete from SecRights where RightName='button_BounceReasonDialog_btnSave';
			delete from SecRights where RightName='BounceReasonDialog_BounceID';
			delete from SecRights where RightName='BounceReasonDialog_BounceCode';
			delete from SecRights where RightName='BounceReasonDialog_ReasonType';
			delete from SecRights where RightName='BounceReasonDialog_Category';
			delete from SecRights where RightName='BounceReasonDialog_Reason';
			delete from SecRights where RightName='BounceReasonDialog_Action';
			delete from SecRights where RightName='BounceReasonDialog_FeeID';
			delete from SecRights where RightName='BounceReasonDialog_ReturnID';
			delete from SecRights where RightName='BounceReasonDialog_Active';
			
			delete from SecGroups where GrpCode='BOUNCEREASON_VIEW';
			delete from SecGroups where GrpCode='BOUNCEREASON_MAKER';
			delete from SecGroups where GrpCode='BOUNCEREASON_APPROVER';
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO=(SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECROLEGROUPS SET SEQNO=(SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
			UPDATE SeqPTMenuDetails SET SEQNO= (SELECT MAX(menuId) FROM PTMenuDetails);
			
			INSERT INTO SecGroups SELECT (select (SeqNo+1) from SeqSecGroups), 'BOUNCEREASON_VIEW', 'Allow to view BounceReason', 0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;
			INSERT INTO SecGroups SELECT (select (SeqNo+2) from SeqSecGroups), 'BOUNCEREASON_MAKER', 'WF Maker for BounceReason', 0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;
			INSERT INTO SecGroups SELECT (select (SeqNo+3) from SeqSecGroups), 'BOUNCEREASON_APPROVER', 'WF Approver for BounceReason', 0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;
			
			INSERT INTO SecRights SELECT (select (SeqNo+3) from SeqSecRights),0,'menuItem_applicationmaster_BounceReason','MENU',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+4) from SeqSecRights),0,'menuItem_applicationmaster_BounceReasonEnquiry','MENU',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+5) from SeqSecRights),2,'button_BounceReasonList_PrintList','BounceReasonList',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+6) from SeqSecRights),2,'button_BounceReasonList_NewBounceReason','BounceReasonList',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+7) from SeqSecRights),2,'button_BounceReasonDialog_btnNew','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+8) from SeqSecRights),2,'button_BounceReasonDialog_btnEdit','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+9) from SeqSecRights),2,'button_BounceReasonDialog_btnDelete','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10) from SeqSecRights),2,'button_BounceReasonDialog_btnSave','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+1) from SeqSecRights),3,'BounceReasonDialog_BounceID','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+2) from SeqSecRights),3,'BounceReasonDialog_BounceCode','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+3) from SeqSecRights),3,'BounceReasonDialog_ReasonType','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+4) from SeqSecRights),3,'BounceReasonDialog_Category','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+5) from SeqSecRights),3,'BounceReasonDialog_Reason','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+6) from SeqSecRights),3,'BounceReasonDialog_Action','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+7) from SeqSecRights),3,'BounceReasonDialog_FeeID','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+8) from SeqSecRights),3,'BounceReasonDialog_ReturnCode','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecRights SELECT (select (SeqNo+10+9) from SeqSecRights),3,'BounceReasonDialog_Active','BounceReasonDialog',0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			
			-- for View
			INSERT INTO SecGroupRights SELECT (select (SeqNo+2) from SeqSecGroupRights), (select (SeqNo+1) from SeqSecGroups), (select (SeqNo+4) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40',' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			
			-- For _MAKER
			INSERT INTO SecGroupRights SELECT (select (SeqNo+16) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select max(RightID) from SecRights WHERE RightName='menuCat_applicationmaster'),1,0,10000,'2017-04-22 06:40:40',' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+17) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+3) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+18) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+6) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+19) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+9) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+1) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+1) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+2) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+2) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+3) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+3) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+4) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+4) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+5) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+5) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+6) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+6) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+7) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+7) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+8) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+8) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+20+9) from SeqSecGroupRights), (select (SeqNo+2) from SeqSecGroups), (select (SeqNo+10+9) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			
			-- For _Approver
			INSERT INTO SecGroupRights SELECT (select (SeqNo+24+9) from SeqSecGroupRights), (select (SeqNo+3) from SeqSecGroups), (select max(RightID) from SecRights WHERE RightName='menuCat_applicationmaster'),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+25+9) from SeqSecGroupRights), (select (SeqNo+3) from SeqSecGroups), (select (SeqNo+3) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+26+9) from SeqSecGroupRights), (select (SeqNo+3) from SeqSecGroups), (select (SeqNo+10) from SeqSecRights),1,0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
				
			INSERT INTO SecRoleGroups SELECT (select (SeqNo+1) from SeqSecRoleGroups), (select (SeqNo+2) from SeqSecGroups), (select roleid from SecRoles where RoleCd='MSTGRP1_MAKER'), 0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRoleGroups WHERE 0=0;
			INSERT INTO SecRoleGroups SELECT (select (SeqNo+2) from SeqSecRoleGroups), (select (SeqNo+3) from SeqSecGroups), (select roleid from SecRoles where RoleCd='MSTGRP1_APPROVER'), 0,1000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRoleGroups WHERE 0=0;
			
			INSERT INTO PTMenuDetails SELECT (select (SeqNo+1) from SeqPTMenuDetails),(SELECT AppID FROM PTApplicationDetails WHERE AppCode='PFF'),'BounceReason','menu_Item_BounceReason','/WEB-INF/pages/applicationmaster/BounceReason/BounceReasonList.zul',0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0,'menuItem_applicationmaster_BounceReason' FROM SeqPTMenuDetails WHERE 0=0;
			INSERT INTO PTMenuDetails SELECT (select (SeqNo+2) from SeqPTMenuDetails),(SELECT AppID FROM PTApplicationDetails WHERE AppCode='PFF'),'BounceReasonEnquiry','menu_Item_BounceReasonEnquiry?enqiryModule=Y" ','/WEB-INF/pages/applicationmaster/BounceReason/BounceReasonEnquiryList.zul',0,10000,'2017-04-22 06:40:40','Approved',' ',' ',' ',' ',' ',0,'menuItem_applicationmaster_BounceReason' FROM SeqPTMenuDetails WHERE 0=0;
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO=(SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECROLEGROUPS SET SEQNO=(SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
			UPDATE SeqPTMenuDetails SET SEQNO= (SELECT MAX(menuId) FROM PTMenuDetails);
		</sql>
	
	</changeSet>
	
		<changeSet author="Surekha" id="02">
	    <renameColumn  columnDataType="bigint"
	            newColumnName="ReturnCode"
	            oldColumnName="ReturnID"
	            tableName="BounceReasons"/>
	</changeSet>
	
	<changeSet author="Surekha" id="03">
	    <modifyDataType columnName="ReturnCode"
	            newDataType="varchar(8)"
	            tableName="BounceReasons"/>
	</changeSet>
	<changeSet author="Surekha" id="04">
	    <renameColumn  columnDataType="bigint"
	            newColumnName="ReturnCode"
	            oldColumnName="ReturnID"
	            tableName="BounceReasons_Temp"/>
	</changeSet>
	
	<changeSet author="Surekha" id="05">
	    <modifyDataType columnName="ReturnCode"
	            newDataType="varchar(8)"
	            tableName="BounceReasons_Temp"/>
	</changeSet>
	<changeSet id="06" author="Surekha">
		<createView viewName="BounceReasons_View" replaceIfExists="true">
			SELECT		T1.BounceID, T1.BounceCode, T1.ReasonType, T1.Category, T1.Reason, T1.Action, T1.FeeID, T1.ReturnCode, T1.Active		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.FeetypeCode,T2.FeeTypeDesc FeeIDName 
				FROM    	BounceReasons_Temp  T1 INNER JOIN 
							FeeTypes T2 ON T1.FeeID = T2.FeeTypeID
				UNION ALL
				
				SELECT		T1.BounceID, T1.BounceCode, T1.ReasonType, T1.Category, T1.Reason, T1.Action, T1.FeeID, T1.ReturnCode, T1.Active		
							, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.FeetypeCode,T2.FeeTypeDesc FeeIDName
				FROM    	BounceReasons  T1 INNER JOIN 
							FeeTypes T2 ON T1.FeeID = T2.FeeTypeID
				WHERE     NOT EXISTS (SELECT 1 FROM BounceReasons_TEMP WHERE BounceID = T1.BounceID)
		</createView>
	</changeSet>
	<changeSet id="07" author="Surekha">
		<createView viewName="BounceReasons_AView" replaceIfExists="true">
			SELECT		T1.BounceID, T1.BounceCode, T1.ReasonType, T1.Category, T1.Reason, T1.Action, T1.FeeID, T1.ReturnCode, T1.Active		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.FeetypeCode,T2.FeeTypeDesc FeeIDName 
				FROM    	BounceReasons  T1 INNER JOIN 
							FeeTypes T2 ON T1.FeeID = T2.FeeTypeID
		</createView>
	</changeSet>
	<changeSet id="08" author="Surekha">
		<addColumn tableName="RMTAccountTypes">
			<column name="ProfitCenter" type="bigint" defaultValue="1">
			<constraints  nullable="false" />
			</column>
			<column name="CostCenter" type="bigint"/>
		</addColumn>
	</changeSet>
	<changeSet id="09" author="Surekha">
		<addColumn tableName="RMTAccountTypes_Temp">
			<column name="ProfitCenter" type="bigint">
			<constraints  nullable="false" />
			</column>
			<column name="CostCenter" type="bigint"/>
		</addColumn>
	</changeSet>
	<changeSet id="08.1" author="Chaitanya.ch">
		<renameColumn tableName="RMTAccountTypes" oldColumnName="ProfitCenter" newColumnName="ProfitCenterID"/>
	</changeSet>
	
	<changeSet id="08.2" author="Chaitanya.ch">
		<renameColumn tableName="RMTAccountTypes" oldColumnName="CostCenter" newColumnName="CostCenterID"/>
	</changeSet>
	<changeSet id="09.1" author="Chaitanya.ch">
		<renameColumn tableName="RMTAccountTypes_Temp" oldColumnName="ProfitCenter" newColumnName="ProfitCenterID"/>
	</changeSet>
	
	<changeSet id="09.2" author="Chaitanya.ch">
		<renameColumn tableName="RMTAccountTypes_Temp" oldColumnName="CostCenter" newColumnName="CostCenterID"/>
	</changeSet>
	<changeSet id="10" author="Surekha">
		<createView viewName="RMTACCOUNTTYPES_VIEW" replaceIfExists="true">
			 SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, T1.AcLmtCategory, T1.AcTypeIsActive,T1.ProfitCenterID,T1.CostCenterID, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes_Temp T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
									CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN
									ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
			 UNION ALL
			SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, T1.AcLmtCategory, T1.AcTypeIsActive, T1.ProfitCenterID,T1.CostCenterID,T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
									CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN
									ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
			 WHERE     (NOT EXISTS
			 (SELECT     1 Expr1
			 FROM          RMTAccountTypes_Temp
			 WHERE      (AcType = T1.AcType)))
		</createView>
	</changeSet>
	<changeSet id="11" author="Surekha">
		<createView viewName="RMTACCOUNTTYPES_AVIEW" replaceIfExists="true">
			 SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, T1.AcLmtCategory, T1.AcTypeIsActive,T1.ProfitCenterID,T1.CostCenterID, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
									CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN
									ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
			
		</createView>
	</changeSet>
	<changeSet id="12" author="Surekha">
		<sql>
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeDialog_acTypeGrpId','AccountTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeDialog_profitCenter','AccountTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AccountTypeDialog_costCenter','AccountTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountType_Maker') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountTypeDialog_acTypeGrpId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountType_Maker') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountTypeDialog_profitCenter'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='AccountType_Maker') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountTypeDialog_costCenter'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
				
		</sql>
	</changeSet>
	
	<changeSet author="Kesav" id="13">
		<createView viewName="FEETYPES_AVIEW" replaceIfExists="true">
			SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountingSetId, T1.Active,		
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM    	FeeTypes  T1
		</createView>
	</changeSet>	
		
	<changeSet author="Kesav" id="14">
		<createView viewName="FEETYPES_TVIEW" replaceIfExists="true">
			SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountingSetId, T1.Active,		
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM    	FeeTypes_Temp  T1
		</createView>
	</changeSet>
	
	<changeSet author="Kesav" id="15">
		<createView viewName="FEETYPES_VIEW" replaceIfExists="true">
			SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountingSetId, T1.Active,		
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM    	FeeTypes_Temp  T1 
			
			UNION ALL

			SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountingSetId, T1.Active,	
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM    	FeeTypes  T1 
			
			WHERE     	NOT EXISTS (SELECT 1 FROM FeeTypes_TEMP WHERE FeeTypeID = T1.FeeTypeID)
		</createView>
	</changeSet>
	
	<changeSet id="16" author="Chaitanya.ch">
		<createView viewName="RMTACCOUNTTYPES_AVIEW" replaceIfExists="true">
			SELECT    T1.AcType, T1.AcTypeDesc, T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
		T1.AcLmtCategory, T1.AcTypeIsActive, T1.ProfitCenterID, T1.CostCenterID, T1.Version, T1.LastMntBy, 
		T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
					 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
		       T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
		       T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
					 FROM         RMTAccountTypes T1 Left Join
											AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
											CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN
											ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
		</createView>
	</changeSet>	
		
	<changeSet id="17" author="Chaitanya.ch">
		<createView viewName="RMTACCOUNTTYPES_VIEW" replaceIfExists="true">
			  SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
			  T1.AcLmtCategory, T1.AcTypeIsActive,T1.ProfitCenterID,T1.CostCenterID, T1.Version, T1.LastMntBy, 
			  T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
			 T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
			 T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes_Temp T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
									CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN
									ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
			 UNION ALL
			SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
			T1.AcLmtCategory, T1.AcTypeIsActive, T1.ProfitCenterID,T1.CostCenterID,T1.Version, T1.LastMntBy, 
			T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
			 T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
			 T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
									CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN
									ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
			 WHERE     (NOT EXISTS
			 (SELECT     1 Expr1
			 FROM          RMTAccountTypes_Temp
			 WHERE      (AcType = T1.AcType)))
		</createView>
	</changeSet>		
	
	<changeSet id="18" author="Chaitanya.ch">
		<createView viewName="RMTACCOUNTTYPES_AVIEW" replaceIfExists="true">
			SELECT    T1.AcType, T1.AcTypeDesc, T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
		T1.AcLmtCategory, T1.AcTypeIsActive, T1.ProfitCenterID, T1.CostCenterID, T1.Version, T1.LastMntBy, 
		T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
					 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
		       T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
		       T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
					 FROM         RMTAccountTypes T1 Left Join
											AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId 
											INNER JOIN
											ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
											LEFT JOIN
											CostCenters T3 ON T1.CostCenterID = T3.CostCenterID 
		</createView>
	</changeSet>	
		
	<changeSet id="19" author="Chaitanya.ch">
		<createView viewName="RMTACCOUNTTYPES_VIEW" replaceIfExists="true">
			  SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
			  T1.AcLmtCategory, T1.AcTypeIsActive,T1.ProfitCenterID,T1.CostCenterID, T1.Version, T1.LastMntBy, 
			  T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
			 T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
			 T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes_Temp T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
											ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
											LEFT JOIN
											CostCenters T3 ON T1.CostCenterID = T3.CostCenterID 
			 UNION ALL
			SELECT    T1.AcType, T1.AcTypeDesc,  T1.AcPurpose, T1.AcHeadCode, T1.InternalAc, T1.CustSysAc, 
			T1.AcLmtCategory, T1.AcTypeIsActive, T1.ProfitCenterID,T1.CostCenterID,T1.Version, T1.LastMntBy, 
			T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			 T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.AssertOrLiability,
			 T1.OnBalanceSheet,T1.AllowOverDraw,T1.AcTypeGrpId,T2.GroupCode,T2.GroupDescription,T2.AcctTypeLevel,
			 T4.ProfitCenterCode,T4.ProfitCenterDesc,T3.CostCenterCode,T3.CostCenterDesc
			 FROM         RMTAccountTypes T1 Left Join
									AccountTypeGroup T2 ON T1.AcTypeGrpId=T2.GroupId INNER JOIN
											ProfitCenters T4 ON T1.ProfitCenterID = T4.ProfitCenterID
											LEFT JOIN
											CostCenters T3 ON T1.CostCenterID = T3.CostCenterID 
			 WHERE     (NOT EXISTS
			 (SELECT     1 Expr1
			 FROM          RMTAccountTypes_Temp
			 WHERE      (AcType = T1.AcType)))
		</createView>
	</changeSet>		
	
	
		<changeSet id="22" author="Durgaprasad G">
		<createTable tableName="PresentmentDetailHeader">
			<column name="ExtractId" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="ExtractReference" type="varchar(50)">
				<constraints nullable="false" />
			</column>
			<column name="BatchId" type="bigint" />
			<column name="FromDate" type="datetime" >
			<constraints nullable="false" />
			</column>
			<column name="ToDate" type="datetime" >
			<constraints nullable="false" />
			</column>
			<column name="MandateType" type="varchar(100)" />
			<column name="LoanType" type="varchar(50)" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
		</createTable>
	</changeSet>

	
	<changeSet id="23" author="ManojKumar P">
		<createTable tableName="SAPGL_TRAN_DETAIL_REPORT">
			<column name="ID" type="decimal(10,0)">
				<constraints nullable="false" />
			</column>
			<column name="LINK" type="decimal(5,0)">
				<constraints nullable="false" />
			</column>
			<column name="BSCHL" type="decimal(5,0)" >
			    <constraints nullable="false" />
			</column>
			<column name="HKONT" type="varchar(20)"/>
			<column name="UMSKZ" type="varchar(20)"/>
			<column name="WRBTR" type="decimal(20,2)"/>
			<column name="GSBER" type="varchar(10)"/>
			<column name="BUPLA" type="varchar(10)"/>
			<column name="KOSTL" type="varchar(20)"/>
			<column name="PRCTR" type="varchar(20)"/>
			<column name="ZUONR" type="varchar(50)"/>
			<column name="SGTXT" type="varchar(50)"/>
		</createTable>
	</changeSet>
	
	<changeSet id="24" author="ManojKumar P">
		<addPrimaryKey columnNames="ID" constraintName="PK_STDR_ID"
			tableName="SAPGL_TRAN_DETAIL_REPORT" />
	</changeSet>
	
	<changeSet id="25" author="Irfan">
	
	<modifyDataType tableName="PartnerBankModes" columnName="PaymentMode" newDataType="varchar(8)"/>
	</changeSet>
	<changeSet id="26" author="ManojKumar P">
		<createTable tableName="SAPGL_TRAN_DETAIL_REPORT_TEMP">
			<column name="ID" type="decimal(10,0)">
				<constraints nullable="false" />
			</column>
			<column name="LINK" type="decimal(5,0)">
				<constraints nullable="false" />
			</column>
			<column name="BSCHL" type="decimal(5,0)" >
			    <constraints nullable="false" />
			</column>
			<column name="HKONT" type="varchar(20)"/>
			<column name="UMSKZ" type="varchar(20)"/>
			<column name="WRBTR" type="decimal(20,2)"/>
			<column name="GSBER" type="varchar(10)"/>
			<column name="BUPLA" type="varchar(10)"/>
			<column name="KOSTL" type="varchar(20)"/>
			<column name="PRCTR" type="varchar(20)"/>
			<column name="ZUONR" type="varchar(50)"/>
			<column name="SGTXT" type="varchar(50)"/>
		</createTable>
	</changeSet>
	
	<changeSet id="27" author="ManojKumar P">
		<addPrimaryKey columnNames="ID" constraintName="PK_STDR_T_ID"
			tableName="SAPGL_TRAN_DETAIL_REPORT_TEMP" />
	</changeSet>
	
	<changeSet id="28" author="ManojKumar P">
		<createTable tableName="SAPGL_TRAN_DETAIL_REPORT_TEMP1">
			<column name="ID" type="decimal(10,0)">
				<constraints nullable="false" />
			</column>
			<column name="LINK" type="decimal(5,0)">
				<constraints nullable="false" />
			</column>
			<column name="BSCHL" type="decimal(5,0)" >
			    <constraints nullable="false" />
			</column>
			<column name="HKONT" type="varchar(20)"/>
			<column name="UMSKZ" type="varchar(20)"/>
			<column name="WRBTR" type="decimal(20,2)"/>
			<column name="GSBER" type="varchar(10)"/>
			<column name="BUPLA" type="varchar(10)"/>
			<column name="KOSTL" type="varchar(20)"/>
			<column name="PRCTR" type="varchar(20)"/>
			<column name="ZUONR" type="varchar(50)"/>
			<column name="SGTXT" type="varchar(50)"/>
		</createTable>
	</changeSet>
	
	<changeSet id="29" author="ManojKumar P">
		<addPrimaryKey columnNames="ID" constraintName="PK_STDR_T1_ID"
			tableName="SAPGL_TRAN_DETAIL_REPORT_TEMP1" />
	</changeSet>
	
	<changeSet id="30" author="ManojKumar P">
		<createTable tableName="SAPGL_TRAN_SUMMARY_REPORT">
			<column name="LINK" type="decimal(5,0)">
				<constraints nullable="false" />
			</column>
			<column name="BLDAT" type="datetime"/>
			<column name="BLART" type="varchar(10)"/>
			<column name="BUKRS" type="varchar(10)"/>
			<column name="BUDAT" type="datetime"/>
			<column name="MONAT" type="decimal(5,0)"/>
			<column name="CURRCY" type="varchar(20)"/>
			<column name="XBLNR" type="varchar(50)"/>
			<column name="BKTXT" type="varchar(50)"/>
		</createTable>
	</changeSet>
	
	<changeSet id="31" author="ManojKumar P">
		<addPrimaryKey columnNames="LINK" constraintName="PK_STSR_LINK"
			tableName="SAPGL_TRAN_SUMMARY_REPORT" />
	</changeSet>
	
	
	<changeSet id="32" author="ManojKumar P">
		<modifyDataType tableName="SAPGL_TRAN_SUMMARY_REPORT" columnName="CURRCY"
			newDataType="char(3)" />
	</changeSet>
	
	
	<changeSet id="33" author="ManojKumar P">
		<modifyDataType tableName="SAPGL_TRAN_DETAIL_REPORT" columnName="ID"
			newDataType="int" />
	</changeSet>
	
	
	<changeSet id="34" author="ManojKumar P">
		<modifyDataType tableName="SAPGL_TRAN_DETAIL_REPORT_TEMP" columnName="ID"
			newDataType="int" />
	</changeSet>
	
	
	<changeSet id="35" author="ManojKumar P">
		<modifyDataType tableName="SAPGL_TRAN_DETAIL_REPORT_TEMP1" columnName="ID"
			newDataType="int" />
	</changeSet>
	
	<changeSet id="36" author="Surekha">
		<sql>
			update RMTAccountTypes set CostCenterID=0;
			update RMTAccountTypes_temp set CostCenterID=0;
		</sql>
	</changeSet>
	
	<changeSet id="38" author="Chaitanya">
		<createTable tableName="AccountMapping">
			<column name="Account" type="varchar(50)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="HostAccount" type="varchar(50)">
				<constraints  nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
 	</changeSet>
	<changeSet id="39" author="Chaitanya">
		<createTable tableName="AccountMapping_Temp">
			<column name="Account" type="varchar(50)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="HostAccount" type="varchar(50)">
				<constraints  nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
 	</changeSet>

 	<changeSet id="40" author="Amit">
		<addColumn tableName="RMTProvinceVsCity">
			<column name="CityIsActive" type="number(1,0)" defaultValue="0" >
			<constraints  nullable="false" />
			</column>
		</addColumn>
	</changeSet>
	
	 <changeSet id="41" author="Amit">
		<addColumn tableName="RMTProvinceVsCity_Temp">
			<column name="CityIsActive" type="number(1,0)" defaultValue="0" >
			<constraints  nullable="false" />
			</column>
		</addColumn>
	</changeSet> 
	
	 <changeSet id="42" author="Durgaprasad G">
		<createView viewName="MANDATE_FILE_DOWNLOAD_VIEW" replaceIfExists="true">
		SELECT DC.NAME, DC.UPLOADPATH FILELOCATION, DS.FILENAME,  DS.STATUS FROM DATA_ENGINE_PROCESS_LOG L
		INNER JOIN DATA_ENGINE_STATUS DS ON DS.ID = L.FILEID
		INNER JOIN DATA_ENGINE_CONFIG DC ON DC.NAME = DS.NAME WHere DC.NAME = 'MANDATES_EXPORT'
		</createView>
	</changeSet>
	
      <changeSet id="43" author="ManojKumar P">
		<renameTable newTableName="SAPGL_TRAN_DETAIL_REPORT_STAGE" oldTableName="SAPGL_TRAN_DETAIL_REPORT_TEMP1" />
	</changeSet>
 		<changeSet id="45" author="Amit">
		<createView replaceIfExists="true" viewName="RMTProvinceVsCity_View">
  SELECT  T1.PCCountry, T2.CountryDesc LovDescPCCountryName, T1.PCProvince, T3.CPProvinceName LovDescPCProvinceName, T1.PCCity, T1.PCCityName,T1.PCCityClassification, T1.Version, 
                      T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.BankRefNo, T1.CityIsActive
				FROM         RMTProvinceVsCity_Temp  T1 INNER JOIN
			                      BMTCountries  T2 ON T1.PCCountry = T2.CountryCode INNER JOIN
			                      RMTCountryVsProvince  T3 ON T1.PCCountry = T3.CPCountry AND T1.PCProvince = T3.CPProvince
				UNION ALL
				SELECT     T1.PCCountry, T2.CountryDesc LovDescPCCountryName, T1.PCProvince, T3.CPProvinceName LovDescPCProvinceName, T1.PCCity, T1.PCCityName,T1.PCCityClassification, T1.Version, 
				                      T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.BankRefNo, T1.CityIsActive
				FROM         RMTProvinceVsCity  T1 INNER JOIN
				                      BMTCountries  T2 ON T1.PCCountry = T2.CountryCode INNER JOIN
				                      RMTCountryVsProvince  T3 ON T1.PCCountry = T3.CPCountry AND T1.PCProvince = T3.CPProvince
				WHERE     NOT EXISTS
				                          (SELECT     1
	                            FROM          RMTProvinceVsCity_TEMP
	                            WHERE      PCCountry = T1.PCCountry AND PCProvince = T1.PCProvince AND PCCity = T1.PCCity)

		</createView>
	</changeSet>
	<changeSet id="46" author="Surekha">
		<addForeignKeyConstraint constraintName="FK_NPABUCKETS_CONFIG"
			referencedTableName="NPABUCKETS" referencedColumnNames="bucketID"
			baseTableName="NPABUCKETSCONFIG" baseColumnNames="bucketID" />
	</changeSet>
	<changeSet id="47" author="Surekha">
		<addForeignKeyConstraint constraintName="FK_DPDBUCKETS_CONFIG"
			referencedTableName="DPDBUCKETS" referencedColumnNames="bucketID"
			baseTableName="DPDBUCKETSCONFIG" baseColumnNames="bucketID" />
	</changeSet>
	
	<changeSet id="48" author="Chaitanya">
		<createTable tableName="FinTypePartnerBanks">
			<column name="ID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinType" type="varchar(8)">
				<constraints  nullable="false" />
			</column>
			<column name="Purpose" type="char(1)">
				<constraints  nullable="false" />
			</column>
			<column name="PaymentMode" type="varchar(8)">
				<constraints  nullable="false" />
			</column>
			<column name="PartnerBankID" type="bigint">
				<constraints  nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="49" author="Chaitanya">
		<createTable tableName="FinTypePartnerBanks_Temp">
			<column name="ID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinType" type="varchar(8)">
				<constraints  nullable="false" />
			</column>
			<column name="Purpose" type="char(1)">
				<constraints  nullable="false" />
			</column>
			<column name="PaymentMode" type="varchar(8)">
				<constraints  nullable="false" />
			</column>
			<column name="PartnerBankID" type="bigint">
				<constraints  nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
		
		<changeSet id="51" author="Amit">
		<addPrimaryKey columnNames="INDUSTRYCODE" constraintName="PK_BMTINDUSTRIES_INDUSTRYCODE"
			tableName="BMTINDUSTRIES" />
	</changeSet>
	
	<changeSet id="52" author="ManojKumar P">
		<createTable tableName="SAPGL_TRAIL_BALANCE_HEADER">
			<column name="ID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FILENAME" type="varchar(100)">
				<constraints nullable="false" />
			</column>
			<column name="COMPANYNAME" type="varchar(100)" >
			    <constraints nullable="false" />
			</column>
			<column name="REPORTNAME" type="varchar(100)" >
			    <constraints nullable="false" />
			</column>
			<column name="STARTDATE" type="datetime" >
			    <constraints nullable="false" />
			</column>
			<column name="ENDDATE" type="datetime" >
			    <constraints nullable="false" />
			</column>
			<column name="CURRENCY" type="char(3)" >
			    <constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	
	<changeSet id="53" author="ManojKumar P">
		<addPrimaryKey columnNames="ID" constraintName="PK_STBH_ID"
			tableName="SAPGL_TRAIL_BALANCE_HEADER" />
	</changeSet>
	
 	
 		<changeSet id="54" author="ManojKumar P">
		<createTable tableName="SAPGL_TRAIL_BALANCE_REPORT">
			<column name="HEADERID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="ACTYPEGRPID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="HOSTACCOUNT" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="DESCRIPTION" type="varchar(50)" >
			    <constraints nullable="false" />
			</column>
			<column name="OPENINGBAL" type="decimal(18,0)" >
			    <constraints nullable="false" />
			</column>
			<column name="OPENINGBALTYPE" type="char(2)" >
			    <constraints nullable="false" />
			</column>
			<column name="DEBITAMOUNT" type="decimal(18,0)" >
			    <constraints nullable="false" />
			</column>
			<column name="CREDITAMOUNT" type="decimal(18,0)" >
			    <constraints nullable="false" />
			</column>
			<column name="CLOSINGBAL" type="decimal(18,0)" >
			    <constraints nullable="false" />
			</column>
			<column name="CLOSINGBALTYPE" type="char(2)" >
			    <constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	
	
	<changeSet id="55" author="ManojKumar P">
		<addForeignKeyConstraint constraintName="FK_STBR_HID"
			referencedTableName="SAPGL_TRAIL_BALANCE_HEADER" referencedColumnNames="ID"
			baseTableName="SAPGL_TRAIL_BALANCE_REPORT" baseColumnNames="HEADERID" />
	</changeSet>
	
		<changeSet id="60" author="Amit">
		<addPrimaryKey columnNames="INDUSTRYCODE" constraintName="PK_INDUSTRYCODE_TEMP"
			tableName="BMTINDUSTRIES_TEMP" />
	</changeSet>
	<changeSet id="62" author="Surekha">
	<sql>
		update ReportList set  REPORTHEADING ='DPD Bucket' , ReportFileName='ReportList05' where Code='DPDBucket';
		update ReportList set  REPORTHEADING ='NPA Bucket' , ReportFileName='ReportList05' where Code='NPABucket';
		update ReportList set  REPORTHEADING ='DPD Bucket Configuration' , ReportFileName='ReportList06' where Code='DPDBucketConfiguration';
		update ReportList set  REPORTHEADING ='NPA Bucket Configuration' , ReportFileName='ReportList05',fieldlabels='listheader_ProductCode.label,listheader_BucketID.label,listheader_DueDays.label,listheader_RecordStatus.label,listheader_RecordType.label',FieldValues='productCode,bucketID,dueDays,recordStatus,recordType',FieldType='String,String,int,String,String' where Code='NPABucketConfiguration';
		
	</sql>
	</changeSet>
	<changeSet id="81" author="Surekha">
		<createView viewName="BounceReasons_View" replaceIfExists="true">
			SELECT		T1.BounceID, T1.BounceCode, T1.ReasonType, T1.Category, T1.Reason, T1.Action, T1.FeeID, T1.ReturnCode, T1.Active		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.RuleCode,T2.RuleCodeDesc
				FROM    	BounceReasons_Temp  T1 INNER JOIN 
							Rules T2 ON T1.FeeID = T2.RuleId
				UNION ALL
				
				SELECT		T1.BounceID, T1.BounceCode, T1.ReasonType, T1.Category, T1.Reason, T1.Action, T1.FeeID, T1.ReturnCode, T1.Active		
							, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.RuleCode,T2.RuleCodeDesc
				FROM    	BounceReasons  T1 INNER JOIN 
							Rules T2 ON T1.FeeID = T2.RuleId
				WHERE     NOT EXISTS (SELECT 1 FROM BounceReasons_TEMP WHERE BounceID = T1.BounceID)
		</createView>
	</changeSet>
	<changeSet id="82" author="Surekha">
		<createView viewName="BounceReasons_AView" replaceIfExists="true">
			SELECT		T1.BounceID, T1.BounceCode, T1.ReasonType, T1.Category, T1.Reason, T1.Action, T1.FeeID, T1.ReturnCode, T1.Active		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.RuleCode,T2.RuleCodeDesc
				FROM    	BounceReasons  T1 INNER JOIN 
							Rules T2 ON T1.FeeID = T2.RuleId
		</createView>
	</changeSet>
	<changeSet id="83" author="Surekha">
		<sql>
			DELETE from ReportList where Code = 'BounceReason';
			DELETE from ReportList where Code = 'ProfitCenter';
			DELETE from ReportList where Code = 'CostCenter';

			Insert into ReportList Values('BounceReason', 'BounceReason', 
			'listheader_BounceCode.label,listheader_ReasonType.label,listheader_ReasonType.label,listheader_ReturnCode.label,listheader_Active.label,listheader_RecordStatus.label,listheader_RecordType.label',
			'bounceCode,reasonType,category,returnCode,active,recordStatus,recordType','String,int,int,String,boolean,String,String','', 'ReportList07', 
			'Bounce Reason', 'Application Masters',0, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0,0);
			
			Insert into ReportList Values('ProfitCenter', 'ProfitCenter', 
			'listheader_ProfitCenterCode.label,listheader_ProfitCenterDesc.label,listheader_Active.label,listheader_RecordStatus.label,listheader_RecordType.label',
			'profitCenterCode,profitCenterDesc,active,recordStatus,recordType','String,String,boolean,String,String','', 'ReportList05', 
			'Profit Center', 'Application Masters',0, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0,0);
			
			Insert into ReportList Values('CostCenter', 'CostCenter', 
			'listheader_CostCenterCode.label,listheader_CostCenterDesc.label,listheader_Active.label,listheader_RecordStatus.label,listheader_RecordType.label',
			'costCenterCode,costCenterDesc,active,recordStatus,recordType','String,String,boolean,String,String','', 'ReportList05', 
			'Cost Center', 'Application Masters',0, 1000, Current_TimeStamp, 'Approved', null, null, null, null, null, 0,0);

		</sql>
	</changeSet>

	
		<changeSet id="84" author="pruthvi">
		<sql>
Insert into REPORTCONFIGURATION (REPORTID,REPORTNAME,REPORTHEADING,PROMPTREQUIRED,REPORTJASPERNAME,DATASOURCENAME,SHOWTEMPLIBRARY,MENUITEMCODE,VERSION,
LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON,ALWMULTIFORMAT) values 
((select max(reportid+1) from reportconfiguration),'Loan Wise Voucher Details','Loan Wise Voucher Details',1,'LoanwiseVoucherDetails','pfsDatasource',1,'menu_Item_LoanwiseVoucherDetail',
2,1000,null,null,null,null,null,null,0,CURRENT_TIMESTAMP,0);


Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,
MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,
FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON) values 
((select reportid from reportconfiguration where menuitemcode='menu_Item_LoanwiseVoucherDetail'),1,'Post Date','DATERANGE','Post Date','PostDate',null,'---Select----',
null,null,0,0,0,0,1,1,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,CURRENT_TIMESTAMP);

Insert into REPORTFILTERFIELDS (REPORTID,FIELDID,FIELDNAME,FIELDTYPE,FIELDLABEL,FIELDDBNAME,APPUTILMETHODNAME,MODULENAME,LOVHIDDENFIELDMETHOD,LOVTEXTFIELDMETHOD,
MULTISELECTSEARCH,FIELDLENGTH,FIELDMAXVALUE,FIELDMINVALUE,SEQORDER,MANDATORY,FIELDCONSTRAINT,FIELDERRORMESSAGE,WHERECONDITION,STATICVALUE,FIELDWIDTH,
FILTERREQUIRED,DEFAULTFILTER,VERSION,LASTMNTBY,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,LASTMNTON) values 
((select reportid from reportconfiguration where menuitemcode='menu_Item_LoanwiseVoucherDetail'),2,'FinReference','TXT','Loan Reference','FinReference',null,null,null,
null,0,20,0,0,2,1,null,null,null,null,250,1,'%',4,1000,'Approved',null,null,null,null,null,0,CURRENT_TIMESTAMP);

	
update reportfilterfields set mandatory='0'
where reportid=(select reportid from reportconfiguration where menuitemcode='menu_Item_PaymentSchedule') and fieldid=1;

update reportfilterfields set mandatory='0'
where reportid=(select reportid from reportconfiguration where menuitemcode='menu_Item_LoanwiseVoucherDetail') and fieldid=1;

update reportfilterfields set filterrequired='0'
where reportid=(select reportid from reportconfiguration where menuitemcode='menu_Item_PaymentSchedule') and fieldid=2;

update reportfilterfields set filterrequired='0'
where reportid=(select reportid from reportconfiguration where menuitemcode='menu_Item_LoanwiseVoucherDetail') and fieldid=2;

update reportfilterfields set fielderrormessage='Finance Reference is Manadatory'
where reportid=(select reportid from reportconfiguration where menuitemcode='menu_Item_PaymentSchedule') and fieldid=2;

update reportfilterfields set fielderrormessage='Finance Reference is Manadatory'
where reportid=(select reportid from reportconfiguration where menuitemcode='menu_Item_LoanwiseVoucherDetail') and fieldid=2;
	</sql>
	</changeSet>

	
		<changeSet id="85" author="Amit">
		<createView replaceIfExists="true" viewName="RMTPROVINCEVSCITY_AVIEW">
  SELECT  T1.PCCountry, T2.CountryDesc LovDescPCCountryName, T1.PCProvince, T3.CPProvinceName LovDescPCProvinceName, T1.PCCity, T1.PCCityName,T1.PCCityClassification, T1.Version, 
                      T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.BankRefNo, T1.CityIsActive
				FROM         RMTProvinceVsCity  T1 INNER JOIN
			                      BMTCountries  T2 ON T1.PCCountry = T2.CountryCode INNER JOIN
			                      RMTCountryVsProvince  T3 ON T1.PCCountry = T3.CPCountry AND T1.PCProvince = T3.CPProvince


		</createView>
	</changeSet>
	<changeSet id="86" author="DDP">
		<sql>
		update errordetails set errormessage = 'Extended details should be matched with configured extended details in {0}.' where errorcode = '90265';
		</sql>
	</changeSet>	
	
	<changeSet id="87" author="Kesav">
		<createView viewName="FinTypePartnerBanks_AView" replaceIfExists="true">
			SELECT		T1.ID, T1.FinType, T1.Purpose, T1.PaymentMode, T1.PartnerBankID	, T1.Version , 
					  T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					  T2.PARTNERBANKCODE, T2.PARTNERBANKNAME
			FROM    	FinTypePartnerBanks_Temp  T1 
					   LEFT JOIN PartnerBanks T2  ON T1.PartnerBankID =  T2.PartnerBankID
		</createView>
	</changeSet>
	
	<changeSet id="88" author="Kesav">
		<createTable tableName="SeqFinTypePartnerBanks">
			<column name="SeqNo" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet id="89" author="Kesav">
		<createView viewName="FinTypePartnerBanks_View" replaceIfExists="true">
			SELECT		T1.ID, T1.FinType, T1.Purpose, T1.PaymentMode, T1.PartnerBankID	, T1.Version , 
					  T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					  T2.PARTNERBANKCODE, T2.PARTNERBANKNAME
			FROM    	FinTypePartnerBanks_Temp  T1 
					   LEFT JOIN PartnerBanks T2  ON T1.PartnerBankID =  T2.PartnerBankID
			UNION ALL

			SELECT		T1.ID, T1.FinType, T1.Purpose, T1.PaymentMode, T1.PartnerBankID, T1.Version, 
					  T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					  T2.PARTNERBANKCODE, T2.PARTNERBANKNAME
			FROM    	FinTypePartnerBanks  T1 
					  LEFT JOIN PartnerBanks T2  ON T1.PartnerBankID =  T2.PartnerBankID
			WHERE     NOT EXISTS (SELECT 1 FROM FinTypePartnerBanks_TEMP WHERE ID = T1.ID)
	</createView>
	</changeSet>
	<changeSet author="Irfan" id="90">
	
	<createTable tableName="PartnerBranchModes">
		<column name="PartnerBankId" type="bigint">
		<constraints nullable="false"/>
		</column>
		<column name="BranchCode" type="varchar(8)"/>
		<column name="PaymentMode" type="varchar(8)"/>
	</createTable>
</changeSet>
		
	<changeSet id="91" author="Amit">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'EmployerDetailDialog_empIsActive','EmployerDetailDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='EMPLOYERDETAIL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='EmployerDetailDialog_empIsActive'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		</sql>
		</changeSet>	

	<changeSet id="92" author="Kesav">
		<sql>
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_FinType');
			Delete from SecRights where RightName = 'FinTypePartnerBankDialog_FinType';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'FinTypePartnerBankDialog_FinType', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_FinType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_Purpose');
			Delete from SecRights where RightName = 'FinTypePartnerBankDialog_Purpose';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'FinTypePartnerBankDialog_Purpose', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_Purpose'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_PaymentMode');
			Delete from SecRights where RightName = 'FinTypePartnerBankDialog_PaymentMode';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'FinTypePartnerBankDialog_PaymentMode', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_PaymentMode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_PartnerBankID');
			Delete from SecRights where RightName = 'FinTypePartnerBankDialog_PartnerBankID';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'FinTypePartnerBankDialog_PartnerBankID', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'FinTypePartnerBankDialog_PartnerBankID'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnNew');
			Delete from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnNew';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_FinTypePartnerBankDialog_btnNew', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnEdit');
			Delete from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnEdit';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_FinTypePartnerBankDialog_btnEdit', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnDelete');
			Delete from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnDelete';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_FinTypePartnerBankDialog_btnDelete', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnSave');
			Delete from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnSave';
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_FinTypePartnerBankDialog_btnSave', 'FinTypePartnerBankDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_MAKER'), (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCETYPE_APPROVER'), (Select RightID from SecRights where RightName = 'button_FinTypePartnerBankDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);

		
		</sql>
		</changeSet>	

<changeSet id="93" author="pruthvi">
		<createView viewName="WIFFINANCEMAIN_AVIEW" replaceIfExists="true">
SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  
                     T7.FinTypeDesc lovDescFinTypeName, T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId,  T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.NextDepDate, T1.LastDepDate, T7.FinRvwRateApplFor,  T1.TotalRepayAmt, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.DownPayBank, T1.DownPaySupl, T1.GraceTerms, T1.GrcProfitDaysBasis, 
                      T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps,  T1.LinkedFinRef, T7.Product LovDescFinProduct, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, 
                      T1.RpyMaxRate,T1.ManualSchedule, T1.TakeOverFinance, 
                      T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T1.SupplementRent, T1.IncreasedCost, T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , 
		      T1.AlwMultiDisb, T1.BpiAmount, T1.DeductFeeDisb, T1.FeeChargeAmt,T1.RvwRateApplFor,T1.SchCalOnRvw,T1.PastduePftCalMthd,T1.PastduePftMargin,T1.DroppingMethod,T1.RateChgAnyDay
FROM          WIFFinanceMain T1 INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType
                       </createView>
                       </changeSet>
                       
          	<changeSet id="94" author="pruthvi">
		<createView viewName="WIFFINANCEMAIN_VIEW" replaceIfExists="true">             
  SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, T1.FinType, 
                      T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, T1.FinStartDate, 
                      T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  T15.CustCIF lovDescCustCIF, 
                     T7.FinTypeDesc lovDescFinTypeName, T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId, T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.DepreciationFrq, T1.FinCommitmentRef, T1.FinCurrAssetValue, T1.FinContractDate, T1.NextDepDate, 
                      T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,    
                        T7.FinRvwRateApplFor, 
                      T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, 
                      T1.EffectiveRateOfReturn, T1.DownPayBank, T1.DownPaySupl, T7.FinDivision LovDescFinDivisionName, T1.GraceTerms, 
                      T14.FacilityType, T15.CustShrtName lovDescCustShrtName, T16.BranchDesc lovDescFinBranchName,
                      T1.TotalGrossGrcPft, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps, 
                     T1.LinkedFinRef, T7. Product LovDescFinProduct, 
                      T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate,  T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
                      T1.RpyAdvMargin, T1.RpyAdvPftRate,T1.SupplementRent, T1.IncreasedCost, 
                     T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb, T1.BpiAmount, T1.DeductFeeDisb, T1.FeeChargeAmt,T1.RvwRateApplFor,T1.SchCalOnRvw,T1.PastduePftCalMthd,T1.PastduePftMargin,T1.DroppingMethod,T1.RateChgAnyDay
FROM          WIFFinanceMain_Temp T1 LEFT OUTER JOIN
                       WIFIndicativeTermDetail_Temp T14 ON T14.FinReference = T1.FinReference LEFT OUTER JOIN
                       Customers T15 ON T15.CustID = T1.CustID INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                       RMTBranches T16 ON T1.FinBranch = T16.BranchCode 
UNION ALL
SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, T1.FinType, 
                      T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, T1.FinStartDate, 
                      T1.FinAmount, T1.FinRepaymentAmount, T1.CustID, T1.Defferments, T1.PlanDeferCount, T1.FinIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,  T15.CustCIF lovDescCustCIF, 
                     T7.FinTypeDesc lovDescFinTypeName,T1.FinBranch, T1.FinSourceID, 
                      T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, T1.AvailedDefFrqChange, T7.FinMaxAmount lovDescFinMaxAmt, 
                      T7.FinMinAmount lovDescFinMinAmount, T7.FinIsAlwDifferment lovDescFinAlwDeferment, T1.MinDownpayPerc, 
                      T7.FinIsDwPayRequired lovDescDwnPayReq, T1.RecalType, T1.FinAssetValue, T7.FinMaxDifferment lovDescFinMaxDifferment, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, T1.DisbAccountId, T1.RepayAccountId, T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.RepayMargin, T1.GrcMargin, T1.DepreciationFrq, T1.FinCommitmentRef, T1.FinCurrAssetValue, T1.FinContractDate, T1.NextDepDate, 
                      T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount,    
                        T7.FinRvwRateApplFor,
                      T1.TotalRepayAmt, T1.ClosingStatus, T1.FinApprovedDate, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, 
                      T1.EffectiveRateOfReturn, T1.DownPayBank, T1.DownPaySupl, T7.FinDivision LovDescFinDivisionName, T1.GraceTerms, 
                      T14.FacilityType, T15.CustShrtName lovDescCustShrtName, T16.BranchDesc lovDescFinBranchName,
                      T1.TotalGrossGrcPft, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, T1.NoOfSteps, 
                     T1.LinkedFinRef, T7. Product LovDescFinProduct, 
                      T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
                      T1.RpyAdvMargin, T1.RpyAdvPftRate,T1.SupplementRent, T1.IncreasedCost, 
                       T1.feeAccountId, T1.TDSApplicable,T1.InsuranceAmt,T1.DeductInsDisb,
                      T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod ,  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb, T1.BpiAmount, T1.DeductFeeDisb, T1.FeeChargeAmt,T1.RvwRateApplFor,T1.SchCalOnRvw,T1.PastduePftCalMthd,T1.PastduePftMargin,T1.DroppingMethod,T1.RateChgAnyDay
FROM          WIFFinanceMain T1 LEFT OUTER JOIN
                       WIFIndicativeTermDetail_Temp T14 ON T14.FinReference = T1.FinReference LEFT OUTER JOIN
                       Customers T15 ON T15.CustID = T1.CustID INNER JOIN
                       RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                       RMTBranches T16 ON T1.FinBranch = T16.BranchCode 
                      WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          WIFFinanceMain_Temp
                            WHERE      (FinReference = T1.FinReference)))
                            </createView>
                            </changeSet>

<changeSet id="95" author="Irfan">
	<sql>
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_PartnerBankDialog_BranchCode','PartnerBankDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PARTNERBANK_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_PartnerBankDialog_BranchCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);	
	
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	
	</sql>

</changeSet>

<changeSet id="96" author="pruthvi">
             	<sql>
          DELETE FROM DATA_ENGINE_PROCESS_LOG;
DELETE FROM DATA_ENGINE_LOG;
DELETE FROM DATA_ENGINE_STATUS;

DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'GL_TRAIL_BALANCE_EXPORT'));
DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'GL_TRAIL_BALANCE_EXPORT');
DELETE FROM DATA_ENGINE_CONFIG where Name = 'GL_TRAIL_BALANCE_EXPORT';

INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'GL_TRAIL_BALANCE_EXPORT', 'SAP GL Trail Balance Report', 2, NULL, NULL, NULL, ',' , 0, 0, 'PARENT GROUP,LEDGER,DESCRIPTION,OPENING BALANCE,CR/DR,DEBIT AMOUNT,CREDIT AMOUNT,CLOSING BALANCE,CR/DR', 'Row:{, ${COMPANY_NAME}}Row:{, ${REPORT_NAME}}Row:{, ${TRANSACTION_DURATION}}Row:{Currency: ${CURRENCY}', NULL, 'A', 'D:\Data-Engine\PFF\Bajaj\SAPGL\Request', 'TRIAL_BALANCE_', '.CSV', 0, NULL, '${START_DATE}, _${END_DATE},_${HEADER_ID}', NULL, 0, NULL, 1, 1);
 
INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT'), 'DE_GL_TRAIL_BAL_REPORT_VIEW',  0, 'HEADERID', 'HEADERID=:HEADERID', NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
 
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'ACTYPEGRPID',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'HOSTACCOUNT',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'DESCRIPTION',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'OPENINGBAL',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'OPENINGBALTYPE',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'DEBITAMOUNT',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'CREDITAMOUNT',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'CLOSINGBAL',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAIL_BAL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRAIL_BALANCE_EXPORT')), 	'CLOSINGBALTYPE',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);

UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
UPDATE SEQ_DATA_ENGINE_STATUS SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_STATUS);

DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'GL_TRANSACTION_EXPORT'));
DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'GL_TRANSACTION_EXPORT');
DELETE FROM DATA_ENGINE_CONFIG where Name = 'GL_TRANSACTION_EXPORT';

INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'GL_TRANSACTION_EXPORT', 'Transaction Detail Report', 2, NULL, NULL, NULL, ',' , 0, 0, NULL, 'LINK, BSCHL, HKONT, UMSKZ, WRBTR, GSBER, BUPLA, KOSTL, PRCTR, ZUONR, SGTXT',  NULL, 'A', 'D:\Data-Engine\PFF\Bajaj\SAPGL\Request', 'CF_SAP_GL_REPORT_LINE', '.CSV', 0, NULL, NULL, NULL, 0, NULL, 1, 1);
 
INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT'), 'DE_GL_TRAN_DETAIL_REPORT_VIEW',  0, 'ID', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
 
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'LINK',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'BSCHL',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'HKONT',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'UMSKZ',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'WRBTR',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'GSBER',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'BUPLA',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'KOSTL',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'PRCTR',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'ZUONR',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'DE_GL_TRAN_DETAIL_REPORT_VIEW' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_EXPORT')), 	'SGTXT',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);

UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
UPDATE SEQ_DATA_ENGINE_STATUS SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_STATUS);


DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'GL_TRANSACTION_SUMMARY_EXPORT'));
DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'GL_TRANSACTION_SUMMARY_EXPORT');
DELETE FROM DATA_ENGINE_CONFIG where Name = 'GL_TRANSACTION_SUMMARY_EXPORT';

INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'GL_TRANSACTION_SUMMARY_EXPORT', 'Transaction Summary Report', 2, NULL, NULL, NULL, ',' , 0, 0, NULL, 'LINK, BLDAT, BLART, BUKRS, BUDAT, MONAT, CURRCY, XBLNR, BKTXT',  NULL, 'A', 'D:\Data-Engine\PFF\Bajaj\SAPGL\Request', 'CF_SAP_GL_REPORT_HDR', '.CSV', 0, NULL, NULL, NULL, 0, NULL, 1, 1);
 
INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT'), 'SAPGL_TRAN_SUMMARY_REPORT',  0, 'ID', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
 
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'LINK',			0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'BLDAT',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd.MM.yyyy');
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'BLART',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'BUKRS',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'BUDAT',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd.MM.yyyy');
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'MONAT',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'CURRCY',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'XBLNR',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);
INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'SAPGL_TRAN_SUMMARY_REPORT' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'GL_TRANSACTION_SUMMARY_EXPORT')), 	'BKTXT',		0, 'N', NULL, NULL,	NULL, NULL, 0, NULL, NULL, NULL, NULL);


UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
UPDATE SEQ_DATA_ENGINE_STATUS SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_STATUS);
             	
             	</sql>
             	</changeSet>
     	<changeSet id="97" author="pruthvi">
		<createView viewName="GL_TRAIL_BALANCE_REPORT_VIEW" replaceIfExists="true"> 
		SELECT AT.ACTYPEGRPID, A.ACCOUNTID HOSTACCOUNT, AT.ACTYPEDESC DESCRIPTION, COALESCE(T.CLOSINGBAL, 0) OPENINGBAL, COALESCE(CLOSINGBALTYPE, ' ') OPENINGBALTYPE, COALESCE(DEBITAMOUNT,0) DEBITAMOUNT, COALESCE(CREDITAMOUNT, 0) CREDITAMOUNT, 
COALESCE(A.ACTODAYBAL,0) CLOSINGBAL, CASE WHEN A.ACTODAYBAL > 0 THEN 'CR' ELSE 'DR' END CLOSINGBALTYPE
FROM (SELECT DISTINCT HKONT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE) GL
INNER JOIN ACCOUNTMAPPING AM ON AM.HOSTACCOUNT = GL.HKONT
INNER JOIN ACCOUNTS A ON A.ACCOUNTID = AM.ACCOUNT
INNER JOIN RMTACCOUNTTYPES AT ON AT.ACTYPE = A.ACTYPE
LEFT JOIN (SELECT BSCHL, HKONT, SUM(WRBTR) DEBITAMOUNT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE GROUP BY BSCHL, HKONT) DEBIT ON DEBIT.HKONT=AM.HOSTACCOUNT AND DEBIT.BSCHL = 40
LEFT JOIN (SELECT BSCHL, HKONT, SUM(WRBTR) CREDITAMOUNT FROM SAPGL_TRAN_DETAIL_REPORT_STAGE GROUP BY BSCHL, HKONT) CREDIT ON CREDIT.HKONT=AM.HOSTACCOUNT AND CREDIT.BSCHL = 50 
LEFT JOIN (SELECT ACTYPEGRPID, HOSTACCOUNT, CLOSINGBAL, CLOSINGBALTYPE FROM SAPGL_TRAIL_BALANCE_REPORT BR
INNER JOIN (SELECT ID from SAPGL_TRAIL_BALANCE_HEADER where ID = (select MAX(ID)-1 from SAPGL_TRAIL_BALANCE_HEADER)) BH ON BH.ID = BR.HEADERID) T ON T.ACTYPEGRPID = AT.ACTYPEGRPID AND T.HOSTACCOUNT = A.ACCOUNTID
		</createView>
		</changeSet>
		    	<changeSet id="98" author="pruthvi">
		<createView viewName="DE_GL_TRAN_DETAIL_REPORT_VIEW" replaceIfExists="true">
		SELECT ID,DR.LINK,BSCHL,HKONT,UMSKZ,WRBTR/CCYMINORCCYUNITS WRBTR ,GSBER,BUPLA,KOSTL,PRCTR,ZUONR,SGTXT
FROM SAPGL_TRAN_DETAIL_REPORT DR
INNER JOIN SAPGL_TRAN_SUMMARY_REPORT SR ON SR.LINK = DR.LINK
INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = SR.CURRCY
ORDER BY LINK
		</createView>
		</changeSet>
		
			<changeSet id="99" author="pruthvi">
		<createView viewName="DE_GL_TRAIL_BAL_REPORT_VIEW" replaceIfExists="true">
		SELECT HEADERID, ACTYPEGRPID, HOSTACCOUNT, DESCRIPTION, OPENINGBAL/CCYMINORCCYUNITS OPENINGBAL, OPENINGBALTYPE, DEBITAMOUNT/CCYMINORCCYUNITS DEBITAMOUNT, CREDITAMOUNT/CCYMINORCCYUNITS CREDITAMOUNT, CLOSINGBAL/CCYMINORCCYUNITS CLOSINGBAL ,CLOSINGBALTYPE
FROM SAPGL_TRAIL_BALANCE_REPORT TBR 
INNER JOIN SAPGL_TRAIL_BALANCE_HEADER TBH ON TBH.ID = TBR.HEADERID
INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = TBH.CURRENCY
			</createView>
		</changeSet>
					<changeSet id="100" author="pruthvi">
					<sql>
					DELETE FROM  SMTPARAMETERS WHERE SYSPARMCODE IN ('SAPGL_LAST_RUN_YEAR', 'SAPGL_LAST_RUN_MONTH', 'SAPGL_TRAN_RECORD_COUNT', 'UMSKZ', 'KOSTL', 'PRCTR', 'GSBER', 'BUPLA', 'BLART', 'BUKRS', 'SAPGL_TBR_COMPANY');
INSERT INTO SMTPARAMETERS VALUES ('SAPGL_LAST_RUN_YEAR',      'SAP GL Last Execution Year',       		'int',  		1,  '2017',   				'10', 	0, NULL, NULL, 'SAP GL Last Execution Year',			1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('SAPGL_LAST_RUN_MONTH',     'SAP GL Last Execution Month',      		'int',  		1,  '01',     				'10', 	0, NULL, NULL, 'SAP GL Last Execution Month',			1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('SAPGL_TRAN_RECORD_COUNT',  'SAP GL Transaction Record Count',  		'int',  		1,  '1000',   				'10', 	0, NULL, NULL, 'SAP GL Transaction Record Count',		1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('UMSKZ',                    'SAPGL DETAIL REPORT CONSTANT',     		'int',  		1,  '/',      				'10', 	0, NULL, NULL, 'SAPGL DETAIL REPORT CONSTANT',			1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('KOSTL',                    'SAPGL SAP Cost Center',            		'int',  		1,  '/',      				'10', 	0, NULL, NULL, 'SAPGL DETAIL REPORT CONSTANT',			1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('PRCTR',                    'SAPGL SAP Profit Center',          		'int',  		1,  '/',      				'10', 	0, NULL, NULL, 'SAPGL DETAIL REPORT CONSTANT',			1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('GSBER',                    'Business Area',                    		'String',  		1,  'GSBER',  				'10', 	0, NULL, NULL, 'Business Area',							1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('BUPLA',                    'Business Unit',                    		'String',  		1,  'BUPLA',  				'10', 	0, NULL, NULL, 'Business Unit',							1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('BLART',                    'BLART',                    		  		'String',  		1,  'ZC',					'10', 	0, NULL, NULL, 'BLART',									1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('BUKRS',                    'BUKRS',                    		  		'String',  		1,  'BAFL',					'10', 	0, NULL, NULL, 'BUKRS',									1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
INSERT INTO SMTPARAMETERS VALUES ('SAPGL_TBR_COMPANY',        'SAP GL Trail Balance Report Company',   	'String',      	1,  'BAJAJ FINANCE LTD',	'100', 	0, NULL, NULL, 'SAP GL Trail Balance Report Company',	1,1000,	CURRENT_TIMESTAMP,	'Approved'	,NULL,	NULL,	NULL,	NULL,	NULL,	0);
					
					</sql>
					</changeSet>
					
					
<changeSet id="101" author="Durgaprasad G">
  <dropTable tableName="PresentmentDetails"/>
</changeSet>

<changeSet id="102" author="Durgaprasad G">
		<createTable tableName="PresentmentDetails">
			<column name="DetailID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="ExtractID " type="bigint">
				<constraints  nullable="false" />
			</column>
			<column name="PresentmentID" type="bigint"/>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="SchDate" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="MandateID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SchAmtDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchPriDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchPftDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchFeeDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchInsDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchPenaltyDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="AdvanceAmt" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="ExcessID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="AdviseAmt" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="PresentmentAmt" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="ExcludeReason" type="int">
				<constraints nullable="false" />
			</column>
			<column name="BounceID" type="bigint"/>
			<column name="Status" type="int">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
</changeSet>
	
	<changeSet id="103" author="Kesav">
		<createView viewName="PartnerBankModes_AView" replaceIfExists="true">
			SELECT		T1.PartnerBankId, T1.Purpose, T1.PaymentMode,
						T2.PARTNERBANKCODE, T2.PARTNERBANKNAME
			FROM    	PARTNERBANKMODES  T1 
						INNER JOIN PartnerBanks T2  ON T1.PartnerBankID =  T2.PartnerBankID
		</createView>
	</changeSet>

		<changeSet id="104" author="prasad">
		<sql>
		delete from manualadvise;
		</sql>
	</changeSet>
	<changeSet id="105" author="prasad">
		<modifyDataType tableName="manualadvise" columnName="Finreference"
			newDataType="varchar(20)" />
	</changeSet>
	<changeSet id="106" author="Surekha">
		<createView replaceIfExists="true" viewName="INT_DISBURSEMENT_EXPORT_VIEW">
  		SELECT DISB.PAYMENTTYPE, FM.CUSTID, DISB.BENEFICIARYACCNO, DISB.AMTTOBERELEASED/100 AS AMTTOBERELEASED, DISB.BENEFICIARYNAME, DISB.LIABILITYHOLDNAME, DISB.PAYABLELOC, '' BENEFICIARYCITY, DISB.PRINTINGLOC,
		'' ADDRESS1,'' ADDRESS2, '' ADDRESS3, '' ADDRESS4, ''ADDRESS5, DISB.PAYMENTID, DISB.FINREFERENCE, 'bafl@bajajfinserve.com' BAFLMAILID,
		'' PAYMENTDETAILS1,'' PAYMENTDETAILS2, '' PAYMENTDETAILS3, '' PAYMENTDETAILS4, '' PAYMENTDETAILS5, '' PAYMENTDETAILS6, '' PAYMENTDETAILS7,
		DISB.LLREFERENCENO, DISB.LLDATE, DISB.LLDATE FromDate, DISB.LLDATE ToDate, BANK.BANKCODE, BANK.BANKNAME, BRANCH.MICR, BRANCH.IFSC, BRANCH.BRANCHCODE, BRANCH.BRANCHDESC, CITY.PCCITYNAME, CPPROVINCENAME,
		DISB.PHONECOUNTRYCODE||DISB.PHONEAREACODE||DISB.PHONENUMBER AS BENEFICIARY_MOBILE,  BNY.EMAIL BENEFICIARY_EMAIL, CM.CUSTEMAIL CUSTOMER_EMAIL,
		PB.PARTNERBANKID, PB.PARTNERBANKCODE, PB.PARTNERBANKNAME, '' DDCHARGES, FM.FINTYPE, DISB.REMARKS, CU.CUSTSHRTNAME
		FROM  FINADVANCEPAYMENTS DISB
		INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = DISB.PARTNERBANKID
		INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = DISB.FINREFERENCE
		INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
		LEFT OUTER JOIN CUSTOMEREMAILS CM ON CM.CUSTID = CU.CUSTID AND CUSTEMAILPRIORITY = 3
		LEFT OUTER  JOIN BANKBRANCHES BRANCH ON BRANCH.BANKBRANCHID = DISB.BANKBRANCHID 
		LEFT OUTER  JOIN BMTBANKDETAIL BANK ON BANK.BANKCODE = BRANCH.BANKCODE
		left outer join BENEFICIARY BNY on BNY.ACCNUMBER = DISB.BENEFICIARYACCNO
		left outer join RMTPROVINCEVSCITY CITY on CITY.PCCITY = BRANCH.CITY
		left outer join RMTCOUNTRYVSPROVINCE STATE on STATE.CPPROVINCE = CITY.PCPROVINCE
		WHERE DISB.STATUS='APPROVED'
		</createView>
	</changeSet>
	<changeSet id="107.1" author="prasad">
		<sql>
		delete from manualadvise;
		</sql>
	</changeSet>
		<changeSet id="107" author="prasad">
		<modifyDataType tableName="ManualAdvise_Temp" columnName="Finreference"
			newDataType="varchar(20)" />
	</changeSet>
	<changeSet id="108" author="Prasad">
		<createView replaceIfExists="true" viewName="RPT_SOA_LOAN_VIEW">
  		Select FM.FinReference,FM.finamount/100 LoanAmount,
		   FM.RepayBaseRate PLRRate,FM.repaymargin Variance,FM.EffectiveRateOfReturn IRR,FM.RepayProfitRate ROI,
		   FP.noinst Tenure,(TotalPriPaid + TotalPftPaid)/100 EMIReceived,
		   0.00 PreferredCardLimit,(PRVRPYSCHPRI + PRVRPYSCHPFT)/100 PrevInstAmt,
		   FM.RepayRateBasis intRateType,FD.disbdate LastDisbursalDate,
		   FP.FirstRepayDate FirstDueDate,FP.MaturityDate EndInstallmentDate,
		   '0.00/ 0' AdvInstAmt,FP.FinIsActive Status,(totalPriBal+TotalPftBal)/100 FutureInstAmt,
		   NOInst-NOPaidInst FutureInstNo,totalPriBal/100 FuturePriComponent,TotalPftBal/100 Future_inst_comp,
		   FR.PenaltyPaid Charge_coll_cust,
		   Actualamount/100 Upfront_int_cust,	0 Int_paid_Dealer_upfront,BPIAMOUNT Pre_emi_Int_Paid,
		   '' Repo_Status,'' Repo_Date,'' Sale_Date,'' Release_Date,FM.MaturityDate Closure_Date
	From FinanceMain FM inner join
		 FinPftDetails FP on FP.FinReference = FM.FinReference inner join
		 (Select FinReference,MAX(DisbDate)disbdate from FinDisbursementDetails
		  group by FinReference) FD on FP.FinReference = FD.FinReference left join
		  ( Select FinReference,SUM(PenaltyPaid) PenaltyPaid from FinODCRecovery
		 group by FinReference) FR on FR.FinReference = FP.FinReference left join
	   ( Select finreference,sum(Actualamount)Actualamount from finfeedetail 
	   where finevent in ('ADDDBSP','ADDDBSF') group by finreference )FF on FF.FinReference = FP.FinReference
		</createView>
	</changeSet>
	<changeSet id="109" author="Prasad">
		<createView replaceIfExists="true" viewName="RPT_SOA_CUSTOMER_VIEW">
  		Select  T1.FinReference,T1.FinPurpose,T1.Finstartdate,t4.branchdesc FinBranch,productdesc FinType,'' Interest_Type,T1.ApplicationNo Linked_Agreement_No,
		'' Closed_Linked_Agree_No,T.CustFName,T.CustMName,
		CustLName,T.CustCIF,t.CustID,CustAddrHNbr,CustFlatNbr,CustAddrStreet,
		CustPOBox,CustAddrCity,CustAddrProvince,CustAddrCountry,''PropertyDetails,''PropertyAddress,PhoneCountryCode,
		PhoneAreaCode,T.PhoneNumber ,CustEMail,ActiveCnt,CloseCnt,Tot from (
		Select CustFName,CustMName,CustLName,CustCIF,t1.CustID,CustAddrHNbr,CustFlatNbr,CustAddrStreet,
		CustPOBox,CustAddrCity,CustAddrProvince,CustAddrCountry,PhoneCountryCode,
		PhoneAreaCode,T3.PhoneNumber ,CustEMail,ActiveCnt,CloseCnt,ActiveCnt+coalesce(CloseCnt,0) Tot
		from Customers T1 Left join
		CustomerAddresses T2 ON t1.CustID =T2.CustID and t2.custAddrPriority=5 Left join
		CustomerPhoneNumbers T3 ON t1.CustID =T3.PhoneCustID  and PHONETYPEPRIORITY=5 Left join
		CustomerEMails T4 on T4.CustID =T1.CustID and CustEmailPriority=5 Left join
		(Select CustID,COUNT(*)ActiveCnt from FinPftDetails
		where (FinIsActive=1) group by CustID)T5 ON T1.CustID =T5.CustID  Left join
		(Select CustID,COUNT(*)CloseCnt from FinPftDetails
		where (FinIsActive!=1)group by CustID)T6 ON T1.CustID =T6.CustID)T Left join
		FinanceMain T1 on T.CustID=T1.CustID inner join
		RMTFinanceTypes T2 on T1.FinType =T2.FinType inner join
	  BMTProduct T3 on T3.ProductCode =T2.FinCategory inner join
	  RMTBRANCHES T4 on T4.branchcode = T1.FinBranch
		</createView>
	</changeSet>
	<changeSet id="110" author="Prasad">
		<createView replaceIfExists="true" viewName="RPT_SOA_FINSMRY_VIEW">
  		Select FinReference,'Instalment Amount' comp,(TdSchdPft+TdSchdPri) due,
			(TdSchdPriPaid+TdSchdPftPaid) Receipt from FinPftDetails union all
	Select FinReference,'Principal Component' comp,	TdSchdPri due,
	TdSchdPriPaid Receipt from FinPftDetails  union all
	Select FinReference,'Interest Component' comp,TdSchdPft due,
	TdSchdPftPaid Receipt from FinPftDetails  union all
	Select FinReference,'Late Payment Penalty' comp,PenaltyDue due,
	PenaltyPaid Receipt from FinPftDetails union all
	Select FinReference,'Bounce Charges' comp,0 due,
	0 Receipt from FinPftDetails union all
  Select Finreference,'Other Receivables' comp, Sum(AdviseAmount) due,Sum(PaidAmount) Receipt
  from manualadvise where advisetype=1 
  group by Finreference union all
   Select Finreference,'Unadjusted Amount' comp,SUM(Amount)due,sum(utilisedamt) from finexcessamount
   group by Finreference union all
    Select Finreference,'Other Payables' comp, Sum(AdviseAmount) due,Sum(PaidAmount) Receipt
  from manualadvise where advisetype=2
  group by Finreference 
		</createView>
	</changeSet>
	<changeSet id="111" author="Prasad">
		<createView replaceIfExists="true" viewName="RPT_SOA_TXNDETAILS_VIEW">
  		 Select p.LinkedTranId,p.PostDate,p.TransOrder,p.finReference,p.TranDesc,p.PostAmount DEBITS,0 CREDITS 
		  from Postings p inner join 
		       accounts A on a.accountid = P.account  inner join 
		       rmtAccounttypes AT on AT.actype = A.actype
		  where AT.custsysac=0 and DrOrCr='D' and p.PostAmount!=0  union
		  Select p.LinkedTranId,p.PostDate,p.TransOrder,p.finReference,p.TranDesc,0 DEBITS,p.PostAmount CREDITS 
		  from Postings p inner join 
		       accounts A on a.accountid = P.account inner join 
		       rmtAccounttypes AT on AT.actype = A.actype
		  where AT.custsysac=0 and DrOrCr='C' and p.PostAmount!=0
		</createView>
	</changeSet>
	
<!-- 	<changeSet id="112" author="durgaprasad G">
		<dropTable tableName="SeqPresentmentDetailRef" />
	</changeSet> -->
	
	<changeSet id="113" author="durgaprasad G">
		<createTable tableName="SeqPresentmentDetailRef">
			<column name="SEQNO" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="114" author="durgaprasad G">
		<sql>
			Insert into SeqPresentmentDetailRef values (0);
		</sql>
	</changeSet>
	
					
<changeSet id="115" author="Durgaprasad G">
  <dropTable tableName="PresentmentDetails"/>
</changeSet>

<changeSet id="116" author="Durgaprasad G">
		<createTable tableName="PresentmentDetails">
			<column name="DetailID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="ExtractID " type="bigint">
				<constraints  nullable="false" />
			</column>
			<column name="PresentmentID" type="bigint"/>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="SchDate" type="datetime">
				<constraints nullable="false" />
			</column>
			<column name="MandateID" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SchAmtDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchPriDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchPftDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchFeeDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchInsDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="SchPenaltyDue" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="AdvanceAmt" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="ExcessID" type="bigint"/>
			<column name="AdviseAmt" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="PresentmentAmt" type="decimal(18,0)">
				<constraints nullable="false" />
			</column>
			<column name="ExcludeReason" type="int">
				<constraints nullable="false" />
			</column>
			<column name="BounceID" type="bigint"/>
			<column name="Status" type="int">
				<constraints nullable="false" />
			</column>
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
</changeSet>
	
	
	<changeSet id="117" author="durgaprasad G">
		<createTable tableName="SeqPresentmentDetails">
			<column name="SEQNO" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="118" author="durgaprasad G">
		<sql>
			Insert into SeqPresentmentDetails values (0);
		</sql>
	</changeSet>
	<changeSet id="119" author="Irfan">
	<renameColumn tableName="FeeTypes" oldColumnName="AccountingSetId" newColumnName="AccountSetId"/>
</changeSet>
<changeSet id="120" author="Irfan">
	<renameColumn tableName="FeeTypes_Temp" oldColumnName="AccountingSetId" newColumnName="AccountSetId"/>
</changeSet>


<changeSet id="121" author="Irfan">
	<createView viewName="FeeTypes_AView" replaceIfExists="true">
		  SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountSetId, T1.Active,		
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode,
            T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.ACCOUNTSETCODE, T2.ACCOUNTSETCODENAME
			FROM    	FeeTypes  T1
         LEFT JOIN RMTACCOUNTINGSET T2 ON T1.AccountSetId = T2.ACCOUNTSETID    
	
	
	</createView>

</changeSet>

<changeSet id="122" author="Irfan">
	<createView viewName="FeeTypes_TView" replaceIfExists="true">
	  SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountSetId, T1.Active,		
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
            T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
            T2.ACCOUNTSETCODE, T2.ACCOUNTSETCODENAME
			FROM    	FeeTypes_Temp  T1
               LEFT JOIN RMTACCOUNTINGSET T2 ON T1.AccountSetId = T2.ACCOUNTSETID     
	
	
	</createView>

</changeSet>
<changeSet id="123" author="Irfan">
	<createView viewName="FeeTypes_View" replaceIfExists="true">
	  
   SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountSetId, T1.Active,		
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
            T1.NextTaskId, T1.RecordType, T1.WorkflowId,
                        T2.ACCOUNTSETCODE, T2.ACCOUNTSETCODENAME
			FROM    	FeeTypes_Temp  T1 
  		 LEFT JOIN RMTACCOUNTINGSET T2 ON T1.AccountSetId = T2.ACCOUNTSETID     
			UNION ALL

			SELECT		T1.FeeTypeID, T1.FeeTypeCode, T1.FeeTypeDesc, T1.ApplicableFor, T1.AccountSetId, T1.Active,	
						T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
            T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
            T2.ACCOUNTSETCODE, T2.ACCOUNTSETCODENAME
			FROM    	FeeTypes  T1 
			  		 LEFT JOIN RMTACCOUNTINGSET T2 ON T1.AccountSetId = T2.ACCOUNTSETID     
			WHERE     	NOT EXISTS (SELECT 1 FROM FeeTypes_TEMP WHERE FeeTypeID = T1.FeeTypeID)

	
	</createView>

</changeSet>
<changeSet id="125" author="chaitanya.ch">
	<addColumn tableName="RMTFinanceTypes_Temp" >
		<column name="ProfitCenterID" type = "bigint"></column>
	</addColumn>
</changeSet>
	
<changeSet id="126" author="chaitanya.ch">
	<createView viewName="RMTFINANCETYPES_AVIEW" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
				           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
						   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension,  T1.EqualRepayment, T1.FinRateType,
						   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
				           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
						   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
						   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
						   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
						   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
						   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
						   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
						   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
				           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinIsIntCpzAtGrcEnd,
						   T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
						   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
				           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
				           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
				           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
				           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,
						   T1.FinCommitmentOvrride, T1.FinCollateralOvrride, 
				           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
						   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
						   T49.AcTypeDesc lovDescFinSuspAcTypeName,T1.Product, T1.StartDate, T1.EndDate,
						   T1.AllowDownpayPgm, T1.Remarks, 
						   T1.AlwEarlyPayMethods,T1.PastduePftCalMthd,T1.PastduePftMargin, 
						   T1.AlwAdvanceRent, T1.GrcAdvBaseRate, 
				           T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate,  
				           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
						   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
						   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
						   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
						   T1.RateChgAnyDay, T1.FinRepayPftOnFrq,
						    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
							T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, 
							T1.AlwdRpyMethods, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwReage,
							T1.AlwUnPlanEmiHoliday,T1.AlwMaxDisbCheckReq, T1.FinTypeDesc lovDescPromoFinTypeDesc, T3.ProductDesc lovDescProductCodeDesc,T3.ProductCategory 
				FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
				           BMTProduct T3 ON T1.FinCategory = T3.ProductCode LEFT OUTER JOIN
				           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
				           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
				           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
				           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
				           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
				           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
				           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
				           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
				           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
				           Rules T68 ON T1.RpyPricingMethod = T68.RuleId LEFT OUTER JOIN 
                   ProfitCenters T69 ON T1.ProfitCenterID = T1.ProfitCenterID
	</createView>
</changeSet>	
<changeSet id="127" author="chaitanya.ch">
	<createView viewName="RMTFINANCETYPES_AVIEW" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
				           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
						   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension,  T1.EqualRepayment, T1.FinRateType,
						   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
				           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
						   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
						   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
						   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
						   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
						   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
						   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
						   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
				           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinIsIntCpzAtGrcEnd,
						   T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
						   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
				           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
				           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
				           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
				           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,
						   T1.FinCommitmentOvrride, T1.FinCollateralOvrride, 
				           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
						   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
						   T49.AcTypeDesc lovDescFinSuspAcTypeName,T1.Product, T1.StartDate, T1.EndDate,
						   T1.AllowDownpayPgm, T1.Remarks, 
						   T1.AlwEarlyPayMethods,T1.PastduePftCalMthd,T1.PastduePftMargin, 
						   T1.AlwAdvanceRent, T1.GrcAdvBaseRate, 
				           T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate,  
				           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
						   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
						   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
						   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
						   T1.RateChgAnyDay, T1.FinRepayPftOnFrq,
						    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
							T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, 
							T1.AlwdRpyMethods, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwReage,
							T1.AlwUnPlanEmiHoliday,T1.AlwMaxDisbCheckReq, T1.FinTypeDesc lovDescPromoFinTypeDesc, T3.ProductDesc lovDescProductCodeDesc,T3.ProductCategory,
							T1.ProfitCenterID, T69.ProfitCenterCode, T69.ProfitCenterDesc  
				FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
				           BMTProduct T3 ON T1.FinCategory = T3.ProductCode LEFT OUTER JOIN
				           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
				           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
				           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
				           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
				           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
				           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
				           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
				           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
				           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
				           Rules T68 ON T1.RpyPricingMethod = T68.RuleId LEFT OUTER JOIN 
                   ProfitCenters T69 ON T1.ProfitCenterID = T1.ProfitCenterID
	</createView>
</changeSet>	

<changeSet id="128" author="chaitanya.ch">
	<createView viewName="RMTFINANCETYPES_VIEW" replaceIfExists="true">
	
   SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate,T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					   T1.AllowDownpayPgm, T1.FinTypeDesc lovDescPromoFinTypeDesc, 
			          T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					  T1.AlwAdvanceRent, T1.GrcAdvBaseRate,T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory , T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday,
							T1.ProfitCenterID, T69.ProfitCenterCode, T69.ProfitCenterDesc  

			FROM       RMTFinanceTypes_Temp T1 LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId LEFT OUTER JOIN 
                   ProfitCenters T69 ON T1.ProfitCenterID = T1.ProfitCenterID
			UNION ALL
			SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName, 
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired, T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					  T1.AllowDownpayPgm, T1.FinTypeDesc lovDescPromoFinTypeDesc, T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					   T1.AlwAdvanceRent, T1.GrcAdvBaseRate,  T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory ,T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday,
							T1.ProfitCenterID, T69.ProfitCenterCode, T69.ProfitCenterDesc  

			FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId LEFT OUTER JOIN 
                   ProfitCenters T69 ON T1.ProfitCenterID = T1.ProfitCenterID
			WHERE     (NOT EXISTS
			                          (SELECT     1 Expr1
			                            FROM          RMTFinanceTypes_Temp
			                            WHERE      (FinType = T1.FinType)))
	
	</createView>



</changeSet>
<changeSet id="129" author="Irfan">
	<sql>
	Update FeeTypes set ApplicableFor=1 where ApplicableFor IS NULL;
	Update FeeTypes set ApplicableFor=1 where ApplicableFor IS NULL;
	Update FeeTypes set AccountSetId=1000 where AccountSetId IS NULL;
	Update FeeTypes set AccountSetId=1000 where AccountSetId IS NULL;
	
	Update FeeTypes_Temp set ApplicableFor=1 where ApplicableFor IS NULL;
	Update FeeTypes_Temp set ApplicableFor=1 where ApplicableFor IS NULL;
	Update FeeTypes_Temp set AccountSetId=1000 where AccountSetId IS NULL;
	Update FeeTypes_Temp set AccountSetId=1000 where AccountSetId IS NULL;
	</sql>
</changeSet>
<changeSet id="130" author="Irfan">
	<sql>
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'FeeTypeDialog_ApplicableFor','FeeTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
	INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'FeeTypeDialog_AccountSetId','FeeTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 

	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FEETYPE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeTypeDialog_ApplicableFor'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);																
	INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FEETYPE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeTypeDialog_AccountSetId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);			
	
	UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	</sql>

</changeSet>

<changeSet id="131" author="chaitanya.ch">
	<createView viewName="RMTFINANCETYPES_AVIEW" replaceIfExists="true">
		SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
				           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
						   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension,  T1.EqualRepayment, T1.FinRateType,
						   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
				           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
						   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
						   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
						   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
						   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
						   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
						   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
						   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
				           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinIsIntCpzAtGrcEnd,
						   T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
						   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
				           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
				           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
				           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
				           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,
						   T1.FinCommitmentOvrride, T1.FinCollateralOvrride, 
				           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
						   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
						   T49.AcTypeDesc lovDescFinSuspAcTypeName,T1.Product, T1.StartDate, T1.EndDate,
						   T1.AllowDownpayPgm, T1.Remarks, 
						   T1.AlwEarlyPayMethods,T1.PastduePftCalMthd,T1.PastduePftMargin, 
						   T1.AlwAdvanceRent, T1.GrcAdvBaseRate, 
				           T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate,  
				           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
						   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
						   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
						   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
						   T1.RateChgAnyDay, T1.FinRepayPftOnFrq,
						    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
							T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, 
							T1.AlwdRpyMethods, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwReage,
							T1.AlwUnPlanEmiHoliday,T1.AlwMaxDisbCheckReq, T1.FinTypeDesc lovDescPromoFinTypeDesc, T3.ProductDesc lovDescProductCodeDesc,T3.ProductCategory,
							T1.ProfitCenterID, T69.ProfitCenterCode, T69.ProfitCenterDesc  
				FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
				           BMTProduct T3 ON T1.FinCategory = T3.ProductCode LEFT OUTER JOIN
				           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
				           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
				           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
				           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
				           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
				           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
				           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
				           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
				           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
				           Rules T68 ON T1.RpyPricingMethod = T68.RuleId LEFT OUTER JOIN 
                  		   ProfitCenters T69 ON T69.ProfitCenterID = T1.ProfitCenterID
	</createView>
</changeSet>	

<changeSet id="132" author="chaitanya.ch">
	<createView viewName="RMTFINANCETYPES_VIEW" replaceIfExists="true">
	
   SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName,
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate,T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired,T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					   T1.AllowDownpayPgm, T1.FinTypeDesc lovDescPromoFinTypeDesc, 
			          T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					  T1.AlwAdvanceRent, T1.GrcAdvBaseRate,T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory , T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday,
							T1.ProfitCenterID, T69.ProfitCenterCode, T69.ProfitCenterDesc  

			FROM       RMTFinanceTypes_Temp T1 LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId LEFT OUTER JOIN 
                       ProfitCenters T69 ON T69.ProfitCenterID = T1.ProfitCenterID
			UNION ALL
			SELECT     T1.FinType, T1.FinCategory, T1.FinTypeDesc, T1.FinCcy, T1.FinDaysCalType, T1.FinAcType, T1.FinContingentAcType,
			           T1.FinIsGenRef, T1.FinMaxAmount, T1.FinMinAmount, T1.FinIsOpenNewFinAc, T1.FinDftStmtFrq, T1.FinIsAlwMD,
					   T1.FinSchdMthd, T1.FInIsAlwGrace, T1.FinHistRetension, T1.EqualRepayment, T1.FinRateType,
					   T1.FinBaseRate, T1.FinSplRate, T1.FinIntRate, T1.FInMinRate, T1.FinMaxRate, T1.FinDftIntFrq, T1.FinIsIntCpz, T1.FinCpzFrq, 
			           T1.FinIsRvwAlw, T1.FinRvwFrq, T1.FinGrcRateType, T1.FinGrcBaseRate, T1.FinGrcSplRate, T1.FinGrcIntRate,
					   T1.FInGrcMinRate, T1.FinGrcMaxRate,T1.FinGrcDftIntFrq, T1.FinGrcIsIntCpz, T1.FinGrcCpzFrq, T1.FinGrcIsRvwAlw, 
					   T1.FinGrcRvwFrq, T1.FinMinTerm, T1.FinMaxTerm, T1.FinDftTerms, T1.FinRpyFrq, T1.FInRepayMethod, T1.FinIsAlwPartialRpy,
					   T1.FinIsAlwDifferment, T1.FinMaxDifferment, T1.FinIsAlwEarlyRpy, T1.FinIsAlwEarlySettle, T1.FinODRpyTries, T1.FinEarlyPayRule,
					   T1.FinEarlySettleRule, T1.FinDepositRestrictedTo,T1.FinAEBuyOrInception, T1.FinAESellOrMaturity, T1.FinIsActive, T1.Version,
					   T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,
					   T1.WorkflowId, T1.StepFinance, T1.SteppingMandatory, T1.AlwManualSteps, T1.AlwdStepPolicies, T1.DftStepPolicy, 
					   T4.AcTypeDesc lovDescFinContingentAcTypeName,T5.AcTypeDesc lovDescFinAcTypeName, 
			           T1.FinIsDwPayRequired, T1.FinRvwRateApplFor,T1.FinAlwRateChangeAnyDate, T1.FinIsIntCpzAtGrcEnd,
					  T1.FinElgRuleCode, T1.LimitElgRuleCode,T1.FinSchCalCodeOnRvw, T1.AlwPlanDeferment,
					   T1.PlanDeferCount, T1.FinAssetType, T1.PftPayAcType, T1.FinIsOpenPftPayAcc,T31.AcTypeDesc lovDescPftPayAcTypeName, 
			           T1.FinIsAlwGrcRepay, T1.FinGrcSchdMthd, T1.FinGrcMargin, T1.FinMargin,T1.FinScheduleOn, T1.FinGrcScheduleOn, 
			           T1.FinCommitmentReq, T1.FinCollateralReq, T1.FinDepreciationReq, T1.FinDepreciationFrq, T1.FinBankContingentAcType, 
			           T1.FinProvisionAcType, T38.AcTypeDesc lovDescFinBankContAcTypeName, T39.AcTypeDesc lovDescFinProvisionAcTypeName, 
			           T1.AllowRIAInvestment, T1.OverrideLimit, T1.LimitRequired, T1.FinCommitmentOvrride, T1.FinCollateralOvrride,
			           T1.FinPftUnChanged,T1.ApplyODPenalty, T1.ODIncGrcDays,T1.ODChargeType, T1.ODGraceDays, T1.ODChargeCalOn, T1.ODChargeAmtOrPerc,
					   T1.ODAllowWaiver, T1.ODMaxWaiverPerc, T1.FinDivision,T48.DivisionCodeDesc LovDescFinDivisionName, T1.FinSuspAcType,
					   T49.AcTypeDesc lovDescFinSuspAcTypeName, T52.ProductDesc lovDescProductCodeDesc,T1.Product, T1.StartDate, T1.EndDate,
					  T1.AllowDownpayPgm, T1.FinTypeDesc lovDescPromoFinTypeDesc, T1.Remarks, T1.AlwEarlyPayMethods, T1.PastduePftCalMthd,T1.PastduePftMargin, 
					   T1.AlwAdvanceRent, T1.GrcAdvBaseRate,  T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, 
			           T1.RpyAdvMargin, T1.RpyAdvPftRate, T1.RollOverFinance, T1.RollOverFrq, T1.DownPayRule,
					   T59.RuleCode DownPayRuleDesc,T1.FinSuspTrigger, T1.FinSuspRemarks, T1.AlwMultiPartyDisb,T1.collateralType, T1.TDSApplicable,
					   T1.ManualSchedule,T1.ApplyGrcPricing ,T1.GrcPricingMethod, T1.ApplyRpyPricing, T1.RpyPricingMethod, T1.RpyHierarchy,
					   T67.RuleCode GrcPricingMethodDesc ,T68.RuleCode RpyPricingMethodDesc , T1.DroplineOD , T1.DroppingMethod ,
					   T1.RateChgAnyDay,T52.ProductCategory ,T1.FinRepayPftOnFrq,
					    T1.AlwBPI , T1.BpiTreatment , T1.PftDueSchOn , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , 
						T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz , T1.ReAgeCpz, T1.FddLockPeriod, T1.AlwdRpyMethods, 
						T1.MaxUnplannedEmi, T1.MaxReAgeHolidays, T1.CalRoundingMode, T1.FrequencyDays, T1.QuickDisb,T1.AlwMaxDisbCheckReq,
						T1.AlwReage,T1.AlwUnPlanEmiHoliday,
							T1.ProfitCenterID, T69.ProfitCenterCode, T69.ProfitCenterDesc  

			FROM       RMTFinanceTypes T1 LEFT OUTER JOIN
			           BMTProduct T52 ON T1.FinCategory = T52.ProductCode LEFT OUTER JOIN
			           RMTAccountTypes T4 ON T1.FinContingentAcType = T4.AcType LEFT OUTER JOIN
			           RMTAccountTypes T38 ON T1.FinBankContingentAcType = T38.AcType LEFT OUTER JOIN
			           RMTAccountTypes T39 ON T1.FinProvisionAcType = T39.AcType LEFT OUTER JOIN
			           RMTAccountTypes T5 ON T1.FinAcType = T5.AcType LEFT OUTER JOIN
			           RMTAccountTypes T31 ON T1.PftPayAcType = T31.AcType LEFT OUTER JOIN
			           SMTDivisionDetail T48 ON T1.FinDivision = T48.DivisionCode LEFT OUTER JOIN
			           RMTAccountTypes T49 ON T1.FinSuspAcType = T49.AcType LEFT OUTER JOIN
			           Rules T59 ON T1.DownPayRule = T59.RuleId LEFT OUTER JOIN
			           Rules T67 ON T1.GrcPricingMethod = T67.RuleId  LEFT OUTER JOIN
			           Rules T68 ON T1.RpyPricingMethod = T68.RuleId LEFT OUTER JOIN 
                       ProfitCenters T69 ON T69.ProfitCenterID = T1.ProfitCenterID
			WHERE     (NOT EXISTS
			                          (SELECT     1 Expr1
			                            FROM          RMTFinanceTypes_Temp
			                            WHERE      (FinType = T1.FinType)))
	
	</createView>
</changeSet>

 <changeSet id="133" author="Irfan">
<sql>
		Update FeeTypes set ApplicableFor=1 where ApplicableFor = 0;
		Update FeeTypes set ApplicableFor=1 where ApplicableFor =0;
		Update FeeTypes_Temp set ApplicableFor=1 where ApplicableFor = 0;
		Update FeeTypes_Temp set ApplicableFor=1 where ApplicableFor =0;

</sql>
</changeSet>

<changeSet id="134" author="Chaitanya.ch">
	<createView viewName="MANUALADVISE_TVIEW" replaceIfExists="true">
		  SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode
				FROM    	ManualAdvise_Temp  T1
       			INNER JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
	</createView>
</changeSet>
	
<changeSet id="135" author="Kesav">
	<sql>
		Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
		Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
		Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		
		Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER');
		Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'ACCOUNTMAPPING_MAKER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER');
		Delete from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER';
		INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'ACCOUNTMAPPING_MAKER','WF Maker for AccountMapping', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'AccountMappingDialog_Account');
		Delete from SecRights where RightName = 'AccountMappingDialog_Account';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'AccountMappingDialog_Account', 'AccountMappingDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'AccountMappingDialog_Account'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'AccountMappingDialog_HostAccount');
		Delete from SecRights where RightName = 'AccountMappingDialog_HostAccount';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'AccountMappingDialog_HostAccount', 'AccountMappingDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'AccountMappingDialog_HostAccount'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnNew');
		Delete from SecRights where RightName = 'button_AccountMappingDialog_btnNew';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_AccountMappingDialog_btnNew', 'AccountMappingDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnNew'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnEdit');
		Delete from SecRights where RightName = 'button_AccountMappingDialog_btnEdit';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_AccountMappingDialog_btnEdit', 'AccountMappingDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnDelete');
		Delete from SecRights where RightName = 'button_AccountMappingDialog_btnDelete';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_AccountMappingDialog_btnDelete', 'AccountMappingDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnDelete'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnSave');
		Delete from SecRights where RightName = 'button_AccountMappingDialog_btnSave';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_AccountMappingDialog_btnSave', 'AccountMappingDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_AccountMappingDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'menuItem_applicationmaster_AccountMapping');
		Delete from SecRights where RightName = 'menuItem_applicationmaster_AccountMapping';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 0, 'menuItem_applicationmaster_AccountMapping', 'MENU', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_applicationmaster_AccountMapping'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Delete from SecGroupRights where RightID In (Select RightID from SecRights where RightName = 'button_AccountMappingList_NewAccountMapping');
		Delete from SecRights where RightName = 'button_AccountMappingList_NewAccountMapping';
		Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_AccountMappingList_NewAccountMapping', 'AccountMappingList', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_MAKER'), (Select RightID from SecRights where RightName = 'button_AccountMappingList_NewAccountMapping'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Delete from SecGroupRights where GrpID In (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_APPROVER');
		Delete from SecRoleGroups where GrpID IN (Select GrpId from SecGroups WHERE GrpCode = 'ACCOUNTMAPPING_APPROVER') And RoleID IN (Select RoleID from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER');
		Delete from SecGroups where GrpCode = 'ACCOUNTMAPPING_APPROVER';
		INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'ACCOUNTMAPPING_APPROVER','WF Approver for AccountMapping', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'button_RuleDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'ACCOUNTMAPPING_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ACCOUNTMAPPING_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_applicationmaster_AccountMapping'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
		Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
		Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	</sql>
</changeSet>

<changeSet id="136" author="Amit">
		<addColumn tableName="EmployerDetail">
			<column name="EmpIsActive" type="number(1,0)" defaultValue="0" >
			<constraints  nullable="false" />
			</column>
		</addColumn>
	</changeSet>
	
	 <changeSet id="137" author="Amit">
		<addColumn tableName="EmployerDetail_Temp">
			<column name="EmpIsActive" type="number(1,0)" defaultValue="0" >
			<constraints  nullable="false" />
			</column>
		</addColumn>
	</changeSet> 
	
	<changeSet id="138" author="Amit">
		<createView replaceIfExists="true" viewName="EMPLOYERDETAIL_AVIEW">
   SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive, T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry

		</createView>
	</changeSet>
	
	<changeSet id="139" author="Amit">
		<createView replaceIfExists="true" viewName="EMPLOYERDETAIL_TVIEW">
 SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive, T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail_Temp T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry

		</createView>
	</changeSet>
	
	<changeSet id="140" author="Amit">
		<createView replaceIfExists="true" viewName="EMPLOYERDETAIL_VIEW">
 SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail_Temp T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
   UNION ALL 
  SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
           LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
     WHERE NOT EXISTS ( SELECT 1 
                        FROM EmployerDetail_Temp 
                          WHERE EmployerId = T1.EmployerId )

		</createView>
	</changeSet>
		
	<changeSet id="141" author="Durgaprasad G">
	<renameTable newTableName="PDC_CONSL_EMI_DTL" oldTableName="PresentationRequest" />
</changeSet>
</databaseChangeLog>