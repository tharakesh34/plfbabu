<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	<changeSet id="1" author="Prasad">
	<createView viewName="RPT_SOA_TXNDETAILS_VIEW" replaceIfExists="true">
		  <![CDATA[  Select T1.Finreference,Schdate,Particulars,Debit,Credit,ccyMinorccyunits,ccyEditField,
		 (Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE') APP_DATE ,Ordby
		 from ( 
			Select T1.Finreference,Schdate, (case when T1.Disbonschdate=1 then 'Amount Financed - Payable ('||T1.Finreference||')' else 
											  'Due for Installment '||T1.INSTNUMBER||' ('||T1.Finreference||')' end) Particulars,
			 case when T1.Disbonschdate=1 then 0 else T1.Repayamount end Debit,
			 case when T1.Disbonschdate=1 then T1.DisbAmount else 0 end Credit,1 Ordby
	   from finscheduledetails T1
	   where (BPIORHOLIDAY!='H' or BPIORHOLIDAY!='B' or BPIORHOLIDAY is null) and 
			 schdate<=(Select to_date(sysparmvalue, 'YYYY-MM-DD')  sysparmvalue from smtparameters where SYSPARMCODE='APP_DATE')  	
  union
  Select T1.Finreference,T2.FInApprovedDate,'Broken Period Interest Receivable- Due('||T1.Finreference||')' Particulars,
			 Repayamount Debit, 0 Credit,2 Ordby
	   from finscheduledetails T1
          inner join Financemain T2 on T2.Finreference = T1.Finreference
	   where BPIORHOLIDAY='B' and Repayamount!=0
	union 	
		SELECT FINREFERENCE,M.POSTDATE,(CASE WHEN F.FEETYPEID IS NOT NULL THEN FEETYPEDESC 
		else 'Bounce' end) ||'- Due ('||Finreference||')' ,m.ADVISEAMOUNT Debit ,0 Credit ,3 Ordby
		FROM MANUALADVISE M
		LEFT JOIN FEETYPES F ON F.FEETYPEID = M.FEETYPEID 	
		LEFT JOIN BOUNCEREASONS T3 ON M.BounceID = T3.BOUNCEID		
	union	
		Select REFERENCE,Receiveddate,(Case when PAYMENTTYPE NOT in ('EXCESS','CASH') then 'Payment Recieved vide '||PAYMENTTYPE ||' No.:'||CHEQUEACNO ||'('||REFERENCE||')'
										 when PAYMENTTYPE in ('EXCESS') then 'Amount Adjusted ('||REFERENCE||')' 
										 when PAYMENTTYPE in ('CASH') then 'Cash received Vide Receipt No.'||CHEQUEACNO ||'('||REFERENCE||')' end) Particulars,
			    Case when PAYMENTTYPE NOT in ('EXCESS') then 0  when PAYMENTTYPE in ('EXCESS') then Amount end debit,Amount credit,4 Ordby
		from FINRECEIPTHEADER T1 inner join 
			 FINRECEIPTDETAIL T2 on T1.RECEIPTID =T2.RECEIPTID			 
	union 	
		Select finreference, FinODSchdDate, 'Penalty Due Created for Past due till date ' || to_char(FINODTILLDATE, 'dd/mm/yyyy') Particulars, 
		TotPenaltyAmt Debit, 0 credit,5 Ordby
		From FinODDetails where TOtPenaltyAmt > 0 
  union
    Select T1.Finreference,FInApprovedDate,Feetypedesc||'- Due ('||T1.Finreference||')', RemainingFee Debit, 0 credit,6 Ordby
    from finfeedetail T1 
    inner join feetypes T2 on T1.Feetypeid = T2.Feetypeid
    inner join Financemain T3 on T3.Finreference = T1.Finreference
    where Originationfee=1 and feeSchedulemethod='DISB'
  union
    Select T1.Finreference,T2.FInApprovedDate,'Amount Paid Vide '||PaymentType||' :'|| (case when PaymentType in ('CHEQUE','DD') then LLREFERENCENO else Transactionref end)||'('||T1.Finreference||')' ,
    AmtToBeReleased Debit, 0 credit,7 Ordby
    from FINADVANCEPAYMENTS T1 inner join Financemain T2 on T2.Finreference = T1.Finreference
    where Status!='CANCELED'
	)T1 
	 inner join finpftdetails t2 on t2.Finreference=t1.Finreference
	 inner join RMTCURRENCIES C on C.ccycode= T2.finccy]]>
		</createView>
	</changeSet>
	<changeSet id="2" author="Prasad">
	<createView viewName="RPT_SOA_LOAN_VIEW" replaceIfExists="true">
		  <![CDATA[  Select FM.FinReference,FP.TotalPriSchd LoanAmount,
		   FM.RepayBaseRate PLRRate,FM.repaymargin Variance,FM.EffectiveRateOfReturn IRR,FP.CURREDUCINGRATE ROI,
		   FM.CalTerms Tenure,TotalPriPaid EMIReceivedPri ,TotalPftPaid EMIReceivedPft,
		   0.00 PreferredCardLimit,PRVRPYSCHPRI PrevInstAmtPri,PRVRPYSCHPFT PrevInstAmtPft,
		   Case when FM.RvwRateApplFor is null or FM.RvwRateApplFor='#' then 'Fixed' else 'Floating' end intRateType,FP.latestDisbDate LastDisbursalDate,
		   FP.FirstRepayDate FirstDueDate,FP.MaturityDate EndInstallmentDate,
		   '0.00/ 0' AdvInstAmt,FP.FinIsActive,FM.closingstatus,
		   FP.Futureinst FutureInstNo,FP.totalpriSchd FuturePri1,FP.tdSchdPri FuturePri2,
       FP.totalPftSchd FutureRpyPft1,FP.tdSchdPft FutureRpyPft2,
		   FP.totchargespaid Charge_coll_cust,
		   FP.UpFrontFee Upfront_int_cust,	0 Int_paid_Dealer_upfront,0 Pre_emi_Int_Paid,
		   '' Repo_Status,'' Repo_Date,'' Sale_Date,'' Release_Date,FP.LATESTRPYDATE,
       C.ccyMinorccyunits,ccyEditField
	From FinanceMain FM inner join
       FinPftDetails FP on FP.FinReference = FM.FinReference inner join
       RMTCURRENCIES C on C.ccycode= FP.finccy]]>
		</createView>
	</changeSet>
	<changeSet id="3" author="Prasad">
	<sql>Update FinanceMain set ReqMaturity  = MaturityDate</sql>
	</changeSet>
		<changeSet id="4" author="pruthvi">
		<sql>
	update reportlist
set fieldlabels='listheader_RuleCode.label,listheader_RuleCodeDesc.label',
fieldvalues='ruleCode,ruleCodeDesc',
fieldtype='String,String',
ReportFileName='ReportList02'
where code='ScoreRule';
</sql>
</changeSet>
<changeSet id="5" author="Irfan">
		<addColumn tableName="FINRECEIPTDETAIL">
			<column name="ReceiptNo" type="VARCHAR2(50)"/>
		</addColumn>
		<addColumn tableName="FINRECEIPTDETAIL_TEMP">
			<column name="ReceiptNo" type="VARCHAR2(50)"/>
		</addColumn>
	</changeSet>
<changeSet id="6" author="Irfan">
		<createView viewName="FINRECEIPTDETAIL_TVIEW" replaceIfExists="true">
			Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc , T1.PayOrder, T1.LogKey, T3.AccountNo PartnerBankAc, T3.AcType PartnerBankAcType, T1.ReceiptNo
			 From FinReceiptDetail_Temp T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		
		</createView>
	</changeSet>
	<changeSet id="7" author="Irfan">
		<createView viewName="FINRECEIPTDETAIL_AVIEW" replaceIfExists="true">
			Select T1.ReceiptID , T1.ReceiptSeqID , T1.ReceiptType , T1.PaymentTo , T1.PaymentType , T1.PayAgainstID  , 
			T1.Amount  , T1.FavourNumber , T1.ValueDate , T1.BankCode , T1.FavourName , T1.DepositDate , T1.DepositNo , T1.PaymentRef , 
			 T1.TransactionRef , T1.ChequeAcNo , T1.FundingAc , T1.ReceivedDate , T1.Status , T1.Remarks  , T2.BankName BankCodeDesc,
			 T3.PartnerBankCode FundingAcDesc, T1.PayOrder , T1.LogKey, T3.AccountNo PartnerBankAc, T3.AcType PartnerBankAcType, T1.ReceiptNo
			 From FinReceiptDetail T1 LEFT JOIN 
			   BMTBankDetail T2 ON T1.BankCode = T2.BankCode LEFT JOIN 
			   PartnerBanks T3 ON T1.FundingAc  = T3.PartnerBankID
		</createView>
	</changeSet>
	<changeSet id="8" author="Irfan">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'ReceiptDialog_receiptNo','ReceiptDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_RECEIPT_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='ReceiptDialog_receiptNo'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	
	<changeSet id="9" author="Vinay">
		<sql>
			Insert into BMTLovfieldcode(FIELDCODE,FIELDCODEDESC,FIELDCODETYPE,FIELDEDIT,ISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID)
			values
			('SEGMENT','Segment','String',0,1,1,1000,'19-FEB-17','Approved',null,null,null,null,null,0);
		</sql>
	</changeSet>
	
	<changeSet id="10" author="Vinay">
	<sql>
		Insert into RMTLovfielddetail
		(FIELDCODEID,FIELDCODE,FIELDCODEVALUE,VALUEDESC,ISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,SYSTEMDEFAULT)
		values
		(308,'SEGMENT','A+','A+',1,1,1000,'19-FEB-17','Approved',null,null,null,null,null,0,0);
		
		Insert into RMTLovfielddetail
		(FIELDCODEID,FIELDCODE,FIELDCODEVALUE,VALUEDESC,ISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,SYSTEMDEFAULT)
		values
		(309,'SEGMENT','A','A',1,1,1000,'19-FEB-17','Approved',null,null,null,null,null,0,0);
		
		 Insert into RMTLovfielddetail
		(FIELDCODEID,FIELDCODE,FIELDCODEVALUE,VALUEDESC,ISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,SYSTEMDEFAULT)
		values
		(310,'SEGMENT','B','B',1,1,1000,'19-FEB-17','Approved',null,null,null,null,null,0,0);
		
		Insert into RMTLovfielddetail
		(FIELDCODEID,FIELDCODE,FIELDCODEVALUE,VALUEDESC,ISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,SYSTEMDEFAULT)
		values
		(311,'SEGMENT','C','C',1,1,1000,'19-FEB-17','Approved',null,null,null,null,null,0,0);
		
		Insert into RMTLovfielddetail
		(FIELDCODEID,FIELDCODE,FIELDCODEVALUE,VALUEDESC,ISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID,SYSTEMDEFAULT)
		values
		(312,'SEGMENT','NEGATIVE','NEGATIVE',1,1,1000,'19-FEB-17','Approved',null,null,null,null,null,0,0);
	</sql>
</changeSet>
<changeSet id="11" author="Irfan">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'FeeReceiptDialog_receiptNo','FeeReceiptDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FEERECEIPT_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeReceiptDialog_receiptNo'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	
	<changeSet id="12" author="Siva">
		<createView viewName="FINRECEIPTHEADER_FVIEW" replaceIfExists="true">
			SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive
							FROM         FinReceiptHeader_Temp T1 INNER JOIN
				       FinanceMain_Temp T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
		</createView>
	</changeSet>
	
	<changeSet id="13" author="Manoj.P">
		<sql>
			DELETE FROM DATA_ENGINE_LOG WHERE ID IN (SELECT ID FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT');
			DELETE FROM DATA_ENGINE_DOWNLOAD_HISTORY;
			DELETE FROM DATA_ENGINE_STATUS WHERE NAME ='MANDATES_EXPORT';
			
			DELETE FROM DATA_ENGINE_COLUMN where TABLEID IN (select ID from DATA_ENGINE_TABLE WHERE CONFIGID = (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT'));
			DELETE FROM DATA_ENGINE_TABLE where CONFIGID IN (select ID from DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT');
			DELETE FROM DATA_ENGINE_CONFIG where Name = 'MANDATES_EXPORT';
			
			INSERT INTO DATA_ENGINE_CONFIG VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_CONFIG),'MANDATES_EXPORT', 'Mandates export', 2, NULL, NULL, NULL, ',' , 0, 0, NULL, 'Row:{INSTRUMENT AUTO DATA ENTRY REPORT}Row:{User:${USER_ID}}Row:{Business Date:${SYS_DATE_DD-MMM-YYYY}}Row:{Branch Name:${FILTER_BRANCHCODE}}Row:{FromDate:${FILTER_FROMDATE},  ToDate:${FILTER_TODATE}}ROW:{EMPTY_ROW}ROW:{Mandate Sequence No.,Customer Name,Branch,Product,Application ID,LAN No.,EMI Amount,Open Flag,Account Holder Name,MICR Code,Account No.,Account Type,Updation Date,User ID,First Due Date,EMI End Date,Open End Date,Open Upper Limit,Bank Name,Mandate Debit Amount,Start Date,End Date,Application Form No.,Customer Code,Repayment Mode,Mandate No.}',  '', 'A', '/opt/PFF/mandates/request', 'MANDATE_', '.CSV', 0, NULL, '${ddMMYYYYHms}', NULL, 0, NULL, 1, 1); 
			INSERT INTO DATA_ENGINE_TABLE  VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_TABLE), (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT'), 'MANDATE_REQUESTS',  0, 'ID', 'ID IN (:ID)', 'UPDATE MANDATE_REQUESTS SET BATCH_ID = :FILEID, STATUS = ''AC'' WHERE ID IN (:ID)QUERY:UPDATE MANDATES SET STATUS = ''AC'' WHERE MANDATEID IN (SELECT MANDATEID FROM MANDATE_REQUESTS WHERE ID IN (:ID) AND STATUS = ''AC'')', NULL, NULL, NULL, NULL, NULL, 0, 0, 0);
			
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'BANK_SEQ',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);	
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'CUSTOMER_NAME',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'BRANCH_NAME',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'FINTYPE',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'APPLICATION_NUMBER',	0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'FINREFERENCE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'EMI',					0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'OPENFLAG',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_HOLDER_NAME',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MICR_CODE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_NUMBER',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ACCT_TYPE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'EXTRACTION_DATE',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy');
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'USERNAME',				1, 'N', NULL, NULL, '${USER_NAME}', NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'EFFECTIVE_DATE',		0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy');
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'EMI_ENDDATE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy');
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'OPEN_ENDDATE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy');
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'UPPER_LIMIT',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'BANK_NAME',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'DEBIT_AMOUNT',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'START_DATE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy');
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'END_DATE',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 'DATE:dd-MMM-yyyy');
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'APPLICATION_NUMBER',	0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'CUSTCIF',				0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'MANDATE_TYPE',			0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			INSERT INTO DATA_ENGINE_COLUMN VALUES ((SELECT COALESCE(MAX(ID), 0) + 1 FROM DATA_ENGINE_COLUMN),(Select Id FROM DATA_ENGINE_TABLE WHERE Name = 'MANDATE_REQUESTS' and CONFIGID = (Select Id FROM DATA_ENGINE_CONFIG WHERE Name = 'MANDATES_EXPORT')),	'ID',					0, 'N', NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL);
			
			
			UPDATE SEQ_DATA_ENGINE_CONFIG SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_CONFIG);
			UPDATE SEQ_DATA_ENGINE_TABLE  SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_TABLE);
			UPDATE SEQ_DATA_ENGINE_COLUMN SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_COLUMN);
			UPDATE SEQ_DATA_ENGINE_STATUS SET SeqNo=(Select coalesce(MAX(ID), 1) FROM DATA_ENGINE_STATUS);
						
		</sql>
	</changeSet>
	<changeSet id="14" author="Siva">
		<createView viewName="FINRECEIPTHEADER_FVIEW" replaceIfExists="true">
		SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive, T2.ScheduleMethod, T2.ProfitDaysBasis PftDaysBasis
							FROM         FinReceiptHeader_Temp T1 INNER JOIN
				       FinanceMain_Temp T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
		</createView>
	</changeSet>
	
	<changeSet id="15" author="Siva">
	<sql>
		INSERT INTO ErrorDetails VALUES('60209','EN','E','Record not in the Process of approval. Not possible to Cancel the receipt','','Approved','','','','','',0,current_timestamp,1000,0);
	</sql>
	</changeSet>
	<changeSet id="16" author="Irfan">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="WaviedAmt" type="number(18,0)"/>
		</addColumn>
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="WaviedAmt" type="number(18,0)"/>
		</addColumn>
	</changeSet>
	<changeSet id="17" author="Irfan">
		<createView viewName="FINRECEIPTHEADER_VIEW" replaceIfExists="true">
			
			SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive, T1.WaviedAmt
							FROM         FinReceiptHeader_Temp T1 INNER JOIN
				       FinanceMain T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
				UNION ALL
				 SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive, T1.WaviedAmt
							FROM         FinReceiptHeader T1 INNER JOIN
				       FinanceMain T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
						WHERE     NOT EXISTS
				                          (SELECT     1
				                            FROM          FinReceiptHeader_TEMP 
				                            WHERE      ReceiptID = T1.ReceiptID)
		</createView>
	</changeSet>
	
	<changeSet id="18" author="Irfan">
	<createView viewName="FINRECEIPTHEADER_FVIEW" replaceIfExists="true">
	 SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive, T2.ScheduleMethod, T2.ProfitDaysBasis PftDaysBasis, T1.WaviedAmt
							FROM         FinReceiptHeader_Temp T1 INNER JOIN
				       FinanceMain_Temp T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
	
	</createView>
	</changeSet>
	<changeSet id="19" author="Irfan">
	<sql>
		INSERT INTO ErrorDetails VALUES('65014','EN','W','{0} {1} {2}Already Exists {0}. Do you want to proceed?','','Approved','','','','','',0,current_timestamp,1000,0);
	</sql>
	</changeSet>
	<changeSet id="20" author="Irfan">
		<sql>
		INSERT INTO BMTAEEVENTS VALUES('FEEPAY','Accounting on Fee Receipt',1,1000,current_timestamp,'Approved','','','','','',0,1,1,0);
		</sql>
	</changeSet>
	<changeSet id="21" author="Irfan">
		<sql>
			INSERT INTO BMTAMOUNTCODES VALUES('FEEPAY',0,'ae_paidFee','Accounting on Fee Receipt',1,1,1000,current_timestamp,'Approved','','','','','',0);
		</sql>
	</changeSet>
	
	<changeSet id="22" author="durgapraad G">
		<addColumn tableName="MANUALADVISE">
			<column name="RESERVEDAMT" type="NUMBER(18)" />
			<column name="BALANCEAMT" type="NUMBER(18)" />
		</addColumn>
	</changeSet>
	<changeSet id="23" author="Durgaprasad G">
		<addColumn tableName="MANUALADVISE_TEMP">
			<column name="RESERVEDAMT" type="NUMBER(18)" />
			<column name="BALANCEAMT" type="NUMBER(18)" />
		</addColumn>
	</changeSet>
	<changeSet id="24" author="Durgaprasad G">
		<addColumn tableName="MANUALADVISEMOVEMENTS">
			<column name="RESERVEDAMT" type="NUMBER(18)" />
		</addColumn>
	</changeSet>
	<changeSet id="25" author="Durgaprasad G">
		<addColumn tableName="MANUALADVISEMOVEMENTS_TEMP">
			<column name="RESERVEDAMT" type="NUMBER(18)" />
		</addColumn>
	</changeSet>
	<changeSet id="26" author="Irfan">
	<sql>
		delete  from ErrorDetails where errorcode='65015';
		INSERT INTO ErrorDetails VALUES('65015','EN','E','Accounting entries not created to proceed further.','','Approved','','','','','',0,current_timestamp,1000,0);
	</sql>
	</changeSet>
	
	<changeSet id="27" author="Irfan">
	<sql>
		delete  from ErrorDetails where errorcode='65014';
		INSERT INTO ErrorDetails VALUES('65014','EN','W','Fee Receipt on reference:{0} is already exists. Do you want to proceed?','','Approved','','','','','',0,current_timestamp,1000,0);
	</sql>
	</changeSet>
	
	<changeSet id="28" author="Siva">
		<createTable tableName="ManualAdviseReserve">
			<column name="AdviseID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="ReceiptSeqID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="ReservedAmt" type="decimal(18,0)" />
		</createTable>
	</changeSet>
	
	<changeSet id="29" author="Siva">
	<createView viewName="MANUALADVISE_AVIEW" replaceIfExists="true">
 SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID,T3.BOUNCECODE, T1.ReservedAmt, T1.BalanceAmt
				FROM    	ManualAdvise  T1
       			LEFT JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
				LEFT JOIN BOUNCEREASONS T3 ON T1.BounceID = T3.BOUNCEID
	</createView>
	</changeSet>
	
	<changeSet id="30" author="Siva">
	<createView viewName="MANUALADVISE_TVIEW" replaceIfExists="true">
  SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence, 
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID, T3.BOUNCECODE, T1.ReservedAmt, T1.BalanceAmt
				FROM    	ManualAdvise_Temp  T1
       			LEFT JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
       			LEFT JOIN BOUNCEREASONS T3 ON T1.BounceID = T3.BOUNCEID
	</createView>
	</changeSet>
	<changeSet id="31" author="Siva">
	<createView viewName="MANUALADVISE_VIEW" replaceIfExists="true">
  SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID,T3.BOUNCECODE, T1.ReservedAmt, T1.BalanceAmt
				FROM    	ManualAdvise_Temp  T1
       			LEFT JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
         		LEFT JOIN BOUNCEREASONS T3 ON T1.BounceID = T3.BOUNCEID
				UNION ALL
SELECT		T1.AdviseID, T1.AdviseType, T1.FinReference, T1.FeeTypeID, T1.Sequence,
  				T1.AdviseAmount, T1.PaidAmount, T1.WaivedAmount, T1.Remarks, T1.ValueDate, T1.PostDate,
  					T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.FeeTypeDesc, T2.FeeTypeCode, T1.BounceID, T1.ReceiptID,T3.BOUNCECODE, T1.ReservedAmt, T1.BalanceAmt
				FROM    	ManualAdvise  T1
       			LEFT JOIN FEETYPES T2 ON T1.FeeTypeID = T2.FeeTypeID
           		LEFT JOIN BOUNCEREASONS T3 ON T1.BounceID = T3.BOUNCEID
				WHERE     NOT EXISTS (SELECT 1 FROM ManualAdvise_TEMP WHERE AdviseID = T1.AdviseID)
	</createView>
	</changeSet>
	
	<changeSet id="32" author="Siva">
	<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 

		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'ReceiptDialog_PayableAmount','ReceiptDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_RECEIPT_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='ReceiptDialog_PayableAmount'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
	</sql>
	</changeSet>
	<changeSet id="33" author="Surekha">
		<addColumn tableName="AccountMapping">
			<column name="AccountType" type="varchar(15)"></column>
		</addColumn>
	</changeSet>
	<changeSet id="34" author="Surekha">
		<addColumn tableName="AccountMapping_Temp">
			<column name="AccountType" type="varchar(15)"></column>
		</addColumn>
	</changeSet>
	<changeSet id="35" author="Surekha">
		<sql>
			update AccountMapping set AccountType='DISB';
		</sql>
	</changeSet>
	<changeSet id="36" author="Surekha">
		<addNotNullConstraint tableName="AccountMapping" columnName="AccountType" columnDataType="varchar(15)"/>
	</changeSet>
	<changeSet id="37" author="Surekha">
		<createView viewName="ACCOUNTMAPPING_VIEW" replaceIfExists="true">
			SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				            T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				          	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc
				FROM    	AccountMapping_Temp  T1  INNER JOIN
				         	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  INNER JOIN
				         	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType
				UNION ALL
				
				SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				          	T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc
				FROM    	AccountMapping  T1  INNER JOIN
				          	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  INNER JOIN
				          	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType
				          
				WHERE     	NOT EXISTS (SELECT 1 FROM AccountMapping_TEMP WHERE Account = T1.Account)
		</createView>
	</changeSet>
	<changeSet id="38" author="Surekha">
		<createView viewName="ACCOUNTMAPPING_AVIEW" replaceIfExists="true">
			SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				            T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				          	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc
				FROM    	AccountMapping  T1  INNER JOIN
				         	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  INNER JOIN
				         	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType
		</createView>
	</changeSet>
	<changeSet id="39" author="Irfan">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'AccountMappingDialog_AccountType','AccountMappingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'AccountMappingDialog_FinType','AccountMappingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'AccountMappingDialog_ProfitCenter','AccountMappingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'AccountMappingDialog_CostCenter','AccountMappingDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='ACCOUNTMAPPING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountMappingDialog_AccountType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='ACCOUNTMAPPING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountMappingDialog_FinType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='ACCOUNTMAPPING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountMappingDialog_ProfitCenter'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='ACCOUNTMAPPING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AccountMappingDialog_CostCenter'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	<changeSet id="42" author="Surekha">
		<createView viewName="ACCOUNTMAPPING_VIEW" replaceIfExists="true">
			SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				            T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				          	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc, T5.FinTypeDesc
				FROM    	AccountMapping_Temp  T1  INNER JOIN
				         	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  INNER JOIN
				         	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType INNER JOIN 
				         	RMTFinanceTypes T5 ON T1.FinType = T5.FinType
				UNION ALL
				
				SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				          	T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc, T5.FinTypeDesc
				FROM    	AccountMapping  T1  INNER JOIN
				          	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  INNER JOIN
				          	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType INNER JOIN 
				         	RMTFinanceTypes T5 ON T1.FinType = T5.FinType
				          
				WHERE     	NOT EXISTS (SELECT 1 FROM AccountMapping_TEMP WHERE Account = T1.Account)
		</createView>
	</changeSet>
	<changeSet id="43" author="Surekha">
		<createView viewName="ACCOUNTMAPPING_AVIEW" replaceIfExists="true">
			SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				            T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				          	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc, T5.FinTypeDesc
				FROM    	AccountMapping  T1  INNER JOIN
				         	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  INNER JOIN
				         	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID INNER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType INNER JOIN 
				         	RMTFinanceTypes T5 ON T1.FinType = T5.FinType
		</createView>
	</changeSet>
	<changeSet id="44" author="Irfan">
		<sql>
			INSERT INTO BMTAMOUNTCODES VALUES('VASFEE',0,'ae_vasFee','Accounting on Vas Fee',1,1,1000,current_timestamp,'Approved','','','','','',0);
		</sql>
	</changeSet>
	
	<changeSet id="40" author="Madhubabu">
		<dropForeignKeyConstraint baseTableName="EMPLOYERDETAIL_TEMP"
			constraintName="FK_EMYRDTL_TEMP_RMTEMPTYPES" />
	</changeSet>
	<changeSet id="41" author="Madhubabu">
		<dropForeignKeyConstraint baseTableName="EMPLOYERDETAIL"
			constraintName="FK_EMYRDTL_RMTEMPTYPES" />
	</changeSet>
	<changeSet id="48" author="Irfan">
		<sql>
			update BMTAMOUNTCODES set amountcode='vf_vasFee' where  amountcode='ae_vasFee';
		</sql>
	</changeSet>
	<changeSet id="45" author="Madhubabu">
	<sql>
		update EMPLOYERDETAIL_TEMP set EMPINDUSTRY=(select industrycode from bmtindustries where industrydesc='MANUFACTURING INDUSTRY');
		update EMPLOYERDETAIL set EMPINDUSTRY=(select industrycode from bmtindustries where industrydesc='MANUFACTURING INDUSTRY');
	</sql>
	</changeSet>
	
	<changeSet id="46" author="Madhubabu">
		<addForeignKeyConstraint constraintName="FK_EMYRDTL_TEMP_BMTINDUSTRY"
			referencedTableName="BMTINDUSTRIES" referencedColumnNames="INDUSTRYCODE"
			baseTableName="EMPLOYERDETAIL_TEMP" baseColumnNames="EMPINDUSTRY" />
	</changeSet>
	
	<changeSet id="47" author="Madhubabu">
		<addForeignKeyConstraint constraintName="FK_EMYRDTL_BMTINDUSTRY"
			referencedTableName="BMTINDUSTRIES" referencedColumnNames="INDUSTRYCODE"
			baseTableName="EMPLOYERDETAIL" baseColumnNames="EMPINDUSTRY" />
	</changeSet>
	<changeSet id="49" author="Madhubabu">
		<createView viewName="EMPLOYERDETAIL_VIEW" replaceIfExists="true">
			SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.INDUSTRYDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail_Temp T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN bmtindustries T3   ON T1.EmpIndustry = T3.Industrycode
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
   UNION ALL 
  SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.INDUSTRYDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN bmtindustries T3   ON T1.EmpIndustry = T3.Industrycode
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
           LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
     WHERE NOT EXISTS ( SELECT 1 
                        FROM EmployerDetail_Temp 
                          WHERE EmployerId = T1.EmployerId )
		</createView>
	</changeSet>
	<changeSet id="50" author="Madhubabu">
		<createView viewName="EMPLOYERDETAIL_AVIEW" replaceIfExists="true">
			 SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive, T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.INDUSTRYDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN bmtindustries T3   ON T1.EmpIndustry = T3.Industrycode
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
		</createView>
	</changeSet>
	<changeSet id="51" author="Madhubabu">
		<createView viewName="EMPLOYERDETAIL_TVIEW" replaceIfExists="true">
			SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo, T1.EmpIsActive, T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.INDUSTRYDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail_Temp T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN bmtindustries T3   ON T1.EmpIndustry = T3.Industrycode
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
		</createView>
	</changeSet>
	<changeSet id="52" author="Manoj.P">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
		   	  SELECT   
		      FA. PAYMENTID,
		      FA.FINREFERENCE,
		      CASE WHEN FA.PAYMENTTYPE = 'NEFT' THEN 'N' WHEN FA.PAYMENTTYPE = 'RTGS' THEN 'R' WHEN FA.PAYMENTTYPE = 'DD' THEN 'D' WHEN FA.PAYMENTTYPE = 'CHEQUE' THEN 'C' ELSE  FA.PAYMENTTYPE END  DISBURSEMENT_TYPE,
		      FA.AMTTOBERELEASED/CCY.CCYMINORCCYUNITS  AMTTOBERELEASED,
		      FA.DISBDATE,
         	  FA.LLDATE,
		      FA.PAYABLELOC,
		      FA.PRINTINGLOC,
		      CU.CUSTCIF,            
		      CU.CUSTSHRTNAME,     
		      CM.PHONECOUNTRYCODE||CM.PHONEAREACODE||CM.PHONENUMBER AS CUSTOMER_MOBILE,
		      CE.CUSTEMAIL       CUSTOMER_EMAIL,
		      CS.CPPROVINCENAME  CUSTOMER_STATE,
		      CC.PCCITYNAME      CUSTOMER_CITY,
		      ''                 CUSTOMER_ADDRESS1,
		      ''                 CUSTOMER_ADDRESS2,
		      ''                 CUSTOMER_ADDRESS3,
		      ''                 CUSTOMER_ADDRESS4,
		      ''                 CUSTOMER_ADDRESS5,
		      BD.BANKNAME,
              BB.BRANCHCODE,
		      BB.BRANCHDESC,
		      BBRS.CPPROVINCENAME  BENFICIARY_BRANCH_STATE,
		      BBRC.PCCITYNAME      BENFICIARY_BRANCH_CITY,
		      BB.MICR             MICR_CODE,
		      BB.IFSC             IFSC_CODE,
		      FA.BENEFICIARYACCNO,
		      FA.BENEFICIARYNAME,
		      FA.PHONECOUNTRYCODE||FA.PHONEAREACODE||FA.PHONENUMBER AS BENEFICIARY_MOBILE,
		      BCE.CUSTEMAIL        BENFICIRY_EMAIL,
		      BRS.CPPROVINCENAME  BENFICIARY_STATE,
		      BRC.PCCITYNAME      BENFICIARY_CITY,
		      ''                  BENFICIARY_ADDRESS1,
		      ''                  BENFICIARY_ADDRESS2,
		      ''                  BENFICIARY_ADDRESS3,
		      ''                  BENFICIARY_ADDRESS4,
		      ''                  BENFICIARY_ADDRESS5,
		      ''				          PAYMENT_DETAIL1,
		      ''                  PAYMENT_DETAIL2,
		      ''                  PAYMENT_DETAIL3,
		      ''                  PAYMENT_DETAIL4,
		      ''                  PAYMENT_DETAIL5,
		      ''                  PAYMENT_DETAIL6,
		      ''                  PAYMENT_DETAIL7,     
		      FA.STATUS           STATUS,
		      FA.DESCRIPTION      REMARKS,
          FA.PAYMENTTYPE      PAYMENTTYPE,
          FM.FINTYPE,
          PB.PARTNERBANKID,
          PB.PARTNERBANKCODE,
          FA.INPUTDATE,
          PB.ALWFILEDOWNLOAD
		      FROM FINADVANCEPAYMENTS FA
		      INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE = FA.FINREFERENCE
		      INNER JOIN CUSTOMERS CU ON CU.CUSTID = FM.CUSTID
		      INNER JOIN RMTCURRENCIES CCY ON CCY.CCYCODE = FA.DISBCCY
          INNER JOIN PARTNERBANKS PB ON PB.PARTNERBANKID = FA.PARTNERBANKID
		      LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CU.CUSTID AND CE.CUSTEMAILPRIORITY = 3
		      LEFT JOIN CUSTOMERADDRESSES CA ON CA.CUSTID = CE.CUSTID AND CA.CUSTADDRPRIORITY = 5
		      LEFT JOIN RMTPROVINCEVSCITY CC ON CC.PCCITY = CA.CUSTADDRCITY
		      LEFT JOIN RMTCOUNTRYVSPROVINCE CS ON CS.CPPROVINCE = CC.PCPROVINCE
		      LEFT JOIN CUSTOMERPHONENUMBERS CM ON CM.PHONECUSTID = CU.CUSTID AND CM.PHONETYPECODE = 'MOBILE1' AND CM.PHONETYPEPRIORITY = 5  
		      LEFT JOIN BANKBRANCHES BB ON BB.BANKBRANCHID = FA.BANKBRANCHID
		      LEFT JOIN BMTBANKDETAIL BD ON BD.BANKCODE = BB.BANKCODE
		      LEFT JOIN RMTPROVINCEVSCITY BBRC ON BBRC.PCCITY = BB.CITY
			    LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
		      LEFT JOIN BENEFICIARY BR ON BR.BANKBRANCHID = FA.BANKBRANCHID AND BR.ACCNUMBER = FA.BENEFICIARYACCNO
		      LEFT JOIN CUSTOMERS BC ON BC.CUSTID = BR.CUSTID
		      LEFT JOIN CUSTOMEREMAILS BCE ON BCE.CUSTID = CU.CUSTID AND BCE.CUSTEMAILPRIORITY = 3
		      LEFT JOIN CUSTOMERADDRESSES BRCA ON BRCA.CUSTID = BR.CUSTID AND BRCA.CUSTADDRPRIORITY = 5
		      LEFT JOIN RMTPROVINCEVSCITY BRC ON BRC.PCCITY = BRCA.CUSTADDRCITY
		      LEFT JOIN RMTCOUNTRYVSPROVINCE BRS ON BRS.CPPROVINCE = BRC.PCPROVINCE
		      WHERE STATUS='Approved' AND PAYMENTID NOT IN (SELECT DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS)
		</createView>
	</changeSet>
	<changeSet id="53" author="Surekha">
		<createView viewName="ACCOUNTMAPPING_VIEW" replaceIfExists="true">
			  SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				            T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				          	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc, T5.FinTypeDesc
				FROM    	AccountMapping_Temp  T1   LEFT OUTER JOIN
				         	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  LEFT OUTER JOIN
				         	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID  LEFT OUTER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType  LEFT OUTER JOIN
				         	RMTFinanceTypes T5 ON T1.FinType = T5.FinType
				UNION ALL
				
				SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				          	T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc, T5.FinTypeDesc
				FROM    	AccountMapping  T1  INNER JOIN
				          	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  LEFT OUTER JOIN
				          	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID LEFT OUTER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType LEFT OUTER JOIN 
				         	RMTFinanceTypes T5 ON T1.FinType = T5.FinType
				          
				WHERE     	NOT EXISTS (SELECT 1 FROM AccountMapping_TEMP WHERE Account = T1.Account)
		</createView>
	</changeSet>
	<changeSet id="54" author="Surekha">
		<createView viewName="ACCOUNTMAPPING_AVIEW" replaceIfExists="true">
			  SELECT		T1.Account, T1.HostAccount, T1.ProfitCenterID, T1.CostCenterID,	T1.FinType,	T1.AccountType,
				            T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				          	T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				          	T2.PROFITCENTERCODE, T2.PROFITCENTERDESC,
				          	T3.COSTCENTERCODE, T3.COSTCENTERDESC, T4.ACTypeDesc AccountTypeDesc, T5.FinTypeDesc
				FROM    	AccountMapping  T1   LEFT OUTER JOIN
				         	ProfitCenters T2 ON T1.ProfitCenterID = T2.ProfitCenterID  LEFT OUTER JOIN
				         	CostCenters T3 ON T1.CostCenterID = T3.CostCenterID  LEFT OUTER JOIN 
				         	RMTAccountTypes T4 ON T1.AccountType = T4.AcType  LEFT OUTER JOIN
				         	RMTFinanceTypes T5 ON T1.FinType = T5.FinType
				
		</createView>
	</changeSet>
	
</databaseChangeLog>