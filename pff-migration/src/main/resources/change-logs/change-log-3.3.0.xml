<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	
	<changeSet id="01" author="Irfan">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'FeeTypeDialog_AdviseType','FeeTypeDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FEETYPE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FeeTypeDialog_AdviseType'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	<changeSet id="02.0" author="Jayant">
	    <dropIndex tableName="FINPFTDETAILS" indexName="IX_FINPFTDTL_CUST_ACTIVE"  />
	</changeSet>
	<changeSet id="02" author="Jayant">
	    <createIndex tableName="FINPFTDETAILS" indexName="IX_FINPFTDTL_CUST_ACTIVE">
	        <column name="CUSTID" type="bigint"/>
	        <column name="FINISACTIVE" type="boolean"/>
	    </createIndex>
	</changeSet>
	<changeSet id="03.0" author="Jayant">
	    <dropIndex tableName="FINANCEMAIN" indexName="IX_FM_CUST_ID"  />
	</changeSet>
	<changeSet id="03" author="Jayant">
	    <createIndex tableName="FINANCEMAIN" indexName="IX_FM_CUST_ID">
	        <column name="CUSTID" type="bigint"/>
	        <column name="FINISACTIVE" type="boolean"/>
	    </createIndex>
	</changeSet>
	<!--
	 <changeSet id="03" author="Jayant">
	    <createIndex tableName="FINFEEDETAIL" indexName="IX_FEEDETAIL_FINREF">
	        <column name="FINREFERENCE" type="bigint"/>
	    </createIndex>
	</changeSet> -->
	<changeSet id="04.0" author="Jayant">
	    <dropIndex tableName="FINFEEDETAIL" indexName="IX_FEEDETAIL_FEETYPE"  />
	</changeSet>
	<changeSet id="04" author="Jayant">
	    <createIndex tableName="FINFEEDETAIL" indexName="IX_FEEDETAIL_FEETYPE">
	        <column name="FEETYPEID" type="bigint"/>
	        <column name="FEEID" type="bigint"/>
	    </createIndex>
	</changeSet>
	<changeSet id="05.0" author="Jayant">
	    <dropIndex tableName="FINFEEDETAIL" indexName="IX_FEEDETAIL_FINREF"  />
	</changeSet>
	<changeSet id="05" author="Jayant">
	    <createIndex tableName="FINFEEDETAIL" indexName="IX_FEEDETAIL_FINREF">
	        <column name="FINREFERENCE" type="VARCHAR2(20)"/>
	        <column name="FEEID" type="bigint"/>
	    </createIndex>
	</changeSet>
	<changeSet id="06.0" author="Jayant">
	    <dropIndex tableName="FININSURANCES" indexName="IX_FININSURANCE_FINREF_INSID"  />
	</changeSet>
	<changeSet id="06" author="Jayant">
	    <createIndex tableName="FININSURANCES" indexName="IX_FININSURANCE_FINREF_INSID">
	        <column name="REFERENCE" type="VARCHAR2(20)"/>
	        <column name="INSID" type="VARCHAR2(20)"/>
	    </createIndex>
	</changeSet>
	<changeSet id="07" author="Jayant">
	    <createIndex tableName="DPDBUCKETSCONFIG" indexName="IX_DPDBUCKET_PROD_BUCKET_DAYS">
	        <column name="PRODUCTCODE" type="VARCHAR2(8)"/>
	        <column name="BUCKETID" type="bigint"/>
	        <column name="DUEDAYS" type="int"/>
	    </createIndex>
	</changeSet>
	<changeSet id="08" author="Jayant">
	    <createIndex tableName="DPDBUCKETSCONFIG" indexName="IX_DPDBUCKET_PROD_DAYS">
	        <column name="PRODUCTCODE" type="VARCHAR2(8)"/>
	        <column name="DUEDAYS" type="int"/>
	    </createIndex>
	</changeSet>
	<changeSet id="08.1" author="Jayant">
	<sql>
	delete from SMTPARAMETERS where SYSPARMCODE='AMZ_POSTING_EVENT';
	</sql>
	    <sql>
	    	INSERT INTO SMTPARAMETERS (SYSPARMCODE, SYSPARMDESC, SYSPARMTYPE, SYSPARMMAINT, SYSPARMVALUE, SYSPARMLENGTH, 
	    	SYSPARMDEC, SYSPARMDESCRIPTION, VERSION, LASTMNTBY, LASTMNTON, RECORDSTATUS, WORKFLOWID) 
	    	VALUES ('AMZ_POSTING_EVENT', 'Accrual / Amortization Posting Date 0:Daily 1: APP Month End 2: APP Extended Month End', 
	    	'int', '1', '0', '1', '0', 'Accrual / Amortization Posting Date 0:Daily 1: APP Month End 2: APP Extended Month End', '1',
	    	'1000', TO_DATE('2017-05-02 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'Approved', '0');    
	    </sql>
	</changeSet>
	<changeSet id="09" author="Jayant">
	    <createIndex tableName="PRESENTMENTDETAILS" indexName="IX_PRESENTMENTDTL_REF_DATE">
	        <column name="FINREFERENCE" type="VARCHAR2(20)"/>
	        <column name="SCHDATE" type="DATETIME"/>
	    </createIndex>
	</changeSet>
	<changeSet id="10" author="Jayant">
	    <createIndex tableName="PRESENTMENTDETAILS" indexName="IX_PRESENTMENTDTL_MID">
	        <column name="MANDATEID" type="bigint"/>
	    </createIndex>
	</changeSet>
	<changeSet id="11" author="Jayant">
	    <createIndex tableName="PRESENTMENTDETAILS" indexName="IX_PRESENTMENTDTL_PID_FINREF">
	        <column name="PRESENTMENTID" type="bigint"/>
	        <column name="FINREFERENCE" type="VARCHAR2(20)"/>
	        <column name="SCHDATE" type="DATETIME"/> 
	    </createIndex>
	</changeSet>
	<changeSet id="12" author="Jayant">
	    <createIndex tableName="PRESENTMENTHEADER" indexName="IX_PRESENTMENTHDR_PBID">
	        <column name="PARTNERBANKID" type="bigint"/>
	    </createIndex>
	</changeSet>
	<changeSet id="13" author="Jayant">
	    <createIndex tableName="PRESENTMENTHEADER" indexName="IX_PRESENTMENTHDR_PDATE">
	        <column name="PRESENTMENTDATE" type="DATETIME"/>   
	    </createIndex>
	</changeSet>
	<changeSet id="14.0" author="Jayant">
	    <dropIndex tableName="FINANCEMAIN" indexName="IX_FM_RCD_MNT_STS"  />
	</changeSet>
	<changeSet id="14" author="Jayant">
	    <createIndex tableName="FINANCEMAIN" indexName="IX_FM_CID_FINREF">
	        <column name="CUSTID" type="bigint"/>
	        <column name="FINREFERENCE" type="VARCHAR2(20)"/>
	    </createIndex>
	</changeSet>
	<changeSet id="16" author="Madhubabu">
	   <sql>
	   	Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	  	INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'JVPostingDialog_PostingAgainst','JVPostingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
     	INSERT INTO SecRights SELECT (select (SeqNo+2) from SeqSecRights),3,'JVPostingDialog_Reference','JVPostingDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights), (select Grpid from SecGroups where grpcode='JVPOSTINGS_MAKER'), (select rightid from secrights where rightname='JVPostingDialog_PostingAgainst'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+2) from SeqSecGroupRights), (select Grpid from SecGroups where grpcode='JVPOSTINGS_MAKER'), (select rightid from secrights where rightname='JVPostingDialog_Reference'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	   </sql>
	   </changeSet>
	   	<changeSet id="15" author="Surekha">
		<sql>
 			INSERT INTO ErrorDetails VALUES ('WMAN01','EN','W','{0} Customer already having {1} open Mandates ','','Approved','','','','','',0,null,1000,0);  
		</sql>
	</changeSet>
	<changeSet id="17" author="SreeRavali">
		<sql>
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		
			
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'ErrorDetail_MAKER','WF Maker for ErrorDetail', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'ErrorDetail_APPROVER','WF Maker for ErrorDetail', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_ErrorDetail_ErrorDetail'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_MAKER'), (Select RightID from SecRights where RightName = 'button_ErrorDetailDialog_btnEdit'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_MAKER'), (Select RightID from SecRights where RightName = 'button_ErrorDetailDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_MAKER'), (Select RightID from SecRights where RightName = 'ErrorDetailDialog_ErrorSeverity'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_MAKER'), (Select RightID from SecRights where RightName = 'ErrorDetailDialog_ErrorMessage'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_ErrorDetail_ErrorDetail'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_APPROVER'), (Select RightID from SecRights where RightName = 'button_ErrorDetailDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
			-- Security Role Groups
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='ErrorDetail_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='ErrorDetail_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
		
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>
	 <!-- <changeSet id="18" author="SreeRavali">
		<sql>
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_MAKER'), (Select RightID from SecRights where RightName = 'menuCat_ApplicationMaster'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'ErrorDetail_APPROVER'), (Select RightID from SecRights where RightName = 'menuCat_ApplicationMaster'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	</sql>
	</changeSet> -->
	 <changeSet id="19" author="Madhubabu" >
	<addColumn tableName="jvpostings_temp">
		<column name="Reference" type="nvarchar(20)"/>
		<column name="PostAgainst" type="char(5)"/>
	</addColumn>
	</changeSet>
	<changeSet id="20" author="Madhubabu" >
	<addColumn tableName="jvpostings">
		<column name="Reference" type="nvarchar(20)"/>
		<column name="PostAgainst" type="char(5)"/>
	</addColumn>
	</changeSet>
	
	<changeSet author="Madhubabu" id="21">
		<createView replaceIfExists="true" viewName="JVPOSTINGS_VIEW">
          SELECT     T1.BatchReference, T1.Batch, T1.Filename, T1.DebitCount, T1.CreditsCount, T1.TotDebitsByBatchCcy, T1.TotCreditsByBatchCcy, T1.BatchPurpose, T1.Currency, 
                      T1.ExchangeRateType, T1.ValidationStatus, T1.Version, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.CcyEditField  CurrencyEditField, T3.CcyDesc  CurrencyDesc, 
                      T1.BatchPostingStatus, T3.CcyNumber, T1.Branch, T1.PostingDate,T1.expReference,T1.Reference,T1.PostAgainst

FROM         JVPostings_Temp  T1 INNER JOIN
                      SecUsers  T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                      RMTCurrencies  T3 ON T1.Currency = T3.CcyCode
UNION ALL
SELECT     T1.BatchReference, T1.Batch, T1.Filename, T1.DebitCount, T1.CreditsCount, T1.TotDebitsByBatchCcy, T1.TotCreditsByBatchCcy, T1.BatchPurpose, T1.Currency, 
                      T1.ExchangeRateType, T1.ValidationStatus, T1.Version, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.CcyEditField  CurrencyEditField, T3.CcyDesc  CurrencyDesc, 
                      T1.BatchPostingStatus, T3.CcyNumber, T1.Branch, T1.PostingDate,T1.expReference,T1.Reference,T1.PostAgainst

FROM         JVPostings  T1 INNER JOIN
                    SecUsers  T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                      RMTCurrencies  T3 ON T1.Currency = T3.CcyCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          JVPostings_TEMP
                            WHERE      BatchReference = T1.BatchReference)
          
        </createView>
	</changeSet>
	<changeSet author="Madhubabu" id="22">
		<createView replaceIfExists="true" viewName="JVPOSTINGS_TVIEW">
          SELECT     T1.BatchReference, T1.Batch, T1.Filename, T1.DebitCount, T1.CreditsCount, T1.TotDebitsByBatchCcy, T1.TotCreditsByBatchCcy, T1.BatchPurpose, T1.Currency, 
                      T1.ExchangeRateType, T1.ValidationStatus, T1.Version, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
                      T1.BatchPostingStatus,T1.Branch, T1.PostingDate,T1.expReference,T1.Reference,T1.PostAgainst
FROM          JVPostings_Temp T1 INNER JOIN
                       SecUsers T2 ON T1.LastMntBy = T2.UsrID
          
        </createView>
	</changeSet>
	<changeSet author="Madhubabu" id="23">
		<createView replaceIfExists="true" viewName="JVPOSTINGS_AVIEW">
          SELECT     T1.BatchReference, T1.Batch, T1.Filename, T1.DebitCount, T1.CreditsCount, T1.TotDebitsByBatchCcy, T1.TotCreditsByBatchCcy, T1.BatchPurpose, T1.Currency, 
                      T1.ExchangeRateType, T1.ValidationStatus, T1.Version, T1.LastMntBy, T1.LastMntOn, T2.UsrLogin, T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.CcyEditField  CurrencyEditField, T3.CcyDesc  CurrencyDesc, 
                      T1.BatchPostingStatus, T3.CcyNumber, T1.Branch, T1.PostingDate,T1.expReference,T1.Reference,T1.PostAgainst
FROM                  JVPostings  T1 INNER JOIN
                      SecUsers  T2 ON T1.LastMntBy = T2.UsrID INNER JOIN
                      RMTCurrencies  T3 ON T1.Currency = T3.CcyCode
          
        </createView>
	</changeSet>
		<changeSet id="24" author="Surekha">
		<sql>
			update RBFieldDetails set RBFLDTABLENAME='', RBSTFLDS='static,global' , MODULECODE='' where RBModule='BOUNCE' and RBFLDNAME='MandateType';
		</sql>
	</changeSet>
	
			<changeSet id="25" author="DURGAPRASAD G">
		<addColumn tableName="PRESENTMENTDETAILS">
			<column name="BOUNCERETURNCODE" type="VARCHAR2(8)"/>
		</addColumn>
	</changeSet>	
		<changeSet id="26" author="DURGAPRASAD G">
		<addColumn tableName="PRESENTMENTDETAILS_TEMP">
			<column name="BOUNCERETURNCODE" type="VARCHAR2(8)"/>
		</addColumn>
	</changeSet>
		
		<changeSet id="27" author="Madhubabu">
		<sql>
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	insert into secrolegroups values((select max(rolegrpid)+1 from secrolegroups),(select grpid from secgroups where grpcode='FINANCE_REFERENCEDETAIL_MAKER'),
	(select roleid from secroles where rolecd='MSTGRP1_MAKER'),0,1000,current_timestamp,'','','','','','',0);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>	
		<changeSet id="28" author="Madhubabu">
	<sql>
		Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
		
		INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups),'FINANCE_REFERENCEDETAIL_APPROVER','Loan Process Editor Approver', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCE_REFERENCEDETAIL_APPROVER'), (Select RightID from SecRights where RightName ='menuItem_SolutionFactory_FinanceReferenceDetail'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'FINANCE_REFERENCEDETAIL_APPROVER'), (Select RightID from SecRights where RightName ='button_FinanceReferenceDetailDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
		
		Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
		Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
	</sql>
</changeSet>
	<changeSet id="29" author="Madhubabu">
		<sql>
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
	insert into secrolegroups values((select max(rolegrpid)+1 from secrolegroups),(select grpid from secgroups where grpcode='FINANCE_REFERENCEDETAIL_APPROVER'),
	(select roleid from secroles where rolecd='MSTGRP1_APPROVER'),0,1000,current_timestamp,'','','','','','',0);
	Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>	
	<changeSet id="30" author="Siva">
		<sql>
		 UPDATE SECROLES SET ROLEDESC = 'Receipt Bounce/Cancellation Approver'  WHERE ROLECD = 'BOUNCE_APPROVER';
		 UPDATE SECROLES SET ROLEDESC = 'Receipt Bounce/Cancellation Maker'  WHERE ROLECD = 'BOUNCE_MAKER';
		</sql>
	</changeSet>	
	<changeSet author="Siva" id="31">
		<createView replaceIfExists="true" viewName="FINRECEIPTHEADER_VIEW">
         
 SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive
							FROM         FinReceiptHeader_Temp T1 INNER JOIN
				       FinanceMain T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
				UNION ALL
				 SELECT     T1.ReceiptID, T1.ReceiptDate, T1.ReceiptType,T1.RecAgainst,T1.Reference, T1.ReceiptPurpose, 
				 T1.ReceiptMode, T1.ExcessAdjustTo,T1.AllocationType,T1.ReceiptAmount,T1.EffectSchdMethod, 
				 T1.ReceiptModeStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,T1.RecordStatus,T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
				 T2.FinType,  T2.FinBranch, T3.CustCIF , 	T3.CustShrtName, T2.FinCcy, T1.RealizationDate,
				 T1.CancelReason, T4.FinTypeDesc,  T6.BranchDesc FinBranchDesc, T5.CcyDesc FinCcyDesc, T7.RejectDesc CancelReasonDesc, T2.FinIsActive
							FROM         FinReceiptHeader T1 INNER JOIN
				       FinanceMain T2 ON T1.Reference = T2.FinReference INNER JOIN
				       Customers T3 ON T2.CustId = T3.CustId INNER JOIN
				       RMTFinanceTypes T4 ON T2.FinType = T4.FinType INNER JOIN
				       RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode INNER JOIN
				       RMTBranches T6 ON T2.FinBranch = T6.BranchCode LEFT JOIN
				       BMTRejectCodes T7 ON T1.CancelReason = T7.RejectCode
						WHERE     NOT EXISTS
				                          (SELECT     1
				                            FROM          FinReceiptHeader_TEMP 
				                            WHERE      ReceiptID = T1.ReceiptID)
        </createView>
	</changeSet>
	<changeSet author="Madhubabu" id="32">
		<sql>
		delete from secrolegroups where grpid in (select grpid from secgroups where grpcode='FINANCE_REFERENCEDETAIL_MAKER') and roleid in (select roleid from secroles where rolecd='MSTGRP1_MAKER');
		delete from secgrouprights where grpid in (select grpid from secgroups where grpcode='FINANCE_REFERENCEDETAIL_APPROVER') and rightid in (Select RightID from SecRights where RightName ='menuItem_SolutionFactory_FinanceReferenceDetail'); 
		delete from secgrouprights where grpid in (select grpid from secgroups where grpcode='FINANCE_REFERENCEDETAIL_APPROVER') and rightid in (Select RightID from SecRights where RightName ='button_FinanceReferenceDetailDialog_btnSave');
	    delete  from secrolegroups where grpid in (select grpid from secgroups where grpcode='FINANCE_REFERENCEDETAIL_APPROVER') and roleid in (select roleid from secroles where rolecd='MSTGRP1_APPROVER');
		delete from secgroups where grpcode='FINANCE_REFERENCEDETAIL_APPROVER';
		</sql>
	</changeSet>
	<changeSet id="33" author="Irfan">
	<addColumn tableName="AMTVEHICLEDEALER">
		<column name="ZIPCODE" type="VARCHAR2(20)"/>
		<column name="ACTIVE" type="boolean"></column>
	</addColumn>
	<addColumn tableName="AMTVEHICLEDEALER_TEMP">
		<column name="ZIPCODE" type="VARCHAR2(20)"/>
		<column name="ACTIVE" type="boolean"></column>
	</addColumn>
	</changeSet>
	<changeSet id="34" author="Irfan">
		<createView viewName="AMTVEHICLEDEALER_VIEW" replaceIfExists="true">
			 SELECT       T1.DealerId,T1.DealerType,T1.DealerName,T1.DealerTelephone,T1.DealerFax,T1.DealerAddress1,T1.DealerAddress2,
             T1.DealerAddress3,T1.DealerAddress4,T1.DealerCountry,T5.CountryDesc lovDescCountry,T1.DealerProvince,
             T4.CPProvinceName lovDescProvince,T1.DealerCity,T3.PCCityName lovDescCity,T1.Email,T1.POBox, T1.ZipCode, T1.Active, T1.Emirates
             ,T1.CommisionPaidAt,T1.CalculationRule,T7.RuleCodeDesc CalRuleDesc,T1.PaymentMode,T1.AccountNumber,T1.AccountingSetId,
             T8.AccountSetCode AccountingSetCode ,T8.AccountSetCodeName AccountingSetDesc,T9.CPProvinceName EmiratesDescription,T1.SellerType,
             T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
FROM         AMTVehicleDealer_Temp T1 LEFT OUTER JOIN
             RMTProvinceVsCity T3 ON T1.DealerCountry = T3.PCCountry AND T1.DealerProvince = T3.PCProvince AND T1.DealerCity = T3.PCCity LEFT OUTER JOIN
             RMTCountryVsProvince T4 ON T1.DealerCountry = T4.CPCountry AND T1.DealerProvince = T4.CPProvince LEFT OUTER JOIN
             BMTCountries T5 ON T1.DealerCountry = T5.CountryCode LEFT OUTER JOIN
             Rules T7 ON T1.CalculationRule = T7.RuleCode AND RuleEvent = 'ADDDBS' LEFT OUTER JOIN
             RMTAccountingSet T8 ON T1.AccountingSetId = T8.AccountSetid LEFT OUTER JOIN
             RMTCountryVsProvince T9 ON T1.Emirates = T9.CPProvince


UNION ALL

SELECT       T1.DealerId,T1.DealerType,T1.DealerName,T1.DealerTelephone,T1.DealerFax,T1.DealerAddress1,T1.DealerAddress2,
             T1.DealerAddress3,T1.DealerAddress4,T1.DealerCountry,T5.CountryDesc lovDescCountry,T1.DealerProvince,
             T4.CPProvinceName lovDescProvince,T1.DealerCity,T3.PCCityName lovDescCity,T1.Email,T1.POBox, T1.ZipCode, T1.Active, T1.Emirates
             ,T1.CommisionPaidAt,T1.CalculationRule,T7.RuleCodeDesc CalRuleDesc,T1.PaymentMode,T1.AccountNumber,T1.AccountingSetId,
             T8.AccountSetCode AccountingSetCode ,T8.AccountSetCodeName AccountingSetDesc,T9.CPProvinceName EmiratesDescription,T1.SellerType,
             T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
FROM         AMTVehicleDealer T1 LEFT OUTER JOIN
             RMTProvinceVsCity T3 ON T1.DealerCountry = T3.PCCountry AND T1.DealerProvince = T3.PCProvince AND T1.DealerCity = T3.PCCity AND T1.DealerCity = T3.PCCity LEFT OUTER JOIN
             RMTCountryVsProvince T4 ON T1.DealerCountry = T4.CPCountry AND T1.DealerProvince = T4.CPProvince LEFT OUTER JOIN
             BMTCountries T5 ON T1.DealerCountry = T5.CountryCode   LEFT OUTER JOIN
             Rules T7 ON T1.CalculationRule = T7.RuleCode AND RuleEvent = 'ADDDBS' LEFT OUTER JOIN
             RMTAccountingSet T8 ON T1.AccountingSetId = T8.AccountSetid LEFT OUTER JOIN
             RMTCountryVsProvince T9 ON T1.Emirates = T9.CPProvince

WHERE     NOT EXISTS

 (SELECT 1 FROM AMTVehicleDealer_TEMP 
  WHERE DealerId = T1.DealerId)
		</createView>
	</changeSet>
	<changeSet id="35" author="Irfan">
	<createView viewName="AMTVEHICLEDEALER_AVIEW" replaceIfExists="true">
	SELECT       T1.DealerId,T1.DealerType,T1.DealerName,T1.DealerTelephone,T1.DealerFax,T1.DealerAddress1,T1.DealerAddress2,
             T1.DealerAddress3,T1.DealerAddress4,T1.DealerCountry,T5.CountryDesc lovDescCountry,T1.DealerProvince,
             T4.CPProvinceName lovDescProvince,T1.DealerCity,T3.PCCityName lovDescCity,T1.Email,T1.POBox, T1.ZipCode, T1.Active, T1.Emirates
             ,T1.CommisionPaidAt,T1.CalculationRule,T7.RuleCodeDesc CalRuleDesc,T1.PaymentMode,T1.AccountNumber,T1.AccountingSetId,
             T8.AccountSetCode AccountingSetCode ,T8.AccountSetCodeName AccountingSetDesc,T9.CPProvinceName EmiratesDescription,T1.SellerType,
             T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
FROM         AMTVehicleDealer T1 LEFT OUTER JOIN
             RMTProvinceVsCity T3 ON T1.DealerCountry = T3.PCCountry AND T1.DealerProvince = T3.PCProvince AND T1.DealerCity = T3.PCCity  AND T1.DealerCity = T3.PCCity  LEFT OUTER JOIN
             RMTCountryVsProvince T4 ON T1.DealerCountry = T4.CPCountry AND T1.DealerProvince = T4.CPProvince LEFT OUTER JOIN
             BMTCountries T5 ON T1.DealerCountry = T5.CountryCode LEFT OUTER JOIN
             Rules T7 ON T1.CalculationRule = T7.RuleCode AND RuleEvent = 'ADDDBS' LEFT OUTER JOIN
             RMTAccountingSet T8 ON T1.AccountingSetId = T8.AccountSetid LEFT OUTER JOIN
             RMTCountryVsProvince T9 ON T1.Emirates = T9.CPProvince
	</createView>
	</changeSet>
	<changeSet id="36" author="Irfan">
	<sql>
	update AMTVEHICLEDEALER set ZipCode='1';
	update AMTVEHICLEDEALER set Active=1;
	</sql>
	<addNotNullConstraint tableName="AMTVEHICLEDEALER" columnName="ZipCode" columnDataType="varchar2(20)"/>
	<addNotNullConstraint tableName="AMTVEHICLEDEALER_TEMP" columnName="ZipCode" columnDataType="varchar2(20)"/>
	</changeSet>
	<changeSet id="37" author="Irfan">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'DEALER_MAKER', 'VAS Manufacturer Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'VehicleDealerDialog_ZipCode','VehicleDealerDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'VehicleDealerDialog_Active','VehicleDealerDialog',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='DEALER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VehicleDealerDialog_ZipCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='DEALER_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VehicleDealerDialog_Active'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	<changeSet id="38" author="Irfan">
	<addNotNullConstraint tableName="AMTVEHICLEDEALER" columnName="Active" columnDataType="boolean"/>
	<addNotNullConstraint tableName="AMTVEHICLEDEALER_TEMP" columnName="Active" columnDataType="boolean"/>
	</changeSet>
	<changeSet id="39" author="Siva">
	<createView viewName="VASRECORDING_TVIEW" replaceIfExists="true">
	 SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess, T2.FeeAccounting
          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
	</createView>
	</changeSet>
	
	<changeSet id="40" author="Vinay">
		<sql>
					
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);


INSERT INTO SecGroups SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'BUILDERGROUP_VIEW', 'Allow to view BuilderGroup', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;
INSERT INTO SecGroups SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'BUILDERGROUP_MAKER', 'WF Maker for BuilderGroup', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;
INSERT INTO SecGroups SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'BUILDERGROUP_APPROVER', 'WF Maker for BuilderGroup', 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE 0=0;

INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_masters_BuilderGroup','MENU',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),0,'menuItem_masters_BuilderGroupEnquiry','MENU',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_BuilderGroupList_PrintList','BuilderGroupList',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_BuilderGroupList_NewBuilderGroup','BuilderGroupList',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_BuilderGroupDialog_btnNew','BuilderGroupDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_BuilderGroupDialog_btnEdit','BuilderGroupDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_BuilderGroupDialog_btnDelete','BuilderGroupDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),2,'button_BuilderGroupDialog_btnSave','BuilderGroupDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'BuilderGroupDialog_id','BuilderGroupDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'BuilderGroupDialog_name','BuilderGroupDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS),3,'BuilderGroupDialog_segmentation','BuilderGroupDialog',0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;


INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (select max(RightID) from SecRights WHERE RightName='menuCat_ApplicationMaster'),1,0,10000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_masters_BuilderGroup'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_masters_BuilderGroupEnquiry'),1,0,10000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_BuilderGroupList_NewBuilderGroup'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_BuilderGroupDialog_btnDelete'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_BuilderGroupDialog_btnSave'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BuilderGroupDialog_id'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BuilderGroupDialog_name'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BuilderGroupDialog_segmentation'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_APPROVER'), (select max(RightID) from SecRights WHERE RightName='menuCat_ApplicationMaster'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_APPROVER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_masters_BuilderGroup'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_APPROVER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_masters_BuilderGroupEnquiry'),1,0,10000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_APPROVER'), (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_BuilderGroupDialog_btnSave'),1,0,10000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;


INSERT INTO SecRoleGroups SELECT (Select MAX(RoleGrpID)+1 From SecRoleGroups), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_MAKER'), (select roleid from SecRoles where RoleCd='MSTGRP1_MAKER'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRoleGroups WHERE 0=0;
INSERT INTO SecRoleGroups SELECT (Select MAX(RoleGrpID)+1 From SecRoleGroups), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BUILDERGROUP_APPROVER'), (select roleid from SecRoles where RoleCd='MSTGRP1_APPROVER'), 0,1000,CURRENT_TIMESTAMP,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRoleGroups WHERE 0=0;

			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);

</sql>
</changeSet>
<changeSet id="41" author="SreeRavali">
		<sql>
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
			
			
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'RESTRUCTURE_MAKER','WF Maker for Restructure', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
			INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'RESTRUCTURE_APPROVER','WF Approver for Restructure', 1, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL,0);
		
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RestructureDialog_btnValidate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RestructureDialog_btnSave', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 2, 'button_RestructureDialog_btnBuildSchd', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_numberOfTerms', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_paymentAmount', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_paymentSchdMthd', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_repayRateBasis', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_repayProfitRate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_repayRate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_repayFrq', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_repayPftFrq', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_firstInterestFrqDate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_firstDueDate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_repayRvwFrq', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_firstPaymentReviewDate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_repayCpzFrq', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_firstCpzDate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_maturityDate', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_finRepayPftOnFrq', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_capitalizeODCharges', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into SecRights Values((Select max(RightID) + 1 from SecRights), 3, 'RestructureDialog_capitalizeODInterest', 'RestructureDialog', 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'button_RestructureDialog_btnValidate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'button_RestructureDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'button_RestructureDialog_btnBuildSchd'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_numberOfTerms'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_paymentAmount'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_paymentSchdMthd'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_repayRateBasis'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_repayProfitRate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_repayRate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_repayPftFrq'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_repayFrq'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_firstInterestFrqDate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_firstDueDate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_repayRvwFrq'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_firstPaymentReviewDate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_repayCpzFrq'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_firstCpzDate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_maturityDate'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_finRepayPftOnFrq'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_capitalizeODCharges'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_MAKER'), (Select RightID from SecRights where RightName = 'RestructureDialog_capitalizeODInterest'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Insert into secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'RESTRUCTURE_APPROVER'), (Select RightID from SecRights where RightName = 'button_RestructureDialog_btnSave'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'RESTRUCTURE_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'RESTRUCTURE_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, CURRENT_TIMESTAMP, NULL, NULL, NULL, NULL, NULL, NULL, 0);
			
			Update SeqSecGroups Set SeqNo = (Select MAX(GrpID) + 1 from SecGroups);
			Update SeqSecRights Set SeqNo = (Select MAX(RightID) + 1 from SecRights);
			Update SeqSecGroupRights Set SeqNo = (Select MAX(GrpRightID) + 1 from SecGroupRights);
			Update SeqSecRoleGroups Set SeqNo = (Select MAX(RoleGrpID) + 1 from SecRoleGroups);
		</sql>
	</changeSet>
	
	<changeSet id="42" author="durgaprasad g">
		<createView viewName="INT_ALM_VIEW" replaceIfExists="true">
		Select substr(F.FinReference,length(F.FinReference)-7,length(F.FinReference)) AGREEMENTID, F.FinReference AGREEMENTNO,F.FinType PRODUCTFLAG,'' NPA_STAGEID ,
		(FP.TotalPriBal+Fp.TotalPftBal)/CcyMinorCcyUnits INSTLAMT,FP.TotalPriBal/CcyMinorCcyUnits PRINCOMP,Fp.TotalPftBal/CcyMinorCcyUnits INTCOMP,Fp.FirstRepayDate DUEDATE,
		Fp.PftAccrued/CcyMinorCcyUnits ACCRUEDAMT,NULL ACCRUEDON,Fp.PftAccrued/CcyMinorCcyUnits CUMULATIVE_ACCRUAL_AMT,'N' ADVFLAG
		from FinanceMain F
		INNER JOIN FINPFTDETAILS FP ON FP.FINREFERENCE=F.FINREFERENCE
		Inner Join RMTCurrencies RC on RC.CcyCode=F.FinCcy
		</createView>
	</changeSet>
	<changeSet id="43" author="Vinay">
	<sql>
		CREATE TABLE BUILDERGROUP
   (	ID 								NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT by 1)  NOT NULL ENABLE, 
		NAME							VARCHAR2(50 BYTE) NOT NULL ENABLE, 
		SEGMENTATION 					VARCHAR2(50 BYTE) NOT NULL ENABLE, 
		VERSION 						NUMBER(10,0) NOT NULL ENABLE, 
		LASTMNTBY 						NUMBER(19,0), 
		LASTMNTON 						DATE, 
		RECORDSTATUS 					VARCHAR2(50 BYTE), 
		ROLECODE 						VARCHAR2(100 BYTE), 
		NEXTROLECODE 					VARCHAR2(100 BYTE), 
		TASKID 							VARCHAR2(50 BYTE), 
		NEXTTASKID 						VARCHAR2(50 BYTE), 
		RECORDTYPE 						VARCHAR2(50 BYTE), 
		WORKFLOWID 						NUMBER(19,0),
		CONSTRAINT "PK_BUILDERGROUP_ID" PRIMARY KEY (ID)
		
		USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
		STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
		PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
		BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
		TABLESPACE "PFF"  ENABLE
   ) 
	</sql>
</changeSet>
<changeSet id="44" author="Vinay">
	<sql>
		ALTER TABLE BUILDERGROUP
		ADD CONSTRAINT UK_BUILDERGROUP_NAME UNIQUE (NAME);
	</sql>
</changeSet>
<changeSet id="45" author="Vinay">
	<sql>
		CREATE TABLE BUILDERGROUP_TEMP
   (	ID 								NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT by 1)  NOT NULL ENABLE, 
		NAME							VARCHAR2(50 BYTE) NOT NULL ENABLE, 
		SEGMENTATION 					VARCHAR2(50 BYTE) NOT NULL ENABLE, 
		VERSION 						NUMBER(10,0) NOT NULL ENABLE, 
		LASTMNTBY 						NUMBER(19,0), 
		LASTMNTON 						DATE, 
		RECORDSTATUS 					VARCHAR2(50 BYTE), 
		ROLECODE 						VARCHAR2(100 BYTE), 
		NEXTROLECODE 					VARCHAR2(100 BYTE), 
		TASKID 							VARCHAR2(50 BYTE), 
		NEXTTASKID 						VARCHAR2(50 BYTE), 
		RECORDTYPE 						VARCHAR2(50 BYTE), 
		WORKFLOWID 						NUMBER(19,0),
		CONSTRAINT "PK_BUILDERGROUP_TEMP_ID" PRIMARY KEY (ID)
		
		USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
		STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
		PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
		BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
		TABLESPACE "PFF"  ENABLE
   ) 
	</sql>
</changeSet>
<changeSet id="46" author="Vinay">
	<sql>
		ALTER TABLE BUILDERGROUP_TEMP
		ADD CONSTRAINT UK_BUILDERGROUP_TEMP_NAME UNIQUE (NAME);
	</sql>
</changeSet>
<changeSet id="47" author="Vinay">
	<createView viewName="BuilderGroup_AView" replaceIfExists="true">
SELECT		T1.Id, T1.Name, T1.Segmentation		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BuilderGroup T1
</createView>
</changeSet>
	<changeSet id="48" author="Vinay">
	<createView viewName="BuilderGroup_View" replaceIfExists="true">
SELECT		T1.Id, T1.Name, T1.Segmentation		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BuilderGroup_Temp  T1 
UNION ALL

SELECT		T1.Id, T1.Name, T1.Segmentation		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BuilderGroup  T1 
WHERE     NOT EXISTS (SELECT 1 FROM BuilderGroup_TEMP WHERE Id = T1.Id)
</createView>
</changeSet>

	<changeSet id="49" author="satish">
	<sql>
	Update MANDATES_TEMP set AcCType ='11' where AcCType ='29';
	</sql>
	</changeSet>
	
		<changeSet id="50" author="Durgaprasad g">
	<createView viewName="INT_CF_CONTROL_VIEW" replaceIfExists="true">
	select  ApplicationNo AGREEMENTNO,cast(null as numeric(8,0)) AGREEMENTID,T2.FinType PRODUCTFLAG,
		cast(T10.PromotionCode as numeric(8,0)) SCHEMEID,cast(T2.FinBranch as numeric(8,0)) BRANCHID,'' NPA_STAGEID,cast(T2.FinIsActive as varchar(1)) LOAN_STATUS,
		case when FinCurrAssetValue>0 then 'PD' else 'FD' end DISB_STATUS,
		FirstRepayDate FIRST_DUE_DATE,T2.MaturityDate MATURITY_DATE,T1.FinAmount/CcyMinorCcyUnits AMTFIN,cast(null as numeric(8,0))  DISBURSED_AMOUNT,
		(T2.ODPrincipal+T2.ODProfit)/CcyMinorCcyUnits EMI_DUE,
		T2.ODPrincipal/CcyMinorCcyUnits PRINCIPAL_DUE,T2.ODProfit/CcyMinorCcyUnits INTEREST_DUE,
		(T2.TotalPriPaid+T2.TotalPftPaid)/CcyMinorCcyUnits  EMI_RECEIVED,
		T2.TotalPriPaid/CcyMinorCcyUnits PRINCIPAL_RECEIVED,T2.TotalPftPaid/CcyMinorCcyUnits INTEREST_RECEIVED,
		(T2.TotalPriBal+T2.TotalPftBal)/CcyMinorCcyUnits EMI_OS,
		T2.TotalPriBal/CcyMinorCcyUnits PRINCIPAL_OS,T2.TotalPftBal/CcyMinorCcyUnits INTEREST_OS,
		cast(null as numeric(8,0))  BULK_REFUND,cast(null as numeric(8,0))  PRINCIPAL_WAIVED,cast(null as numeric(8,0))  EMI_PRINCIPAL_WAIVED,cast(null as numeric(8,0))  EMI_INTEREST_WAIVED,
		cast(null as numeric(8,0))  PRINCIPAL_AT_TERM,cast(null as numeric(8,0))  ADVANCE_EMI,cast(null as numeric(8,0))  ADVANCE_EMI_BILLED,cast(null as numeric(8,0))  MIGRATED_ADVANCE_EMI,
		cast(null as numeric(8,0))  MIGR_ADV_EMI_BILLED,cast(null as numeric(8,0))  MIGRATED_ADVANCE_EMI_UNBILLED,cast(null as numeric(8,0))  CLOSED_CAN_ADV_EMI,
		T2.TotalPriBal/CcyMinorCcyUnits PRINCIPAL_BALANCE,T2.TotalPftBal/CcyMinorCcyUnits INTEREST_BALANCE,
		(T2.TotalPriBal+T2.TotalPftBal)/CcyMinorCcyUnits SOH_BALANCE,(NOInst-NOPaidInst) NO_OF_UNBILLED_EMI,
		T2.TotalPftSchd/CcyMinorCcyUnits TOTAL_INTEREST,T2.PFTACCRUED/CcyMinorCcyUnits ACCRUED_AMOUNT,'' BALANCE_UMFC,
		cast(null as numeric(8,0))  EMI_IN_ADV_RCVD_MAKER,cast(null as numeric(8,0))  EMI_IN_ADVANCE_BILLED,cast(null as numeric(8,0)) EMI_IN_ADVANCE_UNBILLED,
		cast(null as numeric(8,0))  MIG_ADV_EMI_BILLED_PRINCOMP,cast(null as numeric(8,0))  MIG_ADV_EMI_BILLED_INTCOMP,cast(null as numeric(8,0))  MIG_ADV_EMI_UNBILLED_PRINCOMP,
		cast(null as numeric(8,0))  MIG_ADV_EMI_UNBILLED_INTCOMP,cast(null as numeric(8,0)) EMI_IN_ADV_BILLED_PRINCOMP,
		cast(null as numeric(8,0)) EMI_IN_ADV_BILLED_INTCOMP,cast(null as numeric(8,0)) EMI_IN_ADV_UNBILLED_PRINCOMP,cast(null as numeric(8,0)) EMI_IN_ADV_UNBILLED_INTCOMP,
		cast(null as numeric(8,0)) CLOS_CAN_ADV_EMI_PRINCOMP,cast(null as numeric(8,0)) CLOS_CAN_ADV_EMI_INTCOMP,cast(null as numeric(8,0)) SECURITY_DEPOSIT,
		cast(null as numeric(8,0)) SECURITY_DEPOSIT_ADJUSTED,cast(null as numeric(8,0)) ROUNDING_DIFF_RECEIVABLE,cast(null as numeric(8,0)) ROUNDING_DIFF_RECEIVED,
		cast(null as numeric(8,0)) MIG_DIFFERENCE_RECEIVABLE,cast(null as numeric(8,0)) MIG_DIFFERENCE_RECEIVED,cast(null as numeric(8,0)) MIG_DIFFERENCE_PAYABLE,cast(null as numeric(8,0)) MIG_DIFFERENCE_PAID,
		(UnPaidSchdPri+UnPaidSchdPft)/CcyMinorCcyUnits WRITEOFF_DUE,
		 ((WriteoffPrincipal+WriteoffProfit)-(UnPaidSchdPri+UnPaidSchdPft))/CcyMinorCcyUnits WRITEOFF_RECEIVED,
		cast(null as numeric(8,0)) SOLD_SEIZE_RECEIVABLE,cast(null as numeric(8,0)) SOLD_SEIZE_RECEIVED,cast(null as numeric(8,0)) SOLD_SEIZE_PAYABLE,cast(null as numeric(8,0)) SOLD_SEIZE_PAID,
		cast(null as numeric(8,0)) NET_EXCESS_RECEIVED,cast(null as numeric(8,0)) NET_EXCESS_ADJUSTED,PenaltyBal/CcyMinorCcyUnits LPP_CHARGES_RECEIVABLE,
		T4.PenaltyPaid/CcyMinorCcyUnits LPP_CHARGES_RECEIVED,cast(null as numeric(8,0)) PDC_SWAP_CHARGES_RECEIVABLE,cast(null as numeric(8,0)) PDC_SWAP_CHARGES_RECEIVED,
		cast(null as numeric(8,0)) REPO_CHARGES_RECEIVABLE,cast(null as numeric(8,0)) REPO_CHARGES_RECEIVED,cast(null as numeric(8,0)) FORECLOSURE_CHARGES_DUE,cast(null as numeric(8,0)) FORECLOSURE_CHARGES_RCVD,
		cast(null as numeric(8,0)) BOUNCE_CHARGES_DUE,cast(null as numeric(8,0)) BOUNCE_CHARGES_RCVD,cast(null as numeric(8,0)) INSUR_RENEW_CHARGE,cast(null as numeric(8,0)) INSUR_RENEW_CHARGE_RECD,
		cast(null as numeric(8,0)) INSUR_RECEIVABLE,cast(null as numeric(8,0)) INSUR_RECEIVED,cast(null as numeric(8,0)) INSUR_PAYABLE,cast(null as numeric(8,0)) INSUR_PAID,
		T5.CustID CUSTOMERID,(coalesce(CustFName,'')||coalesce(CustMName,'')||coalesce(CustLName,'')) CUSTOMERNAME,
		T2.NOInst SANCTIONED_TENURE,T13.RepayAmount LOAN_EMI,RepayBaseRate FLAT_RATE,
		T1.EffectiveRateOfReturn EFFECTIVE_RATE,T1.FinContractDate AGREEMENTDATE,T6.DisbDate DISBURSALDATE,
		(select LatestRpyDate from FinPftDetails where FinIsActive='0') CLOSUREDATE,cast(null as numeric(8,0)) NO_OF_ADVANCE_EMIS,cast(null as numeric(8,0)) ASSETCOST,
		(NOInst-NOPaidInst) NO_OF_EMI_OS,T2.CURODDAYS DPD,cast(null as numeric(3,0)) CURRENT_BUCKET,
		T2.FinBranch BRANCH_NAME,FinTypeDesc SCHEME_NAME,cast(null as numeric(3,0)) DERIVED_BUCKET,'' ASSETDESC,
		'' MAKE,'' CHASISNUM,'' REGDNUM,'' ENGINENUM,cast(null as numeric(16,2)) INVOICEAMT,'' SUPPLIERDESC,
		'' INSTRUMENT,sysdate  REPO_DATE,'' LOCAL_OUTSTATION_FLAG,
		T2.FirstODDate FIRST_REPAYDUE_DATE, T1.FinIsActive
 from   FinanceMain T1 Inner join
		FinPftDetails T2 on T2.FinReference=T1.FinReference Inner join
		FinWriteoffDetail T3 on T3.FinReference=T1.FinReference Inner join
		FinODCRecovery T4 on T4.FinReference=T1.Finreference Inner join
		Customers T5 on T5.CustID=T1.CustID Inner jOin
		(select FinReference,MIN(DisbDate) DisbDate from FinDisbursementDetails
		 group by FinReference)T6 on T6.FinReference=T1.FinReference Inner Join
		FinStatusDetail T7 on T7.FinReference=T1.FinReference Inner Join
		RMTFinanceTypes T8 on T8.FinType=T1.FinType Inner join
		RMTCurrencies T9 on T9.CcyCode=T1.FinCcy Left Join 
		Promotions T10 On t10.FinType=T2.FinType Inner join
		(select T11.FinReference,RepayAmount from FinPftDetails T11 
		Inner Join FinScheduleDetails T12 on T11.FinReference=T12.FinReference
		) T13 on T1.FinReference=T13.FinReference
</createView>
</changeSet>
</databaseChangeLog>