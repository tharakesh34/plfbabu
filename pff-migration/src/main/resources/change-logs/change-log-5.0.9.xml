<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value="" dbms="oracle" />
	<property name="add.schema" value="" dbms="postgresql" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PLFAVANSEQC.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()" dbms="postgresql" />

	<changeSet id="pre_run_for_pgp" author="Adarsh" runAlways="true"
		dbms="postgresql">
		<sql>
			Set search_path = plf,public,pg_catalog;
		</sql>
	</changeSet>

	<changeSet id="01" author="Durgaprasad G">
		<addColumn tableName="FINANCEMAIN">
			<column name="SanBsdSchdle" type="boolean" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="02" author="Durgaprasad G">
		<addColumn tableName="FINANCEMAIN">
			<column name="PromotionSeqID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="03" author="Durgaprasad G">
		<addColumn tableName="FINANCEMAIN_PA">
			<column name="SanBsdSchdle" type="boolean" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="04" author="Durgaprasad G">
		<addColumn tableName="FINANCEMAIN_PA">
			<column name="PromotionSeqID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="05" author="Durgaprasad G">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="SanBsdSchdle" type="boolean" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="06" author="Durgaprasad G">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="PromotionSeqID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="07" author="Durgaprasad G">
		<createView viewName="financemain_aview" replaceIfExists="true">
			SELECT t1.finreference,
		    t1.investmentref,
		    t1.numberofterms,
		    t1.grcperiodenddate,
		    t1.allowgrcperiod,
		    t1.gracebaserate,
		    t1.gracespecialrate,
		    t1.grcpftrate,
		    t1.grcpftfrq,
		    t1.nextgrcpftdate,
		    t1.allowgrcpftrvw,
		    t1.grcpftrvwfrq,
		    t1.nextgrcpftrvwdate,
		    t1.allowgrccpz,
		    t1.grccpzfrq,
		    t1.nextgrccpzdate,
		    t1.repaybaserate,
		    t1.repayspecialrate,
		    t1.repayprofitrate,
		    t1.repayfrq,
		    t1.nextrepaydate,
		    t1.repaypftfrq,
		    t1.nextrepaypftdate,
		    t1.allowrepayrvw,
		    t1.repayrvwfrq,
		    t1.nextrepayrvwdate,
		    t1.allowrepaycpz,
		    t1.repaycpzfrq,
		    t1.nextrepaycpzdate,
		    t1.maturitydate,
		    t1.cpzatgraceend,
		    t1.downpayment,
		    t1.graceflatamount,
		    t1.reqrepayamount,
		    t1.totalprofit,
		    t1.totalcpz,
		    t1.totalgrosspft,
		    t1.totalgrossgrcpft,
		    t1.totalgracepft,
		    t1.totalgracecpz,
		    t1.grcratebasis,
		    t1.repayratebasis,
		    t1.fintype,
		    t1.finremarks,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.reqmaturity,
		    t1.calterms,
		    t1.calmaturity,
		    t1.firstrepay,
		    t1.lastrepay,
		    t1.finstartdate,
		    t1.finamount,
		    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
		    t1.finrepaymentamount,
		    t1.custid,
		    t1.defferments,
		    t1.plandefercount,
		    t1.finbranch,
		    t1.finsourceid,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.alloweddeffrqchange,
		    t1.availeddeffrqchange,
		    t1.recaltype,
		    t1.finassetvalue,
		    t1.disbaccountid,
		    t1.repayaccountid,
		    t1.finisactive,
		    t1.limitvalid,
		    t1.overridelimit,
		    t1.securitydeposit,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t7.fintypedesc AS lovdescfintypename,
		    t7.finmaxamount AS lovdescfinmaxamt,
		    t7.finminamount AS lovdescfinminamount,
		    t1.mindownpayperc,
		    t7.finisalwdifferment AS lovdescfinalwdeferment,
		    t7.finisdwpayrequired AS lovdescdwnpayreq,
		    t7.finmaxdifferment AS lovdescfinmaxdifferment,
		    t12.branchdesc AS lovdescfinbranchname,
		    t12.branchprovince AS finbranchprovincecode,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.lastrepayrvwdate,
		    t1.lastrepaycpzdate,
		    t1.allowgrcrepay,
		    t1.grcschdmthd,
		    t1.grcmargin,
		    t1.repaymargin,
		    t1.fincurrassetvalue,
		    t1.fincommitmentref,
		    t1.finlimitref,
		    t1.depreciationfrq,
		    t1.fincontractdate,
		    t1.nextdepdate,
		    t1.lastdepdate,
		    t1.finaccount,
		    t1.fincustpftaccount,
		    t17.acrtilllbd AS lovdescaccruedtilllbd,
		    t7.finrvwrateapplfor,
		    t1.totalrepayamt,
		    t1.closingstatus,
		    t1.finapproveddate,
		    t1.feechargeamt,
		    t1.blacklisted,
		    t1.finrepaypftonfrq,
		    t1.anualizedpercrate,
		    t1.effectiverateofreturn,
		    t1.migratedfinance,
		    t1.schedulemaintained,
		    t1.scheduleregenerated,
		    t1.finpurpose,
		    t39.loanpurposedesc AS lovdescfinpurposename,
		    t1.finstatus,
		    t1.finstsreason,
		    t1.initiateuser,
		    t1.bankname,
		    t1.iban,
		    t1.accounttype,
		    t1.ddareferenceno,
		    t7.finscheduleon AS lovdescfinscheduleon,
		    t1.custdsr,
		    t1.jointaccount,
		    t1.jointcustid,
		    t1.downpaybank,
		    t1.downpaysupl,
		    t1.downpayaccount,
		    t1.securitycollateral,
		    t1.approved,
		    t1.discrepancy,
		    t1.limitapproved,
		    t1.graceterms,
		    t7.findivision AS lovdescfindivision,
		    t1.rcdmaintainsts,
		    t1.finrepaymethod,
		    t1.grcprofitdaysbasis,
		    t1.stepfinance,
		    t1.steptype,
		    t1.steppolicy,
		    t1.alwmanualsteps,
		    t1.noofsteps,
		    t1.linkedfinref,
		    t1.nextuserid,
		    t1.priority,
		    t24.policydesc AS lovdescsteppolicyname,
		    t1.grcminrate,
		    t1.grcmaxrate,
		    t1.rpyminrate,
		    t1.rpymaxrate,
		    t1.deviationapproval,
		    t1.manualschedule,
		    t1.takeoverfinance,
		    t1.grcadvbaserate,
		    t1.grcadvmargin,
		    t1.grcadvpftrate,
		    t1.rpyadvbaserate,
		    t1.rpyadvmargin,
		    t1.rpyadvpftrate,
		    t1.supplementrent,
		    t1.increasedcost,
		    t1.creditinsamt,
		    t1.rolloverfrq,
		    t1.nextrolloverdate,
		    t27.custstsdescription,
		    t1.shariastatus,
		    t1.initiatedate,
		    t1.finpreapprovedref,
		    t1.mmaid,
		    t1.accountsofficer,
		    t1.feeaccountid,
		    t1.fincancelac,
		    t28.dealername AS lovdescaccountsofficer,
		    t28.dealercity AS lovdescsourcecity,
		    t1.dsacode,
		    t30.rofficerdesc AS dsacodedesc,
		    t1.tdsapplicable,
		    t1.mandateid,
		    t1.droplinefrq,
		    t1.firstdroplinedate,
		    t1.pftservicingodlimit,
		    t1.insuranceamt,
		    t1.deductinsdisb,
		    t1.alwbpi,
		    t1.bpitreatment,
		    t1.planemihalw,
		    t1.planemihmethod,
		    t1.planemihmaxperyear,
		    t1.planemihmax,
		    t1.planemihlockperiod,
		    t1.planemicpz,
		    t1.calroundingmode,
		    t1.alwmultidisb,
		    t1.applicationno,
		    t1.referralid,
		    t33.rofficerdesc AS referraliddesc,
		    t1.dmacode,
		    t34.rofficerdesc AS dmacodedesc,
		    t1.salesdepartment,
		    t35.gendeptdesc AS salesdepartmentdesc,
		    t1.quickdisb,
		    t1.wifreference,
		    t1.unplanemihlockperiod,
		    t1.unplanemicpz,
		    t1.reagecpz,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.bpiamount,
		    t1.deductfeedisb,
		    t1.rvwrateapplfor,
		    t1.schcalonrvw,
		    t1.pastduepftcalmthd,
		    t1.pastduepftmargin,
		    t1.droppingmethod,
		    t1.ratechganyday,
		    t1.promotioncode,
		    t1.restructureloan,
		    t1.oldfinreference,
		    t1.reagebucket,
		    t1.fincategory,
		    t1.productcategory,
		    t1.roundingtarget,
		    t36.entitycode AS lovdescentitycode,
		    t1.eligibilitymethod,
		    t38.fieldcodevalue AS loveligibilitymethod,
		    t38.valuedesc AS lovdesceligibilitymethod,
		    t1.employeename,
		    t37.rofficerdesc AS employeenamedesc,
		    t1.samplingrequired,
		    t1.legalrequired,
		    t1.grcmaxamount,
		    t1.connector,
		    t40.dealername AS connectorcode,
		    t40.dealercity AS connectordesc,
		    t1.advanceemi,
		    t1.advemiterms,
		    t1.bpipftdaysbasis,
		    t1.fixedratetenor,
		    t1.fixedtenorrate,
		    t12.branchtel AS finbranchcontact,
		    t1.processattributes,
		    t1.businessvertical,
		    bv.code AS businessverticalcode,
		    bv.description AS businessverticaldesc,
		    t1.grcadvtype,
		    t1.grcadvterms,
		    t1.advtype,
		    t1.advterms,
		    t1.advstage,
		    t1.tdspercentage,
		    t1.tdsstartdate,
		    t1.tdsenddate,
		    t1.tdslimitamt,
		    t1.vanreq,
		    t1.vancode,
		    t1.allowdrawingpower,
		    t1.allowrevolving,
		    t1.sanbsdschdle,
			t1.PromotionSeqID
		   FROM financemain t1
		     JOIN rmtfinancetypes t7 ON t1.fintype =  t7.fintype
		     LEFT JOIN rmtbranches t12 ON t1.finbranch =  t12.branchcode
		     LEFT JOIN finpftdetails t17 ON t17.finreference =  t1.finreference
		     LEFT JOIN steppolicyheader t24 ON t1.steppolicy =  t24.policycode
		     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus =  t27.custstscode
		     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
		     LEFT JOIN relationshipofficers t30 ON t1.dsacode =  t30.rofficercode
		     LEFT JOIN relationshipofficers t33 ON t1.referralid =  t33.rofficercode
		     LEFT JOIN relationshipofficers t34 ON t1.dmacode =  t34.rofficercode
		     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment =  t35.gendepartment
		     LEFT JOIN smtdivisiondetail t36 ON t7.findivision =  t36.divisioncode
		     LEFT JOIN relationshipofficers t37 ON t1.employeename =  t37.rofficercode
		     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode =  'ELGMETHOD'
		     LEFT JOIN loanpurposes t39 ON t1.finpurpose =  t39.loanpurposecode
		     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
		     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
		</createView>
	</changeSet>

	<changeSet id="08" author="Durgaprasad G">
		<createView viewName="financemain_tview" replaceIfExists="true">
				SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.gendeptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
				t1.PromotionSeqID
			   FROM financemain_temp t1
			     JOIN rmtfinancetypes t7 ON t1.fintype =  t7.fintype
			     LEFT JOIN rmtbranches t12 ON t1.finbranch =  t12.branchcode
			     LEFT JOIN finpftdetails t17 ON t17.finreference =  t1.finreference
			     LEFT JOIN steppolicyheader t24 ON t1.steppolicy =  t24.policycode
			     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus =  t27.custstscode
			     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			     LEFT JOIN relationshipofficers t30 ON t1.dsacode =  t30.rofficercode
			     LEFT JOIN relationshipofficers t33 ON t1.referralid =  t33.rofficercode
			     LEFT JOIN relationshipofficers t34 ON t1.dmacode =  t34.rofficercode
			     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment =  t35.gendepartment
			     LEFT JOIN smtdivisiondetail t36 ON t7.findivision =  t36.divisioncode
			     LEFT JOIN relationshipofficers t37 ON t1.employeename =  t37.rofficercode
			     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode =  'ELGMETHOD'
			     LEFT JOIN loanpurposes t39 ON t1.finpurpose =  t39.loanpurposecode
			     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
		</createView>
	</changeSet>


	<changeSet id="9.0_pre" author="Durgaprasad G" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="09" author="Durgaprasad G">
		<createView viewName="financemain_view" replaceIfExists="true">
				SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.gendeptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
				t1.PromotionSeqID
			   FROM financemain_temp t1
			     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			UNION ALL
			 SELECT t1.finreference,
			    t1.investmentref,
			    t1.numberofterms,
			    t1.grcperiodenddate,
			    t1.allowgrcperiod,
			    t1.gracebaserate,
			    t1.gracespecialrate,
			    t1.grcpftrate,
			    t1.grcpftfrq,
			    t1.nextgrcpftdate,
			    t1.allowgrcpftrvw,
			    t1.grcpftrvwfrq,
			    t1.nextgrcpftrvwdate,
			    t1.allowgrccpz,
			    t1.grccpzfrq,
			    t1.nextgrccpzdate,
			    t1.repaybaserate,
			    t1.repayspecialrate,
			    t1.repayprofitrate,
			    t1.repayfrq,
			    t1.nextrepaydate,
			    t1.repaypftfrq,
			    t1.nextrepaypftdate,
			    t1.allowrepayrvw,
			    t1.repayrvwfrq,
			    t1.nextrepayrvwdate,
			    t1.allowrepaycpz,
			    t1.repaycpzfrq,
			    t1.nextrepaycpzdate,
			    t1.maturitydate,
			    t1.cpzatgraceend,
			    t1.downpayment,
			    t1.graceflatamount,
			    t1.reqrepayamount,
			    t1.totalprofit,
			    t1.totalcpz,
			    t1.totalgrosspft,
			    t1.totalgrossgrcpft,
			    t1.totalgracepft,
			    t1.totalgracecpz,
			    t1.grcratebasis,
			    t1.repayratebasis,
			    t1.fintype,
			    t1.finremarks,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.reqmaturity,
			    t1.calterms,
			    t1.calmaturity,
			    t1.firstrepay,
			    t1.lastrepay,
			    t1.finstartdate,
			    t1.finamount,
			    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			    t1.finrepaymentamount,
			    t1.custid,
			    t1.defferments,
			    t1.plandefercount,
			    t1.finbranch,
			    t1.finsourceid,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.alloweddeffrqchange,
			    t1.availeddeffrqchange,
			    t1.recaltype,
			    t1.finassetvalue,
			    t1.disbaccountid,
			    t1.repayaccountid,
			    t1.finisactive,
			    t1.limitvalid,
			    t1.overridelimit,
			    t1.securitydeposit,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t7.fintypedesc AS lovdescfintypename,
			    t7.finmaxamount AS lovdescfinmaxamt,
			    t7.finminamount AS lovdescfinminamount,
			    t1.mindownpayperc,
			    t7.finisalwdifferment AS lovdescfinalwdeferment,
			    t7.finisdwpayrequired AS lovdescdwnpayreq,
			    t7.finmaxdifferment AS lovdescfinmaxdifferment,
			    t12.branchdesc AS lovdescfinbranchname,
			    t12.branchprovince AS finbranchprovincecode,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.lastrepayrvwdate,
			    t1.lastrepaycpzdate,
			    t1.allowgrcrepay,
			    t1.grcschdmthd,
			    t1.grcmargin,
			    t1.repaymargin,
			    t1.fincurrassetvalue,
			    t1.fincommitmentref,
			    t1.finlimitref,
			    t1.depreciationfrq,
			    t1.fincontractdate,
			    t1.nextdepdate,
			    t1.lastdepdate,
			    t1.finaccount,
			    t1.fincustpftaccount,
			    t17.acrtilllbd AS lovdescaccruedtilllbd,
			    t7.finrvwrateapplfor,
			    t1.totalrepayamt,
			    t1.closingstatus,
			    t1.finapproveddate,
			    t1.feechargeamt,
			    t1.blacklisted,
			    t1.finrepaypftonfrq,
			    t1.anualizedpercrate,
			    t1.effectiverateofreturn,
			    t1.migratedfinance,
			    t1.schedulemaintained,
			    t1.scheduleregenerated,
			    t1.finpurpose,
			    t39.loanpurposedesc AS lovdescfinpurposename,
			    t1.finstatus,
			    t1.finstsreason,
			    t1.initiateuser,
			    t1.bankname,
			    t1.iban,
			    t1.accounttype,
			    t1.ddareferenceno,
			    t7.finscheduleon AS lovdescfinscheduleon,
			    t1.custdsr,
			    t1.jointaccount,
			    t1.jointcustid,
			    t1.downpaybank,
			    t1.downpaysupl,
			    t1.downpayaccount,
			    t1.securitycollateral,
			    t1.approved,
			    t1.discrepancy,
			    t1.limitapproved,
			    t1.graceterms,
			    t7.findivision AS lovdescfindivision,
			    t1.rcdmaintainsts,
			    t1.finrepaymethod,
			    t1.grcprofitdaysbasis,
			    t1.stepfinance,
			    t1.steptype,
			    t1.steppolicy,
			    t1.alwmanualsteps,
			    t1.noofsteps,
			    t1.linkedfinref,
			    t1.nextuserid,
			    t1.priority,
			    t24.policydesc AS lovdescsteppolicyname,
			    t1.grcminrate,
			    t1.grcmaxrate,
			    t1.rpyminrate,
			    t1.rpymaxrate,
			    t1.deviationapproval,
			    t1.manualschedule,
			    t1.takeoverfinance,
			    t1.grcadvbaserate,
			    t1.grcadvmargin,
			    t1.grcadvpftrate,
			    t1.rpyadvbaserate,
			    t1.rpyadvmargin,
			    t1.rpyadvpftrate,
			    t1.supplementrent,
			    t1.increasedcost,
			    t1.creditinsamt,
			    t1.rolloverfrq,
			    t1.nextrolloverdate,
			    t27.custstsdescription,
			    t1.shariastatus,
			    t1.initiatedate,
			    t1.finpreapprovedref,
			    t1.mmaid,
			    t1.accountsofficer,
			    t1.feeaccountid,
			    t1.fincancelac,
			    t28.dealername AS lovdescaccountsofficer,
			    t28.dealercity AS lovdescsourcecity,
			    t1.dsacode,
			    t30.rofficerdesc AS dsacodedesc,
			    t1.tdsapplicable,
			    t1.mandateid,
			    t1.droplinefrq,
			    t1.firstdroplinedate,
			    t1.pftservicingodlimit,
			    t1.insuranceamt,
			    t1.deductinsdisb,
			    t1.alwbpi,
			    t1.bpitreatment,
			    t1.planemihalw,
			    t1.planemihmethod,
			    t1.planemihmaxperyear,
			    t1.planemihmax,
			    t1.planemihlockperiod,
			    t1.planemicpz,
			    t1.calroundingmode,
			    t1.alwmultidisb,
			    t1.applicationno,
			    t1.referralid,
			    t33.rofficerdesc AS referraliddesc,
			    t1.dmacode,
			    t34.rofficerdesc AS dmacodedesc,
			    t1.salesdepartment,
			    t35.gendeptdesc AS salesdepartmentdesc,
			    t1.quickdisb,
			    t1.wifreference,
			    t1.unplanemihlockperiod,
			    t1.unplanemicpz,
			    t1.reagecpz,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.bpiamount,
			    t1.deductfeedisb,
			    t1.rvwrateapplfor,
			    t1.schcalonrvw,
			    t1.pastduepftcalmthd,
			    t1.pastduepftmargin,
			    t1.droppingmethod,
			    t1.ratechganyday,
			    t1.promotioncode,
			    t1.restructureloan,
			    t1.oldfinreference,
			    t1.reagebucket,
			    t1.fincategory,
			    t1.productcategory,
			    t1.roundingtarget,
			    t36.entitycode AS lovdescentitycode,
			    t1.eligibilitymethod,
			    t38.fieldcodevalue AS loveligibilitymethod,
			    t38.valuedesc AS lovdesceligibilitymethod,
			    t1.employeename,
			    t37.rofficerdesc AS employeenamedesc,
			    t1.samplingrequired,
			    t1.legalrequired,
			    t1.grcmaxamount,
			    t1.connector,
			    t40.dealername AS connectorcode,
			    t40.dealercity AS connectordesc,
			    t1.advanceemi,
			    t1.advemiterms,
			    t1.bpipftdaysbasis,
			    t1.fixedratetenor,
			    t1.fixedtenorrate,
			    t12.branchtel AS finbranchcontact,
			    t1.processattributes,
			    t1.businessvertical,
			    bv.code AS businessverticalcode,
			    bv.description AS businessverticaldesc,
			    t1.grcadvtype,
			    t1.grcadvterms,
			    t1.advtype,
			    t1.advterms,
			    t1.advstage,
			    t1.tdspercentage,
			    t1.tdsstartdate,
			    t1.tdsenddate,
			    t1.tdslimitamt,
			    t1.vanreq,
			    t1.vancode,
			    t1.allowdrawingpower,
			    t1.allowrevolving,
			    t1.sanbsdschdle,
				t1.PromotionSeqID
			   FROM financemain t1
			     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM financemain_temp
			          WHERE financemain_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="9.0_post" author="Durgaprasad G" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="10" author="Durgaprasad G">
		<createView viewName="financemaintenance_aview"
			replaceIfExists="true">
			SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.migratedfinance,
		    t1.rcdmaintainsts,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.fincurrassetvalue,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.fincategory AS lovdescproductcodename,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t4.productcategory,
		    t1.samplingrequired,
		    t1.advanceemi,
		    t1.advemiterms,
		    t1.bpipftdaysbasis AS bpiratebasis,
		    t1.sanbsdschdle,
			t1.PromotionSeqID
		   FROM financemain t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		</createView>
	</changeSet>

	<changeSet id="11" author="Durgaprasad G" dbms="postgresql,oracle">
		<createView viewName="financemaintenance_view"
			replaceIfExists="true">
					SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID
		   FROM financemain_temp t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		UNION ALL
		 SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID
		   FROM financemain t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		  WHERE NOT (EXISTS ( SELECT 1 AS expr1
		           FROM financemain_temp
		          WHERE financemain_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="11" author="Durgaprasad G" dbms="mssql">
		<createView viewName="financemaintenance_view"
			replaceIfExists="true">
					SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID
		   FROM financemain_temp t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		UNION ALL
		 SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID
		   FROM financemain t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		  WHERE NOT (EXISTS ( SELECT 1 AS expr1
		           FROM financemain_temp
		          WHERE financemain_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="12" author="Durgaprasad G">
		<sql>
			INSERT INTO bmtintratebasiscodes(
			intratebasiscode,
			intratebasisdesc, intratebasisisactive, version, lastmntby,
			lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid,
			recordtype, workflowid)
			VALUES ('P/360',
			'Periodicity (30D Periods )',
			1, 0, 1000, Current_TimeStamp, 'Approved', null, null, null, null,
			null, 0);
		</sql>
	</changeSet>

	<changeSet id="10" author="satyanarayana.g">
		<addColumn tableName="WIFFINANCEMAIN">
			<column name="AllowDrawingPower" type="boolean" />
			<column name="AllowRevolving" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="11" author="satyanarayana.g">
		<addColumn tableName="WIFFINANCEMAIN_TEMP">
			<column name="AllowDrawingPower" type="boolean" />
			<column name="AllowRevolving" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="12" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE WIFFINANCEMAIN Set AllowDrawingPower = 0  where AllowDrawingPower is null;
				UPDATE WIFFINANCEMAIN Set AllowRevolving = 0 where AllowDrawingPower is null;
				UPDATE WIFFINANCEMAIN_TEMP Set AllowDrawingPower = 0 where AllowDrawingPower is null;
				UPDATE WIFFINANCEMAIN_TEMP Set AllowRevolving = 0 where AllowDrawingPower is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="13.0" author="satyanarayana.g" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE WIFFINANCEMAIN ADD CONSTRAINT DF_WIFFINANCEMAIN_ALWDP DEFAULT 0 FOR ALLOWDRAWINGPOWER;
				ALTER TABLE WIFFINANCEMAIN ADD CONSTRAINT DF_WIFFINANCEMAIN_ALWRNG DEFAULT 0 FOR ALLOWREVOLVING;
				ALTER TABLE WIFFINANCEMAIN_TEMP ADD CONSTRAINT DF_WIFFINANCEMAIN_TEMP_ALWDP DEFAULT 0 FOR ALLOWDRAWINGPOWER;
				ALTER TABLE WIFFINANCEMAIN_TEMP ADD CONSTRAINT DF_WIFFINANCEMAIN_TEMP_ALWRNG DEFAULT 0 FOR ALLOWREVOLVING;
			]]>
		</sql>
	</changeSet>

	<changeSet id="14" author="satyanarayana.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="AllowDrawingPower"
			tableName="WIFFINANCEMAIN" defaultValue="0" />
		<addDefaultValue columnName="AllowRevolving"
			tableName="WIFFINANCEMAIN" defaultValue="0" />
		<addDefaultValue columnName="AllowDrawingPower"
			tableName="WIFFINANCEMAIN_TEMP" defaultValue="0" />
		<addDefaultValue columnName="AllowRevolving"
			tableName="WIFFINANCEMAIN_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="15_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="15" author="satyanarayana.g">
		<createView viewName="WIFFINANCEMAIN_VIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
					T1.NUMBEROFTERMS,
					T1.GRCPERIODENDDATE,
					T1.ALLOWGRCPERIOD,
					T1.GRACEBASERATE,
					T1.GRACESPECIALRATE,
					T1.GRCPFTRATE,
					T1.GRCPFTFRQ,
					T1.NEXTGRCPFTDATE,
					T1.ALLOWGRCPFTRVW,
					T1.GRCPFTRVWFRQ,
					T1.NEXTGRCPFTRVWDATE,
					T1.ALLOWGRCCPZ,
					T1.GRCCPZFRQ,
					T1.NEXTGRCCPZDATE,
					T1.REPAYBASERATE,
					T1.REPAYSPECIALRATE,
					T1.REPAYPROFITRATE,
					T1.REPAYFRQ,
					T1.NEXTREPAYDATE,
					T1.REPAYPFTFRQ,
					T1.NEXTREPAYPFTDATE,
					T1.ALLOWREPAYRVW,
					T1.REPAYRVWFRQ,
					T1.NEXTREPAYRVWDATE,
					T1.ALLOWREPAYCPZ,
					T1.REPAYCPZFRQ,
					T1.NEXTREPAYCPZDATE,
					T1.MATURITYDATE,
					T1.CPZATGRACEEND,
					T1.DOWNPAYMENT,
					T1.GRACEFLATAMOUNT,
					T1.REQREPAYAMOUNT,
					T1.TOTALPROFIT,
					T1.TOTALCPZ,
					T1.TOTALGROSSPFT,
					T1.TOTALGRACEPFT,
					T1.TOTALGRACECPZ,
					T1.GRCRATEBASIS,
					T1.REPAYRATEBASIS,
					T1.FINTYPE,
					T1.FINREMARKS,
					T1.FINCCY,
					T1.SCHEDULEMETHOD,
					T1.PROFITDAYSBASIS,
					T1.REQMATURITY,
					T1.CALTERMS,
					T1.CALMATURITY,
					T1.FIRSTREPAY,
					T1.LASTREPAY,
					T1.FINSTARTDATE,
					T1.FINAMOUNT,
					T1.FINREPAYMENTAMOUNT,
					T1.CUSTID,
					T1.DEFFERMENTS,
					T1.PLANDEFERCOUNT,
					T1.FINISACTIVE,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T15.CUSTCIF   LOVDESCCUSTCIF,
					T7.FINTYPEDESC  LOVDESCFINTYPENAME,
					T1.FINBRANCH,
					T1.FINSOURCEID,
					T1.ALLOWEDDEFRPYCHANGE,
					T1.AVAILEDDEFRPYCHANGE,
					T1.ALLOWEDDEFFRQCHANGE,
					T1.AVAILEDDEFFRQCHANGE,
					T7.FINMAXAMOUNT   LOVDESCFINMAXAMT,
					T7.FINMINAMOUNT   LOVDESCFINMINAMOUNT,
					T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
					T1.MINDOWNPAYPERC,
					T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
					T1.RECALTYPE,
					T1.FINASSETVALUE,
					T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
					T1.LASTREPAYDATE,
					T1.LASTREPAYPFTDATE,
					T1.LASTREPAYRVWDATE,
					T1.LASTREPAYCPZDATE,
					T1.DISBACCOUNTID,
					T1.REPAYACCOUNTID,
					T1.ALLOWGRCREPAY,
					T1.GRCSCHDMTHD,
					T1.REPAYMARGIN,
					T1.GRCMARGIN,
					T1.DEPRECIATIONFRQ,
					T1.FINCOMMITMENTREF,
					T1.FINCURRASSETVALUE,
					T1.FINCONTRACTDATE,
					T1.NEXTDEPDATE,
					T1.LASTDEPDATE,
					T1.FINACCOUNT,
					T1.FINCUSTPFTACCOUNT,
					T7.FINRVWRATEAPPLFOR,
					T1.TOTALREPAYAMT,
					T1.CLOSINGSTATUS,
					T1.FINAPPROVEDDATE,
					T1.FINREPAYPFTONFRQ,
					T1.ANUALIZEDPERCRATE,
					T1.EFFECTIVERATEOFRETURN,
					T1.DOWNPAYBANK,
					T1.DOWNPAYSUPL,
					T7.FINDIVISION  LOVDESCFINDIVISIONNAME,
					T1.GRACETERMS,
					T14.FACILITYTYPE,
					T15.CUSTSHRTNAME  LOVDESCCUSTSHRTNAME,
					T16.BRANCHDESC   LOVDESCFINBRANCHNAME,
					T1.TOTALGROSSGRCPFT,
					T1.GRCPROFITDAYSBASIS,
					T1.STEPFINANCE,
					T1.STEPTYPE,
					T1.STEPPOLICY,
					T1.ALWMANUALSTEPS,
					T1.NOOFSTEPS,
					T1.LINKEDFINREF,
					T7.PRODUCT  LOVDESCFINPRODUCT,
					T1.GRCMINRATE,
					T1.GRCMAXRATE,
					T1.RPYMINRATE,
					T1.RPYMAXRATE,
					T1.MANUALSCHEDULE,
					T1.TAKEOVERFINANCE,
					T1.GRCADVBASERATE,
					T1.GRCADVMARGIN,
					T1.GRCADVPFTRATE,
					T1.RPYADVBASERATE,
					T1.RPYADVMARGIN,
					T1.RPYADVPFTRATE,
					T1.SUPPLEMENTRENT,
					T1.INCREASEDCOST,
					T1.FEEACCOUNTID,
					T1.TDSAPPLICABLE,
					T1.INSURANCEAMT,
					T1.DEDUCTINSDISB,
					T1.ALWBPI,
					T1.BPITREATMENT,
					T1.PLANEMIHALW,
					T1.PLANEMIHMETHOD,
					T1.PLANEMIHMAXPERYEAR,
					T1.PLANEMIHMAX,
					T1.PLANEMIHLOCKPERIOD,
					T1.PLANEMICPZ,
					T1.CALROUNDINGMODE,
					T1.ALWMULTIDISB,
					T1.BPIAMOUNT,
					T1.DEDUCTFEEDISB,
					T1.FEECHARGEAMT,
					T1.RVWRATEAPPLFOR,
					T1.SCHCALONRVW,
					T1.PASTDUEPFTCALMTHD,
					T1.PASTDUEPFTMARGIN,
					T1.DROPPINGMETHOD,
					T1.RATECHGANYDAY,
					T1.FINCATEGORY,
					T1.PRODUCTCATEGORY,
					T1.ROUNDINGTARGET,
					T1.GRCMAXAMOUNT,
					T1.ADVANCEEMI,
					T1.ADVEMITERMS,
					T1.BPIPFTDAYSBASIS,
					T1.FIXEDTENORRATE,
					T1.FIXEDRATETENOR,
					T1.GRCADVTYPE,
					T1.GRCADVTERMS,
					T1.ADVTYPE,
					T1.ADVTERMS,
					T1.ADVSTAGE,
					T1.ALLOWDRAWINGPOWER,
					T1.ALLOWREVOLVING
					FROM WIFFINANCEMAIN_TEMP T1
					LEFT JOIN WIFINDICATIVETERMDETAIL_TEMP T14 ON T14.FINREFERENCE = T1.FINREFERENCE
					LEFT JOIN CUSTOMERS T15 ON T15.CUSTID = T1.CUSTID
					JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
					LEFT JOIN RMTBRANCHES T16 ON T1.FINBRANCH = T16.BRANCHCODE
					UNION ALL
					SELECT T1.FINREFERENCE,
					T1.NUMBEROFTERMS,
					T1.GRCPERIODENDDATE,
					T1.ALLOWGRCPERIOD,
					T1.GRACEBASERATE,
					T1.GRACESPECIALRATE,
					T1.GRCPFTRATE,
					T1.GRCPFTFRQ,
					T1.NEXTGRCPFTDATE,
					T1.ALLOWGRCPFTRVW,
					T1.GRCPFTRVWFRQ,
					T1.NEXTGRCPFTRVWDATE,
					T1.ALLOWGRCCPZ,
					T1.GRCCPZFRQ,
					T1.NEXTGRCCPZDATE,
					T1.REPAYBASERATE,
					T1.REPAYSPECIALRATE,
					T1.REPAYPROFITRATE,
					T1.REPAYFRQ,
					T1.NEXTREPAYDATE,
					T1.REPAYPFTFRQ,
					T1.NEXTREPAYPFTDATE,
					T1.ALLOWREPAYRVW,
					T1.REPAYRVWFRQ,
					T1.NEXTREPAYRVWDATE,
					T1.ALLOWREPAYCPZ,
					T1.REPAYCPZFRQ,
					T1.NEXTREPAYCPZDATE,
					T1.MATURITYDATE,
					T1.CPZATGRACEEND,
					T1.DOWNPAYMENT,
					T1.GRACEFLATAMOUNT,
					T1.REQREPAYAMOUNT,
					T1.TOTALPROFIT,
					T1.TOTALCPZ,
					T1.TOTALGROSSPFT,
					T1.TOTALGRACEPFT,
					T1.TOTALGRACECPZ,
					T1.GRCRATEBASIS,
					T1.REPAYRATEBASIS,
					T1.FINTYPE,
					T1.FINREMARKS,
					T1.FINCCY,
					T1.SCHEDULEMETHOD,
					T1.PROFITDAYSBASIS,
					T1.REQMATURITY,
					T1.CALTERMS,
					T1.CALMATURITY,
					T1.FIRSTREPAY,
					T1.LASTREPAY,
					T1.FINSTARTDATE,
					T1.FINAMOUNT,
					T1.FINREPAYMENTAMOUNT,
					T1.CUSTID,
					T1.DEFFERMENTS,
					T1.PLANDEFERCOUNT,
					T1.FINISACTIVE,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T15.CUSTCIF     LOVDESCCUSTCIF,
					T7.FINTYPEDESC  LOVDESCFINTYPENAME,
					T1.FINBRANCH,
					T1.FINSOURCEID,
					T1.ALLOWEDDEFRPYCHANGE,
					T1.AVAILEDDEFRPYCHANGE,
					T1.ALLOWEDDEFFRQCHANGE,
					T1.AVAILEDDEFFRQCHANGE,
					T7.FINMAXAMOUNT     LOVDESCFINMAXAMT,
					T7.FINMINAMOUNT     LOVDESCFINMINAMOUNT,
					T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
					T1.MINDOWNPAYPERC,
					T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
					T1.RECALTYPE,
					T1.FINASSETVALUE,
					T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
					T1.LASTREPAYDATE,
					T1.LASTREPAYPFTDATE,
					T1.LASTREPAYRVWDATE,
					T1.LASTREPAYCPZDATE,
					T1.DISBACCOUNTID,
					T1.REPAYACCOUNTID,
					T1.ALLOWGRCREPAY,
					T1.GRCSCHDMTHD,
					T1.REPAYMARGIN,
					T1.GRCMARGIN,
					T1.DEPRECIATIONFRQ,
					T1.FINCOMMITMENTREF,
					T1.FINCURRASSETVALUE,
					T1.FINCONTRACTDATE,
					T1.NEXTDEPDATE,
					T1.LASTDEPDATE,
					T1.FINACCOUNT,
					T1.FINCUSTPFTACCOUNT,
					T7.FINRVWRATEAPPLFOR,
					T1.TOTALREPAYAMT,
					T1.CLOSINGSTATUS,
					T1.FINAPPROVEDDATE,
					T1.FINREPAYPFTONFRQ,
					T1.ANUALIZEDPERCRATE,
					T1.EFFECTIVERATEOFRETURN,
					T1.DOWNPAYBANK,
					T1.DOWNPAYSUPL,
					T7.FINDIVISION  LOVDESCFINDIVISIONNAME,
					T1.GRACETERMS,
					T14.FACILITYTYPE,
					T15.CUSTSHRTNAME  LOVDESCCUSTSHRTNAME,
					T16.BRANCHDESC    LOVDESCFINBRANCHNAME,
					T1.TOTALGROSSGRCPFT,
					T1.GRCPROFITDAYSBASIS,
					T1.STEPFINANCE,
					T1.STEPTYPE,
					T1.STEPPOLICY,
					T1.ALWMANUALSTEPS,
					T1.NOOFSTEPS,
					T1.LINKEDFINREF,
					T7.PRODUCT  LOVDESCFINPRODUCT,
					T1.GRCMINRATE,
					T1.GRCMAXRATE,
					T1.RPYMINRATE,
					T1.RPYMAXRATE,
					T1.MANUALSCHEDULE,
					T1.TAKEOVERFINANCE,
					T1.GRCADVBASERATE,
					T1.GRCADVMARGIN,
					T1.GRCADVPFTRATE,
					T1.RPYADVBASERATE,
					T1.RPYADVMARGIN,
					T1.RPYADVPFTRATE,
					T1.SUPPLEMENTRENT,
					T1.INCREASEDCOST,
					T1.FEEACCOUNTID,
					T1.TDSAPPLICABLE,
					T1.INSURANCEAMT,
					T1.DEDUCTINSDISB,
					T1.ALWBPI,
					T1.BPITREATMENT,
					T1.PLANEMIHALW,
					T1.PLANEMIHMETHOD,
					T1.PLANEMIHMAXPERYEAR,
					T1.PLANEMIHMAX,
					T1.PLANEMIHLOCKPERIOD,
					T1.PLANEMICPZ,
					T1.CALROUNDINGMODE,
					T1.ALWMULTIDISB,
					T1.BPIAMOUNT,
					T1.DEDUCTFEEDISB,
					T1.FEECHARGEAMT,
					T1.RVWRATEAPPLFOR,
					T1.SCHCALONRVW,
					T1.PASTDUEPFTCALMTHD,
					T1.PASTDUEPFTMARGIN,
					T1.DROPPINGMETHOD,
					T1.RATECHGANYDAY,
					T1.FINCATEGORY,
					T1.PRODUCTCATEGORY,
					T1.ROUNDINGTARGET,
					T1.GRCMAXAMOUNT,
					T1.ADVANCEEMI,
					T1.ADVEMITERMS,
					T1.BPIPFTDAYSBASIS,
					T1.FIXEDTENORRATE,
					T1.FIXEDRATETENOR,
					T1.GRCADVTYPE,
					T1.GRCADVTERMS,
					T1.ADVTYPE,
					T1.ADVTERMS,
					T1.ADVSTAGE,
					T1.ALLOWDRAWINGPOWER,
					T1.ALLOWREVOLVING
					FROM WIFFINANCEMAIN T1
					LEFT JOIN WIFINDICATIVETERMDETAIL_TEMP T14 ON T14.FINREFERENCE = T1.FINREFERENCE
					LEFT JOIN CUSTOMERS T15 ON T15.CUSTID = T1.CUSTID
					JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
					LEFT JOIN RMTBRANCHES T16 ON T1.FINBRANCH = T16.BRANCHCODE
					WHERE NOT (EXISTS (SELECT 1 FROM WIFFINANCEMAIN_TEMP WHERE WIFFINANCEMAIN_TEMP.FINREFERENCE = T1.FINREFERENCE ))
	</createView>
	</changeSet>

	<changeSet id="15_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="16_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="16" author="satyanarayana.g">
		<createView viewName="WIFFINANCEMAIN_AVIEW"
			replaceIfExists="true">
			SELECT T1.FINREFERENCE,
					T1.NUMBEROFTERMS,
					T1.GRCPERIODENDDATE,
					T1.ALLOWGRCPERIOD,
					T1.GRACEBASERATE,
					T1.GRACESPECIALRATE,
					T1.GRCPFTRATE,
					T1.GRCPFTFRQ,
					T1.NEXTGRCPFTDATE,
					T1.ALLOWGRCPFTRVW,
					T1.GRCPFTRVWFRQ,
					T1.NEXTGRCPFTRVWDATE,
					T1.ALLOWGRCCPZ,
					T1.GRCCPZFRQ,
					T1.NEXTGRCCPZDATE,
					T1.REPAYBASERATE,
					T1.REPAYSPECIALRATE,
					T1.REPAYPROFITRATE,
					T1.REPAYFRQ,
					T1.NEXTREPAYDATE,
					T1.REPAYPFTFRQ,
					T1.NEXTREPAYPFTDATE,
					T1.ALLOWREPAYRVW,
					T1.REPAYRVWFRQ,
					T1.NEXTREPAYRVWDATE,
					T1.ALLOWREPAYCPZ,
					T1.REPAYCPZFRQ,
					T1.NEXTREPAYCPZDATE,
					T1.MATURITYDATE,
					T1.CPZATGRACEEND,
					T1.DOWNPAYMENT,
					T1.GRACEFLATAMOUNT,
					T1.REQREPAYAMOUNT,
					T1.TOTALPROFIT,
					T1.TOTALCPZ,
					T1.TOTALGROSSPFT,
					T1.TOTALGRACEPFT,
					T1.TOTALGRACECPZ,
					T1.GRCRATEBASIS,
					T1.REPAYRATEBASIS,
					T1.FINTYPE,
					T1.FINREMARKS,
					T1.FINCCY,
					T1.SCHEDULEMETHOD,
					T1.PROFITDAYSBASIS,
					T1.REQMATURITY,
					T1.CALTERMS,
					T1.CALMATURITY,
					T1.FIRSTREPAY,
					T1.LASTREPAY,
					T1.FINSTARTDATE,
					T1.FINAMOUNT,
					T1.FINREPAYMENTAMOUNT,
					T1.CUSTID,
					T1.DEFFERMENTS,
					T1.PLANDEFERCOUNT,
					T1.FINISACTIVE,
					T1.VERSION,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T15.CUSTCIF   LOVDESCCUSTCIF,
					T7.FINTYPEDESC  LOVDESCFINTYPENAME,
					T1.FINBRANCH,
					T1.FINSOURCEID,
					T1.ALLOWEDDEFRPYCHANGE,
					T1.AVAILEDDEFRPYCHANGE,
					T1.ALLOWEDDEFFRQCHANGE,
					T1.AVAILEDDEFFRQCHANGE,
					T7.FINMAXAMOUNT        LOVDESCFINMAXAMT,
					T7.FINMINAMOUNT        LOVDESCFINMINAMOUNT,
					T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
					T1.MINDOWNPAYPERC,
					T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
					T1.RECALTYPE,
					T1.FINASSETVALUE,
					T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
					T1.LASTREPAYDATE,
					T1.LASTREPAYPFTDATE,
					T1.LASTREPAYRVWDATE,
					T1.LASTREPAYCPZDATE,
					T1.DISBACCOUNTID,
					T1.REPAYACCOUNTID,
					T1.ALLOWGRCREPAY,
					T1.GRCSCHDMTHD,
					T1.REPAYMARGIN,
					T1.GRCMARGIN,
					T1.DEPRECIATIONFRQ,
					T1.FINCOMMITMENTREF,
					T1.FINCURRASSETVALUE,
					T1.FINCONTRACTDATE,
					T1.NEXTDEPDATE,
					T1.LASTDEPDATE,
					T1.FINACCOUNT,
					T1.FINCUSTPFTACCOUNT,
					T7.FINRVWRATEAPPLFOR,
					T1.TOTALREPAYAMT,
					T1.CLOSINGSTATUS,
					T1.FINAPPROVEDDATE,
					T1.FINREPAYPFTONFRQ,
					T1.ANUALIZEDPERCRATE,
					T1.EFFECTIVERATEOFRETURN,
					T1.DOWNPAYBANK,
					T1.DOWNPAYSUPL,
					T7.FINDIVISION  LOVDESCFINDIVISIONNAME,
					T1.GRACETERMS,
					T14.FACILITYTYPE,
					T15.CUSTSHRTNAME  LOVDESCCUSTSHRTNAME,
					T16.BRANCHDESC    LOVDESCFINBRANCHNAME,
					T1.TOTALGROSSGRCPFT,
					T1.GRCPROFITDAYSBASIS,
					T1.STEPFINANCE,
					T1.STEPTYPE,
					T1.STEPPOLICY,
					T1.ALWMANUALSTEPS,
					T1.NOOFSTEPS,
					T1.LINKEDFINREF,
					T7.PRODUCT  LOVDESCFINPRODUCT,
					T1.GRCMINRATE,
					T1.GRCMAXRATE,
					T1.RPYMINRATE,
					T1.RPYMAXRATE,
					T1.MANUALSCHEDULE,
					T1.TAKEOVERFINANCE,
					T1.GRCADVBASERATE,
					T1.GRCADVMARGIN,
					T1.GRCADVPFTRATE,
					T1.RPYADVBASERATE,
					T1.RPYADVMARGIN,
					T1.RPYADVPFTRATE,
					T1.SUPPLEMENTRENT,
					T1.INCREASEDCOST,

					T1.FEEACCOUNTID,
					T1.TDSAPPLICABLE,
					T1.INSURANCEAMT,
					T1.DEDUCTINSDISB,
					T1.ALWBPI,
					T1.BPITREATMENT,
					T1.PLANEMIHALW,
					T1.PLANEMIHMETHOD,
					T1.PLANEMIHMAXPERYEAR,
					T1.PLANEMIHMAX,
					T1.PLANEMIHLOCKPERIOD,
					T1.PLANEMICPZ,
					T1.CALROUNDINGMODE,
					T1.ALWMULTIDISB,
					T1.BPIAMOUNT,
					T1.DEDUCTFEEDISB,
					T1.FEECHARGEAMT,
					T1.RVWRATEAPPLFOR,
					T1.SCHCALONRVW,
					T1.PASTDUEPFTCALMTHD,
					T1.PASTDUEPFTMARGIN,
					T1.DROPPINGMETHOD,
					T1.RATECHGANYDAY,
					T1.ROUNDINGTARGET,
					T1.GRCMAXAMOUNT,
					T1.ADVANCEEMI,
					T1.ADVEMITERMS,
					T1.BPIPFTDAYSBASIS AS BPIRATEBASIS,
					T1.GRCADVTYPE,
					T1.GRCADVTERMS,
					T1.ADVTYPE,
					T1.ADVTERMS,
					T1.ADVSTAGE,
					T1.ALLOWDRAWINGPOWER,
					T1.ALLOWREVOLVING
					FROM WIFFINANCEMAIN T1
					LEFT JOIN WIFINDICATIVETERMDETAIL_TEMP T14 ON T14.FINREFERENCE = T1.FINREFERENCE
					LEFT JOIN CUSTOMERS T15 ON T15.CUSTID = T1.CUSTID
					JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
					LEFT JOIN RMTBRANCHES T16 ON T1.FINBRANCH = T16.BRANCHCODE
	</createView>
	</changeSet>

	<changeSet id="16_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinancemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="17" author="saikiran.v">
		<sql>
				<![CDATA[
					 update reportfilterfields set fielddbname='FINDIVISION' where reportid in (select reportid from reportconfiguration where menuitemcode='menu_Item_PutCallReport'
					 and fieldid=1); 
				]]>
		</sql>
	</changeSet>
	<changeSet id="18" author="saikiran.v">
		<sql>
				<![CDATA[
					INSERT INTO ErrorDetails VALUES('90498','EN','E','Early Settlement Already initiated','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
				]]>
		</sql>
	</changeSet>
	<changeSet id="19" author="saikiran.v">
		<sql>
				<![CDATA[
				  	DELETE from SMTparameters WHERE SYSPARMCODE='EXCLUDE_SUB_RECEIPT_MODE_VALUE';
					INSERT INTO SMTparameters  VALUES ('EXCLUDE_SUB_RECEIPT_MODE_VALUE', 'To exclude Sub Receipt Mode Values', 'String', '0', '', 1, 0, NULL, NULL,'To exclude Sub Receipt Mode Values From List', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
				]]>
		</sql>
	</changeSet>

	<changeSet id="20" author="Durgaprasad G">
		<createTable tableName="IRRScheduleDetail">
			<column name="FinReference" type="varchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchDate" type="datetime">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="ProfitCalc" type="decimal(18,0)" />
			<column name="PrincipalCalc" type="decimal(18,0)" />
			<column name="RepayAmount" type="decimal(18,0)" />
			<column name="ClosingBalance" type="decimal(18,0)" />
			<column name="GapInterst" type="decimal(18,0)" />
		</createTable>
	</changeSet>

	<changeSet id="21" author="Siva">
		<dropColumn tableName="BMTAEEVENTS" columnName="MANDATORY" />
		<dropColumn tableName="BMTAEEVENTS" columnName="ODAPPLICABLE" />
	</changeSet>

	<changeSet id="22" author="Siva">
		<createTable tableName="CategoryWiseEvents">
			<column name="AEEventCode" type="varchar2(8)">
				<constraints nullable="false" primaryKey="true" />
			</column>
			<column name="CategoryCode" type="char(1)">
				<constraints nullable="false" primaryKey="true" />
			</column>
			<column name="ACTIVE" type="NUMBER(1,0)">
				<constraints nullable="false" />
			</column>
			<column name="MANDATORY" type="NUMBER(1,0)">
				<constraints nullable="false" />
			</column>
			<column name="SeqOrder" type="NUMBER(2,0)">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="23" author="Siva">
		<createView viewName="CategoryWiseEvents_VIEW"
			replaceIfExists="true">
				SELECT            T1.AEEventCode, T1.CategoryCode  , T1.Active ,T1.Mandatory, T1.SeqOrder,T2.AEEventCodeDesc
				FROM        CategoryWiseEvents  T1 INNER JOIN 
				BMTAEEvents T2 ON T1.AEEventCode = T2.AEEventCode
	</createView>
	</changeSet>

	<changeSet id="24" author="Siva">
		<sql>
			INSERT INTO CategoryWiseEvents VALUES('ADDDBSF','F',1,0,1);
			INSERT INTO CategoryWiseEvents
			VALUES('ADDDBSN','F',1,1,2);
			INSERT
			INTO
			CategoryWiseEvents VALUES('ADDDBSP','F',1,1,3);
			INSERT INTO
			CategoryWiseEvents
			VALUES('AMZ','F',1,1,4);
			INSERT INTO
			CategoryWiseEvents VALUES('DEFRPY','F',1,1,5);
			INSERT INTO
			CategoryWiseEvents
			VALUES('DISBINS','F',1,1,6);
			INSERT INTO
			CategoryWiseEvents VALUES('EARLYPAY','F',1,1,7);
			INSERT INTO
			CategoryWiseEvents
			VALUES('EARLYSTL','F',1,1,8);
			INSERT INTO
			CategoryWiseEvents VALUES('EMIDAY','F',1,1,9);
			INSERT INTO
			CategoryWiseEvents
			VALUES('FEEPAY','F',1,1,10);
			INSERT INTO
			CategoryWiseEvents VALUES('INSTDATE','F',1,1,11);
			INSERT INTO
			CategoryWiseEvents VALUES('JVPOST','F',1,0,12);
			INSERT INTO
			CategoryWiseEvents VALUES('LATEPAY','F',1,1,13);
			INSERT INTO
			CategoryWiseEvents VALUES('MANFEE','F',1,1,14);
			INSERT INTO
			CategoryWiseEvents VALUES('PAYMTINS','F',1,1,15);
			INSERT
			INTO
			CategoryWiseEvents VALUES('RATCHG','F',1,1,16);
			INSERT INTO
			CategoryWiseEvents VALUES('REAGING','F',1,1,17);
			INSERT
			INTO
			CategoryWiseEvents VALUES('REPAY','F',1,1,18);
			INSERT INTO
			CategoryWiseEvents VALUES('SCDCHG','F',1,1,19);
			INSERT
			INTO
			CategoryWiseEvents VALUES('VASACRUL','F',1,1,20);
			INSERT INTO
			CategoryWiseEvents VALUES('VASFEE','F',1,1,21);
			INSERT INTO
			CategoryWiseEvents VALUES('WRITEOFF','F',1,1,22);

			INSERT INTO
			CategoryWiseEvents
			VALUES('ADDDBSF','O',1,0,1);
			INSERT INTO
			CategoryWiseEvents VALUES('ADDDBSN','O',1,1,2);
			INSERT INTO
			CategoryWiseEvents
			VALUES('ADDDBSP','O',1,1,3);
			INSERT INTO
			CategoryWiseEvents VALUES('AMZ','O',1,1,4);
			INSERT INTO
			CategoryWiseEvents
			VALUES('AMZPD','O',1,1,5);
			INSERT INTO
			CategoryWiseEvents VALUES('AMZSUSP','O',1,1,6);
			INSERT INTO
			CategoryWiseEvents
			VALUES('CANFIN','O',1,1,7);
			INSERT INTO
			CategoryWiseEvents VALUES('CMTDISB','O',1,1,8);
			INSERT INTO
			CategoryWiseEvents
			VALUES('JVPOST','O',1,0,9);
			INSERT INTO
			CategoryWiseEvents VALUES('LATEPAY','O',1,1,10);
			INSERT INTO
			CategoryWiseEvents
			VALUES('MANFEE','O',1,1,11);
			INSERT INTO
			CategoryWiseEvents VALUES('NORM_PD','O',1,1,12);
			INSERT INTO
			CategoryWiseEvents
			VALUES('NORM_PIS','O',1,1,13);
			INSERT INTO
			CategoryWiseEvents VALUES('PD_NORM','O',1,1,14);
			INSERT INTO
			CategoryWiseEvents VALUES('PD_PIS','O',1,1,15);
			INSERT INTO
			CategoryWiseEvents VALUES('PIS_NORM','O',1,1,16);
			INSERT
			INTO
			CategoryWiseEvents VALUES('PIS_PD','O',1,1,17);
			INSERT INTO
			CategoryWiseEvents VALUES('PROVSN','O',1,1,18);
			INSERT
			INTO
			CategoryWiseEvents VALUES('REPAY','O',1,1,19);
			INSERT INTO
			CategoryWiseEvents VALUES('WRITEBK','O',1,1,20);
			INSERT
			INTO
			CategoryWiseEvents VALUES('WRITEOFF','O',1,1,21);

			INSERT INTO
			CategoryWiseEvents VALUES('ADDDBSP','C',1,1,1);
			INSERT INTO
			CategoryWiseEvents VALUES('ADDDBSN','C',1,1,2);
			INSERT INTO
			CategoryWiseEvents VALUES('AMZ','C',1,1,3);
			INSERT INTO
			CategoryWiseEvents VALUES('AMZ_MON','C',1,1,4);
			INSERT INTO
			CategoryWiseEvents VALUES('COMPOUND','C',1,1,5);
			INSERT INTO
			CategoryWiseEvents VALUES('DISBINS','C',1,1,6);
			INSERT INTO
			CategoryWiseEvents VALUES('EARLYPAY','C',1,1,7);
			INSERT INTO
			CategoryWiseEvents VALUES('EARLYSTL','C',1,1,8);
			INSERT INTO
			CategoryWiseEvents VALUES('FEEPAY','C',1,1,9);
			INSERT INTO
			CategoryWiseEvents VALUES('LATEPAY','C',1,1,10);
			INSERT INTO
			CategoryWiseEvents VALUES('REPAY','C',1,0,11);
			INSERT INTO
			CategoryWiseEvents VALUES('STAGE','C',1,0,12);
			INSERT INTO
			CategoryWiseEvents VALUES('WRITEBK','C',1,1,13);
			INSERT INTO
			CategoryWiseEvents VALUES('WRITEOFF','C',1,1,14);

		</sql>
	</changeSet>

	<changeSet id="25" author="Siva">
		<sql>
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM
			SECRIGHTS), 0,
			'menuItem_SolutionFactory_CDFinanceType','MENU',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS
			WHERE 0=0;
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS
			WHERE
			GRPCODE='FINANCETYPE_MAKER')
			,(SELECT RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='menuItem_SolutionFactory_CDFinanceType'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT
			INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE
			GRPCODE='FINANCETYPE_APPROVER')
			,(SELECT RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='menuItem_SolutionFactory_CDFinanceType'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		</sql>
	</changeSet>

	<changeSet id="26" author="Siva">
		<comment>New columns added for CD Schemes in Promotion</comment>
		<addColumn tableName="Promotions">
			<column name="ReferenceID" type="bigint" defaultValue="0" />
			<column name="OpenBalOnPV" type="boolean" defaultValue="0" />
			<column name="Tenor" type="int" defaultValue="0" />
			<column name="AdvEMITerms" type="int" defaultValue="0" />
			<column name="PftDaysBasis" type="varchar(8)" />
			<column name="SubventionMethod" type="varchar(8)" />
			<column name="SubventionRate" type="decimal(13,9)"
				defaultValue="0" />
			<column name="TaxApplicable" type="boolean" defaultValue="0" />
			<column name="CashbackMonth" type="int" defaultValue="0" />
			<column name="SchemeIRR" type="decimal(13,9)" defaultValue="0" />
		</addColumn>
		<addColumn tableName="Promotions_Temp">
			<column name="ReferenceID" type="bigint" defaultValue="0" />
			<column name="OpenBalOnPV" type="boolean" defaultValue="0" />
			<column name="Tenor" type="int" defaultValue="0" />
			<column name="AdvEMITerms" type="int" defaultValue="0" />
			<column name="PftDaysBasis" type="varchar(8)" />
			<column name="SubventionMethod" type="varchar(8)" />
			<column name="SubventionRate" type="decimal(13,9)"
				defaultValue="0" />
			<column name="TaxApplicable" type="boolean" defaultValue="0" />
			<column name="CashbackMonth" type="int" defaultValue="0" />
			<column name="SchemeIRR" type="decimal(13,9)" defaultValue="0" />
		</addColumn>
	</changeSet>
	<changeSet id="26.1" author="Siva">
		<comment>New columns added for CD Schemes in Promotion</comment>
		<addColumn tableName="Promotions">
			<column name="ProductCategory" type="varchar(8)" />
		</addColumn>
		<addColumn tableName="Promotions_Temp">
			<column name="ProductCategory" type="varchar(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="27.1" author="Siva">
		<createView viewName="Promotions_AView" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionMethod, t1.SubventionRate,
			    t1.TaxApplicable, t1.CashbackMonth, t1.SchemeIRR,t1.ProductCategory
			   FROM promotions t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
		</createView>
	</changeSet>

	<changeSet id="28.1" author="Siva">
		<createView viewName="Promotions_TView" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionMethod, t1.SubventionRate,
			    t1.TaxApplicable, t1.CashbackMonth, t1.SchemeIRR,t1.ProductCategory
			   FROM promotions_temp t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
		</createView>
	</changeSet>

	<changeSet id="29.1" author="Siva">
		<createView viewName="Promotions_View" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionMethod, t1.SubventionRate,
			    t1.TaxApplicable, t1.CashbackMonth, t1.SchemeIRR,t1.ProductCategory
			   FROM promotions_temp t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
			UNION ALL
			 SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionMethod, t1.SubventionRate,
			    t1.TaxApplicable, t1.CashbackMonth, t1.SchemeIRR,t1.ProductCategory
			   FROM promotions t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM promotions_temp
			          WHERE promotions_temp.promotioncode = t1.promotioncode AND promotions_temp.promotionid = t1.promotionid))
		</createView>
	</changeSet>

	<changeSet id="30" author="Siva">
		<addColumn tableName="FinTypeFees">
			<column name="ReferenceId" type="bigint" defaultValue="0" />
		</addColumn>
		<addColumn tableName="FinTypeFees_Temp">
			<column name="ReferenceId" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="31" author="Siva">
		<createView viewName="FinTypeFees_AView" replaceIfExists="true">
			 SELECT t1.fintype,
			    t1.originationfee,
			    t1.finevent,
			    t1.feetypeid,
			    t1.feeorder,
			    t1.feeschedulemethod,
			    t1.calculationtype,
			    t1.rulecode,
			    t1.amount,
			    t1.percentage,
			    t1.calculateon,
			    t1.alwdeviation,
			    t1.maxwaiverperc,
			    t1.alwmodifyfee,
			    t1.alwmodifyfeeschdmthd,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.moduleid,
			    t1.alwpreincomization,
			    t2.feetypecode,
			    t2.feetypedesc,
			    t2.taxapplicable,
			    t2.taxcomponent,
			    t3.rulecodedesc AS ruledesc,
				t1.ReferenceId
			   FROM fintypefees t1
			     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
			     LEFT JOIN rules t3 ON t1.rulecode = t3.rulecode AND t3.rulemodule= 'FEES' AND t1.finevent= t3.ruleevent
		</createView>
	</changeSet>
	<changeSet id="32" author="Siva">
		<createView viewName="FinTypeFees_View" replaceIfExists="true">
			SELECT t1.fintype,
			    t1.originationfee,
			    t1.finevent,
			    t1.feetypeid,
			    t1.feeorder,
			    t1.feeschedulemethod,
			    t1.calculationtype,
			    t1.rulecode,
			    t1.amount,
			    t1.percentage,
			    t1.calculateon,
			    t1.alwdeviation,
			    t1.maxwaiverperc,
			    t1.alwmodifyfee,
			    t1.alwmodifyfeeschdmthd,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.moduleid,
			    t1.alwpreincomization,
			    t2.feetypecode,
			    t2.feetypedesc,
			    t2.taxapplicable,
			    t2.taxcomponent,
			    t3.rulecodedesc AS ruledesc,
				t1.ReferenceId
			   FROM fintypefees_temp t1
			     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
			     LEFT JOIN rules t3 ON t1.rulecode= t3.rulecode AND t3.rulemodule= 'FEES' AND t1.finevent= t3.ruleevent
			UNION ALL
			 SELECT t1.fintype,
			    t1.originationfee,
			    t1.finevent,
			    t1.feetypeid,
			    t1.feeorder,
			    t1.feeschedulemethod,
			    t1.calculationtype,
			    t1.rulecode,
			    t1.amount,
			    t1.percentage,
			    t1.calculateon,
			    t1.alwdeviation,
			    t1.maxwaiverperc,
			    t1.alwmodifyfee,
			    t1.alwmodifyfeeschdmthd,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.moduleid,
			    t1.alwpreincomization,
			    t2.feetypecode,
			    t2.feetypedesc,
			    t2.taxapplicable,
			    t2.taxcomponent,
			    t3.rulecodedesc AS ruledesc,
				t1.ReferenceId
			   FROM fintypefees t1
			     JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
			     LEFT JOIN rules t3 ON t1.rulecode= t3.rulecode AND t3.rulemodule= 'FEES' AND t1.finevent= t3.ruleevent
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM fintypefees_temp F
			          WHERE F.fintype= t1.fintype AND F.finevent= t1.finevent AND F.feetypeid = t1.feetypeid AND F.originationfee = t1.originationfee))
		</createView>
	</changeSet>

	<changeSet id="33" author="Siva">
		<createSequence sequenceName="SeqPromotionScheme"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="34" author="Siva">
		<sql>

			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM
			SECRIGHTS);
			UPDATE
			SEQSECGROUPS SET SEQNO= (SELECT
			MAX(GRPID) FROM
			SECGROUPS);
			UPDATE
			SEQSECGROUPRIGHTS SET SEQNO = (SELECT
			MAX(GRPRIGHTID) FROM
			SECGROUPRIGHTS);
			UPDATE
			SEQSECROLEGROUPS SET
			SEQNO=
			(SELECT MAX(ROLEGRPID) FROM
			SECROLEGROUPS);

			INSERT INTO
			SECGROUPS SELECT
			(SELECT MAX(GRPID)+1
			FROM
			SECGROUPS),
			'CDSCHEME_MAKER', 'WF Maker for CD
			Scheme Maker',
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0
			FROM
			SEQSECGROUPS
			WHERE 0=0;
			INSERT INTO SECGROUPS SELECT (SELECT
			MAX(GRPID)+1 FROM
			SECGROUPS), 'CDSCHEME_APPROVER', 'WF
			Approver for CD
			Scheme Maker',
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM
			SEQSECGROUPS
			WHERE 0=0;

			INSERT
			INTO SECRIGHTS SELECT (SELECT
			MAX(RIGHTID)+1 FROM
			SECRIGHTS), 0,
			'menuItem_SolutionFactory_CDScheme','MENU',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE
			0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_Tenor','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE
			0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_AdvEMITerms','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS
			WHERE 0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_CashbackMonth','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS
			WHERE 0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_SubventionMethod','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM
			SEQSECRIGHTS WHERE 0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_PftDaysBasis','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS
			WHERE 0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_SubventionRate','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM
			SEQSECRIGHTS WHERE 0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_SchemeIRR','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS
			WHERE 0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_TaxApplicable','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS
			WHERE 0=0;


			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS
			WHERE
			GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_PromotionCode'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_PromotionDesc'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE
			GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='PromotionDialog_StartDate'),
			1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_EndDate'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE
			GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_ActualInterestRate'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_Tenor'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS
			VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER')
			,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_AdvEMITerms'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ','
			',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM
			SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_CashbackMonth'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE
			GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_SubventionMethod'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_PftDaysBasis'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE
			GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_SubventionRate'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_SchemeIRR'),
			1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE
			GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_TaxApplicable'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_Active'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS
			VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER')
			,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='menuItem_SolutionFactory_CDScheme'), 1,
			0,1000,CURRENT_TIMESTAMP,' ','
			',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID
			FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='button_PromotionDialog_btnSave'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE
			GRPCODE='CDSCHEME_APPROVER')
			,(SELECT RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='menuItem_SolutionFactory_CDScheme'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_APPROVER')
			,(SELECT RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='button_PromotionDialog_btnSave'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO
			SecRoleGroups values((Select MAX(RoleGrpID)+1 From
			SecRoleGroups),(Select GrpId From SecGroups Where
			GrpCode='CDSCHEME_MAKER'), (Select RoleID From SecRoles Where
			RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,' ','
			',' ',' ','
			','
			',0);
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1
			From
			SecRoleGroups),(Select GrpId From
			SecGroups Where
			GrpCode='CDSCHEME_APPROVER'), (Select RoleID From SecRoles Where
			RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ','
			',' ',0);

			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT
			MAX(RIGHTID) FROM
			SECRIGHTS);
			UPDATE
			SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM
			SECGROUPS);
			UPDATE
			SEQSECGROUPRIGHTS
			SET SEQNO = (SELECT
			MAX(GRPRIGHTID)
			FROM
			SECGROUPRIGHTS);
			UPDATE SEQSECROLEGROUPS SET
			SEQNO= (SELECT
			MAX(ROLEGRPID) FROM
			SECROLEGROUPS);

		</sql>
	</changeSet>

	<changeSet id="35" author="Siva">
		<comment>New columns added for CD Schemes in Promotion</comment>
		<addColumn tableName="Promotions">
			<column name="cashBackFromDealer" type="int" defaultValue="0" />
			<column name="cashBackToCustomer" type="int" defaultValue="0" />
		</addColumn>
		<addColumn tableName="Promotions_Temp">
			<column name="cashBackFromDealer" type="int" defaultValue="0" />
			<column name="cashBackToCustomer" type="int" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="36" author="Siva">
		<createView viewName="Promotions_AView" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory
			   FROM promotions t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
		</createView>
	</changeSet>

	<changeSet id="37" author="Siva">
		<createView viewName="Promotions_TView" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory
			   FROM promotions_temp t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
		</createView>
	</changeSet>

	<changeSet id="38" author="Siva">
		<createView viewName="Promotions_View" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory
			   FROM promotions_temp t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
			UNION ALL
			 SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory
			   FROM promotions t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM promotions_temp
			          WHERE promotions_temp.promotioncode = t1.promotioncode AND promotions_temp.promotionid = t1.promotionid))
		</createView>
	</changeSet>

	<changeSet id="39" author="Siva">
		<dropColumn tableName="Promotions" columnName="SubventionMethod" />
		<dropColumn tableName="Promotions" columnName="CashbackMonth" />
		<dropColumn tableName="Promotions" columnName="SchemeIRR" />
		<dropColumn tableName="Promotions" columnName="ProductCategory" />

		<dropColumn tableName="Promotions_Temp" columnName="SubventionMethod" />
		<dropColumn tableName="Promotions_Temp" columnName="CashbackMonth" />
		<dropColumn tableName="Promotions_Temp" columnName="SchemeIRR" />
		<dropColumn tableName="Promotions_Temp" columnName="ProductCategory" />
	</changeSet>

	<changeSet id="40" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE FINANCEMAIN Set PromotionSeqID = 0  where PromotionSeqID is null;
				UPDATE FINANCEMAIN_TEMP Set PromotionSeqID = 0 where PromotionSeqID is null;
				UPDATE FINANCEMAIN_PA Set PromotionSeqID = 0 where PromotionSeqID is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="41" author="satyanarayana.g">
		<addColumn tableName="REJECTFINANCEMAIN">
			<column name="PromotionSeqID" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="42" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE REJECTFINANCEMAIN Set PromotionSeqID = 0  where PromotionSeqID is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="43_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="44" author="satyanarayana.g">
		<createView viewName="REJECTFINANCEMAIN_VIEW"
			replaceIfExists="true">
			SELECT F.FINREFERENCE,
					T.FINCATEGORY  LOVDESCPRODUCTCODENAME,
					F.FINTYPE,
					F.FINBRANCH,
					F.FINSTARTDATE,
					F.MATURITYDATE,
					F.NUMBEROFTERMS,
					F.FINCCY,
					F.FINAMOUNT,
					F.FINAMOUNT - F.DOWNPAYMENT + F.FEECHARGEAMT + F.INSURANCEAMT  FINANCINGAMOUNT,
					F.FEECHARGEAMT,
					F.INSURANCEAMT,
					F.FINAMOUNT - F.DOWNPAYMENT + F.FEECHARGEAMT + F.INSURANCEAMT - F.FINREPAYMENTAMOUNT  CURFINAMOUNT,
					F.DOWNPAYMENT,
					F.FINCURRASSETVALUE,
					F.FINASSETVALUE,
					F.ALLOWDRAWINGPOWER,
					F.PROMOTIONSEQID,
					C.CUSTCIF  LOVDESCCUSTCIF
					FROM REJECTFINANCEMAIN F
					LEFT JOIN CUSTOMERS C ON F.CUSTID = C.CUSTID
					LEFT JOIN RMTFINANCETYPES T ON F.FINTYPE = T.FINTYPE
	</createView>
	</changeSet>

	<changeSet id="44_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="45" author="satyanarayana.g">
		<addColumn tableName="REJECTFINANCEMAIN">
			<column name="SanBsdSchdle" type="boolean" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="46" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE REJECTFINANCEMAIN Set SanBsdSchdle = 0  where SanBsdSchdle is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="47_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="47" author="satyanarayana.g">
		<createView viewName="REJECTFINANCEMAIN_VIEW"
			replaceIfExists="true">
			SELECT F.FINREFERENCE,
					T.FINCATEGORY  LOVDESCPRODUCTCODENAME,
					F.FINTYPE,
					F.FINBRANCH,
					F.FINSTARTDATE,
					F.MATURITYDATE,
					F.NUMBEROFTERMS,
					F.FINCCY,
					F.FINAMOUNT,
					F.FINAMOUNT - F.DOWNPAYMENT + F.FEECHARGEAMT + F.INSURANCEAMT  FINANCINGAMOUNT,
					F.FEECHARGEAMT,
					F.INSURANCEAMT,
					F.FINAMOUNT - F.DOWNPAYMENT + F.FEECHARGEAMT + F.INSURANCEAMT - F.FINREPAYMENTAMOUNT  CURFINAMOUNT,
					F.DOWNPAYMENT,
					F.FINCURRASSETVALUE,
					F.FINASSETVALUE,
					F.ALLOWDRAWINGPOWER,
					F.PROMOTIONSEQID,
					F.SANBSDSCHDLE,
					C.CUSTCIF  LOVDESCCUSTCIF
					FROM REJECTFINANCEMAIN F
					LEFT JOIN CUSTOMERS C ON F.CUSTID = C.CUSTID
					LEFT JOIN RMTFINANCETYPES T ON F.FINTYPE = T.FINTYPE
	</createView>
	</changeSet>

	<changeSet id="47_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="48" author="Pruthvi">
		<sql>
		<![CDATA[
			delete from bmtintratebasiscodes where intratebasiscode='P/360';
			INSERT INTO bmtintratebasiscodes(
			intratebasiscode, intratebasisdesc, intratebasisisactive, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid)
			VALUES ('P/360', 'Periodicity (30D Periods )', 1, 0, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0)
		]]>
		</sql>
	</changeSet>

	<changeSet id="49" author="Pruthvi">
		<sql>
		<![CDATA[
			INSERT INTO promotions VALUES ((select coalesce(max(promotionid),0 + 1) from promotions), 'ECOMDD', 'ECOM Discounting', 'PTL', '2019-01-01 00:00:00', '2029-12-31 00:00:00', 0, 0,
	   		21.00, null, null, 0.00, 0, 0, 0, 0,0, 0, 0, 0, 1, 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0,1001, 1, 15, 4, 'P/360', 21.00, 1, 0, 0);

			INSERT INTO promotions VALUES ((select max(promotionid)+1 from promotions), 'OFFLD', 'OFF-Line Discounting', 'PTL', '2019-01-01 00:00:00', '2029-12-31 00:00:00', 0, 0,
			21.00, null, null, 0.00, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0,
			1002, 1, 15, 4, 'P/360', 21.00, 1, 0, 0);

			INSERT INTO promotions VALUES ((select max(promotionid)+1 from promotions), 'OFFLXRC', 'OFF-Line Transfer to Customer', 'PTL', '2019-01-01 00:00:00', '2029-12-31 00:00:00', 0, 0,
			21.00, null, null, 0.00, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0,
			1003, 0, 15, 4, 'P/360', 11.31, 1, 0, 0);

			INSERT INTO promotions VALUES ((select max(promotionid)+1 from promotions), 'OFFLRTN', 'OFF-Line Subvention Retained', 'PTL', '2019-01-01 00:00:00', '2029-12-31 00:00:00', 0, 0,
			21.00, null, null, 0.00, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0,
			1004, 0, 15, 4, 'P/360', 21.00, 1, 3, 3);
			]]>
		</sql>
	</changeSet>

	<changeSet id="52" author="ADARSH">
		<addColumn tableName="FINANCEMAIN">
			<column name="SvAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="53" author="ADARSH">
		<addColumn tableName="FINANCEMAIN">
			<column name="CBAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="56" author="ADARSH">
		<addColumn tableName="FINANCEMAIN_PA">
			<column name="SvAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="57" author="ADARSH">
		<addColumn tableName="FINANCEMAIN_PA">
			<column name="CBAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="60" author="ADARSH">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="SvAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="61" author="ADARSH">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="CBAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="62" author="ADARSH">
		<createView replaceIfExists="true" viewName="financemain_aview"> SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.gendeptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical</createView>
	</changeSet>

	<changeSet id="63" author="ADARSH">
		<createView replaceIfExists="true" viewName="financemain_tview">
		SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.gendeptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical</createView>
	</changeSet>

	<changeSet id="64_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="64" author="ADARSH">
		<createView replaceIfExists="true" viewName="financemain_view">SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.gendeptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
UNION ALL
 SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.gendeptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
  WHERE NOT (EXISTS ( SELECT 1
           FROM financemain_temp
          WHERE financemain_temp.finreference = t1.finreference))</createView>
	</changeSet>

	<changeSet id="64_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="65" author="ADARSH">
		<createView replaceIfExists="true" viewName="legaldetails_view">
            SELECT t1.legalid,
    t1.legalreference,
    t1.loanreference,
    t1.collateralreference,
    t1.branch,
    t1.legaldate,
    t1.schedulelevelarea,
    t1.legaldecision,
    t1.legalremarks,
    t1.propertydetailmodt,
    t1.propertydetailecdate,
    t1.ecpropertyownername,
    t1.active,
    t1.module,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.branchdesc,
    t3.finbranch,
    t4.findivision
   FROM legaldetails_temp t1
     JOIN rmtbranches t2 ON t1.branch = t2.branchcode
     JOIN financemain_temp t3 ON t3.finreference = t1.loanreference
     JOIN rmtfinancetypes t4 ON t4.fintype = t3.fintype
UNION ALL
 SELECT t1.legalid,
    t1.legalreference,
    t1.loanreference,
    t1.collateralreference,
    t1.branch,
    t1.legaldate,
    t1.schedulelevelarea,
    t1.legaldecision,
    t1.legalremarks,
    t1.propertydetailmodt,
    t1.propertydetailecdate,
    t1.ecpropertyownername,
    t1.active,
    t1.module,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t2.branchdesc,
    t3.finbranch,
    t4.findivision
   FROM legaldetails t1
     JOIN rmtbranches t2 ON t1.branch = t2.branchcode
     JOIN financemain_view t3 ON t3.finreference = t1.loanreference
     JOIN rmtfinancetypes t4 ON t4.fintype = t3.fintype
  WHERE NOT (EXISTS ( SELECT 1
           FROM legaldetails_temp
          WHERE legaldetails_temp.legalid = t1.legalid))
          </createView>
	</changeSet>

	<changeSet id="66" author="ADARSH">
		<createView replaceIfExists="true" viewName="financemaintenance_aview">
    	SELECT t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.nextrolecode,
    t1.recordstatus,
    t1.recordtype,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.migratedfinance,
    t1.rcdmaintainsts,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.downpayment,
    t1.planemihalw,
    t1.fincurrassetvalue,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t3.fincategory AS lovdescproductcodename,
    t3.finisalwdifferment AS lovdescfinalwdeferment,
    t4.productcategory,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis AS bpiratebasis,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount 
   FROM financemain t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
     </createView>
	</changeSet>

	<changeSet id="67" author="ADARSH" dbms="postgresql,oracle">
		<createView replaceIfExists="true" viewName="financemaintenance_view">
    	SELECT t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.nextrolecode,
    t1.recordstatus,
    t1.recordtype,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.rcdmaintainsts,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t3.finisalwdifferment AS lovdescfinalwdeferment,
    t3.findivision AS lovdescfindivision,
    t3.fincategory AS lovdescproductcodename,
    t4.productcategory,
    COALESCE(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    COALESCE(t9.noinst, 0) AS noinst,
    t1.samplingrequired,
    t1.advemiterms,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
UNION ALL
 SELECT t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.nextrolecode,
    t1.recordstatus,
    t1.recordtype,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.rcdmaintainsts,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t3.finisalwdifferment AS lovdescfinalwdeferment,
    t3.findivision AS lovdescfindivision,
    t3.fincategory AS lovdescproductcodename,
    t4.productcategory,
    COALESCE(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    COALESCE(t9.noinst, 0) AS noinst,
    t1.samplingrequired,
    t1.advemiterms,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
  WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM financemain_temp
          WHERE financemain_temp.finreference = t1.finreference))
         </createView>
	</changeSet>

	<changeSet id="67" author="ADARSH" dbms="mssql">
		<createView replaceIfExists="true" viewName="financemaintenance_view">
    	SELECT t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.nextrolecode,
    t1.recordstatus,
    t1.recordtype,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.rcdmaintainsts,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t3.finisalwdifferment AS lovdescfinalwdeferment,
    t3.findivision AS lovdescfindivision,
    t3.fincategory AS lovdescproductcodename,
    t4.productcategory,
    COALESCE(t5.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    COALESCE(t9.noinst, 0) AS noinst,
    t1.samplingrequired,
    t1.advemiterms,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
UNION ALL
 SELECT t1.finreference,
    t1.finbranch,
    t1.fintype,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.finstartdate,
    t1.numberofterms,
    t1.custid,
    t1.finamount,
    t1.maturitydate,
    t1.finrepaymentamount,
    t1.finisactive,
    t1.blacklisted,
    t1.feechargeamt,
    t1.insuranceamt,
    t1.graceterms,
    t1.allowgrcperiod,
    t1.grcperiodenddate,
    t1.alwmultidisb,
    t1.defferments,
    t1.nextrolecode,
    t1.recordstatus,
    t1.recordtype,
    t1.allowgrcpftrvw,
    t1.allowrepayrvw,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.rcdmaintainsts,
    t1.migratedfinance,
    t1.closingstatus,
    t1.repayratebasis,
    t1.manualschedule,
    t1.fincurrassetvalue,
    t1.takeoverfinance,
    t1.nextrolloverdate,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.downpayment,
    t1.planemihalw,
    t1.calterms,
    t1.ratechganyday,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t3.finisalwdifferment AS lovdescfinalwdeferment,
    t3.findivision AS lovdescfindivision,
    t3.fincategory AS lovdescproductcodename,
    t4.productcategory,
    COALESCE(t5.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    COALESCE(t9.noinst, 0) AS noinst,
    t1.samplingrequired,
    t1.advemiterms,
    t1.sanbsdschdle,
	t1.PromotionSeqID,
	t1.SvAmount,
	t1.CBAmount
   FROM financemain t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
  WHERE NOT (EXISTS ( SELECT 1 AS expr1
           FROM financemain_temp
          WHERE financemain_temp.finreference = t1.finreference))
         </createView>
	</changeSet>

	<changeSet id="68" author="ADARSH">
		<createView replaceIfExists="true" viewName="financemain_dataview">
    	SELECT t1.finreference,
    	 t1.fintype,
  		 t2.custcif AS lovdesccustcif,
  		 t1.custid,
   		 t1.closingstatus,
  		 t1.finisactive,
   		 t1.maturitydate,
   		 t1.productCategory
  	 FROM financemain t1
    	JOIN customers t2 ON t1.custid = t2.custid
     	JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
  		WHERE t1.closingstatus IS NULL OR t1.closingstatus != 'C'
  		</createView>
	</changeSet>

	<changeSet id="69" author="ADARSH">
		<dropPrimaryKey constraintName="pk_fintypefees"
			tableName="fintypefees" />
	</changeSet>

	<changeSet id="70_pre" author="ADARSH" dbms="mssql">
		<addNotNullConstraint tableName="fintypefees"
			columnName="fintype" columnDataType="varchar(8)" />
		<addNotNullConstraint tableName="fintypefees"
			columnName="originationfee" columnDataType="boolean" />
		<addNotNullConstraint tableName="fintypefees"
			columnName="finevent" columnDataType="varchar(8)" />
		<addNotNullConstraint tableName="fintypefees"
			columnName="feetypeid" columnDataType="bigint" />
		<addNotNullConstraint tableName="fintypefees"
			columnName="moduleid" columnDataType="int" />
		<addNotNullConstraint tableName="fintypefees"
			columnName="referenceid" columnDataType="bigint" />
	</changeSet>

	<changeSet id="70" author="ADARSH">
		<addPrimaryKey
			columnNames="fintype, originationfee, finevent, feetypeid, moduleid, referenceid"
			constraintName="pk_fintypefees" tableName="fintypefees" />
	</changeSet>

	<changeSet id="71" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS">
			<column name="GAPINTAMZ" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="72" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS">
			<column name="GAPINTAMZLBD" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="73" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS">
			<column name="PRVMTHGAPINTAMZ" type="decimal(18,0)"
				defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="74" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS">
			<column name="SVAMOUNT" type="decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="75" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS">
			<column name="CBAmount" type="decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="76" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS_SNAPSHOT">
			<column name="GAPINTAMZ" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="77" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS_SNAPSHOT">
			<column name="GAPINTAMZLBD" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="78" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS_SNAPSHOT">
			<column name="PRVMTHGAPINTAMZ" type="decimal(18,0)"
				defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="79" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS_SNAPSHOT">
			<column name="SVAMOUNT" type="decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="80" author="ADARSH">
		<addColumn tableName="FINPFTDETAILS_SNAPSHOT">
			<column name="CBAmount" type="decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="81" author="ADARSH">
		<sql>
		<![CDATA[
		UPDATE FINPFTDETAILS SET GapIntAmz=0, GapIntAmzLbd=0, PrvMthGapIntAmz = 0;
	    UPDATE FINPFTDETAILS_SNAPSHOT SET GapIntAmz=0, GapIntAmzLbd=0, PrvMthGapIntAmz =0;
		]]>
		</sql>
	</changeSet>

	<changeSet id="82" author="ADARSH">
		<sql>
		<![CDATA[
		INSERT INTO bmtamountcodes(allowedevent, allowedria, amountcode, amountcodedesc, amountcodeisactive, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid) VALUES ('AMZ', 0, 'ae_dGapAmz', 'Gap Interest from Last Posting to Today', 1, 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0);
		INSERT INTO bmtamountcodes(allowedevent, allowedria, amountcode, amountcodedesc, amountcodeisactive, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid) VALUES ('ADDDBSP', 0, 'ae_svAmount', 'Subvention Amount', 1, 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0);
		INSERT INTO bmtamountcodes(allowedevent, allowedria, amountcode, amountcodedesc, amountcodeisactive, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid) VALUES ('ADDDBSP', 0, 'ae_cbAmount', 'Cash Back Amount', 1, 1, 1000, current_timestamp, 'Approved', null, null, null, null, null, 0);
 		]]>
		</sql>
	</changeSet>

	<changeSet id="83" author="satyanarayana.g" dbms="postgresql,oracle">
		<createView viewName="FINANCEMAIN_LVIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				  T1.INVESTMENTREF,
				  T1.FINTYPE,
				  T1.FINCCY,
				  T1.FINAMOUNT,
				  T1.DOWNPAYMENT,
				  T1.FEECHARGEAMT,
				  T1.SCHEDULEMETHOD,
				  T1.NUMBEROFTERMS,
				  T1.RECORDSTATUS,
				  T1.RECORDTYPE,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.FINBRANCH,
				  T1.FINCONTRACTDATE,
				  T1.LINKEDFINREF,
				  T1.NEXTUSERID,
				  T1.PRIORITY,
				  T1.WORKFLOWID,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.FINPREAPPROVEDREF,
				  T1.RCDMAINTAINSTS,
				  T1.INSURANCEAMT,
				  T1.FINCURRASSETVALUE,
				  T1.CALTERMS,
				  T1.DEVIATIONAPPROVAL,
				  T1.FINPURPOSE,
				  T1.INITIATEDATE,
				  T1.FINASSETVALUE,
				  T2.CUSTCIF        LOVDESCCUSTCIF,
				  T2.CUSTSHRTNAME   LOVDESCCUSTSHRTNAME,
				  T2.CUSTPASSPORTNO  LOVDESCCUSTPASSPORTNO,
				  T2.CUSTDOB         LOVDESCCUSTDOB,
				  T2.CUSTCRCPR       LOVDESCCUSTCRCPR,
				  T2.PHONENUMBER,
				  T3.FINCATEGORY  LOVDESCPRODUCTCODENAME,
				  T3.FINDIVISION  LOVDESCFINDIVISION,
				  T3.PRODUCT      LOVDESCFINPRODUCT,
				  T3.FINTYPEDESC  LOVDESCFINTYPENAME,
				  T1.PRODUCTCATEGORY,
				  COALESCE(T4.ROLEDESC, FN_GET_ROLEDESC(T1.NEXTROLECODE))  LOVDESCREQUESTSTAGE,
				  T1.SAMPLINGREQUIRED,
				  T1.ADVANCEEMI,
				  T1.ADVEMITERMS,
				  T1.BPIPFTDAYSBASIS,
				  T1.GRACETERMS
				FROM FINANCEMAIN_TEMP T1
				JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				JOIN RMTFINANCETYPES T3 ON T3.FINTYPE = T1.FINTYPE
				LEFT JOIN SECROLES T4 ON T1.NEXTROLECODE = T4.ROLECD
	</createView>
	</changeSet>

	<changeSet id="83" author="satyanarayana.g" dbms="mssql">
		<createView viewName="FINANCEMAIN_LVIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				  T1.INVESTMENTREF,
				  T1.FINTYPE,
				  T1.FINCCY,
				  T1.FINAMOUNT,
				  T1.DOWNPAYMENT,
				  T1.FEECHARGEAMT,
				  T1.SCHEDULEMETHOD,
				  T1.NUMBEROFTERMS,
				  T1.RECORDSTATUS,
				  T1.RECORDTYPE,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.FINBRANCH,
				  T1.FINCONTRACTDATE,
				  T1.LINKEDFINREF,
				  T1.NEXTUSERID,
				  T1.PRIORITY,
				  T1.WORKFLOWID,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.FINPREAPPROVEDREF,
				  T1.RCDMAINTAINSTS,
				  T1.INSURANCEAMT,
				  T1.FINCURRASSETVALUE,
				  T1.CALTERMS,
				  T1.DEVIATIONAPPROVAL,
				  T1.FINPURPOSE,
				  T1.INITIATEDATE,
				  T1.FINASSETVALUE,
				  T2.CUSTCIF        LOVDESCCUSTCIF,
				  T2.CUSTSHRTNAME   LOVDESCCUSTSHRTNAME,
				  T2.CUSTPASSPORTNO  LOVDESCCUSTPASSPORTNO,
				  T2.CUSTDOB         LOVDESCCUSTDOB,
				  T2.CUSTCRCPR       LOVDESCCUSTCRCPR,
				  T2.PHONENUMBER,
				  T3.FINCATEGORY  LOVDESCPRODUCTCODENAME,
				  T3.FINDIVISION  LOVDESCFINDIVISION,
				  T3.PRODUCT      LOVDESCFINPRODUCT,
				  T3.FINTYPEDESC  LOVDESCFINTYPENAME,
				  T1.PRODUCTCATEGORY,
				  COALESCE(T4.ROLEDESC, dbo.FN_GET_ROLEDESC(T1.NEXTROLECODE))  LOVDESCREQUESTSTAGE,
				  T1.SAMPLINGREQUIRED,
				  T1.ADVANCEEMI,
				  T1.ADVEMITERMS,
				  T1.BPIPFTDAYSBASIS,
				  T1.GRACETERMS
				FROM FINANCEMAIN_TEMP T1
				JOIN CUSTOMERS T2 ON T1.CUSTID = T2.CUSTID
				JOIN RMTFINANCETYPES T3 ON T3.FINTYPE = T1.FINTYPE
				LEFT JOIN SECROLES T4 ON T1.NEXTROLECODE = T4.ROLECD
	</createView>
	</changeSet>

	<changeSet id="84" author="satyanarayana.g">
		<createView viewName="FINANCEENQUIRY_VIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				  T1.FINBRANCH,
				  T1.FINTYPE,
				  T1.FINCCY,
				  T1.SCHEDULEMETHOD,
				  T1.PROFITDAYSBASIS,
				  T1.FINSTARTDATE,
				  T1.CALTERMS NUMBEROFTERMS,
				  T1.CUSTID,
				  T1.FINAMOUNT,
				  T1.GRCPERIODENDDATE,
				  T1.MATURITYDATE,
				  T1.FINREPAYMENTAMOUNT,
				  T1.FINISACTIVE,
				  T1.ALLOWGRCPERIOD,
				  T1.DOWNPAYMENT,
				  T1.MIGRATEDFINANCE,
				  T1.LASTREPAYDATE,
				  T1.LASTREPAYPFTDATE,
				  T1.FINCURRASSETVALUE,
				  T1.BLACKLISTED,
				  T1.FEECHARGEAMT,
				  T1.CLOSINGSTATUS,
				  T1.GRACETERMS,
				  T1.ALWMULTIDISB,
				  T1.DEFFERMENTS,
				  T1.FINSTATUS ,
				  T1.MANDATEID,
				  T1.FINREPAYMETHOD,
				  T1.FINASSETVALUE,
				  T1.INSURANCEAMT,
				  T1.SANBSDSCHDLE,
				  T1.PROMOTIONSEQID,
				  T1.SVAMOUNT,
				  T1.CBAMOUNT,
				  (T1.FINCURRASSETVALUE+ T1.FEECHARGEAMT+T1.INSURANCEAMT) FINANCINGAMOUNT,
				  (T1.FINCURRASSETVALUE- T1.FINREPAYMENTAMOUNT+ T1.FEECHARGEAMT+T1.INSURANCEAMT) CURFINAMOUNT,
				  T2.FINTYPEDESC LOVDESCFINTYPENAME,
				  T2.FINSCHEDULEON LOVDESCFINSCHEDULEON,
				  T2.FINDIVISION LOVDESCFINDIVISION,
				  T2.FINCATEGORY LOVDESCPRODUCTCODENAME,
				  T2.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				  T3.CUSTCIF LOVDESCCUSTCIF,
				  T3.CUSTSHRTNAME LOVDESCCUSTSHRTNAME,
				  T4.BRANCHDESC LOVDESCFINBRANCHNAME,
				  T5.CUSTTYPECTG,
				  COALESCE(T9.NOINST,0) NOINST FROM FINANCEMAIN T1
				INNER JOIN RMTFINANCETYPES T2 ON T1.FINTYPE = T2.FINTYPE
				INNER JOIN CUSTOMERS T3 ON T1.CUSTID = T3.CUSTID
				INNER JOIN RMTBRANCHES T4 ON T1.FINBRANCH = T4.BRANCHCODE
				INNER JOIN RMTCUSTTYPES T5 ON T3.CUSTTYPECODE = T5.CUSTTYPECODE
				LEFT JOIN FINPFTDETAILS T9 ON T1.FINREFERENCE = T9.FINREFERENCE
		</createView>
	</changeSet>

	<changeSet id="85" author="Siva">
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM
			SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT
			MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);

			UPDATE SECRIGHTS SET RIGHTNAME =
			'PromotionDialog_CashbackFromDealer' WHERE
			RIGHTNAME =
			'PromotionDialog_CashbackMonth';
			INSERT INTO SECRIGHTS
			SELECT (SELECT
			MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_CashbackToCustomer','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM
			SEQSECRIGHTS WHERE 0=0;
			INSERT INTO
			SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'PromotionDialog_OpenBalOnPV','PromotionDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS
			WHERE 0=0;

			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS
			WHERE
			GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_CashbackToCustomer'),
			1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO
			SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM
			SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='CDSCHEME_MAKER') ,(SELECT
			RIGHTID FROM SECRIGHTS WHERE
			RIGHTNAME='PromotionDialog_OpenBalOnPV'), 1,
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			UPDATE
			SEQSECRIGHTS
			SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE
			SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM
			SECGROUPRIGHTS);
		</sql>
	</changeSet>

	<changeSet id="86" author="Siva">
		<dropTable tableName="SeqPromotions" />
	</changeSet>
	<changeSet id="87" author="Siva">
		<createSequence sequenceName="SeqPromotions"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="88" author="Siva">
		<createView viewName="lmtpromotionworkflowdef_aview"
			replaceIfExists="true">
			 SELECT t1.fintype,
			    t1.fintype AS typecode,
			    t4.fintypedesc AS lovdescfintypename,
			    NULL AS collateraldesc,
			    NULL AS vasproductdesc,
			    NULL AS commitmenttypedesc,
			    t1.fintype AS lovdescpromotioncode,
			    t2.promotiondesc AS lovdescpromotionname,
			    NULL AS lovdescfacilitytypename,
			    t1.screencode,
			    t1.workflowtype,
			    t3.workflowdesc AS lovdescworkflowtypename,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.workflowroles AS lovdescworkflowrolesname,
			    t4.fincategory AS lovdescproductcodename,
			    t4.findivision AS lovdescfindivisionname,
			    t3.firsttaskowner AS lovdescfirsttaskowner,
			    t1.modulename,
			    t2.active AS finisactive,
			    t5.productdesc AS lovdescproductname,
			    t4.fintypedesc AS lovdescpromofintypedesc,
			    t4.finassettype,
			    t2.startdate,
			    t2.enddate,
			    t1.finevent,
			    t5.productcategory,
				t2.ReferenceId
			   FROM lmtfinanceworkflowdef t1
			     LEFT JOIN promotions t2 ON t1.fintype = t2.promotioncode
			     JOIN workflowdetails t3 ON t1.workflowtype = t3.workflowtype AND t3.workflowactive = 1
			     JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
			     JOIN bmtproduct t5 ON t4.fincategory = t5.productcode
		</createView>
	</changeSet>
	<changeSet id="89" author="Siva">
		<createView viewName="lmtpromotionworkflowdef_view"
			replaceIfExists="true">
			 SELECT t1.fintype,
			    t1.fintype AS typecode,
			    t4.fintypedesc AS lovdescfintypename,
			    NULL AS collateraldesc,
			    NULL AS vasproductdesc,
			    NULL AS commitmenttypedesc,
			    NULL AS lovdescfacilitytypename,
			    t1.screencode,
			    t1.workflowtype,
			    t3.workflowdesc AS lovdescworkflowtypename,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.workflowroles AS lovdescworkflowrolesname,
			    t4.fincategory AS lovdescproductcodename,
			    t3.firsttaskowner AS lovdescfirsttaskowner,
			    t1.modulename,
			    t2.active AS finisactive,
			    t2.fintype AS lovdescproductname,
			    t4.finassettype,
			    t1.finevent,
			    t5.productcategory,
				t2.ReferenceId
			   FROM lmtfinanceworkflowdef_temp t1
			     LEFT JOIN promotions t2 ON t1.fintype = t2.promotioncode
			     JOIN workflowdetails t3 ON t1.workflowtype = t3.workflowtype AND t3.workflowactive = 1
			     JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
			     JOIN bmtproduct t5 ON t4.fincategory = t5.productcode
			UNION ALL
			 SELECT t1.fintype,
			    t1.fintype AS typecode,
			    t4.fintypedesc AS lovdescfintypename,
			    NULL AS collateraldesc,
			    NULL AS vasproductdesc,
			    NULL AS commitmenttypedesc,
			    NULL AS lovdescfacilitytypename,
			    t1.screencode,
			    t1.workflowtype,
			    t3.workflowdesc AS lovdescworkflowtypename,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t3.workflowroles AS lovdescworkflowrolesname,
			    t4.fincategory AS lovdescproductcodename,
			    t3.firsttaskowner AS lovdescfirsttaskowner,
			    t1.modulename,
			    t2.active AS finisactive,
			    t2.fintype AS lovdescproductname,
			    t4.finassettype,
			    t1.finevent,
			    t5.productcategory,
				t2.ReferenceId
			   FROM lmtfinanceworkflowdef t1
			     LEFT JOIN promotions t2 ON t1.fintype = t2.promotioncode
			     JOIN workflowdetails t3 ON t1.workflowtype = t3.workflowtype AND t3.workflowactive = 1
			     JOIN rmtfinancetypes t4 ON t2.fintype = t4.fintype
			     JOIN bmtproduct t5 ON t4.fincategory = t5.productcode
			  WHERE NOT (EXISTS ( SELECT 1 AS expr1
			           FROM lmtfinanceworkflowdef_temp W
			          WHERE W.fintype = t1.fintype AND W.finevent = t1.finevent AND W.modulename = t1.modulename))
		</createView>
	</changeSet>

	<changeSet id="90" author="Siva">
		<sql>

			DELETE FROM CategoryWiseEvents WHERE CategoryCode = 'C';

			INSERT
			INTO
			CategoryWiseEvents VALUES('ADDDBSP','C',1,1,1);
			INSERT INTO
			CategoryWiseEvents VALUES('DISBINS','C',1,1,2);
			INSERT INTO
			CategoryWiseEvents VALUES('AMZ','C',1,1,3);
			INSERT INTO
			CategoryWiseEvents VALUES('REPAY','C',1,1,4);
			INSERT INTO
			CategoryWiseEvents VALUES('LATEPAY','C',1,1,5);
			INSERT INTO
			CategoryWiseEvents VALUES('EARLYSTL','C',1,1,6);
			INSERT INTO
			CategoryWiseEvents
			VALUES('INSTDATE','C',1,1,7);
			INSERT INTO
			CategoryWiseEvents VALUES('WRITEOFF','C',1,0,8);
			INSERT INTO
			CategoryWiseEvents VALUES('WRITEBK','C',1,0,9);

		</sql>
	</changeSet>

	<changeSet id="91" author="shahbaj.b">
		<createView viewName="financeenquiry_view" replaceIfExists="true">
		
        SELECT t1.finreference,
        t1.finbranch,
        t1.fintype,
        t1.finccy,
        t1.schedulemethod,
        t1.profitdaysbasis,
        t1.finstartdate,
        t1.calterms AS numberofterms,
        t1.custid,
        t1.finamount,
        t1.grcperiodenddate,
        t1.maturitydate,t1.finrepaymentamount,
        t1.finisactive,
        t1.allowgrcperiod,
        t1.downpayment,
        t1.migratedfinance,
        t1.lastrepaydate,
        t1.lastrepaypftdate,
        t1.fincurrassetvalue,
        t1.blacklisted,
        t1.feechargeamt,
        t1.closingstatus,
        t1.graceterms,
        t1.alwmultidisb,
        t1.defferments,
        t1.finstatus,
        t1.mandateid,
        t1.finrepaymethod,
        t1.finassetvalue,
        t1.insuranceamt,
        t1.fincurrassetvalue + t1.feechargeamt + t1.insuranceamt AS financingamount,
        t1.fincurrassetvalue - t1.finrepaymentamount + t1.feechargeamt + t1.insuranceamt AS curfinamount,
        t2.fintypedesc AS lovdescfintypename,
        t2.finscheduleon AS lovdescfinscheduleon,
        t2.findivision AS lovdescfindivision,
        t2.fincategory AS lovdescproductcodename,
        t2.finisalwdifferment AS lovdescfinalwdeferment,
        t3.custcif AS lovdesccustcif,
        t3.custshrtname AS lovdesccustshrtname,
        t4.branchdesc AS lovdescfinbranchname,
        t5.custtypectg,
        COALESCE(t9.noinst, 0) AS noinst, 
	    t1.svAmount
        FROM financemain t1
        JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
        JOIN customers t3 ON t1.custid = t3.custid
        JOIN rmtbranches t4 ON t1.finbranch = t4.branchcode
        JOIN rmtcusttypes t5 ON t3.custtypecode = t5.custtypecode
        LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		</createView>
	</changeSet>
	<changeSet id="92" author="shahbaj.b" dbms="postgresql,oracle">
		<createView viewName="financemain_lview" replaceIfExists="true">
	SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t2.custshrtname AS lovdesccustshrtname,
    t2.custpassportno AS lovdesccustpassportno,
    t2.custdob AS lovdesccustdob,
    t2.custcrcpr AS lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory AS lovdescproductcodename,
    t3.findivision AS lovdescfindivision,
    t3.product AS lovdescfinproduct,
    t3.fintypedesc AS lovdescfintypename,
    COALESCE(t4.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
	t1.ProductCategory
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
     LEFT JOIN secroles t4 ON t1.nextrolecode = t4.rolecd
	</createView>
	</changeSet>

	<changeSet id="92" author="shahbaj.b" dbms="mssql">
		<createView viewName="financemain_lview" replaceIfExists="true">
	SELECT t1.finreference,
    t1.investmentref,
    t1.fintype,
    t1.finccy,
    t1.finamount,
    t1.downpayment,
    t1.feechargeamt,
    t1.schedulemethod,
    t1.numberofterms,
    t1.recordstatus,
    t1.recordtype,
    t1.rolecode,
    t1.nextrolecode,
    t1.finbranch,
    t1.fincontractdate,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t1.workflowid,
    t1.taskid,
    t1.nexttaskid,
    t1.finpreapprovedref,
    t1.rcdmaintainsts,
    t1.insuranceamt,
    t1.fincurrassetvalue,
    t1.calterms,
    t1.deviationapproval,
    t1.finpurpose,
    t1.initiatedate,
    t1.finassetvalue,
    t2.custcif AS lovdesccustcif,
    t2.custshrtname AS lovdesccustshrtname,
    t2.custpassportno AS lovdesccustpassportno,
    t2.custdob AS lovdesccustdob,
    t2.custcrcpr AS lovdesccustcrcpr,
    t2.phonenumber,
    t3.fincategory AS lovdescproductcodename,
    t3.findivision AS lovdescfindivision,
    t3.product AS lovdescfinproduct,
    t3.fintypedesc AS lovdescfintypename,
    COALESCE(t4.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
    t1.samplingrequired,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.graceterms,
	t1.ProductCategory
   FROM financemain_temp t1
     JOIN customers t2 ON t1.custid = t2.custid
     JOIN rmtfinancetypes t3 ON t3.fintype = t1.fintype
     LEFT JOIN secroles t4 ON t1.nextrolecode = t4.rolecd
	</createView>
	</changeSet>

	<changeSet id="93" author="meena.a">
		<comment>extra fields added in Limitdetails</comment>
		<addColumn tableName="Limitdetails">
			<column name="ExternalRef1" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="94" author="meena.a">
		<comment>extra fields added in Limitdetails</comment>
		<addColumn tableName="Limitdetails_temp">
			<column name="ExternalRef1" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="95" author="meena.a">
		<createView viewName="LIMITDETAILS_VIEW" replaceIfExists="true">
			SELECT T1.DETAILID,
					T1.LIMITHEADERID,
					T1.LIMITSTRUCTUREDETAILSID,
					T5.GROUPCODE,
					T3.GROUPNAME,
					T5.LIMITLINE,
					T4.RULECODEDESC LIMITLINEDESC,
					COALESCE(T1.REVOLVING,0)REVOLVING,
					COALESCE(T4.REVOLVING,0) LIMITSTRUCTUREREVOLVING ,
					T1.EXPIRYDATE,
					T1.LIMITSANCTIONED,
					T1.RESERVEDLIMIT,
					T1.UTILISEDLIMIT,
					T1.LIMITCHECK,
					T1.LIMITCHKMETHOD,
					T5.ITEMSEQ,
					T5.ITEMPRIORITY,
					T5.ITEMLEVEL,
					T5.EDITABLE,
					T5.DISPLAYSTYLE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.NONRVLUTILISED,
					T1.BANKINGARRANGEMENT,
					T1.LIMITCONDITION,
					T1.EXTERNALREF,
					T1.TENOR,
					T1.EXTERNALREF1
					FROM LIMITDETAILS_TEMP T1
					INNER JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					INNER JOIN LIMITSTRUCTUREDETAILS T5 ON T1.LIMITSTRUCTUREDETAILSID = T5.LIMITSTRUCTUREDETAILSID
					LEFT OUTER JOIN LIMITGROUP T3 ON T5.GROUPCODE = T3.GROUPCODE
					LEFT OUTER JOIN RULES T4 ON T5.LIMITLINE = T4.RULECODE
					AND RULEMODULE  ='LMTLINE'
					UNION ALL
					SELECT T1.DETAILID,
					T1.LIMITHEADERID,
					T1.LIMITSTRUCTUREDETAILSID,
					T5.GROUPCODE,
					T3.GROUPNAME,
					T5.LIMITLINE,
					T4.RULECODEDESC LIMITLINEDESC,
					COALESCE(T1.REVOLVING,0)REVOLVING,
					COALESCE(T4.REVOLVING,0) LIMITSTRUCTUREREVOLVING,
					T1.EXPIRYDATE,
					T1.LIMITSANCTIONED,
					T1.RESERVEDLIMIT,
					T1.UTILISEDLIMIT,
					T1.LIMITCHECK,
					T1.LIMITCHKMETHOD,
					T5.ITEMSEQ,
					T5.ITEMPRIORITY,
					T5.ITEMLEVEL,
					T5.EDITABLE,
					T5.DISPLAYSTYLE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.NONRVLUTILISED,
					T1.BANKINGARRANGEMENT,
					T1.LIMITCONDITION,
					T1.EXTERNALREF,
					T1.TENOR,
					T1.EXTERNALREF1
					FROM LIMITDETAILS T1
					INNER JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					INNER JOIN LIMITSTRUCTUREDETAILS T5 ON T1.LIMITSTRUCTUREDETAILSID = T5.LIMITSTRUCTUREDETAILSID
					LEFT OUTER JOIN LIMITGROUP T3 ON T5.GROUPCODE = T3.GROUPCODE
					LEFT OUTER JOIN RULES T4 ON T5.LIMITLINE = T4.RULECODE AND RULEMODULE  ='LMTLINE'
					WHERE NOT EXISTS (SELECT 1 FROM LIMITDETAILS_TEMP WHERE DETAILID = T1.DETAILID)
		</createView>
	</changeSet>

	<changeSet id="96_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'limitdetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="96" author="meena.a">
		<createView viewName="LIMITDETAILS_AVIEW" replaceIfExists="true">
			SELECT T1.DETAILID,
					T1.LIMITHEADERID,
					T1.LIMITSTRUCTUREDETAILSID,
					T5.GROUPCODE,
					T3.GROUPNAME,
					T5.LIMITLINE,
					T4.RULECODEDESC LIMITLINEDESC,
					COALESCE(T1.REVOLVING,0)REVOLVING,
					COALESCE(T4.REVOLVING,0) LIMITSTRUCTUREREVOLVING,
					T1.EXPIRYDATE,
					T1.LIMITSANCTIONED,
					T1.RESERVEDLIMIT,
					T1.UTILISEDLIMIT,
					T1.LIMITCHECK,
					T1.LIMITCHKMETHOD,
					T5.ITEMSEQ,
					T5.ITEMPRIORITY,
					T5.ITEMLEVEL,
					T5.EDITABLE,
					T5.DISPLAYSTYLE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.NONRVLUTILISED,
					T1.BANKINGARRANGEMENT,
					T1.LIMITCONDITION,
					T1.EXTERNALREF,
					T1.TENOR,
					T1.EXTERNALREF1
					FROM LIMITDETAILS T1
					INNER JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					INNER JOIN LIMITSTRUCTUREDETAILS T5 ON T1.LIMITSTRUCTUREDETAILSID = T5.LIMITSTRUCTUREDETAILSID
					LEFT OUTER JOIN LIMITGROUP T3 ON T5.GROUPCODE = T3.GROUPCODE
					LEFT OUTER JOIN RULES T4 ON T5.LIMITLINE = T4.RULECODE AND RULEMODULE  ='LMTLINE'
		</createView>
	</changeSet>

	<changeSet id="96_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'limitdetails_aview');
				
			]]>
		</sql>
	</changeSet>

	<changeSet id="97" author="meena.a">
		<createView viewName="LIMITDETAILS_TVIEW" replaceIfExists="true">
			SELECT T1.DETAILID,
					T1.LIMITHEADERID,
					T1.LIMITSTRUCTUREDETAILSID,
					T5.GROUPCODE,
					T3.GROUPNAME,
					T5.LIMITLINE,
					T4.RULECODEDESC LIMITLINEDESC,
					COALESCE(T1.REVOLVING,0)REVOLVING,
					COALESCE(T4.REVOLVING,0) LIMITSTRUCTUREREVOLVING,
					T1.EXPIRYDATE,
					T1.LIMITSANCTIONED,
					T1.RESERVEDLIMIT,
					T1.UTILISEDLIMIT,
					T1.LIMITCHECK,
					T1.LIMITCHKMETHOD,
					T5.ITEMSEQ,
					T5.ITEMPRIORITY,
					T5.ITEMLEVEL,
					T5.EDITABLE,
					T5.DISPLAYSTYLE,
					T1.VERSION,
					T1.CREATEDBY,
					T1.CREATEDON,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T2.USRLOGIN,
					T2.USRFNAME,
					T2.USRMNAME,
					T2.USRLNAME,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T1.NONRVLUTILISED,
					T1.BANKINGARRANGEMENT,
					T1.LIMITCONDITION,
					T1.EXTERNALREF,
					T1.TENOR,
					T1.EXTERNALREF1
					FROM LIMITDETAILS_TEMP T1
					INNER JOIN SECUSERS T2 ON T1.LASTMNTBY = T2.USRID
					INNER JOIN LIMITSTRUCTUREDETAILS T5 ON T1.LIMITSTRUCTUREDETAILSID = T5.LIMITSTRUCTUREDETAILSID
					LEFT OUTER JOIN LIMITGROUP T3 ON T5.GROUPCODE = T3.GROUPCODE
					LEFT OUTER JOIN RULES T4 ON T5.LIMITLINE = T4.RULECODE
					AND RULEMODULE  ='LMTLINE'
		</createView>
	</changeSet>

	<changeSet id="98" author="Siva">
		<comment>New columns added for CD Schemes in Promotion</comment>
		<addColumn tableName="Promotions">
			<column name="specialScheme" type="smallint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="99" author="Siva">
		<comment>New columns added for CD Schemes in Promotion</comment>
		<addColumn tableName="Promotions">
			<column name="remarks" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="100" author="Siva">
		<comment>New columns added for CD Schemes in Promotion</comment>
		<addColumn tableName="Promotions_Temp">
			<column name="specialScheme" type="smallint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="101" author="Siva">
		<comment>New columns added for CD Schemes in Promotion</comment>
		<addColumn tableName="Promotions_Temp">
			<column name="remarks" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="102" author="Siva">
		<createView viewName="Promotions_AView" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory, t1.specialScheme,t1.remarks
			   FROM promotions t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
		</createView>
	</changeSet>

	<changeSet id="103" author="Siva">
		<createView viewName="Promotions_TView" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory,t1.specialScheme,t1.remarks
			   FROM promotions_temp t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
		</createView>
	</changeSet>

	<changeSet id="104" author="Siva">
		<createView viewName="Promotions_View" replaceIfExists="true">
			SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory,t1.specialScheme,t1.remarks
			   FROM promotions_temp t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
			UNION ALL
			 SELECT t1.promotionid,
			    t1.promotioncode,
			    t1.promotiondesc,
			    t1.fintype,
			    t1.startdate,
			    t1.enddate,
			    t1.finisdwpayrequired,
			    t1.downpayrule,
			    t1.actualinterestrate,
			    t1.finbaserate,
			    t1.finsplrate,
			    t1.finmargin,
			    t1.applyrpypricing,
			    t1.rpypricingmethod,
			    t1.finminterm,
			    t1.finmaxterm,
			    t1.finminamount,
			    t1.finmaxamount,
			    t1.finminrate,
			    t1.finmaxrate,
			    t1.active,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t2.finccy,
			    t2.fincategory,
			    t2.fintypedesc,
			    t3.rulecode AS downpayrulecode,
			    t3.rulecodedesc AS downpayruledesc,
			    t4.rulecode AS rpypricingcode,
			    t4.rulecodedesc AS rpypricingdesc,
			    t1.ReferenceID, t1.OpenBalOnPV, t1.Tenor, t1.AdvEMITerms, t1.PftDaysBasis, t1.SubventionRate,
			    t1.TaxApplicable, t1.cashBackFromDealer, t1.cashBackToCustomer, t2.ProductCategory,t1.specialScheme,t1.remarks
			   FROM promotions t1
			     JOIN rmtfinancetypes t2 ON t1.fintype = t2.fintype
			     LEFT JOIN rules t3 ON t1.downpayrule = t3.ruleid
			     LEFT JOIN rules t4 ON t1.rpypricingmethod = t4.ruleid
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM promotions_temp
			          WHERE promotions_temp.promotioncode = t1.promotioncode AND promotions_temp.promotionid = t1.promotionid))
		</createView>
	</changeSet>

	<changeSet id="105" author="Durgaprasad G">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'ALLOW_BACK_DATED_ADD_RATE_CHANGE';
				INSERT INTO SMTparameters  VALUES ('ALLOW_BACK_DATED_ADD_RATE_CHANGE', 'Allow back dated add rate chnage.', 'String', '1', 'N', 1, 0, NULL, NULL, 'Allow back dated add rate chnage.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="106" author="Srikanth">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'DISB_PARTNERBANK';
				INSERT INTO smtparameters(sysparmcode, sysparmdesc, sysparmtype, sysparmmaint, sysparmvalue, sysparmlength, sysparmdec, sysparmlist, sysparmvaldmod, sysparmdescription, version, lastmntby, lastmnton, recordstatus, rolecode, nextrolecode, taskid, nexttaskid, recordtype, workflowid)
	            VALUES ('DISB_PARTNERBANK', 'Disb PartnerBank Id', 'long', 1, '68', 30, 0,NULL,NULL, 'Disb PartnerBank Id', '1', '1000', Current_TimeStamp, 'Approved',NULL,NULL,NULL,NULL,NULL,'0');
			]]>
		</sql>
	</changeSet>

	<changeSet id="107" author="satyanarayana.g">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='BR_INRST_RVW_FRQ_FRQDAYVAL_REQ';
			]]>
		</sql>
	</changeSet>

	<changeSet id="108" author="Srikanth" dbms="postgresql">
		<createView viewName="LMTFinanceWorkFlowDef_View"
			replaceIfExists="true">
		SELECT   T1.FinType,T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName , T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc,
				T4.FacilityDesc lovDescFacilityTypeName ,
						 T1.ScreenCode, T1.WorkFlowType ,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName, 
                 COALESCE(CAST(T2.FinIsActive as smallint), T6.Active,CAST(T7.Active as smallint),CAST(T8.Active as smallint) ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory,COALESCE(T9.REFERENCEID,0) REFERENCEID
				FROM     LMTFinanceWorkFlowDef_Temp T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType 
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						 LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
              LEFT JOIN Promotions T9 ON T9.PromotionCode= T1.Fintype
				UNION ALL
				SELECT   T1.FinType, T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName, T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc, T4.FacilityDesc lovDescFacilityTypeName,
						 T1.ScreenCode, T1.WorkFlowType,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName,
                COALESCE(CAST(T2.FinIsActive as smallint), T6.Active,CAST(T7.Active as smallint),CAST(T8.Active as smallint) ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory,COALESCE(T9.REFERENCEID,0) REFERENCEID
				FROM     LMTFinanceWorkFlowDef  T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType 
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						  LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
              LEFT JOIN Promotions T9 ON T9.PromotionCode= T1.Fintype
				WHERE    (NOT EXISTS
				                          (SELECT     1 Expr1
				                            FROM          LMTFinanceWorkFlowDef_Temp
				                            WHERE      (FinType = T1.FinType AND FinEvent = T1.FinEvent AND ModuleName = T1.ModuleName)))
		
		</createView>
	</changeSet>

	<changeSet id="108" author="Srikanth" dbms="oracle">
		<createView viewName="LMTFinanceWorkFlowDef_View"
			replaceIfExists="true">		
		SELECT   T1.FinType,T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName , T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc,
				T4.FacilityDesc lovDescFacilityTypeName ,
						 T1.ScreenCode, T1.WorkFlowType ,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName, 
                 COALESCE(CAST(T2.FinIsActive as number(1)), T6.Active,CAST(T7.Active as number(1)),CAST(T8.Active as number(1)) ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory,COALESCE(T9.REFERENCEID,0) REFERENCEID
				FROM     LMTFinanceWorkFlowDef_Temp T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType 
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						 LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
              LEFT JOIN Promotions T9 ON T9.PromotionCode= T1.Fintype
				UNION ALL
				SELECT   T1.FinType, T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName, T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc, T4.FacilityDesc lovDescFacilityTypeName,
						 T1.ScreenCode, T1.WorkFlowType,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName,
                COALESCE(CAST(T2.FinIsActive as number(1)), T6.Active,CAST(T7.Active as number(1)),CAST(T8.Active as number(1)) ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory,COALESCE(T9.REFERENCEID,0) REFERENCEID
				FROM     LMTFinanceWorkFlowDef  T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType 
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						  LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
              LEFT JOIN Promotions T9 ON T9.PromotionCode= T1.Fintype
				WHERE    (NOT EXISTS
				                          (SELECT     1 Expr1
				                            FROM          LMTFinanceWorkFlowDef_Temp
				                            WHERE      (FinType = T1.FinType AND FinEvent = T1.FinEvent AND ModuleName = T1.ModuleName)))
		
	</createView>
	</changeSet>

	<changeSet id="108" author="Srikanth" dbms="mssql">
		<createView viewName="LMTFinanceWorkFlowDef_View"
			replaceIfExists="true">
		SELECT   T1.FinType,T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName , T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc,
				T4.FacilityDesc lovDescFacilityTypeName ,
						 T1.ScreenCode, T1.WorkFlowType ,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName, 
                 COALESCE(CAST(T2.FinIsActive as bit), T6.Active,CAST(T7.Active as bit),CAST(T8.Active as bit) ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory,COALESCE(T9.REFERENCEID,0) REFERENCEID
				FROM     LMTFinanceWorkFlowDef_Temp T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType 
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						 LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
              LEFT JOIN Promotions T9 ON T9.PromotionCode= T1.Fintype
				UNION ALL
				SELECT   T1.FinType, T1.FinType TypeCode, T2.FinTypeDesc lovDescFinTypeName, T6.CollateralDesc,T7.ProductDesc VasProductDesc,T8.Description CommitmentTypeDesc, T4.FacilityDesc lovDescFacilityTypeName,
						 T1.ScreenCode, T1.WorkFlowType,T3.WorkFlowDesc lovDescWorkFlowTypeName, T1.Version,
						 T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
				         T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.WorkFlowRoles LovDescWorkFlowRolesName,
				         T2.FinCategory lovDescProductCodeName,T3.FirstTaskOwner LovDescFirstTaskOwner,
				         T1.ModuleName,
                COALESCE(CAST(T2.FinIsActive as bit), T6.Active,CAST(T7.Active as bit),CAST(T8.Active as bit) ) FinIsActive,
                 COALESCE(T2.Product,'') LovDescProductName,T2.FinAssetType,
				         T1.FinEvent, T5.ProductCategory,COALESCE(T9.REFERENCEID,0) REFERENCEID
				FROM     LMTFinanceWorkFlowDef  T1 
						 LEFT JOIN RMTFinanceTypes T2 ON T1.FinType = T2.FinType 
						 INNER JOIN WorkFlowDetails T3 ON T1.WorkFlowType = T3.WorkFlowType 
						 AND T3.WorkFlowActive = 1 
						 LEFT JOIN CAFFacilityTypes T4 ON T1.FinType = T4.FacilityType
						 LEFT JOIN BMTProduct T5 ON T2.FinCategory = T5.ProductCode
						  LEFT JOIN CollateralStructure T6 ON T1.FinType = T6.CollateralType 
						 LEFT JOIN VasStructure T7 ON T1.FinType = T7.ProductCode 
						  LEFT JOIN CommitmentType T8 ON T1.FinType = T8.TypeCode
              LEFT JOIN Promotions T9 ON T9.PromotionCode= T1.Fintype
				WHERE    (NOT EXISTS
				                          (SELECT     1 Expr1
				                            FROM          LMTFinanceWorkFlowDef_Temp
				                            WHERE      (FinType = T1.FinType AND FinEvent = T1.FinEvent AND ModuleName = T1.ModuleName)))
											
			</createView>
	</changeSet>

	<changeSet id="109" author="Srikanth">
		<createView viewName="LMTFINANCEWORKFLOWDEF_AVIEW"
			replaceIfExists="true">
		SELECT t1.fintype,
				t1.fintype AS typecode,
				t2.fintypedesc AS lovdescfintypename,
				t6.collateraldesc,
				t7.productdesc AS vasproductdesc,
				t8.description AS commitmenttypedesc,
				t1.fintype AS lovdescpromotioncode,
				t2.fintypedesc AS lovdescpromotionname,
				t4.facilitydesc AS lovdescfacilitytypename,
				t1.screencode,
				t1.workflowtype,
				t3.workflowdesc AS lovdescworkflowtypename,
				t1.version,
				t1.lastmntby,
				t1.lastmnton,
				t1.recordstatus,
				t1.rolecode,
				t1.nextrolecode,
				t1.taskid,
				t1.nexttaskid,
				t1.recordtype,
				t1.workflowid,
				t3.workflowroles AS lovdescworkflowrolesname,
				t2.fincategory AS lovdescproductcodename,
				t2.findivision AS lovdescfindivisionname,
				t3.firsttaskowner AS lovdescfirsttaskowner,
				t1.modulename,
				COALESCE(t2.finisactive, t6.active, t7.active, t8.active) AS finisactive,
				COALESCE(t2.product, '') AS lovdescproductname,
				t2.lovdescpromofintypedesc,
				t2.finassettype,
				t2.startdate,
				t2.enddate,
				t1.finevent,
				t5.productcategory,COALESCE(T9.REFERENCEID,0) REFERENCEID
		   FROM lmtfinanceworkflowdef t1
			 LEFT JOIN rmtfinancetypes_aview t2 ON t1.fintype = t2.fintype
			 JOIN workflowdetails t3 ON t1.workflowtype = t3.workflowtype AND t3.workflowactive = 1
			 LEFT JOIN caffacilitytypes t4 ON t1.fintype = t4.facilitytype
			 LEFT JOIN bmtproduct t5 ON t2.fincategory = t5.productcode
			 LEFT JOIN collateralstructure t6 ON t1.fintype = t6.collateraltype
			 LEFT JOIN vasstructure t7 ON t1.fintype = t7.productcode
			 LEFT JOIN commitmenttype t8 ON t1.fintype = t8.typecode
      		 LEFT JOIN Promotions T9 ON T9.PromotionCode= T1.Fintype	
	</createView>
	</changeSet>

	<changeSet id="110" author="Srikanth">
		<createView viewName="LMTFINANCEWORKFLOWDEF_FTVIEW"
			replaceIfExists="true">	
		 SELECT T1.FinType, T2.FinTypeDesc lovDescFinTypeName, T1.ScreenCode,
            T1.WorkFlowType, T5.ProductCategory, T2.FinIsActive, T1.FinEvent,
            T3.FirstTaskOwner LovDescFirstTaskOwner, T2.FinCategory LovdescProductCodeName,
            T1.ModuleName,COALESCE(T6.REFERENCEID,0) REFERENCEID
		    FROM LMTFinanceWorkFlowDef T1
            INNER JOIN RMTFinanceTypes T2   ON T1.FinType = T2.FinType 
            INNER JOIN WorkFlowDetails T3   ON T1.WorkFlowType = T3.WorkFlowType AND T3.WorkFlowActive = 1
            INNER JOin BMTProduct T5 ON T2.FinCategory = T5.ProductCode
            LEFT JOIN Promotions T6 ON T6.PromotionCode= T1.Fintype
		</createView>
	</changeSet>

	<changeSet id="111" author="Saikiran.V">
		<createView viewName="RELATIONSHIPOFFICERS_VIEW"
			replaceIfExists="true">
			SELECT T1.ROFFICERCODE,
				  T1.ROFFICERDESC,
				  T1.ROFFICERDEPTCODE,
				  T2.DEPTDESC AS LOVDESCROFFICERDEPTCODENAME,
				  T1.ROFFICERISACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T1.GENDESIGNATION,
				  T3.DESGDESC AS GENDESGDESC,
				  T1.GRADE,
				  T1.MOBILENO,
				  T1.DATEOFJOIN
				FROM RELATIONSHIPOFFICERS_TEMP T1
				LEFT JOIN BMTDEPARTMENTS T2 ON T1.ROFFICERDEPTCODE = T2.DEPTCODE
				LEFT JOIN BMTDESIGNATIONS T3 ON T1.GENDESIGNATION = T3.DESGCODE
				UNION ALL
				SELECT T1.ROFFICERCODE,
				  T1.ROFFICERDESC,
				  T1.ROFFICERDEPTCODE,
				  T2.DEPTDESC AS LOVDESCROFFICERDEPTCODENAME,
				  T1.ROFFICERISACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T1.GENDESIGNATION,
				  T3.DESGDESC GENDESGDESC,
				  T1.GRADE,
				  T1.MOBILENO,
				  T1.DATEOFJOIN
				FROM RELATIONSHIPOFFICERS T1
				LEFT JOIN BMTDEPARTMENTS T2 ON T1.ROFFICERDEPTCODE = T2.DEPTCODE
				LEFT JOIN BMTDESIGNATIONS T3 ON T1.GENDESIGNATION = T3.DESGCODE
				WHERE NOT (EXISTS (SELECT 1 FROM RELATIONSHIPOFFICERS_TEMP
				WHERE RELATIONSHIPOFFICERS_TEMP.ROFFICERCODE = T1.ROFFICERCODE))
		</createView>
	</changeSet>

	<changeSet id="112" author="Saikiran.V">
		<createView viewName="RELATIONSHIPOFFICERS_AVIEW"
			replaceIfExists="true">
			SELECT T1.ROFFICERCODE,
				  T1.ROFFICERDESC,
				  T1.ROFFICERDEPTCODE,
				  T2.DEPTDESC AS LOVDESCROFFICERDEPTCODENAME,
				  T1.ROFFICERISACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T1.GENDESIGNATION,
				  T3.DESGDESC GENDESGDESC,
				  T1.GRADE,
				  T1.MOBILENO,
				  T1.DATEOFJOIN
				FROM RELATIONSHIPOFFICERS T1
				LEFT JOIN BMTDEPARTMENTS T2 ON T1.ROFFICERDEPTCODE = T2.DEPTCODE
				LEFT JOIN BMTDESIGNATIONS T3 ON T1.GENDESIGNATION = T3.DESGCODE
		</createView>
	</changeSet>

	<changeSet id="113_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'relationshipofficers_temp');
					select deps_save_and_drop_dependencies ('plf', 'relationshipofficers');
			]]>
		</sql>
	</changeSet>

	<changeSet id="113_pre" author="murthy.y" dbms="oracle">
		<sql>
			<![CDATA[
				drop INDEX IX_RLTNSHPOFCRS_ROFCCOD;
				drop INDEX	IX_T_RLTNSHPOFCRS_ROFCCOD;			
			]]>
		</sql>
	</changeSet>

	<changeSet id="113" author="Varaprasad.K" dbms="postgresql,oracle">
		<modifyDataType tableName="RelationshipOfficers_Temp"
			columnName="rOfficerCode" newDataType="VARCHAR(10)" />
		<modifyDataType tableName="RelationshipOfficers"
			columnName="rOfficerCode" newDataType="VARCHAR(10)" />
	</changeSet>

	<changeSet id="113" author="Varaprasad.K" dbms="mssql">
		<sql>
			<![CDATA[
				alter table RelationshipOfficers alter column rOfficerCode VARCHAR(10) not null;
				alter table RelationshipOfficers_Temp alter column rOfficerCode VARCHAR(10) not null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="113_post" author="murthy.y" dbms="oracle">
		<sql>
			<![CDATA[
				CREATE INDEX IX_RLTNSHPOFCRS_ROFCCOD ON RELATIONSHIPOFFICERS (NLSSORT(ROFFICERCODE,'nls_sort=''BINARY_CI'''));
				CREATE INDEX IX_T_RLTNSHPOFCRS_ROFCCOD ON RELATIONSHIPOFFICERS_TEMP (NLSSORT(ROFFICERCODE,'nls_sort=''BINARY_CI'''));
			]]>
		</sql>
	</changeSet>

	<changeSet id="113_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'relationshipofficers_temp');
					select deps_restore_dependencies ('plf', 'relationshipofficers');
			]]>
		</sql>
	</changeSet>

	<changeSet id="114" author="vijaya.a">
		<createView viewName="RECEIPT_REALIZATION_VIEW"
			replaceIfExists="true">
			SELECT t4.custcif,
			    t1.reference,
			    t3.fintype,
			    t1.receiptid,
			    t1.receiptdate,
			    t1.receiptamount,
			    t2.depositdate,
			    t2.bankcode AS depositbank,
			        CASE
			            WHEN t1.receiptpurpose = 'EarlyPayment' THEN 'Partial Payment'
			            ELSE t1.receiptpurpose
			        END AS receiptpurpose,
			    t1.receiptmode,
			    t1.bouncedate AS canceldate,
			    t2.valuedate,
			    t2.payagainstid,
			    t1.bouncedate,
			    t1.realizationdate,
			    t1.cancelreason,
			    t3.closingstatus,
			    t3.finbranch,
			    t3.fincurrassetvalue,
			    t3.productcategory,
			    t6.partnerbankcode,
			    t2.transactionref,
			    t2.fundingac,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t5.roledesc AS lovdescrequeststage,
			    t2.paymenttype,
			    t1.receiptmodestatus,
			    t1.actfinreceipt,
			    t2.favournumber
			   FROM finreceiptheader_temp t1
			     LEFT JOIN finreceiptdetail_temp t2 ON t1.receiptid = t2.receiptid
			     LEFT JOIN financemain t3 ON t1.reference = t3.finreference
			     LEFT JOIN customers t4 ON t3.custid = t4.custid
			     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
			     LEFT JOIN partnerbanks t6 ON t6.partnerbankid = t2.fundingac
			UNION ALL
			 SELECT t4.custcif,
			    t1.reference,
			    t3.fintype,
			    t1.receiptid,
			    t1.receiptdate,
			    t1.receiptamount,
			    t2.depositdate,
			    t2.bankcode AS depositbank,
			        CASE
			            WHEN t1.receiptpurpose = 'EarlyPayment' THEN 'Partial Payment'
			            ELSE t1.receiptpurpose
			        END AS receiptpurpose,
			    t1.receiptmode,
			    t1.bouncedate AS canceldate,
			    t2.valuedate,
			    t2.payagainstid,
			    t1.bouncedate,
			    t1.realizationdate,
			    t1.cancelreason,
			    t3.closingstatus,
			    t3.finbranch,
			    t3.fincurrassetvalue,
			    t3.productcategory,
			    t6.partnerbankcode,
			    t2.transactionref,
			    t2.fundingac,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t5.roledesc AS lovdescrequeststage,
			    t2.paymenttype,
			    t1.receiptmodestatus,
			    t1.actfinreceipt,
			    t2.favournumber
			   FROM finreceiptheader t1
			     LEFT JOIN finreceiptdetail t2 ON t1.receiptid = t2.receiptid
			     LEFT JOIN financemain t3 ON t1.reference = t3.finreference
			     LEFT JOIN customers t4 ON t3.custid = t4.custid
			     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
			     LEFT JOIN partnerbanks t6 ON t6.partnerbankid = t2.fundingac
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM finreceiptheader_temp
			          WHERE finreceiptheader_temp.receiptid = t1.receiptid))
		</createView>
	</changeSet>

	<changeSet id="115" author="vijaya.a">
		<createView viewName="RECEIPTDETAILS_TVIEW"
			replaceIfExists="true">
			SELECT t4.custcif,
			    t1.reference,
			    t3.fintype,
			    t1.receiptid,
			    t1.receiptdate,
			    t1.receiptamount,
			    t2.depositdate,
			    t2.bankcode AS depositbank,
			        CASE
			            WHEN t1.receiptpurpose = 'EarlyPayment' THEN 'Partial Payment'
			            ELSE t1.receiptpurpose
			        END AS receiptpurpose,
			    t1.receiptmode,
			    t1.bouncedate AS canceldate,
			    t2.valuedate,
			    t2.payagainstid,
			    t1.bouncedate,
			    t1.realizationdate,
			    t1.cancelreason,
			    t3.closingstatus,
			    t3.finbranch,
			    t3.fincurrassetvalue,
			    t3.productcategory,
			    t6.partnerbankcode,
			    t2.transactionref,
			    t2.fundingac,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t5.roledesc AS lovdescrequeststage,
			    t2.paymenttype,
			    t1.receiptmodestatus,
			    t1.actfinreceipt,
			    t2.favourNumber
			   FROM finreceiptheader_temp t1
			     LEFT JOIN finreceiptdetail_temp t2 ON t1.receiptid = t2.receiptid
			     LEFT JOIN financemain t3 ON t1.reference = t3.finreference
			     LEFT JOIN customers t4 ON t3.custid = t4.custid
			     JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
			     LEFT JOIN partnerbanks t6 ON t6.partnerbankid = t2.fundingac
		</createView>
	</changeSet>

	<changeSet id="116.0" author="meena.a">
		<sql>
			<![CDATA[
				delete from SMTPARAMETERS where sysparmcode='ALLOW_INCLUDE_FROMDATE_ADD_RATE_CHANGE';
			   	INSERT INTO SMTPARAMETERS VALUES ('ALLOW_INCLUDE_FROMDATE_ADD_RATE_CHANGE','Add rate change allow after from date','String',1,'N',1,0,null,null,'Allow Base Rate Interest Review FrqCode Value Req',3,1000,current_Timestamp,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="117" author="Varaprasad.K">
		<addColumn tableName="FINANCEMAIN">
			<column name="AppliedLoanAmt" type="DECIMAL(18,0)" />
		</addColumn>
	</changeSet>

	<changeSet id="118" author="Varaprasad.K">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="AppliedLoanAmt" type="DECIMAL(18,0)" />
		</addColumn>
	</changeSet>
	<changeSet id="119" author="Varaprasad.K">
		<addColumn tableName="WIFFINANCEMAIN">
			<column name="AppliedLoanAmt" type="DECIMAL(18,0)" />
		</addColumn>
	</changeSet>

	<changeSet id="120" author="Varaprasad.K">
		<addColumn tableName="WIFFINANCEMAIN_TEMP">
			<column name="AppliedLoanAmt" type="DECIMAL(18,0)" />
		</addColumn>
	</changeSet>

	<changeSet id="121" author="Varaprasad.K">
		<sql>
			<![CDATA[
				UPDATE FINANCEMAIN      Set AppliedLoanAmt = 0;
				UPDATE FINANCEMAIN_Temp Set AppliedLoanAmt = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="122" author="Varaprasad.K" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FINANCEMAIN      ADD CONSTRAINT DF_FINANCEMAIN_APPLIEDLOANAMT      DEFAULT 0 FOR AppliedLoanAmt;
				ALTER TABLE FINANCEMAIN_TEMP ADD CONSTRAINT DF_FINANCEMAIN_TEMP_APPLIEDLOANAMT DEFAULT 0 FOR AppliedLoanAmt;
			]]>
		</sql>
	</changeSet>

	<changeSet id="123" author="Varaprasad.K" dbms="postgresql, oracle">
		<addDefaultValue columnName="AppliedLoanAmt"
			tableName="FINANCEMAIN" defaultValue="0" />
		<addDefaultValue columnName="AppliedLoanAmt"
			tableName="FINANCEMAIN_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="124" author="Varaprasad.K">
		<addColumn tableName="FINANCEMAIN_PA">
			<column name="AppliedLoanAmt" type="DECIMAL(18,0)" />
		</addColumn>
	</changeSet>

	<changeSet id="125" author="Varaprasad.K">
		<sql>
			<![CDATA[
				UPDATE FINANCEMAIN_PA Set AppliedLoanAmt = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="126" author="Varaprasad.K" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FINANCEMAIN_PA ADD CONSTRAINT DF_FINANCEMAIN_PA_AppliedLoanAmt DEFAULT 0 FOR AppliedLoanAmt;
			]]>
		</sql>
	</changeSet>

	<changeSet id="127" author="Varaprasad.K" dbms="postgresql, oracle">
		<addDefaultValue columnName="AppliedLoanAmt"
			tableName="FINANCEMAIN_PA" defaultValue="0" />
	</changeSet>

	<changeSet id="128" author="Varaprasdd.K">
		<sql>
			<![CDATA[
				UPDATE WIFFINANCEMAIN Set AppliedLoanAmt = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="129" author="Varaprasdd.K" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE WIFFINANCEMAIN ADD CONSTRAINT DF_WIFFINANCEMAIN_APPLIEDLOANAMT DEFAULT 0 FOR AppliedLoanAmt;
				
			]]>
		</sql>
	</changeSet>

	<changeSet id="130" author="Varaprasdd.K" dbms="postgresql, oracle">
		<addDefaultValue columnName="AppliedLoanAmt"
			tableName="WIFFINANCEMAIN" defaultValue="0" />
		<addDefaultValue columnName="AppliedLoanAmt"
			tableName="WIFFINANCEMAIN_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="131_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="131" author="Varaprasad.K">
		<createView viewName="FINANCEMAIN_VIEW" replaceIfExists="true">
			SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc AS lovdescfintypename,
			t7.finmaxamount AS lovdescfinmaxamt,
			t7.finminamount AS lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment AS lovdescfinalwdeferment,
			t7.finisdwpayrequired AS lovdescdwnpayreq,
			t7.finmaxdifferment AS lovdescfinmaxdifferment,
			t12.branchdesc AS lovdescfinbranchname,
			t12.branchprovince AS finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd AS lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc AS lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon AS lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision AS lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc AS lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername AS lovdescaccountsofficer,
			t28.dealercity AS lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc AS dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc AS referraliddesc,
			t1.dmacode,
			t34.rofficerdesc AS dmacodedesc,
			t1.salesdepartment,
			t35.gendeptdesc AS salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode AS lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue AS loveligibilitymethod,
			t38.valuedesc AS lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc AS employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername AS connectorcode,
			t40.dealercity AS connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel AS finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code AS businessverticalcode,
			bv.description AS businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanreq,
			t1.vancode,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.sanbsdschdle,
			t1.promotionseqid,
			t1.svamount,
			t1.cbamount,
			t1.appliedLoanAmt
		   FROM financemain_temp t1
			 JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			 LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			 LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			 LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			 LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			 LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			 LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			 LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			 LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			 LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			 LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			 LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			 LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			 LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			 LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			 LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
		UNION ALL
		 SELECT t1.finreference,
			t1.investmentref,
			t1.numberofterms,
			t1.grcperiodenddate,
			t1.allowgrcperiod,
			t1.gracebaserate,
			t1.gracespecialrate,
			t1.grcpftrate,
			t1.grcpftfrq,
			t1.nextgrcpftdate,
			t1.allowgrcpftrvw,
			t1.grcpftrvwfrq,
			t1.nextgrcpftrvwdate,
			t1.allowgrccpz,
			t1.grccpzfrq,
			t1.nextgrccpzdate,
			t1.repaybaserate,
			t1.repayspecialrate,
			t1.repayprofitrate,
			t1.repayfrq,
			t1.nextrepaydate,
			t1.repaypftfrq,
			t1.nextrepaypftdate,
			t1.allowrepayrvw,
			t1.repayrvwfrq,
			t1.nextrepayrvwdate,
			t1.allowrepaycpz,
			t1.repaycpzfrq,
			t1.nextrepaycpzdate,
			t1.maturitydate,
			t1.cpzatgraceend,
			t1.downpayment,
			t1.graceflatamount,
			t1.reqrepayamount,
			t1.totalprofit,
			t1.totalcpz,
			t1.totalgrosspft,
			t1.totalgrossgrcpft,
			t1.totalgracepft,
			t1.totalgracecpz,
			t1.grcratebasis,
			t1.repayratebasis,
			t1.fintype,
			t1.finremarks,
			t1.finccy,
			t1.schedulemethod,
			t1.profitdaysbasis,
			t1.reqmaturity,
			t1.calterms,
			t1.calmaturity,
			t1.firstrepay,
			t1.lastrepay,
			t1.finstartdate,
			t1.finamount,
			t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
			t1.finrepaymentamount,
			t1.custid,
			t1.defferments,
			t1.plandefercount,
			t1.finbranch,
			t1.finsourceid,
			t1.alloweddefrpychange,
			t1.availeddefrpychange,
			t1.alloweddeffrqchange,
			t1.availeddeffrqchange,
			t1.recaltype,
			t1.finassetvalue,
			t1.disbaccountid,
			t1.repayaccountid,
			t1.finisactive,
			t1.limitvalid,
			t1.overridelimit,
			t1.securitydeposit,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t7.fintypedesc AS lovdescfintypename,
			t7.finmaxamount AS lovdescfinmaxamt,
			t7.finminamount AS lovdescfinminamount,
			t1.mindownpayperc,
			t7.finisalwdifferment AS lovdescfinalwdeferment,
			t7.finisdwpayrequired AS lovdescdwnpayreq,
			t7.finmaxdifferment AS lovdescfinmaxdifferment,
			t12.branchdesc AS lovdescfinbranchname,
			t12.branchprovince AS finbranchprovincecode,
			t1.lastrepaydate,
			t1.lastrepaypftdate,
			t1.lastrepayrvwdate,
			t1.lastrepaycpzdate,
			t1.allowgrcrepay,
			t1.grcschdmthd,
			t1.grcmargin,
			t1.repaymargin,
			t1.fincurrassetvalue,
			t1.fincommitmentref,
			t1.finlimitref,
			t1.depreciationfrq,
			t1.fincontractdate,
			t1.nextdepdate,
			t1.lastdepdate,
			t1.finaccount,
			t1.fincustpftaccount,
			t17.acrtilllbd AS lovdescaccruedtilllbd,
			t7.finrvwrateapplfor,
			t1.totalrepayamt,
			t1.closingstatus,
			t1.finapproveddate,
			t1.feechargeamt,
			t1.blacklisted,
			t1.finrepaypftonfrq,
			t1.anualizedpercrate,
			t1.effectiverateofreturn,
			t1.migratedfinance,
			t1.schedulemaintained,
			t1.scheduleregenerated,
			t1.finpurpose,
			t39.loanpurposedesc AS lovdescfinpurposename,
			t1.finstatus,
			t1.finstsreason,
			t1.initiateuser,
			t1.bankname,
			t1.iban,
			t1.accounttype,
			t1.ddareferenceno,
			t7.finscheduleon AS lovdescfinscheduleon,
			t1.custdsr,
			t1.jointaccount,
			t1.jointcustid,
			t1.downpaybank,
			t1.downpaysupl,
			t1.downpayaccount,
			t1.securitycollateral,
			t1.approved,
			t1.discrepancy,
			t1.limitapproved,
			t1.graceterms,
			t7.findivision AS lovdescfindivision,
			t1.rcdmaintainsts,
			t1.finrepaymethod,
			t1.grcprofitdaysbasis,
			t1.stepfinance,
			t1.steptype,
			t1.steppolicy,
			t1.alwmanualsteps,
			t1.noofsteps,
			t1.linkedfinref,
			t1.nextuserid,
			t1.priority,
			t24.policydesc AS lovdescsteppolicyname,
			t1.grcminrate,
			t1.grcmaxrate,
			t1.rpyminrate,
			t1.rpymaxrate,
			t1.deviationapproval,
			t1.manualschedule,
			t1.takeoverfinance,
			t1.grcadvbaserate,
			t1.grcadvmargin,
			t1.grcadvpftrate,
			t1.rpyadvbaserate,
			t1.rpyadvmargin,
			t1.rpyadvpftrate,
			t1.supplementrent,
			t1.increasedcost,
			t1.creditinsamt,
			t1.rolloverfrq,
			t1.nextrolloverdate,
			t27.custstsdescription,
			t1.shariastatus,
			t1.initiatedate,
			t1.finpreapprovedref,
			t1.mmaid,
			t1.accountsofficer,
			t1.feeaccountid,
			t1.fincancelac,
			t28.dealername AS lovdescaccountsofficer,
			t28.dealercity AS lovdescsourcecity,
			t1.dsacode,
			t30.rofficerdesc AS dsacodedesc,
			t1.tdsapplicable,
			t1.mandateid,
			t1.droplinefrq,
			t1.firstdroplinedate,
			t1.pftservicingodlimit,
			t1.insuranceamt,
			t1.deductinsdisb,
			t1.alwbpi,
			t1.bpitreatment,
			t1.planemihalw,
			t1.planemihmethod,
			t1.planemihmaxperyear,
			t1.planemihmax,
			t1.planemihlockperiod,
			t1.planemicpz,
			t1.calroundingmode,
			t1.alwmultidisb,
			t1.applicationno,
			t1.referralid,
			t33.rofficerdesc AS referraliddesc,
			t1.dmacode,
			t34.rofficerdesc AS dmacodedesc,
			t1.salesdepartment,
			t35.gendeptdesc AS salesdepartmentdesc,
			t1.quickdisb,
			t1.wifreference,
			t1.unplanemihlockperiod,
			t1.unplanemicpz,
			t1.reagecpz,
			t1.maxunplannedemi,
			t1.maxreageholidays,
			t1.availedunplanemi,
			t1.availedreageh,
			t1.bpiamount,
			t1.deductfeedisb,
			t1.rvwrateapplfor,
			t1.schcalonrvw,
			t1.pastduepftcalmthd,
			t1.pastduepftmargin,
			t1.droppingmethod,
			t1.ratechganyday,
			t1.promotioncode,
			t1.restructureloan,
			t1.oldfinreference,
			t1.reagebucket,
			t1.fincategory,
			t1.productcategory,
			t1.roundingtarget,
			t36.entitycode AS lovdescentitycode,
			t1.eligibilitymethod,
			t38.fieldcodevalue AS loveligibilitymethod,
			t38.valuedesc AS lovdesceligibilitymethod,
			t1.employeename,
			t37.rofficerdesc AS employeenamedesc,
			t1.samplingrequired,
			t1.legalrequired,
			t1.grcmaxamount,
			t1.connector,
			t40.dealername AS connectorcode,
			t40.dealercity AS connectordesc,
			t1.advanceemi,
			t1.advemiterms,
			t1.bpipftdaysbasis,
			t1.fixedratetenor,
			t1.fixedtenorrate,
			t12.branchtel AS finbranchcontact,
			t1.processattributes,
			t1.businessvertical,
			bv.code AS businessverticalcode,
			bv.description AS businessverticaldesc,
			t1.grcadvtype,
			t1.grcadvterms,
			t1.advtype,
			t1.advterms,
			t1.advstage,
			t1.tdspercentage,
			t1.tdsstartdate,
			t1.tdsenddate,
			t1.tdslimitamt,
			t1.vanreq,
			t1.vancode,
			t1.allowdrawingpower,
			t1.allowrevolving,
			t1.sanbsdschdle,
			t1.promotionseqid,
			t1.svamount,
			t1.cbamount,
			t1.appliedLoanAmt
		   FROM financemain t1
			 JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
			 LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
			 LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
			 LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
			 LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
			 LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
			 LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
			 LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
			 LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
			 LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
			 LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
			 LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
			 LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
			 LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
			 LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
			 LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
  WHERE NOT (EXISTS ( SELECT 1
           FROM financemain_temp
          WHERE financemain_temp.finreference = t1.finreference))

	</createView>
	</changeSet>

	<changeSet id="131_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="132_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="132" author="Varaprasad.K">
		<createView viewName="FINANCEMAIN_TVIEW" replaceIfExists="true">
			SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.gendeptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
	t1.appliedLoanAmt
   FROM financemain_temp t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
		</createView>
	</changeSet>

	<changeSet id="132_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="133_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="133" author="Varaprasad.K">
		<createView viewName="FINANCEMAIN_AVIEW" replaceIfExists="true">
			SELECT t1.finreference,
    t1.investmentref,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgrossgrcpft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finamount + t1.feechargeamt - t1.downpayment AS lovdescfinancingamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t1.recaltype,
    t1.finassetvalue,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.finisactive,
    t1.limitvalid,
    t1.overridelimit,
    t1.securitydeposit,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t7.fintypedesc AS lovdescfintypename,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t1.mindownpayperc,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t12.branchdesc AS lovdescfinbranchname,
    t12.branchprovince AS finbranchprovincecode,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.grcmargin,
    t1.repaymargin,
    t1.fincurrassetvalue,
    t1.fincommitmentref,
    t1.finlimitref,
    t1.depreciationfrq,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t17.acrtilllbd AS lovdescaccruedtilllbd,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.feechargeamt,
    t1.blacklisted,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.migratedfinance,
    t1.schedulemaintained,
    t1.scheduleregenerated,
    t1.finpurpose,
    t39.loanpurposedesc AS lovdescfinpurposename,
    t1.finstatus,
    t1.finstsreason,
    t1.initiateuser,
    t1.bankname,
    t1.iban,
    t1.accounttype,
    t1.ddareferenceno,
    t7.finscheduleon AS lovdescfinscheduleon,
    t1.custdsr,
    t1.jointaccount,
    t1.jointcustid,
    t1.downpaybank,
    t1.downpaysupl,
    t1.downpayaccount,
    t1.securitycollateral,
    t1.approved,
    t1.discrepancy,
    t1.limitapproved,
    t1.graceterms,
    t7.findivision AS lovdescfindivision,
    t1.rcdmaintainsts,
    t1.finrepaymethod,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t1.nextuserid,
    t1.priority,
    t24.policydesc AS lovdescsteppolicyname,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.deviationapproval,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.creditinsamt,
    t1.rolloverfrq,
    t1.nextrolloverdate,
    t27.custstsdescription,
    t1.shariastatus,
    t1.initiatedate,
    t1.finpreapprovedref,
    t1.mmaid,
    t1.accountsofficer,
    t1.feeaccountid,
    t1.fincancelac,
    t28.dealername AS lovdescaccountsofficer,
    t28.dealercity AS lovdescsourcecity,
    t1.dsacode,
    t30.rofficerdesc AS dsacodedesc,
    t1.tdsapplicable,
    t1.mandateid,
    t1.droplinefrq,
    t1.firstdroplinedate,
    t1.pftservicingodlimit,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.applicationno,
    t1.referralid,
    t33.rofficerdesc AS referraliddesc,
    t1.dmacode,
    t34.rofficerdesc AS dmacodedesc,
    t1.salesdepartment,
    t35.gendeptdesc AS salesdepartmentdesc,
    t1.quickdisb,
    t1.wifreference,
    t1.unplanemihlockperiod,
    t1.unplanemicpz,
    t1.reagecpz,
    t1.maxunplannedemi,
    t1.maxreageholidays,
    t1.availedunplanemi,
    t1.availedreageh,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.promotioncode,
    t1.restructureloan,
    t1.oldfinreference,
    t1.reagebucket,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t36.entitycode AS lovdescentitycode,
    t1.eligibilitymethod,
    t38.fieldcodevalue AS loveligibilitymethod,
    t38.valuedesc AS lovdesceligibilitymethod,
    t1.employeename,
    t37.rofficerdesc AS employeenamedesc,
    t1.samplingrequired,
    t1.legalrequired,
    t1.grcmaxamount,
    t1.connector,
    t40.dealername AS connectorcode,
    t40.dealercity AS connectordesc,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedratetenor,
    t1.fixedtenorrate,
    t12.branchtel AS finbranchcontact,
    t1.processattributes,
    t1.businessvertical,
    bv.code AS businessverticalcode,
    bv.description AS businessverticaldesc,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.tdspercentage,
    t1.tdsstartdate,
    t1.tdsenddate,
    t1.tdslimitamt,
    t1.vanreq,
    t1.vancode,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.sanbsdschdle,
    t1.promotionseqid,
    t1.svamount,
    t1.cbamount,
	t1.appliedLoanAmt
   FROM financemain t1
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t12 ON t1.finbranch = t12.branchcode
     LEFT JOIN finpftdetails t17 ON t17.finreference = t1.finreference
     LEFT JOIN steppolicyheader t24 ON t1.steppolicy = t24.policycode
     LEFT JOIN bmtcuststatuscodes t27 ON t1.finstatus = t27.custstscode
     LEFT JOIN amtvehicledealer t28 ON t1.accountsofficer = t28.dealerid
     LEFT JOIN relationshipofficers t30 ON t1.dsacode = t30.rofficercode
     LEFT JOIN relationshipofficers t33 ON t1.referralid = t33.rofficercode
     LEFT JOIN relationshipofficers t34 ON t1.dmacode = t34.rofficercode
     LEFT JOIN rmtgendepartments t35 ON t1.salesdepartment = t35.gendepartment
     LEFT JOIN smtdivisiondetail t36 ON t7.findivision = t36.divisioncode
     LEFT JOIN relationshipofficers t37 ON t1.employeename = t37.rofficercode
     LEFT JOIN rmtlovfielddetail t38 ON t1.eligibilitymethod = t38.fieldcodeid AND t38.fieldcode = 'ELGMETHOD'
     LEFT JOIN loanpurposes t39 ON t1.finpurpose = t39.loanpurposecode
     LEFT JOIN amtvehicledealer t40 ON t1.connector = t40.dealerid
     LEFT JOIN business_vertical bv ON bv.id = t1.businessvertical
		</createView>
	</changeSet>

	<changeSet id="133_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="134_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="134" author="Varaprasad.K">
		<createView viewName="wiffinancemain_view" replaceIfExists="true">
			SELECT t1.finreference,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t15.custcif AS lovdesccustcif,
    t7.fintypedesc AS lovdescfintypename,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t1.mindownpayperc,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t1.recaltype,
    t1.finassetvalue,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.repaymargin,
    t1.grcmargin,
    t1.depreciationfrq,
    t1.fincommitmentref,
    t1.fincurrassetvalue,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.downpaybank,
    t1.downpaysupl,
    t7.findivision AS lovdescfindivisionname,
    t1.graceterms,
    t14.facilitytype,
    t15.custshrtname AS lovdesccustshrtname,
    t16.branchdesc AS lovdescfinbranchname,
    t1.totalgrossgrcpft,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t7.product AS lovdescfinproduct,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.feeaccountid,
    t1.tdsapplicable,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.feechargeamt,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t1.grcmaxamount,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedtenorrate,
    t1.fixedratetenor,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.appliedLoanAmt
   FROM wiffinancemain_temp t1
     LEFT JOIN wifindicativetermdetail_temp t14 ON t14.finreference = t1.finreference
     LEFT JOIN customers t15 ON t15.custid = t1.custid
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t16 ON t1.finbranch = t16.branchcode
UNION ALL
 SELECT t1.finreference,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t15.custcif AS lovdesccustcif,
    t7.fintypedesc AS lovdescfintypename,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t1.mindownpayperc,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t1.recaltype,
    t1.finassetvalue,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.repaymargin,
    t1.grcmargin,
    t1.depreciationfrq,
    t1.fincommitmentref,
    t1.fincurrassetvalue,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.downpaybank,
    t1.downpaysupl,
    t7.findivision AS lovdescfindivisionname,
    t1.graceterms,
    t14.facilitytype,
    t15.custshrtname AS lovdesccustshrtname,
    t16.branchdesc AS lovdescfinbranchname,
    t1.totalgrossgrcpft,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t7.product AS lovdescfinproduct,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.feeaccountid,
    t1.tdsapplicable,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.feechargeamt,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.fincategory,
    t1.productcategory,
    t1.roundingtarget,
    t1.grcmaxamount,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis,
    t1.fixedtenorrate,
    t1.fixedratetenor,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.appliedLoanAmt
   FROM wiffinancemain t1
     LEFT JOIN wifindicativetermdetail_temp t14 ON t14.finreference = t1.finreference
     LEFT JOIN customers t15 ON t15.custid = t1.custid
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t16 ON t1.finbranch = t16.branchcode
  WHERE NOT (EXISTS ( SELECT 1
           FROM wiffinancemain_temp
          WHERE wiffinancemain_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="134_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="135_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="135.1" author="Varaprasad.K">
		<createView viewName="wiffinancemain_aview"
			replaceIfExists="true">
			SELECT t1.finreference,
    t1.numberofterms,
    t1.grcperiodenddate,
    t1.allowgrcperiod,
    t1.gracebaserate,
    t1.gracespecialrate,
    t1.grcpftrate,
    t1.grcpftfrq,
    t1.nextgrcpftdate,
    t1.allowgrcpftrvw,
    t1.grcpftrvwfrq,
    t1.nextgrcpftrvwdate,
    t1.allowgrccpz,
    t1.grccpzfrq,
    t1.nextgrccpzdate,
    t1.repaybaserate,
    t1.repayspecialrate,
    t1.repayprofitrate,
    t1.repayfrq,
    t1.nextrepaydate,
    t1.repaypftfrq,
    t1.nextrepaypftdate,
    t1.allowrepayrvw,
    t1.repayrvwfrq,
    t1.nextrepayrvwdate,
    t1.allowrepaycpz,
    t1.repaycpzfrq,
    t1.nextrepaycpzdate,
    t1.maturitydate,
    t1.cpzatgraceend,
    t1.downpayment,
    t1.graceflatamount,
    t1.reqrepayamount,
    t1.totalprofit,
    t1.totalcpz,
    t1.totalgrosspft,
    t1.totalgracepft,
    t1.totalgracecpz,
    t1.grcratebasis,
    t1.repayratebasis,
    t1.fintype,
    t1.finremarks,
    t1.finccy,
    t1.schedulemethod,
    t1.profitdaysbasis,
    t1.reqmaturity,
    t1.calterms,
    t1.calmaturity,
    t1.firstrepay,
    t1.lastrepay,
    t1.finstartdate,
    t1.finamount,
    t1.finrepaymentamount,
    t1.custid,
    t1.defferments,
    t1.plandefercount,
    t1.finisactive,
    t1.version,
    t1.lastmntby,
    t1.lastmnton,
    t1.recordstatus,
    t1.rolecode,
    t1.nextrolecode,
    t1.taskid,
    t1.nexttaskid,
    t1.recordtype,
    t1.workflowid,
    t15.custcif AS lovdesccustcif,
    t7.fintypedesc AS lovdescfintypename,
    t1.finbranch,
    t1.finsourceid,
    t1.alloweddefrpychange,
    t1.availeddefrpychange,
    t1.alloweddeffrqchange,
    t1.availeddeffrqchange,
    t7.finmaxamount AS lovdescfinmaxamt,
    t7.finminamount AS lovdescfinminamount,
    t7.finisalwdifferment AS lovdescfinalwdeferment,
    t1.mindownpayperc,
    t7.finisdwpayrequired AS lovdescdwnpayreq,
    t1.recaltype,
    t1.finassetvalue,
    t7.finmaxdifferment AS lovdescfinmaxdifferment,
    t1.lastrepaydate,
    t1.lastrepaypftdate,
    t1.lastrepayrvwdate,
    t1.lastrepaycpzdate,
    t1.disbaccountid,
    t1.repayaccountid,
    t1.allowgrcrepay,
    t1.grcschdmthd,
    t1.repaymargin,
    t1.grcmargin,
    t1.depreciationfrq,
    t1.fincommitmentref,
    t1.fincurrassetvalue,
    t1.fincontractdate,
    t1.nextdepdate,
    t1.lastdepdate,
    t1.finaccount,
    t1.fincustpftaccount,
    t7.finrvwrateapplfor,
    t1.totalrepayamt,
    t1.closingstatus,
    t1.finapproveddate,
    t1.finrepaypftonfrq,
    t1.anualizedpercrate,
    t1.effectiverateofreturn,
    t1.downpaybank,
    t1.downpaysupl,
    t7.findivision AS lovdescfindivisionname,
    t1.graceterms,
    t14.facilitytype,
    t15.custshrtname AS lovdesccustshrtname,
    t16.branchdesc AS lovdescfinbranchname,
    t1.totalgrossgrcpft,
    t1.grcprofitdaysbasis,
    t1.stepfinance,
    t1.steptype,
    t1.steppolicy,
    t1.alwmanualsteps,
    t1.noofsteps,
    t1.linkedfinref,
    t7.product AS lovdescfinproduct,
    t1.grcminrate,
    t1.grcmaxrate,
    t1.rpyminrate,
    t1.rpymaxrate,
    t1.manualschedule,
    t1.takeoverfinance,
    t1.grcadvbaserate,
    t1.grcadvmargin,
    t1.grcadvpftrate,
    t1.rpyadvbaserate,
    t1.rpyadvmargin,
    t1.rpyadvpftrate,
    t1.supplementrent,
    t1.increasedcost,
    t1.feeaccountid,
    t1.tdsapplicable,
    t1.insuranceamt,
    t1.deductinsdisb,
    t1.alwbpi,
    t1.bpitreatment,
    t1.planemihalw,
    t1.planemihmethod,
    t1.planemihmaxperyear,
    t1.planemihmax,
    t1.planemihlockperiod,
    t1.planemicpz,
    t1.calroundingmode,
    t1.alwmultidisb,
    t1.bpiamount,
    t1.deductfeedisb,
    t1.feechargeamt,
    t1.rvwrateapplfor,
    t1.schcalonrvw,
    t1.pastduepftcalmthd,
    t1.pastduepftmargin,
    t1.droppingmethod,
    t1.ratechganyday,
    t1.roundingtarget,
    t1.grcmaxamount,
    t1.advanceemi,
    t1.advemiterms,
    t1.bpipftdaysbasis AS bpiratebasis,
    t1.grcadvtype,
    t1.grcadvterms,
    t1.advtype,
    t1.advterms,
    t1.advstage,
    t1.allowdrawingpower,
    t1.allowrevolving,
    t1.appliedLoanAmt
   FROM wiffinancemain t1
     LEFT JOIN wifindicativetermdetail_temp t14 ON t14.finreference = t1.finreference
     LEFT JOIN customers t15 ON t15.custid = t1.custid
     JOIN rmtfinancetypes t7 ON t1.fintype = t7.fintype
     LEFT JOIN rmtbranches t16 ON t1.finbranch = t16.branchcode
		</createView>
	</changeSet>

	<changeSet id="135_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinancemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="136" author="Varaprasad.K">
		<sql>
            <![CDATA[
                    Delete from secrights where rightname='FinanceMainDialog_AppliedLoanAmt';
                    insert into secrights values ((select max(rightid)+1 from secrights), 3, 'FinanceMainDialog_AppliedLoanAmt','FinanceMainDialog', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
                   
            ]]>
		</sql>
	</changeSet>

	<changeSet id="137" author="satyanarayana.g">
		<createView viewName="RECEIPTDETAILS_VIEW" replaceIfExists="true">
			SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE ,
					T1.RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER
					FROM FINRECEIPTHEADER_TEMP T1
					LEFT JOIN FINRECEIPTDETAIL_TEMP T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					INNER JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					UNION ALL
					SELECT T4.CUSTCIF,
					T1.REFERENCE,
					T3.FINTYPE,
					T1.RECEIPTID,
					T1.RECEIPTDATE,
					T1.RECEIPTAMOUNT,
					T2.DEPOSITDATE,
					T2.BANKCODE DEPOSITBANK ,
					(
					CASE
					WHEN T1.RECEIPTPURPOSE IN ('EarlyPayment')
					THEN 'Partial Payment'
					ELSE T1.RECEIPTPURPOSE
					END) RECEIPTPURPOSE,
					T1.RECEIPTMODE,
					T1.BOUNCEDATE CANCELDATE,
					T2.VALUEDATE,
					T2.PAYAGAINSTID,
					T1.BOUNCEDATE,
					T1.REALIZATIONDATE,
					T1.CANCELREASON,
					T3.CLOSINGSTATUS,
					T3.FINBRANCH,
					T3.FINCURRASSETVALUE,
					T3.PRODUCTCATEGORY,
					T6.PARTNERBANKCODE,
					T2.TRANSACTIONREF,
					T2.FUNDINGAC,
					T1.VERSION ,
					T1.LASTMNTBY,
					T1.LASTMNTON,
					T1.RECORDSTATUS,
					T1.ROLECODE,
					T1.NEXTROLECODE,
					T1.TASKID,
					T1.NEXTTASKID,
					T1.RECORDTYPE,
					T1.WORKFLOWID,
					T5.ROLEDESC LOVDESCREQUESTSTAGE,
					T2.PAYMENTTYPE,
					T1.RECEIPTMODESTATUS,
					T1.ACTFINRECEIPT,
					T2.FAVOURNUMBER
					FROM FINRECEIPTHEADER T1
					LEFT JOIN FINRECEIPTDETAIL T2 ON T1.RECEIPTID = T2.RECEIPTID
					LEFT JOIN FINANCEMAIN T3 ON T1.REFERENCE = T3.FINREFERENCE
					LEFT JOIN CUSTOMERS T4 ON T3.CUSTID = T4.CUSTID
					LEFT JOIN SECROLES T5 ON T1.NEXTROLECODE = T5.ROLECD
					LEFT JOIN PARTNERBANKS T6 ON T6.PARTNERBANKID = T2.FUNDINGAC
					WHERE NOT EXISTS
					(SELECT 1 FROM FINRECEIPTHEADER_TEMP WHERE RECEIPTID = T1.RECEIPTID
					)
		</createView>
	</changeSet>

	<changeSet id="138" author="satyanarayana.g">
		<addColumn tableName="RMTFinanceTypes">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="139" author="satyanarayana.g">
		<addColumn tableName="RMTFinanceTypes_temp">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>
	<changeSet id="140" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE RMTFinanceTypes Set FinIsRateRvwAtGrcEnd = 0;
				UPDATE RMTFinanceTypes_Temp Set FinIsRateRvwAtGrcEnd = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="141" author="satyanarayana.g" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE RMTFINANCETYPES ADD CONSTRAINT DF_RMTFINANCETYPES_FINRTRVGRSE DEFAULT 0 FOR FINISRATERVWATGRCEND;
				ALTER TABLE RMTFINANCETYPES_TEMP ADD CONSTRAINT DF_RMTFINANCETYPES_TEMP_FINRTRVGRSE DEFAULT 0 FOR FINISRATERVWATGRCEND;
			]]>
		</sql>
	</changeSet>

	<changeSet id="142" author="satyanarayana.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="FinIsRateRvwAtGrcEnd"
			tableName="RMTFinanceTypes" defaultValue="0" />
		<addDefaultValue columnName="FinIsRateRvwAtGrcEnd"
			tableName="RMTFinanceTypes_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="143_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="143" author="satyanarayana.g">
		<createView viewName="RMTFINANCETYPES_AVIEW"
			replaceIfExists="true">
			SELECT T1.FINTYPE,
					  T1.FINCATEGORY,
					  T1.FINTYPEDESC,
					  T1.FINCCY,
					  T1.FINDAYSCALTYPE,
					  T1.FINACTYPE,
					  T1.FINCONTINGENTACTYPE,
					  T1.FINISGENREF,
					  T1.FINMAXAMOUNT,
					  T1.FINMINAMOUNT,
					  T1.FINISOPENNEWFINAC,
					  T1.FINDFTSTMTFRQ,
					  T1.FINISALWMD,
					  T1.FINSCHDMTHD,
					  T1.FINISALWGRACE,
					  T1.FINHISTRETENSION,
					  T1.EQUALREPAYMENT,
					  T1.FINRATETYPE,
					  T1.FINBASERATE,
					  T1.FINSPLRATE,
					  T1.FININTRATE,
					  T1.FINMINRATE,
					  T1.FINMAXRATE,
					  T1.FINDFTINTFRQ,
					  T1.FINISINTCPZ,
					  T1.FINCPZFRQ,
					  T1.FINISRVWALW,
					  T1.FINRVWFRQ,
					  T1.FINGRCRATETYPE,
					  T1.FINGRCBASERATE,
					  T1.FINGRCSPLRATE,
					  T1.FINGRCINTRATE,
					  T1.FINGRCMINRATE,
					  T1.FINGRCMAXRATE,
					  T1.FINGRCDFTINTFRQ,
					  T1.FINGRCISINTCPZ,
					  T1.FINGRCCPZFRQ,
					  T1.FINGRCISRVWALW,
					  T1.FINGRCRVWFRQ,
					  T1.FINMINTERM,
					  T1.FINMAXTERM,
					  T1.FINDFTTERMS,
					  T1.FINRPYFRQ,
					  T1.FINREPAYMETHOD,
					  T1.FINISALWPARTIALRPY,
					  T1.FINISALWDIFFERMENT,
					  T1.FINMAXDIFFERMENT,
					  T1.FINISALWEARLYRPY,
					  T1.FINISALWEARLYSETTLE,
					  T1.FINODRPYTRIES,
					  T1.FINEARLYPAYRULE,
					  T1.FINEARLYSETTLERULE,
					  T1.FINDEPOSITRESTRICTEDTO,
					  T1.FINAEBUYORINCEPTION,
					  T1.FINAESELLORMATURITY,
					  T1.FINISACTIVE,
					  T1.VERSION,
					  T1.LASTMNTBY,
					  T1.LASTMNTON,
					  T1.RECORDSTATUS,
					  T1.ROLECODE,
					  T1.NEXTROLECODE,
					  T1.TASKID,
					  T1.NEXTTASKID,
					  T1.RECORDTYPE,
					  T1.WORKFLOWID,
					  T1.STEPFINANCE,
					  T1.STEPPINGMANDATORY,
					  T1.ALWMANUALSTEPS,
					  T1.ALWDSTEPPOLICIES,
					  T1.DFTSTEPPOLICY,
					  T4.ACTYPEDESC  LOVDESCFINCONTINGENTACTYPENAME,
					  T5.ACTYPEDESC  LOVDESCFINACTYPENAME,
					  T1.FINISDWPAYREQUIRED,
					  T1.FINRVWRATEAPPLFOR,
					  T1.FINALWRATECHANGEANYDATE,
					  T1.FINISINTCPZATGRCEND,
					  T1.FINELGRULECODE,
					  T1.LIMITELGRULECODE,
					  T1.FINSCHCALCODEONRVW,
					  T1.ALWPLANDEFERMENT,
					  T1.PLANDEFERCOUNT,
					  T1.FINASSETTYPE,
					  T1.PFTPAYACTYPE,
					  T1.FINISOPENPFTPAYACC,
					  T31.ACTYPEDESC  LOVDESCPFTPAYACTYPENAME,
					  T1.FINISALWGRCREPAY,
					  T1.FINGRCSCHDMTHD,
					  T1.FINGRCMARGIN,
					  T1.FINMARGIN,
					  T1.FINSCHEDULEON,
					  T1.FINGRCSCHEDULEON,
					  T1.FINCOMMITMENTREQ,
					  T1.FINCOLLATERALREQ,
					  T1.FINDEPRECIATIONREQ,
					  T1.FINDEPRECIATIONFRQ,
					  T1.FINBANKCONTINGENTACTYPE,
					  T1.FINPROVISIONACTYPE,
					  T38.ACTYPEDESC  LOVDESCFINBANKCONTACTYPENAME,
					  T39.ACTYPEDESC  LOVDESCFINPROVISIONACTYPENAME,
					  T1.ALLOWRIAINVESTMENT,
					  T1.OVERRIDELIMIT,
					  T1.LIMITREQUIRED,
					  T1.FINCOMMITMENTOVRRIDE,
					  T1.FINCOLLATERALOVRRIDE,
					  T1.FINPFTUNCHANGED,
					  T1.APPLYODPENALTY,
					  T1.ODINCGRCDAYS,
					  T1.ODCHARGETYPE,
					  T1.ODGRACEDAYS,
					  T1.ODCHARGECALON,
					  T1.ODCHARGEAMTORPERC,
					  T1.ODALLOWWAIVER,
					  T1.ODMAXWAIVERPERC,
					  T1.FINDIVISION,
					  T48.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
					  T48.ENTITYCODE   LOVDESCENTITYCODE,
					  T1.FINSUSPACTYPE,
					  T49.ACTYPEDESC  LOVDESCFINSUSPACTYPENAME,
					  T1.PRODUCT,
					  T1.STARTDATE,
					  T1.ENDDATE,
					  T1.ALLOWDOWNPAYPGM,
					  T1.REMARKS,
					  T1.ALWEARLYPAYMETHODS,
					  T1.PASTDUEPFTCALMTHD,
					  T1.PASTDUEPFTMARGIN,
					  T1.ALWADVANCERENT,
					  T1.GRCADVBASERATE,
					  T1.GRCADVMARGIN,
					  T1.GRCADVPFTRATE,
					  T1.RPYADVBASERATE,
					  T1.RPYADVMARGIN,
					  T1.RPYADVPFTRATE,
					  T1.ROLLOVERFINANCE,
					  T1.ROLLOVERFRQ,
					  T1.DOWNPAYRULE,
					  T59.RULECODE    DOWNPAYRULECODE,
					  T59.RULECODEDESC  DOWNPAYRULEDESC,
					  T1.FINSUSPTRIGGER,
					  T1.FINSUSPREMARKS,
					  T1.ALWMULTIPARTYDISB,
					  T1.COLLATERALTYPE,
					  T1.TDSAPPLICABLE,
					  T1.MANUALSCHEDULE,
					  T1.APPLYGRCPRICING,
					  T1.GRCPRICINGMETHOD,
					  T1.APPLYRPYPRICING,
					  T1.RPYPRICINGMETHOD,
					  T1.RPYHIERARCHY,
					  T67.RULECODE  GRCPRICINGMETHODDESC,
					  T68.RULECODE  RPYPRICINGMETHODDESC,
					  T1.DROPLINEOD,
					  T1.DROPPINGMETHOD,
					  T1.RATECHGANYDAY,
					  T1.FINREPAYPFTONFRQ,
					  T1.ALWBPI,
					  T1.BPITREATMENT,
					  T1.PFTDUESCHON,
					  T1.PLANEMIHALW,
					  T1.PLANEMIHMETHOD,
					  T1.PLANEMIHMAXPERYEAR,
					  T1.PLANEMIHMAX,
					  T1.PLANEMIHLOCKPERIOD,
					  T1.PLANEMICPZ,
					  T1.UNPLANEMIHLOCKPERIOD,
					  T1.UNPLANEMICPZ,
					  T1.REAGECPZ,
					  T1.FDDLOCKPERIOD,
					  T1.ALWDRPYMETHODS,
					  T1.MAXUNPLANNEDEMI,
					  T1.MAXREAGEHOLIDAYS,
					  T1.ROUNDINGMODE,
					  T1.ROUNDINGTARGET,
					  T1.FREQUENCYDAYS,
					  T1.QUICKDISB,
					  T1.ALWREAGE,
					  T1.ALWUNPLANEMIHOLIDAY,
					  T1.ALWMAXDISBCHECKREQ,
					  T1.FINTYPEDESC LOVDESCPROMOFINTYPEDESC,
					  T1.PROFITCENTERID,
					  T69.PROFITCENTERCODE,
					  T69.PROFITCENTERDESC,
					  T1.PRODUCTCATEGORY,
					  T2.PRODUCTDESC  FINCATEGORYDESC,
					  T1.DEVELOPERFINANCE,
					  T1.COSTOFFUNDS,
					  T1.CHEQUECAPTUREREQ,
					  T1.FINLTVCHECK,
					  T1.PARTIALLYSECURED,
					  T1.ALWADVEMI,
					  T1.ADVEMIMINTERMS,
					  T1.ADVEMIMAXTERMS,
					  T1.ADVEMIDFTTERMS,
					  T1.ADVEMISCHDMTHD,
					  T1.BPIPFTDAYSBASIS,
					  T1.ELIGIBILITYMETHODS,
					  T1.ALWHYBRIDRATE,
					  T1.FIXEDRATETENOR,
					  T1.ODMINCAPAMOUNT,
					  T1.ODRULECODE,
					  T1.ALWZEROINTACC,
					  T1.AUTOREJECTIONDAYS,
					  T1.TAXNOMAND,
					  T1.PUTCALLREQUIRED,
					  T1.GRCADVINTERSETREQ,
					  T1.GRCADVTYPE,
					  T1.GRCADVMINTERMS,
					  T1.GRCADVMAXTERMS,
					  T1.GRCADVDEFAULTTERMS,
					  T1.ADVINTERSETREQ,
					  T1.ADVTYPE,
					  T1.ADVMINTERMS,
					  T1.ADVMAXTERMS,
					  T1.ADVDEFAULTTERMS,
					  T1.ADVSTAGE,
					  T1.DSFREQ,
					  T1.CASHCOLLATERALREQ,
					  T1.TDSALLOWTOMODIFY,
					  T1.TDSAPPLICABLETO,
					  T1.ALWVAN,
					  T1.VANALLOCATIONMETHOD,
					  T1.ALLOWDRAWINGPOWER,
					  T1.ALLOWREVOLVING,
					  T1.ALWSANCTIONAMT,
					  T1.ALWSANCTIONAMTOVERRIDE,
					  T1.SANBSDSCHDLE,
					  T1.FINISRATERVWATGRCEND
					FROM RMTFINANCETYPES T1
					LEFT JOIN BMTPRODUCT T2 ON T1.FINCATEGORY = T2.PRODUCTCODE
					LEFT JOIN RMTACCOUNTTYPES T4 ON T1.FINCONTINGENTACTYPE = T4.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T38 ON T1.FINBANKCONTINGENTACTYPE = T38.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T39 ON T1.FINPROVISIONACTYPE = T39.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T5 ON T1.FINACTYPE = T5.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T31 ON T1.PFTPAYACTYPE = T31.ACTYPE
					LEFT JOIN SMTDIVISIONDETAIL T48 ON T1.FINDIVISION = T48.DIVISIONCODE
					LEFT JOIN RMTACCOUNTTYPES T49 ON T1.FINSUSPACTYPE = T49.ACTYPE
					LEFT JOIN RULES T59 ON T1.DOWNPAYRULE = T59.RULEID
					LEFT JOIN RULES T67 ON T1.GRCPRICINGMETHOD = T67.RULEID
					LEFT JOIN RULES T68 ON T1.RPYPRICINGMETHOD = T68.RULEID
					LEFT JOIN PROFITCENTERS T69 ON T69.PROFITCENTERID = T1.PROFITCENTERID
	</createView>
	</changeSet>

	<changeSet id="143_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="144_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_orgview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="144" author="satyanarayana.g">
		<createView viewName="RMTFINANCETYPES_ORGVIEW "
			replaceIfExists="true">	 
			SELECT T1.FINTYPE,
				  T1.FINCATEGORY,
				  T1.FINTYPEDESC,
				  T1.FINCCY,
				  T1.FINDAYSCALTYPE,
				  T1.FINACTYPE,
				  T1.FINCONTINGENTACTYPE,
				  T1.FINISGENREF,
				  T1.FINMAXAMOUNT,
				  T1.FINMINAMOUNT,
				  T1.FINISOPENNEWFINAC,
				  T1.FINISALWMD,
				  T1.FINSCHDMTHD,
				  T1.FINISALWGRACE,
				  T1.EQUALREPAYMENT,
				  T1.FINRATETYPE,
				  T1.FINBASERATE,
				  T1.FINSPLRATE,
				  T1.FININTRATE,
				  T1.FINMINRATE,
				  T1.FINMAXRATE,
				  T1.FINDFTINTFRQ,
				  T1.FINISINTCPZ,
				  T1.FINCPZFRQ,
				  T1.FINISRVWALW,
				  T1.FINRVWFRQ,
				  T1.FINGRCRATETYPE,
				  T1.FINGRCBASERATE,
				  T1.FINGRCSPLRATE,
				  T1.FINGRCINTRATE,
				  T1.FINGRCMINRATE,
				  T1.FINGRCMAXRATE,
				  T1.FINGRCDFTINTFRQ,
				  T1.FINGRCISINTCPZ,
				  T1.FINGRCCPZFRQ,
				  T1.FINGRCISRVWALW,
				  T1.FINGRCRVWFRQ,
				  T1.FINMINTERM,
				  T1.FINMAXTERM,
				  T1.FINDFTTERMS,
				  T1.FINRPYFRQ,
				  T1.FINREPAYMETHOD,
				  T1.FINISALWDIFFERMENT,
				  T1.FINMAXDIFFERMENT,
				  T1.FINISACTIVE,
				  T1.STEPFINANCE,
				  T1.STEPPINGMANDATORY,
				  T1.ALWMANUALSTEPS,
				  T1.ALWDSTEPPOLICIES,
				  T1.DFTSTEPPOLICY,
				  T1.FINISDWPAYREQUIRED,
				  T1.FINRVWRATEAPPLFOR,
				  T1.FINALWRATECHANGEANYDATE,
				  T1.FINISINTCPZATGRCEND,
				  T1.FINSCHCALCODEONRVW,
				  T1.ALWPLANDEFERMENT,
				  T1.PLANDEFERCOUNT,
				  T1.PFTPAYACTYPE,
				  T1.FINISOPENPFTPAYACC,
				  T1.FINISALWGRCREPAY,
				  T1.FINGRCSCHDMTHD,
				  T1.FINGRCMARGIN,
				  T1.FINMARGIN,
				  T1.FINCOMMITMENTREQ,
				  T1.FINCOLLATERALREQ,
				  T1.FINDEPRECIATIONREQ,
				  T1.FINDEPRECIATIONFRQ,
				  T1.FINBANKCONTINGENTACTYPE,
				  T1.FINPROVISIONACTYPE,
				  T1.ALLOWRIAINVESTMENT,
				  T1.OVERRIDELIMIT,
				  T1.LIMITREQUIRED,
				  T1.FINCOMMITMENTOVRRIDE,
				  T1.FINCOLLATERALOVRRIDE,
				  T1.FINREPAYPFTONFRQ,
				  T1.FINPFTUNCHANGED,
				  T1.APPLYODPENALTY,
				  T1.ODINCGRCDAYS,
				  T1.ODCHARGETYPE,
				  T1.ODGRACEDAYS,
				  T1.ODCHARGECALON,
				  T1.ODCHARGEAMTORPERC,
				  T1.ODALLOWWAIVER,
				  T1.ODMAXWAIVERPERC,
				  T1.FINDIVISION,
				  T3.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
				  T1.FINSUSPACTYPE,
				  T1.PRODUCT,
				  T1.STARTDATE,
				  T1.ENDDATE,
				  T1.ALLOWDOWNPAYPGM,
				  T1.FINTYPEDESC  LOVDESCPROMOFINTYPEDESC,
				  T1.REMARKS,
				  T4.POLICYDESC  LOVDESCDFTSTEPPOLICYNAME,
				  T1.PASTDUEPFTCALMTHD,
				  T1.PASTDUEPFTMARGIN,
				  T1.ALWADVANCERENT,
				  T1.GRCADVBASERATE,
				  T1.GRCADVMARGIN,
				  T1.GRCADVPFTRATE,
				  T1.RPYADVBASERATE,
				  T1.RPYADVMARGIN,
				  T1.RPYADVPFTRATE,
				  T1.ROLLOVERFINANCE,
				  T1.ROLLOVERFRQ,
				  T1.DOWNPAYRULE,
				  T1.ALWMULTIPARTYDISB,
				  T1.COLLATERALTYPE,
				  T1.TDSAPPLICABLE,
				  T5.RULECODE  DOWNPAYRULECODE,
				  T5.RULECODEDESC  DOWNPAYRULEDESC,
				  T1.APPLYGRCPRICING,
				  T1.APPLYRPYPRICING,
				  T6.RULECODE  GRCPRICINGMETHODDESC,
				  T7.RULECODE  RPYPRICINGMETHODDESC,
				  T1.DROPLINEOD,
				  T1.DROPPINGMETHOD,
				  T1.RATECHGANYDAY,
				  T4.STEPTYPE  DFTSTEPPOLICYTYPE,
				  T1.MANUALSCHEDULE,
				  T1.ALWBPI,
				  T1.BPITREATMENT,
				  T1.PFTDUESCHON,
				  T1.PLANEMIHALW,
				  T1.PLANEMIHMETHOD,
				  T1.PLANEMIHMAXPERYEAR,
				  T1.PLANEMIHMAX,
				  T1.PLANEMIHLOCKPERIOD,
				  T1.PLANEMICPZ,
				  T1.UNPLANEMIHLOCKPERIOD,
				  T1.UNPLANEMICPZ,
				  T1.REAGECPZ,
				  T1.FDDLOCKPERIOD,
				  T1.ALWDRPYMETHODS,
				  T1.MAXUNPLANNEDEMI,
				  T1.MAXREAGEHOLIDAYS,
				  T1.ROUNDINGMODE,
				  T1.ROUNDINGTARGET,
				  T1.FREQUENCYDAYS,
				  T1.QUICKDISB,
				  T1.ALWREAGE,
				  T1.ALWUNPLANEMIHOLIDAY,
				  T1.ALWMAXDISBCHECKREQ,
				  T1.PRODUCTCATEGORY,
				  T1.RPYHIERARCHY,
				  T1.DEVELOPERFINANCE,
				  T3.ENTITYCODE  LOVDESCENTITYCODE,
				  T8.ENTITYDESC  LOVDESCENTITYDESC,
				  T1.COSTOFFUNDS,
				  T1.CHEQUECAPTUREREQ,
				  T1.FINLTVCHECK,
				  T1.PARTIALLYSECURED,
				  T1.ALWADVEMI,
				  T1.ADVEMIMINTERMS,
				  T1.ADVEMIMAXTERMS,
				  T1.ADVEMIDFTTERMS,
				  T1.ADVEMISCHDMTHD,
				  T1.BPIPFTDAYSBASIS,
				  T1.ELIGIBILITYMETHODS,
				  T1.ALWHYBRIDRATE,
				  T1.FIXEDRATETENOR,
				  T1.ODMINCAPAMOUNT,
				  T1.ODRULECODE,
				  T1.ALWZEROINTACC,
				  T1.FINISALWPARTIALRPY,
				  T1.AUTOREJECTIONDAYS,
				  T1.TAXNOMAND,
				  T1.PUTCALLREQUIRED,
				  T1.GRCADVINTERSETREQ,
				  T1.GRCADVTYPE,
				  T1.GRCADVMINTERMS,
				  T1.GRCADVMAXTERMS,
				  T1.GRCADVDEFAULTTERMS,
				  T1.ADVINTERSETREQ,
				  T1.ADVTYPE,
				  T1.ADVMINTERMS,
				  T1.ADVMAXTERMS,
				  T1.ADVDEFAULTTERMS,
				  T1.ADVSTAGE,
				  T1.DSFREQ,
				  T1.CASHCOLLATERALREQ,
				  T1.ALWEARLYPAYMETHODS,
				  T1.TDSALLOWTOMODIFY,
				  T1.TDSAPPLICABLETO,
				  T1.ALWVAN,
				  T1.VANALLOCATIONMETHOD,
				  T1.ALLOWDRAWINGPOWER,
				  T1.ALLOWREVOLVING,
				  T1.ALWSANCTIONAMT,
				  T1.ALWSANCTIONAMTOVERRIDE,
				  T1.SANBSDSCHDLE,
				  T1.FINISRATERVWATGRCEND
				FROM RMTFINANCETYPES T1
				JOIN SMTDIVISIONDETAIL T3 ON T1.FINDIVISION = T3.DIVISIONCODE
				LEFT JOIN STEPPOLICYHEADER T4 ON T1.DFTSTEPPOLICY = T4.POLICYCODE
				LEFT JOIN RULES T5 ON T1.DOWNPAYRULE = T5.RULEID
				LEFT JOIN RULES T6 ON T1.GRCPRICINGMETHOD = T6.RULEID
				LEFT JOIN RULES T7 ON T1.RPYPRICINGMETHOD = T7.RULEID
				LEFT JOIN ENTITY T8 ON T3.ENTITYCODE = T8.ENTITYCODE 
		</createView>
	</changeSet>

	<changeSet id="144_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_orgview');
					
			]]>
		</sql>
	</changeSet>

	<changeSet id="145_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="145" author="satyanarayana.g">
		<createView viewName="RMTFINANCETYPES_VIEW "
			replaceIfExists="true">	 	 
			SELECT T1.FINTYPE,
				    T1.FINCATEGORY,
				    T1.FINTYPEDESC,
				    T1.FINCCY,
				    T1.FINDAYSCALTYPE,
				    T1.FINACTYPE,
				    T1.FINCONTINGENTACTYPE,
				    T1.FINISGENREF,
				    T1.FINMAXAMOUNT,
				    T1.FINMINAMOUNT,
				    T1.FINISOPENNEWFINAC,
				    T1.FINDFTSTMTFRQ,
				    T1.FINISALWMD,
				    T1.FINSCHDMTHD,
				    T1.FINISALWGRACE,
				    T1.FINHISTRETENSION,
				    T1.EQUALREPAYMENT,
				    T1.FINRATETYPE,
				    T1.FINBASERATE,
				    T1.FINSPLRATE,
				    T1.FININTRATE,
				    T1.FINMINRATE,
				    T1.FINMAXRATE,
				    T1.FINDFTINTFRQ,
				    T1.FINISINTCPZ,
				    T1.FINCPZFRQ,
				    T1.FINISRVWALW,
				    T1.FINRVWFRQ,
				    T1.FINGRCRATETYPE,
				    T1.FINGRCBASERATE,
				    T1.FINGRCSPLRATE,
				    T1.FINGRCINTRATE,
				    T1.FINGRCMINRATE,
				    T1.FINGRCMAXRATE,
				    T1.FINGRCDFTINTFRQ,
				    T1.FINGRCISINTCPZ,
				    T1.FINGRCCPZFRQ,
				    T1.FINGRCISRVWALW,
				    T1.FINGRCRVWFRQ,
				    T1.FINMINTERM,
				    T1.FINMAXTERM,
				    T1.FINDFTTERMS,
				    T1.FINRPYFRQ,
				    T1.FINREPAYMETHOD,
				    T1.FINISALWPARTIALRPY,
				    T1.FINISALWDIFFERMENT,
				    T1.FINMAXDIFFERMENT,
				    T1.FINISALWEARLYRPY,
				    T1.FINISALWEARLYSETTLE,
				    T1.FINODRPYTRIES,
				    T1.FINEARLYPAYRULE,
				    T1.FINEARLYSETTLERULE,
				    T1.FINDEPOSITRESTRICTEDTO,
				    T1.FINAEBUYORINCEPTION,
				    T1.FINAESELLORMATURITY,
				    T1.FINISACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.STEPFINANCE,
				    T1.STEPPINGMANDATORY,
				    T1.ALWMANUALSTEPS,
				    T1.ALWDSTEPPOLICIES,
				    T1.DFTSTEPPOLICY,
				    T4.ACTYPEDESC  LOVDESCFINCONTINGENTACTYPENAME,
				    T5.ACTYPEDESC  LOVDESCFINACTYPENAME,
				    T1.FINISDWPAYREQUIRED,
				    T1.FINRVWRATEAPPLFOR,
				    T1.FINALWRATECHANGEANYDATE,
				    T1.FINISINTCPZATGRCEND,
				    T1.FINELGRULECODE,
				    T1.LIMITELGRULECODE,
				    T1.FINSCHCALCODEONRVW,
				    T1.ALWPLANDEFERMENT,
				    T1.PLANDEFERCOUNT,
				    T1.FINASSETTYPE,
				    T1.PFTPAYACTYPE,
				    T1.FINISOPENPFTPAYACC,
				    T31.ACTYPEDESC  LOVDESCPFTPAYACTYPENAME,
				    T1.FINISALWGRCREPAY,
				    T1.FINGRCSCHDMTHD,
				    T1.FINGRCMARGIN,
				    T1.FINMARGIN,
				    T1.FINSCHEDULEON,
				    T1.FINGRCSCHEDULEON,
				    T1.FINCOMMITMENTREQ,
				    T1.FINCOLLATERALREQ,
				    T1.FINDEPRECIATIONREQ,
				    T1.FINDEPRECIATIONFRQ,
				    T1.FINBANKCONTINGENTACTYPE,
				    T1.FINPROVISIONACTYPE,
				    T38.ACTYPEDESC  LOVDESCFINBANKCONTACTYPENAME,
				    T39.ACTYPEDESC  LOVDESCFINPROVISIONACTYPENAME,
				    T1.ALLOWRIAINVESTMENT,
				    T1.OVERRIDELIMIT,
				    T1.LIMITREQUIRED,
				    T1.FINCOMMITMENTOVRRIDE,
				    T1.FINCOLLATERALOVRRIDE,
				    T1.FINPFTUNCHANGED,
				    T1.APPLYODPENALTY,
				    T1.ODINCGRCDAYS,
				    T1.ODCHARGETYPE,
				    T1.ODGRACEDAYS,
				    T1.ODCHARGECALON,
				    T1.ODCHARGEAMTORPERC,
				    T1.ODALLOWWAIVER,
				    T1.ODMAXWAIVERPERC,
				    T1.FINDIVISION,
				    T48.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
				    T48.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.FINSUSPACTYPE,
				    T49.ACTYPEDESC  LOVDESCFINSUSPACTYPENAME,
				    T1.PRODUCT,
				    T1.STARTDATE,
				    T1.ENDDATE,
				    T1.ALLOWDOWNPAYPGM,
				    T1.FINTYPEDESC  LOVDESCPROMOFINTYPEDESC,
				    T1.REMARKS,
				    T1.ALWEARLYPAYMETHODS,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.ALWADVANCERENT,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.ROLLOVERFINANCE,
				    T1.ROLLOVERFRQ,
				    T1.DOWNPAYRULE,
				    T59.RULECODE  DOWNPAYRULECODE,
				    T59.RULECODEDESC  DOWNPAYRULEDESC,
				    T1.FINSUSPTRIGGER,
				    T1.FINSUSPREMARKS,
				    T1.ALWMULTIPARTYDISB,
				    T1.COLLATERALTYPE,
				    T1.TDSAPPLICABLE,
				    T1.MANUALSCHEDULE,
				    T1.APPLYGRCPRICING,
				    T1.GRCPRICINGMETHOD,
				    T1.APPLYRPYPRICING,
				    T1.RPYPRICINGMETHOD,
				    T1.RPYHIERARCHY,
				    T67.RULECODE  GRCPRICINGMETHODDESC,
				    T68.RULECODE  RPYPRICINGMETHODDESC,
				    T1.DROPLINEOD,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.FINREPAYPFTONFRQ,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PFTDUESCHON,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.FDDLOCKPERIOD,
				    T1.ALWDRPYMETHODS,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.ROUNDINGMODE,
				    T1.ROUNDINGTARGET,
				    T1.FREQUENCYDAYS,
				    T1.QUICKDISB,
				    T1.ALWMAXDISBCHECKREQ,
				    T1.ALWREAGE,
				    T1.ALWUNPLANEMIHOLIDAY,
				    T1.PROFITCENTERID,
				    T69.PROFITCENTERCODE,
				    T69.PROFITCENTERDESC,
				    T1.PRODUCTCATEGORY,
				    T2.PRODUCTDESC AS FINCATEGORYDESC,
				    T1.DEVELOPERFINANCE,
				    T1.COSTOFFUNDS,
				    T1.CHEQUECAPTUREREQ,
				    T1.FINLTVCHECK,
				    T1.PARTIALLYSECURED,
				    T1.ALWADVEMI,
				    T1.ADVEMIMINTERMS,
				    T1.ADVEMIMAXTERMS,
				    T1.ADVEMIDFTTERMS,
				    T1.ADVEMISCHDMTHD,
				    T1.BPIPFTDAYSBASIS,
				    T1.ELIGIBILITYMETHODS,
				    T1.ALWHYBRIDRATE,
				    T1.FIXEDRATETENOR,
				    T1.ODMINCAPAMOUNT,
				    T1.ODRULECODE,
				    T1.ALWZEROINTACC,
				    T1.AUTOREJECTIONDAYS,
				    T1.TAXNOMAND,
				    T1.PUTCALLREQUIRED,
				    T1.GRCADVINTERSETREQ,
				    T1.GRCADVTYPE,
				    T1.GRCADVMINTERMS,
				    T1.GRCADVMAXTERMS,
				    T1.GRCADVDEFAULTTERMS,
				    T1.ADVINTERSETREQ,
				    T1.ADVTYPE,
				    T1.ADVMINTERMS,
				    T1.ADVMAXTERMS,
				    T1.ADVDEFAULTTERMS,
				    T1.ADVSTAGE,
				    T1.DSFREQ,
				    T1.CASHCOLLATERALREQ,
				    T1.TDSALLOWTOMODIFY,
				    T1.TDSAPPLICABLETO,
				    T1.ALWVAN,
				    T1.VANALLOCATIONMETHOD,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.ALWSANCTIONAMT,
				    T1.ALWSANCTIONAMTOVERRIDE,
				    T1.SANBSDSCHDLE,
				    T1.FINISRATERVWATGRCEND
				   FROM RMTFINANCETYPES_TEMP T1
				     LEFT JOIN BMTPRODUCT T2 ON T1.FINCATEGORY = T2.PRODUCTCODE
				     LEFT JOIN RMTACCOUNTTYPES T4 ON T1.FINCONTINGENTACTYPE = T4.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T38 ON T1.FINBANKCONTINGENTACTYPE = T38.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T39 ON T1.FINPROVISIONACTYPE = T39.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T5 ON T1.FINACTYPE = T5.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T31 ON T1.PFTPAYACTYPE = T31.ACTYPE
				     LEFT JOIN SMTDIVISIONDETAIL T48 ON T1.FINDIVISION = T48.DIVISIONCODE
				     LEFT JOIN RMTACCOUNTTYPES T49 ON T1.FINSUSPACTYPE = T49.ACTYPE
				     LEFT JOIN RULES T59 ON T1.DOWNPAYRULE = T59.RULEID
				     LEFT JOIN RULES T67 ON T1.GRCPRICINGMETHOD = T67.RULEID
				     LEFT JOIN RULES T68 ON T1.RPYPRICINGMETHOD = T68.RULEID
				     LEFT JOIN PROFITCENTERS T69 ON T69.PROFITCENTERID = T1.PROFITCENTERID
				UNION ALL
				 SELECT T1.FINTYPE,
				    T1.FINCATEGORY,
				    T1.FINTYPEDESC,
				    T1.FINCCY,
				    T1.FINDAYSCALTYPE,
				    T1.FINACTYPE,
				    T1.FINCONTINGENTACTYPE,
				    T1.FINISGENREF,
				    T1.FINMAXAMOUNT,
				    T1.FINMINAMOUNT,
				    T1.FINISOPENNEWFINAC,
				    T1.FINDFTSTMTFRQ,
				    T1.FINISALWMD,
				    T1.FINSCHDMTHD,
				    T1.FINISALWGRACE,
				    T1.FINHISTRETENSION,
				    T1.EQUALREPAYMENT,
				    T1.FINRATETYPE,
				    T1.FINBASERATE,
				    T1.FINSPLRATE,
				    T1.FININTRATE,
				    T1.FINMINRATE,
				    T1.FINMAXRATE,
				    T1.FINDFTINTFRQ,
				    T1.FINISINTCPZ,
				    T1.FINCPZFRQ,
				    T1.FINISRVWALW,
				    T1.FINRVWFRQ,
				    T1.FINGRCRATETYPE,
				    T1.FINGRCBASERATE,
				    T1.FINGRCSPLRATE,
				    T1.FINGRCINTRATE,
				    T1.FINGRCMINRATE,
				    T1.FINGRCMAXRATE,
				    T1.FINGRCDFTINTFRQ,
				    T1.FINGRCISINTCPZ,
				    T1.FINGRCCPZFRQ,
				    T1.FINGRCISRVWALW,
				    T1.FINGRCRVWFRQ,
				    T1.FINMINTERM,
				    T1.FINMAXTERM,
				    T1.FINDFTTERMS,
				    T1.FINRPYFRQ,
				    T1.FINREPAYMETHOD,
				    T1.FINISALWPARTIALRPY,
				    T1.FINISALWDIFFERMENT,
				    T1.FINMAXDIFFERMENT,
				    T1.FINISALWEARLYRPY,
				    T1.FINISALWEARLYSETTLE,
				    T1.FINODRPYTRIES,
				    T1.FINEARLYPAYRULE,
				    T1.FINEARLYSETTLERULE,
				    T1.FINDEPOSITRESTRICTEDTO,
				    T1.FINAEBUYORINCEPTION,
				    T1.FINAESELLORMATURITY,
				    T1.FINISACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.STEPFINANCE,
				    T1.STEPPINGMANDATORY,
				    T1.ALWMANUALSTEPS,
				    T1.ALWDSTEPPOLICIES,
				    T1.DFTSTEPPOLICY,
				    T4.ACTYPEDESC  LOVDESCFINCONTINGENTACTYPENAME,
				    T5.ACTYPEDESC  LOVDESCFINACTYPENAME,
				    T1.FINISDWPAYREQUIRED,
				    T1.FINRVWRATEAPPLFOR,
				    T1.FINALWRATECHANGEANYDATE,
				    T1.FINISINTCPZATGRCEND,
				    T1.FINELGRULECODE,
				    T1.LIMITELGRULECODE,
				    T1.FINSCHCALCODEONRVW,
				    T1.ALWPLANDEFERMENT,
				    T1.PLANDEFERCOUNT,
				    T1.FINASSETTYPE,
				    T1.PFTPAYACTYPE,
				    T1.FINISOPENPFTPAYACC,
				    T31.ACTYPEDESC  LOVDESCPFTPAYACTYPENAME,
				    T1.FINISALWGRCREPAY,
				    T1.FINGRCSCHDMTHD,
				    T1.FINGRCMARGIN,
				    T1.FINMARGIN,
				    T1.FINSCHEDULEON,
				    T1.FINGRCSCHEDULEON,
				    T1.FINCOMMITMENTREQ,
				    T1.FINCOLLATERALREQ,
				    T1.FINDEPRECIATIONREQ,
				    T1.FINDEPRECIATIONFRQ,
				    T1.FINBANKCONTINGENTACTYPE,
				    T1.FINPROVISIONACTYPE,
				    T38.ACTYPEDESC  LOVDESCFINBANKCONTACTYPENAME,
				    T39.ACTYPEDESC  LOVDESCFINPROVISIONACTYPENAME,
				    T1.ALLOWRIAINVESTMENT,
				    T1.OVERRIDELIMIT,
				    T1.LIMITREQUIRED,
				    T1.FINCOMMITMENTOVRRIDE,
				    T1.FINCOLLATERALOVRRIDE,
				    T1.FINPFTUNCHANGED,
				    T1.APPLYODPENALTY,
				    T1.ODINCGRCDAYS,
				    T1.ODCHARGETYPE,
				    T1.ODGRACEDAYS,
				    T1.ODCHARGECALON,
				    T1.ODCHARGEAMTORPERC,
				    T1.ODALLOWWAIVER,
				    T1.ODMAXWAIVERPERC,
				    T1.FINDIVISION,
				    T48.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
				    T48.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.FINSUSPACTYPE,
				    T49.ACTYPEDESC  LOVDESCFINSUSPACTYPENAME,
				    T1.PRODUCT,
				    T1.STARTDATE,
				    T1.ENDDATE,
				    T1.ALLOWDOWNPAYPGM,
				    T1.FINTYPEDESC  LOVDESCPROMOFINTYPEDESC,
				    T1.REMARKS,
				    T1.ALWEARLYPAYMETHODS,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.ALWADVANCERENT,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.ROLLOVERFINANCE,
				    T1.ROLLOVERFRQ,
				    T1.DOWNPAYRULE,
				    T59.RULECODE  DOWNPAYRULECODE,
				    T59.RULECODEDESC  DOWNPAYRULEDESC,
				    T1.FINSUSPTRIGGER,
				    T1.FINSUSPREMARKS,
				    T1.ALWMULTIPARTYDISB,
				    T1.COLLATERALTYPE,
				    T1.TDSAPPLICABLE,
				    T1.MANUALSCHEDULE,
				    T1.APPLYGRCPRICING,
				    T1.GRCPRICINGMETHOD,
				    T1.APPLYRPYPRICING,
				    T1.RPYPRICINGMETHOD,
				    T1.RPYHIERARCHY,
				    T67.RULECODE  GRCPRICINGMETHODDESC,
				    T68.RULECODE  RPYPRICINGMETHODDESC,
				    T1.DROPLINEOD,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.FINREPAYPFTONFRQ,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PFTDUESCHON,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.FDDLOCKPERIOD,
				    T1.ALWDRPYMETHODS,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.ROUNDINGMODE,
				    T1.ROUNDINGTARGET,
				    T1.FREQUENCYDAYS,
				    T1.QUICKDISB,
				    T1.ALWMAXDISBCHECKREQ,
				    T1.ALWREAGE,
				    T1.ALWUNPLANEMIHOLIDAY,
				    T1.PROFITCENTERID,
				    T69.PROFITCENTERCODE,
				    T69.PROFITCENTERDESC,
				    T1.PRODUCTCATEGORY,
				    T2.PRODUCTDESC  FINCATEGORYDESC,
				    T1.DEVELOPERFINANCE,
				    T1.COSTOFFUNDS,
				    T1.CHEQUECAPTUREREQ,
				    T1.FINLTVCHECK,
				    T1.PARTIALLYSECURED,
				    T1.ALWADVEMI,
				    T1.ADVEMIMINTERMS,
				    T1.ADVEMIMAXTERMS,
				    T1.ADVEMIDFTTERMS,
				    T1.ADVEMISCHDMTHD,
				    T1.BPIPFTDAYSBASIS,
				    T1.ELIGIBILITYMETHODS,
				    T1.ALWHYBRIDRATE,
				    T1.FIXEDRATETENOR,
				    T1.ODMINCAPAMOUNT,
				    T1.ODRULECODE,
				    T1.ALWZEROINTACC,
				    T1.AUTOREJECTIONDAYS,
				    T1.TAXNOMAND,
				    T1.PUTCALLREQUIRED,
				    T1.GRCADVINTERSETREQ,
				    T1.GRCADVTYPE,
				    T1.GRCADVMINTERMS,
				    T1.GRCADVMAXTERMS,
				    T1.GRCADVDEFAULTTERMS,
				    T1.ADVINTERSETREQ,
				    T1.ADVTYPE,
				    T1.ADVMINTERMS,
				    T1.ADVMAXTERMS,
				    T1.ADVDEFAULTTERMS,
				    T1.ADVSTAGE,
				    T1.DSFREQ,
				    T1.CASHCOLLATERALREQ,
				    T1.TDSALLOWTOMODIFY,
				    T1.TDSAPPLICABLETO,
				    T1.ALWVAN,
				    T1.VANALLOCATIONMETHOD,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.ALWSANCTIONAMT,
				    T1.ALWSANCTIONAMTOVERRIDE,
				    T1.SANBSDSCHDLE,
				    T1.FINISRATERVWATGRCEND
				   FROM RMTFINANCETYPES T1
				     LEFT JOIN BMTPRODUCT T2 ON T1.FINCATEGORY = T2.PRODUCTCODE
				     LEFT JOIN RMTACCOUNTTYPES T4 ON T1.FINCONTINGENTACTYPE = T4.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T38 ON T1.FINBANKCONTINGENTACTYPE = T38.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T39 ON T1.FINPROVISIONACTYPE = T39.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T5 ON T1.FINACTYPE = T5.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T31 ON T1.PFTPAYACTYPE = T31.ACTYPE
				     LEFT JOIN SMTDIVISIONDETAIL T48 ON T1.FINDIVISION = T48.DIVISIONCODE
				     LEFT JOIN RMTACCOUNTTYPES T49 ON T1.FINSUSPACTYPE = T49.ACTYPE
				     LEFT JOIN RULES T59 ON T1.DOWNPAYRULE = T59.RULEID
				     LEFT JOIN RULES T67 ON T1.GRCPRICINGMETHOD = T67.RULEID
				     LEFT JOIN RULES T68 ON T1.RPYPRICINGMETHOD = T68.RULEID
				     LEFT JOIN PROFITCENTERS T69 ON T69.PROFITCENTERID = T1.PROFITCENTERID
				  WHERE NOT (EXISTS ( SELECT 1 AS EXPR1  FROM RMTFINANCETYPES_TEMP WHERE RMTFINANCETYPES_TEMP.FINTYPE = T1.FINTYPE))			  
		  </createView>
	</changeSet>

	<changeSet id="145_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="146" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE RMTFinanceTypes Set FinIsRateRvwAtGrcEnd = 1;
				UPDATE RMTFinanceTypes_Temp Set FinIsRateRvwAtGrcEnd = 1;
			]]>
		</sql>
	</changeSet>


	<changeSet id="146" author="Varaprasad.K">
		<addColumn tableName="REJECTFINANCEMAIN">
			<column name="SvAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="147" author="Varaprasad.K">
		<addColumn tableName="REJECTFINANCEMAIN">
			<column name="CBAmount" type="Decimal(18,2)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="148" author="Varaprasad.K">
		<sql>
			<![CDATA[
				UPDATE REJECTFINANCEMAIN Set SvAmount = 0  where SvAmount is null;
				UPDATE REJECTFINANCEMAIN Set CBAmount = 0  where SvAmount is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="149_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="149" author="Varaprasad.K">
		<createView viewName="REJECTFINANCEMAIN_VIEW"
			replaceIfExists="true">
			SELECT f.finreference,
			    t.fincategory AS lovdescproductcodename,
			    f.fintype,
			    f.finbranch,
			    f.finstartdate,
			    f.maturitydate,
			    f.numberofterms,
			    f.finccy,
			    f.finamount,
			    f.finamount - f.downpayment + f.feechargeamt + f.insuranceamt AS financingamount,
			    f.feechargeamt,
			    f.insuranceamt,
			    f.finamount - f.downpayment + f.feechargeamt + f.insuranceamt - f.finrepaymentamount AS curfinamount,
			    f.downpayment,
			    f.fincurrassetvalue,
			    f.finassetvalue,
			    f.allowdrawingpower,
			    f.promotionseqid,
			    f.sanbsdschdle,
			    c.custcif AS lovdesccustcif,
			    f.svAmount,
			    f.CBAmount
			   FROM rejectfinancemain f
			     LEFT JOIN customers c ON f.custid = c.custid
			     LEFT JOIN rmtfinancetypes t ON f.fintype = t.fintype
	</createView>
	</changeSet>

	<changeSet id="149_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="150" author="satyanarayana.g">
		<addColumn tableName="FINANCEMAIN">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="151" author="satyanarayana.g">
		<addColumn tableName="FINANCEMAIN_TEMP">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="152" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE FINANCEMAIN Set FinIsRateRvwAtGrcEnd = 0 where FinIsRateRvwAtGrcEnd is null;
				UPDATE FINANCEMAIN_Temp Set FinIsRateRvwAtGrcEnd = 0 where FinIsRateRvwAtGrcEnd is null;;
			]]>
		</sql>
	</changeSet>

	<changeSet id="153" author="satyanarayana.g" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FINANCEMAIN ADD CONSTRAINT DF_FINANCEMAIN_FINRTRVGRSE DEFAULT 0 FOR FinIsRateRvwAtGrcEnd;
				ALTER TABLE FINANCEMAIN_TEMP ADD CONSTRAINT DF_FINANCEMAIN_TEMP_FINRTRVGRSE DEFAULT 0 FOR FinIsRateRvwAtGrcEnd;
			]]>
		</sql>
	</changeSet>

	<changeSet id="154" author="satyanarayana.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="AllowRevolving"
			tableName="FINANCEMAIN" defaultValue="0" />
		<addDefaultValue columnName="AllowRevolving"
			tableName="FINANCEMAIN_Temp" defaultValue="0" />
	</changeSet>

	<changeSet id="155" author="satyanarayana.g">
		<addColumn tableName="FINANCEMAIN_PA">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="156" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE FINANCEMAIN_PA Set FinIsRateRvwAtGrcEnd = 0 where FinIsRateRvwAtGrcEnd is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="157" author="satyanarayana.g" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE FINANCEMAIN_PA ADD CONSTRAINT DF_FINANCEMAIN_PA_FINRTRVGRSE DEFAULT 0 FOR FINISRATERVWATGRCEND;
			]]>
		</sql>
	</changeSet>

	<changeSet id="158" author="satyanarayana.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="FinIsRateRvwAtGrcEnd"
			tableName="FINANCEMAIN_PA" defaultValue="0" />
	</changeSet>

	<changeSet id="159" author="satyanarayana.g">
		<addColumn tableName="REJECTFINANCEMAIN">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="160" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE REJECTFINANCEMAIN Set FINISRATERVWATGRCEND = 0 where FinIsRateRvwAtGrcEnd is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="161" author="satyanarayana.g" dbms="mssql">
		<sql>
			<![CDATA[
				ALTER TABLE REJECTFINANCEMAIN ADD CONSTRAINT DF_REJECTFINANCEMAIN_FINRTRVGRSE DEFAULT 0 FOR FINISRATERVWATGRCEND;
			]]>
		</sql>
	</changeSet>

	<changeSet id="162" author="satyanarayana.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="FinIsRateRvwAtGrcEnd"
			tableName="REJECTFINANCEMAIN" defaultValue="0" />
	</changeSet>

	<changeSet id="163_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="163" author="satyanarayana.g">
		<createView viewName="FINANCEMAIN_VIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT  LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC  LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE  FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD  LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC  LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON  LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION  LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC  LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME  LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY  LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC  DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC  REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC  DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC  SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE  LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC  LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC  EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME  CONNECTORCODE,
				    T40.DEALERCITY  CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL  FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE  BUSINESSVERTICALCODE,
				    BV.DESCRIPTION  BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN_TEMP T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
				UNION ALL
				 SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT AS LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC  LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE  FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD  LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC  LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON  LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION  LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC  LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME  LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY  LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC  DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC  REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC  DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC  SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE  LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC  LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC  EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME  CONNECTORCODE,
				    T40.DEALERCITY  CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL  FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE  BUSINESSVERTICALCODE,
				    BV.DESCRIPTION  BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
				  WHERE NOT (EXISTS ( SELECT 1  FROM FINANCEMAIN_TEMP
				  WHERE FINANCEMAIN_TEMP.FINREFERENCE = T1.FINREFERENCE))
		</createView>
	</changeSet>

	<changeSet id="163_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="164_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="164" author="satyanarayana.g">
		<createView viewName="FINANCEMAIN_TVIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT  LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC  LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE  FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD  LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC  LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON  LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION  LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC  LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME  LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY  LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC  DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC  REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC  DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC  SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE  LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC  LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC  EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME  CONNECTORCODE,
				    T40.DEALERCITY  CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL  FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE  BUSINESSVERTICALCODE,
				    BV.DESCRIPTION  BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN_TEMP T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
		</createView>
	</changeSet>

	<changeSet id="164_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="165_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="165" author="satyanarayana.g">
		<createView viewName="FINANCEMAIN_AVIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT AS LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC AS LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT AS LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT AS LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT AS LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED AS LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT AS LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC AS LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE AS FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD AS LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC AS LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON AS LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION AS LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC AS LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME AS LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY AS LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC AS DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC AS REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC AS DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC AS SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE AS LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE AS LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC AS LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC AS EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME AS CONNECTORCODE,
				    T40.DEALERCITY AS CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL AS FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE AS BUSINESSVERTICALCODE,
				    BV.DESCRIPTION AS BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
		</createView>
	</changeSet>

	<changeSet id="165_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="166_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="166" author="satyanarayana.g">
		<createView viewName="REJECTFINANCEMAIN_VIEW"
			replaceIfExists="true">
			 SELECT F.FINREFERENCE,
				    T.FINCATEGORY AS LOVDESCPRODUCTCODENAME,
				    F.FINTYPE,
				    F.FINBRANCH,
				    F.FINSTARTDATE,
				    F.MATURITYDATE,
				    F.NUMBEROFTERMS,
				    F.FINCCY,
				    F.FINAMOUNT,
				    F.FINAMOUNT - F.DOWNPAYMENT + F.FEECHARGEAMT + F.INSURANCEAMT AS FINANCINGAMOUNT,
				    F.FEECHARGEAMT,
				    F.INSURANCEAMT,
				    F.FINAMOUNT - F.DOWNPAYMENT + F.FEECHARGEAMT + F.INSURANCEAMT - F.FINREPAYMENTAMOUNT AS CURFINAMOUNT,
				    F.DOWNPAYMENT,
				    F.FINCURRASSETVALUE,
				    F.FINASSETVALUE,
				    F.ALLOWDRAWINGPOWER,
				    F.PROMOTIONSEQID,
				    F.SANBSDSCHDLE,
				    C.CUSTCIF AS LOVDESCCUSTCIF,
				    F.SVAMOUNT,
				    F.CBAMOUNT,
				    F.FINISRATERVWATGRCEND
				   FROM REJECTFINANCEMAIN F
				     LEFT JOIN CUSTOMERS C ON F.CUSTID = C.CUSTID
				     LEFT JOIN RMTFINANCETYPES T ON F.FINTYPE = T.FINTYPE
		</createView>
	</changeSet>

	<changeSet id="166_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rejectfinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="167" author="satyanarayana.g">
		<addColumn tableName="WIFFINANCEMAIN">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="168" author="satyanarayana.g">
		<addColumn tableName="WIFFINANCEMAIN_TEMP">
			<column name="FinIsRateRvwAtGrcEnd" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet id="169" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE WIFFINANCEMAIN Set FinIsRateRvwAtGrcEnd = 0  where FinIsRateRvwAtGrcEnd is null;
				UPDATE WIFFINANCEMAIN_TEMP Set FinIsRateRvwAtGrcEnd = 0 where FinIsRateRvwAtGrcEnd is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="170" author="satyanarayana.g" dbms="mssql">
		<sql>
			<![CDATA[	
				ALTER TABLE WIFFINANCEMAIN ADD CONSTRAINT DF_WIFFINANCEMAIN_FINRGR DEFAULT 0 FOR FinIsRateRvwAtGrcEnd;
				ALTER TABLE WIFFINANCEMAIN_TEMP ADD CONSTRAINT DF_WIFFINANCEMAIN_TEMP_FINRGR DEFAULT 0 FOR FinIsRateRvwAtGrcEnd;
			]]>
		</sql>
	</changeSet>

	<changeSet id="171" author="satyanarayana.g" dbms="postgresql, oracle">
		<addDefaultValue columnName="FinIsRateRvwAtGrcEnd"
			tableName="WIFFINANCEMAIN" defaultValue="0" />
		<addDefaultValue columnName="FinIsRateRvwAtGrcEnd"
			tableName="WIFFINANCEMAIN_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="172_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="172" author="satyanarayana.g">
		<createView viewName="WIFFINANCEMAIN_VIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINISACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T15.CUSTCIF  LOVDESCCUSTCIF,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.REPAYMARGIN,
				    T1.GRCMARGIN,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCOMMITMENTREF,
				    T1.FINCURRASSETVALUE,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T7.FINDIVISION AS LOVDESCFINDIVISIONNAME,
				    T1.GRACETERMS,
				    T14.FACILITYTYPE,
				    T15.CUSTSHRTNAME AS LOVDESCCUSTSHRTNAME,
				    T16.BRANCHDESC AS LOVDESCFINBRANCHNAME,
				    T1.TOTALGROSSGRCPFT,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T7.PRODUCT AS LOVDESCFINPRODUCT,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.FEEACCOUNTID,
				    T1.TDSAPPLICABLE,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.FEECHARGEAMT,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T1.GRCMAXAMOUNT,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDTENORRATE,
				    T1.FIXEDRATETENOR,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM WIFFINANCEMAIN_TEMP T1
				     LEFT JOIN WIFINDICATIVETERMDETAIL_TEMP T14 ON T14.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN CUSTOMERS T15 ON T15.CUSTID = T1.CUSTID
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T16 ON T1.FINBRANCH = T16.BRANCHCODE
				UNION ALL
				 SELECT T1.FINREFERENCE,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINISACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T15.CUSTCIF  LOVDESCCUSTCIF,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.REPAYMARGIN,
				    T1.GRCMARGIN,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCOMMITMENTREF,
				    T1.FINCURRASSETVALUE,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T7.FINDIVISION AS LOVDESCFINDIVISIONNAME,
				    T1.GRACETERMS,
				    T14.FACILITYTYPE,
				    T15.CUSTSHRTNAME AS LOVDESCCUSTSHRTNAME,
				    T16.BRANCHDESC AS LOVDESCFINBRANCHNAME,
				    T1.TOTALGROSSGRCPFT,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T7.PRODUCT AS LOVDESCFINPRODUCT,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.FEEACCOUNTID,
				    T1.TDSAPPLICABLE,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.FEECHARGEAMT,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T1.GRCMAXAMOUNT,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDTENORRATE,
				    T1.FIXEDRATETENOR,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM WIFFINANCEMAIN T1
				     LEFT JOIN WIFINDICATIVETERMDETAIL_TEMP T14 ON T14.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN CUSTOMERS T15 ON T15.CUSTID = T1.CUSTID
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T16 ON T1.FINBRANCH = T16.BRANCHCODE
				  WHERE NOT (EXISTS ( SELECT 1
				  FROM WIFFINANCEMAIN_TEMP
				  WHERE WIFFINANCEMAIN_TEMP.FINREFERENCE = T1.FINREFERENCE))
		</createView>
	</changeSet>

	<changeSet id="172_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'wiffinancemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="173_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'wiffinancemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="173" author="satyanarayana.g">
		<createView viewName="WIFFINANCEMAIN_AVIEW"
			replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINISACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T15.CUSTCIF  LOVDESCCUSTCIF,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.REPAYMARGIN,
				    T1.GRCMARGIN,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCOMMITMENTREF,
				    T1.FINCURRASSETVALUE,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T7.FINDIVISION  LOVDESCFINDIVISIONNAME,
				    T1.GRACETERMS,
				    T14.FACILITYTYPE,
				    T15.CUSTSHRTNAME  LOVDESCCUSTSHRTNAME,
				    T16.BRANCHDESC  LOVDESCFINBRANCHNAME,
				    T1.TOTALGROSSGRCPFT,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T7.PRODUCT  LOVDESCFINPRODUCT,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.FEEACCOUNTID,
				    T1.TDSAPPLICABLE,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.FEECHARGEAMT,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.ROUNDINGTARGET,
				    T1.GRCMAXAMOUNT,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS  BPIRATEBASIS,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM WIFFINANCEMAIN T1
				     LEFT JOIN WIFINDICATIVETERMDETAIL_TEMP T14 ON T14.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN CUSTOMERS T15 ON T15.CUSTID = T1.CUSTID
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T16 ON T1.FINBRANCH = T16.BRANCHCODE
		</createView>
	</changeSet>

	<changeSet id="173_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'wiffinancemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="174" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			 	 
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='BFSD_ORIGINATION_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_FinIsRateRvwAtGrcEnd');
			 	DELETE FROM SECRIGHTS Where RightName = 'FinanceMainDialog_FinIsRateRvwAtGrcEnd';
			 	 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'FinanceMainDialog_FinIsRateRvwAtGrcEnd','FinanceMainDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='BFSD_ORIGINATION_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_FinIsRateRvwAtGrcEnd'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			 
			    UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			    UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>


	<changeSet id="175" author="Saikiran.V">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'ALLOW_EOD_SNAPSHOT';
				INSERT INTO SMTparameters  VALUES ('ALLOW_EOD_SNAPSHOT', 'Allow Eod SnapShot', 'String', '1', 'N', 1, 0, NULL, NULL, 'Allow Eod SnapShot.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="176" author="Saikiran.V">
		<addColumn tableName="FINPFTDETAILS_SNAPSHOT">
			<column name="ACTUALODDAYS" type="int" />
		</addColumn>
	</changeSet>

	<changeSet id="177" author="Saikiran.V">
		<addColumn tableName="FINODDETAILS_SNAPSHOT">
			<column name="LpCpz" type="boolean" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="178" author="Saikiran.V">
		<addColumn tableName="FINODDETAILS_SNAPSHOT">
			<column name="LockODRecalCal" type="Boolean" defaultValue="0">
			</column>
		</addColumn>
	</changeSet>

	<changeSet id="179" author="Saikiran.V">
		<addColumn tableName="FINODDETAILS_SNAPSHOT">
			<column name="LpCpzAmount" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="180" author="Saikiran.V">
		<addColumn tableName="FINODDETAILS_SNAPSHOT">
			<column name="LpCurCpzBal" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="181" author="murthy.y">
		<sql>
	    	<![CDATA[
	        	update FINODDETAILS_SNAPSHOT set LpCpz = 0 where LpCpz is null;
	        	update FINODDETAILS_SNAPSHOT set LockODRecalCal = 0 where LockODRecalCal is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="182" author="meena.a">
		<comment>extra fields added in Commitments</comment>
		<addColumn tableName="Commitments">
			<column name="BankingArrangement" type="char(1)" />
		</addColumn>
	</changeSet>

	<changeSet id="183" author="meena.a">
		<comment>extra fields added in Commitments</comment>
		<addColumn tableName="Commitments">
			<column name="LimitCondition" type="char(1)" />
		</addColumn>
	</changeSet>

	<changeSet id="184" author="meena.a">
		<comment>extra fields added in Commitments</comment>
		<addColumn tableName="Commitments">
			<column name="ExternalRef" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="185" author="meena.a">
		<comment>extra fields added in Commitments</comment>
		<addColumn tableName="Commitments">
			<column name="ExternalRef1" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="186" author="meena.a">
		<comment>extra fields added in Commitments</comment>
		<addColumn tableName="Commitments">
			<column name="Tenor" type="int" />
		</addColumn>
	</changeSet>

	<changeSet id="187" author="meena.a">
		<comment>extra fields added in Commitments_temp</comment>
		<addColumn tableName="Commitments_temp">
			<column name="BankingArrangement" type="char(1)" />
		</addColumn>
	</changeSet>

	<changeSet id="188" author="meena.a">
		<comment>extra fields added in Commitments_temp</comment>
		<addColumn tableName="Commitments_temp">
			<column name="LimitCondition" type="char(1)" />
		</addColumn>
	</changeSet>

	<changeSet id="189" author="meena.a">
		<comment>extra fields added in Commitments_temp</comment>
		<addColumn tableName="Commitments_temp">
			<column name="ExternalRef" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="190" author="meena.a">
		<comment>extra fields added in Commitments</comment>
		<addColumn tableName="Commitments_temp">
			<column name="ExternalRef1" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="191" author="meena.a">
		<comment>extra fields added in Commitments_temp</comment>
		<addColumn tableName="Commitments_temp">
			<column name="Tenor" type="int" />
		</addColumn>
	</changeSet>

	<changeSet id="192" author="meena.a">
		<createView viewName="COMMITMENTS_AVIEW" replaceIfExists="true">
		SELECT   t1.cmtreference,
			t1.custid,
			t2.custshrtname,
			t1.cmtbranch,
			t3.branchdesc,
			t1.openaccount,
			t1.cmtaccount,
			t1.cmtccy,
			t1.cmtpftratemin,
			t1.cmtpftratemax,
			t1.cmtamount,
			t1.cmtutilizedamount,
			t1.cmtavailable,
			t1.cmtpromiseddate,
			t1.cmtstartdate,
			t1.cmtexpdate,
			t1.cmtrvwdate,
			t1.cmttitle,
			t1.cmtnotes,
			t1.revolving,
			t1.sharedcmt,
			t1.multibranch,
			t1.facilityref,
			t1.version,
			t1.lastmntby,
			t1.lastmnton,
			t1.recordstatus,
			t1.rolecode,
			t1.nextrolecode,
			t1.taskid,
			t1.nexttaskid,
			t1.recordtype,
			t1.workflowid,
			t1.cmtstopraterange,
			t1.cmtactive,
			t1.nonperforming,
			t1.cmtcharges,
			t1.chargesaccount,
			t2.custcif,
			t6.fintypedesc AS facilityrefdesc,
			t1.cmtavailablemonths,
			t1.collateralrequired,
			t1.cmtenddate,
			t1.limitlineid,
			t4.CcyEditField,
			t1.BankingArrangement,
			t1.LimitCondition,
			t1.ExternalRef, 
			t1.ExternalRef1, 
			t1.Tenor
			from commitments t1
			JOIN customers t2 ON t1.custid = t2.custid
			JOIN rmtbranches t3 ON t1.cmtbranch = t3.branchcode
			JOIN RMTCurrencies t4 ON T1.CmtCcy = T4.CcyCode
			JOIN limitdetails t5 ON t1.limitlineid = t5.detailid
			LEFT JOIN rmtfinancetypes t6 ON t1.facilityref = t6.fintype
		</createView>
	</changeSet>


	<changeSet id="193" author="meena.a">
		<createView viewName="COMMITMENTS_VIEW" replaceIfExists="true">
						SELECT        T1.CmtReference, T1.custID, T2.CustShrtName, T1.CmtBranch, T3.BranchDesc, T1.OpenAccount, T1.CmtAccount, T1.CmtCcy,  T1.CmtPftRateMin, 
									  T1.CmtPftRateMax, T1.CmtAmount, T1.CmtUtilizedAmount, T1.CmtAvailable, T1.CmtPromisedDate, T1.CmtStartDate, T1.CmtExpDate, T1.CmtRvwDate, 
									  T1.CmtTitle, T1.CmtNotes, T1.Revolving, T1.SharedCmt, T1.MultiBranch, T1.FacilityRef, T1.Version, T1.LastMntBy, T1.LastMntOn,  
									  T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtStopRateRange, T1.CmtActive, 
									  T1.NonPerforming,T1.CmtCharges, T1.ChargesAccount, T2.CustCIF, T6.FinTypeDesc FacilityRefDesc,
									  T1.CmtAvailableMonths, T1.CollateralRequired, T1.CmtEndDate, T1.LimitLineId, T1.BankingArrangement, T1.LimitCondition, T1.ExternalRef, T1.ExternalRef1,T1.Tenor
				        FROM          Commitments_Temp T1 INNER JOIN
									  Customers T2 ON T1.custID = T2.CustID INNER JOIN
									  RMTBranches T3 ON T1.CmtBranch = T3.BranchCode  INNER JOIN
									  LimitDetails T5 ON T1.LimitLineId = T5.DetailId LEFT OUTER JOIN
									  RMTFinanceTypes T6 ON T1.FacilityRef = T6.FinType
				   UNION ALL
				SELECT                T1.CmtReference, T1.custID, T2.CustShrtName, T1.CmtBranch, T3.BranchDesc, T1.OpenAccount, T1.CmtAccount, T1.CmtCcy,  T1.CmtPftRateMin, 
									  T1.CmtPftRateMax, T1.CmtAmount, T1.CmtUtilizedAmount, T1.CmtAvailable, T1.CmtPromisedDate, T1.CmtStartDate, T1.CmtExpDate, T1.CmtRvwDate, 
									  T1.CmtTitle, T1.CmtNotes,T1.Revolving, T1.SharedCmt, T1.MultiBranch, T1.FacilityRef, T1.Version, T1.LastMntBy, T1.LastMntOn,  
									  T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtStopRateRange, 
									  T1.CmtActive, T1.NonPerforming, T1.CmtCharges, T1.ChargesAccount, T2.CustCIF, T6.FinTypeDesc FacilityRefDesc,
									  T1.CmtAvailableMonths, T1.CollateralRequired, T1.CmtEndDate, T1.LimitLineId ,T1.BankingArrangement, T1.LimitCondition, T1.ExternalRef, T1.ExternalRef,T1.Tenor
				FROM         		  Commitments T1 INNER JOIN
									  Customers T2 ON T1.custID = T2.CustID INNER JOIN
									  RMTBranches T3 ON T1.CmtBranch = T3.BranchCode INNER JOIN
									  LimitDetails T5 ON T1.LimitLineId = T5.DetailId LEFT OUTER JOIN
									  RMTFinanceTypes T6 ON T1.FacilityRef = T6.FinType
				WHERE     NOT EXISTS
										  (SELECT     1
											FROM          Commitments_TEMP
											WHERE      CmtReference = T1.CmtReference)

		</createView>
	</changeSet>

	<changeSet id="194" author="meena.a">
		<createView viewName="COMMITMENTS_TVIEW" replaceIfExists="true">
						SELECT     T1.CmtReference, T1.custID, T2.CustShrtName, T1.CmtBranch, T3.BranchDesc, T1.OpenAccount, T1.CmtAccount, T1.CmtCcy, T1.CmtPftRateMin, 
                      T1.CmtPftRateMax, T1.CmtAmount, T1.CmtUtilizedAmount, T1.CmtAvailable, T1.CmtPromisedDate, T1.CmtStartDate, T1.CmtExpDate, T1.CmtRvwDate, 
					  T1.CmtTitle, T1.CmtNotes, T1.Revolving, T1.SharedCmt, T1.MultiBranch, T1.FacilityRef, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtStopRateRange, T1.CmtActive, T1.NonPerforming, 
					  T1.CmtCharges, T1.ChargesAccount, T2.CustCIF, T6.FinTypeDesc FacilityRefDesc,
					  T1.CmtAvailableMonths, T1.CollateralRequired, T1.CmtEndDate, T1.LimitLineId, T1.BankingArrangement, T1.LimitCondition, T1.ExternalRef, T1.ExternalRef1,T1.Tenor

     FROM		      Commitments_Temp T1 INNER JOIN
                      Customers T2 ON T1.custID = T2.CustID INNER JOIN
                      RMTBranches T3 ON T1.CmtBranch = T3.BranchCode  INNER JOIN
					  LimitDetails T5 ON T1.LimitLineId = T5.DetailId LEFT OUTER JOIN
                      RMTFinanceTypes T6 ON T1.FacilityRef = T6.FinType
		</createView>
	</changeSet>

	<changeSet id="195" author="meena.a">
		<sql>
		   <![CDATA[
			 update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
			 update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
			 update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
			 
			 INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 
             'CommitmentDialog_BankingArrangement','CommitmentDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);

             insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'), (select RightID from SecRights WHERE RightName='CommitmentDialog_BankingArrangement'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 
              INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 
             'CommitmentDialog_LimitCondition','CommitmentDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);

             insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'),
              (select RightID from SecRights WHERE RightName='CommitmentDialog_LimitCondition'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 
             INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 
             'CommitmentDialog_ExternalRef','CommitmentDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);

             insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'),
              (select RightID from SecRights WHERE RightName='CommitmentDialog_ExternalRef'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 
              INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 
             'CommitmentDialog_ExternalRef1','CommitmentDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);

             insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'),
              (select RightID from SecRights WHERE RightName='CommitmentDialog_ExternalRef1'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 
             INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),3, 
             'CommitmentDialog_Tenor','CommitmentDialog',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);

             insert into SecGroupRights Values((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='COMMITMENT_MAKER'),
              (select RightID from SecRights WHERE RightName='CommitmentDialog_Tenor'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0 );
 
 			 update SeqSecGroups set SeqNo = (select max(grpid)+1 from SECGROUPS);
			 update SeqSecRights set SeqNo = (select max(RightID)+1 from SECRIGHTS);
			 update SeqSecGroupRights set SeqNo = (select max(GRPRIGHTID)+1 from SECGROUPRIGHTS);
		    ]]>
		</sql>
	</changeSet>

	<changeSet id="196" author="vijaya.a">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecRoles set SeqNo = (Select max(RoleId)  from SecRoles);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
				
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_LOANQUEUE_VIEW',			'Group for Covenant Types enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_LOANQUEUE_MAKER',			'Group for Covenant Types maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_LOANQUEUE_APPROVER',		'Group for Covenant Types approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_CD_LOANQUEUE','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_LOANQUEUE_VIEW'), (Select RightID from SecRights where RightName = 'menuItem_CD_LOANQUEUE'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_LOANQUEUE_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_CD_LOANQUEUE'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_LOANQUEUE_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_CD_LOANQUEUE'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecRoles set SeqNo = (Select max(RoleId)  from SecRoles);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId)  from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId)  from SecRoleGroups);
			]]>
		</sql>
	</changeSet>

	<changeSet id="197" author="vijaya.a">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecRoles set SeqNo = (Select max(RoleId)  from SecRoles);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
				
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_VIEW',			'Group for Covenant Types enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_MAKER',			'Group for Covenant Types maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'CD_SCHEME_APPROVER',		'Group for Covenant Types approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menuItem_CD_SCHEME','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_VIEW'), (Select RightID from SecRights where RightName = 'menuItem_CD_SCHEME'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_MAKER'), (Select RightID from SecRights where RightName = 'menuItem_CD_SCHEME'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'CD_SCHEME_APPROVER'), (Select RightID from SecRights where RightName = 'menuItem_CD_SCHEME'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecRoles set SeqNo = (Select max(RoleId)  from SecRoles);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId)  from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId)  from SecRoleGroups);
			]]>
		</sql>
	</changeSet>

	<changeSet id="198" author="vijaya.a">
		<sql>
			<![CDATA[
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecRoles set SeqNo = (Select max(RoleId)  from SecRoles);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
				
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'INDASREPORT_VIEW',			'Group for Covenant Types enquiry', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'INDASREPORT_MAKER',			'Group for Covenant Types maker', 		1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'INDASREPORT_APPROVER',		'Group for Covenant Types approver', 	1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL,NULL, 0);
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0, 'menu_Item_IndASReport','MENU',0,1000,current_timestamp,'Approved',NULL,NULL,NULL,NULL,NULL,0);
				
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'INDASREPORT_VIEW'), (Select RightID from SecRights where RightName = 'menu_Item_IndASReport'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'INDASREPORT_MAKER'), (Select RightID from SecRights where RightName = 'menu_Item_IndASReport'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'INDASREPORT_APPROVER'), (Select RightID from SecRights where RightName = 'menu_Item_IndASReport'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
				
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
				Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
				Update SeqSecRoles set SeqNo = (Select max(RoleId)  from SecRoles);
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId)  from SecGroupRights);
				Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId)  from SecRoleGroups);
			]]>
		</sql>
	</changeSet>

	<changeSet id="199" author="vijaya.a">
		<createView viewName="LIMITCUSTOMERS_VIEW" replaceIfExists="true">
			SELECT Distinct t1.custid, 
				t1.custcif, 
				t1.CustShrtName,
			    t1.CustCtgCode,
			    t1.CustFName,
			    t1.CustLName
			   FROM customers t1 
			   inner join LimitHeader t2 on t1.CustId != t2.customerId	
		</createView>
	</changeSet>

	<changeSet id="200" author="Varaprasad.K">
		<comment>New columns added for Raised user display in Deviations</comment>
		<addColumn tableName="FinanceDeviations">
			<column name="RaisedUser" type="varchar(50)" />
		</addColumn>
		<addColumn tableName="FinanceDeviations_Temp">
			<column name="RaisedUser" type="varchar(50)" />
		</addColumn>
	</changeSet>

	<changeSet id="201.1" author="Varaprasad.K">
		<createView viewName="FinanceDeviations_view"
			replaceIfExists="true">
		   SELECT t1.deviationid,
				    t1.finreference,
				    t1.module,
				    t1.deviationcode,
				    t1.deviationtype,
				    t1.userrole,
				    t1.deviationvalue,
				    t1.delegationrole,
				    t1.approvalstatus,
				    t1.deviationdate,
				    t1.deviationuserid,
				    t1.delegateduserid,
				    t1.raisedUser
				   FROM financedeviations_temp t1
				UNION ALL
				 SELECT t1.deviationid,
				    t1.finreference,
				    t1.module,
				    t1.deviationcode,
				    t1.deviationtype,
				    t1.userrole,
				    t1.deviationvalue,
				    t1.delegationrole,
				    t1.approvalstatus,
				    t1.deviationdate,
				    t1.deviationuserid,
				    t1.delegateduserid,
				    t1.raisedUser
				   FROM financedeviations t1
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM financedeviations_temp
				          WHERE financedeviations_temp.deviationid = t1.deviationid))
		</createView>
	</changeSet>

	<changeSet id="202" author="Varaprasad.K">
		<sql>
				<![CDATA[
				  	DELETE from SMTparameters WHERE SYSPARMCODE='MANUAL_DEVIATIONS_TRIGGERING_FOR_SAMEROLE';
					INSERT INTO SMTparameters  VALUES ('MANUAL_DEVIATIONS_TRIGGERING_FOR_SAMEROLE', 'To exclude manual deviations triggering for same role', 'String', '1', 'Y', 1, 0, NULL, NULL,'To exclude manual deviations triggering for same role', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
				]]>
		</sql>
	</changeSet>

	<changeSet id="203" author="Saikiran.V">
		<sql>
			<![CDATA[
			delete from TemplateFields where field='pc_interestInclAccrued';
			INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'pc_interestInclAccrued', 'Interest Including Interest accrued till date', 'A', 'Putcall');

			delete from TemplateFields where field='pc_totPenal';
			INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'pc_totPenal', 'Penal interest including accrued penal interest till (Date)', 'A', 'Putcall');
			
			delete from TemplateFields where field='pc_otherChargers';
			INSERT INTO TemplateFields(module, field, fielddesc, fieldformat, event) VALUES ('FIN', 'pc_otherChargers', 'Other Charges Receivable ', 'A', 'Putcall');
			]]>
		</sql>
	</changeSet>

	<changeSet id="203" author="Manoj.P">
		<sql>
		<![CDATA[
			DELETE from SMTparameters WHERE SYSPARMCODE='DEVIATION_APPROVAL_FOR_SAMEROLE';
		    INSERT INTO SMTparameters  VALUES ('DEVIATION_APPROVAL_FOR_SAMEROLE', 'To Approve deviations if user is having 2 roles', 'String', '1', 'N', 1, 0, NULL, NULL,'To Approve deviations if user is having 2 roles', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
		]]>
		</sql>
	</changeSet>

	<changeSet id="204" author="srikanth.m" dbms="postgresql,mssql">
		<createView viewName="LIMITCUSTOMERS_VIEW" replaceIfExists="true">
 				SELECT Distinct t1.custid, 
				t1.custcif, 
				t1.CustShrtName,
			    t1.CustCtgCode,
			    t1.CustFName,
			    t1.CustLName
			   FROM customers t1 
			   join LimitHeader_view t2 on cast(t2.customerId as bigint) != t1.CustId and t1.custid not in 
         (select cast(customerId as bigint) from  LimitHeader_view)
		</createView>
	</changeSet>

	<changeSet id="204" author="srikanth.m" dbms="oracle">
		<createView viewName="LIMITCUSTOMERS_VIEW" replaceIfExists="true">
 				SELECT Distinct t1.custid, 
				t1.custcif, 
				t1.CustShrtName,
			    t1.CustCtgCode,
			    t1.CustFName,
			    t1.CustLName
			   FROM customers t1 
			   join LimitHeader_view t2 on cast(t2.customerId as number(19,0)) != t1.CustId and t1.custid not in 
         (select cast(customerId as number(19,0)) from  LimitHeader_view)
		</createView>
	</changeSet>

	<changeSet id="205" author="Saikiran.V">
		<sql>
				<![CDATA[
				  	DELETE from SMTparameters WHERE SYSPARMCODE='ALLOW_INTERNAL_SETTLEMENTS';
					INSERT INTO SMTparameters  VALUES ('ALLOW_INTERNAL_SETTLEMENTS', 'To Allow Internal Settlement in Disbursements', 'String', '1', 'N', 1, 0, NULL, NULL,'To Allow Internal Settlement in Disbursements', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
				]]>
		</sql>
	</changeSet>

	<changeSet id="206" author="meena.a">
		<sql>
			<![CDATA[
				UPDATE Commitments Set tenor = 0 where tenor is null;
				UPDATE Commitments_Temp Set tenor = 0 where tenor is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="207" author="meena.a">
		<addDefaultValue columnDataType="int" columnName="TENOR"
			defaultValueNumeric="0" tableName="COMMITMENTS" />
		<addDefaultValue columnDataType="int" columnName="TENOR"
			defaultValueNumeric="0" tableName="COMMITMENTS_TEMP" />
	</changeSet>


	<changeSet id="208" author="Durgaprasad G">
		<addColumn tableName="RMTFinanceTypes">
			<column name="SchdOnPMTCal" type="boolean" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="209" author="Durgaprasad G">
		<addColumn tableName="RMTFinanceTypes_temp">
			<column name="SchdOnPMTCal" type="boolean" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="210" author="Durgaprasad G">
		<sql>
			<![CDATA[
				UPDATE RMTFinanceTypes Set SchdOnPMTCal = 0;
				UPDATE RMTFinanceTypes_Temp Set SchdOnPMTCal = 0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="212" author="Durgaprasad G" dbms="postgresql, oracle">
		<addDefaultValue columnName="SchdOnPMTCal" tableName="RMTFinanceTypes"
			defaultValue="0" />
		<addDefaultValue columnName="SchdOnPMTCal" tableName="RMTFinanceTypes_Temp"
			defaultValue="0" />
	</changeSet>

	<changeSet id="213_pre" author="Durgaprasad G" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'rmtfinancetypes_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="214" author="Durgaprasad G">
		<createView viewName="RMTFINANCETYPES_AVIEW"
			replaceIfExists="true">
			 SELECT T1.FINTYPE,
					  T1.FINCATEGORY,
					  T1.FINTYPEDESC,
					  T1.FINCCY,
					  T1.FINDAYSCALTYPE,
					  T1.FINACTYPE,
					  T1.FINCONTINGENTACTYPE,
					  T1.FINISGENREF,
					  T1.FINMAXAMOUNT,
					  T1.FINMINAMOUNT,
					  T1.FINISOPENNEWFINAC,
					  T1.FINDFTSTMTFRQ,
					  T1.FINISALWMD,
					  T1.FINSCHDMTHD,
					  T1.FINISALWGRACE,
					  T1.FINHISTRETENSION,
					  T1.EQUALREPAYMENT,
					  T1.FINRATETYPE,
					  T1.FINBASERATE,
					  T1.FINSPLRATE,
					  T1.FININTRATE,
					  T1.FINMINRATE,
					  T1.FINMAXRATE,
					  T1.FINDFTINTFRQ,
					  T1.FINISINTCPZ,
					  T1.FINCPZFRQ,
					  T1.FINISRVWALW,
					  T1.FINRVWFRQ,
					  T1.FINGRCRATETYPE,
					  T1.FINGRCBASERATE,
					  T1.FINGRCSPLRATE,
					  T1.FINGRCINTRATE,
					  T1.FINGRCMINRATE,
					  T1.FINGRCMAXRATE,
					  T1.FINGRCDFTINTFRQ,
					  T1.FINGRCISINTCPZ,
					  T1.FINGRCCPZFRQ,
					  T1.FINGRCISRVWALW,
					  T1.FINGRCRVWFRQ,
					  T1.FINMINTERM,
					  T1.FINMAXTERM,
					  T1.FINDFTTERMS,
					  T1.FINRPYFRQ,
					  T1.FINREPAYMETHOD,
					  T1.FINISALWPARTIALRPY,
					  T1.FINISALWDIFFERMENT,
					  T1.FINMAXDIFFERMENT,
					  T1.FINISALWEARLYRPY,
					  T1.FINISALWEARLYSETTLE,
					  T1.FINODRPYTRIES,
					  T1.FINEARLYPAYRULE,
					  T1.FINEARLYSETTLERULE,
					  T1.FINDEPOSITRESTRICTEDTO,
					  T1.FINAEBUYORINCEPTION,
					  T1.FINAESELLORMATURITY,
					  T1.FINISACTIVE,
					  T1.VERSION,
					  T1.LASTMNTBY,
					  T1.LASTMNTON,
					  T1.RECORDSTATUS,
					  T1.ROLECODE,
					  T1.NEXTROLECODE,
					  T1.TASKID,
					  T1.NEXTTASKID,
					  T1.RECORDTYPE,
					  T1.WORKFLOWID,
					  T1.STEPFINANCE,
					  T1.STEPPINGMANDATORY,
					  T1.ALWMANUALSTEPS,
					  T1.ALWDSTEPPOLICIES,
					  T1.DFTSTEPPOLICY,
					  T4.ACTYPEDESC  LOVDESCFINCONTINGENTACTYPENAME,
					  T5.ACTYPEDESC  LOVDESCFINACTYPENAME,
					  T1.FINISDWPAYREQUIRED,
					  T1.FINRVWRATEAPPLFOR,
					  T1.FINALWRATECHANGEANYDATE,
					  T1.FINISINTCPZATGRCEND,
					  T1.FINELGRULECODE,
					  T1.LIMITELGRULECODE,
					  T1.FINSCHCALCODEONRVW,
					  T1.ALWPLANDEFERMENT,
					  T1.PLANDEFERCOUNT,
					  T1.FINASSETTYPE,
					  T1.PFTPAYACTYPE,
					  T1.FINISOPENPFTPAYACC,
					  T31.ACTYPEDESC  LOVDESCPFTPAYACTYPENAME,
					  T1.FINISALWGRCREPAY,
					  T1.FINGRCSCHDMTHD,
					  T1.FINGRCMARGIN,
					  T1.FINMARGIN,
					  T1.FINSCHEDULEON,
					  T1.FINGRCSCHEDULEON,
					  T1.FINCOMMITMENTREQ,
					  T1.FINCOLLATERALREQ,
					  T1.FINDEPRECIATIONREQ,
					  T1.FINDEPRECIATIONFRQ,
					  T1.FINBANKCONTINGENTACTYPE,
					  T1.FINPROVISIONACTYPE,
					  T38.ACTYPEDESC  LOVDESCFINBANKCONTACTYPENAME,
					  T39.ACTYPEDESC  LOVDESCFINPROVISIONACTYPENAME,
					  T1.ALLOWRIAINVESTMENT,
					  T1.OVERRIDELIMIT,
					  T1.LIMITREQUIRED,
					  T1.FINCOMMITMENTOVRRIDE,
					  T1.FINCOLLATERALOVRRIDE,
					  T1.FINPFTUNCHANGED,
					  T1.APPLYODPENALTY,
					  T1.ODINCGRCDAYS,
					  T1.ODCHARGETYPE,
					  T1.ODGRACEDAYS,
					  T1.ODCHARGECALON,
					  T1.ODCHARGEAMTORPERC,
					  T1.ODALLOWWAIVER,
					  T1.ODMAXWAIVERPERC,
					  T1.FINDIVISION,
					  T48.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
					  T48.ENTITYCODE   LOVDESCENTITYCODE,
					  T1.FINSUSPACTYPE,
					  T49.ACTYPEDESC  LOVDESCFINSUSPACTYPENAME,
					  T1.PRODUCT,
					  T1.STARTDATE,
					  T1.ENDDATE,
					  T1.ALLOWDOWNPAYPGM,
					  T1.REMARKS,
					  T1.ALWEARLYPAYMETHODS,
					  T1.PASTDUEPFTCALMTHD,
					  T1.PASTDUEPFTMARGIN,
					  T1.ALWADVANCERENT,
					  T1.GRCADVBASERATE,
					  T1.GRCADVMARGIN,
					  T1.GRCADVPFTRATE,
					  T1.RPYADVBASERATE,
					  T1.RPYADVMARGIN,
					  T1.RPYADVPFTRATE,
					  T1.ROLLOVERFINANCE,
					  T1.ROLLOVERFRQ,
					  T1.DOWNPAYRULE,
					  T59.RULECODE    DOWNPAYRULECODE,
					  T59.RULECODEDESC  DOWNPAYRULEDESC,
					  T1.FINSUSPTRIGGER,
					  T1.FINSUSPREMARKS,
					  T1.ALWMULTIPARTYDISB,
					  T1.COLLATERALTYPE,
					  T1.TDSAPPLICABLE,
					  T1.MANUALSCHEDULE,
					  T1.APPLYGRCPRICING,
					  T1.GRCPRICINGMETHOD,
					  T1.APPLYRPYPRICING,
					  T1.RPYPRICINGMETHOD,
					  T1.RPYHIERARCHY,
					  T67.RULECODE  GRCPRICINGMETHODDESC,
					  T68.RULECODE  RPYPRICINGMETHODDESC,
					  T1.DROPLINEOD,
					  T1.DROPPINGMETHOD,
					  T1.RATECHGANYDAY,
					  T1.FINREPAYPFTONFRQ,
					  T1.ALWBPI,
					  T1.BPITREATMENT,
					  T1.PFTDUESCHON,
					  T1.PLANEMIHALW,
					  T1.PLANEMIHMETHOD,
					  T1.PLANEMIHMAXPERYEAR,
					  T1.PLANEMIHMAX,
					  T1.PLANEMIHLOCKPERIOD,
					  T1.PLANEMICPZ,
					  T1.UNPLANEMIHLOCKPERIOD,
					  T1.UNPLANEMICPZ,
					  T1.REAGECPZ,
					  T1.FDDLOCKPERIOD,
					  T1.ALWDRPYMETHODS,
					  T1.MAXUNPLANNEDEMI,
					  T1.MAXREAGEHOLIDAYS,
					  T1.ROUNDINGMODE,
					  T1.ROUNDINGTARGET,
					  T1.FREQUENCYDAYS,
					  T1.QUICKDISB,
					  T1.ALWREAGE,
					  T1.ALWUNPLANEMIHOLIDAY,
					  T1.ALWMAXDISBCHECKREQ,
					  T1.FINTYPEDESC LOVDESCPROMOFINTYPEDESC,
					  T1.PROFITCENTERID,
					  T69.PROFITCENTERCODE,
					  T69.PROFITCENTERDESC,
					  T1.PRODUCTCATEGORY,
					  T2.PRODUCTDESC  FINCATEGORYDESC,
					  T1.DEVELOPERFINANCE,
					  T1.COSTOFFUNDS,
					  T1.CHEQUECAPTUREREQ,
					  T1.FINLTVCHECK,
					  T1.PARTIALLYSECURED,
					  T1.ALWADVEMI,
					  T1.ADVEMIMINTERMS,
					  T1.ADVEMIMAXTERMS,
					  T1.ADVEMIDFTTERMS,
					  T1.ADVEMISCHDMTHD,
					  T1.BPIPFTDAYSBASIS,
					  T1.ELIGIBILITYMETHODS,
					  T1.ALWHYBRIDRATE,
					  T1.FIXEDRATETENOR,
					  T1.ODMINCAPAMOUNT,
					  T1.ODRULECODE,
					  T1.ALWZEROINTACC,
					  T1.AUTOREJECTIONDAYS,
					  T1.TAXNOMAND,
					  T1.PUTCALLREQUIRED,
					  T1.GRCADVINTERSETREQ,
					  T1.GRCADVTYPE,
					  T1.GRCADVMINTERMS,
					  T1.GRCADVMAXTERMS,
					  T1.GRCADVDEFAULTTERMS,
					  T1.ADVINTERSETREQ,
					  T1.ADVTYPE,
					  T1.ADVMINTERMS,
					  T1.ADVMAXTERMS,
					  T1.ADVDEFAULTTERMS,
					  T1.ADVSTAGE,
					  T1.DSFREQ,
					  T1.CASHCOLLATERALREQ,
					  T1.TDSALLOWTOMODIFY,
					  T1.TDSAPPLICABLETO,
					  T1.ALWVAN,
					  T1.VANALLOCATIONMETHOD,
					  T1.ALLOWDRAWINGPOWER,
					  T1.ALLOWREVOLVING,
					  T1.ALWSANCTIONAMT,
					  T1.ALWSANCTIONAMTOVERRIDE,
					  T1.SANBSDSCHDLE,
					  T1.FINISRATERVWATGRCEND,
					  T1.SchdOnPMTCal
					FROM RMTFINANCETYPES T1
					LEFT JOIN BMTPRODUCT T2 ON T1.FINCATEGORY = T2.PRODUCTCODE
					LEFT JOIN RMTACCOUNTTYPES T4 ON T1.FINCONTINGENTACTYPE = T4.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T38 ON T1.FINBANKCONTINGENTACTYPE = T38.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T39 ON T1.FINPROVISIONACTYPE = T39.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T5 ON T1.FINACTYPE = T5.ACTYPE
					LEFT JOIN RMTACCOUNTTYPES T31 ON T1.PFTPAYACTYPE = T31.ACTYPE
					LEFT JOIN SMTDIVISIONDETAIL T48 ON T1.FINDIVISION = T48.DIVISIONCODE
					LEFT JOIN RMTACCOUNTTYPES T49 ON T1.FINSUSPACTYPE = T49.ACTYPE
					LEFT JOIN RULES T59 ON T1.DOWNPAYRULE = T59.RULEID
					LEFT JOIN RULES T67 ON T1.GRCPRICINGMETHOD = T67.RULEID
					LEFT JOIN RULES T68 ON T1.RPYPRICINGMETHOD = T68.RULEID
					LEFT JOIN PROFITCENTERS T69 ON T69.PROFITCENTERID = T1.PROFITCENTERID
		</createView>
	</changeSet>

	<changeSet id="213_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'rmtfinancetypes_aview');	
			]]>
		</sql>
	</changeSet>

	<changeSet id="215" author="Durgaprasad G">
		<createView viewName="RMTFINANCETYPES_ORGVIEW"
			replaceIfExists="true">	 
			 	SELECT T1.FINTYPE,
				  T1.FINCATEGORY,
				  T1.FINTYPEDESC,
				  T1.FINCCY,
				  T1.FINDAYSCALTYPE,
				  T1.FINACTYPE,
				  T1.FINCONTINGENTACTYPE,
				  T1.FINISGENREF,
				  T1.FINMAXAMOUNT,
				  T1.FINMINAMOUNT,
				  T1.FINISOPENNEWFINAC,
				  T1.FINISALWMD,
				  T1.FINSCHDMTHD,
				  T1.FINISALWGRACE,
				  T1.EQUALREPAYMENT,
				  T1.FINRATETYPE,
				  T1.FINBASERATE,
				  T1.FINSPLRATE,
				  T1.FININTRATE,
				  T1.FINMINRATE,
				  T1.FINMAXRATE,
				  T1.FINDFTINTFRQ,
				  T1.FINISINTCPZ,
				  T1.FINCPZFRQ,
				  T1.FINISRVWALW,
				  T1.FINRVWFRQ,
				  T1.FINGRCRATETYPE,
				  T1.FINGRCBASERATE,
				  T1.FINGRCSPLRATE,
				  T1.FINGRCINTRATE,
				  T1.FINGRCMINRATE,
				  T1.FINGRCMAXRATE,
				  T1.FINGRCDFTINTFRQ,
				  T1.FINGRCISINTCPZ,
				  T1.FINGRCCPZFRQ,
				  T1.FINGRCISRVWALW,
				  T1.FINGRCRVWFRQ,
				  T1.FINMINTERM,
				  T1.FINMAXTERM,
				  T1.FINDFTTERMS,
				  T1.FINRPYFRQ,
				  T1.FINREPAYMETHOD,
				  T1.FINISALWDIFFERMENT,
				  T1.FINMAXDIFFERMENT,
				  T1.FINISACTIVE,
				  T1.STEPFINANCE,
				  T1.STEPPINGMANDATORY,
				  T1.ALWMANUALSTEPS,
				  T1.ALWDSTEPPOLICIES,
				  T1.DFTSTEPPOLICY,
				  T1.FINISDWPAYREQUIRED,
				  T1.FINRVWRATEAPPLFOR,
				  T1.FINALWRATECHANGEANYDATE,
				  T1.FINISINTCPZATGRCEND,
				  T1.FINSCHCALCODEONRVW,
				  T1.ALWPLANDEFERMENT,
				  T1.PLANDEFERCOUNT,
				  T1.PFTPAYACTYPE,
				  T1.FINISOPENPFTPAYACC,
				  T1.FINISALWGRCREPAY,
				  T1.FINGRCSCHDMTHD,
				  T1.FINGRCMARGIN,
				  T1.FINMARGIN,
				  T1.FINCOMMITMENTREQ,
				  T1.FINCOLLATERALREQ,
				  T1.FINDEPRECIATIONREQ,
				  T1.FINDEPRECIATIONFRQ,
				  T1.FINBANKCONTINGENTACTYPE,
				  T1.FINPROVISIONACTYPE,
				  T1.ALLOWRIAINVESTMENT,
				  T1.OVERRIDELIMIT,
				  T1.LIMITREQUIRED,
				  T1.FINCOMMITMENTOVRRIDE,
				  T1.FINCOLLATERALOVRRIDE,
				  T1.FINREPAYPFTONFRQ,
				  T1.FINPFTUNCHANGED,
				  T1.APPLYODPENALTY,
				  T1.ODINCGRCDAYS,
				  T1.ODCHARGETYPE,
				  T1.ODGRACEDAYS,
				  T1.ODCHARGECALON,
				  T1.ODCHARGEAMTORPERC,
				  T1.ODALLOWWAIVER,
				  T1.ODMAXWAIVERPERC,
				  T1.FINDIVISION,
				  T3.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
				  T1.FINSUSPACTYPE,
				  T1.PRODUCT,
				  T1.STARTDATE,
				  T1.ENDDATE,
				  T1.ALLOWDOWNPAYPGM,
				  T1.FINTYPEDESC  LOVDESCPROMOFINTYPEDESC,
				  T1.REMARKS,
				  T4.POLICYDESC  LOVDESCDFTSTEPPOLICYNAME,
				  T1.PASTDUEPFTCALMTHD,
				  T1.PASTDUEPFTMARGIN,
				  T1.ALWADVANCERENT,
				  T1.GRCADVBASERATE,
				  T1.GRCADVMARGIN,
				  T1.GRCADVPFTRATE,
				  T1.RPYADVBASERATE,
				  T1.RPYADVMARGIN,
				  T1.RPYADVPFTRATE,
				  T1.ROLLOVERFINANCE,
				  T1.ROLLOVERFRQ,
				  T1.DOWNPAYRULE,
				  T1.ALWMULTIPARTYDISB,
				  T1.COLLATERALTYPE,
				  T1.TDSAPPLICABLE,
				  T5.RULECODE  DOWNPAYRULECODE,
				  T5.RULECODEDESC  DOWNPAYRULEDESC,
				  T1.APPLYGRCPRICING,
				  T1.APPLYRPYPRICING,
				  T6.RULECODE  GRCPRICINGMETHODDESC,
				  T7.RULECODE  RPYPRICINGMETHODDESC,
				  T1.DROPLINEOD,
				  T1.DROPPINGMETHOD,
				  T1.RATECHGANYDAY,
				  T4.STEPTYPE  DFTSTEPPOLICYTYPE,
				  T1.MANUALSCHEDULE,
				  T1.ALWBPI,
				  T1.BPITREATMENT,
				  T1.PFTDUESCHON,
				  T1.PLANEMIHALW,
				  T1.PLANEMIHMETHOD,
				  T1.PLANEMIHMAXPERYEAR,
				  T1.PLANEMIHMAX,
				  T1.PLANEMIHLOCKPERIOD,
				  T1.PLANEMICPZ,
				  T1.UNPLANEMIHLOCKPERIOD,
				  T1.UNPLANEMICPZ,
				  T1.REAGECPZ,
				  T1.FDDLOCKPERIOD,
				  T1.ALWDRPYMETHODS,
				  T1.MAXUNPLANNEDEMI,
				  T1.MAXREAGEHOLIDAYS,
				  T1.ROUNDINGMODE,
				  T1.ROUNDINGTARGET,
				  T1.FREQUENCYDAYS,
				  T1.QUICKDISB,
				  T1.ALWREAGE,
				  T1.ALWUNPLANEMIHOLIDAY,
				  T1.ALWMAXDISBCHECKREQ,
				  T1.PRODUCTCATEGORY,
				  T1.RPYHIERARCHY,
				  T1.DEVELOPERFINANCE,
				  T3.ENTITYCODE  LOVDESCENTITYCODE,
				  T8.ENTITYDESC  LOVDESCENTITYDESC,
				  T1.COSTOFFUNDS,
				  T1.CHEQUECAPTUREREQ,
				  T1.FINLTVCHECK,
				  T1.PARTIALLYSECURED,
				  T1.ALWADVEMI,
				  T1.ADVEMIMINTERMS,
				  T1.ADVEMIMAXTERMS,
				  T1.ADVEMIDFTTERMS,
				  T1.ADVEMISCHDMTHD,
				  T1.BPIPFTDAYSBASIS,
				  T1.ELIGIBILITYMETHODS,
				  T1.ALWHYBRIDRATE,
				  T1.FIXEDRATETENOR,
				  T1.ODMINCAPAMOUNT,
				  T1.ODRULECODE,
				  T1.ALWZEROINTACC,
				  T1.FINISALWPARTIALRPY,
				  T1.AUTOREJECTIONDAYS,
				  T1.TAXNOMAND,
				  T1.PUTCALLREQUIRED,
				  T1.GRCADVINTERSETREQ,
				  T1.GRCADVTYPE,
				  T1.GRCADVMINTERMS,
				  T1.GRCADVMAXTERMS,
				  T1.GRCADVDEFAULTTERMS,
				  T1.ADVINTERSETREQ,
				  T1.ADVTYPE,
				  T1.ADVMINTERMS,
				  T1.ADVMAXTERMS,
				  T1.ADVDEFAULTTERMS,
				  T1.ADVSTAGE,
				  T1.DSFREQ,
				  T1.CASHCOLLATERALREQ,
				  T1.ALWEARLYPAYMETHODS,
				  T1.TDSALLOWTOMODIFY,
				  T1.TDSAPPLICABLETO,
				  T1.ALWVAN,
				  T1.VANALLOCATIONMETHOD,
				  T1.ALLOWDRAWINGPOWER,
				  T1.ALLOWREVOLVING,
				  T1.ALWSANCTIONAMT,
				  T1.ALWSANCTIONAMTOVERRIDE,
				  T1.SANBSDSCHDLE,
				  T1.FINISRATERVWATGRCEND,
				  T1.SchdOnPMTCal
				FROM RMTFINANCETYPES T1
				JOIN SMTDIVISIONDETAIL T3 ON T1.FINDIVISION = T3.DIVISIONCODE
				LEFT JOIN STEPPOLICYHEADER T4 ON T1.DFTSTEPPOLICY = T4.POLICYCODE
				LEFT JOIN RULES T5 ON T1.DOWNPAYRULE = T5.RULEID
				LEFT JOIN RULES T6 ON T1.GRCPRICINGMETHOD = T6.RULEID
				LEFT JOIN RULES T7 ON T1.RPYPRICINGMETHOD = T7.RULEID
				LEFT JOIN ENTITY T8 ON T3.ENTITYCODE = T8.ENTITYCODE
		</createView>
	</changeSet>

	<changeSet id="216" author="Durgaprasad G">
		<createView viewName="RMTFINANCETYPES_VIEW"
			replaceIfExists="true">	 	 
			 		  SELECT T1.FINTYPE,
				    T1.FINCATEGORY,
				    T1.FINTYPEDESC,
				    T1.FINCCY,
				    T1.FINDAYSCALTYPE,
				    T1.FINACTYPE,
				    T1.FINCONTINGENTACTYPE,
				    T1.FINISGENREF,
				    T1.FINMAXAMOUNT,
				    T1.FINMINAMOUNT,
				    T1.FINISOPENNEWFINAC,
				    T1.FINDFTSTMTFRQ,
				    T1.FINISALWMD,
				    T1.FINSCHDMTHD,
				    T1.FINISALWGRACE,
				    T1.FINHISTRETENSION,
				    T1.EQUALREPAYMENT,
				    T1.FINRATETYPE,
				    T1.FINBASERATE,
				    T1.FINSPLRATE,
				    T1.FININTRATE,
				    T1.FINMINRATE,
				    T1.FINMAXRATE,
				    T1.FINDFTINTFRQ,
				    T1.FINISINTCPZ,
				    T1.FINCPZFRQ,
				    T1.FINISRVWALW,
				    T1.FINRVWFRQ,
				    T1.FINGRCRATETYPE,
				    T1.FINGRCBASERATE,
				    T1.FINGRCSPLRATE,
				    T1.FINGRCINTRATE,
				    T1.FINGRCMINRATE,
				    T1.FINGRCMAXRATE,
				    T1.FINGRCDFTINTFRQ,
				    T1.FINGRCISINTCPZ,
				    T1.FINGRCCPZFRQ,
				    T1.FINGRCISRVWALW,
				    T1.FINGRCRVWFRQ,
				    T1.FINMINTERM,
				    T1.FINMAXTERM,
				    T1.FINDFTTERMS,
				    T1.FINRPYFRQ,
				    T1.FINREPAYMETHOD,
				    T1.FINISALWPARTIALRPY,
				    T1.FINISALWDIFFERMENT,
				    T1.FINMAXDIFFERMENT,
				    T1.FINISALWEARLYRPY,
				    T1.FINISALWEARLYSETTLE,
				    T1.FINODRPYTRIES,
				    T1.FINEARLYPAYRULE,
				    T1.FINEARLYSETTLERULE,
				    T1.FINDEPOSITRESTRICTEDTO,
				    T1.FINAEBUYORINCEPTION,
				    T1.FINAESELLORMATURITY,
				    T1.FINISACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.STEPFINANCE,
				    T1.STEPPINGMANDATORY,
				    T1.ALWMANUALSTEPS,
				    T1.ALWDSTEPPOLICIES,
				    T1.DFTSTEPPOLICY,
				    T4.ACTYPEDESC  LOVDESCFINCONTINGENTACTYPENAME,
				    T5.ACTYPEDESC  LOVDESCFINACTYPENAME,
				    T1.FINISDWPAYREQUIRED,
				    T1.FINRVWRATEAPPLFOR,
				    T1.FINALWRATECHANGEANYDATE,
				    T1.FINISINTCPZATGRCEND,
				    T1.FINELGRULECODE,
				    T1.LIMITELGRULECODE,
				    T1.FINSCHCALCODEONRVW,
				    T1.ALWPLANDEFERMENT,
				    T1.PLANDEFERCOUNT,
				    T1.FINASSETTYPE,
				    T1.PFTPAYACTYPE,
				    T1.FINISOPENPFTPAYACC,
				    T31.ACTYPEDESC  LOVDESCPFTPAYACTYPENAME,
				    T1.FINISALWGRCREPAY,
				    T1.FINGRCSCHDMTHD,
				    T1.FINGRCMARGIN,
				    T1.FINMARGIN,
				    T1.FINSCHEDULEON,
				    T1.FINGRCSCHEDULEON,
				    T1.FINCOMMITMENTREQ,
				    T1.FINCOLLATERALREQ,
				    T1.FINDEPRECIATIONREQ,
				    T1.FINDEPRECIATIONFRQ,
				    T1.FINBANKCONTINGENTACTYPE,
				    T1.FINPROVISIONACTYPE,
				    T38.ACTYPEDESC  LOVDESCFINBANKCONTACTYPENAME,
				    T39.ACTYPEDESC  LOVDESCFINPROVISIONACTYPENAME,
				    T1.ALLOWRIAINVESTMENT,
				    T1.OVERRIDELIMIT,
				    T1.LIMITREQUIRED,
				    T1.FINCOMMITMENTOVRRIDE,
				    T1.FINCOLLATERALOVRRIDE,
				    T1.FINPFTUNCHANGED,
				    T1.APPLYODPENALTY,
				    T1.ODINCGRCDAYS,
				    T1.ODCHARGETYPE,
				    T1.ODGRACEDAYS,
				    T1.ODCHARGECALON,
				    T1.ODCHARGEAMTORPERC,
				    T1.ODALLOWWAIVER,
				    T1.ODMAXWAIVERPERC,
				    T1.FINDIVISION,
				    T48.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
				    T48.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.FINSUSPACTYPE,
				    T49.ACTYPEDESC  LOVDESCFINSUSPACTYPENAME,
				    T1.PRODUCT,
				    T1.STARTDATE,
				    T1.ENDDATE,
				    T1.ALLOWDOWNPAYPGM,
				    T1.FINTYPEDESC  LOVDESCPROMOFINTYPEDESC,
				    T1.REMARKS,
				    T1.ALWEARLYPAYMETHODS,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.ALWADVANCERENT,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.ROLLOVERFINANCE,
				    T1.ROLLOVERFRQ,
				    T1.DOWNPAYRULE,
				    T59.RULECODE  DOWNPAYRULECODE,
				    T59.RULECODEDESC  DOWNPAYRULEDESC,
				    T1.FINSUSPTRIGGER,
				    T1.FINSUSPREMARKS,
				    T1.ALWMULTIPARTYDISB,
				    T1.COLLATERALTYPE,
				    T1.TDSAPPLICABLE,
				    T1.MANUALSCHEDULE,
				    T1.APPLYGRCPRICING,
				    T1.GRCPRICINGMETHOD,
				    T1.APPLYRPYPRICING,
				    T1.RPYPRICINGMETHOD,
				    T1.RPYHIERARCHY,
				    T67.RULECODE  GRCPRICINGMETHODDESC,
				    T68.RULECODE  RPYPRICINGMETHODDESC,
				    T1.DROPLINEOD,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.FINREPAYPFTONFRQ,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PFTDUESCHON,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.FDDLOCKPERIOD,
				    T1.ALWDRPYMETHODS,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.ROUNDINGMODE,
				    T1.ROUNDINGTARGET,
				    T1.FREQUENCYDAYS,
				    T1.QUICKDISB,
				    T1.ALWMAXDISBCHECKREQ,
				    T1.ALWREAGE,
				    T1.ALWUNPLANEMIHOLIDAY,
				    T1.PROFITCENTERID,
				    T69.PROFITCENTERCODE,
				    T69.PROFITCENTERDESC,
				    T1.PRODUCTCATEGORY,
				    T2.PRODUCTDESC AS FINCATEGORYDESC,
				    T1.DEVELOPERFINANCE,
				    T1.COSTOFFUNDS,
				    T1.CHEQUECAPTUREREQ,
				    T1.FINLTVCHECK,
				    T1.PARTIALLYSECURED,
				    T1.ALWADVEMI,
				    T1.ADVEMIMINTERMS,
				    T1.ADVEMIMAXTERMS,
				    T1.ADVEMIDFTTERMS,
				    T1.ADVEMISCHDMTHD,
				    T1.BPIPFTDAYSBASIS,
				    T1.ELIGIBILITYMETHODS,
				    T1.ALWHYBRIDRATE,
				    T1.FIXEDRATETENOR,
				    T1.ODMINCAPAMOUNT,
				    T1.ODRULECODE,
				    T1.ALWZEROINTACC,
				    T1.AUTOREJECTIONDAYS,
				    T1.TAXNOMAND,
				    T1.PUTCALLREQUIRED,
				    T1.GRCADVINTERSETREQ,
				    T1.GRCADVTYPE,
				    T1.GRCADVMINTERMS,
				    T1.GRCADVMAXTERMS,
				    T1.GRCADVDEFAULTTERMS,
				    T1.ADVINTERSETREQ,
				    T1.ADVTYPE,
				    T1.ADVMINTERMS,
				    T1.ADVMAXTERMS,
				    T1.ADVDEFAULTTERMS,
				    T1.ADVSTAGE,
				    T1.DSFREQ,
				    T1.CASHCOLLATERALREQ,
				    T1.TDSALLOWTOMODIFY,
				    T1.TDSAPPLICABLETO,
				    T1.ALWVAN,
				    T1.VANALLOCATIONMETHOD,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.ALWSANCTIONAMT,
				    T1.ALWSANCTIONAMTOVERRIDE,
				    T1.SANBSDSCHDLE,
				    T1.FINISRATERVWATGRCEND,
				    T1.SchdOnPMTCal
				   FROM RMTFINANCETYPES_TEMP T1
				     LEFT JOIN BMTPRODUCT T2 ON T1.FINCATEGORY = T2.PRODUCTCODE
				     LEFT JOIN RMTACCOUNTTYPES T4 ON T1.FINCONTINGENTACTYPE = T4.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T38 ON T1.FINBANKCONTINGENTACTYPE = T38.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T39 ON T1.FINPROVISIONACTYPE = T39.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T5 ON T1.FINACTYPE = T5.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T31 ON T1.PFTPAYACTYPE = T31.ACTYPE
				     LEFT JOIN SMTDIVISIONDETAIL T48 ON T1.FINDIVISION = T48.DIVISIONCODE
				     LEFT JOIN RMTACCOUNTTYPES T49 ON T1.FINSUSPACTYPE = T49.ACTYPE
				     LEFT JOIN RULES T59 ON T1.DOWNPAYRULE = T59.RULEID
				     LEFT JOIN RULES T67 ON T1.GRCPRICINGMETHOD = T67.RULEID
				     LEFT JOIN RULES T68 ON T1.RPYPRICINGMETHOD = T68.RULEID
				     LEFT JOIN PROFITCENTERS T69 ON T69.PROFITCENTERID = T1.PROFITCENTERID
				UNION ALL
				 SELECT T1.FINTYPE,
				    T1.FINCATEGORY,
				    T1.FINTYPEDESC,
				    T1.FINCCY,
				    T1.FINDAYSCALTYPE,
				    T1.FINACTYPE,
				    T1.FINCONTINGENTACTYPE,
				    T1.FINISGENREF,
				    T1.FINMAXAMOUNT,
				    T1.FINMINAMOUNT,
				    T1.FINISOPENNEWFINAC,
				    T1.FINDFTSTMTFRQ,
				    T1.FINISALWMD,
				    T1.FINSCHDMTHD,
				    T1.FINISALWGRACE,
				    T1.FINHISTRETENSION,
				    T1.EQUALREPAYMENT,
				    T1.FINRATETYPE,
				    T1.FINBASERATE,
				    T1.FINSPLRATE,
				    T1.FININTRATE,
				    T1.FINMINRATE,
				    T1.FINMAXRATE,
				    T1.FINDFTINTFRQ,
				    T1.FINISINTCPZ,
				    T1.FINCPZFRQ,
				    T1.FINISRVWALW,
				    T1.FINRVWFRQ,
				    T1.FINGRCRATETYPE,
				    T1.FINGRCBASERATE,
				    T1.FINGRCSPLRATE,
				    T1.FINGRCINTRATE,
				    T1.FINGRCMINRATE,
				    T1.FINGRCMAXRATE,
				    T1.FINGRCDFTINTFRQ,
				    T1.FINGRCISINTCPZ,
				    T1.FINGRCCPZFRQ,
				    T1.FINGRCISRVWALW,
				    T1.FINGRCRVWFRQ,
				    T1.FINMINTERM,
				    T1.FINMAXTERM,
				    T1.FINDFTTERMS,
				    T1.FINRPYFRQ,
				    T1.FINREPAYMETHOD,
				    T1.FINISALWPARTIALRPY,
				    T1.FINISALWDIFFERMENT,
				    T1.FINMAXDIFFERMENT,
				    T1.FINISALWEARLYRPY,
				    T1.FINISALWEARLYSETTLE,
				    T1.FINODRPYTRIES,
				    T1.FINEARLYPAYRULE,
				    T1.FINEARLYSETTLERULE,
				    T1.FINDEPOSITRESTRICTEDTO,
				    T1.FINAEBUYORINCEPTION,
				    T1.FINAESELLORMATURITY,
				    T1.FINISACTIVE,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T1.STEPFINANCE,
				    T1.STEPPINGMANDATORY,
				    T1.ALWMANUALSTEPS,
				    T1.ALWDSTEPPOLICIES,
				    T1.DFTSTEPPOLICY,
				    T4.ACTYPEDESC  LOVDESCFINCONTINGENTACTYPENAME,
				    T5.ACTYPEDESC  LOVDESCFINACTYPENAME,
				    T1.FINISDWPAYREQUIRED,
				    T1.FINRVWRATEAPPLFOR,
				    T1.FINALWRATECHANGEANYDATE,
				    T1.FINISINTCPZATGRCEND,
				    T1.FINELGRULECODE,
				    T1.LIMITELGRULECODE,
				    T1.FINSCHCALCODEONRVW,
				    T1.ALWPLANDEFERMENT,
				    T1.PLANDEFERCOUNT,
				    T1.FINASSETTYPE,
				    T1.PFTPAYACTYPE,
				    T1.FINISOPENPFTPAYACC,
				    T31.ACTYPEDESC  LOVDESCPFTPAYACTYPENAME,
				    T1.FINISALWGRCREPAY,
				    T1.FINGRCSCHDMTHD,
				    T1.FINGRCMARGIN,
				    T1.FINMARGIN,
				    T1.FINSCHEDULEON,
				    T1.FINGRCSCHEDULEON,
				    T1.FINCOMMITMENTREQ,
				    T1.FINCOLLATERALREQ,
				    T1.FINDEPRECIATIONREQ,
				    T1.FINDEPRECIATIONFRQ,
				    T1.FINBANKCONTINGENTACTYPE,
				    T1.FINPROVISIONACTYPE,
				    T38.ACTYPEDESC  LOVDESCFINBANKCONTACTYPENAME,
				    T39.ACTYPEDESC  LOVDESCFINPROVISIONACTYPENAME,
				    T1.ALLOWRIAINVESTMENT,
				    T1.OVERRIDELIMIT,
				    T1.LIMITREQUIRED,
				    T1.FINCOMMITMENTOVRRIDE,
				    T1.FINCOLLATERALOVRRIDE,
				    T1.FINPFTUNCHANGED,
				    T1.APPLYODPENALTY,
				    T1.ODINCGRCDAYS,
				    T1.ODCHARGETYPE,
				    T1.ODGRACEDAYS,
				    T1.ODCHARGECALON,
				    T1.ODCHARGEAMTORPERC,
				    T1.ODALLOWWAIVER,
				    T1.ODMAXWAIVERPERC,
				    T1.FINDIVISION,
				    T48.DIVISIONCODEDESC  LOVDESCFINDIVISIONNAME,
				    T48.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.FINSUSPACTYPE,
				    T49.ACTYPEDESC  LOVDESCFINSUSPACTYPENAME,
				    T1.PRODUCT,
				    T1.STARTDATE,
				    T1.ENDDATE,
				    T1.ALLOWDOWNPAYPGM,
				    T1.FINTYPEDESC  LOVDESCPROMOFINTYPEDESC,
				    T1.REMARKS,
				    T1.ALWEARLYPAYMETHODS,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.ALWADVANCERENT,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.ROLLOVERFINANCE,
				    T1.ROLLOVERFRQ,
				    T1.DOWNPAYRULE,
				    T59.RULECODE  DOWNPAYRULECODE,
				    T59.RULECODEDESC  DOWNPAYRULEDESC,
				    T1.FINSUSPTRIGGER,
				    T1.FINSUSPREMARKS,
				    T1.ALWMULTIPARTYDISB,
				    T1.COLLATERALTYPE,
				    T1.TDSAPPLICABLE,
				    T1.MANUALSCHEDULE,
				    T1.APPLYGRCPRICING,
				    T1.GRCPRICINGMETHOD,
				    T1.APPLYRPYPRICING,
				    T1.RPYPRICINGMETHOD,
				    T1.RPYHIERARCHY,
				    T67.RULECODE  GRCPRICINGMETHODDESC,
				    T68.RULECODE  RPYPRICINGMETHODDESC,
				    T1.DROPLINEOD,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.FINREPAYPFTONFRQ,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PFTDUESCHON,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.FDDLOCKPERIOD,
				    T1.ALWDRPYMETHODS,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.ROUNDINGMODE,
				    T1.ROUNDINGTARGET,
				    T1.FREQUENCYDAYS,
				    T1.QUICKDISB,
				    T1.ALWMAXDISBCHECKREQ,
				    T1.ALWREAGE,
				    T1.ALWUNPLANEMIHOLIDAY,
				    T1.PROFITCENTERID,
				    T69.PROFITCENTERCODE,
				    T69.PROFITCENTERDESC,
				    T1.PRODUCTCATEGORY,
				    T2.PRODUCTDESC  FINCATEGORYDESC,
				    T1.DEVELOPERFINANCE,
				    T1.COSTOFFUNDS,
				    T1.CHEQUECAPTUREREQ,
				    T1.FINLTVCHECK,
				    T1.PARTIALLYSECURED,
				    T1.ALWADVEMI,
				    T1.ADVEMIMINTERMS,
				    T1.ADVEMIMAXTERMS,
				    T1.ADVEMIDFTTERMS,
				    T1.ADVEMISCHDMTHD,
				    T1.BPIPFTDAYSBASIS,
				    T1.ELIGIBILITYMETHODS,
				    T1.ALWHYBRIDRATE,
				    T1.FIXEDRATETENOR,
				    T1.ODMINCAPAMOUNT,
				    T1.ODRULECODE,
				    T1.ALWZEROINTACC,
				    T1.AUTOREJECTIONDAYS,
				    T1.TAXNOMAND,
				    T1.PUTCALLREQUIRED,
				    T1.GRCADVINTERSETREQ,
				    T1.GRCADVTYPE,
				    T1.GRCADVMINTERMS,
				    T1.GRCADVMAXTERMS,
				    T1.GRCADVDEFAULTTERMS,
				    T1.ADVINTERSETREQ,
				    T1.ADVTYPE,
				    T1.ADVMINTERMS,
				    T1.ADVMAXTERMS,
				    T1.ADVDEFAULTTERMS,
				    T1.ADVSTAGE,
				    T1.DSFREQ,
				    T1.CASHCOLLATERALREQ,
				    T1.TDSALLOWTOMODIFY,
				    T1.TDSAPPLICABLETO,
				    T1.ALWVAN,
				    T1.VANALLOCATIONMETHOD,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.ALWSANCTIONAMT,
				    T1.ALWSANCTIONAMTOVERRIDE,
				    T1.SANBSDSCHDLE,
				    T1.FINISRATERVWATGRCEND,
				    T1.SchdOnPMTCal
				   FROM RMTFINANCETYPES T1
				     LEFT JOIN BMTPRODUCT T2 ON T1.FINCATEGORY = T2.PRODUCTCODE
				     LEFT JOIN RMTACCOUNTTYPES T4 ON T1.FINCONTINGENTACTYPE = T4.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T38 ON T1.FINBANKCONTINGENTACTYPE = T38.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T39 ON T1.FINPROVISIONACTYPE = T39.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T5 ON T1.FINACTYPE = T5.ACTYPE
				     LEFT JOIN RMTACCOUNTTYPES T31 ON T1.PFTPAYACTYPE = T31.ACTYPE
				     LEFT JOIN SMTDIVISIONDETAIL T48 ON T1.FINDIVISION = T48.DIVISIONCODE
				     LEFT JOIN RMTACCOUNTTYPES T49 ON T1.FINSUSPACTYPE = T49.ACTYPE
				     LEFT JOIN RULES T59 ON T1.DOWNPAYRULE = T59.RULEID
				     LEFT JOIN RULES T67 ON T1.GRCPRICINGMETHOD = T67.RULEID
				     LEFT JOIN RULES T68 ON T1.RPYPRICINGMETHOD = T68.RULEID
				     LEFT JOIN PROFITCENTERS T69 ON T69.PROFITCENTERID = T1.PROFITCENTERID
				  WHERE NOT (EXISTS ( SELECT 1 AS EXPR1  FROM RMTFINANCETYPES_TEMP WHERE RMTFINANCETYPES_TEMP.FINTYPE = T1.FINTYPE)) 
		  </createView>
	</changeSet>

	<changeSet id="217" author="meena.a">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='COMMITE_ADDTNAL_FIELDS_REQ';
			   	INSERT INTO SMTPARAMETERS VALUES ('COMMITE_ADDTNAL_FIELDS_REQ','commite additional fields required or not','String',1,'N',1,0,null,null,'commite fields req only for kotak' ,3,1000,current_Timestamp,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="218" author="prabhakar.g">
		<sql>
			<![CDATA[			
			INSERT INTO SMTparameters  VALUES ('ALLOW_LIMIT_NOTIFICATION', 'Allow Limit Notification', 'String', '1', 'N', 1, 0,
			NULL, NULL, 'Allow Limit Notification.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="219" author="vijaya.a">
		<comment>This script alrdy excutd in Clix,Plsdont execute this script in clix and mark it as executed in clix</comment>
		<modifyDataType tableName="PRESENTMENT_FILEIMPORT"
			columnName="reasoncode" newDataType="varchar(100)" />
	</changeSet>

	<changeSet id="220" author="vijaya.a">
		<comment>This script alrdy excutd in Clix,Plsdont execute this script in clix and mark it as executed in clix</comment>
		<modifyDataType tableName="PRESENTMENT_FILEIMPORT"
			columnName="batchid" newDataType="varchar(50)" />
	</changeSet>

	<changeSet id="221" author="vijaya.a">
		<comment>This script alrdy excutd in Clix,Plsdont execute this script in clix and mark it as executed in clix</comment>
		<addColumn tableName="PRESENTMENT_FILEIMPORT">
			<column name="debit_credit_flag" type="char(1)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="222" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="OLD_MANDATE_REG_NO" type="varchar(25)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="223" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="RE_LODGE_REJECT_REASON" type="varchar(1000)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="224" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="AMOUNT_TYPE" type="char(1)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="225" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="PRESEMENT_MODE" type="varchar(20)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="226" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="HOST_BATCH_ID" type="bigint"></column>
		</addColumn>
	</changeSet>

	<changeSet id="227" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="HOST_REFERENCE" type="bigint"></column>
		</addColumn>
	</changeSet>

	<changeSet id="228" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="RE_LODGE_DATE" type="datetime"></column>
		</addColumn>
	</changeSet>

	<changeSet id="229" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="REGISTERED_BY" type="varchar(20)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="230" author="Saikiran.V" dbms="postgresql,oracle">
		<createView viewName="FinanceMaintenance_View"
			replaceIfExists="true">
			SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID,
			t1.SvAmount,
			t1.CBAmount,
		  t1.RepayPftFrq
		   FROM financemain_temp t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		UNION ALL
		 SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID,
			t1.SvAmount,
			t1.CBAmount,
		  t1.RepayPftFrq
		   FROM financemain t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		  WHERE NOT (EXISTS ( SELECT 1 AS expr1
		           FROM financemain_temp
		          WHERE financemain_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="230" author="Saikiran.V" dbms="mssql">
		<createView viewName="FinanceMaintenance_View"
			replaceIfExists="true">
			SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID,
			t1.SvAmount,
			t1.CBAmount,
		  t1.RepayPftFrq
		   FROM financemain_temp t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		UNION ALL
		 SELECT t1.finreference,
		    t1.finbranch,
		    t1.fintype,
		    t1.finccy,
		    t1.schedulemethod,
		    t1.profitdaysbasis,
		    t1.finstartdate,
		    t1.numberofterms,
		    t1.custid,
		    t1.finamount,
		    t1.maturitydate,
		    t1.finrepaymentamount,
		    t1.finisactive,
		    t1.blacklisted,
		    t1.feechargeamt,
		    t1.insuranceamt,
		    t1.graceterms,
		    t1.allowgrcperiod,
		    t1.grcperiodenddate,
		    t1.alwmultidisb,
		    t1.defferments,
		    t1.nextrolecode,
		    t1.recordstatus,
		    t1.recordtype,
		    t1.allowgrcpftrvw,
		    t1.allowrepayrvw,
		    t1.lastrepaydate,
		    t1.lastrepaypftdate,
		    t1.alloweddefrpychange,
		    t1.availeddefrpychange,
		    t1.rcdmaintainsts,
		    t1.migratedfinance,
		    t1.closingstatus,
		    t1.repayratebasis,
		    t1.manualschedule,
		    t1.fincurrassetvalue,
		    t1.takeoverfinance,
		    t1.nextrolloverdate,
		    t1.availedunplanemi,
		    t1.availedreageh,
		    t1.maxunplannedemi,
		    t1.maxreageholidays,
		    t1.downpayment,
		    t1.planemihalw,
		    t1.calterms,
		    t1.ratechganyday,
		    t1.finassetvalue,
		    t2.custcif AS lovdesccustcif,
		    t3.finisalwdifferment AS lovdescfinalwdeferment,
		    t3.findivision AS lovdescfindivision,
		    t3.fincategory AS lovdescproductcodename,
		    t4.productcategory,
		    COALESCE(t5.roledesc, dbo.fn_get_roledesc(t1.nextrolecode)) AS lovdescrequeststage,
		    COALESCE(t9.noinst, 0) AS noinst,
		    t1.samplingrequired,
		    t1.advemiterms,
		    t1.sanbsdschdle,
			t1.PromotionSeqID,
			t1.SvAmount,
			t1.CBAmount,
		  t1.RepayPftFrq
		   FROM financemain t1
		     JOIN customers t2 ON t1.custid = t2.custid
		     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
		     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
		     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
		     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
		  WHERE NOT (EXISTS ( SELECT 1 AS expr1
		           FROM financemain_temp
		          WHERE financemain_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="231" author="Durgaprasad G">
		<sql>
			<![CDATA[			
			 	Update FINANCEMAIN set SanBsdSchdle = 0 Where SanBsdSchdle is null;
			 	Update FINANCEMAIN set PromotionSeqID = 0 Where PromotionSeqID is null;
			 	
			 	Update FINANCEMAIN_PA set SanBsdSchdle = 0 Where SanBsdSchdle is null;
			 	Update FINANCEMAIN_PA set PromotionSeqID = 0 Where PromotionSeqID is null;
			 	
			 	Update FINANCEMAIN_TEMP set SanBsdSchdle = 0 Where SanBsdSchdle is null;
			 	Update FINANCEMAIN_TEMP set PromotionSeqID = 0 Where PromotionSeqID is null;
			 	
			 	Update REJECTFINANCEMAIN set SanBsdSchdle = 0 Where SanBsdSchdle is null;
			 	Update REJECTFINANCEMAIN set PromotionSeqID = 0 Where PromotionSeqID is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="232_pre" author="Durgaprasad G" dbms="mssql">
		<sql>
			<![CDATA[

				alter table FINANCEMAIN drop constraint DF_FINANCEMAIN_SanBsdSchdle;
				alter table FINANCEMAIN drop constraint DF_FINANCEMAIN_PromotionSeqID;
				
				alter table FINANCEMAIN_PA drop constraint DF_FINANCEMAIN_PA_SanBsdSchdle;
				alter table FINANCEMAIN_PA drop constraint DF_FINANCEMAIN_PA_PromotionSeqID;
				
				alter table FINANCEMAIN_TEMP drop constraint DF_FINANCEMAIN_TEMP_SanBsdSchdle;
				alter table FINANCEMAIN_TEMP drop constraint DF_FINANCEMAIN_TEMP_PromotionSeqID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="232" author="Durgaprasad G" dbms="mssql">
		<sql>
			<![CDATA[	
			 	ALTER TABLE FINANCEMAIN ADD CONSTRAINT DF_FINANCEMAIN_SNBSDSCHD DEFAULT 0 FOR SANBSDSCHDLE;
				ALTER TABLE FINANCEMAIN ADD CONSTRAINT DF_FINANCEMAIN_PRMTNSQID DEFAULT 0 FOR PROMOTIONSEQID;
							
				ALTER TABLE FINANCEMAIN_PA ADD CONSTRAINT DF_FINANCEMAIN_P_SNBSDSCHD DEFAULT 0 FOR SANBSDSCHDLE;
				ALTER TABLE FINANCEMAIN_PA ADD CONSTRAINT DF_FINANCEMAIN_P_PRMTNSQID DEFAULT 0 FOR PROMOTIONSEQID;			
							
				ALTER TABLE FINANCEMAIN_TEMP ADD CONSTRAINT DF_FINANCEMAIN_T_SNBSDSCHD DEFAULT 0 FOR SANBSDSCHDLE;
				ALTER TABLE FINANCEMAIN_TEMP ADD CONSTRAINT DF_FINANCEMAIN_T_PRMTNSQID DEFAULT 0 FOR PROMOTIONSEQID;
			]]>
		</sql>
	</changeSet>

	<changeSet id="233" author="Durgaprasad G" dbms="postgresql, oracle">
		<addDefaultValue columnName="SANBSDSCHDLE" tableName="FINANCEMAIN"
			defaultValue="0" />
		<addDefaultValue columnName="PROMOTIONSEQID"
			tableName="FINANCEMAIN" defaultValue="0" />

		<addDefaultValue columnName="SANBSDSCHDLE" tableName="FINANCEMAIN_PA"
			defaultValue="0" />
		<addDefaultValue columnName="PROMOTIONSEQID"
			tableName="FINANCEMAIN_PA" defaultValue="0" />

		<addDefaultValue columnName="SANBSDSCHDLE" tableName="FINANCEMAIN_TEMP"
			defaultValue="0" />
		<addDefaultValue columnName="PROMOTIONSEQID"
			tableName="FINANCEMAIN_TEMP" defaultValue="0" />
	</changeSet>

	<changeSet id="234" author="Saikiran.V">
		<sql>
			<![CDATA[
				DELETE FROM SMTPARAMETERS WHERE SYSPARMCODE='ALLOW_DOCUMENTTYPE_XLS_REQ';
				INSERT INTO SMTPARAMETERS VALUES ('ALLOW_DOCUMENTTYPE_XLS_REQ','IS Document Type CSV,Xls,xlsx Allowed Or Not','String',1,'N',1,0,null,null,'IS Document Type CSV Xls xlsx Allowed Or Not' ,3,1000,current_Timestamp,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="235" author="Varaprasad.K">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		
				delete FROM SecRights where RightName='menuItem_AdviseUpload';
				delete FROM SecRights where RightName='button_UploadList_NewAdviseUpload';
				delete FROM SecRights where RightName='button_AdviseUploadDialog_btnDelete';
				delete FROM SecRights where RightName='button_AdviseUploadDialog_btnSave';
				delete FROM SecRights where RightName='button_AdviseUploadDialog_btnBrowse';
				delete FROM SecRights where RightName='AdviseUploadDialog_txtFileName';
				delete FROM SecRights where RightName='AdviseUploadDialog_uploadEntity';
		
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_AdviseUpload','MENU',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_UploadList_NewAdviseUpload','UploadList',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_AdviseUploadDialog_btnDelete','AdviseUploadDialog',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_AdviseUploadDialog_btnSave','AdviseUploadDialog',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_AdviseUploadDialog_btnBrowse','AdviseUploadDialog',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AdviseUploadDialog_txtFileName','AdviseUploadDialog',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0			FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'AdviseUploadDialog_uploadEntity','AdviseUploadDialog',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="236" author="Varaprasad.K">
		<sql>
			<![CDATA[
				INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'UPLOAD_MANUALADVISE_MAKER', 'Manual advise upload maker', 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECGROUPS WHERE 0=0;
				INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'UPLOAD_MANUALADVISE_APPROVER', 'Manual advise upload approver', 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECGROUPS WHERE 0=0;
			]]>
		</sql>
	</changeSet>

	<changeSet id="237" author="Varaprasad.K">
		<sql>
		    <![CDATA[
					UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_UploadList_NewAdviseUpload');
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_AdviseUpload');
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AdviseUploadDialog_btnSave');
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AdviseUploadDialog_btnBrowse');
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AdviseUploadDialog_txtFileName');
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AdviseUploadDialog_uploadEntity');
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_APPROVER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AdviseUploadDialog_btnSave');
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_APPROVER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_AdviseUpload');
					
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_UploadList_NewAdviseUpload'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_AdviseUpload'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AdviseUploadDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AdviseUploadDialog_btnBrowse'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AdviseUploadDialog_txtFileName'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='AdviseUploadDialog_uploadEntity'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_AdviseUploadDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='UPLOAD_MANUALADVISE_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_AdviseUpload'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					
					UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="238" author="Varaprasad.K">
		<sql>
		    <![CDATA[
					INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId From SecGroups Where GrpCode='UPLOAD_MANUALADVISE_MAKER'), (Select RoleID From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
					INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId From SecGroups Where GrpCode='UPLOAD_MANUALADVISE_APPROVER'), (Select RoleID From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="239" author="Varaprasad.K">
		<createTable tableName="AdviseUploads">
			<column name="AdviseId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="UploadId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)" />
			<column name="AdviseType" type="char(1)" />
			<column name="FeeTypeCode" type="varchar(8)" />
			<column name="ValueDate" type="datetime" />
			<column name="AdviseAmount" type="decimal(18,0)" defaultValue="0" />
			<column name="Remarks" type="varchar(100)" />
			<column name="Status" type="char(1)" />
			<column name="Reason" type="varchar(500)" />
			<column name="RejectStage" type="varchar(50)" />
			<column name="ManualAdviseId" type="bigint" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="240" author="Varaprasad.K">
		<createTable tableName="AdviseUploads_Temp">
			<column name="AdviseId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="UploadId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)" />
			<column name="AdviseType" type="char(1)" />
			<column name="FeeTypeCode" type="varchar(8)" />
			<column name="ValueDate" type="datetime" />
			<column name="AdviseAmount" type="decimal(18, 0)" />
			<column name="Remarks" type="varchar(100)" />
			<column name="Status" type="char(1)" />
			<column name="Reason" type="varchar(500)" />
			<column name="RejectStage" type="varchar(50)" />
			<column name="ManualAdviseId" type="bigint" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="241" author="Varaprasad.K">
		<addPrimaryKey constraintName="PK_AdviseId" tableName="AdviseUploads"
			columnNames="AdviseId" />
		<addPrimaryKey constraintName="PK_AdviseId_Temp_ID"
			tableName="AdviseUploads_Temp" columnNames="AdviseId" />
	</changeSet>

	<changeSet id="242_pre" author="Durgaprasad G" dbms="mssql">
		<sql>
			<![CDATA[	
			    ALTER TABLE AdviseUploads_Temp ADD CONSTRAINT DF_AdviseUploads_T_AdviseAmnt DEFAULT 0 FOR AdviseAmount;
			 	ALTER TABLE AdviseUploads ADD CONSTRAINT DF_AdviseUploads_WorkFlowId DEFAULT 0 FOR WorkFlowId;
				ALTER TABLE AdviseUploads_Temp ADD CONSTRAINT DF_AdviseUploads_T_WorkFlowId DEFAULT 0 FOR WorkFlowId;
			
			]]>
		</sql>
	</changeSet>

	<changeSet id="242_pre" author="Durgaprasad G" dbms="postgresql, oracle">
		<addDefaultValue columnName="AdviseAmount" tableName="AdviseUploads_Temp"
			defaultValue="0" />
		<addDefaultValue columnName="WorkFlowId" tableName="AdviseUploads"
			defaultValue="0" />
		<addDefaultValue columnName="WorkFlowId" tableName="AdviseUploads_Temp"
			defaultValue="0" />
	</changeSet>

	<changeSet id="242" author="Varaprasad.K">
		<createSequence sequenceName="SeqAdviseUploads"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="243" author="Varaprasad">
		<createView viewName="AdviseUploads_AView" replaceIfExists="true">
			SELECT
			  T1.AdviseId,
			  T1.UploadId,
			  T1.FinReference,
			  T1.AdviseType,
			  T1.FeeTypeCode,
			  T1.ValueDate,
			  T1.AdviseAmount,
			  T1.Remarks,
			  T1.Status,
			  T1.Reason,
			  T1.Version,
			  T1.LastMntBy,
			  T1.LastMntOn,
			  T1.RecordStatus,
			  T1.RoleCode,
			  T1.NextRoleCode,
			  T1.TaskId,
			  T1.NextTaskId,
			  T1.RecordType,
			  T1.WorkflowId,
			  T2.FEETYPEID FEETYPEID,
			  T1.RejectStage
			FROM
			  AdviseUploads T1
			LEFT JOIN FeeTypes T2 ON T2.FeetypeCode = T1.FEETYPECODE
		</createView>
	</changeSet>

	<changeSet id="244" author="Varaprasad.K">
		<createView viewName="AdviseUploads_TView" replaceIfExists="true">
			SELECT
			  T1.AdviseId,
			  T1.UploadId,
			  T1.FinReference,
			  T1.AdviseType,
			  T1.FeeTypeCode,
			  T1.ValueDate,
			  T1.AdviseAmount,
			  T1.Remarks,
			  T1.Status,
			  T1.Reason,
			  T1.Version,
			  T1.LastMntBy,
			  T1.LastMntOn,
			  T1.RecordStatus,
			  T1.RoleCode,
			  T1.NextRoleCode,
			  T1.TaskId,
			  T1.NextTaskId,
			  T1.RecordType,
			  T1.WorkflowId,
			  T2.FEETYPEID FEETYPEID,
			  T1.RejectStage
			FROM
			  AdviseUploads_temp T1
			LEFT JOIN FeeTypes T2 ON T2.FeetypeCode = T1.FEETYPECODE
		</createView>
	</changeSet>

	<changeSet id="245" author="Varaprasad.K">
		<createView viewName="AdviseUploads_View" replaceIfExists="true">
			SELECT
				  T1.AdviseId,
				  T1.UploadId,
				  T1.FinReference,
				  T1.AdviseType,
				  T1.FeeTypeCode,
				  T1.ValueDate,
				  T1.AdviseAmount,
				  T1.Remarks,
				  T1.Status,
				  T1.Reason,
				  T1.Version,
				  T1.LastMntBy,
				  T1.LastMntOn,
				  T1.RecordStatus,
				  T1.RoleCode,
				  T1.NextRoleCode,
				  T1.TaskId,
				  T1.NextTaskId,
				  T1.RecordType,
				  T1.WorkflowId,
				  T2.FEETYPEID FEETYPEID,
				  T1.RejectStage
				FROM
				  AdviseUploads_temp T1 
				  LEFT JOIN FeeTypes T2 ON T2.FeetypeCode = T1.FEETYPECODE
				UNION ALL
				SELECT
				  T1.AdviseId,
				  T1.UploadId,
				  T1.FinReference,
				  T1.AdviseType,
				  T1.FeeTypeCode,
				  T1.ValueDate,
				  T1.AdviseAmount,
				  T1.Remarks,
				  T1.Status,
				  T1.Reason,
				  T1.Version,
				  T1.LastMntBy,
				  T1.LastMntOn,
				  T1.RecordStatus,
				  T1.RoleCode,
				  T1.NextRoleCode,
				  T1.TaskId,
				  T1.NextTaskId,
				  T1.RecordType,
				  T1.WorkflowId,
				  T2.FEETYPEID FEETYPEID,
				  T1.RejectStage
				FROM
				  AdviseUploads T1
				LEFT JOIN FeeTypes T2 ON T2.FeetypeCode = T1.FEETYPECODE
				WHERE NOT EXISTS ( SELECT 1 FROM AdviseUploads_temp WHERE FinReference = T1.FinReference)
			</createView>
	</changeSet>


	<changeSet id="246" author="Varaprasad.K">
		<addColumn tableName="ManualAdvise">
			<column name="FinSource" type="varchar(8)" defaultValue="PFF">
				<constraints nullable="false" />
			</column>
		</addColumn>
	</changeSet>

	<changeSet id="247" author="Varaprasad.K">
		<addColumn tableName="ManualAdvise_Temp">
			<column name="FinSource" type="varchar(8)" defaultValue="PFF">
				<constraints nullable="false" />
			</column>
		</addColumn>
	</changeSet>
	<changeSet id="248_pre" author="Durgaprasad G" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'manualadvise_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="248" author="Varaprasad.K">
		<comment>FinSource column added</comment>
		<createView viewName="MANUALADVISE_AVIEW" replaceIfExists="true">
		 SELECT t1.adviseid,
		    t1.advisetype,
		    t1.finreference,
		    t1.feetypeid,
		    t1.sequence,
		    t1.adviseamount,
		    t1.paidamount,
		    t1.waivedamount,
		    t1.remarks,
		    t1.valuedate,
		    t1.postdate,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.feetypedesc,
		    t2.feetypecode,
		    t1.bounceid,
		    t1.receiptid,
		    t3.bouncecode,
		    t1.reservedamt,
		    t1.balanceamt,
		    t3.reason AS bouncecodedesc,
		    COALESCE(t2.taxapplicable, 0) AS taxapplicable,
		    t2.taxcomponent,
		    t1.paidcgst,
		    t1.paidsgst,
		    t1.paidigst,
		    t1.paidugst,
		    t1.waivedcgst,
		    t1.waivedsgst,
		    t1.waivedugst,
		    t1.waivedigst,
		    t1.waivedcess,
		    t1.paidcess,
			t1.finSource
		   FROM manualadvise t1
		     LEFT JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
		     LEFT JOIN bouncereasons t3 ON t1.bounceid = t3.bounceid
	</createView>
	</changeSet>
	<changeSet id="248_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'manualadvise_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="249" author="Varaprasad.K">
		<comment>FinSource column added</comment>
		<createView viewName="MANUALADVISE_LVIEW" replaceIfExists="true">
	    SELECT t1.adviseid,
		    t1.advisetype,
		    t1.finreference,
		    t1.feetypeid,
		    t1.sequence,
		    t1.adviseamount,
		    t1.paidamount,
		    t1.waivedamount,
		    t1.remarks,
		    t1.valuedate,
		    t1.postdate,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.feetypedesc,
		    t2.feetypecode,
		    t1.bounceid,
		    t1.receiptid,
		    t3.bouncecode,
		    t1.reservedamt,
		    t1.balanceamt,
		    t3.reason AS bouncecodedesc,
		    COALESCE(t2.taxapplicable, 0) AS taxapplicable,
		    t2.taxcomponent,
		    t1.paidcgst,
		    t1.paidsgst,
		    t1.paidigst,
		    t1.paidugst,
		    t1.waivedcgst,
		    t1.waivedsgst,
		    t1.waivedugst,
		    t1.waivedigst,
			t1.finSource
		   FROM manualadvise t1
		     LEFT JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
		     LEFT JOIN bouncereasons t3 ON t1.bounceid = t3.bounceid
	</createView>
	</changeSet>

	<changeSet id="250" author="Varaprasad.K">
		<comment>FinSource column added</comment>
		<createView viewName="MANUALADVISE_TVIEW" replaceIfExists="true">
	    SELECT t1.adviseid,
		    t1.advisetype,
		    t1.finreference,
		    t1.feetypeid,
		    t1.sequence,
		    t1.adviseamount,
		    t1.paidamount,
		    t1.waivedamount,
		    t1.remarks,
		    t1.valuedate,
		    t1.postdate,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.feetypedesc,
		    t2.feetypecode,
		    t1.bounceid,
		    t1.receiptid,
		    t3.bouncecode,
		    t1.reservedamt,
		    t1.balanceamt,
		    t3.reason AS bouncecodedesc,
		    COALESCE(t2.taxapplicable, 0) AS taxapplicable,
		    t2.taxcomponent,
		    t1.paidcgst,
		    t1.paidsgst,
		    t1.paidigst,
		    t1.paidugst,
		    t1.waivedcgst,
		    t1.waivedsgst,
		    t1.waivedugst,
		    t1.waivedigst,
		    t1.waivedcess,
		    t1.paidcess,
			T1.FinSource
		   FROM manualadvise_temp t1
		     LEFT JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
		     LEFT JOIN bouncereasons t3 ON t1.bounceid = t3.bounceid
	</createView>
	</changeSet>

	<changeSet id="251" author="Varaprasad.K">
		<comment>FinSource column added</comment>
		<createView viewName="MANUALADVISE_VIEW" replaceIfExists="true">
	    SELECT t1.adviseid,
		    t1.advisetype,
		    t1.finreference,
		    t1.feetypeid,
		    t1.sequence,
		    t1.adviseamount,
		    t1.paidamount,
		    t1.waivedamount,
		    t1.remarks,
		    t1.valuedate,
		    t1.postdate,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.feetypedesc,
		    t2.feetypecode,
		    t1.bounceid,
		    t1.receiptid,
		    t3.bouncecode,
		    t1.reservedamt,
		    t1.balanceamt,
		    t3.reason AS bouncecodedesc,
		    COALESCE(t2.taxapplicable, 0) AS taxapplicable,
		    t2.taxcomponent,
		    t1.paidcgst,
		    t1.paidsgst,
		    t1.paidigst,
		    t1.paidugst,
		    t1.waivedcgst,
		    t1.waivedsgst,
		    t1.waivedugst,
		    t1.waivedigst,
		    t1.waivedcess,
		    t1.paidcess,
			T1.FinSource
		   FROM manualadvise_temp t1
		     LEFT JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
		     LEFT JOIN bouncereasons t3 ON t1.bounceid = t3.bounceid
		UNION ALL
		 SELECT t1.adviseid,
		    t1.advisetype,
		    t1.finreference,
		    t1.feetypeid,
		    t1.sequence,
		    t1.adviseamount,
		    t1.paidamount,
		    t1.waivedamount,
		    t1.remarks,
		    t1.valuedate,
		    t1.postdate,
		    t1.version,
		    t1.lastmntby,
		    t1.lastmnton,
		    t1.recordstatus,
		    t1.rolecode,
		    t1.nextrolecode,
		    t1.taskid,
		    t1.nexttaskid,
		    t1.recordtype,
		    t1.workflowid,
		    t2.feetypedesc,
		    t2.feetypecode,
		    t1.bounceid,
		    t1.receiptid,
		    t3.bouncecode,
		    t1.reservedamt,
		    t1.balanceamt,
		    t3.reason AS bouncecodedesc,
		    COALESCE(t2.taxapplicable, 0) AS taxapplicable,
		    t2.taxcomponent,
		    t1.paidcgst,
		    t1.paidsgst,
		    t1.paidigst,
		    t1.paidugst,
		    t1.waivedcgst,
		    t1.waivedsgst,
		    t1.waivedugst,
		    t1.waivedigst,
		    t1.waivedcess,
		    t1.paidcess,
			T1.FinSource
		   FROM manualadvise t1
		     LEFT JOIN feetypes t2 ON t1.feetypeid = t2.feetypeid
		     LEFT JOIN bouncereasons t3 ON t1.bounceid = t3.bounceid
		  WHERE NOT (EXISTS ( SELECT 1
		           FROM manualadvise_temp
		          WHERE manualadvise_temp.adviseid = t1.adviseid))
	</createView>
	</changeSet>

	<changeSet id="252" author="Varaprasad.K">
		<sql>
			update reportlist set Reportheading='Upload Details' where
			code='UploadHeader';
		</sql>
	</changeSet>

	<changeSet id="253" author="Varaprasad.K">
		<addColumn tableName="UploadHeader">
			<column name="FILEDOWNLOAD" type="Boolean" />
			<column name="ApprovedDate" type="datetime" />
			<column name="MakerId" type="bigint" defaultValue="0" />
			<column name="ApproverId" type="bigint" defaultValue="0" />

		</addColumn>
	</changeSet>

	<changeSet id="254" author="Varaprasad.K">
		<addColumn tableName="UploadHeader_temp">
			<column name="FILEDOWNLOAD" type="Boolean" />
			<column name="ApprovedDate" type="datetime" />
			<column name="MakerId" type="bigint" defaultValue="0" />
			<column name="ApproverId" type="bigint" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="255" author="Varaprasad.K">
		<createView viewName="UPLOADHEADER_AVIEW" replaceIfExists="true">
		 SELECT T1.UploadId,
			  T1.FileLocation,
			  T1.FileName,
			  T1.TransactionDate,
			  T1.TotalRecords,
			  T1.SuccessCount,
			  T1.FailedCount,
			  T1.Module,
			  T1.FileDownload,
			  T1.Version,
			  T1.LastMntBy,
			  T1.LastMntOn,
			  T1.RecordStatus,
			  T1.RoleCode,
			  T1.NextRoleCode,
			  T1.TaskId,
			  T1.NextTaskId,
			  T1.RecordType,
			  T1.WorkflowId,
			  T1.ApprovedDate,
			  T1.MakerId,
			  T1.ApproverId,
			  T1.EntityCODE,
			  T2.EntityDesc,
			  T3.UsrLogIn USERNAME
			FROM
			  UploadHeader T1
			LEFT JOIN Entity T2
			ON
			  T1.EntityCode = T2.EntityCode
			LEFT JOIN SecUsers T3 ON T3.USRID = T1.LASTMNTBY
	</createView>
	</changeSet>

	<changeSet id="256" author="Varaprasad.K">
		<createView viewName="UPLOADHEADER_TVIEW" replaceIfExists="true">
				SELECT
				  T1.UploadId,
				  T1.FileLocation,
				  T1.FileName,
				  T1.TransactionDate,
				  T1.TotalRecords,
				  T1.SuccessCount,
				  T1.FailedCount,
				  T1.Module,
				  T1.FileDownload,
				  T1.Version,
				  T1.LastMntBy,
				  T1.LastMntOn,
				  T1.RecordStatus,
				  T1.RoleCode,
				  T1.NextRoleCode,
				  T1.TaskId,
				  T1.NextTaskId,
				  T1.RecordType,
				  T1.WorkflowId,
				  T1.ApprovedDate,
				  T1.MakerId,
				  T1.ApproverId,
				  T1.EntityCODE,
				  T2.EntityDesc,
				  T3.UsrLogIn USERNAME
				FROM
				  UploadHeader_Temp T1
				LEFT JOIN Entity T2
				ON
				  T1.EntityCode = T2.EntityCode
				LEFT JOIN SecUsers T3 ON T3.USRID = T1.LASTMNTBY
	   </createView>
	</changeSet>

	<changeSet id="257" author="Varaprasad.K" dbms="postgresql,mssql">
		<createView viewName="UPLOADHEADER_VIEW" replaceIfExists="true">
			SELECT t1.uploadid,
				    t1.filelocation,
				    t1.filename,
				    t1.transactiondate,
				    t1.totalrecords,
				    t1.successcount,
				    t1.failedcount,
				    t1.module,
					t1.filedownload,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    T1.ApprovedDate, 
				    T1.MakerId, 
				    T1.ApproverId, 
				    t1.entitycode,
				    t2.entitydesc,
				    t3.usrlogin AS username
				   FROM uploadheader_temp t1
				     LEFT JOIN entity t2 ON t1.entitycode=t2.entitycode
				     LEFT JOIN secusers t3 ON t3.usrid = t1.lastmntby
				UNION ALL
				 SELECT t1.uploadid,
				    t1.filelocation,
				    t1.filename,
				    t1.transactiondate,
				    t1.totalrecords,
				    t1.successcount,
				    t1.failedcount,
				    t1.module,
					t1.filedownload,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    T1.ApprovedDate, 
				    T1.MakerId, 
				    T1.ApproverId,
				    t1.entitycode,
				    t2.entitydesc,
				    t3.usrlogin AS username
				   FROM uploadheader t1
				     LEFT JOIN entity t2 ON t1.entitycode=t2.entitycode
				     LEFT JOIN secusers t3 ON t3.usrid = t1.lastmntby
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM uploadheader_temp
				          WHERE uploadheader_temp.uploadid = t1.uploadid))
	</createView>
	</changeSet>

	<changeSet id="257" author="Varaprasad.K" dbms="oracle">
		<createView viewName="UPLOADHEADER_VIEW" replaceIfExists="true">
				SELECT t1.uploadid,
				    t1.filelocation,
				    t1.filename,
				    t1.transactiondate,
				    t1.totalrecords,
				    t1.successcount,
				    t1.failedcount,
				    t1.module,
					t1.filedownload,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    T1.ApprovedDate, 
				    T1.MakerId, 
				    T1.ApproverId, 
				    t1.entitycode,
				    t2.entitydesc,
				    t3.usrlogin AS username
				   FROM uploadheader_temp t1
				     LEFT JOIN entity t2 ON t1.entitycode=t2.entitycode
				     LEFT JOIN secusers t3 ON t3.usrid = t1.lastmntby
				UNION ALL
				 SELECT t1.uploadid,
				    t1.filelocation,
				    t1.filename,
				    t1.transactiondate,
				    t1.totalrecords,
				    t1.successcount,
				    t1.failedcount,
				    t1.module,
					t1.filedownload,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
					cast (t1.recordstatus as VARCHAR2(50)) ,
				    cast (t1.rolecode as VARCHAR2(50)),
				    cast (t1.nextrolecode as VARCHAR2(200)),
				    cast (t1.taskid as VARCHAR2(50)),
					cast (t1.nexttaskid as VARCHAR2(200)),
					cast (t1.recordtype as VARCHAR2(50)),
				    t1.workflowid,
				    T1.ApprovedDate, 
				    T1.MakerId, 
				    T1.ApproverId,
				    t1.entitycode,
				    t2.entitydesc,
				    t3.usrlogin AS username
				   FROM uploadheader t1
				     LEFT JOIN entity t2 ON t1.entitycode=t2.entitycode
				     LEFT JOIN secusers t3 ON t3.usrid = t1.lastmntby
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM uploadheader_temp
				          WHERE uploadheader_temp.uploadid = t1.uploadid))
	</createView>
	</changeSet>

	<changeSet id="258" author="Varaprasad.K">
		<createView viewName="UPLOADHEADER_MAUVIEW"
			replaceIfExists="true">
				SELECT
				  UploadId,
				  FileName,
				  Module,
				  Entitycode,
				  TransactionDate
				FROM
				  UploadHeader_Temp
				WHERE
				  Module = 'ManualAdvise'
				UNION ALL
				SELECT
				  UploadId,
				  FileName,
				  Module,
				  Entitycode,
				  TransactionDate
				FROM
				  UploadHeader
				WHERE
				  Module = 'ManualAdvise'
				AND NOT EXISTS(SELECT 1 FROM UploadHeader_Temp WHERE UploadId = UploadHeader.UploadId)
		</createView>
	</changeSet>

	<changeSet id="259" author="Varaprasad.K">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'ALLOWED_BACKDATED_RECEIPT';
				INSERT INTO SMTparameters  VALUES ('ALLOWED_BACKDATED_RECEIPT', 'Allow back dated Receipt or not', 'String', '1', 'Y', 1, 0, NULL, NULL, 'Allow back dated Receipt or not.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="260" author="vijaya.a">
		<createTable tableName="PENNY_DROP_STATUS">
			<column name="ID" type="bigint" autoIncrement="true" />
			<column name="ACCTNUM" type="varchar(50)" />
			<column name="IFSC" type="varchar(20)" />
			<column name="INITIATETYPE" type="char(1)" />
			<column name="STATUS" type="boolean" />
			<column name="REASON" type="varchar(500)" />
		</createTable>
	</changeSet>

	<changeSet id="261.1" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			 	 
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MasterDialog_PennyDropResult');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MasterDialog_TxnDetails');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_MasterDialog_btnPennyDropResult');
			 	DELETE FROM SECRIGHTS Where RightName = 'MasterDialog_PennyDropResult';
			 	DELETE FROM SECRIGHTS Where RightName = 'MasterDialog_TxnDetails';
			 	DELETE FROM SECRIGHTS Where RightName = 'button_MasterDialog_btnPennyDropResult';
			 	
				INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'PENNYDROP_MAKER', 'Group for penny drop maker', 1, 1000, CURRENT_TIMESTAMP, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			 	 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'MasterDialog_PennyDropResult','MandateDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'MasterDialog_TxnDetails','MandateDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
				
				INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),2, 'button_MasterDialog_btnPennyDropResult','MandateDialog', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MasterDialog_PennyDropResult'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MasterDialog_TxnDetails'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				
 				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PENNYDROP_MAKER'), (Select RightID from SecRights where RightName = 'button_MasterDialog_btnPennyDropResult'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
 				
			    UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			    UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="262" author="Varaprasad.K" dbms="postgresql,oracle">
		<dropSequence sequenceName="seqdmsidentification" />
	</changeSet>

	<changeSet id="262" author="Varaprasad.K" dbms="mssql">
		<dropTable tableName="seqdmsidentification" />
	</changeSet>

	<changeSet id="263" author="Varaprasad.K">
		<dropTable tableName="dmsdocprocess" />
	</changeSet>

	<changeSet id="264" author="Varaprasad.K">
		<createTable tableName="dmsdocprocess">
			<column name="id" type="int" autoIncrement="true">
				<constraints nullable="false" primaryKey="true"
					primaryKeyName="pk_dmsidentification" />
			</column>
			<column name="finreference" type="varchar(100)" />
			<column name="docmodule" type="varchar(100)" />
			<column name="docrefid" type="bigint" defaultValue="0" />
			<column name="state" type="varchar(100)" />
			<column name="status" type="varchar(100)" />
			<column name="referenceid" type="varchar(100)" />
			<column name="retryCount" type="int" defaultValue="0" />
			<column name="customerCif" type="varchar(100)" />
			<column name="docid" type="bigint" defaultValue="0" />
			<column name="docCategory" type="varchar(100)" />
			<column name="docDesc" type="varchar(100)" />
			<column name="docExt" type="varchar(100)" />
			<column name="lastMntOn" type="datetime" />
			<column name="createdOn" type="datetime" />
		</createTable>
	</changeSet>

	<changeSet id="265" author="Pradeep Varma">
		<addColumn tableName="finscheduledetails">
			<column name="cpzbalance" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="266" author="Pradeep Varma">
		<addColumn tableName="finscheduledetails_temp">
			<column name="cpzbalance" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="267" author="Pradeep Varma">
		<addColumn tableName="wiffinscheduledetails">
			<column name="cpzbalance" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="268" author="Pradeep Varma">
		<addColumn tableName="wiffinscheduledetails_temp">
			<column name="cpzbalance" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>



	<changeSet id="269_pre" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'finscheduledetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="269" author="Pradeep Varma">
		<createView viewName="finscheduledetails_aview"
			replaceIfExists="true">
 					 SELECT t1.finreference,
							t1.schseq,
							t1.schdate,
							t1.pftonschdate,
							t1.repayonschdate,
							t1.cpzonschdate,
							t1.rvwonschdate,
							t1.disbonschdate,
							t1.downpaymentonschdate,
							t1.balanceforpftcal,
							t1.baserate,
							t1.splrate,
							t1.actrate,
							t1.noofdays,
							t1.dayfactor,
							t1.profitcalc,
							t1.profitschd,
							t1.principalschd,
							t1.repayamount,
							t1.profitbalance,
							t1.disbamount,
							t1.cpzamount,
							t1.downpaymentamount,
							t1.closingbalance,
							t1.profitfraction,
							t1.prvrepayamount,
							t1.schdpftpaid,
							t1.schpftpaid,
							t1.schdpripaid,
							t1.schpripaid,
							t1.specifier,
							t1.defschddate,
							t1.schdmethod,
							t1.mrgrate,
							t1.calonindrate,
							t1.feechargeamt,
							t1.calculatedrate,
							t1.earlypaidbal,
							t1.earlypaid,
							t1.refundorwaiver,
							t1.writeoffprincipal,
							t1.writeoffprofit,
							t1.orgpft,
							t1.orgpri,
							t1.orgendbal,
							t1.orgplanpft,
							t1.feeschd,
							t1.schdfeepaid,
							t1.schdfeeos,
							t1.insschd,
							t1.schdinspaid,
							t1.advpftrate,
							t1.advprofit,
							t1.advrepayamount,
							t1.advbaserate,
							t1.advmargin,
							t1.advcalrate,
							t1.suplrent,
							t1.incrcost,
							t1.suplrentpaid,
							t1.incrcostpaid,
							t1.rolloveronschdate,
							t1.rolloveramount,
							t1.rolloveramountpaid,
							t1.tdsamount,
							t1.tdspaid,
							t1.pftdaysbasis,
							t1.writeoffins,
							t1.writeoffincrcost,
							t1.writeoffsuplrent,
							t1.writeoffschfee,
							t1.insuranceamt,
							t1.instnumber,
							t1.bpiorholiday,
							t1.frqdate,
							t1.presentmentid,
							t1.partialpaidamt,
							t1.feetax,
							t1.recallock,
							t1.tdsapplicable,
							t1.schdpftwaiver,
							t1.cpzbalance
						FROM finscheduledetails t1
		</createView>
	</changeSet>

	<changeSet id="269_post" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'finscheduledetails_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="270_pre" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'finscheduledetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="270" author="Pradeep Varma">
		<createView viewName="finscheduledetails_tview"
			replaceIfExists="true">
					SELECT t1.finreference,
						t1.schseq,
						t1.schdate,
						t1.pftonschdate,
						t1.repayonschdate,
						t1.cpzonschdate,
						t1.rvwonschdate,
						t1.disbonschdate,
						t1.downpaymentonschdate,
						t1.balanceforpftcal,
						t1.baserate,
						t1.splrate,
						t1.actrate,
						t1.noofdays,
						t1.dayfactor,
						t1.profitcalc,
						t1.profitschd,
						t1.principalschd,
						t1.repayamount,
						t1.profitbalance,
						t1.disbamount,
						t1.cpzamount,
						t1.downpaymentamount,
						t1.closingbalance,
						t1.profitfraction,
						t1.prvrepayamount,
						t1.schdpftpaid,
						t1.schpftpaid,
						t1.schdpripaid,
						t1.schpripaid,
						t1.specifier,
						t1.defschddate,
						t1.schdmethod,
						t1.mrgrate,
						t1.calonindrate,
						t1.feechargeamt,
						t1.calculatedrate,
						t1.earlypaidbal,
						t1.earlypaid,
						t1.refundorwaiver,
						t1.writeoffprincipal,
						t1.writeoffprofit,
						t1.orgpft,
						t1.orgpri,
						t1.orgendbal,
						t1.orgplanpft,
						t1.feeschd,
						t1.schdfeepaid,
						t1.schdfeeos,
						t1.insschd,
						t1.schdinspaid,
						t1.advpftrate,
						t1.advprofit,
						t1.advrepayamount,
						t1.advbaserate,
						t1.advmargin,
						t1.advcalrate,
						t1.suplrent,
						t1.incrcost,
						t1.suplrentpaid,
						t1.incrcostpaid,
						t1.rolloveronschdate,
						t1.rolloveramount,
						t1.rolloveramountpaid,
						t1.tdsamount,
						t1.tdspaid,
						t1.pftdaysbasis,
						t1.writeoffins,
						t1.writeoffincrcost,
						t1.writeoffsuplrent,
						t1.writeoffschfee,
						t1.insuranceamt,
						t1.instnumber,
						t1.bpiorholiday,
						t1.frqdate,
						t1.presentmentid,
						t1.partialpaidamt,
						t1.feetax,
						t1.recallock,
						t1.tdsapplicable,
						t1.schdpftwaiver,
						t1.cpzbalance 
						FROM finscheduledetails_temp t1		
		</createView>
	</changeSet>

	<changeSet id="270_post" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'finscheduledetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="271_pre" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'finscheduledetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="271" author="Varaprasad.K">
		<createView viewName="finscheduledetails_view"
			replaceIfExists="true">
				 SELECT t1.finreference,
					t1.schseq,
					t1.schdate,
					t1.pftonschdate,
					t1.repayonschdate,
					t1.cpzonschdate,
					t1.rvwonschdate,
					t1.disbonschdate,
					t1.downpaymentonschdate,
					t1.balanceforpftcal,
					t1.baserate,
					t1.splrate,
					t1.actrate,
					t1.noofdays,
					t1.dayfactor,
					t1.profitcalc,
					t1.profitschd,
					t1.principalschd,
					t1.repayamount,
					t1.profitbalance,
					t1.disbamount,
					t1.cpzamount,
					t1.downpaymentamount,
					t1.closingbalance,
					t1.profitfraction,
					t1.prvrepayamount,
					t1.schdpftpaid,
					t1.schpftpaid,
					t1.schdpripaid,
					t1.schpripaid,
					t1.specifier,
					t1.defschddate,
					t1.schdmethod,
					t1.mrgrate,
					t1.calonindrate,
					t1.feechargeamt,
					t1.calculatedrate,
					t1.earlypaidbal,
					t1.earlypaid,
					t1.refundorwaiver,
					t1.writeoffprincipal,
					t1.writeoffprofit,
					t1.orgpft,
					t1.orgpri,
					t1.orgendbal,
					t1.orgplanpft,
					t1.feeschd,
					t1.schdfeepaid,
					t1.schdfeeos,
					t1.insschd,
					t1.schdinspaid,
					t1.advpftrate,
					t1.advprofit,
					t1.advrepayamount,
					t1.advbaserate,
					t1.advmargin,
					t1.advcalrate,
					t1.suplrent,
					t1.incrcost,
					t1.suplrentpaid,
					t1.incrcostpaid,
					t1.rolloveronschdate,
					t1.rolloveramount,
					t1.rolloveramountpaid,
					t1.tdsamount,
					t1.tdspaid,
					t1.pftdaysbasis,
					t1.writeoffins,
					t1.writeoffincrcost,
					t1.writeoffsuplrent,
					t1.writeoffschfee,
					t1.insuranceamt,
					t1.instnumber,
					t1.bpiorholiday,
					t1.frqdate,
					t1.presentmentid,
					t1.partialpaidamt,
					t1.feetax,
					t1.recallock,
					t1.tdsapplicable,
					t1.schdpftwaiver,
					t1.cpzbalance
					fROM finscheduledetails_temp t1
			UNION ALL
				SELECT t1.finreference,
					t1.schseq,
					t1.schdate,
					t1.pftonschdate,
					t1.repayonschdate,
					t1.cpzonschdate,
					t1.rvwonschdate,
					t1.disbonschdate,
					t1.downpaymentonschdate,
					t1.balanceforpftcal,
					t1.baserate,
					t1.splrate,
					t1.actrate,
					t1.noofdays,
					t1.dayfactor,
					t1.profitcalc,
					t1.profitschd,
					t1.principalschd,
					t1.repayamount,
					t1.profitbalance,
					t1.disbamount,
					t1.cpzamount,
					t1.downpaymentamount,
					t1.closingbalance,
					t1.profitfraction,
					t1.prvrepayamount,
					t1.schdpftpaid,
					t1.schpftpaid,
					t1.schdpripaid,
					t1.schpripaid,
					t1.specifier,
					t1.defschddate,
					t1.schdmethod,
					t1.mrgrate,
					t1.calonindrate,
					t1.feechargeamt,
					t1.calculatedrate,
					t1.earlypaidbal,
					t1.earlypaid,
					t1.refundorwaiver,
					t1.writeoffprincipal,
					t1.writeoffprofit,
					t1.orgpft,
					t1.orgpri,
					t1.orgendbal,
					t1.orgplanpft,
					t1.feeschd,
					t1.schdfeepaid,
					t1.schdfeeos,
					t1.insschd,
					t1.schdinspaid,
					t1.advpftrate,
					t1.advprofit,
					t1.advrepayamount,
					t1.advbaserate,
					t1.advmargin,
					t1.advcalrate,
					t1.suplrent,
					t1.incrcost,
					t1.suplrentpaid,
					t1.incrcostpaid,
					t1.rolloveronschdate,
					t1.rolloveramount,
					t1.rolloveramountpaid,
					t1.tdsamount,
					t1.tdspaid,
					t1.pftdaysbasis,
					t1.writeoffins,
					t1.writeoffincrcost,
					t1.writeoffsuplrent,
					t1.writeoffschfee,
					t1.insuranceamt,
					t1.instnumber,
					t1.bpiorholiday,
					t1.frqdate,
					t1.presentmentid,
					t1.partialpaidamt,
					t1.feetax,
					t1.recallock,
					t1.tdsapplicable,
					t1.schdpftwaiver,
					t1.cpzbalance
				FROM finscheduledetails t1
				WHERE NOT (EXISTS ( SELECT 1
						FROM finscheduledetails_temp
						WHERE finscheduledetails_temp.finreference = t1.finreference))
		</createView>
	</changeSet>

	<changeSet id="271_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'finscheduledetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="272_pre" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'wiffinscheduledetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="272" author="Pradeep Varma">
		<createView viewName="wiffinscheduledetails_tview"
			replaceIfExists="true">
						SELECT t1.finreference,
					t1.schseq,
					t1.schdate,
					t1.pftonschdate,
					t1.repayonschdate,
					t1.cpzonschdate,
					t1.rvwonschdate,
					t1.disbonschdate,
					t1.downpaymentonschdate,
					t1.balanceforpftcal,
					t1.baserate,
					t1.splrate,
					t1.actrate,
					t1.noofdays,
					t1.dayfactor,
					t1.profitcalc,
					t1.profitschd,
					t1.principalschd,
					t1.repayamount,
					t1.profitbalance,
					t1.disbamount,
					t1.cpzamount,
					t1.downpaymentamount,
					t1.closingbalance,
					t1.profitfraction,
					t1.prvrepayamount,
					t1.schdpftpaid,
					t1.schpftpaid,
					t1.schdpripaid,
					t1.schpripaid,
					t1.specifier,
					t1.defschddate,
					t1.schdmethod,
					t1.mrgrate,
					t1.calonindrate,
					t1.feechargeamt,
					t1.calculatedrate,
					t1.orgpft,
					t1.orgpri,
					t1.orgendbal,
					t1.orgplanpft,
					t1.feeschd,
					t1.schdfeepaid,
					t1.schdfeeos,
					t1.insschd,
					t1.schdinspaid,
					t1.advpftrate,
					t1.advprofit,
					t1.advrepayamount,
					t1.advbaserate,
					t1.advmargin,
					t1.advcalrate,
					t1.suplrent,
					t1.incrcost,
					t1.suplrentpaid,
					t1.incrcostpaid,
					t1.rolloveronschdate,
					t1.rolloveramount,
					t1.rolloveramountpaid,
					t1.tdsamount,
					t1.tdspaid,
					t1.pftdaysbasis,
					t1.insuranceamt,
					t1.instnumber,
					t1.bpiorholiday,
					t1.frqdate,
					t1.feetax,
					t1.recallock,t1.cpzbalance 
					FROM wiffinscheduledetails_temp t1
					
		</createView>
	</changeSet>

	<changeSet id="272_post" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'wiffinscheduledetails_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="273_pre" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'wiffinscheduledetails_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="273" author="Pradeep Varma">
		<createView viewName="wiffinscheduledetails_view"
			replaceIfExists="true">
					SELECT t1.finreference,
						t1.schseq,
						t1.schdate,
						t1.pftonschdate,
						t1.repayonschdate,
						t1.cpzonschdate,
						t1.rvwonschdate,
						t1.disbonschdate,
						t1.downpaymentonschdate,
						t1.balanceforpftcal,
						t1.baserate,
						t1.splrate,
						t1.actrate,
						t1.noofdays,
						t1.dayfactor,
						t1.profitcalc,
						t1.profitschd,
						t1.principalschd,
						t1.repayamount,
						t1.profitbalance,
						t1.disbamount,
						t1.cpzamount,
						t1.downpaymentamount,
						t1.closingbalance,
						t1.profitfraction,
						t1.prvrepayamount,
						t1.schdpftpaid,
						t1.schpftpaid,
						t1.schdpripaid,
						t1.schpripaid,
						t1.specifier,
						t1.defschddate,
						t1.schdmethod,
						t1.mrgrate,
						t1.calonindrate,
						t1.feechargeamt,
						t1.calculatedrate,
						t1.orgpft,
						t1.orgpri,
						t1.orgendbal,
						t1.orgplanpft,
						t1.feeschd,
						t1.schdfeepaid,
						t1.schdfeeos,
						t1.insschd,
						t1.schdinspaid,
						t1.advpftrate,
						t1.advprofit,
						t1.advrepayamount,
						t1.advbaserate,
						t1.advmargin,
						t1.advcalrate,
						t1.suplrent,
						t1.incrcost,
						t1.suplrentpaid,
						t1.incrcostpaid,
						t1.rolloveronschdate,
						t1.rolloveramount,
						t1.rolloveramountpaid,
						t1.tdsamount,
						t1.pftdaysbasis,
						t1.insuranceamt,
						t1.instnumber,
						t1.bpiorholiday,
						t1.frqdate,
						t1.recallock,
						t1.tdspaid,t1.cpzbalance 
					FROM wiffinscheduledetails_temp t1
					UNION ALL
					SELECT t1.finreference,
						t1.schseq,
						t1.schdate,
						t1.pftonschdate,
						t1.repayonschdate,
						t1.cpzonschdate,
						t1.rvwonschdate,
						t1.disbonschdate,
						t1.downpaymentonschdate,
						t1.balanceforpftcal,
						t1.baserate,
						t1.splrate,
						t1.actrate,
						t1.noofdays,
						t1.dayfactor,
						t1.profitcalc,
						t1.profitschd,
						t1.principalschd,
						t1.repayamount,
						t1.profitbalance,
						t1.disbamount,
						t1.cpzamount,
						t1.downpaymentamount,
						t1.closingbalance,
						t1.profitfraction,
						t1.prvrepayamount,
						t1.schdpftpaid,
						t1.schpftpaid,
						t1.schdpripaid,
						t1.schpripaid,
						t1.specifier,
						t1.defschddate,
						t1.schdmethod,
						t1.mrgrate,
						t1.calonindrate,
						t1.feechargeamt,
						t1.calculatedrate,
						t1.orgpft,
						t1.orgpri,
						t1.orgendbal,
						t1.orgplanpft,
						t1.feeschd,
						t1.schdfeepaid,
						t1.schdfeeos,
						t1.insschd,
						t1.schdinspaid,
						t1.advpftrate,
						t1.advprofit,
						t1.advrepayamount,
						t1.advbaserate,
						t1.advmargin,
						t1.advcalrate,
						t1.suplrent,
						t1.incrcost,
						t1.suplrentpaid,
						t1.incrcostpaid,
						t1.rolloveronschdate,
						t1.rolloveramount,
						t1.rolloveramountpaid,
						t1.tdsamount,
						t1.pftdaysbasis,
						t1.insuranceamt,
						t1.instnumber,
						t1.bpiorholiday,
						t1.frqdate,
						t1.recallock,
						t1.tdspaid,t1.cpzbalance 
					FROM wiffinscheduledetails t1
					WHERE NOT (EXISTS ( SELECT 1
							FROM wiffinscheduledetails_temp
							WHERE wiffinscheduledetails_temp.finreference = t1.finreference))
		  	</createView>
	</changeSet>

	<changeSet id="273_post" author="Pradeep Varma" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'wiffinscheduledetails_view');
			]]>
		</sql>
	</changeSet>


	<changeSet id="274" author="Pradeep Varma">
		<addColumn tableName="finscheduledetails_log">
			<column name="cpzbalance" type="decimal(18,0)" defaultValue="0" />
		</addColumn>
	</changeSet>

	<changeSet id="275" author="manoj.p">
		<sql>
			<![CDATA[
				DELETE from SMTparameters WHERE SYSPARMCODE='DMS_REQ';
				INSERT INTO SMTparameters  VALUES ('DMS_REQ', 'DMS Required or not', 'String', '1', 'N', 1, 0, NULL, NULL,'DMS Notification', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
 				DELETE from SMTparameters WHERE SYSPARMCODE='ALLOW_PUSH_NOTIFICATION';
				INSERT INTO SMTparameters  VALUES ('ALLOW_PUSH_NOTIFICATION', 'Allow Push Notification', 'String', '1', 'N', 1, 0, NULL, NULL,'To Allow Push Notification', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="276" author="prabhakar.g">
		<addColumn tableName="CIBIL_MEMBER_DETAILS">
			<column name="FILE_FORMATE" type="varchar(10)" />
		</addColumn>
	</changeSet>

	<changeSet id="277" author="prabhakar.g">
		<sql>
			<![CDATA[
				update CIBIL_MEMBER_DETAILS  set FILE_FORMATE = 'TUFF' where SEGMENT_TYPE = 'RETAIL';
				update CIBIL_MEMBER_DETAILS  set FILE_FORMATE = 'CSV' where SEGMENT_TYPE = 'CORP';
			]]>
		</sql>
	</changeSet>
	<changeSet id="278" author="satyanarayana.g">
		<addColumn tableName="BANKBRANCHES">
			<column name="PARENTBRANCH" type="varchar(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="279" author="satyanarayana.g">
		<addColumn tableName="BANKBRANCHES_TEMP">
			<column name="PARENTBRANCH" type="varchar(8)" />
		</addColumn>
	</changeSet>

	<changeSet id="280_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bankbranches_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="280" author="satyanarayana.g">
		<createView viewName="BANKBRANCHES_AVIEW" replaceIfExists="true">
			SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T3.PCCITYNAME,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH
				FROM BANKBRANCHES T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T3.PCCITY = T1.CITY
		</createView>
	</changeSet>

	<changeSet id="280_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
			   select deps_restore_dependencies ('plf', 'bankbranches_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="281_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bankbranches_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="281" author="satyanarayana.g">
		<createView viewName="BANKBRANCHES_TVIEW" replaceIfExists="true">
			SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH
				FROM BANKBRANCHES_TEMP T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
		</createView>
	</changeSet>

	<changeSet id="281_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
			   select deps_restore_dependencies ('plf', 'bankbranches_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="282_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bankbranches_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="283" author="satyanarayana.g">
		<createView viewName="BANKBRANCHES_VIEW" replaceIfExists="true">
			SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T3.PCCITYNAME,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH
				FROM BANKBRANCHES_TEMP T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T3.PCCITY = T1.CITY
				UNION ALL
				SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T3.PCCITYNAME,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH
				FROM BANKBRANCHES T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T3.PCCITY = T1.CITY
				WHERE NOT (EXISTS
				(SELECT 1 FROM BANKBRANCHES_TEMP WHERE BANKBRANCHES_TEMP.BANKBRANCHID = T1.BANKBRANCHID))
		</createView>
	</changeSet>

	<changeSet id="283_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
			   select deps_restore_dependencies ('plf', 'bankbranches_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="284" author="satyanarayana.g">
		<addColumn tableName="BANKBRANCHES">
			<column name="PARENTBRANCHDESC" type="varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="285" author="satyanarayana.g">
		<addColumn tableName="BANKBRANCHES_TEMP">
			<column name="PARENTBRANCHDESC" type="varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="286_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bankbranches_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="286" author="satyanarayana.g">
		<createView viewName="BANKBRANCHES_AVIEW" replaceIfExists="true">
			SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T3.PCCITYNAME,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH,
				  T1.PARENTBRANCHDESC
				FROM BANKBRANCHES T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T3.PCCITY = T1.CITY
		</createView>
	</changeSet>

	<changeSet id="286_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
			   select deps_restore_dependencies ('plf', 'bankbranches_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="287_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bankbranches_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="287" author="satyanarayana.g">
		<createView viewName="BANKBRANCHES_TVIEW" replaceIfExists="true">
			SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH,
				  T1.PARENTBRANCHDESC
				FROM BANKBRANCHES_TEMP T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
		</createView>
	</changeSet>

	<changeSet id="287_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
			   select deps_restore_dependencies ('plf', 'bankbranches_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="288_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'bankbranches_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="288" author="satyanarayana.g">
		<createView viewName="BANKBRANCHES_VIEW" replaceIfExists="true">
			SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T3.PCCITYNAME,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH,
				  T1.PARENTBRANCHDESC
				FROM BANKBRANCHES_TEMP T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T3.PCCITY = T1.CITY
				UNION ALL
				SELECT T1.BANKBRANCHID,
				  T1.BANKCODE,
				  T1.BRANCHCODE,
				  T1.BRANCHDESC,
				  T1.CITY,
				  T3.PCCITYNAME,
				  T1.MICR,
				  T1.IFSC,
				  T2.BANKNAME,
				  T1.ECS,
				  T1.DDA,
				  T1.NACH,
				  T1.DD,
				  T1.ADDOFBRANCH,
				  T1.CHEQUE,
				  T1.ACTIVE,
				  T1.VERSION,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T2.ACCNOLENGTH,
				  T1.PARENTBRANCH,
				  T1.PARENTBRANCHDESC
				FROM BANKBRANCHES T1
				JOIN BMTBANKDETAIL T2 ON T1.BANKCODE = T2.BANKCODE
				LEFT JOIN RMTPROVINCEVSCITY T3 ON T3.PCCITY = T1.CITY
				WHERE NOT (EXISTS
				(SELECT 1 FROM BANKBRANCHES_TEMP WHERE BANKBRANCHES_TEMP.BANKBRANCHID = T1.BANKBRANCHID))
		</createView>
	</changeSet>

	<changeSet id="288_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
			   select deps_restore_dependencies ('plf', 'bankbranches_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="289.0" author="satyanarayana.g">
		<sql>
			<![CDATA[
				DELETE FROM ERRORDETAILS WHERE CODE='MD0001';
				INSERT INTO ERRORDETAILS  VALUES ('MD0001','EN','E','Parent Branch is Mandatory.',null,'Approved',null,null,null,null,null,0,CURRENT_TIMESTAMP,1000,0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="290" author="murthy.y">
		<createView viewName="FinODPenaltyRates_AView"
			replaceIfExists="true">
			SELECT finreference,
			  fineffectdate,
			  applyodpenalty,
			  odincgrcdays,
			  odchargetype,
			  odgracedays,
			  odchargecalon,
			  odchargeamtorperc,
			  odallowwaiver,
			  odmaxwaiverperc,
			  odrulecode,
			  ODMinCapAmount
			FROM finodpenaltyrates
		</createView>
	</changeSet>

	<changeSet id="291" author="murthy.y">
		<createView viewName="FinODPenaltyRates_TView"
			replaceIfExists="true">
			SELECT finreference,
			  fineffectdate,
			  applyodpenalty,
			  odincgrcdays,
			  odchargetype,
			  odgracedays,
			  odchargecalon,
			  odchargeamtorperc,
			  odallowwaiver,
			  odmaxwaiverperc,
			  odrulecode,
			  ODMinCapAmount
			FROM finodpenaltyrates_temp
		</createView>
	</changeSet>

	<changeSet id="292" author="murthy.y">
		<createView viewName="FinODPenaltyRates_View"
			replaceIfExists="true">
			SELECT finreference,
			    fineffectdate,
			    applyodpenalty,
			    odincgrcdays,
			    odchargetype,
			    odgracedays,
			    odchargecalon,
			    odchargeamtorperc,
			    odallowwaiver,
			    odmaxwaiverperc,
			    odrulecode,
			    ODMinCapAmount
			  FROM finodpenaltyrates_temp
			  UNION
			  SELECT finreference,
			    fineffectdate,
			    applyodpenalty,
			    odincgrcdays,
			    odchargetype,
			    odgracedays,
			    odchargecalon,
			    odchargeamtorperc,
			    odallowwaiver,
			    odmaxwaiverperc,
			    odrulecode,
			    ODMinCapAmount
			  FROM finodpenaltyrates
			  WHERE NOT (EXISTS
			    ( SELECT 1 FROM finodpenaltyrates_temp WHERE finreference = finreference
			    ))
		</createView>
	</changeSet>

	<changeSet id="293" author="vijaya.a">
		<sql>
			<![CDATA[
					Delete from SMTparameters where SysParmCode = 'PRESENTMENT_RESPONSE_NACH';
					INSERT INTO SMTparameters  VALUES ('PRESENTMENT_RESPONSE_NACH', 'Presentment Response NACH.', 'String', '1', '', 30, 0, '', '','Presentment Response NACH.', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="293" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			 	 
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BeneficiaryDialog_PennyDropResult');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BeneficiaryDialog_TxnDetails');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_BeneficiaryDialog_btnPennyDropResult');
			 	DELETE FROM SECRIGHTS Where RightName = 'BeneficiaryDialog_PennyDropResult';
			 	DELETE FROM SECRIGHTS Where RightName = 'BeneficiaryDialog_TxnDetails';
			 	DELETE FROM SECRIGHTS Where RightName = 'button_BeneficiaryDialog_btnPennyDropResult';
			 				 	 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'BeneficiaryDialog_PennyDropResult','BeneficiaryDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'BeneficiaryDialog_TxnDetails','BeneficiaryDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS Values ((select max(RightId)+1 from SecRights),2, 'button_BeneficiaryDialog_btnPennyDropResult','BeneficiaryDialog', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BeneficiaryDialog_PennyDropResult'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BeneficiaryDialog_TxnDetails'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				INSERT INTO SECGROUPRIGHTS Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PENNYDROP_MAKER'), (Select RightID from SecRights where RightName = 'button_BeneficiaryDialog_btnPennyDropResult'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
 				
			    UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="294" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			 	 
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinAdvancePaymentsDialog_PennyDropResult');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinAdvancePaymentsDialog_TxnDetails');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinAdvancePaymentsDialog_btnPennyDropResult');
			 	DELETE FROM SECRIGHTS Where RightName = 'FinAdvancePaymentsDialog_PennyDropResult';
			 	DELETE FROM SECRIGHTS Where RightName = 'FinAdvancePaymentsDialog_TxnDetails';
			 	DELETE FROM SECRIGHTS Where RightName = 'button_FinAdvancePaymentsDialog_btnPennyDropResult';
			 				 	 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'FinAdvancePaymentsDialog_PennyDropResult','FinAdvancePaymentsDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'FinAdvancePaymentsDialog_TxnDetails','FinAdvancePaymentsDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS Values ((select max(RightId)+1 from SecRights),2, 'button_FinAdvancePaymentsDialog_btnPennyDropResult','FinAdvancePaymentsDialog', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinAdvancePaymentsDialog_PennyDropResult'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinAdvancePaymentsDialog_TxnDetails'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				INSERT INTO SECGROUPRIGHTS Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PENNYDROP_MAKER'), (Select RightID from SecRights where RightName = 'button_FinAdvancePaymentsDialog_btnPennyDropResult'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
 				
			    UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="295" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			 	 
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_PennyDropResult');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_TxnDetails');
			 	DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_MandateDialog_btnPennyDropResult');
			 	DELETE FROM SECRIGHTS Where RightName = 'MandateDialog_PennyDropResult';
			 	DELETE FROM SECRIGHTS Where RightName = 'MandateDialog_TxnDetails';
			 	DELETE FROM SECRIGHTS Where RightName = 'button_MandateDialog_btnPennyDropResult';
			 				 	 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'MandateDialog_PennyDropResult','MandateDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,'MandateDialog_TxnDetails','MandateDialog', 0, 1000,CURRENT_TIMESTAMP,'',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
				INSERT INTO SECRIGHTS Values ((select max(RightId)+1 from SecRights),2, 'button_MandateDialog_btnPennyDropResult','MandateDialog', 0, 1000, current_timestamp, 'Approved', NULL, NULL, NULL, NULL, NULL, 0);
				
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_PennyDropResult'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='PENNYDROP_MAKER'),(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='MandateDialog_TxnDetails'), 1, 0, 1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
 				INSERT INTO SECGROUPRIGHTS Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'PENNYDROP_MAKER'), (Select RightID from SecRights where RightName = 'button_MandateDialog_btnPennyDropResult'), 1, 1, 1000, current_timestamp, NULL, NULL, NULL, NULL, NULL, NULL, 0);
 				
			    UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO = (SELECT MAX(GRPID)  FROM SECGROUPS);
			 	UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>

	<changeSet id="296" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE FINANCEMAIN Set SvAmount = 0  where SvAmount is null;
				UPDATE FINANCEMAIN Set CBAmount = 0  where CBAmount is null;
				UPDATE FINANCEMAIN_TEMP Set SvAmount = 0  where SvAmount is null;
				UPDATE FINANCEMAIN_TEMP Set CBAmount = 0  where CBAmount is null;
				UPDATE FINPFTDETAILS Set SvAmount = 0  where SvAmount is null;
				UPDATE FINPFTDETAILS Set CBAmount = 0  where CBAmount is null;
				UPDATE FINPFTDETAILS_SNAPSHOT Set SvAmount = 0  where SvAmount is null;
				UPDATE FINPFTDETAILS_SNAPSHOT Set CBAmount = 0  where CBAmount is null;
				UPDATE REJECTFINANCEMAIN Set SvAmount = 0  where SvAmount is null;
				UPDATE REJECTFINANCEMAIN Set CBAmount = 0  where CBAmount is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="297" author="satyanarayana.g">
		<sql>
			<![CDATA[
				UPDATE FINSCHEDULEDETAILS Set CpzBalance = 0  where CpzBalance is null;
				UPDATE FINSCHEDULEDETAILS_TEMP Set CpzBalance = 0  where CpzBalance is null;
				UPDATE WIFFINSCHEDULEDETAILS Set CpzBalance = 0  where CpzBalance is null;
				UPDATE WIFFINSCHEDULEDETAILS_TEMP Set CpzBalance = 0  where CpzBalance is null;
				UPDATE FINSCHEDULEDETAILS_LOG Set CpzBalance = 0  where CpzBalance is null;
			]]>
		</sql>
	</changeSet>

	<changeSet id="298" author="satyanarayana.g">
		<createView viewName="FINANCEENQUIRY_VIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				  T1.FINBRANCH,
				  T1.FINTYPE,
				  T1.FINCCY,
				  T1.SCHEDULEMETHOD,
				  T1.PROFITDAYSBASIS,
				  T1.FINSTARTDATE,
				  T1.CALTERMS NUMBEROFTERMS,
				  T1.CUSTID,
				  T1.FINAMOUNT,
				  T1.GRCPERIODENDDATE,
				  T1.MATURITYDATE,
				  T1.FINREPAYMENTAMOUNT,
				  T1.FINISACTIVE,
				  T1.ALLOWGRCPERIOD,
				  T1.DOWNPAYMENT,
				  T1.MIGRATEDFINANCE,
				  T1.LASTREPAYDATE,
				  T1.LASTREPAYPFTDATE,
				  T1.FINCURRASSETVALUE,
				  T1.BLACKLISTED,
				  T1.FEECHARGEAMT,
				  T1.CLOSINGSTATUS,
				  T1.GRACETERMS,
				  T1.ALWMULTIDISB,
				  T1.DEFFERMENTS,
				  T1.FINSTATUS ,
				  T1.MANDATEID,
				  T1.FINREPAYMETHOD,
				  T1.FINASSETVALUE,
				  T1.INSURANCEAMT,
				  T1.SANBSDSCHDLE,
				  T1.PROMOTIONSEQID,
				  T1.SVAMOUNT,
				  T1.CBAMOUNT,
				  (T1.FINCURRASSETVALUE+ T1.FEECHARGEAMT+T1.INSURANCEAMT) FINANCINGAMOUNT,
				  (T1.FINCURRASSETVALUE- T1.FINREPAYMENTAMOUNT+ T1.FEECHARGEAMT+T1.INSURANCEAMT) CURFINAMOUNT,
				  T2.FINTYPEDESC LOVDESCFINTYPENAME,
				  T2.FINSCHEDULEON LOVDESCFINSCHEDULEON,
				  T2.FINDIVISION LOVDESCFINDIVISION,
				  T2.FINCATEGORY LOVDESCPRODUCTCODENAME,
				  T2.FINISALWDIFFERMENT LOVDESCFINALWDEFERMENT,
				  T3.CUSTCIF LOVDESCCUSTCIF,
				  T3.CUSTSHRTNAME LOVDESCCUSTSHRTNAME,
				  T4.BRANCHDESC LOVDESCFINBRANCHNAME,
				  T5.CUSTTYPECTG,
				  COALESCE(T9.NOINST,0) NOINST FROM FINANCEMAIN T1
				INNER JOIN RMTFINANCETYPES T2 ON T1.FINTYPE = T2.FINTYPE
				INNER JOIN CUSTOMERS T3 ON T1.CUSTID = T3.CUSTID
				INNER JOIN RMTBRANCHES T4 ON T1.FINBRANCH = T4.BRANCHCODE
				INNER JOIN RMTCUSTTYPES T5 ON T3.CUSTTYPECODE = T5.CUSTTYPECODE
				LEFT JOIN FINPFTDETAILS T9 ON T1.FINREFERENCE = T9.FINREFERENCE
		</createView>
	</changeSet>
	<changeSet id="299" author="Varaprasad.K">
		<sql>
			<![CDATA[
				DELETE from SMTparameters WHERE SYSPARMCODE='DMS_DOCURI_REQ';
				INSERT INTO SMTparameters  VALUES ('DMS_DOCURI_REQ', 'DMS DOC URI Required or not', 'String', '1', 'N', 1, 0, NULL, NULL,'DMS DOC URI REQUIRED OR NOT', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
			]]>
		</sql>
	</changeSet>



	<changeSet id="300" author="vijaya.a">
		<createView viewName="FEEWAIVERS_VIEW" replaceIfExists="true">
	
	SELECT DISTINCT t1.finreference,
			    t1.finbranch,
			    t1.fintype,
			    t1.finccy,
			    t1.schedulemethod,
			    t1.profitdaysbasis,
			    t1.finstartdate,
			    t1.numberofterms,
			    t1.custid,
			    t1.finamount,
			    t1.maturitydate,
			    t1.finrepaymentamount,
			    t1.finisactive,
			    t1.blacklisted,
			    t1.feechargeamt,
			    t1.insuranceamt,
			    t1.graceterms,
			    t1.allowgrcperiod,
			    t1.grcperiodenddate,
			    t1.alwmultidisb,
			    t1.defferments,
			    t1.allowgrcpftrvw,
			    t1.allowrepayrvw,
			    t1.lastrepaydate,
			    t1.lastrepaypftdate,
			    t1.alloweddefrpychange,
			    t1.availeddefrpychange,
			    t1.migratedfinance,
			    t1.closingstatus,
			    t1.repayratebasis,
			    t1.manualschedule,
			    t1.fincurrassetvalue,
			    t1.takeoverfinance,
			    t1.nextrolloverdate,
			    t1.availedunplanemi,
			    t1.availedreageh,
			    t1.maxunplannedemi,
			    t1.maxreageholidays,
			    t1.downpayment,
			    t1.planemihalw,
			    t1.calterms,
			    t1.ratechganyday,
			    t1.finassetvalue,
			    t2.custcif AS lovdesccustcif,
			    t3.finisalwdifferment AS lovdescfinalwdeferment,
			    t3.findivision AS lovdescfindivision,
			    t3.fincategory AS lovdescproductcodename,
			    t4.productcategory,
			    COALESCE(t9.noinst, 0) AS noinst,
			    COALESCE(t5.roledesc, (t10.nextrolecode)) AS lovdescrequeststage,
			    t10.waiverid,
			    t10.event AS rcdmaintainsts,
			    t10.nextrolecode,
			    t10.recordstatus,
			    t10.recordtype
			   FROM feewaiverheader_temp t10
			     JOIN financemain t1 ON t1.finreference = t10.finreference
			     JOIN customers t2 ON t1.custid = t2.custid
			     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
			     LEFT JOIN secroles t5 ON t10.nextrolecode = t5.rolecd
			     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
			     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
			     JOIN (( SELECT manualadvise.finreference
			           FROM manualadvise
			          WHERE manualadvise.advisetype = 1 AND (manualadvise.adviseamount - manualadvise.paidamount - manualadvise.waivedamount) > 0)
			        UNION ALL
			         (SELECT finoddetails.finreference
			           FROM finoddetails
			          WHERE finoddetails.totpenaltybal > 0 OR finoddetails.lpibal > 0)) t ON t.finreference = t1.finreference
			  WHERE t10.event = 'FeeWaivers'
			UNION ALL
				 SELECT DISTINCT t1.finreference,
				    t1.finbranch,
				    t1.fintype,
				    t1.finccy,
				    t1.schedulemethod,
				    t1.profitdaysbasis,
				    t1.finstartdate,
				    t1.numberofterms,
				    t1.custid,
				    t1.finamount,
				    t1.maturitydate,
				    t1.finrepaymentamount,
				    t1.finisactive,
				    t1.blacklisted,
				    t1.feechargeamt,
				    t1.insuranceamt,
				    t1.graceterms,
				    t1.allowgrcperiod,
				    t1.grcperiodenddate,
				    t1.alwmultidisb,
				    t1.defferments,
				    t1.allowgrcpftrvw,
				    t1.allowrepayrvw,
				    t1.lastrepaydate,
				    t1.lastrepaypftdate,
				    t1.alloweddefrpychange,
				    t1.availeddefrpychange,
				    t1.migratedfinance,
				    t1.closingstatus,
				    t1.repayratebasis,
				    t1.manualschedule,
				    t1.fincurrassetvalue,
				    t1.takeoverfinance,
				    t1.nextrolloverdate,
				    t1.availedunplanemi,
				    t1.availedreageh,
				    t1.maxunplannedemi,
				    t1.maxreageholidays,
				    t1.downpayment,
				    t1.planemihalw,
				    t1.calterms,
				    t1.ratechganyday,
				    t1.finassetvalue,
				    t2.custcif AS lovdesccustcif,
				    t3.finisalwdifferment AS lovdescfinalwdeferment,
				    t3.findivision AS lovdescfindivision,
				    t3.fincategory AS lovdescproductcodename,
				    t4.productcategory,
				    COALESCE(t9.noinst, 0) AS noinst,
				    NULL AS lovdescrequeststage,
				    0  AS waiverid,
				    NULL AS rcdmaintainsts,
				    NULL AS nextrolecode,
				    NULL AS recordstatus,
				    NULL AS recordtype
				   FROM financemain t1
				     JOIN customers t2 ON t1.custid = t2.custid
				     JOIN rmtfinancetypes t3 ON t1.fintype = t3.fintype
				     LEFT JOIN secroles t5 ON t1.nextrolecode = t5.rolecd
				     JOIN bmtproduct t4 ON t3.fincategory = t4.productcode
				     LEFT JOIN finpftdetails t9 ON t1.finreference = t9.finreference
				     JOIN (( SELECT manualadvise.finreference
				           FROM manualadvise
				          WHERE manualadvise.advisetype = 1 AND (manualadvise.adviseamount - manualadvise.paidamount - manualadvise.waivedamount) > 0)
				        UNION ALL
				         (SELECT finoddetails.finreference
				           FROM finoddetails
				          WHERE finoddetails.totpenaltybal > 0 OR finoddetails.lpibal > 0)) t ON t.finreference = t1.finreference
				  WHERE NOT (EXISTS ( SELECT 1 AS expr1
				           FROM feewaiverheader_temp
				          WHERE feewaiverheader_temp.finreference = t1.finreference))	

						  	</createView>
	</changeSet>

	<changeSet id="301" author="vijaya.a">
		<createView viewName="PAYMENTTAXDETAIL_VIEW"
			replaceIfExists="true">
			SELECT T1.paymentdetailid, T1.paymentid, T1.taxcomponent, T1.paidcgst, T1.paidsgst, T1.paidugst, T1.paidigst, T1.totalgst
			FROM PaymentTaxDetail_temp T1
			
			UNION ALL
			 
			SELECT T1.paymentdetailid, T1.paymentid, T1.taxcomponent, T1.paidcgst, T1.paidsgst, T1.paidugst, T1.paidigst, T1.totalgst
			FROM PaymentTaxDetail T1
			WHERE NOT (EXISTS (SELECT 1 FROM PaymentTaxDetail_temp WHERE PaymentTaxDetail_temp.paymentdetailid = T1.paymentdetailid))
		</createView>
	</changeSet>

	<changeSet id="302" author="Murty.Y">
		<createView viewName="receiptallocationdetail_view"
			replaceIfExists="true">
			SELECT t1.receiptallocationid,t1.receiptid,t1.allocationid,t1.allocationtype,t1.allocationto,t1.paidamount,t1.waivedamount,
			COALESCE(t3.feetypedesc, t5.feetypedesc) AS typedesc,t1.paidgst,t1.waivedreqamount,t1.waiveraccepted,t1.totaldue,t1.waivedgst,t1.taxheaderid
   			FROM receiptallocationdetail_temp t1 
   			LEFT JOIN finfeedetail_temp t2 ON t1.allocationto = t2.feeid AND t1.allocationtype = 'FEE'
   			LEFT JOIN feetypes t3 ON t2.feetypeid = t3.feetypeid 
   			LEFT JOIN manualadvise t4 ON t1.allocationto = t4.adviseid AND t1.allocationtype = 'MANADV' 
   			LEFT JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
			UNION ALL
 			SELECT t1.receiptallocationid,t1.receiptid,t1.allocationid,t1.allocationtype,t1.allocationto,t1.paidamount,t1.waivedamount,
 			COALESCE(t3.feetypedesc, t5.feetypedesc) AS typedesc,t1.paidgst,t1.waivedreqamount,t1.waiveraccepted,t1.totaldue,t1.waivedgst,t1.taxheaderid
   			FROM receiptallocationdetail t1
   			LEFT JOIN finfeedetail t2 ON t1.allocationto = t2.feeid AND t1.allocationtype = 'FEE' 
   			LEFT JOIN feetypes t3 ON t2.feetypeid = t3.feetypeid 
   			LEFT JOIN manualadvise t4 ON t1.allocationto = t4.adviseid AND t1.allocationtype = 'MANADV'
   			 LEFT JOIN feetypes t5 ON t4.feetypeid = t5.feetypeid
  			WHERE NOT (EXISTS ( SELECT 1 FROM receiptallocationdetail_temp WHERE receiptallocationdetail_temp.receiptid = t1.receiptid))
		</createView>
	</changeSet>

	<changeSet id="303" author="vijaya.a" dbms="mssql,postgresql">
		<createView viewName="LIMITCUSTOMERS_VIEW" replaceIfExists="true">
			select custid, 
				custcif, 
				CustShrtName,
			    CustCtgCode,
			    CustFName,
			    CustLName 
			    from Customers 
			    where CustId Not in (Select coalesce(CustomerID,0) FROM LimitHeader_view)
		</createView>
	</changeSet>

	<changeSet id="303.1" author="vijaya.a" dbms="oracle">
		<createView viewName="LIMITCUSTOMERS_VIEW" replaceIfExists="true">
			select custid, 
				custcif, 
				CustShrtName,
			    CustCtgCode,
			    CustFName,
			    CustLName 
			    from Customers 
			    where CustId Not in (Select coalesce(cast(CustomerID as number),0) FROM LimitHeader_view)
		</createView>
	</changeSet>

	<changeSet id="304" author="vijaya.a">
		<addColumn tableName="LimitHeader_temp">
			<column name="CUSTOMERIDS" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="305" author="vijaya.a">
		<addColumn tableName="LimitHeader">
			<column name="CUSTOMERIDS" type="bigint" />
		</addColumn>
	</changeSet>

	<changeSet id="305.1" author="vijaya.a" dbms="Oracle">
		<sql>
			<![CDATA[ 
				update LimitHeader_temp set CustomerIDs = cast(CUSTOMERID As NUMBER);
				update LimitHeader set CustomerIDs = cast(CUSTOMERID As NUMBER);
			]]>
		</sql>
	</changeSet>

	<changeSet id="306" author="vijaya.a" dbms="postgresql,mssql">
		<sql>
			<![CDATA[ 
				update LimitHeader_temp set CustomerIDs = cast(CUSTOMERID As BigInt);
				update LimitHeader set CustomerIDs = cast(CUSTOMERID As BigInt);
			]]>
		</sql>
	</changeSet>

	<changeSet id="307_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'limitheader_temp');
				select deps_save_and_drop_dependencies ('plf', 'limitheader');
			]]>
		</sql>
	</changeSet>

	<changeSet id="307" author="vijaya.a">
		<dropColumn tableName="LimitHeader_temp" columnName="CUSTOMERID" />
		<dropColumn tableName="LimitHeader" columnName="CUSTOMERID" />
	</changeSet>

	<changeSet id="308" author="vijaya.a">
		<renameColumn tableName="LimitHeader_temp" oldColumnName="CUSTOMERIDS"
			newColumnName="CUSTOMERID" />
		<renameColumn tableName="LimitHeader" oldColumnName="CUSTOMERIDS"
			newColumnName="CUSTOMERID" />
	</changeSet>

	<changeSet id="309_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
			   select deps_restore_dependencies ('plf', 'limitheader_temp');
			   select deps_restore_dependencies ('plf', 'limitheader');
			]]>
		</sql>
	</changeSet>

	<changeSet id="309" author="vijaya.a">
		<createView viewName="LIMITCUSTOMERS_VIEW" replaceIfExists="true">
		select custid, 
				custcif, 
				CustShrtName,
			    CustCtgCode,
			    CustFName,
			    CustLName 
			    from Customers 
			    where custId Not in (Select coalesce(CustomerID,0) FROM LimitHeader_view)
		</createView>
	</changeSet>
	<changeSet id="310" author="kranthi.k">
		<dropView viewName="Interestcertificate_view" />
	</changeSet>

	<changeSet id="311" author="shahbaj.b">
		<sql>
            <![CDATA[ 
				INSERT INTO SMTparameters VALUES ('DISB_REQ_REQUIRED', 'Disbursement Request Required', 'String', '0', 'Y', 1, 0, NULL, NULL,'Disbursement request required', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, '', NULL, NULL, NULL,0);
    	     ]]>
		</sql>
	</changeSet>


	<changeSet id="312_pre" author="meena.a">
		<sql>
			<![CDATA[ 
				delete From ReasonTypes where code='LOANCANCEL';
	 		]]>
		</sql>
	</changeSet>

	<changeSet id="312" author="meena.a">
		<sql>
			<![CDATA[ 
				insert into ReasonTypes (id, code, description,  Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) values( (select (seqno+1) from seqreasontypes), 'LOANCANCEL', 'Loan Cancelation',  1 , 1000, current_timestamp, 'Approved', '', '', '', '','', 0);
	 		]]>
		</sql>
	</changeSet>

	<changeSet id="313_pre" author="meena.a">
		<sql>
			<![CDATA[ 
				delete From ReasonCategory where code='LOANCANCEL';
	 		]]>
		</sql>
	</changeSet>

	<changeSet id="313" author="meena.a">
		<sql>
			<![CDATA[ 
				insert into ReasonCategory (id, code, description,  Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) values( (select (seqno+1) from seqReasonCategory), 'LOANCANCEL', 'Loan Cancelation',  1 , 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
	 		]]>
		</sql>
	</changeSet>

	<changeSet id="314" author="Varaprasad.K">
		<createTable tableName="RISKS_MITIGANTS_TEMP">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Risk" type="varchar(200)" />
			<column name="Mitigants" type="varchar(200)" />
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="315" author="Varaprasad.K">
		<createTable tableName="RISKS_MITIGANTS">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="Risk" type="varchar(200)" />
			<column name="Mitigants" type="varchar(200)" />
			<column name="Version" type="int">
				<constraints nullable="false" />
			</column>
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="316" author="Varaprasad.K">
		<createSequence sequenceName="SEQ_RISKS_MITIGANTS"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="317" author="Varaprasad.K">
		<createTable tableName="SANCTION_CONDITIONS_TEMP">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="SanctionCondition" type="varchar(200)" />
			<column name="Status" type="varchar(50)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="318" author="Varaprasad.K">
		<createTable tableName="SANCTION_CONDITIONS">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="SanctionCondition" type="varchar(200)" />
			<column name="Status" type="varchar(50)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="319" author="Varaprasad.K">
		<createSequence sequenceName="SEQ_SANCTION_CONDITIONS"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="320" author="Varaprasad.K">
		<createView viewName="finjointaccountdetails_aview"
			replaceIfExists="true">
			SELECT t1.jointaccountid,
				    t1.finreference,
				    t1.custcif,
				    t1.includerepay,
				    t1.repayaccountid,
				    t1.catofcoapplicant,
				    t1.authoritysignatory,
				    t1.sequence,
				    t1.includeincome,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    t3.custshrtname AS lovdesccifname,
				    t3.custid,
					t3.custdob lovCustDob
				   FROM finjointaccountdetails t1
				     LEFT JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     JOIN customers t3 ON t1.custcif = t3.custcif
				
			</createView>
	</changeSet>

	<changeSet id="321" author="Varaprasad.K">
		<createView viewName="finjointaccountdetails_tview"
			replaceIfExists="true">
			SELECT t1.jointaccountid,
				    t1.finreference,
				    t1.custcif,
				    t1.includerepay,
				    t1.repayaccountid,
				    t1.catofcoapplicant,
				    t1.authoritysignatory,
				    t1.sequence,
				    t1.includeincome,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    t3.custshrtname AS lovdesccifname,
				    t3.custid,
					t3.custdob lovCustDob
				   FROM finjointaccountdetails_temp t1
				     LEFT JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     JOIN customers t3 ON t1.custcif = t3.custcif
			</createView>
	</changeSet>

	<changeSet id="322" author="Varaprasad.K">
		<createView viewName="finjointaccountdetails_tview"
			replaceIfExists="true">
			SELECT t1.jointaccountid,
				    t1.finreference,
				    t1.custcif,
				    t1.includerepay,
				    t1.repayaccountid,
				    t1.catofcoapplicant,
				    t1.authoritysignatory,
				    t1.sequence,
				    t1.includeincome,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    t3.custshrtname AS lovdesccifname,
				    t3.custid,
					t3.custdob lovCustDob
				   FROM finjointaccountdetails_temp t1
				     LEFT JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     JOIN customers t3 ON t1.custcif = t3.custcif
				UNION ALL
				 SELECT t1.jointaccountid,
				    t1.finreference,
				    t1.custcif,
				    t1.includerepay,
				    t1.repayaccountid,
				    t1.catofcoapplicant,
				    t1.authoritysignatory,
				    t1.sequence,
				    t1.includeincome,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    t3.custshrtname AS lovdesccifname,
				    t3.custid,
					t3.custdob lovCustDob
				   FROM finjointaccountdetails t1
				     LEFT JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     JOIN customers t3 ON t1.custcif = t3.custcif
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM finjointaccountdetails_temp
				          WHERE finjointaccountdetails_temp.jointaccountid = t1.jointaccountid))
			</createView>
	</changeSet>

	<changeSet id="323" author="Varaprasad.K">
		<createView viewName="finguarantorsdetails_view"
			replaceIfExists="true">
			SELECT t1.guarantorid,
				    t1.finreference,
				    t1.bankcustomer,
				    t1.guarantorcif,
				    t1.guarantoridtype,
				    t1.guarantoridnumber,
				    t1.guranteepercentage,
				    t1.mobileno,
				    t1.emailid,
				    t1.guarantorproof,
				    t1.guarantorproofname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.guarantorcifname,
				    t1.remarks,
				    t1.addrhnbr,
				    t1.flatnbr,
				    t1.addrstreet,
				    t1.addrline1,
				    t1.addrline2,
				    t1.pobox,
				    t1.addrcity,
				    t1.addrprovince,
				    t1.addrcountry,
				    t1.addrzip,
				    t1.guarantorgendercode,
				    ( SELECT bmtidentitytype.identitydesc
				           FROM bmtidentitytype
				          WHERE bmtidentitytype.identitytype = t1.guarantoridtype) AS guarantoridtypename,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    COALESCE(t3.custid, 0) AS custid,
				    t3.custshrtname,
					t3.custdob lovCustDob
				   FROM finguarantorsdetails_temp t1
				     JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     LEFT JOIN customers t3 ON t1.guarantorcif = t3.custcif
				UNION ALL
				 SELECT t1.guarantorid,
				    t1.finreference,
				    t1.bankcustomer,
				    t1.guarantorcif,
				    t1.guarantoridtype,
				    t1.guarantoridnumber,
				    t1.guranteepercentage,
				    t1.mobileno,
				    t1.emailid,
				    t1.guarantorproof,
				    t1.guarantorproofname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.guarantorcifname,
				    t1.remarks,
				    t1.addrhnbr,
				    t1.flatnbr,
				    t1.addrstreet,
				    t1.addrline1,
				    t1.addrline2,
				    t1.pobox,
				    t1.addrcity,
				    t1.addrprovince,
				    t1.addrcountry,
				    t1.addrzip,
				    t1.guarantorgendercode,
				    ( SELECT bmtidentitytype.identitydesc
				           FROM bmtidentitytype
				          WHERE bmtidentitytype.identitytype = t1.guarantoridtype) AS guarantoridtypename,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    COALESCE(t3.custid, 0) AS custid,
				    t3.custshrtname,
					t3.custdob lovCustDob
				   FROM finguarantorsdetails t1
				     JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     LEFT JOIN customers t3 ON t1.guarantorcif = t3.custcif
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM finguarantorsdetails_temp
				          WHERE finguarantorsdetails_temp.guarantorid = t1.guarantorid))
			</createView>
	</changeSet>

	<changeSet id="324" author="Varaprasad.K">
		<createView viewName="finguarantorsdetails_tview"
			replaceIfExists="true">
			SELECT t1.guarantorid,
				    t1.finreference,
				    t1.bankcustomer,
				    t1.guarantorcif,
				    t1.guarantoridtype,
				    t1.guarantoridnumber,
				    t1.guranteepercentage,
				    t1.mobileno,
				    t1.emailid,
				    t1.guarantorproof,
				    t1.guarantorproofname,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t1.guarantorcifname,
				    t1.remarks,
				    t1.addrhnbr,
				    t1.flatnbr,
				    t1.addrstreet,
				    t1.addrline1,
				    t1.addrline2,
				    t1.pobox,
				    t1.addrcity,
				    t1.addrprovince,
				    t1.addrcountry,
				    t1.addrzip,
				    t1.guarantorgendercode,
				    ( SELECT bmtidentitytype.identitydesc
				           FROM bmtidentitytype
				          WHERE bmtidentitytype.identitytype = t1.guarantoridtype) AS guarantoridtypename,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    COALESCE(t3.custid, 0) AS custid,
				    t3.custshrtname,
					t3.custdob lovCustDob
				   FROM finguarantorsdetails_temp t1
				     JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     LEFT JOIN customers t3 ON t1.guarantorcif = t3.custcif
			</createView>
	</changeSet>

	<changeSet id="325" author="Varaprasad.K">
		<createView viewName="finguarantorsdetails_aview"
			replaceIfExists="true">
			SELECT t1.guarantorid,
					    t1.finreference,
					    t1.bankcustomer,
					    t1.guarantorcif,
					    t1.guarantoridtype,
					    t1.guarantoridnumber,
					    t1.guranteepercentage,
					    t1.mobileno,
					    t1.emailid,
					    t1.guarantorproof,
					    t1.guarantorproofname,
					    t1.version,
					    t1.lastmntby,
					    t1.lastmnton,
					    t1.recordstatus,
					    t1.rolecode,
					    t1.nextrolecode,
					    t1.taskid,
					    t1.nexttaskid,
					    t1.recordtype,
					    t1.workflowid,
					    t1.guarantorcifname,
					    t1.remarks,
					    t1.addrhnbr,
					    t1.flatnbr,
					    t1.addrstreet,
					    t1.addrline1,
					    t1.addrline2,
					    t1.pobox,
					    t1.addrcity,
					    t1.addrprovince,
					    t1.addrcountry,
					    t1.addrzip,
					    t1.guarantorgendercode,
					    ( SELECT bmtidentitytype.identitydesc
					           FROM bmtidentitytype
					          WHERE bmtidentitytype.identitytype = t1.guarantoridtype) AS guarantoridtypename,
					    t2.usrlogin,
					    t2.usrfname,
					    t2.usrmname,
					    t2.usrlname,
					    COALESCE(t3.custid, 0) AS custid,
					    t3.custshrtname,
						t3.custdob lovCustDob
					   FROM finguarantorsdetails t1
					     JOIN secusers t2 ON t1.lastmntby = t2.usrid
					     LEFT JOIN customers t3 ON t1.guarantorcif = t3.custcif
			</createView>
	</changeSet>

	<changeSet id="326" author="Varaprasad.K">
		<createTable tableName="DealRecommendation_Merits_Temp">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="DealMerits" type="varchar(200)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="327" author="Varaprasad.K">
		<createTable tableName="DealRecommendation_Merits">
			<column name="Id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="SeqNo" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="DealMerits" type="varchar(200)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="328" author="Varaprasad.K">
		<createSequence sequenceName="Seq_DealRecommendation_Merits"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="329" author="Varaprasad.K">
		<createTable tableName="DUE_DILIGENCE_CHECKLIST_TEMP">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Particulars" type="varchar(200)" />
			<column name="Status" type="varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="330" author="Varaprasad.K">
		<createTable tableName="DUE_DILIGENCE_CHECKLIST">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Particulars" type="varchar(200)" />
			<column name="Status" type="varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="331" author="Varaprasad.K">
		<createView viewName="DUE_DILIGENCE_CHECKLIST_VIEW"
			replaceIfExists="true">
			SELECT
				  T1.Id,
				  T1.Particulars,
				  T1.Status,
				  T1.Version,
				  T1.LastMntBy,
				  T1.LastMntOn,
				  T1.RecordStatus,
				  T1.RoleCode,
				  T1.NextRoleCode,
				  T1.TaskId,
				  T1.NextTaskId,
				  T1.RecordType,
				  T1.WorkflowId
				FROM
				  due_diligence_checKlist_temp T1
				UNION ALL
				SELECT
				  T1.Id,
				  T1.Particulars,
				  T1.Status,
				  T1.Version,
				  T1.LastMntBy,
				  T1.LastMntOn,
				  T1.RecordStatus,
				  T1.RoleCode,
				  T1.NextRoleCode,
				  T1.TaskId,
				  T1.NextTaskId,
				  T1.RecordType,
				  T1.WorkflowId
				FROM
				  due_diligence_checKlist T1 
				WHERE NOT EXISTS ( SELECT 1 FROM due_diligence_checKlist_temp WHERE id = T1.id)
				
			</createView>
	</changeSet>

	<changeSet id="332" author="Varaprasad.K">
		<createView viewName="DUE_DILIGENCE_CHECKLIST_AVIEW"
			replaceIfExists="true">
				SELECT
				  T1.Id,
				  T1.Particulars,
				  T1.Status,
				  T1.Version,
				  T1.LastMntBy,
				  T1.LastMntOn,
				  T1.RecordStatus,
				  T1.RoleCode,
				  T1.NextRoleCode,
				  T1.TaskId,
				  T1.NextTaskId,
				  T1.RecordType,
				  T1.WorkflowId
				FROM
				  due_diligence_checKlist T1 
			</createView>
	</changeSet>

	<changeSet id="333" author="Varaprasad.K">
		<createTable tableName="DUE_DILIGENCES">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ParticularId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Status" type="varchar(40)" />
			<column name="Remarks" type="Varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="334" author="Varaprasad.K">
		<createTable tableName="DUE_DILIGENCES_TEMP">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ParticularId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Status" type="varchar(40)" />
			<column name="Remarks" type="Varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>

	<changeSet id="335" author="Varaprasad.K">
		<addPrimaryKey tableName="DUE_DILIGENCES" columnNames="id"
			constraintName="PK_DUE_DILIGENCES_Id" />
	</changeSet>

	<changeSet id="336" author="Varaprasad.K">
		<addPrimaryKey tableName="DUE_DILIGENCES_TEMP"
			columnNames="id" constraintName="PK_DUE_DILIGENCES_TEMP_Id" />
	</changeSet>

	<changeSet id="337" author="Varaprasad.K">
		<addPrimaryKey tableName="DUE_DILIGENCE_CHECKLIST_TEMP"
			columnNames="id" constraintName="PK_DUE_DILIGNCE_CHKLIST_TMP_Id" />
	</changeSet>

	<changeSet id="338" author="Varaprasad.K">
		<addPrimaryKey tableName="DUE_DILIGENCE_CHECKLIST"
			columnNames="id" constraintName="PK_DUE_DILIGNCE_CHKLIST_Id" />
	</changeSet>

	<changeSet id="339" author="Varaprasad.K">
		<addForeignKeyConstraint constraintName="fk_DD_ParticularId"
			referencedTableName="DUE_DILIGENCE_CHECKLIST" baseColumnNames="ParticularId"
			baseTableName="DUE_DILIGENCES" referencedColumnNames="id" />
	</changeSet>
	
<!-- 	<changeSet id="339.1" author="Manoj.P">
			<dropForeignKeyConstraint baseTableName="DUE_DILIGENCES"
			constraintName="fk_DD_ParticularId" />
	</changeSet> -->

	<changeSet id="340" author="Varaprasad.K">
		<addForeignKeyConstraint constraintName="fk_DDT_ParticularId"
			referencedTableName="DUE_DILIGENCE_CHECKLIST_TEMP" baseColumnNames="ParticularId"
			baseTableName="DUE_DILIGENCES_TEMP" referencedColumnNames="id" />
	</changeSet>
	
	<!-- <changeSet id="340.1" author="Manoj.P">
			<dropForeignKeyConstraint baseTableName="DUE_DILIGENCES_TEMP"
			constraintName="fk_DDT_ParticularId" />
	</changeSet> -->

	<changeSet id="341" author="Varaprasad.K">
		<createSequence sequenceName="SeqDUE_DILIGENCES"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="342" author="Varaprasad.K">
		<createSequence sequenceName="SeqDUE_DILIGENCE_CHECKLIST"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="343" author="Varaprasad.K">
		<sql>
				<![CDATA[
				  	DELETE from SMTparameters WHERE SYSPARMCODE='FIN_SUMMARY_TAB_REQUIRED';
					INSERT INTO SMTparameters  VALUES ('FIN_SUMMARY_TAB_REQUIRED', 'Fianancial Summary Tab Visibility', 'String', '1', 'N', 1, 0, NULL, NULL,'Fianancial Summary Tab Visibility', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
				]]>
		</sql>
	</changeSet>

	<changeSet id="344" author="Varaprasad.K">
		<sql>
				<![CDATA[
				  	 INSERT INTO STAGETABDETAIL (TABID, TABCODE, TABDESCRIPTION, active) VALUES ((select coalesce(max(tabid)+1,0 + 1) from STAGETABDETAIL), 'FinSumry', 'Financial Summary', 1)
				]]>
		</sql>
	</changeSet>

	<changeSet id="345" author="meena.a">
		<sql>
			<![CDATA[ 
				Delete from ReasonCategory Where code = 'LOANCANCEL';
				Update seqReasonCategory set seqno = (seqno+1);
				insert into ReasonCategory (id, code, description,  Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId) values( (select (seqno+1) from seqReasonCategory), 'LOANCANCEL', 'Loan Cancelation',  1 , 1000, current_timestamp, 'Approved', '', '', '', '', '', 0);
	 		]]>
		</sql>
	</changeSet>
	<changeSet id="346" author="Varaprasad.K">
		<createView viewName="finjointaccountdetails_tview"
			replaceIfExists="true">
			SELECT t1.jointaccountid,
				    t1.finreference,
				    t1.custcif,
				    t1.includerepay,
				    t1.repayaccountid,
				    t1.catofcoapplicant,
				    t1.authoritysignatory,
				    t1.sequence,
				    t1.includeincome,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    t3.custshrtname AS lovdesccifname,
				    t3.custid,
					t3.custdob lovCustDob
				   FROM finjointaccountdetails_temp t1
				     LEFT JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     JOIN customers t3 ON t1.custcif = t3.custcif
			</createView>
	</changeSet>
	<changeSet id="347" author="Varaprasad.K">
		<createView viewName="finjointaccountdetails_view"
			replaceIfExists="true">
			SELECT t1.jointaccountid,
				    t1.finreference,
				    t1.custcif,
				    t1.includerepay,
				    t1.repayaccountid,
				    t1.catofcoapplicant,
				    t1.authoritysignatory,
				    t1.sequence,
				    t1.includeincome,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    t3.custshrtname AS lovdesccifname,
				    t3.custid,
					t3.custdob lovCustDob
				   FROM finjointaccountdetails_temp t1
				     LEFT JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     JOIN customers t3 ON t1.custcif = t3.custcif
				UNION ALL
				 SELECT t1.jointaccountid,
				    t1.finreference,
				    t1.custcif,
				    t1.includerepay,
				    t1.repayaccountid,
				    t1.catofcoapplicant,
				    t1.authoritysignatory,
				    t1.sequence,
				    t1.includeincome,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid,
				    t2.usrlogin,
				    t2.usrfname,
				    t2.usrmname,
				    t2.usrlname,
				    t3.custshrtname AS lovdesccifname,
				    t3.custid,
					t3.custdob lovCustDob
				   FROM finjointaccountdetails t1
				     LEFT JOIN secusers t2 ON t1.lastmntby = t2.usrid
				     JOIN customers t3 ON t1.custcif = t3.custcif
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM finjointaccountdetails_temp
				          WHERE finjointaccountdetails_temp.jointaccountid = t1.jointaccountid))
			</createView>
	</changeSet>
	<changeSet id="348" author="Varaprasad.K">
		<createTable tableName="RECOMMENDATION_NOTES_CONFIG">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Particulars" type="Varchar(500)" />
		</createTable>
	</changeSet>
	<changeSet id="349" author="Varaprasad.K">
		<createTable tableName="RECOMMENDATION_NOTES">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ParticularId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Remarks" type="Varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet id="350" author="Varaprasad.K">
		<createTable tableName="RECOMMENDATION_NOTES_TEMP">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="ParticularId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="Remarks" type="Varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet id="351" author="Varaprasad.K">
		<addPrimaryKey tableName="RECOMMENDATION_NOTES_TEMP"
			columnNames="id" constraintName="PK_RECOMENDTN_NOTES_TEMP_Id" />
	</changeSet>
	<changeSet id="352" author="Varaprasad.K">
		<addPrimaryKey tableName="RECOMMENDATION_NOTES"
			columnNames="id" constraintName="PK_RECOMENDTN_NOTES_Id" />
	</changeSet>
	<changeSet id="353" author="Varaprasad.K">
		<addPrimaryKey tableName="RECOMMENDATION_NOTES_CONFIG"
			columnNames="id" constraintName="PK_RECOMENDTN_NOTES_CONFIG_Id" />
	</changeSet>
	<changeSet id="354" author="Varaprasad.K">
		<addForeignKeyConstraint constraintName="fk_RN_ParticularId"
			referencedTableName="RECOMMENDATION_NOTES_CONFIG" baseColumnNames="ParticularId"
			baseTableName="RECOMMENDATION_NOTES" referencedColumnNames="id" />
	</changeSet>
	<changeSet id="355" author="Vara prasad K">
		<addForeignKeyConstraint constraintName="fk_RNT_ParticularId"
			referencedTableName="RECOMMENDATION_NOTES_CONFIG" baseColumnNames="ParticularId"
			baseTableName="RECOMMENDATION_NOTES_TEMP" referencedColumnNames="id" />
	</changeSet>
	<changeSet id="356" author="Vara prasad K">
		<createSequence sequenceName="SeqRECOMMENDATION_NOTE"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>

	<changeSet id="357_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="357" author="satyanarayana.g">
		<createView viewName="FINANCEMAIN_VIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT  LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC  LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE  FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD  LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC  LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON  LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION  LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC  LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME  LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY  LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC  DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC  REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC  DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC  SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE  LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC  LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC  EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME  CONNECTORCODE,
				    T40.DEALERCITY  CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL  FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE  BUSINESSVERTICALCODE,
				    BV.DESCRIPTION  BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN_TEMP T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
				UNION ALL
				 SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT AS LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC  LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE  FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD  LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC  LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON  LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION  LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC  LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME  LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY  LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC  DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC  REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC  DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC  SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE  LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC  LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC  EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME  CONNECTORCODE,
				    T40.DEALERCITY  CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL  FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE  BUSINESSVERTICALCODE,
				    BV.DESCRIPTION  BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
				  WHERE NOT (EXISTS ( SELECT 1  FROM FINANCEMAIN_TEMP
				  WHERE FINANCEMAIN_TEMP.FINREFERENCE = T1.FINREFERENCE))
		</createView>
	</changeSet>

	<changeSet id="357_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_view');
			]]>
		</sql>
	</changeSet>

	<changeSet id="358_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="358" author="satyanarayana.g">
		<createView viewName="FINANCEMAIN_TVIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT  LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC  LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT  LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT  LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT  LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED  LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT  LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC  LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE  FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD  LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC  LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON  LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION  LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC  LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME  LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY  LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC  DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC  REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC  DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC  SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE  LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE  LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC  LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC  EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME  CONNECTORCODE,
				    T40.DEALERCITY  CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL  FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE  BUSINESSVERTICALCODE,
				    BV.DESCRIPTION  BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN_TEMP T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
		</createView>
	</changeSet>

	<changeSet id="358_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="359_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="359" author="satyanarayana.g">
		<createView viewName="FINANCEMAIN_AVIEW" replaceIfExists="true">
			SELECT T1.FINREFERENCE,
				    T1.INVESTMENTREF,
				    T1.NUMBEROFTERMS,
				    T1.GRCPERIODENDDATE,
				    T1.ALLOWGRCPERIOD,
				    T1.GRACEBASERATE,
				    T1.GRACESPECIALRATE,
				    T1.GRCPFTRATE,
				    T1.GRCPFTFRQ,
				    T1.NEXTGRCPFTDATE,
				    T1.ALLOWGRCPFTRVW,
				    T1.GRCPFTRVWFRQ,
				    T1.NEXTGRCPFTRVWDATE,
				    T1.ALLOWGRCCPZ,
				    T1.GRCCPZFRQ,
				    T1.NEXTGRCCPZDATE,
				    T1.REPAYBASERATE,
				    T1.REPAYSPECIALRATE,
				    T1.REPAYPROFITRATE,
				    T1.REPAYFRQ,
				    T1.NEXTREPAYDATE,
				    T1.REPAYPFTFRQ,
				    T1.NEXTREPAYPFTDATE,
				    T1.ALLOWREPAYRVW,
				    T1.REPAYRVWFRQ,
				    T1.NEXTREPAYRVWDATE,
				    T1.ALLOWREPAYCPZ,
				    T1.REPAYCPZFRQ,
				    T1.NEXTREPAYCPZDATE,
				    T1.MATURITYDATE,
				    T1.CPZATGRACEEND,
				    T1.DOWNPAYMENT,
				    T1.GRACEFLATAMOUNT,
				    T1.REQREPAYAMOUNT,
				    T1.TOTALPROFIT,
				    T1.TOTALCPZ,
				    T1.TOTALGROSSPFT,
				    T1.TOTALGROSSGRCPFT,
				    T1.TOTALGRACEPFT,
				    T1.TOTALGRACECPZ,
				    T1.GRCRATEBASIS,
				    T1.REPAYRATEBASIS,
				    T1.FINTYPE,
				    T1.FINREMARKS,
				    T1.FINCCY,
				    T1.SCHEDULEMETHOD,
				    T1.PROFITDAYSBASIS,
				    T1.REQMATURITY,
				    T1.CALTERMS,
				    T1.CALMATURITY,
				    T1.FIRSTREPAY,
				    T1.LASTREPAY,
				    T1.FINSTARTDATE,
				    T1.FINAMOUNT,
				    T1.FINAMOUNT + T1.FEECHARGEAMT - T1.DOWNPAYMENT AS LOVDESCFINANCINGAMOUNT,
				    T1.FINREPAYMENTAMOUNT,
				    T1.CUSTID,
				    T1.DEFFERMENTS,
				    T1.PLANDEFERCOUNT,
				    T1.FINBRANCH,
				    T1.FINSOURCEID,
				    T1.ALLOWEDDEFRPYCHANGE,
				    T1.AVAILEDDEFRPYCHANGE,
				    T1.ALLOWEDDEFFRQCHANGE,
				    T1.AVAILEDDEFFRQCHANGE,
				    T1.RECALTYPE,
				    T1.FINASSETVALUE,
				    T1.DISBACCOUNTID,
				    T1.REPAYACCOUNTID,
				    T1.FINISACTIVE,
				    T1.LIMITVALID,
				    T1.OVERRIDELIMIT,
				    T1.SECURITYDEPOSIT,
				    T1.VERSION,
				    T1.LASTMNTBY,
				    T1.LASTMNTON,
				    T1.RECORDSTATUS,
				    T1.ROLECODE,
				    T1.NEXTROLECODE,
				    T1.TASKID,
				    T1.NEXTTASKID,
				    T1.RECORDTYPE,
				    T1.WORKFLOWID,
				    T7.FINTYPEDESC AS LOVDESCFINTYPENAME,
				    T7.FINMAXAMOUNT AS LOVDESCFINMAXAMT,
				    T7.FINMINAMOUNT AS LOVDESCFINMINAMOUNT,
				    T1.MINDOWNPAYPERC,
				    T7.FINISALWDIFFERMENT AS LOVDESCFINALWDEFERMENT,
				    T7.FINISDWPAYREQUIRED AS LOVDESCDWNPAYREQ,
				    T7.FINMAXDIFFERMENT AS LOVDESCFINMAXDIFFERMENT,
				    T12.BRANCHDESC AS LOVDESCFINBRANCHNAME,
				    T12.BRANCHPROVINCE AS FINBRANCHPROVINCECODE,
				    T1.LASTREPAYDATE,
				    T1.LASTREPAYPFTDATE,
				    T1.LASTREPAYRVWDATE,
				    T1.LASTREPAYCPZDATE,
				    T1.ALLOWGRCREPAY,
				    T1.GRCSCHDMTHD,
				    T1.GRCMARGIN,
				    T1.REPAYMARGIN,
				    T1.FINCURRASSETVALUE,
				    T1.FINCOMMITMENTREF,
				    T1.FINLIMITREF,
				    T1.DEPRECIATIONFRQ,
				    T1.FINCONTRACTDATE,
				    T1.NEXTDEPDATE,
				    T1.LASTDEPDATE,
				    T1.FINACCOUNT,
				    T1.FINCUSTPFTACCOUNT,
				    T17.ACRTILLLBD AS LOVDESCACCRUEDTILLLBD,
				    T7.FINRVWRATEAPPLFOR,
				    T1.TOTALREPAYAMT,
				    T1.CLOSINGSTATUS,
				    T1.FINAPPROVEDDATE,
				    T1.FEECHARGEAMT,
				    T1.BLACKLISTED,
				    T1.FINREPAYPFTONFRQ,
				    T1.ANUALIZEDPERCRATE,
				    T1.EFFECTIVERATEOFRETURN,
				    T1.MIGRATEDFINANCE,
				    T1.SCHEDULEMAINTAINED,
				    T1.SCHEDULEREGENERATED,
				    T1.FINPURPOSE,
				    T39.LOANPURPOSEDESC AS LOVDESCFINPURPOSENAME,
				    T1.FINSTATUS,
				    T1.FINSTSREASON,
				    T1.INITIATEUSER,
				    T1.BANKNAME,
				    T1.IBAN,
				    T1.ACCOUNTTYPE,
				    T1.DDAREFERENCENO,
				    T7.FINSCHEDULEON AS LOVDESCFINSCHEDULEON,
				    T1.CUSTDSR,
				    T1.JOINTACCOUNT,
				    T1.JOINTCUSTID,
				    T1.DOWNPAYBANK,
				    T1.DOWNPAYSUPL,
				    T1.DOWNPAYACCOUNT,
				    T1.SECURITYCOLLATERAL,
				    T1.APPROVED,
				    T1.DISCREPANCY,
				    T1.LIMITAPPROVED,
				    T1.GRACETERMS,
				    T7.FINDIVISION AS LOVDESCFINDIVISION,
				    T1.RCDMAINTAINSTS,
				    T1.FINREPAYMETHOD,
				    T1.GRCPROFITDAYSBASIS,
				    T1.STEPFINANCE,
				    T1.STEPTYPE,
				    T1.STEPPOLICY,
				    T1.ALWMANUALSTEPS,
				    T1.NOOFSTEPS,
				    T1.LINKEDFINREF,
				    T1.NEXTUSERID,
				    T1.PRIORITY,
				    T24.POLICYDESC AS LOVDESCSTEPPOLICYNAME,
				    T1.GRCMINRATE,
				    T1.GRCMAXRATE,
				    T1.RPYMINRATE,
				    T1.RPYMAXRATE,
				    T1.DEVIATIONAPPROVAL,
				    T1.MANUALSCHEDULE,
				    T1.TAKEOVERFINANCE,
				    T1.GRCADVBASERATE,
				    T1.GRCADVMARGIN,
				    T1.GRCADVPFTRATE,
				    T1.RPYADVBASERATE,
				    T1.RPYADVMARGIN,
				    T1.RPYADVPFTRATE,
				    T1.SUPPLEMENTRENT,
				    T1.INCREASEDCOST,
				    T1.CREDITINSAMT,
				    T1.ROLLOVERFRQ,
				    T1.NEXTROLLOVERDATE,
				    T27.CUSTSTSDESCRIPTION,
				    T1.SHARIASTATUS,
				    T1.INITIATEDATE,
				    T1.FINPREAPPROVEDREF,
				    T1.MMAID,
				    T1.ACCOUNTSOFFICER,
				    T1.FEEACCOUNTID,
				    T1.FINCANCELAC,
				    T28.DEALERNAME AS LOVDESCACCOUNTSOFFICER,
				    T28.DEALERCITY AS LOVDESCSOURCECITY,
				    T1.DSACODE,
				    T30.ROFFICERDESC AS DSACODEDESC,
				    T1.TDSAPPLICABLE,
				    T1.MANDATEID,
				    T1.DROPLINEFRQ,
				    T1.FIRSTDROPLINEDATE,
				    T1.PFTSERVICINGODLIMIT,
				    T1.INSURANCEAMT,
				    T1.DEDUCTINSDISB,
				    T1.ALWBPI,
				    T1.BPITREATMENT,
				    T1.PLANEMIHALW,
				    T1.PLANEMIHMETHOD,
				    T1.PLANEMIHMAXPERYEAR,
				    T1.PLANEMIHMAX,
				    T1.PLANEMIHLOCKPERIOD,
				    T1.PLANEMICPZ,
				    T1.CALROUNDINGMODE,
				    T1.ALWMULTIDISB,
				    T1.APPLICATIONNO,
				    T1.REFERRALID,
				    T33.ROFFICERDESC AS REFERRALIDDESC,
				    T1.DMACODE,
				    T34.ROFFICERDESC AS DMACODEDESC,
				    T1.SALESDEPARTMENT,
				    T35.DEPTDESC AS SALESDEPARTMENTDESC,
				    T1.QUICKDISB,
				    T1.WIFREFERENCE,
				    T1.UNPLANEMIHLOCKPERIOD,
				    T1.UNPLANEMICPZ,
				    T1.REAGECPZ,
				    T1.MAXUNPLANNEDEMI,
				    T1.MAXREAGEHOLIDAYS,
				    T1.AVAILEDUNPLANEMI,
				    T1.AVAILEDREAGEH,
				    T1.BPIAMOUNT,
				    T1.DEDUCTFEEDISB,
				    T1.RVWRATEAPPLFOR,
				    T1.SCHCALONRVW,
				    T1.PASTDUEPFTCALMTHD,
				    T1.PASTDUEPFTMARGIN,
				    T1.DROPPINGMETHOD,
				    T1.RATECHGANYDAY,
				    T1.PROMOTIONCODE,
				    T1.RESTRUCTURELOAN,
				    T1.OLDFINREFERENCE,
				    T1.REAGEBUCKET,
				    T1.FINCATEGORY,
				    T1.PRODUCTCATEGORY,
				    T1.ROUNDINGTARGET,
				    T36.ENTITYCODE AS LOVDESCENTITYCODE,
				    T1.ELIGIBILITYMETHOD,
				    T38.FIELDCODEVALUE AS LOVELIGIBILITYMETHOD,
				    T38.VALUEDESC AS LOVDESCELIGIBILITYMETHOD,
				    T1.EMPLOYEENAME,
				    T37.ROFFICERDESC AS EMPLOYEENAMEDESC,
				    T1.SAMPLINGREQUIRED,
				    T1.LEGALREQUIRED,
				    T1.GRCMAXAMOUNT,
				    T1.CONNECTOR,
				    T40.DEALERNAME AS CONNECTORCODE,
				    T40.DEALERCITY AS CONNECTORDESC,
				    T1.ADVANCEEMI,
				    T1.ADVEMITERMS,
				    T1.BPIPFTDAYSBASIS,
				    T1.FIXEDRATETENOR,
				    T1.FIXEDTENORRATE,
				    T12.BRANCHTEL AS FINBRANCHCONTACT,
				    T1.PROCESSATTRIBUTES,
				    T1.BUSINESSVERTICAL,
				    BV.CODE AS BUSINESSVERTICALCODE,
				    BV.DESCRIPTION AS BUSINESSVERTICALDESC,
				    T1.GRCADVTYPE,
				    T1.GRCADVTERMS,
				    T1.ADVTYPE,
				    T1.ADVTERMS,
				    T1.ADVSTAGE,
				    T1.TDSPERCENTAGE,
				    T1.TDSSTARTDATE,
				    T1.TDSENDDATE,
				    T1.TDSLIMITAMT,
				    T1.VANREQ,
				    T1.VANCODE,
				    T1.ALLOWDRAWINGPOWER,
				    T1.ALLOWREVOLVING,
				    T1.SANBSDSCHDLE,
				    T1.PROMOTIONSEQID,
				    T1.SVAMOUNT,
				    T1.CBAMOUNT,
				    T1.APPLIEDLOANAMT,
				    T1.FINISRATERVWATGRCEND
				   FROM FINANCEMAIN T1
				     JOIN RMTFINANCETYPES T7 ON T1.FINTYPE = T7.FINTYPE
				     LEFT JOIN RMTBRANCHES T12 ON T1.FINBRANCH = T12.BRANCHCODE
				     LEFT JOIN FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE
				     LEFT JOIN STEPPOLICYHEADER T24 ON T1.STEPPOLICY = T24.POLICYCODE
				     LEFT JOIN BMTCUSTSTATUSCODES T27 ON T1.FINSTATUS = T27.CUSTSTSCODE
				     LEFT JOIN AMTVEHICLEDEALER T28 ON T1.ACCOUNTSOFFICER = T28.DEALERID
				     LEFT JOIN RELATIONSHIPOFFICERS T30 ON T1.DSACODE = T30.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T33 ON T1.REFERRALID = T33.ROFFICERCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T34 ON T1.DMACODE = T34.ROFFICERCODE
				     LEFT JOIN BMTDEPARTMENTS T35 ON T1.SALESDEPARTMENT = T35.DEPTCODE
				     LEFT JOIN SMTDIVISIONDETAIL T36 ON T7.FINDIVISION = T36.DIVISIONCODE
				     LEFT JOIN RELATIONSHIPOFFICERS T37 ON T1.EMPLOYEENAME = T37.ROFFICERCODE
				     LEFT JOIN RMTLOVFIELDDETAIL T38 ON T1.ELIGIBILITYMETHOD = T38.FIELDCODEID AND T38.FIELDCODE = 'ELGMETHOD'
				     LEFT JOIN LOANPURPOSES T39 ON T1.FINPURPOSE = T39.LOANPURPOSECODE
				     LEFT JOIN AMTVEHICLEDEALER T40 ON T1.CONNECTOR = T40.DEALERID
				     LEFT JOIN BUSINESS_VERTICAL BV ON BV.ID = T1.BUSINESSVERTICAL
		</createView>
	</changeSet>

	<changeSet id="359_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'financemain_aview');
			]]>
		</sql>
	</changeSet>
	<changeSet id="360" author="Vara prasad K">
		<createTable tableName="SynopsisDetails_Temp">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="CustomerBackGround" type="Varchar(500)" />
			<column name="DetailedBusinessProfile" type="Varchar(500)" />
			<column name="DetailsofGroupCompaniesIfAny" type="Varchar(500)" />
			<column name="PdDetails" type="Varchar(500)" />
			<column name="MajorProduct" type="Varchar(500)" />
			<column name="OtherRemarks" type="Varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet id="361" author="Vara prasad K">
		<createTable tableName="SynopsisDetails">
			<column name="id" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="CustomerBackGround" type="Varchar(500)" />
			<column name="DetailedBusinessProfile" type="Varchar(500)" />
			<column name="DetailsofGroupCompaniesIfAny" type="Varchar(500)" />
			<column name="PdDetails" type="Varchar(500)" />
			<column name="MajorProduct" type="Varchar(500)" />
			<column name="OtherRemarks" type="Varchar(500)" />
			<column name="Version" type="int" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="varchar(50)" />
			<column name="RoleCode" type="varchar(100)" />
			<column name="NextRoleCode" type="varchar(200)" />
			<column name="TaskId" type="varchar(50)" />
			<column name="NextTaskId" type="varchar(200)" />
			<column name="RecordType" type="varchar(50)" />
			<column name="WorkFlowId" type="bigint">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet id="362" author="Vara prasad K">
		<createSequence sequenceName="SeqSynopsisDetails"
			incrementBy="1" startValue="1" minValue="1" maxValue="999999999999999999" />
	</changeSet>



	<changeSet id="363" author="saiteja.r">
		<addColumn tableName="AMTVehicleDealer_Temp">
			<column name="BranchCode" type="varchar(2000)" />
		</addColumn>
	</changeSet>


	<changeSet id="364" author="saiteja.r">
		<addColumn tableName="AMTVehicleDealer">
			<column name="BranchCode" type="varchar(2000)" />
		</addColumn>
	</changeSet>

	<changeSet id="365" author="saiteja.r">
		<createView viewName="AMTVehicleDealer_View"
			replaceIfExists="true">
		SELECT t1.dealerid,
   			 t1.dealertype,
    		 t1.dealername,
  			 t1.dealertelephone,
   			 t1.dealerfax,
  			 t1.dealeraddress1,
			 t1.dealeraddress2,
			 t1.dealeraddress3,
			 t1.dealeraddress4,
			 t1.dealercountry,
			 t5.countrydesc AS lovdesccountry,
   			 t1.dealerprovince,
   			 t4.cpprovincename AS lovdescprovince,
   			 t1.dealercity,
  			 t3.pccityname AS lovdesccity,
  			 t1.email,
     		 t1.pobox,
   			 t1.zipcode,
   			 t1.active,
   			 t1.emirates,
   			 t1.commisionpaidat,
   			 t1.calculationrule,
   			 t7.rulecodedesc AS calruledesc,
   			 t1.paymentmode,
  			 t1.accountnumber,
   			 t1.accountingsetid,
   			 t8.accountsetcode AS accountingsetcode,
   			 t8.accountsetcodename AS accountingsetdesc,
   			 t9.cpprovincename AS emiratesdescription,
   			 t1.sellertype,
   			 t1.pannumber,
   			 t1.uidnumber,
   			 t1.taxnumber,
   			 t1.accountno,
   			 t1.accounttype,
   			 t1.fromprovince,
    		 t10.cpprovincename AS fromprovincename,
   			 t1.toprovince,
   			 t11.cpprovincename AS toprovincename,
   			 t1.bankbranchid,
   			 t12.branchcode AS bankbranchcode,
   			 t12.branchdesc AS bankbranchcodename,
   			 t12.ifsc AS branchifsccode,
   			 t12.micr AS branchmicrcode,
   			 t12.city AS branchcity,
   			 t13.bankname,
   			 t1.version,
   			 t1.lastmntby,
   			 t1.lastmnton,
   			 t1.recordstatus,
   			 t1.rolecode,
  			 t1.nextrolecode,
   			 t1.taskid,
   			 t1.nexttaskid,
   			 t1.recordtype,
   			 t1.workflowid,
   			 t1.code,
   			 t1.productctg,
   			 t14.productctgdesc,
   			 t1.shortcode,
   			 t1.branchcode 
   		FROM amtvehicledealer_temp t1
    		 LEFT JOIN rmtprovincevscity t3 ON t1.dealercountry = t3.pccountry AND t1.dealerprovince = t3.pcprovince AND t1.dealercity = t3.pccity
    		 LEFT JOIN rmtcountryvsprovince t4 ON t1.dealercountry = t4.cpcountry AND t1.dealerprovince = t4.cpprovince
    		 LEFT JOIN bmtcountries t5 ON t1.dealercountry = t5.countrycode
    		 LEFT JOIN rules t7 ON t1.calculationrule = t7.rulecode AND t7.ruleevent = 'ADDDBS'
    		 LEFT JOIN rmtaccountingset t8 ON t1.accountingsetid = t8.accountsetid
    		 LEFT JOIN rmtcountryvsprovince t9 ON t1.emirates = t9.cpprovince
    		 LEFT JOIN rmtcountryvsprovince t10 ON t1.fromprovince = t10.cpprovince
    		 LEFT JOIN rmtcountryvsprovince t11 ON t1.toprovince = t11.cpprovince
    		 LEFT JOIN bankbranches t12 ON t1.bankbranchid = t12.bankbranchid
    		 LEFT JOIN bmtbankdetail t13 ON t12.bankcode = t13.bankcode
    		 LEFT JOIN vasproductcategory t14 ON t1.productctg = t14.productctg
		UNION ALL
 		 SELECT t1.dealerid,
   			 t1.dealertype,
   			 t1.dealername,
   			 t1.dealertelephone,
   			 t1.dealerfax,
   			 t1.dealeraddress1,
   			 t1.dealeraddress2,
   			 t1.dealeraddress3,
   			 t1.dealeraddress4,
   			 t1.dealercountry,
   			 t5.countrydesc AS lovdesccountry,
   			 t1.dealerprovince,
   			 t4.cpprovincename AS lovdescprovince,
   			 t1.dealercity,
   			 t3.pccityname AS lovdesccity,
   			 t1.email,
   			 t1.pobox,
   			 t1.zipcode,
   			 t1.active,
   			 t1.emirates,
   			 t1.commisionpaidat,
    		 t1.calculationrule,
   			 t7.rulecodedesc AS calruledesc,
   			 t1.paymentmode,
   			 t1.accountnumber,
   			 t1.accountingsetid,
   			 t8.accountsetcode AS accountingsetcode,
   			 t8.accountsetcodename AS accountingsetdesc,
   			 t9.cpprovincename AS emiratesdescription,
   			 t1.sellertype,
   			 t1.pannumber,
   			 t1.uidnumber,
   			 t1.taxnumber,
   			 t1.accountno,
   			 t1.accounttype,
   			 t1.fromprovince,
    		 t10.cpprovincename AS fromprovincename,
   			 t1.toprovince,
   			 t11.cpprovincename AS toprovincename,
   			 t1.bankbranchid,
   			 t12.branchcode AS bankbranchcode,
   			 t12.branchdesc AS bankbranchcodename,
   			 t12.ifsc AS branchifsccode,
   			 t12.micr AS branchmicrcode,
   			 t12.city AS branchcity,
   			 t13.bankname,
   			 t1.version,
   			 t1.lastmntby,
   			 t1.lastmnton,
   			 t1.recordstatus,
   			 t1.rolecode,
    		 t1.nextrolecode,
   			 t1.taskid,
   			 t1.nexttaskid,
   			 t1.recordtype,
   			 t1.workflowid,
   			 t1.code,
   			 t1.productctg,
   			 t14.productctgdesc,
   			 t1.shortcode,
   			 t1.branchcode
  		FROM amtvehicledealer t1
   			 LEFT JOIN rmtprovincevscity t3 ON t1.dealercountry = t3.pccountry AND t1.dealerprovince = t3.pcprovince AND t1.dealercity = t3.pccity AND t1.dealercity = t3.pccity
    		 LEFT JOIN rmtcountryvsprovince t4 ON t1.dealercountry = t4.cpcountry AND t1.dealerprovince = t4.cpprovince
    		 LEFT JOIN bmtcountries t5 ON t1.dealercountry = t5.countrycode
    		 LEFT JOIN rules t7 ON t1.calculationrule = t7.rulecode AND t7.ruleevent = 'ADDDBS'
    		 LEFT JOIN rmtaccountingset t8 ON t1.accountingsetid = t8.accountsetid
    		 LEFT JOIN rmtcountryvsprovince t9 ON t1.emirates = t9.cpprovince
    		 LEFT JOIN rmtcountryvsprovince t10 ON t1.fromprovince = t10.cpprovince
    		 LEFT JOIN rmtcountryvsprovince t11 ON t1.toprovince = t11.cpprovince
   			 LEFT JOIN bankbranches t12 ON t1.bankbranchid = t12.bankbranchid
    		 LEFT JOIN bmtbankdetail t13 ON t12.bankcode = t13.bankcode
    		 LEFT JOIN vasproductcategory t14 ON t1.productctg = t14.productctg
 		WHERE NOT (EXISTS ( SELECT 1
          	 FROM amtvehicledealer_temp
         	 WHERE amtvehicledealer_temp.dealerid = t1.dealerid))
	</createView>
	</changeSet>

	<changeSet id="366" author="saiteja.r">
		<createView viewName="AMTVehicleDealer_AView"
			replaceIfExists="true">
			 SELECT t1.dealerid,
    			t1.dealertype,
    			t1.dealername,
    			t1.dealertelephone,
    			t1.dealerfax,
    			t1.dealeraddress1,
    			t1.dealeraddress2,
    			t1.dealeraddress3,
    			t1.dealeraddress4,
    			t1.dealercountry,
   				t5.countrydesc AS lovdesccountry,
    			t1.dealerprovince,
    			t4.cpprovincename AS lovdescprovince,
    			t1.dealercity,
    			t3.pccityname AS lovdesccity,
			    t1.email,
			    t1.pobox,
			    t1.zipcode,
			    t1.active,
			    t1.emirates,
			    t1.commisionpaidat,
			    t1.calculationrule,
			    t7.rulecodedesc AS calruledesc,
			    t1.paymentmode,
			    t1.accountnumber,
			    t1.accountingsetid,
			    t8.accountsetcode AS accountingsetcode,
			    t8.accountsetcodename AS accountingsetdesc,
			    t9.cpprovincename AS emiratesdescription,
			    t1.sellertype,
			    t1.pannumber,
			    t1.uidnumber,
			    t1.taxnumber,
			    t1.accountno,
			    t1.accounttype,
			    t1.fromprovince,
			    t10.cpprovincename AS fromprovincename,
			    t1.toprovince,
			    t11.cpprovincename AS toprovincename,
			    t1.bankbranchid,
			    t12.branchcode AS bankbranchcode,
			    t12.branchdesc AS bankbranchcodename,
			    t12.ifsc AS branchifsccode,
			    t12.micr AS branchmicrcode,
			    t12.city AS branchcity,
			    t13.bankname,
			    t1.version,
			    t1.lastmntby,
			    t1.lastmnton,
			    t1.recordstatus,
			    t1.rolecode,
			    t1.nextrolecode,
			    t1.taskid,
			    t1.nexttaskid,
			    t1.recordtype,
			    t1.workflowid,
			    t1.code,
			    t1.productctg,
			    t14.productctgdesc,
			    t1.shortcode,
			    t1.branchcode
  			FROM amtvehicledealer t1
			    LEFT JOIN rmtprovincevscity t3 ON t1.dealercountry = t3.pccountry AND t1.dealerprovince = t3.pcprovince AND t1.dealercity = t3.pccity AND t1.dealercity = t3.pccity
			    LEFT JOIN rmtcountryvsprovince t4 ON t1.dealercountry = t4.cpcountry AND t1.dealerprovince = t4.cpprovince
			    LEFT JOIN bmtcountries t5 ON t1.dealercountry = t5.countrycode
			    LEFT JOIN rules t7 ON t1.calculationrule = t7.rulecode AND t7.ruleevent = 'ADDDBS'
			    LEFT JOIN rmtaccountingset t8 ON t1.accountingsetid = t8.accountsetid
			    LEFT JOIN rmtcountryvsprovince t9 ON t1.emirates = t9.cpprovince
			    LEFT JOIN rmtcountryvsprovince t10 ON t1.fromprovince = t10.cpprovince
			    LEFT JOIN rmtcountryvsprovince t11 ON t1.toprovince = t11.cpprovince
			    LEFT JOIN bankbranches t12 ON t1.bankbranchid = t12.bankbranchid
			    LEFT JOIN bmtbankdetail t13 ON t12.bankcode = t13.bankcode
			    LEFT JOIN vasproductcategory t14 ON t1.productctg = t14.productctg
	</createView>
	</changeSet>

	<changeSet id="367" author="saiteja.r">
		<sql>
		<![CDATA[ 
			delete from errordetails where code='41096';
			INSERT INTO ErrorDetails VALUES('41096','EN','E','BranchCodes with multiple agencies will not be allowed','','Approved','','','','','',0,CURRENT_TIMESTAMP,1000,0);
		]]>
		</sql>
	</changeSet>

	<changeSet id="368" author="saiteja.r">
		<sql>
		<![CDATA[ 
			INSERT INTO SECRIGHTS VALUES ((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3,
			'VehicleDealerDialog_FIAGENCY_branch','VehicleDealerDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0);	
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS),
			(SELECT GRPID FROM SECGROUPS WHERE GRPCODE='DEALER_MAKER') ,
			(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VehicleDealerDialog_FIAGENCY_branch'), 
			1,0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
		]]>
		</sql>
	</changeSet>
	<changeSet id="369" author="varaprasad.k" dbms="postgresql">
		<sql>
			<![CDATA[
				truncate table deps_saved_ddl;
			]]>
		</sql>
	</changeSet>
	<changeSet id="370_pre" author="varaprasad.k" dbms="postgresql">
		<sql>
				<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'smtparameters');
				]]>
		</sql>
	</changeSet>
	<changeSet id="370" author="Varaprasad.k">
		<modifyDataType tableName="smtparameters" columnName="sysparmvalue"
			newDataType="varchar(1000)" />
	</changeSet>
	<changeSet id="370_post" author="varaprasad.k" dbms="postgresql">
		<sql>
				<![CDATA[
					select deps_restore_dependencies ('plf', 'smtparameters');
				]]>
		</sql>
	</changeSet>
	<changeSet id="371" author="Varaprasad.k">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'CET_BL';
				INSERT INTO SMTparameters  VALUES ('CET_BL', 'Business Loan Groupboxes visibility.', 'String', '1', 'gb_basicDetails,gb_customerDetails,gb_dueDiligenceDetail,gb_dealRecommendationMeritsDetails,gb_risksAndMitigants,gb_deviations,gb_convenantsDetails,gb_recommendationNoteDetails,gb_sanctionConditionsDetails,gb_otherDetails', 1, 0, NULL, NULL, 'Business Loan Groupboxes visibility.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>
	<changeSet id="372" author="Varaprasad.k">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'CET_PL';
				INSERT INTO SMTparameters  VALUES ('CET_PL', 'Personal Loan Groupboxes visibility.', 'String', '1', 'gb_basicDetails,gb_customerDetails,gb_recommendationNoteDetails,gb_deviations,gb_otherDetails', 1, 0, NULL, NULL, 'Personal Loan Groupboxes visibility.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>
	<changeSet id="373" author="Varaprasad.k">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'CET_LAEP';
				INSERT INTO SMTparameters  VALUES ('CET_LAEP', 'Leap Loan Groupboxes visibility.', 'String', '1', 'gb_basicDetails,gb_customerDetails,gb_risksAndMitigants,gb_recommendationNoteDetails,gb_dealRecommendationMeritsDetails,gb_otherDetails', 1, 0, NULL, NULL, 'Leap Loan Groupboxes visibility.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="374_pre" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'bankbranches');
					select deps_save_and_drop_dependencies ('plf', 'bankbranches_temp');
			]]>
		</sql>
	</changeSet>

	<changeSet id="374" author="satyanarayana.g">
		<modifyDataType tableName="BANKBRANCHES" columnName="PARENTBRANCH"
			newDataType="varchar(12)" />
	</changeSet>

	<changeSet id="375" author="satyanarayana.g">
		<modifyDataType tableName="BANKBRANCHES_TEMP"
			columnName="PARENTBRANCH" newDataType="varchar(12)" />
	</changeSet>

	<changeSet id="374_post" author="murthy.y" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'bankbranches');
					select deps_restore_dependencies ('plf', 'bankbranches_temp');
			]]>
		</sql>
	</changeSet>
	<changeSet id="376" author="Murthy">
		<dropForeignKeyConstraint baseTableName="FinExcessMovement"
			constraintName="FK_FEM_RID_FRH_RID" />
	</changeSet>
	<changeSet id="378" author="Varaprasad.K">
		<addForeignKeyConstraint constraintName="fk_DT_ParticularId"
			referencedTableName="DUE_DILIGENCE_CHECKLIST" baseColumnNames="ParticularId"
			baseTableName="DUE_DILIGENCES_TEMP" referencedColumnNames="id" />
	</changeSet>
	
	<!-- <changeSet id="378.1" author="Varaprasad.K">
		<dropForeignKeyConstraint baseTableName="DUE_DILIGENCES_TEMP"
		constraintName="fk_DT_ParticularId" />
    </changeSet> -->
	
	<changeSet id="379" author="Varaprasad.k">
		<sql>
			<![CDATA[
				Delete from SMTParameters where SysParmCode = 'CET_BUSINESS';
				INSERT INTO SMTparameters  VALUES ('CET_BUSINESS', 'Business Loan Groupboxes visibility.', 'String', '1', 'gb_basicDetails,gb_customerDetails,gb_dueDiligenceDetail,gb_dealRecommendationMeritsDetails,gb_risksAndMitigants,gb_deviations,gb_recommendationNoteDetails,gb_sanctionConditionsDetails,gb_otherDetails', 1, 0, NULL, NULL, 'Business Loan Groupboxes visibility.', 1, 1000, CURRENT_TIMESTAMP,'Approved', NULL, NULL, NULL, NULL, NULL, 0);
			]]>
		</sql>
   </changeSet>
   
	<changeSet id="380" author="Madhuri.N">
		<createView viewName="INTERESTCERTIFICATE_VIEW" replaceIfExists="true">
			select T2.CUSTSHRTNAME as CUSTNAME,T3.CUSTADDRHNBR ,T3.CUSTADDRSTREET,T11.COUNTRYDESC,
					T12.CPPROVINCENAME as CUSTADDRSTATE,T13.PCCITYNAME as CUSTADDRCITY,T3.CUSTADDRZIP,
					T8.FINREFERENCE,T4.CUSTEMAIL,T5.PHONENUMBER as CUSTPHONENUMBER,T6.FINTYPEDESC,
					T8.FINASSETVALUE,T8.EFFECTIVERATEOFRETURN as EFFECTIVERATE ,T10.ENTITYCODE,T10.ENTITYDESC,T10.PANNUMBER as ENTITYPANNUMBER,
					T10.ENTITYADDRHNBR,T10.ENTITYFLATNBR,T10.ENTITYADDRSTREET,
					T14.CPPROVINCENAME as ENTITYSTATE,T15.PCCITYNAME as ENTITYCITY,T10.pincode as entityZip,
					T1.FINPOSTDATE,T1.FINSCHDPFTPAID,T1.FINSCHDPRIPAID,T8.FINCCY,T8.finAssetValue as FinAmount,T8.fintype,t3.CUSTFLATNBR
			from    FINANCEMAIN T8
			left join FINREPAYDETAILS T1 on T8.FINREFERENCE =T1.FINREFERENCE 
			inner join CUSTOMERS T2 on T2.CUSTID=T8.CUSTID 
			left join CUSTOMERADDRESSES T3 on T3.CUSTID=T8.CUSTID and T3.CUSTADDRPRIORITY=5
			left join CUSTOMEREMAILS T4 on T4.CUSTID=T8.CUSTID and T4.CUSTEMAILPRIORITY=5
			left join CUSTOMERPHONENUMBERS T5 on T5.PHONECUSTID=T8.CUSTID and T5.PHONETYPEPRIORITY=5
			inner join RMTFINANCETYPES T6 on T6.FINTYPE=T8.FINTYPE
			inner join SMTDIVISIONDETAIL T9 on T9.DIVISIONCODE=T6.FINDIVISION
			inner join ENTITY T10 on T10.ENTITYCODE=T9.ENTITYCODE
			left join BMTCOUNTRIES T11 on T11.COUNTRYCODE=T3.CUSTADDRCOUNTRY
			left join RMTCOUNTRYVSPROVINCE T12 on T12.CPPROVINCE=T3.CUSTADDRPROVINCE
			left join RMTPROVINCEVSCITY T13 on T13.PCCITY=T3.CUSTADDRCITY
			left join RMTCOUNTRYVSPROVINCE T14 on T14.CPPROVINCE=T10.STATECODE
			inner join RMTPROVINCEVSCITY T15 on T15.PCCITY=T10.CITYCODE
		</createView>
	</changeSet>
		
	<changeSet id="377" author="keerthi.p">
		<comment> New columns added for CustomerEMails </comment>
		<addColumn tableName="CustomerEMails">
			<column name="DomainCheck" type="varchar(50)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="378" author="keerthi.p">
		<comment>New columns added for CustomerEMails</comment>
		<addColumn tableName="CustomerEMails_Temp">
			<column name="DomainCheck" type="varchar(50)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="379" author="keerthi.p">
		<createView viewName="CUSTOMEREMAILS_VIEW" replaceIfExists="true">
			SELECT CE.CUSTID,
					CE.CUSTEMAILTYPECODE,
					E.EMAILTYPEDESC LOVDESCCUSTEMAILTYPECODE,
					CE.CUSTEMAILPRIORITY,
					CE.CUSTEMAIL,
					CE.VERSION,
					CE.LASTMNTBY,
					CE.LASTMNTON,
					CE.RECORDSTATUS,
					CE.ROLECODE,
					CE.NEXTROLECODE,
					CE.TASKID,
					CE.NEXTTASKID,
					CE.RECORDTYPE,
					CE.WORKFLOWID,
					CE.DOMAINCHECK
					FROM CUSTOMEREMAILS_TEMP CE
					INNER JOIN BMTEMAILTYPES E ON CE.CUSTEMAILTYPECODE = E.EMAILTYPECODE
					UNION ALL
					SELECT CE.CUSTID,
					CE.CUSTEMAILTYPECODE,
					E.EMAILTYPEDESC LOVDESCCUSTEMAILTYPECODE,
					CE.CUSTEMAILPRIORITY,
					CE.CUSTEMAIL,
					CE.VERSION,
					CE.LASTMNTBY,
					CE.LASTMNTON,
					CE.RECORDSTATUS,
					CE.ROLECODE,
					CE.NEXTROLECODE,
					CE.TASKID,
					CE.NEXTTASKID,
					CE.RECORDTYPE,
					CE.WORKFLOWID,
					CE.DOMAINCHECK
					FROM CUSTOMEREMAILS CE
					INNER JOIN BMTEMAILTYPES E ON CE.CUSTEMAILTYPECODE = E.EMAILTYPECODE
					WHERE NOT EXISTS
					(SELECT 1 FROM CUSTOMEREMAILS_TEMP WHERE CUSTID = CE.CUSTID
					AND CUSTEMAILTYPECODE = CE.CUSTEMAILTYPECODE)
		</createView>
	</changeSet>
	
	<changeSet id="380" author="keerthi.p">
		<createView viewName="CUSTOMEREMAILS_AVIEW" replaceIfExists="true">
			SELECT CE.CUSTID,
					CE.CUSTEMAILTYPECODE,
					E.EMAILTYPEDESC LOVDESCCUSTEMAILTYPECODE,
					CE.CUSTEMAILPRIORITY,
					CE.CUSTEMAIL,
					CE.VERSION,
					CE.LASTMNTBY,
					CE.LASTMNTON,
					CE.RECORDSTATUS,
					CE.ROLECODE,
					CE.NEXTROLECODE,
					CE.TASKID,
					CE.NEXTTASKID,
					CE.RECORDTYPE,
					CE.WORKFLOWID,
					CE.DOMAINCHECK
					FROM CUSTOMEREMAILS CE
					INNER JOIN BMTEMAILTYPES E ON CE.CUSTEMAILTYPECODE = E.EMAILTYPECODE
		</createView>
	</changeSet>

	<changeSet id="381" author="rohith.s">
		<addColumn tableName="BuilderGroup_temp">
			<column name="PEDEVELOPERID" type="VARCHAR(100)"></column>
			<column name="CITY" type="VARCHAR(8)"></column>
			<column name="PROVINCE" type="VARCHAR(8)"></column>
			<column name="PINCODEID" type="bigint"></column>
			<column name="EXPLMTONAMT" type="decimal(18,0)"></column>
			<column name="EXPLMTONNOOFUNITS" type="decimal(18,0)"></column>
			<column name="CURREXPUNITS" type="decimal(18,0)"></column>
			<column name="CURREXPAMT" type="decimal(18,0)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="382" author="rohith.s">
		<addColumn tableName="BuilderGroup">
			<column name="PEDEVELOPERID" type="VARCHAR(100)"></column>
			<column name="CITY" type="VARCHAR(8)"></column>
			<column name="PROVINCE" type="VARCHAR(8)"></column>
			<column name="PINCODEID" type="bigint"></column>
			<column name="EXPLMTONAMT" type="decimal(18,0)"></column>
			<column name="EXPLMTONNOOFUNITS" type="decimal(18,0)"></column>
			<column name="CURREXPUNITS" type="decimal(18,0)"></column>
			<column name="CURREXPAMT" type="decimal(18,0)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="383" author="rohith.s">
		<addColumn tableName="BUILDERCOMPANY_temp">
			<column name="CUSTID" type="BIGINT"></column>
			<column name="APFTYPE" type="VARCHAR(50)"></column>
			<column name="PEDEVID" type="VARCHAR(100)"></column>
			<column name="ENTITYTYPE" type="VARCHAR(100)"></column>
			<column name="EMAILID" type="VARCHAR(100)"></column>
			<column name="CITYTYPE" type="VARCHAR(50)"></column>
			<column name="ADDRESS1" type="VARCHAR(255)"></column>
			<column name="ADDRESS2" type="VARCHAR(255)"></column>
			<column name="ADDRESS3" type="VARCHAR(255)"></column>
			<column name="CITY" type="VARCHAR(100)"></column>
			<column name="CODE" type="VARCHAR(10)"></column>
			<column name="DEVAVAILABLITY" type="bigint"></column>
			<column name="MAGNITUDE" type="decimal(16,2)"></column>
			<column name="ABSAVAILABLITY" type="decimal(16,2)"></column>
			<column name="TOTALPROJ" type="smallint"><constraints nullable="true" /></column>
			<column name="APPROVED" type="VARCHAR(20)"></column>
			<column name="REMARKS" type="VARCHAR(500)"></column>
			<column name="PANDETAILS" type="VARCHAR(10)"></column>
			<column name="BENFNAME" type="VARCHAR(150)"></column>
			<column name="ACCOUNTNO" type="VARCHAR(20)"></column>
			<column name="BANKBRANCHID" type="bigint"></column>
			<column name="LIMITONAMT" type="decimal(16,2)"></column>
			<column name="LIMITONUNITS" type="decimal(16,2)"></column>
			<column name="CURRENTEXPUNI" type="decimal(18,0)"></column>
			<column name="CURRENTEXPAMT" type="decimal(16,2)"></column>
			<column name="DATEOFINCOP" type="datetime"></column>
			<column name="ASSHLPLAYERS" type="smallint"><constraints nullable="true" /></column>
			<column name="ONGOINGPROJ" type="smallint"><constraints nullable="true" /></column>
			<column name="EXPINBUSINESS" type="smallint"><constraints nullable="true" /></column>
			<column name="RECOMMENDATION" type="VARCHAR(50)"></column>
			<column name="ACTIVE" type="smallint"><constraints nullable="true" /></column>
			<column name="NOOFPROJCONS" type="smallint"><constraints nullable="true" /></column>
			<column name="NOOFPROJ" type="smallint"><constraints nullable="true" /></column>
			<column name="MAGINTUDEINLACS" type="decimal(8,2)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="384" author="rohith.s">
		<addColumn tableName="BUILDERCOMPANY">
			<column name="CUSTID" type="BIGINT"></column>
			<column name="APFTYPE" type="VARCHAR(50)"></column>
			<column name="PEDEVID" type="VARCHAR(100)"></column>
			<column name="ENTITYTYPE" type="VARCHAR(100)"></column>
			<column name="EMAILID" type="VARCHAR(100)"></column>
			<column name="CITYTYPE" type="VARCHAR(50)"></column>
			<column name="ADDRESS1" type="VARCHAR(255)"></column>
			<column name="ADDRESS2" type="VARCHAR(255)"></column>
			<column name="ADDRESS3" type="VARCHAR(255)"></column>
			<column name="CITY" type="VARCHAR(100)"></column>
			<column name="CODE" type="VARCHAR(10)"></column>
			<column name="DEVAVAILABLITY" type="bigint"></column>
			<column name="MAGNITUDE" type="decimal(16,2)"></column>
			<column name="ABSAVAILABLITY" type="decimal(16,2)"></column>
			<column name="TOTALPROJ" type="smallint"><constraints nullable="true" /></column>
			<column name="APPROVED" type="VARCHAR(20)"></column>
			<column name="REMARKS" type="VARCHAR(500)"></column>
			<column name="PANDETAILS" type="VARCHAR(10)"></column>
			<column name="BENFNAME" type="VARCHAR(150)"></column>
			<column name="ACCOUNTNO" type="VARCHAR(20)"></column>
			<column name="BANKBRANCHID" type="BIGINT"></column>
			<column name="LIMITONAMT" type="decimal(16,2)"></column>
			<column name="LIMITONUNITS" type="decimal(16,2)"></column>
			<column name="CURRENTEXPUNI" type="decimal(18,0)"></column>
			<column name="CURRENTEXPAMT" type="decimal(16,2)"></column>
			<column name="DATEOFINCOP" type="datetime"></column>
			<column name="ASSHLPLAYERS" type="smallint"><constraints nullable="true" /></column>
			<column name="ONGOINGPROJ" type="smallint"><constraints nullable="true" /></column>
			<column name="EXPINBUSINESS" type="smallint"><constraints nullable="true" /></column>
			<column name="RECOMMENDATION" type="VARCHAR(50)"></column>
			<column name="ACTIVE" type="smallint"><constraints nullable="true" /></column>
			<column name="NOOFPROJCONS" type="decimal(5)"></column>
			<column name="NOOFPROJ" type="smallint"><constraints nullable="true" /></column>
			<column name="MAGINTUDEINLACS" type="decimal(8,2)"></column>
		</addColumn>
	</changeSet>

	<changeSet id="385" author="rohith.s">
		<createView viewName="BUILDERCOMPANY_VIEW" replaceIfExists="true">
				SELECT
			  T1.ID,
			  T1.NAME,
			  T1.SEGMENTATION,
			  T1.GROUPID ,
			  T2.VALUEDESC SEGMENTATIONNAME,
			  T2.FIELDCODE ,
			  T3.NAME GROUPIDNAME,
			  T1.APFTYPE,
			  T1.PEDEVID,
			  T1.ENTITYTYPE,
			  T1.EMAILID,
			  T1.CITYTYPE,
			  T1.ADDRESS1,
			  T1.ADDRESS2,
			  T1.ADDRESS3,
			  T1.CITY,
			  T1.CODE,
			  T1.DEVAVAILABLITY,
			  T1.MAGNITUDE,
			  T1.ABSAVAILABLITY,
			  T1.TOTALPROJ,
			  T1.APPROVED,
			  T1.REMARKS,
			  T1.PANDETAILS,
			  T1.BENFNAME,
			  T1.ACCOUNTNO,
			  T7.BANKCODE,
			  T9.BANKNAME,
			  T1.BANKBRANCHID,
			  T7.IFSC,
			  T1.LIMITONAMT,
			  T1.LIMITONUNITS,
			  T1.CURRENTEXPUNI,
			  T1.CURRENTEXPAMT,
			  T1.DATEOFINCOP,
			  T1.NOOFPROJ,
			  T1.ASSHLPLAYERS,
			  T1.ONGOINGPROJ,
			  T1.EXPINBUSINESS,
			  T1.RECOMMENDATION,
			  T1.MAGINTUDEINLACS,
			  T1.NOOFPROJCONS,
			  T1.VERSION ,
			  T1.LASTMNTBY,
			  T1.LASTMNTON,
			  T1.RECORDSTATUS,
			  T1.ROLECODE,
			  T1.NEXTROLECODE,
			  T1.TASKID,
			  T1.NEXTTASKID,
			  T1.RECORDTYPE,
			  T1.WORKFLOWID,
			  T5.PCCITYNAME CITYNAME,
			  T6.PINCODE AS CODENAME,
			  T6.AREANAME,
			  T7.BRANCHDESC BRANDESC,
			  T8.CUSTTYPECTG ENTYDESC,
        T1.ACTIVE,
			T10.CustShrtName As LovDescCIFName , T10.CustCIF custCIF,T1.CUSTID
			FROM BUILDERCOMPANY_TEMP T1
			INNER JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE  ='SEGMENT'
			LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
			LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY= T5.PCCITY
			LEFT JOIN PINCODES T6 ON T1.CODE=T6.PINCODE
			LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
			LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE=T8.CUSTTYPECODE
			LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
			left JOIN Customers T10 ON T1.CUSTID =  T10.CUSTID
			UNION ALL
			SELECT
			  T1.ID,
			  T1.NAME,
			  T1.SEGMENTATION,
			  T1.GROUPID ,
			  T2.VALUEDESC SEGMENTATIONNAME,
			  T2.FIELDCODE ,
			  T3.NAME GROUPIDNAME,
			  T1.APFTYPE,
			  T1.PEDEVID,
			  T1.ENTITYTYPE,
			  T1.EMAILID,
			  T1.CITYTYPE,
			  T1.ADDRESS1,
			  T1.ADDRESS2,
			  T1.ADDRESS3,
			  T1.CITY,
			  T1.CODE,
			  T1.DEVAVAILABLITY,
			  T1.MAGNITUDE,
			  T1.ABSAVAILABLITY,
			  T1.TOTALPROJ,
			  T1.APPROVED,
			  T1.REMARKS,
			  T1.PANDETAILS,
			  T1.BENFNAME,
			  T1.ACCOUNTNO,
			  T7.BANKCODE,
			  T9.BANKNAME,
			  T1.BANKBRANCHID,
			  T7.IFSC,
			  T1.LIMITONAMT,
			  T1.LIMITONUNITS,
			  T1.CURRENTEXPUNI,
			  T1.CURRENTEXPAMT,
			  T1.DATEOFINCOP,
			  T1.NOOFPROJ,
			  T1.ASSHLPLAYERS,
			  T1.ONGOINGPROJ,
			  T1.EXPINBUSINESS,
			  T1.RECOMMENDATION,
			  T1.MAGINTUDEINLACS,
			  T1.NOOFPROJCONS,
			  T1.VERSION ,
			  T1.LASTMNTBY,
			  T1.LASTMNTON,
			  T1.RECORDSTATUS,
			  T1.ROLECODE,
			  T1.NEXTROLECODE,
			  T1.TASKID,
			  T1.NEXTTASKID,
			  T1.RECORDTYPE,
			  T1.WORKFLOWID,
			  T5.PCCITYNAME CITYNAME,
			  T6.PINCODE AS CODENAME,
			  T6.AREANAME,
			  T7.BRANCHDESC BRANDESC,
			  T8.CUSTTYPECTG ENTYDESC,
        T1.ACTIVE,
			T10.CustShrtName As LovDescCIFName ,T10.CustCIF custCIF,T1.CUSTID
			FROM BUILDERCOMPANY T1
			INNER JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE  ='SEGMENT'
			LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
			LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY= T5.PCCITY
			LEFT JOIN PINCODES T6 ON T1.CODE=T6.PINCODE
			LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
			LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE=T8.CUSTTYPECODE
			LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
			left JOIN Customers T10 ON T1.CUSTID =  T10.CUSTID
			WHERE  NOT EXISTS (SELECT 1 FROM  BUILDERCOMPANY_TEMP  WHERE ID = T1.ID)
		</createView>
	</changeSet>

	<changeSet id="386" author="rohith.s">
		<createView viewName="BUILDERCOMPANY_AVIEW"
			replaceIfExists="true">
			SELECT
		  T1.ID,
		  T1.NAME,
		  T1.SEGMENTATION,
		  T1.GROUPID ,
		  T2.VALUEDESC SEGMENTATIONNAME,
		  T2.FIELDCODE ,
		  T3.NAME GROUPIDNAME,
		  T1.APFTYPE,
		  T1.PEDEVID,
		  T1.ENTITYTYPE,
		  T1.EMAILID,
		  T1.CITYTYPE,
		  T1.ADDRESS1,
		  T1.ADDRESS2,
		  T1.ADDRESS3,
		  T1.CITY,
		  T1.CODE,
		  T1.DEVAVAILABLITY,
		  T1.MAGNITUDE,
		  T1.ABSAVAILABLITY,
		  T1.TOTALPROJ,
		  T1.APPROVED,
		  T1.REMARKS,
		  T1.PANDETAILS,
		  T1.BENFNAME,
		  T1.ACCOUNTNO,
		  T7.BANKCODE,
		  T9.BANKNAME,
		  T1.BANKBRANCHID,
		  T7.IFSC,
		  T1.LIMITONAMT,
		  T1.LIMITONUNITS,
		  T1.CURRENTEXPUNI,
		  T1.CURRENTEXPAMT,
		  T1.DATEOFINCOP,
		  T1.NOOFPROJ,
		  T1.ASSHLPLAYERS,
		  T1.ONGOINGPROJ,
		  T1.EXPINBUSINESS,
		  T1.RECOMMENDATION,
		  T1.MAGINTUDEINLACS,
		  T1.NOOFPROJCONS,
		  T1.VERSION ,
		  T1.LASTMNTBY,
		  T1.LASTMNTON,
		  T1.RECORDSTATUS,
		  T1.ROLECODE,
		  T1.NEXTROLECODE,
		  T1.TASKID,
		  T1.NEXTTASKID,
		  T1.RECORDTYPE,
		  T1.WORKFLOWID,
		  T4.CUSTSHRTNAME LOVDESCCIFNAME ,
		  T4.CUSTCIF CUSTCIF,
		  T1.CUSTID,
		  T5.PCCITYNAME CITYNAME,
		  T6.PINCODE CODENAME,
		  T6.AREANAME,
		  T7.BRANCHDESC BRANDESC,
		  T8.CUSTTYPECTG ENTYDESC,
      	  T1.ACTIVE
		FROM BUILDERCOMPANY T1
		INNER JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE  ='SEGMENT'
		LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
		LEFT JOIN CUSTOMERS T4 ON T1.CUSTID = T4.CUSTID
		LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY= T5.PCCITY
		LEFT JOIN PINCODES T6 ON T1.CODE=T6.PINCODE
		LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
		LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE=T8.CUSTTYPECODE
		LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
		</createView>
	</changeSet>

	<changeSet id="387" author="rohith.s">
		<createView viewName="BUILDERCOMPANY_TVIEW"
			replaceIfExists="true">
			SELECT
				  T1.ID,
				  T1.NAME,
				  T1.SEGMENTATION,
				  T1.GROUPID ,
				  T2.VALUEDESC SEGMENTATIONNAME,
				  T2.FIELDCODE ,
				  T3.NAME GROUPIDNAME,
				  T1.APFTYPE,
				  T1.PEDEVID,
				  T1.ENTITYTYPE,
				  T1.EMAILID,
				  T1.CITYTYPE,
				  T1.ADDRESS1,
				  T1.ADDRESS2,
				  T1.ADDRESS3,
				  T1.CITY,
				  T1.CODE,
				  T1.DEVAVAILABLITY,
				  T1.MAGNITUDE,
				  T1.ABSAVAILABLITY,
				  T1.TOTALPROJ,
				  T1.APPROVED,
				  T1.REMARKS,
				  T1.PANDETAILS,
				  T1.BENFNAME,
				  T1.ACCOUNTNO,
				  T7.BANKCODE,
				  T9.BANKNAME,
				  T1.BANKBRANCHID,
				  T7.IFSC,
				  T1.LIMITONAMT,
				  T1.LIMITONUNITS,
				  T1.CURRENTEXPUNI,
				  T1.CURRENTEXPAMT,
				  T1.DATEOFINCOP,
				  T1.NOOFPROJ,
				  T1.ASSHLPLAYERS,
				  T1.ONGOINGPROJ,
				  T1.EXPINBUSINESS,
				  T1.RECOMMENDATION,
				  T1.MAGINTUDEINLACS,
				  T1.NOOFPROJCONS,
				  T1.VERSION ,
				  T1.LASTMNTBY,
				  T1.LASTMNTON,
				  T1.RECORDSTATUS,
				  T1.ROLECODE,
				  T1.NEXTROLECODE,
				  T1.TASKID,
				  T1.NEXTTASKID,
				  T1.RECORDTYPE,
				  T1.WORKFLOWID,
				  T4.CUSTSHRTNAME LOVDESCCIFNAME ,
				  T4.CUSTCIF,
				  T4.CUSTID,
				  T5.PCCITYNAME CITYNAME,
				  T6.PINCODE AS CODENAME,
				  T6.AREANAME,
				  T7.BRANCHDESC BRANDESC,
				  T8.CUSTTYPECTG ENTYDESC
				FROM BUILDERCOMPANY_TEMP T1
				INNER JOIN RMTLOVFIELDDETAIL T2 ON T1.SEGMENTATION = T2.FIELDCODEVALUE AND T2.FIELDCODE  ='SEGMENT'
				LEFT JOIN BUILDERGROUP T3 ON T1.GROUPID = T3.ID
				LEFT JOIN CUSTOMERS T4 ON T1.CUSTID = T4.CUSTID
				LEFT JOIN RMTPROVINCEVSCITY T5 ON T1.CITY= T5.PCCITY
				LEFT JOIN PINCODES T6 ON T1.CODE=T6.PINCODE
				LEFT JOIN BANKBRANCHES T7 ON T1.BANKBRANCHID = T7.BANKBRANCHID
				LEFT JOIN RMTCUSTTYPES T8 ON T1.ENTITYTYPE=T8.CUSTTYPECODE
				LEFT JOIN BMTBANKDETAIL T9 ON T9.BANKCODE = T7.BANKCODE
		</createView>
	</changeSet>

	<changeSet id="388" author="rohith.s">
		<createView viewName="BUILDERGROUP_AVIEW" replaceIfExists="true">
			SELECT
				   T1.Id,
				   T1.Name,
				   T1.Segmentation,
				   T1.pedeveloperid,
				   T1.city,
				   T1.province,
				   T1.pincodeid,
				   T1.expLmtOnAmt,
				   T1.expLmtOnNoOfUnits,
				   T1.currExpUnits,
				   T1.currExpAmt,
				   T3.PCCITYNAME as cityname,
				   T4.CPPROVINCENAME as provincename,
				   T5.PINCODE as pobox,
				   T5.AREANAME,
				   T1.Version,
				   T1.LastMntBy,
				   T1.LastMntOn,
				   T1.RecordStatus,
				   T1.RoleCode,
				   T1.NextRoleCode,
				   T1.TaskId,
				   T1.NextTaskId,
				   T1.RecordType,
				   T1.WorkflowId 
				FROM  BuilderGroup T1 
				INNER JOIN RMTProvinceVsCity T3 on T1.city = T3.PCCITY 
				left join RMTCountryVsProvince T4 on T1.province = T4.CPPROVINCE 
				left join PinCodes T5 on T1.pincodeid = T5.PINCODEID
		</createView>
	</changeSet>

	<changeSet id="389" author="rohith.s">
		<createView viewName="BUILDERGROUP_VIEW" replaceIfExists="true">
			SELECT
				   T1.Id,
				   T1.Name,
				   T1.Segmentation,
				   T1.pedeveloperid,
				   T1.city,
				   T1.province,
				   T1.pincodeid,
				   T1.expLmtOnAmt,
				   T1.expLmtOnNoOfUnits,
				   T1.currExpUnits,
				   T1.currExpAmt,
				   T3.PCCITYNAME as cityname,
				   T4.CPPROVINCENAME as provincename,
				   T5.PINCODE as pobox,
				   T5.AREANAME,
				   T1.Version,
				   T1.LastMntBy,
				   T1.LastMntOn,
				   T1.RecordStatus,
				   T1.RoleCode,
				   T1.NextRoleCode,
				   T1.TaskId,
				   T1.NextTaskId,
				   T1.RecordType,
				   T1.WorkflowId 
				FROM BuilderGroup_Temp T1 
				INNER JOIN RMTProvinceVsCity T3 on T1.city = T3.PCCITY 
				LEFT JOIN RMTCountryVsProvince T4  on T1.province = T4.CPPROVINCE 
				LEFT JOIN PinCodes T5  on T1.pincodeid = T5.PINCODEID 
				   UNION ALL
				   SELECT
				      T1.Id,
				      T1.Name,
				      T1.Segmentation,
				      T1.pedeveloperid,
				      T1.city,
				      T1.province,
				      T1.pincodeid,
				      T1.expLmtOnAmt,
				      T1.expLmtOnNoOfUnits,
				      T1.currExpUnits,
				      T1.currExpAmt,
				      T3.PCCITYNAME as cityname,
				      T4.CPPROVINCENAME as provincename,
				      T5.PINCODE as pobox,
				      T5.AREANAME,
				      T1.Version,
				      T1.LastMntBy,
				      T1.LastMntOn,
				      T1.RecordStatus,
				      T1.RoleCode,
				      T1.NextRoleCode,
				      T1.TaskId,
				      T1.NextTaskId,
				      T1.RecordType,
				      T1.WorkflowId 
				   FROM BuilderGroup T1 
				   INNER JOIN  RMTProvinceVsCity T3  on T1.city = T3.PCCITY 
				   left join  RMTCountryVsProvince T4 on T1.province = T4.CPPROVINCE 
				   left join  PinCodes T5  on T1.pincodeid = T5.PINCODEID 
				   WHERE  NOT EXISTS  ( SELECT 1  FROM   BuilderGroup_TEMP   WHERE   Id = T1.Id )
		</createView>
	</changeSet>

	<changeSet id="390" author="rohith.s">
		<comment>new rights added for builder group</comment>
		<sql>
			<![CDATA[
			Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
			Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);

			Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_PEDeveloperId','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_state','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_Pincode','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into SECRIGHTS values((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_ExpLimitOnAmt','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_ExpLimitOnNoOfUnits','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_CurrentExpUnits','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_CurrentExpAmt','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_PEDeveloperId'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_state'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_Pincode'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_ExpLimitOnAmt'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_ExpLimitOnNoOfUnits'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_CurrentExpUnits'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_CurrentExpAmt'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
			
			Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights); Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights); ]]>
		</sql>
	</changeSet>

	<changeSet id="391" author="rohith.s">
		<comment>new rights added for builder company</comment>
		<sql> 
		<![CDATA[ 
					Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights); Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
					Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_custCIF','BuilderCompanyDialog',0,1000,CURRENT_TIMESTAMP,'',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_APFType','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_PEDevId','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_EntityType','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_EmailId','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_CityType','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Address1','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Address2','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Address3','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_City','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Code','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_DevAvailablity','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Magnitude','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_AbsAvailablity','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_TotalProj','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Approved','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Remarks','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_PanDetails','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_BenfName','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_AccountNo','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_BankName','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_BankBranch','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_LimitOnAmt','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_limitOnUnits','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_currentExpUni','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_currentExpAmt','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_DateOfInCop','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_NoOfProj','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_AssHLPlayers','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_OnGoingProj','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_ExpInBusiness','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_Recommendation','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_MagintudeInLacs','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0); Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),3,'BuilderCompanyDialog_NoOfProjCons','BuilderCompanyDialog',1,1000,CURRENT_TIMESTAMP,' ',null,null,null,null,null,0);
					INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_custCIF'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_APFType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_PEDevId'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_EntityType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_EmailId'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_CityType'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Address1'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Address2'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Address3'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_City'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Code'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_DevAvailablity'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Magnitude'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_AbsAvailablity'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_TotalProj'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Approved'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Remarks'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_PanDetails'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_BenfName'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_AccountNo'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_BankName'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_BankBranch'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_LimitOnAmt'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_limitOnUnits'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_currentExpUni'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_currentExpAmt'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_DateOfInCop'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_NoOfProj'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_AssHLPlayers'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_OnGoingProj'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_ExpInBusiness'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_Recommendation'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_MagintudeInLacs'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERCOMPANY_MAKER'), (Select RightID from SecRights where RightName = 'BuilderCompanyDialog_NoOfProjCons'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 );
					Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights); 
					Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="392" author="rohith.s">
		<comment>adding right for city</comment>
		<sql> 
		<![CDATA[ 
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights); 
				Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
				Insert into SECRIGHTS values ((select max(RightId)+1 from SecRights),2,'BuilderGroupDialog_city','BuilderGroupDialog',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0); 
				INSERT INTO secGroupRights Values((Select max(GrpRightID) + 1 from SecGroupRights), (Select GrpID from SecGroups where GrpCode = 'BUILDERGROUP_MAKER'), (Select RightID from SecRights where RightName = 'BuilderGroupDialog_city'), 1, 1, 1000, CURRENT_TIMESTAMP, null, null, null, null, null, null, 0 ); 
				Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights); Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights); 
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="393" author="rohith.s">
		<comment>updating newly added column values from null  to 0 or 1 to resolve error's</comment>
		<sql>
		<![CDATA[ 
				Update buildercompany set custid=0 where custid is null; 
				Update buildercompany set bankbranchid=0 where bankbranchid is null; 
				Update buildercompany set active=1 where active is null;
				Update buildercompany set devavailablity = 0 where devavailablity is null;
				Update buildercompany set totalProj = 0 where totalProj is null;
				Update buildercompany set currentExpUni = 0 where currentExpUni is null; 
				Update buildercompany set noOfProj = 0 where noOfProj is null; 
				Update buildercompany set assHLPlayers = 0 where assHLPlayers is null; 
				Update buildercompany set onGoingProj = 0 where onGoingProj is null; 
				Update buildercompany set expInBusiness = 0 where expInBusiness is null; 
				Update buildercompany set magintudeInLacs = 0 where magintudeInLacs is null;
				Update buildercompany set noOfProjCons = 0 where noOfProjCons is null;	
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="394" author="rohith.s">
		<comment>updating newly added column values from null  to 0 or 1 to resolve error's </comment>
		<sql>
	    <![CDATA[ 
			Update buildergroup set city = 1 where city is null; 
			Update buildergroup set pincodeid = 0 where pincodeid is null; 
		]]>
		</sql>	
	</changeSet>
	
	<changeSet id="395" author="rohith.s">
		<comment>updating newly added column values from null  to 0 or 1 to resolve error's</comment>
		<sql> 
			<![CDATA[  		
					Update buildercompany_temp set custid=0 where custid is null; 		
					Update buildercompany_temp set bankbranchid=0 where bankbranchid is null; 	
					Update buildercompany_temp set active=1 where active is null; 		
					Update buildercompany_temp set devavailablity = 0 where devavailablity is null; 	
					Update buildercompany_temp set totalProj = 0 where totalProj is null; 	
					Update buildercompany_temp set currentExpUni = 0 where currentExpUni is null; 	
					Update buildercompany_temp set noOfProj = 0 where noOfProj is null; 	
					Update buildercompany_temp set assHLPlayers = 0 where assHLPlayers is null; 
					Update buildercompany_temp set onGoingProj = 0 where onGoingProj is null; 	
					Update buildercompany_temp set expInBusiness = 0 where expInBusiness is null; 	
					Update buildercompany_temp set magintudeInLacs = 0 where magintudeInLacs is null; 	
					Update buildercompany_temp set noOfProjCons = 0 where noOfProjCons is null;	
				]]>
		</sql>
	</changeSet>
	
	<changeSet id="396" author="rohith.s">
		<comment>updating newly added column values from null  to 0 or 1 to resolve error's </comment>
		<sql>
	    <![CDATA[  
				Update buildergroup_temp set city = 1 where city is null; 
				Update buildergroup_temp set pincodeid = 0 where pincodeid is null;
			]]>
		</sql>
	</changeSet>

		<changeSet id="397" author="vijaya.a">
		<createView viewName="PRESENTMENT_DWNLD_DETAILS_VIEW" replaceIfExists="true">
			SELECT t1.txn_ref,
					    t1.entity_code,
					    t1.cycle_type,
					    t1.instrument_mode,
					    t1.presentationdate,
					    t1.bank_code,
					    t1.product_code,
					    t1.customerid,
					    t1.agreementno,
					    t1.chequeamount,
					    t1.emi_no,
					    t1.txn_type_code,
					    t1.source_code,
					    t1.br_code,
					    t1.umrn_no,
					    t1.bank_name,
					    t1.micr_code,
					    t1.accountno,
					    t1.dest_acc_holder,
					    t1.acc_type,
					    t1.bank_address,
					    t1.resub_flag,
					    t1.orgin_system,
					    t1.data_gen_date,
					    t1.specialhit_file,
					    t1.userid,
					    t1.batchid,
					    t1.job_id,
					    t1.pickup_batchid,
					    t1.processed_flag,
					    t1.accountfield1,
					    t1.accountfield2,
					    t1.accountfield3,
					    t1.cycledate,
					    t1.partner_bank,
					    t1.ifsc,
					    t1.chequeserialno,
					    t1.chequedate,
						T4.AccHolderName
					   FROM presentment_req_details_temp t1 
					   INNER JOIN FINANCEMAIN T2 ON T2.FINREFERENCE = T1.agreementno
					   INNER JOIN RMTFINANCETYPES T3 ON T2.FINTYPE = T3.FINTYPE
					   INNER JOIN MANDATES T4 ON T4.MANDATEID = T2.MANDATEID
					   INNER JOIN RMTBRANCHES T5 ON T5.BRANCHCODE = T2.FINBRANCH
					   INNER JOIN BANKBRANCHES T6 ON T4.BANKBRANCHID = T6.BANKBRANCHID
					   INNER JOIN SMTDIVISIONDETAIL T7 ON T7.DIVISIONCODE=T3.FINDIVISION	
		</createView>
	</changeSet>
	
	<changeSet id="398" author="vijaya.a">
		<createView viewName="PRESENTMENT_PDC_DETAILS_VIEW" replaceIfExists="true">
			SELECT t1.txn_ref,
					    t1.entity_code,
					    t1.cycle_type,
					    t1.instrument_mode,
					    t1.presentationdate,
					    t1.bank_code,
					    t1.product_code,
					    t1.customerid,
					    t1.agreementno,
					    t1.chequeamount,
					    t1.emi_no,
					    t1.txn_type_code,
					    t1.source_code,
					    t1.br_code,
					    t1.umrn_no,
					    t1.bank_name,
					    t1.micr_code,
					    t1.accountno,
					    t1.dest_acc_holder,
					    t1.acc_type,
					    t1.bank_address,
					    t1.resub_flag,
					    t1.orgin_system,
					    t1.data_gen_date,
					    t1.specialhit_file,
					    t1.userid,
					    t1.batchid,
					    t1.job_id,
					    t1.pickup_batchid,
					    t1.processed_flag,
					    t1.accountfield1,
					    t1.accountfield2,
					    t1.accountfield3,
					    t1.cycledate,
					    t1.partner_bank,
					    t1.ifsc,
					    t1.chequeserialno,
					    t1.chequedate,
						t2.FinBranch,
						t8.AccHolderName,
						t6.BranchDesc
					   FROM presentment_req_details_temp t1 
					   INNER JOIN FINANCEMAIN T2 ON T2.FINREFERENCE = T1.agreementno
					   INNER JOIN RMTFINANCETYPES T3 ON T2.FINTYPE = T3.FINTYPE
			           INNER JOIN CHEQUEHEADER T4 ON T4.FINREFERENCE = T1.agreementno
			           INNER JOIN CHEQUEDETAIL T8 ON T8.HEADERID = T4.HEADERID AND T8.EMIREFNO = T1.emi_no
			           INNER JOIN RMTBRANCHES T5 ON T5.BRANCHCODE = T2.FINBRANCH
			           INNER JOIN BANKBRANCHES T6 ON T8.BANKBRANCHID = T6.BANKBRANCHID
			           INNER JOIN SMTDIVISIONDETAIL T7 ON T7.DIVISIONCODE=T3.FINDIVISION	
		</createView>
	</changeSet>
	

	
<changeSet id="399" author="naga.g">
		<sql>
		    <![CDATA[
			    DELETE from rbfielddetails  where rbmodule='VERRULE';
				INSERT INTO rbfielddetails(rbmodule, rbevent, rbfldname, rbflddesc, rbfldtype, rbfldlen, rbforcalflds, rbforbldflds, rbfldtablename, rbstflds,modulecode)VALUES ('VERRULE','VERRULE','fm_finAmount','finamount Amount','Decimal','18',1,1,null,'static,global',null);
			]]>
		</sql>
</changeSet>


<changeSet id="400" author="naga.g">
<sql>
		    <![CDATA[
			
                     Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
                     Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
                     Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
                     Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);
  
                    
                     INSERT INTO SecRights Values ((select max(RightId)+1 from SecRights),0,'menuItem_RulesFactory_VerificationRules','MENU',0,1000,current_timestamp,'Approved','',' ','',' ',' ',0);

                     INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'VERRULE_MAKER','Verification List Rule Maker', 1, 1000, NULL, 'Approved',' ',' ',' ',' ',' ',0);
                     INSERT INTO SecGroups Values ((Select MAX(GrpID)+1 From SecGroups), 'VERRULE_APPROVER','Verification List Rule Approver', 1, 1000, NULL, 'Approved',' ',' ',' ',' ',' ',0);

					 INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID) + 1 From SecGroupRights), (Select GrpId  From SecGroups Where GrpCode = 'VERRULE_MAKER'), (SELECT RightID FROM SecRights where RightName = 'menuItem_RulesFactory_VerificationRules'), 1, 1, 1000, NULL,'Approved',' ',' ',' ',' ',' ', 0);
                     INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID) + 1 From SecGroupRights), (Select GrpId  From SecGroups Where GrpCode = 'VERRULE_APPROVER'), (SELECT RightID FROM SecRights where RightName = 'menuItem_RulesFactory_VerificationRules'), 1, 1, 1000, NULL,'Approved',' ',' ',' ',' ',' ', 0); 

					 INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'VERRULE_MAKER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_MAKER'), 0, 1000, NULL, 'Approved',' ',' ',' ',' ',' ', 0);
                     INSERT INTO SecRoleGroups values ((SELECT MAX(RoleGrpID) + 1 from SecRoleGroups), (Select MAX(GrpId) from SecGroups WHERE GrpCode = 'VERRULE_APPROVER'), (Select MAX(RoleID) from SecRoles WHERE RoleCd = 'MSTGRP1_APPROVER'), 0, 1000, NULL, 'Approved',' ',' ',' ',' ',' ', 0);			 
                     
					 
					 Update SeqSecRights set SeqNo = (Select max(RightId) from SecRights);
                     Update SeqSecGroups set SeqNo = (Select max(GrpId)  from SecGroups);
                     Update SeqSecGroupRights set SeqNo = (Select max(GrpRightId) from SecGroupRights);
                     Update SeqSecRoleGroups set SeqNo = (Select max(RoleGrpId) from SecRoleGroups);		
			]]>
		</sql>
</changeSet>
<changeSet id="401" author="naga.g">
		<sql>
			<![CDATA[
			   Delete from SMTPARAMETERS where sysparmcode='VERIFICATION_FI_AUTO';
               Insert into SMTPARAMETERS (sysparmcode,sysparmdesc,sysparmtype,sysparmmaint,sysparmvalue,sysparmlength,sysparmdec,sysparmlist,sysparmvaldmod,sysparmdescription,version,lastmntby,lastmnton,recordstatus,rolecode,nextrolecode,taskid,nexttaskid,recordtype,workflowid ) values ('VERIFICATION_FI_AUTO','AutoFI Intiations Verfication Rule.','String',1,'Y',8,0,null,null,'AutoFI Intiations Verfication Rule.',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			]]>
		</sql>
</changeSet>
<changeSet id="402" author="naga.g">
		<createView viewName="VERIFICATION_FI_VIEW" replaceIfExists="true">
			SELECT fi.verificationid,
                    flv.finType,
	  				fi.agentcode,
	    			fi.agentname,
	    			fi.type,
	    			fi.verifieddate,
	    			fi.status,
	    			fi.reason,
	   				r1.code AS reasoncode,
	   				r1.description AS reasondesc,
	    			fi.summaryremarks,
	    			fi.version,
	    			fi.lastmntby,
	    			fi.lastmnton,
	    			fi.recordstatus,
	    			fi.rolecode,
	    			fi.nextrolecode,
	    			fi.taskid,

	    			fi.nexttaskid,
	    			fi.recordtype,
	    			fi.workflowid,
	    			fi.addresstype,
	    			fi.name,
	    			fi.housenumber,
	    			fi.flatnumber,
	    			fi.street,
	    			fi.addressline1,
	    			fi.addressline2,
	    			fi.addressline3,
	    			fi.addressline4,
	    			fi.addressline5,
	    			fi.country,
	    			fi.province,
	    			fi.city,
	    			fi.contactnumber1,
	    			fi.contactnumber2,
	    			fi.pobox,
	    			fi.zipcode,
	    			fi.ownershipstatus,
	    			fi.yearsatpresentaddress,
	    			fi.personmet,
	    			fi.relationship,
	    			r2.prelationdesc AS lovrelationdesc,
	    			fi.contactnumber,
	    			fi.neighbourhoodfeedback,
	    			fi.livingstandard,
	    			fi.negativecheck,
	    			fi.noofattempts,
	    			fi.observationremarks,
	    			c.custcif AS cif,
	    			v.custid,
	    			v.keyreference,
	    			v.createdon,
	    			v.agency,
	    			v.verificationdate,
	    			a.dealername AS agencyname,
	    			v.reinitid,
	    			a.dealertype,
	    			r1.reasontypecode,
					country.countrydesc,
					p.cpprovincename as provinceDesc,
					city.pccityname as cityDesc
	   				FROM verification_fi_temp fi
	     			JOIN verifications v ON v.id = fi.verificationid
	     			left join amtvehicledealer a ON a.dealerid = v.agency
		 			JOIN bmtcountries country on country.countrycode = fi.country
		 			JOIN RMTCountryVsProvince p on p.cpprovince = fi.province
		 			JOIN RMTProvinceVsCity city on city.pccity = fi.city
	     			LEFT JOIN customers c ON c.custid = v.custid
	     			LEFT JOIN reasons_aview r1 ON r1.id = fi.reason
	     			LEFT JOIN bmtprelationcodes r2 ON r2.prelationcode = fi.relationship
         			LEFT JOIN financemain_view flv ON flv.finreference = v.keyreference
				UNION ALL
	 				SELECT fi.verificationid,
        			flv.finType,
	    			fi.agentcode,
	    			fi.agentname,
	    			fi.type,
	    			fi.verifieddate,
	    			fi.status,
	    			fi.reason,
				    r1.code AS reasoncode,
				    r1.description AS reasondesc,
				    fi.summaryremarks,
				    fi.version,
				    fi.lastmntby,
				    fi.lastmnton,
				    fi.recordstatus,
				    fi.rolecode,
				    fi.nextrolecode,
				    fi.taskid,
				    fi.nexttaskid,
				    fi.recordtype,
				    fi.workflowid,
				    fi.addresstype,
				    fi.name,
				    fi.housenumber,
				    fi.flatnumber,
				    fi.street,
				    fi.addressline1,
				    fi.addressline2,
				    fi.addressline3,
				    fi.addressline4,
				    fi.addressline5,
				    fi.country,
				    fi.province,
				    fi.city,
				    fi.contactnumber1,
				    fi.contactnumber2,
				    fi.pobox,
				    fi.zipcode,
				    fi.ownershipstatus,
				    fi.yearsatpresentaddress,
				    fi.personmet,
				    fi.relationship,
				    r2.prelationdesc AS lovrelationdesc,
				    fi.contactnumber,
				    fi.neighbourhoodfeedback,
				    fi.livingstandard,
				    fi.negativecheck,
				    fi.noofattempts,
				    fi.observationremarks,
				    c.custcif AS cif,
				    v.custid,
				    v.keyreference,
				    v.createdon,
				    v.agency,
				    v.verificationdate,
				    a.dealername AS agencyname,
				    v.reinitid,
				    a.dealertype,
				    r1.reasontypecode,
					country.countrydesc,
					p.cpprovincename as provinceDesc,
					city.pccityname as cityDesc
				   FROM verification_fi fi
				     JOIN verifications v ON v.id = fi.verificationid
				     left join amtvehicledealer a ON a.dealerid = v.agency
					 JOIN bmtcountries country on country.countrycode = fi.country
					 JOIN RMTCountryVsProvince p on p.cpprovince = fi.province
					 JOIN RMTProvinceVsCity city on city.pccity = fi.city
				     LEFT JOIN customers c ON c.custid = v.custid
				     LEFT JOIN reasons_aview r1 ON r1.id = fi.reason
				     LEFT JOIN bmtprelationcodes r2 ON r2.prelationcode = fi.relationship
			         LEFT JOIN financemain_view flv ON flv.finreference = v.keyreference
				  WHERE NOT (EXISTS ( SELECT 1
				           FROM verification_fi_temp
				          WHERE verification_fi_temp.verificationid = fi.verificationid))
		</createView>
	</changeSet>
	<changeSet id="403" author="Varaprasad.K">
		<addColumn tableName="BankInfoDetail">
			<column name="SanctionLimit" type="NUMBER(18)" />
			<column name="AvgUtilization" type="decimal(18,0)" />
		</addColumn>
	</changeSet>
	<changeSet id="404" author="Varaprasad.K">
		<addColumn tableName="BankInfoDetail_Temp">
			<column name="SanctionLimit" type="NUMBER(18)" />
			<column name="AvgUtilization" type="decimal(18,0)" />
		</addColumn>
	</changeSet>
	<changeSet id="405" author="Varaprasad.K">
		<createView viewName="bankinfodetail_view" replaceIfExists="true">
				 SELECT t1.bankid,
				    t1.monthyear,
				    t1.balance,
				    t1.debitno,
				    t1.debitamt,
				    t1.creditno,
				    t1.creditamt,
				    t1.bouncein,
				    t1.bounceout,
				    t1.closingbal,
				    t1.sanctionlimit,
				    t1.avgutilization,
				    t1.odcclimit,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid
				   FROM bankinfodetail_temp t1
				UNION ALL
				 SELECT t1.bankid,
				    t1.monthyear,
				    t1.balance,
				    t1.debitno,
				    t1.debitamt,
				    t1.creditno,
				    t1.creditamt,
				    t1.bouncein,
				    t1.bounceout,
				    t1.closingbal,
				    t1.sanctionlimit,
				    t1.avgutilization,
				    t1.odcclimit,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid
				   FROM bankinfodetail t1
				  WHERE NOT (EXISTS ( SELECT 1 AS expr1
				           FROM bankinfodetail_temp
				          WHERE bankinfodetail_temp.bankid = t1.bankid AND bankinfodetail_temp.monthyear = t1.monthyear))
		</createView>
	</changeSet>
	<changeSet id="406" author="Varaprasad.K">
		<createView viewName="bankinfodetail_aview" replaceIfExists="true">
				 SELECT t1.bankid,
				    t1.monthyear,
				    t1.balance,
				    t1.debitno,
				    t1.debitamt,
				    t1.creditno,
				    t1.creditamt,
				    t1.bouncein,
				    t1.bounceout,
				    t1.closingbal,
				    t1.sanctionlimit,
				    t1.avgutilization,
				    t1.odcclimit,
				    t1.version,
				    t1.lastmntby,
				    t1.lastmnton,
				    t1.recordstatus,
				    t1.rolecode,
				    t1.nextrolecode,
				    t1.taskid,
				    t1.nexttaskid,
				    t1.recordtype,
				    t1.workflowid
				   FROM bankinfodetail t1
		</createView>
	</changeSet>
	<changeSet id="407" author="Varaprasad.K">
		<sql>
				<![CDATA[
				  	DELETE from SMTparameters WHERE SYSPARMCODE='CUSTOMER_BANKINFOTAB_ACCBEHAVIOR_DAYBALANCE_REQ';
					INSERT INTO SMTparameters  VALUES ('CUSTOMER_BANKINFOTAB_ACCBEHAVIOR_DAYBALANCE_REQ', 'To check day/balance field required or not in accountbehaviour', 'String', '0', 'Y', 1, 0, NULL, NULL,'To check day/balance field required or not in accountbehaviour', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
				]]>
		</sql>
	</changeSet>
	
	<changeSet id="408" author="vijaya.a" dbms="postgresql,oracle">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT 	fa.paymentid,
		    		fa.finreference,
		    		'D' AS channel,
		    		0 AS providerid,
		        		CASE
		            		WHEN fa.paymenttype = 'NEFT' THEN 'N'
		            		WHEN fa.paymenttype = 'RTGS' THEN 'R'
				            WHEN fa.paymenttype = 'DD' THEN 'D'
				            WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
				            ELSE fa.paymenttype
		        	END AS disbursement_type,
				    fa.amttobereleased,
				    fa.disbdate,
				    fa.lldate,
				    fa.payableloc,
				    fa.printingloc,
				    cu.custcif,
				    cu.custshrtname,
				    '' AS customer_mobile,
				    ce.custemail AS customer_email,
				    cs.cpprovincename AS customer_state,
				    cc.pccityname AS customer_city,
				    '' AS customer_address1,
				    '' AS customer_address2,
				    '' AS customer_address3,
				    '' AS customer_address4,
				    '' AS customer_address5,
				    bd.bankname,
				    bb.branchcode,
				    bb.branchdesc,
				    pbd.cpprovincename AS benficiary_branch_state,
				    pbd.pccityname AS benficiary_branch_city,
				    bb.micr AS micr_code,
				    bb.ifsc AS ifsc_code,
				    fa.beneficiaryaccno,
				        CASE
				            WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
				            ELSE fa.beneficiaryname
				        END AS beneficiaryname,
				    (fa.phonecountrycode || fa.phoneareacode) || fa.phonenumber AS beneficiary_mobile,
				    bce.custemail AS benficiry_email,
				    brs.cpprovincename AS benficiary_state,
				    brc.pccityname AS benficiary_city,
				    '' AS benficiary_address1,
				    '' AS benficiary_address2,
				    '' AS benficiary_address3,
				    '' AS benficiary_address4,
				    '' AS benficiary_address5,
				    '' AS payment_detail1,
				    '' AS payment_detail2,
				    '' AS payment_detail3,
				    '' AS payment_detail4,
				    '' AS payment_detail5,
				    '' AS payment_detail6,
				    '' AS payment_detail7,
				    fa.status,
				    fa.description AS remarks,
				    fa.paymenttype,
				    fm.fintype,
				    pb.partnerbankid,
				    pb.partnerbankcode,
				    fa.inputdate,
				    pb.alwfiledownload,
				    pb.filename,
				    fm.finisactive,
				    smd.entitycode,
					pb.accountNo As partnerBank_AccountNo
					FROM finadvancepayments fa
					JOIN ( SELECT financemain_temp.custid,
					          financemain_temp.finreference,
					            financemain_temp.fintype,
					            financemain_temp.finisactive
					           FROM financemain_temp
					        UNION ALL
					         SELECT t2.custid,
					            t2.finreference,
					            t2.fintype,
					            t2.finisactive
					           FROM financemain t2
					          WHERE NOT (EXISTS ( SELECT 1
					                   FROM financemain_temp t3
					                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
					JOIN customers cu ON cu.custid = fm.custid
				    JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
			        JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
			        LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
			        LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
			        LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
			        LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
			        LEFT JOIN ( SELECT pb_1.partnerbankid,
			            pbd_1.bankname,
			            pbb.branchdesc,
			            pbbrc.pccityname,
			            pbbrs.cpprovincename
			           FROM partnerbanks pb_1
			             JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
			             JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
			             LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
			             LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
			     LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
			     LEFT JOIN customers bc ON bc.custid = br.custid
			     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
			     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
			     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
			     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
			     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
			     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
			  WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
			           FROM disbursement_requests)) AND NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
			           FROM finadvancepayments_temp))
				UNION ALL
		    
				 SELECT pi.paymentinstructionid AS paymentid,
				    ph.finreference,
				    ph.paymenttype AS channel,
				    0 AS providerid,
				        CASE
				            WHEN pi.paymenttype = 'NEFT' THEN 'N'
				            WHEN pi.paymenttype = 'RTGS' THEN 'R'
				            WHEN pi.paymenttype = 'DD' THEN 'D'
				            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
				            ELSE pi.paymenttype
				        END AS disbursement_type,
				    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
				    pi.postdate AS disbdate,
				    pi.postdate AS lldate,
				    pi.payableloc,
				    pi.printingloc,
				    cu.custcif,
				    cu.custshrtname,
				    '' AS customer_mobile,
				    ce.custemail AS customer_email,
				    cs.cpprovincename AS customer_state,
				    cc.pccityname AS customer_city,
				    '' AS customer_address1,
				    '' AS customer_address2,
				    '' AS customer_address3,
				    '' AS customer_address4,
				    '' AS customer_address5,
				    bd.bankname,
				    bb.branchcode,
				    bb.branchdesc,
				    bbrs.cpprovincename AS benficiary_branch_state,
				    bbrc.pccityname AS benficiary_branch_city,
				    bb.micr AS micr_code,
				    bb.ifsc AS ifsc_code,
				    pi.accountno AS beneficiaryaccno,
				        CASE
				            WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
				            ELSE pi.acctholdername
				        END AS beneficiaryname,
				    pi.phonecountrycode || pi.phonenumber AS beneficiary_mobile,
				    bce.custemail AS benficiry_email,
				    brs.cpprovincename AS benficiary_state,
				    brc.pccityname AS benficiary_city,
				    '' AS benficiary_address1,
				    '' AS benficiary_address2,
				    '' AS benficiary_address3,
				    '' AS benficiary_address4,
				    '' AS benficiary_address5,
				    '' AS payment_detail1,
				    '' AS payment_detail2,
				    '' AS payment_detail3,
				    '' AS payment_detail4,
				    '' AS payment_detail5,
				    '' AS payment_detail6,
				    '' AS payment_detail7,
				    pi.status,
				    pi.remarks,
				    pi.paymenttype,
				    fm.fintype,
				    pb.partnerbankid,
				    pb.partnerbankcode,
				    pi.postdate AS inputdate,
				    pb.alwfiledownload,
				    pb.filename,
				    fm.finisactive,
				    smd.entitycode,
					pb.accountNo As partnerBank_AccountNo
				   FROM paymentinstructions pi
				     JOIN paymentheader ph ON ph.paymentid = pi.paymentid
				     JOIN ( SELECT financemain.custid,
				            financemain.finreference,
				            financemain.fintype,
				            financemain.finisactive
				           FROM financemain
				        UNION ALL
				         SELECT t2.custid,
				            t2.finreference,
				            t2.fintype,
				            t2.finisactive
				           FROM financemain_temp t2
				          WHERE NOT (EXISTS ( SELECT 1
				                   FROM financemain_temp t3
				                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
				     JOIN customers cu ON cu.custid = fm.custid
				     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
				     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
				     LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
				     LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
				     LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
				     LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
				     LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
				     LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
				     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
				     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
				     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
				     LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
				     LEFT JOIN customers bc ON bc.custid = br.custid
				     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
				     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
				     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
				     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
				     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
				     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
				  WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
				           FROM disbursement_requests))
				UNION ALL
				 SELECT pi.id AS paymentid,
				    '' AS finreference,
				    'I' AS channel,
				    pi.providerid,
				        CASE
				            WHEN pi.paymenttype = 'NEFT' THEN 'N'
				            WHEN pi.paymenttype = 'RTGS' THEN 'R'
				            WHEN pi.paymenttype = 'DD' THEN 'D'
				            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
				            ELSE pi.paymenttype
				        END AS disbursement_type,
				    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
				    pi.paymentdate AS disbdate,
				    pi.paymentdate AS lldate,
				    '' AS payableloc,
				    '' AS printingloc,
				    '' AS custcif,
				    '' AS custshrtname,
				    '' AS customer_mobile,
				    '' AS customer_email,
				    '' AS customer_state,
				    '' AS customer_city,
				    '' AS customer_address1,
				    '' AS customer_address2,
				    '' AS customer_address3,
				    '' AS customer_address4,
				    '' AS customer_address5,
				    bd.bankname,
				    bb.branchcode,
				    bb.branchdesc,
				    bbrs.cpprovincename AS benficiary_branch_state,
				    bbrc.pccityname AS benficiary_branch_city,
				    bb.micr AS micr_code,
				    bb.ifsc AS ifsc_code,
				    vpa.accountnumber AS beneficiaryaccno,
				    avd.dealername AS beneficiaryname,
				    avd.dealertelephone AS beneficiary_mobile,
				    avd.email AS benficiry_email,
				    brs.cpprovincename AS benficiary_state,
				    brc.pccityname AS benficiary_city,
				    avd.dealeraddress1 AS benficiary_address1,
				    avd.dealeraddress2 AS benficiary_address2,
				    avd.dealeraddress3 AS benficiary_address3,
				    '' AS benficiary_address4,
				    '' AS benficiary_address5,
				    '' AS payment_detail1,
				    '' AS payment_detail2,
				    '' AS payment_detail3,
				    '' AS payment_detail4,
				    '' AS payment_detail5,
				    '' AS payment_detail6,
				    '' AS payment_detail7,
				    pi.status,
				    pi.remarks,
				    pi.paymenttype,
				    '' AS fintype,
				    pb.partnerbankid,
				    pb.partnerbankcode,
				    pi.paymentdate AS inputdate,
				    pb.alwfiledownload,
				    pb.filename,
				    1 AS finisactive,
				    pi.entitycode,
					pb.accountNo As partnerBank_AccountNo
				   FROM insurancepaymentinstructions pi
				     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
				     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
				     JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
				     JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
				     LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
				     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
				     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
				     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
				     LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
				     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
				  WHERE pi.status = 'APPROVED' AND pi.paymentamount &gt; 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
				           FROM disbursement_requests))
		</createView>
	</changeSet>
	
	<changeSet id="408" author="vijaya.a" dbms="mssql">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT 	fa.paymentid,
		    		fa.finreference,
		    		'D' AS channel,
		    		0 AS providerid,
		        		CASE
		            		WHEN fa.paymenttype = 'NEFT' THEN 'N'
		            		WHEN fa.paymenttype = 'RTGS' THEN 'R'
				            WHEN fa.paymenttype = 'DD' THEN 'D'
				            WHEN fa.paymenttype = 'CHEQUE' THEN 'C'
				            ELSE fa.paymenttype
		        	END AS disbursement_type,
				    fa.amttobereleased,
				    fa.disbdate,
				    fa.lldate,
				    fa.payableloc,
				    fa.printingloc,
				    cu.custcif,
				    cu.custshrtname,
				    '' AS customer_mobile,
				    ce.custemail AS customer_email,
				    cs.cpprovincename AS customer_state,
				    cc.pccityname AS customer_city,
				    '' AS customer_address1,
				    '' AS customer_address2,
				    '' AS customer_address3,
				    '' AS customer_address4,
				    '' AS customer_address5,
				    bd.bankname,
				    bb.branchcode,
				    bb.branchdesc,
				    pbd.cpprovincename AS benficiary_branch_state,
				    pbd.pccityname AS benficiary_branch_city,
				    bb.micr AS micr_code,
				    bb.ifsc AS ifsc_code,
				    fa.beneficiaryaccno,
				        CASE
				            WHEN fa.paymenttype = 'CHEQUE' OR fa.paymenttype = 'DD' THEN fa.liabilityholdname
				            ELSE fa.beneficiaryname
				        END AS beneficiaryname,
				    (fa.phonecountrycode + fa.phoneareacode) + fa.phonenumber AS beneficiary_mobile,
				    bce.custemail AS benficiry_email,
				    brs.cpprovincename AS benficiary_state,
				    brc.pccityname AS benficiary_city,
				    '' AS benficiary_address1,
				    '' AS benficiary_address2,
				    '' AS benficiary_address3,
				    '' AS benficiary_address4,
				    '' AS benficiary_address5,
				    '' AS payment_detail1,
				    '' AS payment_detail2,
				    '' AS payment_detail3,
				    '' AS payment_detail4,
				    '' AS payment_detail5,
				    '' AS payment_detail6,
				    '' AS payment_detail7,
				    fa.status,
				    fa.description AS remarks,
				    fa.paymenttype,
				    fm.fintype,
				    pb.partnerbankid,
				    pb.partnerbankcode,
				    fa.inputdate,
				    pb.alwfiledownload,
				    pb.filename,
				    fm.finisactive,
				    smd.entitycode,
					pb.accountNo As partnerBank_AccountNo
					FROM finadvancepayments fa
					JOIN ( SELECT financemain_temp.custid,
					          financemain_temp.finreference,
					            financemain_temp.fintype,
					            financemain_temp.finisactive
					           FROM financemain_temp
					        UNION ALL
					         SELECT t2.custid,
					            t2.finreference,
					            t2.fintype,
					            t2.finisactive
					           FROM financemain t2
					          WHERE NOT (EXISTS ( SELECT 1
					                   FROM financemain_temp t3
					                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = fa.finreference
					JOIN customers cu ON cu.custid = fm.custid
				    JOIN rmtcurrencies ccy ON ccy.ccycode = fa.disbccy
			        JOIN partnerbanks pb ON pb.partnerbankid = fa.partnerbankid
					LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
					LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
			        LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
			        LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
			        LEFT JOIN bankbranches bb ON bb.bankbranchid = fa.bankbranchid
			        LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
			        LEFT JOIN ( SELECT pb_1.partnerbankid,
			            pbd_1.bankname,
			            pbb.branchdesc,
			            pbbrc.pccityname,
			            pbbrs.cpprovincename
			           FROM partnerbanks pb_1
			             JOIN bankbranches pbb ON pbb.branchcode = pb_1.bankbranchcode
			             JOIN bmtbankdetail pbd_1 ON pbd_1.bankcode = pbb.bankcode
			             LEFT JOIN rmtprovincevscity pbbrc ON pbbrc.pccity = pbb.city
			             LEFT JOIN rmtcountryvsprovince pbbrs ON pbbrs.cpprovince = pbbrc.pcprovince) pbd ON pbd.partnerbankid = pb.partnerbankid
			     LEFT JOIN beneficiary br ON br.bankbranchid = fa.bankbranchid AND br.accnumber = fa.beneficiaryaccno AND br.custid = fm.custid
			     LEFT JOIN customers bc ON bc.custid = br.custid
			     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
			     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
			     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
			     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
			     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
			     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
			  WHERE fa.status = 'APPROVED' AND NOT (fa.paymentid IN ( SELECT disbursement_requests.disbursement_id
			           FROM disbursement_requests)) AND NOT (fa.paymentid IN ( SELECT finadvancepayments_temp.paymentid
			           FROM finadvancepayments_temp))
				UNION ALL
		    
				 SELECT pi.paymentinstructionid AS paymentid,
				    ph.finreference,
				    ph.paymenttype AS channel,
				    0 AS providerid,
				        CASE
				            WHEN pi.paymenttype = 'NEFT' THEN 'N'
				            WHEN pi.paymenttype = 'RTGS' THEN 'R'
				            WHEN pi.paymenttype = 'DD' THEN 'D'
				            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
				            ELSE pi.paymenttype
				        END AS disbursement_type,
				    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
				    pi.postdate AS disbdate,
				    pi.postdate AS lldate,
				    pi.payableloc,
				    pi.printingloc,
				    cu.custcif,
				    cu.custshrtname,
				    '' AS customer_mobile,
				    ce.custemail AS customer_email,
				    cs.cpprovincename AS customer_state,
				    cc.pccityname AS customer_city,
				    '' AS customer_address1,
				    '' AS customer_address2,
				    '' AS customer_address3,
				    '' AS customer_address4,
				    '' AS customer_address5,
				    bd.bankname,
				    bb.branchcode,
				    bb.branchdesc,
				    bbrs.cpprovincename AS benficiary_branch_state,
				    bbrc.pccityname AS benficiary_branch_city,
				    bb.micr AS micr_code,
				    bb.ifsc AS ifsc_code,
				    pi.accountno AS beneficiaryaccno,
				        CASE
				            WHEN pi.paymenttype = 'CHEQUE' OR pi.paymenttype = 'DD' THEN pi.favourname
				            ELSE pi.acctholdername
				        END AS beneficiaryname,
				    pi.phonecountrycode + pi.phonenumber AS beneficiary_mobile,
				    bce.custemail AS benficiry_email,
				    brs.cpprovincename AS benficiary_state,
				    brc.pccityname AS benficiary_city,
				    '' AS benficiary_address1,
				    '' AS benficiary_address2,
				    '' AS benficiary_address3,
				    '' AS benficiary_address4,
				    '' AS benficiary_address5,
				    '' AS payment_detail1,
				    '' AS payment_detail2,
				    '' AS payment_detail3,
				    '' AS payment_detail4,
				    '' AS payment_detail5,
				    '' AS payment_detail6,
				    '' AS payment_detail7,
				    pi.status,
				    pi.remarks,
				    pi.paymenttype,
				    fm.fintype,
				    pb.partnerbankid,
				    pb.partnerbankcode,
				    pi.postdate AS inputdate,
				    pb.alwfiledownload,
				    pb.filename,
				    fm.finisactive,
				    smd.entitycode,
					pb.accountNo As partnerBank_AccountNo
				   FROM paymentinstructions pi
				     JOIN paymentheader ph ON ph.paymentid = pi.paymentid
				     JOIN ( SELECT financemain.custid,
				            financemain.finreference,
				            financemain.fintype,
				            financemain.finisactive
				           FROM financemain
				        UNION ALL
				         SELECT t2.custid,
				            t2.finreference,
				            t2.fintype,
				            t2.finisactive
				           FROM financemain_temp t2
				          WHERE NOT (EXISTS ( SELECT 1
				                   FROM financemain_temp t3
				                  WHERE t3.finreference = t2.finreference))) fm ON fm.finreference = ph.finreference
				     JOIN customers cu ON cu.custid = fm.custid
				     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
				     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
				     LEFT JOIN customeremails ce ON ce.custid = cu.custid AND ce.custemailpriority = 5
				     LEFT JOIN customeraddresses ca ON ca.custid = ce.custid AND ca.custaddrpriority = 5
				     LEFT JOIN rmtprovincevscity cc ON cc.pccity = ca.custaddrcity
				     LEFT JOIN rmtcountryvsprovince cs ON cs.cpprovince = cc.pcprovince
				     LEFT JOIN customerphonenumbers cm ON cm.phonecustid = cu.custid AND cm.phonetypecode = 'MOBILE1' AND cm.phonetypepriority = 5
				     LEFT JOIN bankbranches bb ON bb.bankbranchid = pi.bankbranchid
				     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
				     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
				     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
				     LEFT JOIN beneficiary br ON br.bankbranchid = pi.bankbranchid AND br.accnumber = pi.accountno AND br.custid = fm.custid
				     LEFT JOIN customers bc ON bc.custid = br.custid
				     LEFT JOIN customeremails bce ON bce.custid = cu.custid AND bce.custemailpriority = 5
				     LEFT JOIN customeraddresses brca ON brca.custid = br.custid AND brca.custaddrpriority = 5
				     LEFT JOIN rmtprovincevscity brc ON brc.pccity = brca.custaddrcity
				     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
				     LEFT JOIN rmtfinancetypes rft ON fm.fintype = rft.fintype
				     LEFT JOIN smtdivisiondetail smd ON rft.findivision = smd.divisioncode
				  WHERE pi.status = 'APPROVED' AND NOT (pi.paymentinstructionid IN ( SELECT disbursement_requests.disbursement_id
				           FROM disbursement_requests))
				UNION ALL
				 SELECT pi.id AS paymentid,
				    '' AS finreference,
				    'I' AS channel,
				    pi.providerid,
				        CASE
				            WHEN pi.paymenttype = 'NEFT' THEN 'N'
				            WHEN pi.paymenttype = 'RTGS' THEN 'R'
				            WHEN pi.paymenttype = 'DD' THEN 'D'
				            WHEN pi.paymenttype = 'CHEQUE' THEN 'C'
				            ELSE pi.paymenttype
				        END AS disbursement_type,
				    pi.paymentamount / ccy.ccyminorccyunits AS amttobereleased,
				    pi.paymentdate AS disbdate,
				    pi.paymentdate AS lldate,
				    '' AS payableloc,
				    '' AS printingloc,
				    '' AS custcif,
				    '' AS custshrtname,
				    '' AS customer_mobile,
				    '' AS customer_email,
				    '' AS customer_state,
				    '' AS customer_city,
				    '' AS customer_address1,
				    '' AS customer_address2,
				    '' AS customer_address3,
				    '' AS customer_address4,
				    '' AS customer_address5,
				    bd.bankname,
				    bb.branchcode,
				    bb.branchdesc,
				    bbrs.cpprovincename AS benficiary_branch_state,
				    bbrc.pccityname AS benficiary_branch_city,
				    bb.micr AS micr_code,
				    bb.ifsc AS ifsc_code,
				    vpa.accountnumber AS beneficiaryaccno,
				    avd.dealername AS beneficiaryname,
				    avd.dealertelephone AS beneficiary_mobile,
				    avd.email AS benficiry_email,
				    brs.cpprovincename AS benficiary_state,
				    brc.pccityname AS benficiary_city,
				    avd.dealeraddress1 AS benficiary_address1,
				    avd.dealeraddress2 AS benficiary_address2,
				    avd.dealeraddress3 AS benficiary_address3,
				    '' AS benficiary_address4,
				    '' AS benficiary_address5,
				    '' AS payment_detail1,
				    '' AS payment_detail2,
				    '' AS payment_detail3,
				    '' AS payment_detail4,
				    '' AS payment_detail5,
				    '' AS payment_detail6,
				    '' AS payment_detail7,
				    pi.status,
				    pi.remarks,
				    pi.paymenttype,
				    '' AS fintype,
				    pb.partnerbankid,
				    pb.partnerbankcode,
				    pi.paymentdate AS inputdate,
				    pb.alwfiledownload,
				    pb.filename,
				    1 AS finisactive,
				    pi.entitycode,
					pb.accountNo As partnerBank_AccountNo
				   FROM insurancepaymentinstructions pi
				     JOIN rmtcurrencies ccy ON ccy.ccycode = pi.paymentccy
				     JOIN partnerbanks pb ON pb.partnerbankid = pi.partnerbankid
				     JOIN vasprovideraccdetail vpa ON vpa.providerid = pi.providerid
				     JOIN amtvehicledealer avd ON avd.dealerid = vpa.providerid
				     LEFT JOIN bankbranches bb ON bb.bankbranchid = vpa.bankbranchid
				     LEFT JOIN bmtbankdetail bd ON bd.bankcode = bb.bankcode
				     LEFT JOIN rmtprovincevscity bbrc ON bbrc.pccity = bb.city
				     LEFT JOIN rmtcountryvsprovince bbrs ON bbrs.cpprovince = bbrc.pcprovince
				     LEFT JOIN rmtprovincevscity brc ON brc.pccity = avd.dealercity
				     LEFT JOIN rmtcountryvsprovince brs ON brs.cpprovince = brc.pcprovince
				  WHERE pi.status = 'APPROVED' AND pi.paymentamount &gt; 0 AND NOT (pi.id IN ( SELECT disbursement_requests.disbursement_id
				           FROM disbursement_requests))
		</createView>
	</changeSet>
	
	<changeSet id="409" author="vijaya.a">
		<addColumn tableName="DISBURSEMENT_REQUESTS">
			<column name="PartnerBankId" type="bigint" defaultValue="0" />
			<column name="PartnerBankCode" type="varchar(8)" />
			<column name="PartnerBank_AccountNo" type="varchar(50)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="410_pre" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_save_and_drop_dependencies ('plf', 'financemain');
					select deps_save_and_drop_dependencies ('plf', 'financemain_temp');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="410" author="Varaprasad.K" dbms="postgresql,oracle">
		<modifyDataType tableName="FINANCEMAIN_TEMP"
			columnName="referralId" newDataType="VARCHAR(10)" />
		<modifyDataType tableName="FINANCEMAIN"
			columnName="referralId" newDataType="VARCHAR(10)" />
	</changeSet>
	
	<changeSet id="410_post" author="Varaprasad.K" dbms="postgresql">
		<sql>
			<![CDATA[
					select deps_restore_dependencies ('plf', 'financemain');
					select deps_restore_dependencies ('plf', 'financemain_temp');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="411_pre" author="Varaprasad.K" dbms="mssql">
		<sql>
			update FINANCEMAIN set referralId='' where referralId is null;
		</sql>
	</changeSet>
	
	<changeSet id="411" author="Varaprasad.K" dbms="mssql">
		<sql>
			<![CDATA[
				alter table FINANCEMAIN alter column referralId VARCHAR(10) not null;
				alter table FINANCEMAIN_Temp alter column referralId VARCHAR(10) not null;
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="412" author="satyanarayana.g">
		<sql>
             <![CDATA[
             	 UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				 UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);	
				 
           		 DELETE FROM SECGROUPRIGHTS WHERE RIGHTID IN (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menu_Item_ExcessAmountEnquiry');
			     DELETE FROM SECRIGHTS WHERE RIGHTNAME='menu_Item_ExcessAmountEnquiry';
			     
			     INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menu_Item_ExcessAmountEnquiry','MENU',0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0 FROM SEQSECRIGHTS WHERE 0=0;
				 INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='REPORTS_ADMIN') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menu_Item_ExcessAmountEnquiry'), 1, 0,1000,CURRENT_TIMESTAMP,NULL,NULL,NULL,NULL,NULL,NULL,0);
				 
				 UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				 UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="413" author="satyanarayana.g">
		<sql>
             <![CDATA[
             	 DELETE FROM REPORTFILTERFIELDS WHERE reportid in (select reportid FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_ExcessAmountEnquiry');
				 DELETE  FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_ExcessAmountEnquiry';
				
				 INSERT INTO REPORTCONFIGURATION VALUES((select max(reportid)+1 from REPORTCONFIGURATION),'Excess Amount Enquiry','Excess Amount Enquiry',
				 1,'ExcessAmountEnquiry','dataSource',1,'menu_Item_ExcessAmountEnquiry',1,1000,'','','','','','',0,CURRENT_TIMESTAMP,1,1,0);
				
				 INSERT INTO REPORTFILTERFIELDS VALUES 
				 ((select reportid from REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_ExcessAmountEnquiry'),1,'CustCIF','LOVSEARCH',
				 'Customer Number','CustCif',null,'Customer','getCustCIF','getCustCIF',1,0,0,0,1,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,CURRENT_TIMESTAMP,null);
				
				 INSERT INTO REPORTFILTERFIELDS VALUES 
				 ((select reportid from REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_ExcessAmountEnquiry'),2,'FinReference','LOVSEARCH',
				 'Loan Reference','FinReference',null,'FinanceMain','getFinReference','getFinReference',1,0,0,0,2,0,' ',' ',' ',' ',250,0,'=',1,1000,'Approved',null,null,null,null,null,0,CURRENT_TIMESTAMP,null);
			]]>
		</sql>
	</changeSet>
	
	
	
<changeSet id="414" author="srihari">
			<createTable tableName= "EXTINTERFACECONF">
			<column name="ID" type="bigint"/>
			<column name="CODE" type ="VARCHAR(10)"/>
			<column name="DESCRIPTION" type ="VARCHAR(20)"/>
			<column name="TYPE" type ="VARCHAR(20)"/>
			<column name="NOTIFICATIONTYPE" type="bigint"/>
			<column name="ERRORCODES" type="VARCHAR(20)"/>
			<column name="ACTIVE" type="bigint"/>
			<column name="VERSION" type ="bigint"/>
			<column name="LASTMNTBY" type ="bigint"/>
			<column name="LASTMNTON" type ="DATETIME"/>
			<column name="RECORDSTATUS" type ="VARCHAR(50)"/>
			<column name="ROLECODE" type ="VARCHAR(100)"/>
			<column name="NEXTROLECODE" type ="VARCHAR(200)"/>
			<column name="TASKID" type ="VARCHAR(50)"/>
			<column name="NEXTTASKID" type ="VARCHAR(200)"/>
			<column name="RECORDTYPE" type ="VARCHAR(50)"/>
			<column name="WORKFLOWID" type ="bigint" defaultValue="0" />
			<column name="CONTACTSDETAIL" type="VARCHAR(1000)"/>
		</createTable>
	</changeSet>

	 <changeSet id="415" author="srihari" dbms="postgresql,oracle">
	   <createTable tableName= "EXTINTERFACECONF_TEMP">
		<column name="ID" type="bigint"/>
		<column name="CODE" type ="VARCHAR (10)"/>
		<column name="DESCRIPTION" type ="VARCHAR (20)"/>
		<column name="TYPE" type ="VARCHAR (20)"/>
		<column name="NOTIFICATIONTYPE" type="bigint"/>
		<column name="ERRORCODES" type="VARCHAR (20)" />
		<column name="ACTIVE" type="bigint" />
		<column name="VERSION" type ="bigint"/>
		<column name="LASTMNTBY" type ="bigint"/>
		<column name="LASTMNTON" type ="DATETIME"/>
		<column name="RECORDSTATUS" type ="VARCHAR (50)"/>
		<column name="ROLECODE" type ="VARCHAR (100)"/>
		<column name="NEXTROLECODE" type ="VARCHAR(200)"/>
		<column name="TASKID" type ="VARCHAR (50)"/>
		<column name="NEXTTASKID" type ="VARCHAR (200)"/>
		<column name="RECORDTYPE" type ="VARCHAR (50)"/>
		<column name="WORKFLOWID" type ="bigint" defaultValue="0" /> 
		<column name="CONTACTSDETAIL" type="VARCHAR(1000)"/>
	 </createTable>
	</changeSet>
	
	
	 <changeSet id="415" author="srihari" dbms="mssql">
	   <createTable tableName= "EXTINTERFACECONF_TEMP">
		<column name="ID" type="bigint"/>
		<column name="CODE" type ="VARCHAR (10)"/>
		<column name="DESCRIPTION" type ="VARCHAR (20)"/>
		<column name="TYPE" type ="VARCHAR (20)"/>
		<column name="NOTIFICATIONTYPE" type="bigint"/>
		<column name="ERRORCODES" type="VARCHAR (20)" />
		<column name="ACTIVE" type="bigint" />
		<column name="VERSION" type ="bigint"/>
		<column name="LASTMNTBY" type ="bigint"/>
		<column name="LASTMNTON" type ="DATETIME"/>
		<column name="RECORDSTATUS" type ="VARCHAR (50)"/>
		<column name="ROLECODE" type ="VARCHAR (100)"/>
		<column name="NEXTROLECODE" type ="VARCHAR(200)"/>
		<column name="TASKID" type ="VARCHAR (50)"/>
		<column name="NEXTTASKID" type ="VARCHAR (200)"/>
		<column name="RECORDTYPE" type ="VARCHAR (50)"/>
		<column name="WORKFLOWID" type ="bigint" /> 
		<column name="CONTACTSDETAIL" type="VARCHAR(1000)"/>
	 </createTable>
	</changeSet>
	
	<changeSet id="415.0" author="ADARSH" dbms="mssql">
        <sql>
            <![CDATA[
                ALTER TABLE EXTINTERFACECONF_TEMP ADD CONSTRAINT EXTNTERFCENF_TMP_DF DEFAULT 0 FOR WORKFLOWID;
               
            ]]>
        </sql>
    </changeSet>
   
  <changeSet id="416" author="srihari" >
		<createView viewName="EXTINTERFACECONF_VIEW" replaceIfExists="true">
				SELECT	  T1.Id, 
						  T1.Code, 
						  T1.Description, 
						  T1.Type, 
						  T1.NotificationType,
						  T1.errorCodes, 
						  T1.active, 
						  T1.CONTACTSDETAIL,	
						  T1.Version , 
						  T1.LastMntBy, 
						  T1.LastMntOn,
						  T1.RecordStatus, 
						  T1.RoleCode, 
						  T1.NextRoleCode, 
						  T1.TaskId, 
						  T1.NextTaskId, 
						  T1.RecordType, 
						  T1.WorkflowId
				FROM    
						EXTINTERFACECONF_TEMP T1 
             UNION ALL
				SELECT	T1.Id, 
					    T1.Code, 
			            T1.Description, 
			            T1.Type, 
			            T1.NotificationType,
			            T1.errorCodes, 
			            T1.active	, 
			            T1.CONTACTSDETAIL,
						T1.Version , 
						T1.LastMntBy, 
						T1.LastMntOn,
						T1.RecordStatus, 
						T1.RoleCode, 
						T1.NextRoleCode, 
						T1.TaskId, 
						T1.NextTaskId, 
						T1.RecordType, 
						T1.WorkflowId
					FROM    	
						ExtInterfaceConf T1 
					WHERE  NOT EXISTS (SELECT 1 FROM EXTINTERFACECONF_TEMP WHERE Id = T1.Id)
   </createView>
 </changeSet>
			
	<changeSet id="417" author="srihari" >
		<createView viewName="EXTINTERFACECONF_AVIEW" replaceIfExists="true">
            SELECT		 T1.Id, 
			    		 T1.Code, 
			    		 T1.Description, 
			    		 T1.Type, 
			    		 T1.NotificationType, 
			    		 T1.errorCodes, 
			    		 T1.active,  
			    		 T1.CONTACTSDETAIL,		
						 T1.Version , 
						 T1.LastMntBy, 
						 T1.LastMntOn,
						 T1.RecordStatus, 
						 T1.RoleCode, 
						 T1.NextRoleCode, 
						 T1.TaskId, 
						 T1.NextTaskId, 
						 T1.RecordType, 
						 T1.WorkflowId
					FROM    	
						 ExtInterfaceConf T1
		</createView>
   </changeSet>

  <changeSet id="418" author="srihari" >
	<sql>
		<![CDATA[
INSERT INTO SecGroups values ((SELECT Max(GRPID)+1 FROM (SELECT GRPID FROM SECGROUPS UNION SELECT GRPID FROM SECGROUPS_TEMP) s),'ExtInterfaceConfiguration_VIEW', 'Allow to view ExtInterfaceConfiguration', 0,1000,current_timestamp,'Approved','','','','','',0); 
INSERT INTO SecGroups values ((SELECT Max(GRPID)+1 FROM (SELECT GRPID FROM SECGROUPS UNION SELECT GRPID FROM SECGROUPS_TEMP) s),'ExtInterfaceConfiguration_MAKER', 'WF Maker for ExtInterfaceConfiguration', 0,1000,current_timestamp,'Approved','','','','','',0);
INSERT INTO SecGroups values ((SELECT Max(GRPID)+1 FROM (SELECT GRPID FROM SECGROUPS UNION SELECT GRPID FROM SECGROUPS_TEMP) s),'ExtInterfaceConfiguration_APPROVER', 'WF Approver for ExtInterfaceConfiguration', 0,1000,current_timestamp,'Approved','','','','','',0);
INSERT INTO SecRights values ((select MAX(rightid)+1 from SecRights),0,'menuCat_ExtInterfaceEnquiry','MENU',0,1000,current_timestamp,'Approved','','','','','',0);
INSERT INTO SecRights values ((select MAX(rightid)+1 from SecRights),0,'menuCat_ExtInterface','MENU',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
INSERT INTO SecRights values ((select MAX(rightid)+1 from SecRights),2,'button_ExtInterfaceConfigurationList_PrintList','ExtInterfaceConfigurationList',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
INSERT INTO SecRights values ((select MAX(rightid)+1 from SecRights),2,'button_ExtInterfaceConfigurationList_NewExtInterfaceConfiguration','ExtInterfaceConfigurationList',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
INSERT INTO SecRights values ((select MAX(rightid)+1 from SecRights),2,'button_ExtInterfaceConfigurationDialog_btnSave','ExtInterfaceConfigurationDialog',0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0);
INSERT INTO SecRights values ((SELECT MAX(rightid)+1 from SecRights),3,'ExtInterfaceConfigurationDialog_Description','ExtInterfaceConfigurationDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
INSERT INTO SecRights values ((SELECT MAX(rightid)+1 from SecRights),3,'ExtInterfaceConfigurationDialog_Type','ExtInterfaceConfigurationDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
INSERT INTO SecRights values ((SELECT MAX(rightid)+1 from SecRights),3,'ExtInterfaceConfigurationDialog_NotificationType','ExtInterfaceConfigurationDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
INSERT INTO SecRights values ((SELECT MAX(rightid)+1 from SecRights),3,'ExtInterfaceConfigurationDialog_active','ExtInterfaceConfigurationDialog',0,1000,current_timestamp,'Approved','',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'),(select RightID from SecRights WHERE RightName='menuCat_ApplicationMaster'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'),(select RightID from SecRights WHERE RightName='menuCat_ExtInterface'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'),(select RightID from SecRights WHERE RightName='button_ExtInterfaceConfigurationDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'),(select RightID from SecRights WHERE RightName='ExtInterfaceConfigurationDialog_Description'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'),(select RightID from SecRights WHERE RightName='ExtInterfaceConfigurationDialog_Type'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'),(select RightID from SecRights WHERE RightName='ExtInterfaceConfigurationDialog_NotificationType'),1,0,10000,current_timestamp,'','','','','','',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'),(select RightID from SecRights WHERE RightName='ExtInterfaceConfigurationDialog_active'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_APPROVER'),(select RightID from SecRights WHERE RightName='menuCat_ApplicationMaster'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_APPROVER'),(select RightID from SecRights WHERE RightName='menuCat_ExtInterface'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_APPROVER'),(select RightID from SecRights WHERE RightName='button_ExtInterfaceConfigurationDialog_btnSave'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecGroupRights values ((SELECT MAX(GRPrightID)+1 FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_TEmp) s),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_VIEW'),(select RightID from SecRights WHERE RightName='menuCat_ExtInterfaceEnquiry'),1,0,10000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
INSERT INTO SecRoleGroups values ((select MAX(ROLEGRPID)+1 from SecRoleGroups),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_MAKER'), (select roleid from SecRoles where RoleCd='MSTGRP1_MAKER'), 0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0); 
INSERT INTO SecRoleGroups values ((select MAX(ROLEGRPID)+1 from SecRoleGroups),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_APPROVER'), (select roleid from SecRoles where RoleCd='MSTGRP1_APPROVER'), 0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0); 
INSERT INTO SecRoleGroups values ((select MAX(ROLEGRPID)+1 from SecRoleGroups),(select GRPID from SecGroups where GRPCODE = 'ExtInterfaceConfiguration_VIEW'), (select roleid from SecRoles where RoleCd='MSTGRP1_MAKER'), 0,1000,current_timestamp,'Approved',' ',' ',' ',' ',' ',0); 


UPDATE SeqSecGroups SET SeqNo= (SELECT MAX(GRPID) FROM ( SELECT GRPID FROM SECGROUPS UNION SELECT GRPID FROM SECGROUPS_TEMP)t);
UPDATE SeqSecRights SET SeqNo= (SELECT MAX(rightid) FROM SecRights );	
UPDATE SeqSecGroupRights SET SeqNo= (SELECT MAX(GRPrightID) FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_Temp)t);
UPDATE SeqSecRoleGroups SET SeqNo= (SELECT MAX(ROLEGRPID) FROM SecRoleGroups);	]]>
		</sql>
	</changeSet>
	
<changeSet id="419" author="vijaya.a">
		<sql>
		<![CDATA[
				DELETE from SMTparameters WHERE SYSPARMCODE='MANDATE_DOWNLOAD_STOP_CIF_VALIDATION';
				INSERT INTO SMTparameters  VALUES ('MANDATE_DOWNLOAD_STOP_CIF_VALIDATION', 'Mandate Download Stop CIF validation', 'String', '1', 'N', 1, 0, NULL, NULL,'To stop cif validation in Mandate download ', 1, 1000, CURRENT_TIMESTAMP,'Approved', '', '', '', '', '',0);
			]]>
		</sql>
	</changeSet>

	<changeSet id="420" author="vijaya.a">
		<addColumn tableName="MANDATE_REQUESTS">
			<column name="BANK_BRANCH_NAME" type="Varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="421" author="vijaya.a">
		<addColumn tableName="MANDATE_RESPONSE">
			<column name="BANK_BRANCH_NAME" type="Varchar(200)" />
		</addColumn>
	</changeSet>

	<changeSet id="422" author="vijaya.a">
		<createView viewName="INT_MANDATE_REQUEST_VIEW" replaceIfExists="true">
			SELECT
			M.MANDATEID,
			BD.BANKSHORTCODE
			BANKCODE,
			BD.BANKNAME,
			case when LB.BRANCHCODE IS NULL THEN CB.BRANCHCODE ELSE LB.BRANCHCODE END BRANCHCODE,
			case when
			LB.BRANCHDESC IS NULL THEN CB.BRANCHDESC ELSE LB.BRANCHDESC END BRANCHDESC,
			CUST.CUSTCIF,
			CUST.CUSTSHRTNAME,
			CUST.CustCoreBank,
			FT.FINTYPEDESC FINTYPE ,
			FIN.FINREFERENCE ,
			COALESCE((SELECT SUM(TotalAmount) from (Select
			MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount
			FROM FINSCHEDULEDETAILS FSD
			INNER JOIN FINANCEMAIN FM ON FM.FINREFERENCE
			=FSD.FINREFERENCE AND FM.CUSTID = M.CUSTID
			GROUP BY FM.FINREFERENCE)T)/CCYMINORCCYUNITS, 0) CUST_EMI,
			COALESCE((SELECT
			SUM(TotalAmount) from (Select MAX(FSD.REPAYAMOUNT+FSD.FEESCHD) TotalAmount FROM FINSCHEDULEDETAILS FSD WHERE
			(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE MANDATEID =
			M.MANDATEID) GROUP BY FINREFERENCE)T)/CCYMINORCCYUNITS, 0) EMI,
			CASE M.OPENMANDATE WHEN 1 THEN 'New Open ECS' ELSE 'No
			Open ECS' END OPENMANDATE,
			M.ACCNUMBER,
			CASE WHEN M.ACCTYPE = '10' then 'Savings Account' WHEN M.ACCTYPE = '11' then
			'Current Account' WHEN M.ACCTYPE = '11' then
			'Cash Credit Account' ELSE M.ACCTYPE END ACCTYPE,
			M.ACCHOLDERNAME,
			BB.MICR,
			BB.IFSC,
			BB.ADDOFBRANCH,
			(select MIN(FIRSTREPAYDATE) from FINPFTDETAILS where FINREFERENCE IN (SELECT
			FINREFERENCE FROM FINANCEMAIN WHERE
			MANDATEID=M.MANDATEID)) FIRSTDUEDATE,
			(select MAX(SCHDATE) from FINSCHEDULEDETAILS
			where (REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) and FINREFERENCE IN (SELECT
			FINREFERENCE FROM FINANCEMAIN WHERE
			MANDATEID=M.MANDATEID)) EMIENDDATE,
			COALESCE (M.MAXLIMIT/CCYMINORCCYUNITS, 0) MAXLIMIT,
			COALESCE((SELECT
			SUM(MANDATEDEBITAMOUNT) from (Select MAX(REPAYAMOUNT+FEESCHD) MANDATEDEBITAMOUNT FROM FINSCHEDULEDETAILS WHERE
			(REPAYONSCHDATE = 1 OR PFTONSCHDATE = 1) AND FINREFERENCE IN (SELECT FINREFERENCE FROM FINANCEMAIN WHERE
			MANDATEID=M.MANDATEID)
			GROUP BY FINREFERENCE)T), 0)/CCYMINORCCYUNITS DEBITAMOUNT,
			FIN.NumberOfTerms,
			M.periodicity,
			M.STARTDATE,
			M.EXPIRYDATE,
			FIN.APPLICATIONNO,
			M.MANDATETYPE,
			M.STATUS,
			M.INPUTDATE,
			M.RECORDSTATUS,
			M.RECORDTYPE,
			M.MANDATECCY,
			COALESCE (CCY.CCYMINORCCYUNITS, 100) CCYMINORCCYUNITS,
			M.EntityCode,
			CP.PHONENUMBER,
			CE.CUSTEMAIL,
			PB.PARTNERBANKNAME,
			M.LASTMNTON,
			BB.BranchDesc BANK_BRANCH_NAME
			FROM MANDATES M
			INNER JOIN BANKBRANCHES BB ON
			BB.BANKBRANCHID = M.BANKBRANCHID
			INNER JOIN BMTBANKDETAIL BD ON BD.BANKCODE=BB.BANKCODE
			INNER JOIN CUSTOMERS CUST ON
			CUST.CUSTID = M.CUSTID
			INNER JOIN RMTBRANCHES CB ON CB.BRANCHCODE = CUST.CUSTDFTBRANCH
			LEFT JOIN PARTNERBANKS PB ON
			PB.PARTNERBANKID = M.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE ON CE.CUSTID = CUST.CUSTID AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERPHONENUMBERS CP ON CP.PHONECUSTID = CUST.CUSTID AND CP.PHONETYPEPRIORITY = 5
			LEFT OUTER JOIN
			RMTCURRENCIES CCY ON CCY.CCYCODE = M.MANDATECCY
			LEFT OUTER JOIN FINANCEMAIN FIN ON M.ORGREFERENCE=FIN.FINREFERENCE
			LEFT JOIN RMTBRANCHES LB ON LB.BRANCHCODE = FIN.FINBRANCH
			LEFT OUTER JOIN RMTFINANCETYPES FT ON FIN.FINTYPE
			=FT.FINTYPE
			WHERE M.STATUS = 'NEW' AND M.MANDATEID NOT IN (select MANDATEID FROM MANDATE_REQUESTS where (status = 'AC'
			OR status =
			'NEW'))
		</createView>
	</changeSet>

	<changeSet id="423" author="satyanarayana.g">
		<sql>
             <![CDATA[
             	 DELETE FROM REPORTFILTERFIELDS WHERE REPORTID IN (select reportid from reportconfiguration  where menuitemcode='menu_Item_Put_CallReport');
				 DELETE FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_Put_CallReport';
				 DELETE FROM REPORTFILTERFIELDS WHERE REPORTID IN (SELECT REPORTID FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_putcallreport');

                 INSERT INTO REPORTFILTERFIELDS VALUES((SELECT REPORTID FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_putcallreport'),1,
                 'FinReference','LOVSEARCH','Loan Reference','fp.FinReference','','FinOptionReport','getFinReference','getFinReference',1,0,0,0,1,1,'','','','',250,0,'=',1,1000,'Approved','','','','','',0,current_timestamp,'');	

                 INSERT INTO REPORTFILTERFIELDS VALUES((SELECT REPORTID FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_putcallreport'),2,
                 'CustCIF','LOVSEARCH','Customer Number','C.CustCIF','','Customer','getCustCIF','getCustShrtName',1,0,0,0,2,0,'','','','',250,0,'=',1,1000,'Approved','','','','','',0,current_timestamp,'');
			]]>
		</sql>
	</changeSet>

	<changeSet id="424" author="satyanarayana.g">
		<sql>
             <![CDATA[
             	 DELETE FROM REPORTFILTERFIELDS WHERE REPORTID IN (SELECT REPORTID FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_CovenantRegisterReport');

				 INSERT INTO REPORTFILTERFIELDS VALUES((SELECT REPORTID FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_CovenantRegisterReport'),1,
                 'FinReference','LOVSEARCH','Loan Reference','fm.FinReference','','CovenantReport','getKeyReference','getKeyReference',1,0,0,0,1,1,'','','','',250,0,'=',1,1000,'Approved','','','','','',0,current_timestamp,'');	

                 INSERT INTO REPORTFILTERFIELDS VALUES((SELECT REPORTID FROM REPORTCONFIGURATION WHERE MENUITEMCODE='menu_Item_CovenantRegisterReport'),2,
                 'CustCIF','LOVSEARCH','Customer Number','C.CustCIF','','Customer','getCustCIF','getCustShrtName',1,0,0,0,2,0,'','','','',250,0,'=',1,1000,'Approved','','','','','',0,current_timestamp,'');	
			  ]]>
		</sql>
	</changeSet>

	<changeSet id="425" author="Shinde.b">
		<createTable tableName="FinAutoApprovalDetails">
			<column name="Id" type="bigint" autoIncrement="true">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="BatchId" type="bigint" />
			<column name="FinReference" type="varchar(20)">
				<constraints nullable="false" />
			</column>
			<column name="DisbId" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="RealizedDate" type="datetime" />
			<column name="Status" type="Varchar(8)" />
			<column name="ErrorDesc" type="Varchar(1000)" />
			<column name="UserId" type="bigint" />
		</createTable>
	</changeSet>
	<changeSet id="426" author="Varaprasad.K">
		<sql>
			<![CDATA[
			        DELETE FROM SecRights where RightName='button_VASRecordingList_btnInsurance';
					DELETE FROM SECGROUPRIGHTS Where GRPID = (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='InsuranceCalculation') AND RIGHTID = (SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_VASRecordingList_btnInsurance');
					DELETE FROM SECGROUPS Where Grpcode='InsuranceCalculation';
					
					INSERT INTO SECGROUPS values ((SELECT MAX(GRPID)+1 FROM SECGROUPS), 'InsuranceCalculation','Insurance Calculation Button Visibility Group', 0,1000,CURRENT_TIMESTAMP,' ',' ',null,' ',' ',' ',0);
					INSERT INTO SecRights values ((select MAX(rightid+1) from SecRights),2,'button_VASRecordingList_btnInsurance','VASRecordingList',0,1000,'2017-01-03 12:41:37','Approved',' ',' ',' ',' ',' ',0);
					INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='InsuranceCalculation') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_VASRecordingList_btnInsurance'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
					
					UPDATE SeqSecGroups SET SeqNo= (SELECT MAX(GRPID) FROM ( SELECT GRPID FROM SECGROUPS UNION SELECT GRPID FROM SECGROUPS_TEMP)t);
					UPDATE SeqSecRights SET SeqNo= (SELECT MAX(rightid) FROM SecRights );	
					UPDATE SeqSecGroupRights SET SeqNo= (SELECT MAX(GRPrightID) FROM (SELECT GRPrightID FROM SecGroupRights UNION SELECT GRPrightID FROM SecGroupRights_Temp)t);
			]]>
		</sql>
	</changeSet>
	<changeSet id="427" author="Varaprasad.K">
		<sql>
		    <![CDATA[
			Delete from ErrorDetails Where code = 'IC001';			
			Insert Into ErrorDetails Values ('IC001', 'EN', 'E', 'Max Count Reached.','','Approved','','','','','',0,null,1000,0);
		    ]]>
		</sql>
	</changeSet>

	<changeSet id="428_pre" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_save_and_drop_dependencies ('plf', 'collateralassignment_tview');
			]]>
		</sql>
	</changeSet>

	<changeSet id="428" author="satyanarayana.g">
		<createView viewName="COLLATERALASSIGNMENT_TVIEW" replaceIfExists="true">
			SELECT CA.MODULE,
			CA.REFERENCE,
			CA.COLLATERALREF,
			CA.ASSIGNPERC,
			CS.COLLATERALCCY,
			CA.ACTIVE,
			CA.HOSTREFERENCE,
			CS.COLLATERALVALUE,
			CS.BANKVALUATION,
			T.TOTASSIGNPERC - CA.ASSIGNPERC AS TOTASSIGNPERC,
			FM.FINCURRASSETVALUE - FM.DOWNPAYMENT + FM.FEECHARGEAMT +
			FM.INSURANCEAMT - FM.FINREPAYMENTAMOUNT AS UTILIZEDAMOUNT,
			CA.VERSION,
			CA.LASTMNTBY,
			CA.LASTMNTON,
			CA.RECORDSTATUS,
			CA.ROLECODE,
			CA.NEXTROLECODE,
			CA.TASKID,
			CA.NEXTTASKID,
			CA.RECORDTYPE,
			CA.WORKFLOWID,
			CS.SPECIALLTV,
			CS.BANKLTV
			FROM
			COLLATERALASSIGNMENT_TEMP CA
			JOIN COLLATERALSETUP_TEMP CS ON CA.COLLATERALREF = CS.COLLATERALREF
			LEFT JOIN
			(SELECT T1.COLLATERALREF, SUM(T1.ASSIGNPERC) AS TOTASSIGNPERC
			FROM (SELECT COLLATERALASSIGNMENT_TEMP.REFERENCE,
			COLLATERALASSIGNMENT_TEMP.COLLATERALREF,
			COLLATERALASSIGNMENT_TEMP.ASSIGNPERC
			FROM COLLATERALASSIGNMENT_TEMP
			UNION
			SELECT CA_1.REFERENCE,
			CA_1.COLLATERALREF,
			CA_1.ASSIGNPERC
			FROM COLLATERALASSIGNMENT CA_1
			WHERE NOT (EXISTS
			(SELECT 1
			FROM COLLATERALASSIGNMENT_TEMP
			WHERE COLLATERALASSIGNMENT_TEMP.COLLATERALREF = CA_1.COLLATERALREF
			AND
			COLLATERALASSIGNMENT_TEMP.MODULE = CA_1.MODULE
			AND COLLATERALASSIGNMENT_TEMP.REFERENCE = CA_1.REFERENCE
			))
			) T1
			GROUP BY
			T1.COLLATERALREF
			) T ON T.COLLATERALREF = CA.COLLATERALREF
			LEFT JOIN FINANCEMAIN_TEMP FM ON CA.REFERENCE =
			FM.FINREFERENCE
		</createView>
	</changeSet>

	<changeSet id="428_post" author="satyanarayana.g" dbms="postgresql">
		<sql>
			<![CDATA[
				select deps_restore_dependencies ('plf', 'collateralassignment_tview');
			]]>
		</sql>
	</changeSet>
	
	<changeSet id="429" author="vijaya.a">
		<renameColumn tableName="DISBURSEMENT_REQUESTS" oldColumnName="PartnerBankId" newColumnName="PARTNERBANK_ID"/>
		<renameColumn tableName="DISBURSEMENT_REQUESTS" oldColumnName="PartnerBankCode" newColumnName="PARTNERBANK_CODE"/>
		<renameColumn tableName="DISBURSEMENT_REQUESTS" oldColumnName="PartnerBank_AccountNo" newColumnName="PARTNERBANK_ACCOUNT"/>
	</changeSet>
	
	<changeSet id="430" author="vijaya.a" dbms="postgresql,oracle">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
	SELECT FA.PAYMENTID,
			FA.FINREFERENCE,
			'D' CHANNEL,
			0 PROVIDERID,
			CASE
			WHEN FA.PAYMENTTYPE = 'NEFT'
			THEN 'N'
			WHEN FA.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN
			FA.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN FA.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE FA.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			FA.AMTTOBERELEASED,
			FA.DISBDATE,
			FA.LLDATE,
			FA.PAYABLELOC,
			FA.PRINTINGLOC,
			CU.CUSTCIF,
			CU.CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			CE.CUSTEMAIL CUSTOMER_EMAIL,
			CS.CPPROVINCENAME CUSTOMER_STATE,
			CC.PCCITYNAME CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			''
			CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			FA.BENEFICIARYACCNO,
			CASE
			WHEN FA.PAYMENTTYPE = 'CHEQUE'
			OR FA.PAYMENTTYPE = 'DD'
			THEN
			FA.LIABILITYHOLDNAME
			ELSE FA.BENEFICIARYNAME
			END BENEFICIARYNAME,
			(FA.PHONECOUNTRYCODE || FA.PHONEAREACODE) ||
			FA.PHONENUMBER BENEFICIARY_MOBILE,
			BCE.CUSTEMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME
			BENFICIARY_CITY,
			'' BENFICIARY_ADDRESS1,
			'' BENFICIARY_ADDRESS2,
			'' BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			''
			BENFICIARY_ADDRESS5,
			'' PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			'' PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			'' PAYMENT_DETAIL7,
			FA.STATUS,
			FA.DESCRIPTION REMARKS,
			FA.PAYMENTTYPE,
			FM.FINTYPE,
			PB.PARTNERBANKID
			PARTNERBANK_ID,
			PB.PARTNERBANKCODE PARTNERBANK_CODE,
			FA.INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			FM.FINISACTIVE,
			SMD.ENTITYCODE,
			PB.ACCOUNTNO PARTNERBANK_ACCOUNTNO
			FROM FINADVANCEPAYMENTS FA
			JOIN
			(SELECT FINANCEMAIN_TEMP.CUSTID,
			FINANCEMAIN_TEMP.FINREFERENCE,
			FINANCEMAIN_TEMP.FINTYPE,
			FINANCEMAIN_TEMP.FINISACTIVE
			FROM FINANCEMAIN_TEMP
			UNION ALL
			SELECT T2.CUSTID,
			T2.FINREFERENCE,
			T2.FINTYPE,
			T2.FINISACTIVE
			FROM FINANCEMAIN T2
			WHERE NOT (EXISTS
			( SELECT 1 FROM
			FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE
			))
			) FM
			ON FM.FINREFERENCE = FA.FINREFERENCE
			JOIN CUSTOMERS
			CU
			ON CU.CUSTID = FM.CUSTID
			JOIN RMTCURRENCIES CCY
			ON CCY.CCYCODE
			= FA.DISBCCY
			JOIN PARTNERBANKS PB
			ON PB.PARTNERBANKID =
			FA.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE
			ON CE.CUSTID =
			CU.CUSTID
			AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN
			CUSTOMERADDRESSES CA
			ON CA.CUSTID = CE.CUSTID
			AND CA.CUSTADDRPRIORITY =
			5
			LEFT JOIN RMTPROVINCEVSCITY CC
			ON CC.PCCITY =
			CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS
			ON CS.CPPROVINCE =
			CC.PCPROVINCE
			LEFT JOIN BANKBRANCHES BB
			ON
			BB.BANKBRANCHID = FA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON BD.BANKCODE =
			BB.BANKCODE
			LEFT JOIN
			(SELECT
			PB_1.PARTNERBANKID,
			PBD_1.BANKNAME,
			PBB.BRANCHDESC,
			PBBRC.PCCITYNAME,
			PBBRS.CPPROVINCENAME
			FROM PARTNERBANKS PB_1
			JOIN
			BANKBRANCHES PBB
			ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE
			JOIN BMTBANKDETAIL PBD_1
			ON PBD_1.BANKCODE = PBB.BANKCODE
			LEFT
			JOIN RMTPROVINCEVSCITY PBBRC
			ON PBBRC.PCCITY = PBB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS
			ON PBBRS.CPPROVINCE =
			PBBRC.PCPROVINCE
			) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
			LEFT JOIN BENEFICIARY BR
			ON BR.BANKBRANCHID =
			FA.BANKBRANCHID
			AND
			BR.ACCNUMBER = FA.BENEFICIARYACCNO
			AND BR.CUSTID = FM.CUSTID
			LEFT JOIN CUSTOMERS BC
			ON BC.CUSTID =
			BR.CUSTID
			LEFT JOIN
			CUSTOMEREMAILS BCE
			ON BCE.CUSTID = CU.CUSTID
			AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES
			BRCA
			ON
			BRCA.CUSTID = BR.CUSTID
			AND BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON BRC.PCCITY =
			BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS
			ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT
			ON
			FM.FINTYPE =
			RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD
			ON RFT.FINDIVISION = SMD.DIVISIONCODE
			WHERE FA.STATUS =
			'APPROVED'
			AND NOT
			(FA.PAYMENTID IN
			( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS
			))
			AND NOT
			(FA.PAYMENTID IN
			( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP
			))
			UNION ALL
			SELECT
			PI.PAYMENTINSTRUCTIONID PAYMENTID,
			PH.FINREFERENCE,
			PH.PAYMENTTYPE CHANNEL,
			0 PROVIDERID,
			CASE
			WHEN PI.PAYMENTTYPE =
			'NEFT'
			THEN 'N'
			WHEN PI.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN PI.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN PI.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE PI.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			PI.PAYMENTAMOUNT / CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			PI.POSTDATE
			DISBDATE,
			PI.POSTDATE LLDATE,
			PI.PAYABLELOC,
			PI.PRINTINGLOC,
			CU.CUSTCIF,
			CU.CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			CE.CUSTEMAIL
			CUSTOMER_EMAIL,
			CS.CPPROVINCENAME CUSTOMER_STATE,
			CC.PCCITYNAME CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			''
			CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			PI.ACCOUNTNO BENEFICIARYACCNO,
			CASE
			WHEN PI.PAYMENTTYPE = 'CHEQUE'
			OR PI.PAYMENTTYPE = 'DD'
			THEN
			PI.FAVOURNAME
			ELSE PI.ACCTHOLDERNAME
			END BENEFICIARYNAME,
			PI.PHONECOUNTRYCODE || PI.PHONENUMBER BENEFICIARY_MOBILE,
			BCE.CUSTEMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME BENFICIARY_CITY,
			''
			BENFICIARY_ADDRESS1,
			'' BENFICIARY_ADDRESS2,
			'' BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			'' BENFICIARY_ADDRESS5,
			''
			PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			'' PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			''
			PAYMENT_DETAIL7,
			PI.STATUS,
			PI.REMARKS,
			PI.PAYMENTTYPE,
			FM.FINTYPE,
			PB.PARTNERBANKID PARTNERBANK_ID,
			PB.PARTNERBANKCODE
			PARTNERBANK_CODE,
			PI.POSTDATE INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			FM.FINISACTIVE,
			SMD.ENTITYCODE,
			PB.ACCOUNTNO
			PARTNERBANK_ACCOUNTNO
			FROM PAYMENTINSTRUCTIONS PI
			JOIN PAYMENTHEADER PH
			ON PH.PAYMENTID = PI.PAYMENTID
			JOIN
			(SELECT
			FINANCEMAIN.CUSTID,
			FINANCEMAIN.FINREFERENCE,
			FINANCEMAIN.FINTYPE,
			FINANCEMAIN.FINISACTIVE
			FROM FINANCEMAIN
			UNION ALL
			SELECT T2.CUSTID,
			T2.FINREFERENCE,
			T2.FINTYPE,
			T2.FINISACTIVE
			FROM FINANCEMAIN_TEMP T2
			WHERE NOT (EXISTS
			( SELECT 1 FROM
			FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE
			))
			) FM
			ON FM.FINREFERENCE = PH.FINREFERENCE
			JOIN CUSTOMERS
			CU
			ON CU.CUSTID = FM.CUSTID
			JOIN RMTCURRENCIES CCY
			ON CCY.CCYCODE
			= PI.PAYMENTCCY
			JOIN PARTNERBANKS PB
			ON PB.PARTNERBANKID
			= PI.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE
			ON CE.CUSTID =
			CU.CUSTID
			AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN
			CUSTOMERADDRESSES CA
			ON CA.CUSTID = CE.CUSTID
			AND CA.CUSTADDRPRIORITY =
			5
			LEFT JOIN RMTPROVINCEVSCITY CC
			ON CC.PCCITY =
			CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS
			ON CS.CPPROVINCE =
			CC.PCPROVINCE
			LEFT JOIN CUSTOMERPHONENUMBERS CM
			ON
			CM.PHONECUSTID = CU.CUSTID
			AND CM.PHONETYPECODE = 'MOBILE1'
			AND
			CM.PHONETYPEPRIORITY = 5
			LEFT JOIN BANKBRANCHES BB
			ON
			BB.BANKBRANCHID = PI.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON
			BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY
			BBRC
			ON BBRC.PCCITY = BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS
			ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
			LEFT JOIN
			BENEFICIARY BR
			ON BR.BANKBRANCHID = PI.BANKBRANCHID
			AND BR.ACCNUMBER =
			PI.ACCOUNTNO
			AND BR.CUSTID = FM.CUSTID
			LEFT JOIN
			CUSTOMERS BC
			ON BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE
			ON
			BCE.CUSTID = CU.CUSTID
			AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES BRCA
			ON BRCA.CUSTID = BR.CUSTID
			AND
			BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON BRC.PCCITY = BRCA.CUSTADDRCITY
			LEFT JOIN
			RMTCOUNTRYVSPROVINCE BRS
			ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN
			RMTFINANCETYPES RFT
			ON FM.FINTYPE = RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD
			ON RFT.FINDIVISION = SMD.DIVISIONCODE
			WHERE PI.STATUS = 'APPROVED'
			AND NOT
			(PI.PAYMENTINSTRUCTIONID IN
			( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
			DISBURSEMENT_REQUESTS
			))
			UNION ALL
			SELECT PI.ID PAYMENTID,
			'' FINREFERENCE,
			'I' CHANNEL,
			PI.PROVIDERID,
			CASE
			WHEN
			PI.PAYMENTTYPE = 'NEFT'
			THEN 'N'
			WHEN PI.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN PI.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN
			PI.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE PI.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			PI.PAYMENTAMOUNT / CCY.CCYMINORCCYUNITS
			AMTTOBERELEASED,
			PI.PAYMENTDATE DISBDATE,
			PI.PAYMENTDATE LLDATE,
			'' PAYABLELOC,
			'' PRINTINGLOC,
			'' CUSTCIF,
			''
			CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			'' CUSTOMER_EMAIL,
			'' CUSTOMER_STATE,
			'' CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			''
			CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
			AVD.DEALERNAME BENEFICIARYNAME,
			AVD.DEALERTELEPHONE
			BENEFICIARY_MOBILE,
			AVD.EMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME BENFICIARY_CITY,
			AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
			AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
			AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			'' BENFICIARY_ADDRESS5,
			'' PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			''
			PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			'' PAYMENT_DETAIL7,
			PI.STATUS,
			PI.REMARKS,
			PI.PAYMENTTYPE,
			''
			FINTYPE,
			PB.PARTNERBANKID PARTNERBANK_ID,
			PB.PARTNERBANKCODE PARTNERBANK_CODE,
			PI.PAYMENTDATE INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			1 FINISACTIVE,
			PI.ENTITYCODE,
			PB.ACCOUNTNO PARTNERBANK_ACCOUNT
			FROM
			INSURANCEPAYMENTINSTRUCTIONS PI
			JOIN RMTCURRENCIES CCY
			ON CCY.CCYCODE = PI.PAYMENTCCY
			JOIN
			PARTNERBANKS PB
			ON
			PB.PARTNERBANKID = PI.PARTNERBANKID
			JOIN VASPROVIDERACCDETAIL VPA
			ON VPA.PROVIDERID = PI.PROVIDERID
			JOIN
			AMTVEHICLEDEALER AVD
			ON AVD.DEALERID = VPA.PROVIDERID
			LEFT JOIN BANKBRANCHES BB
			ON BB.BANKBRANCHID =
			VPA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY BBRC
			ON BBRC.PCCITY
			= BB.CITY
			LEFT
			JOIN RMTCOUNTRYVSPROVINCE BBRS
			ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON
			BRC.PCCITY =
			AVD.DEALERCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS
			ON BRS.CPPROVINCE = BRC.PCPROVINCE
			WHERE PI.STATUS =
			'APPROVED'
			AND
			PI.PAYMENTAMOUNT &gt; 0
			AND NOT (PI.ID IN
			( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS
			))
				</createView>
	</changeSet>
  
	<changeSet id="430" author="vijaya.a" dbms="mssql">
		<createView viewName="INT_DISBURSEMENT_REQUEST_VIEW" replaceIfExists="true">
			SELECT FA.PAYMENTID,
			FA.FINREFERENCE,
			'D' CHANNEL,
			0 PROVIDERID,
			CASE
			WHEN FA.PAYMENTTYPE = 'NEFT'
			THEN 'N'
			WHEN FA.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN
			FA.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN FA.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE FA.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			FA.AMTTOBERELEASED,
			FA.DISBDATE,
			FA.LLDATE,
			FA.PAYABLELOC,
			FA.PRINTINGLOC,
			CU.CUSTCIF,
			CU.CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			CE.CUSTEMAIL CUSTOMER_EMAIL,
			CS.CPPROVINCENAME CUSTOMER_STATE,
			CC.PCCITYNAME CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			''
			CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			PBD.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			PBD.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			FA.BENEFICIARYACCNO,
			CASE
			WHEN FA.PAYMENTTYPE = 'CHEQUE'
			OR FA.PAYMENTTYPE = 'DD'
			THEN
			FA.LIABILITYHOLDNAME
			ELSE FA.BENEFICIARYNAME
			END BENEFICIARYNAME,
			(FA.PHONECOUNTRYCODE + FA.PHONEAREACODE) +
			FA.PHONENUMBER BENEFICIARY_MOBILE,
			BCE.CUSTEMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME
			BENFICIARY_CITY,
			'' BENFICIARY_ADDRESS1,
			'' BENFICIARY_ADDRESS2,
			'' BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			''
			BENFICIARY_ADDRESS5,
			'' PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			'' PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			'' PAYMENT_DETAIL7,
			FA.STATUS,
			FA.DESCRIPTION REMARKS,
			FA.PAYMENTTYPE,
			FM.FINTYPE,
			PB.PARTNERBANKID
			PARTNERBANK_ID,
			PB.PARTNERBANKCODE PARTNERBANK_CODE,
			FA.INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			FM.FINISACTIVE,
			SMD.ENTITYCODE,
			PB.ACCOUNTNO PARTNERBANK_ACCOUNTNO
			FROM FINADVANCEPAYMENTS FA
			JOIN
			(SELECT FINANCEMAIN_TEMP.CUSTID,
			FINANCEMAIN_TEMP.FINREFERENCE,
			FINANCEMAIN_TEMP.FINTYPE,
			FINANCEMAIN_TEMP.FINISACTIVE
			FROM FINANCEMAIN_TEMP
			UNION ALL
			SELECT T2.CUSTID,
			T2.FINREFERENCE,
			T2.FINTYPE,
			T2.FINISACTIVE
			FROM FINANCEMAIN T2
			WHERE NOT (EXISTS
			( SELECT 1 FROM
			FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE
			))
			) FM
			ON FM.FINREFERENCE = FA.FINREFERENCE
			JOIN CUSTOMERS
			CU
			ON CU.CUSTID = FM.CUSTID
			JOIN RMTCURRENCIES CCY
			ON CCY.CCYCODE
			= FA.DISBCCY
			JOIN PARTNERBANKS PB
			ON PB.PARTNERBANKID =
			FA.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE
			ON CE.CUSTID =
			CU.CUSTID
			AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN
			CUSTOMERADDRESSES CA
			ON CA.CUSTID = CE.CUSTID
			AND CA.CUSTADDRPRIORITY =
			5
			LEFT JOIN RMTPROVINCEVSCITY CC
			ON CC.PCCITY =
			CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS
			ON CS.CPPROVINCE =
			CC.PCPROVINCE
			LEFT JOIN BANKBRANCHES BB
			ON
			BB.BANKBRANCHID = FA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON BD.BANKCODE =
			BB.BANKCODE
			LEFT JOIN
			(SELECT
			PB_1.PARTNERBANKID,
			PBD_1.BANKNAME,
			PBB.BRANCHDESC,
			PBBRC.PCCITYNAME,
			PBBRS.CPPROVINCENAME
			FROM PARTNERBANKS PB_1
			JOIN
			BANKBRANCHES PBB
			ON PBB.BRANCHCODE = PB_1.BANKBRANCHCODE
			JOIN BMTBANKDETAIL PBD_1
			ON PBD_1.BANKCODE = PBB.BANKCODE
			LEFT
			JOIN RMTPROVINCEVSCITY PBBRC
			ON PBBRC.PCCITY = PBB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE PBBRS
			ON PBBRS.CPPROVINCE =
			PBBRC.PCPROVINCE
			) PBD ON PBD.PARTNERBANKID = PB.PARTNERBANKID
			LEFT JOIN BENEFICIARY BR
			ON BR.BANKBRANCHID =
			FA.BANKBRANCHID
			AND
			BR.ACCNUMBER = FA.BENEFICIARYACCNO
			AND BR.CUSTID = FM.CUSTID
			LEFT JOIN CUSTOMERS BC
			ON BC.CUSTID =
			BR.CUSTID
			LEFT JOIN
			CUSTOMEREMAILS BCE
			ON BCE.CUSTID = CU.CUSTID
			AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES
			BRCA
			ON
			BRCA.CUSTID = BR.CUSTID
			AND BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON BRC.PCCITY =
			BRCA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS
			ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN RMTFINANCETYPES RFT
			ON
			FM.FINTYPE =
			RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD
			ON RFT.FINDIVISION = SMD.DIVISIONCODE
			WHERE FA.STATUS =
			'APPROVED'
			AND NOT
			(FA.PAYMENTID IN
			( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS
			))
			AND NOT
			(FA.PAYMENTID IN
			( SELECT FINADVANCEPAYMENTS_TEMP.PAYMENTID FROM FINADVANCEPAYMENTS_TEMP
			))
			UNION ALL
			SELECT
			PI.PAYMENTINSTRUCTIONID PAYMENTID,
			PH.FINREFERENCE,
			PH.PAYMENTTYPE CHANNEL,
			0 PROVIDERID,
			CASE
			WHEN PI.PAYMENTTYPE =
			'NEFT'
			THEN 'N'
			WHEN PI.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN PI.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN PI.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE PI.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			PI.PAYMENTAMOUNT / CCY.CCYMINORCCYUNITS AMTTOBERELEASED,
			PI.POSTDATE
			DISBDATE,
			PI.POSTDATE LLDATE,
			PI.PAYABLELOC,
			PI.PRINTINGLOC,
			CU.CUSTCIF,
			CU.CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			CE.CUSTEMAIL
			CUSTOMER_EMAIL,
			CS.CPPROVINCENAME CUSTOMER_STATE,
			CC.PCCITYNAME CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			''
			CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			PI.ACCOUNTNO BENEFICIARYACCNO,
			CASE
			WHEN PI.PAYMENTTYPE = 'CHEQUE'
			OR PI.PAYMENTTYPE = 'DD'
			THEN
			PI.FAVOURNAME
			ELSE PI.ACCTHOLDERNAME
			END BENEFICIARYNAME,
			PI.PHONECOUNTRYCODE + PI.PHONENUMBER BENEFICIARY_MOBILE,
			BCE.CUSTEMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME BENFICIARY_CITY,
			''
			BENFICIARY_ADDRESS1,
			'' BENFICIARY_ADDRESS2,
			'' BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			'' BENFICIARY_ADDRESS5,
			''
			PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			'' PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			''
			PAYMENT_DETAIL7,
			PI.STATUS,
			PI.REMARKS,
			PI.PAYMENTTYPE,
			FM.FINTYPE,
			PB.PARTNERBANKID PARTNERBANK_ID,
			PB.PARTNERBANKCODE
			PARTNERBANK_CODE,
			PI.POSTDATE INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			FM.FINISACTIVE,
			SMD.ENTITYCODE,
			PB.ACCOUNTNO
			PARTNERBANK_ACCOUNTNO
			FROM PAYMENTINSTRUCTIONS PI
			JOIN PAYMENTHEADER PH
			ON PH.PAYMENTID = PI.PAYMENTID
			JOIN
			(SELECT
			FINANCEMAIN.CUSTID,
			FINANCEMAIN.FINREFERENCE,
			FINANCEMAIN.FINTYPE,
			FINANCEMAIN.FINISACTIVE
			FROM FINANCEMAIN
			UNION ALL
			SELECT T2.CUSTID,
			T2.FINREFERENCE,
			T2.FINTYPE,
			T2.FINISACTIVE
			FROM FINANCEMAIN_TEMP T2
			WHERE NOT (EXISTS
			( SELECT 1 FROM
			FINANCEMAIN_TEMP T3 WHERE T3.FINREFERENCE = T2.FINREFERENCE
			))
			) FM
			ON FM.FINREFERENCE = PH.FINREFERENCE
			JOIN CUSTOMERS
			CU
			ON CU.CUSTID = FM.CUSTID
			JOIN RMTCURRENCIES CCY
			ON CCY.CCYCODE
			= PI.PAYMENTCCY
			JOIN PARTNERBANKS PB
			ON PB.PARTNERBANKID
			= PI.PARTNERBANKID
			LEFT JOIN CUSTOMEREMAILS CE
			ON CE.CUSTID =
			CU.CUSTID
			AND CE.CUSTEMAILPRIORITY = 5
			LEFT JOIN
			CUSTOMERADDRESSES CA
			ON CA.CUSTID = CE.CUSTID
			AND CA.CUSTADDRPRIORITY =
			5
			LEFT JOIN RMTPROVINCEVSCITY CC
			ON CC.PCCITY =
			CA.CUSTADDRCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE CS
			ON CS.CPPROVINCE =
			CC.PCPROVINCE
			LEFT JOIN CUSTOMERPHONENUMBERS CM
			ON
			CM.PHONECUSTID = CU.CUSTID
			AND CM.PHONETYPECODE = 'MOBILE1'
			AND
			CM.PHONETYPEPRIORITY = 5
			LEFT JOIN BANKBRANCHES BB
			ON
			BB.BANKBRANCHID = PI.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON
			BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY
			BBRC
			ON BBRC.PCCITY = BB.CITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BBRS
			ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
			LEFT JOIN
			BENEFICIARY BR
			ON BR.BANKBRANCHID = PI.BANKBRANCHID
			AND BR.ACCNUMBER =
			PI.ACCOUNTNO
			AND BR.CUSTID = FM.CUSTID
			LEFT JOIN
			CUSTOMERS BC
			ON BC.CUSTID = BR.CUSTID
			LEFT JOIN CUSTOMEREMAILS BCE
			ON
			BCE.CUSTID = CU.CUSTID
			AND BCE.CUSTEMAILPRIORITY = 5
			LEFT JOIN CUSTOMERADDRESSES BRCA
			ON BRCA.CUSTID = BR.CUSTID
			AND
			BRCA.CUSTADDRPRIORITY = 5
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON BRC.PCCITY = BRCA.CUSTADDRCITY
			LEFT JOIN
			RMTCOUNTRYVSPROVINCE BRS
			ON BRS.CPPROVINCE = BRC.PCPROVINCE
			LEFT JOIN
			RMTFINANCETYPES RFT
			ON FM.FINTYPE = RFT.FINTYPE
			LEFT JOIN SMTDIVISIONDETAIL SMD
			ON RFT.FINDIVISION = SMD.DIVISIONCODE
			WHERE PI.STATUS = 'APPROVED'
			AND NOT
			(PI.PAYMENTINSTRUCTIONID IN
			( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM
			DISBURSEMENT_REQUESTS
			))
			UNION ALL
			SELECT PI.ID PAYMENTID,
			'' FINREFERENCE,
			'I' CHANNEL,
			PI.PROVIDERID,
			CASE
			WHEN
			PI.PAYMENTTYPE = 'NEFT'
			THEN 'N'
			WHEN PI.PAYMENTTYPE = 'RTGS'
			THEN 'R'
			WHEN PI.PAYMENTTYPE = 'DD'
			THEN 'D'
			WHEN
			PI.PAYMENTTYPE = 'CHEQUE'
			THEN 'C'
			ELSE PI.PAYMENTTYPE
			END DISBURSEMENT_TYPE,
			PI.PAYMENTAMOUNT / CCY.CCYMINORCCYUNITS
			AMTTOBERELEASED,
			PI.PAYMENTDATE DISBDATE,
			PI.PAYMENTDATE LLDATE,
			'' PAYABLELOC,
			'' PRINTINGLOC,
			'' CUSTCIF,
			''
			CUSTSHRTNAME,
			'' CUSTOMER_MOBILE,
			'' CUSTOMER_EMAIL,
			'' CUSTOMER_STATE,
			'' CUSTOMER_CITY,
			'' CUSTOMER_ADDRESS1,
			''
			CUSTOMER_ADDRESS2,
			'' CUSTOMER_ADDRESS3,
			'' CUSTOMER_ADDRESS4,
			'' CUSTOMER_ADDRESS5,
			BD.BANKNAME,
			BB.BRANCHCODE,
			BB.BRANCHDESC,
			BBRS.CPPROVINCENAME BENFICIARY_BRANCH_STATE,
			BBRC.PCCITYNAME BENFICIARY_BRANCH_CITY,
			BB.MICR MICR_CODE,
			BB.IFSC IFSC_CODE,
			VPA.ACCOUNTNUMBER BENEFICIARYACCNO,
			AVD.DEALERNAME BENEFICIARYNAME,
			AVD.DEALERTELEPHONE
			BENEFICIARY_MOBILE,
			AVD.EMAIL BENFICIRY_EMAIL,
			BRS.CPPROVINCENAME BENFICIARY_STATE,
			BRC.PCCITYNAME BENFICIARY_CITY,
			AVD.DEALERADDRESS1 BENFICIARY_ADDRESS1,
			AVD.DEALERADDRESS2 BENFICIARY_ADDRESS2,
			AVD.DEALERADDRESS3 BENFICIARY_ADDRESS3,
			'' BENFICIARY_ADDRESS4,
			'' BENFICIARY_ADDRESS5,
			'' PAYMENT_DETAIL1,
			'' PAYMENT_DETAIL2,
			'' PAYMENT_DETAIL3,
			''
			PAYMENT_DETAIL4,
			'' PAYMENT_DETAIL5,
			'' PAYMENT_DETAIL6,
			'' PAYMENT_DETAIL7,
			PI.STATUS,
			PI.REMARKS,
			PI.PAYMENTTYPE,
			''
			FINTYPE,
			PB.PARTNERBANKID PARTNERBANK_ID,
			PB.PARTNERBANKCODE PARTNERBANK_CODE,
			PI.PAYMENTDATE INPUTDATE,
			PB.ALWFILEDOWNLOAD,
			PB.FILENAME,
			1 FINISACTIVE,
			PI.ENTITYCODE,
			PB.ACCOUNTNO PARTNERBANK_ACCOUNT
			FROM
			INSURANCEPAYMENTINSTRUCTIONS PI
			JOIN RMTCURRENCIES CCY
			ON CCY.CCYCODE = PI.PAYMENTCCY
			JOIN
			PARTNERBANKS PB
			ON
			PB.PARTNERBANKID = PI.PARTNERBANKID
			JOIN VASPROVIDERACCDETAIL VPA
			ON VPA.PROVIDERID = PI.PROVIDERID
			JOIN
			AMTVEHICLEDEALER AVD
			ON AVD.DEALERID = VPA.PROVIDERID
			LEFT JOIN BANKBRANCHES BB
			ON BB.BANKBRANCHID =
			VPA.BANKBRANCHID
			LEFT JOIN BMTBANKDETAIL BD
			ON BD.BANKCODE = BB.BANKCODE
			LEFT JOIN RMTPROVINCEVSCITY BBRC
			ON BBRC.PCCITY
			= BB.CITY
			LEFT
			JOIN RMTCOUNTRYVSPROVINCE BBRS
			ON BBRS.CPPROVINCE = BBRC.PCPROVINCE
			LEFT JOIN RMTPROVINCEVSCITY BRC
			ON
			BRC.PCCITY =
			AVD.DEALERCITY
			LEFT JOIN RMTCOUNTRYVSPROVINCE BRS
			ON BRS.CPPROVINCE = BRC.PCPROVINCE
			WHERE PI.STATUS =
			'APPROVED'
			AND
			PI.PAYMENTAMOUNT &gt; 0
			AND NOT (PI.ID IN
			( SELECT DISBURSEMENT_REQUESTS.DISBURSEMENT_ID FROM DISBURSEMENT_REQUESTS
			))
		</createView>
	</changeSet>
  
  <changeSet id="431" author="naga.g">
		<sql>
				<![CDATA[
				  	     DELETE from rbfielddetails	where rbfldname='Cust_Max_CrifScore' and rbmodule='ELGRULE';
                         DELETE from rbfielddetails	where rbfldname='Cust_Min_CrifScore' and rbmodule='ELGRULE';

                         INSERT INTO rbfielddetails(rbmodule, rbevent, rbfldname, rbflddesc, rbfldtype, rbfldlen, rbforcalflds, rbforbldflds, rbfldtablename, rbstflds, modulecode)VALUES ('ELGRULE','ELGRULE','Cust_Max_CrifScore','Max crif Score','bigint','9',1,1,null,'static,global',null);		
                         INSERT INTO rbfielddetails(rbmodule, rbevent, rbfldname, rbflddesc, rbfldtype, rbfldlen, rbforcalflds, rbforbldflds, rbfldtablename, rbstflds, modulecode)VALUES ('ELGRULE','ELGRULE','Cust_Min_CrifScore','Min crif Score','bigint','9',1,1,null,'static,global',null);
				  	
				]]>
		</sql>
	</changeSet>
	
	<changeSet id="432" author="vijaya.a">
		<addColumn tableName="FINRECEIPTHEADER">
			<column name="EARLYSETTLEMENTREASON" datatype = "bigint" defaultValue="0"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="433" author="vijaya.a">
		<addColumn tableName="FINRECEIPTHEADER_TEMP">
			<column name="EARLYSETTLEMENTREASON" datatype = "bigint" defaultValue="0"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="434" author="vijaya.a">
		<createView viewName="FINRECEIPTHEADER_VIEW" replaceIfExists="true">
			SELECT 
				T1.RECEIPTID,
			    T1.RECEIPTDATE,
			    T1.RECEIPTTYPE,
			    T1.RECAGAINST,
			    T1.REFERENCE,
			    T1.RECEIPTPURPOSE,
			    T1.RECEIPTMODE,
			    T1.EXCESSADJUSTTO,
			    T1.ALLOCATIONTYPE,
			    T1.RECEIPTAMOUNT,
			    T1.EFFECTSCHDMETHOD,
			    T1.EXTREFERENCE,
			    T1.MODULE,
			    T1.RECEIPTMODESTATUS,
			    T1.SUBRECEIPTMODE,
			    T1.RECEIPTCHANNEL,
			    T1.RECEIVEDFROM,
			    T1.PANNUMBER,
			    T1.COLLECTIONAGENTID,
			    T9.CODE COLLECTIONAGENTCODE,
			    T9.DESCRIPTION COLLECTIONAGENTDESC,
			    T1.VERSION,
			    T1.LASTMNTBY,
			    T1.LASTMNTON,
			    T1.RECORDSTATUS,
			    T1.ROLECODE,
			    T1.NEXTROLECODE,
			    T1.TASKID,
			    T1.NEXTTASKID,
			    T1.RECORDTYPE,
			    T1.WORKFLOWID,
			    T2.FINTYPE,
			    T2.FINBRANCH,
			    T3.CUSTCIF,
			    T3.CUSTSHRTNAME,
			    T2.FINCCY,
			    T1.REALIZATIONDATE,
			    T1.CANCELREASON,
			    T4.FINTYPEDESC,
			    T6.BRANCHDESC FINBRANCHDESC,
			    T5.CCYDESC FINCCYDESC,
			    T7.REJECTDESC CANCELREASONDESC,
			    T2.FINISACTIVE,
			    T1.WAVIEDAMT,
			    T1.TOTFEEAMOUNT,
			    T1.BOUNCEDATE,
			    T1.REMARKS,
			    T1.RCDMAINTAINSTS,
			    T1.GDRAVAILABLE,
			    T1.RELEASETYPE,
			    T1.THIRDPARTYNAME,
			    T1.THIRDPARTYMOBILENUM,
			    T1.DEPOSITPROCESS,
			    T1.DEPOSITBRANCH,
			    T1.LPIAMOUNT,
			    T1.LPPAMOUNT,
			    T1.GSTLPIAMOUNT,
			    T1.GSTLPPAMOUNT,
			        CASE
			            WHEN T8.PAYMENTTYPE = ANY (ARRAY['CHEQUE', 'DD']) THEN T8.FAVOURNUMBER
			            ELSE T8.TRANSACTIONREF
			        END AS TRANSACTIONREF,
			    T2.PRODUCTCATEGORY,
			    T2.PROMOTIONCODE,
			    T2.NEXTREPAYRVWDATE,
			    T1.CASHIERBRANCH,
			    T1.INITIATEDATE,
			    T1.INSTRUCTIONUID,
			    T1.FINDIVISION,
			    T1.POSTBRANCH,
			    T10.DIVISIONCODEDESC FINDIVISIONDESC,
			    T11.BRANCHDESC POSTBRANCHDESC,
			    T12.BRANCHDESC CASHIERBRANCHDESC,
			    T10.ENTITYCODE,
			    T1.ACTFINRECEIPT,
				T1.EARLYSETTLEMENTREASON
			   FROM PLF.FINRECEIPTHEADER_TEMP T1
			     JOIN PLF.FINANCEMAIN T2 ON T1.REFERENCE = T2.FINREFERENCE
			     JOIN PLF.CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
			     JOIN PLF.RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
			     JOIN PLF.RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
			     JOIN PLF.RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
			     LEFT JOIN PLF.BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
			     LEFT JOIN PLF.FINRECEIPTDETAIL T8 ON T1.RECEIPTID = T8.RECEIPTID AND T1.RECEIPTMODE = T8.PAYMENTTYPE
			     LEFT JOIN PLF.COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
			     LEFT JOIN PLF.SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
			     LEFT JOIN PLF.RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
			     LEFT JOIN PLF.RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
			UNION ALL
			 SELECT T1.RECEIPTID,
			    T1.RECEIPTDATE,
			    T1.RECEIPTTYPE,
			    T1.RECAGAINST,
			    T1.REFERENCE,
			    T1.RECEIPTPURPOSE,
			    T1.RECEIPTMODE,
			    T1.EXCESSADJUSTTO,
			    T1.ALLOCATIONTYPE,
			    T1.RECEIPTAMOUNT,
			    T1.EFFECTSCHDMETHOD,
			    T1.EXTREFERENCE,
			    T1.MODULE,
			    T1.RECEIPTMODESTATUS,
			    T1.SUBRECEIPTMODE,
			    T1.RECEIPTCHANNEL,
			    T1.RECEIVEDFROM,
			    T1.PANNUMBER,
			    T1.COLLECTIONAGENTID,
			    T9.CODE COLLECTIONAGENTCODE,
			    T9.DESCRIPTION COLLECTIONAGENTDESC,
			    T1.VERSION,
			    T1.LASTMNTBY,
			    T1.LASTMNTON,
			    T1.RECORDSTATUS,
			    T1.ROLECODE,
			    T1.NEXTROLECODE,
			    T1.TASKID,
			    T1.NEXTTASKID,
			    T1.RECORDTYPE,
			    T1.WORKFLOWID,
			    T2.FINTYPE,
			    T2.FINBRANCH,
			    T3.CUSTCIF,
			    T3.CUSTSHRTNAME,
			    T2.FINCCY,
			    T1.REALIZATIONDATE,
			    T1.CANCELREASON,
			    T4.FINTYPEDESC,
			    T6.BRANCHDESC FINBRANCHDESC,
			    T5.CCYDESC FINCCYDESC,
			    T7.REJECTDESC CANCELREASONDESC,
			    T2.FINISACTIVE,
			    T1.WAVIEDAMT,
			    T1.TOTFEEAMOUNT,
			    T1.BOUNCEDATE,
			    T1.REMARKS,
			    T1.RCDMAINTAINSTS,
			    T1.GDRAVAILABLE,
			    T1.RELEASETYPE,
			    T1.THIRDPARTYNAME,
			    T1.THIRDPARTYMOBILENUM,
			    T1.DEPOSITPROCESS,
			    T1.DEPOSITBRANCH,
			    T1.LPIAMOUNT,
			    T1.LPPAMOUNT,
			    T1.GSTLPIAMOUNT,
			    T1.GSTLPPAMOUNT,
			        CASE
			            WHEN T8.PAYMENTTYPE = ANY (ARRAY['CHEQUE', 'DD']) THEN T8.FAVOURNUMBER
			            ELSE T8.TRANSACTIONREF
			        END AS TRANSACTIONREF,
			    T2.PRODUCTCATEGORY,
			    T2.PROMOTIONCODE,
			    T2.NEXTREPAYRVWDATE,
			    T1.CASHIERBRANCH,
			    T1.INITIATEDATE,
			    T1.INSTRUCTIONUID,
			    T1.FINDIVISION,
			    T1.POSTBRANCH,
			    T10.DIVISIONCODEDESC FINDIVISIONDESC,
			    T11.BRANCHDESC POSTBRANCHDESC,
			    T12.BRANCHDESC CASHIERBRANCHDESC,
			    T10.ENTITYCODE,
			    T1.ACTFINRECEIPT,
				T1.EARLYSETTLEMENTREASON
			   FROM PLF.FINRECEIPTHEADER T1
			     JOIN PLF.FINANCEMAIN T2 ON T1.REFERENCE = T2.FINREFERENCE
			     JOIN PLF.CUSTOMERS T3 ON T2.CUSTID = T3.CUSTID
			     JOIN PLF.RMTFINANCETYPES T4 ON T2.FINTYPE = T4.FINTYPE
			     JOIN PLF.RMTCURRENCIES T5 ON T2.FINCCY = T5.CCYCODE
			     JOIN PLF.RMTBRANCHES T6 ON T2.FINBRANCH = T6.BRANCHCODE
			     LEFT JOIN PLF.BMTREJECTCODES T7 ON T1.CANCELREASON = T7.REJECTCODE
			     LEFT JOIN PLF.FINRECEIPTDETAIL T8 ON T1.RECEIPTID = T8.RECEIPTID AND T1.RECEIPTMODE = T8.PAYMENTTYPE
			     LEFT JOIN PLF.COLLECTIONAGENCIES T9 ON T1.COLLECTIONAGENTID = T9.ID
			     LEFT JOIN PLF.SMTDIVISIONDETAIL T10 ON T1.FINDIVISION = T10.DIVISIONCODE
			     LEFT JOIN PLF.RMTBRANCHES T11 ON T1.POSTBRANCH = T11.BRANCHCODE
			     LEFT JOIN PLF.RMTBRANCHES T12 ON T1.CASHIERBRANCH = T12.BRANCHCODE
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM PLF.FINRECEIPTHEADER_TEMP
			          WHERE FINRECEIPTHEADER_TEMP.RECEIPTID = T1.RECEIPTID))
		</createView>
	</changeSet>
	
	<changeSet id="435" author="vijaya.a">
		<sql>
			<![CDATA[
					DELETE FROM ReasonTypes where code='FC';
					INSERT INTO ReasonTypes (id, code, description,  Version , LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId,NextTaskId, RecordType, WorkflowId) values( (SELECT (seqno+1) FROM SEQREASONTYPES), 'FC', 'ForeClosure',  1 , 1000, current_timestamp,'Approved', '', '', '', '','', 0);
					UPDATE SEQREASONTYPES set SeqNo = (SELECT max(Id)+1 FROM REASONTYPES); 

			]]>
		</sql>
	</changeSet>
		<changeSet id="436" author="Satish.N">
		<addColumn tableName="Verification_tv">
			<column name="Valasperpe" type="decimal(18,0)" />
			<column name="Finalvalamt" type="decimal(18,0)" />
			<column name="Decisiononval" type="varchar(10)" />
			<column name="Finalvalremarks" type="varchar(500)" />
			<column name="DocumentName" type="VARCHAR(200) " />
			<column name="Documentref" type="bigint"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="437" author="Satish.N">
		<addColumn tableName="Verification_tv_temp">
			<column name="Valasperpe" type="decimal(18,2)" />
			<column name="Finalvalamt" type="decimal(18,2)" />
			<column name="Decisiononval" type="varchar(10)" />
			<column name="Finalvalremarks" type="varchar(500)" />
			<column name="DocumentName" type="VARCHAR(200) " />
			<column name="Documentref" type="bigint" />
		</addColumn>
	</changeSet>
	
	<changeSet id="438" author="Satish.N">
		<addColumn tableName="verifications">
			<column name="Verificationcategory" type="bigint"></column>
		</addColumn>
	</changeSet>
	
	<changeSet id="439" author="Satish.N">
		<createView viewName="verification_tv_view" replaceIfExists="true">
			 
  				SELECT 
  					tv.verificationid,  
  					tv.agentcode,  
  					tv.agentname, 
  					tv.type, 
  					tv.verifieddate, 
  					tv.status, 
  					cs.collateraltype, 
  					cs.collateralccy, 
  					cs.collateralloc, 
  					tv.reason, 
  					tv.valuationamount,
			    	r1.code AS reasoncode, 
			    	r1.description AS reasondesc,  
			    	tv.summaryremarks, 
			    	tv.sourceformname, 
			    	tv.verificationformname, 
			    	tv.documentname, 
			    	tv.documentref,
					tv.version, 
					tv.lastmntby,  
					tv.lastmnton,
					tv.recordstatus,  
					tv.rolecode, 
					tv.nextrolecode, 
					tv.taskid, 
					tv.nexttaskid, 
					tv.recordtype,
					tv.workflowid,
			    	tv.observationremarks, 
			    	c.custcif AS cif, 
			    	v.keyreference, 
			    	v.createdon, 
			    	v.agency, 
			    	a.dealername AS agencyname,
			    	a.dealercity as agencycity, 
			    	v.custid, 
			    	c.custshrtname AS custname,
			    	v.verificationcategory,
			    	cs.collateralref, 
			    	cpnh.phonenumber AS contactnumber1,  
			    	cpnl.phonenumber AS contactnumber2, 
			    	tv.valAsPerPE , 
			    	tv.finalValAmt, 
			    	tv.decisionOnVal, 
			    	tv.finalValRemarks,
			    	fm.productcategory
			  		  FROM verification_tv_temp tv
			   		 JOIN verifications v ON v.id = tv.verificationid
			    		JOIN   (Select collateraltype, collateralccy, collateralloc, collateralref from collateralsetup_temp union
						Select collateraltype, collateralccy, collateralloc, collateralref from collateralsetup csp
					WHERE NOT (EXISTS ( SELECT 1  FROM collateralsetup_temp  
					WHERE collateralsetup_temp.collateralref = csp.collateralref)))  
				
					cs ON cs.collateralref = v.referencefor 
			    	JOIN collateralstructure cst ON cst.collateraltype = cs.collateraltype
			    	LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
			   	 	LEFT JOIN customers c ON c.custid = v.custid
			    	LEFT JOIN customerphonenumbers cpnh ON cpnh.phonecustid = c.custid AND cpnh.phonetypepriority = 5
			    	LEFT JOIN customerphonenumbers cpnl ON cpnl.phonecustid = c.custid AND cpnl.phonetypepriority = 4
			    	LEFT JOIN reasons r1 ON r1.id = tv.reason
		        	 INNER JOIN 
				    	(Select finreference, productCategory from financemain_temp union
		        	Select finreference, productCategory from financemain fm
		       	 	WHERE NOT (EXISTS ( SELECT 1  FROM financemain_temp  
		        	WHERE financemain_temp.finreference = fm.finreference))) 
			 		 fm ON fm.finreference  = v.keyreference
					UNION ALL
				 	SELECT 
						tv.verificationid, 
						tv.agentcode,  
					 	tv.agentname, 
					 	tv.type, 
					 	tv.verifieddate, 
					 	tv.status, 
					 	cs.collateraltype, 
					 	cs.collateralccy,
					 	cs.collateralloc,  
					 	tv.reason, 
					 	tv.valuationamount,
				    	r1.code AS reasoncode, 
				    	r1.description AS reasondesc,  
				    	tv.summaryremarks, 
				    	tv.sourceformname,  
				    	tv.verificationformname,
				    	tv.documentname, 
				    	tv.documentref,
				    	tv.version,  
				    	tv.lastmntby,
				    	tv.lastmnton,  
				    	tv.recordstatus, 
				    	tv.rolecode,
				    	tv.nextrolecode,  
				    	tv.taskid,  
				    	tv.nexttaskid,  
				    	tv.recordtype, 
				    	tv.workflowid,
				    	tv.observationremarks, 
				    	c.custcif AS cif, 
				    	v.keyreference, 
				    	v.createdon, 
				    	v.agency,  
				    	a.dealername AS agencyname,
				    	a.dealercity as agencycity, 
				    	v.custid, 
				    	c.custshrtname AS custname,
				    	v.verificationcategory,
				   		 cs.collateralref,  
				   		 cpnh.phonenumber AS contactnumber1, 
				   		 cpnl.phonenumber AS contactnumber2, 
				   		 tv.valAsPerPE , 
				   		 tv.finalValAmt, 
				   		 tv.decisionOnVal, 
				   		 tv.finalValRemarks,
				   		 fm.productcategory
			    FROM verification_tv tv
			    JOIN verifications v ON v.id = tv.verificationid
				JOIN  (Select collateraltype, collateralccy, collateralloc, collateralref from collateralsetup_temp union
				Select collateraltype, collateralccy, collateralloc, collateralref from collateralsetup csp
				WHERE NOT (EXISTS ( SELECT 1  FROM collateralsetup_temp  
				WHERE collateralsetup_temp.collateralref = csp.collateralref)))  
				
				 cs ON cs.collateralref  = v.referencefor 
			     JOIN collateralstructure cst ON cst.collateraltype = cs.collateraltype
			     LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
			     LEFT JOIN customers c ON c.custid = v.custid
			     LEFT JOIN customerphonenumbers cpnh ON cpnh.phonecustid = c.custid AND cpnh.phonetypepriority = 5
			     LEFT JOIN customerphonenumbers cpnl ON cpnl.phonecustid = c.custid AND cpnl.phonetypepriority = 4
			     LEFT JOIN reasons r1 ON r1.id = tv.reason
              INNER JOIN 
	          (Select finreference, productCategory from financemain_temp union
	          Select finreference, productCategory from financemain fm
	          WHERE NOT (EXISTS ( SELECT 1  FROM financemain_temp  
	          WHERE financemain_temp.finreference = fm.finreference))) 
	          fm ON fm.finreference  = v.keyreference
			  WHERE NOT (EXISTS ( SELECT 1
			           FROM verification_tv_temp
			          WHERE verification_tv_temp.verificationid = tv.verificationid));
		</createView>
	</changeSet>
	<changeSet id="440" author="Satish.N">
		<createView viewName="VERIFICATION_LV_VIEW" replaceIfExists="true">
  			SELECT 
  				t.verificationid,
			    t.verificationformname,
			    t.agentcode,
			    t.agentname,
			    t.verificationdate,
			    t.status,
			    t.reason,
			    t.reasoncode,
			    t.reasondesc,
			    t.version,
			    t.lastmntby,
			    t.lastmnton,
			    t.recordstatus,
			    t.rolecode,
			    t.nextrolecode,
			    t.taskid,
			    t.nexttaskid,
			    t.recordtype,
			    t.workflowid,
			    t.remarks,
			    t.cif,
			    t.keyreference,
			    t.referencefor,
			    t.createdon,
			    t.agency,
			    t.custid,
			    t.custcif,
			    t.custname,
			    t.collateraltype,
			    t.agencyname,
				t.verificationCategory
			   FROM ( SELECT 
						lv.verificationid,
			            lv.verificationformname,
			            lv.agentcode,
			            lv.agentname,
			            lv.verificationdate,
			            lv.status,
			            lv.reason,
			            r1.code AS reasoncode,
			            r1.description AS reasondesc,
			            lv.version,
			            lv.lastmntby,
			            lv.lastmnton,
			            lv.recordstatus,
			            lv.rolecode,
			            lv.nextrolecode,
			            lv.taskid,
			            lv.nexttaskid,
			            lv.recordtype,
			            lv.workflowid,
			            lv.remarks,
			            c.custcif AS cif,
			            v.keyreference,
			            v.referencefor,
			            v.createdon,
			            v.agency,
			            c.custid,
			            c.custcif,
			            c.custshrtname AS custname,
			            cs.collateraltype,
			            a.dealername AS agencyname,
						v.verificationCategory
			           	FROM verification_lv_temp lv
			             JOIN verifications v ON v.id = lv.verificationid
			             JOIN customers c ON c.custcif = v.reference
			             JOIN ( SELECT collateralsetup.collateraltype,
			                    collateralsetup.collateralref
			                   FROM collateralsetup
			                UNION
			                 SELECT collateralsetup_temp.collateraltype,
			                    collateralsetup_temp.collateralref
			                   FROM collateralsetup_temp) cs ON cs.collateralref = v.referencefor
			             LEFT JOIN reasons r1 ON r1.id = lv.reason
			             LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
			        UNION ALL
			         SELECT 
			         	lv.verificationid,
			            lv.verificationformname,
			            lv.agentcode,
			            lv.agentname,
			            lv.verificationdate,
			            lv.status,
			            lv.reason,
			            r1.code AS reasoncode,
			            r1.description AS reasondesc,
			            lv.version,
			            lv.lastmntby,
			            lv.lastmnton,
			            lv.recordstatus,
			            lv.rolecode,
			            lv.nextrolecode,
			            lv.taskid,
			            lv.nexttaskid,
			            lv.recordtype,
			            lv.workflowid,
			            lv.remarks,
			            c.custcif AS cif,
			            v.keyreference,
			            v.referencefor,
			            v.createdon,
			            v.agency,
			            c.custid,
			            c.custcif,
			            c.custshrtname AS custname,
			            cs.collateraltype,
			            a.dealername AS agencyname,
						v.verificationCategory
			           FROM verification_lv lv
			             JOIN verifications v ON v.id = lv.verificationid
			             JOIN customers c ON c.custcif=  v.reference
			             JOIN ( SELECT collateralsetup.collateraltype,
			                    collateralsetup.collateralref
			                   FROM collateralsetup
			                UNION
			                 SELECT collateralsetup_temp.collateraltype,
			                    collateralsetup_temp.collateralref
			                   FROM collateralsetup_temp) cs ON cs.collateralref = v.referencefor
			             LEFT JOIN reasons r1 ON r1.id = lv.reason
			             LEFT JOIN amtvehicledealer a ON a.dealerid = v.agency
			             WHERE NOT (EXISTS ( SELECT 1
			                   FROM verification_lv_temp
			                  WHERE verification_lv_temp.verificationid = lv.verificationid))) t;
		</createView>
	</changeSet>
	<changeSet id="441" author="Satish.N">
		<createView viewName="VERIFICATION_RCU_VIEW" replaceIfExists="true">
		  		select  
					t.verificationid,
				    t.verificationformname,
				    t.agentcode,
				    t.agentname,
				    t.verificationdate,
				    t.status,
				    t.reason,
				    t.reasoncode,
				    t.reasondesc,
				    t.version,
				    t.lastmntby,
				    t.lastmnton,
				    t.recordstatus,
				    t.rolecode,
				    t.nextrolecode,
				    t.taskid,
				    t.nexttaskid,
				    t.recordtype,
				    t.workflowid,
				    t.remarks,
				    t.cif,
				    t.keyreference,
				    t.referencefor,
				    t.createdon,
				    t.agency,
				    t.custid,
				    t.custcif,
				    t.custname,
				    t.agencyname
					from (select  rcu.verificationId,  
						rcu.verificationFormName,			
						rcu.agentcode,  
						rcu.agentname, 
						rcu.verificationDate, 
						rcu.status,
						rcu.reason, 
						r1.code as reasoncode, 
						r1.description as reasondesc, 
						rcu.version, 
						rcu.lastmntby, 
						rcu.lastmnton, 
						rcu.recordstatus, 
						rcu.rolecode, 
						rcu.nextrolecode,
						rcu.taskid, 
						rcu.nexttaskid, 
						rcu.recordtype, 
						rcu.workflowid, 
						rcu.Remarks,  
						c.custcif as cif,
						v.keyreference, 
						v.referenceFor, 
						v.createdon, 
						v.agency,
						c.custId, 
						c.custcif, 
						c.custshrtname as custname,
						a.dealerName agencyName
					from verification_rcu_temp rcu
					inner join verifications v on v.id = rcu.verificationId
					inner join customers c on c.custId = v.custId
					left join reasons_aview r1 on r1.id = rcu.reason
					left join amtvehicledealer a on a.dealerid = v.agency
					union all 
					 select 
						rcu.verificationId,  
						rcu.verificationFormName,			
						rcu.agentcode,  
						rcu.agentname, 
						rcu.verificationDate, 
						rcu.status,
						rcu.reason, 
						r1.code as reasoncode, 
						r1.description as reasondesc, 
						rcu.version, 
						rcu.lastmntby, 
						rcu.lastmnton, 
						rcu.recordstatus, 
						rcu.rolecode, 
						rcu.nextrolecode,
						rcu.taskid, 
						rcu.nexttaskid, 
						rcu.recordtype, 
						rcu.workflowid, 
						rcu.Remarks,  
						c.custcif as cif,
						v.keyreference, 
						v.referenceFor, 
						v.createdon, 
						v.agency,
						c.custId, 
						c.custcif, 
						c.custshrtname as custname,
						a.dealerName agencyName
					from verification_rcu rcu
					inner join verifications v on v.id = rcu.verificationId
					inner join customers c on c.custId = v.custId
					left join reasons_aview r1 on r1.id = rcu.reason
					left join amtvehicledealer a on a.dealerid = v.agency
					 where not (exists ( select 1 from verification_rcu_temp 
					where verification_rcu_temp.verificationId = rcu.verificationId))) t
			
		</createView>
	</changeSet>
	<changeSet id="442" author="satish.n">
		<addColumn tableName="verification_rcu_details">
			<column name="ACCNUMBER" type="VARCHAR(50)"></column>
			<column name="BANKNAME" type="VARCHAR2(50)"></column>
		</addColumn>
	</changeSet>
	
	<changeSet id="443" author="satish.n">
		<addColumn tableName="verification_rcu_details_temp">
			<column name="ACCNUMBER" type="VARCHAR(50)"></column>
			<column name="BANKNAME" type="VARCHAR2(50)"></column>
		</addColumn>
	</changeSet>
	<changeSet id="444" author="satish.N">
		<createView viewName="VERIFICATION_RCU_DETAILS_VIEW" replaceIfExists="true">
			
 		 SELECT  
 		 	rcud.verificationid,
			rcud.seqno,
			doc.doctype,
			doc.docmodule,
			doc.docname,
			doc.referenceid,
			dt.doctypecode code,
			dt.doctypedesc description,
			rcud.documentid,
			rcud.documenttype,
			doc.docrefid,
			rcud.documentsubid,
			rcud.documentrefid,
			rcud.documenturi,
			rcud.reinitid,
			rcud.verificationtype,
			rcud.status,
			rcud.pageseyeballed,
			rcud.pagessampled,
			rcud.initremarks,
			rcud.agentremarks,
			rcud.decision,
			rcud.decisionremarks,
			rcud.version,
			rcud.lastmntby,
			rcud.lastmnton,
			rcud.recordstatus,
			rcud.rolecode,
			rcud.nextrolecode,
			rcud.taskid,
			rcud.nexttaskid,
			rcud.recordtype,
			rcud.workflowid,
            rcud.accnumber,
     		rcud.bankName
			FROM  (SELECT rcud.verificationid,
			rcud.seqno,
			rcud.documentid,
			rcud.documenttype,
			rcud.documentsubid,
			rcud.documentrefid,
			rcud.documenturi,
			rcud.reinitid,
			rcud.verificationtype,
			rcud.status,
			rcud.pageseyeballed,
			rcud.pagessampled,
			rcud.initremarks,
			rcud.agentremarks,
			rcud.decision,
			rcud.decisionremarks,
			rcud.version,
			rcud.lastmntby,
			rcud.lastmnton,
			rcud.recordstatus,
			rcud.rolecode,
			rcud.nextrolecode,
			rcud.taskid,
			rcud.nexttaskid,
			rcud.recordtype,
			rcud.workflowid,
            rcud.accnumber,
          	rcud.bankName
			FROM verification_rcu_details_temp rcud
			union
			SELECT rcud.verificationid,
			rcud.seqno,
			rcud.documentid,
			rcud.documenttype,
			rcud.documentsubid,
			rcud.documentrefid,
			rcud.documenturi,
			rcud.reinitid,
			rcud.verificationtype,
			rcud.status,
			rcud.pageseyeballed,
			rcud.pagessampled,
			rcud.initremarks,
			rcud.agentremarks,
			rcud.decision,
			rcud.decisionremarks,
			rcud.version,
			rcud.lastmntby,
			rcud.lastmnton,
			rcud.recordstatus,
			rcud.rolecode,
			rcud.nextrolecode,
			rcud.taskid,
			rcud.nexttaskid,
			rcud.recordtype,
			rcud.workflowid,
      		rcud.accnumber,
     		rcud.bankName
			FROM verification_rcu_details rcud 
			WHERE NOT (EXISTS ( SELECT 1
			FROM verification_rcu_details_temp
			WHERE verification_rcu_details_temp.verificationid = rcud.verificationid AND verification_rcu_details_temp.seqno = rcud.seqno)) 
			AND rcud.documenttype in(1,2,3)) rcud
			Inner join (select docid, doctype, docmodule, doccategory docname, referenceid, docrefid  FROM DocumentDetails_Temp 
			union
			select docid, doctype, docmodule, doccategory docname, referenceid, docrefid  FROM DocumentDetails
      union
      select c.custid,custdoctype,'CUSTOMER',custdoccategory docname, custcif,docrefid from customerdocuments cdoc inner join 
      customers c on c.custid = cdoc.custid union 
       select c.custid,custdoctype,'CUSTOMER',custdoccategory docname, custcif,docrefid from customerdocuments_temp cdoc inner join 
      customers c on c.custid = cdoc.custid
      ) doc on doc.docid = rcud.documentid and doc.docname = rcud.documentsubid
			Inner join bmtdocumenttypes dt on dt.doctypecode = doc.docname;
		</createView>
	</changeSet>
	
	<changeSet id="445" author="satish.n">
		<createView viewName="verification_lv_details_view" replaceIfExists="true">
  	 SELECT t.verificationid,
			t.seqno,
			t.doctype,
			t.docmodule,
			t.docname,
			t.referenceid,
			t.code,
			t.description,
			t.documentid,
			t.documenttype,
			t.docrefid,
			t.documentsubid,
			t.documentrefid,
			t.documenturi,
			t.remarks1,
			t.remarks2,
			t.remarks3,
			t.version,
			t.lastmntby,
			t.lastmnton,
			t.recordstatus,
			t.rolecode,
			t.nextrolecode,
			t.taskid,
			t.nexttaskid,
			t.recordtype,
			t.workflowid
			FROM ( SELECT lvd.verificationid,
			lvd.seqno,
			doc.doctype,
			doc.docmodule,
			doc.doccategory AS docname,
			doc.referenceid,
			dt.doctypecode AS code,
			dt.doctypedesc AS description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details_temp lvd
			JOIN documentdetails_view doc ON doc.docid = lvd.documentid
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.doccategory
			WHERE lvd.documenttype in(1, 2)
			UNION ALL
			SELECT lvd.verificationid,
			lvd.seqno,
			doc.doctype,
			doc.docmodule,
			doc.doccategory AS docname,
			doc.referenceid,
			dt.doctypecode AS code,
			dt.doctypedesc AS description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details lvd
			JOIN verification_lv lv ON lv.verificationid = lvd.verificationid
			JOIN documentdetails_view doc ON doc.docid = lvd.documentid
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.doccategory
			WHERE NOT (EXISTS ( SELECT 1
			FROM verification_lv_details_temp
			WHERE verification_lv_details_temp.verificationid = lvd.verificationid AND verification_lv_details_temp.seqno = lvd.seqno)) AND (lvd.documenttype in(1, 2))
			UNION ALL
			SELECT lvd.verificationid,
			lvd.seqno,
			doc.custdoctype AS doctype,
			'Customer' AS docmodule,
			doc.custdoccategory AS docname,
			c.custcif as refereceid,
			dt.doctypecode AS code,
			dt.doctypedesc AS description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details_temp lvd
			JOIN customerdocuments_view doc ON doc.custid = lvd.documentid AND doc.custdoccategory= lvd.documentsubid
			JOIN customers_view c on c.custid = doc.custid    
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.custdoccategory
			WHERE lvd.documenttype = 3
			UNION ALL
			SELECT lvd.verificationid,
			lvd.seqno,
			doc.custdoctype AS doctype,
			'Customer' AS docmodule,
			doc.custdoccategory AS docname,
			c.custcif as refereceid,
			dt.doctypecode AS code,
			dt.doctypedesc AS description,
			lvd.documentid,
			lvd.documenttype,
			doc.docrefid,
			lvd.documentsubid,
			lvd.documentrefid,
			lvd.documenturi,
			lvd.remarks1,
			lvd.remarks2,
			lvd.remarks3,
			lvd.version,
			lvd.lastmntby,
			lvd.lastmnton,
			lvd.recordstatus,
			lvd.rolecode,
			lvd.nextrolecode,
			lvd.taskid,
			lvd.nexttaskid,
			lvd.recordtype,
			lvd.workflowid
			FROM verification_lv_details lvd
			JOIN customerdocuments_view doc ON doc.custid = lvd.documentid AND doc.custdoccategory = lvd.documentsubid
			JOIN customers_view c on c.custid = doc.custid        
			JOIN bmtdocumenttypes dt ON dt.doctypecode = doc.custdoccategory
			WHERE NOT (EXISTS ( SELECT 1
			FROM verification_lv_details_temp
			WHERE verification_lv_details_temp.verificationid = lvd.verificationid AND verification_lv_details_temp.seqno = lvd.seqno)) AND lvd.documenttype = 3) t;
		</createView>
	</changeSet>
	
	<changeSet id="446" author="satish.n">
		<sql>
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_FieldInvestigation_Initiation','MENU',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0 FROM SEQSECRIGHTS WHERE 0=0; 
				
				INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FIELDINVESTIGATION_INITIATION', 'Technical Verification Initiation maker', 0,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0 FROM SEQSECGROUPS WHERE 0=0;
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIELDINVESTIGATION_INITIATION') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_FieldInvestigation_Initiation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
		</sql>
	</changeSet>
	
	<changeSet id="447" author="satish.n">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_TechnicalVerification_Initiation','TechnicalVerificationInitiation',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
				
				INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'TECHNICAL_VERIFICATION_INITIATION', 'Technical Verification Initiation maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='TECHNICAL_VERIFICATION_INITIATION') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_TechnicalVerification_Initiation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>	

	<changeSet id="448" author="satish.n">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_LegalVerification_Initiation','MENU',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0 FROM SEQSECRIGHTS WHERE 0=0; 
				
				INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'LEGALVERIFICATION_INITIATION', 'Legal Verification Initiation maker', 0,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0 FROM SEQSECGROUPS WHERE 0=0;
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='LEGALVERIFICATION_INITIATION') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_LegalVerification_Initiation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>	
	

	<changeSet id="449" author="satish.n">
		<sql>
			<![CDATA[
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);		
				
				INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_RCUVerification_Initiation','MENU',1,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0 FROM SEQSECRIGHTS WHERE 0=0; 
				
				INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'RCUVERIFICATION_INITIATION', 'RCU Verification Initiation maker', 0,1000,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0 FROM SEQSECGROUPS WHERE 0=0;
				
				INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RCUVERIFICATION_INITIATION') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_RCUVerification_Initiation'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
				
				UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
				UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
				UPDATE SEQSECGROUPRIGHTS SET SEQNO= (SELECT MAX(Grprightid) FROM SECGROUPRIGHTS);
			]]>
		</sql>
	</changeSet>	

	<changeSet id="450" author="satish.n">
			<sql>
				<![CDATA[
					 Insert into SecRights Values
					((Select MAX(RightID)+1 From SecRights), 0, 'menuItem_Verification_TechnicalVerification_Internal', 'MENU', 1, 1000, current_timestamp, 'Approved',' ',' ',' ',' ',' ',0);
					
					Insert Into secGroups values((Select MAX(GrpID)+1 From secGroups),'Verification_TV_Internal','WF Maker for  TV Initiation',0 ,1000,current_timestamp, 'Approved','','','','','',0);
					
					Insert Into secGrouprights values((select MAX(GrpRightID)+1 From secGrouprights),
					(select GrpId from SecGroups where Grpcode='Verification_TV_Internal'),
					(select RightId from secRights where RightName='menuItem_Verification_TechnicalVerification_Internal'),1,0,1000,current_timestamp, 'Approved','','','','','',0);
				]]>
			</sql>
		</changeSet>
		
		<changeSet id="451" author="satish.n">
			<addColumn tableName="verification_rcu_details_Stage">
				<column name="accNumber" type="varchar(50)"/>
				<column name="bankName" type="varchar(50)"/>
			</addColumn>
		</changeSet>
</databaseChangeLog>
