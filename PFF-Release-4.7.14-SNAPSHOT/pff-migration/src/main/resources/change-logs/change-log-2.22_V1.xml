<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">


	 <changeSet id="1" author="Satya">	
	 <update tableName="SecRights">
	 <column name="RightName">CommitmentDialog_CustCIF</column>
	<where>RightName ='CommitmentDialog_custID'</where></update>
	</changeSet>
	<changeSet author="Satya" id="2">
	<addDefaultValue tableName="SecGroupRights" defaultValueDate="CURRENT_TIMESTAMP" columnName="LastMntOn" columnDataType="datetime"/>
	</changeSet>
	
	
	<changeSet author="Satya" id="6">
<createView viewName="Commitments_AView" replaceIfExists="true">SELECT     T1.CmtReference, T1.custID, T2.CustShrtName, T1.CmtBranch, T3.BranchDesc, T1.OpenAccount, T1.CmtAccount, T1.CmtCcy, T4.CcyDesc, T1.CmtPftRateMin, 
                      T1.CmtPftRateMax, T1.CmtAmount, T1.CmtUtilizedAmount, T1.CmtAvailable, T1.CmtPromisedDate, T1.CmtStartDate, T1.CmtExpDate, T1.CmtRvwDate, 
					  T1.CmtTitle, T1.CmtNotes, T1.Revolving, T1.SharedCmt, T1.MultiBranch, T1.FacilityRef, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
					  T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtStopRateRange, T1.CmtActive, 
					  T1.NonPerforming, T1.CmtCharges, T1.ChargesAccount, T4.CcyEditField, T2.CustCIF, T6.FinTypeDesc FacilityRefDesc,
					  T4.CcyEditField ReportFormat, T1.CmtAvailableMonths, T1.CollateralRequired, T1.CmtEndDate, T1.LimitLineId
					  
FROM         		  Commitments T1 INNER JOIN
                      Customers T2 ON T1.custID = T2.CustID INNER JOIN
                      RMTBranches T3 ON T1.CmtBranch = T3.BranchCode INNER JOIN
                      RMTCurrencies T4 ON T1.CmtCcy = T4.CcyCode INNER JOIN
					  LimitDetails T5 ON T1.LimitLineId = T5.DetailId LEFT OUTER JOIN
                      RMTFinanceTypes T6 ON T1.FacilityRef = T6.FinType
</createView>
</changeSet>	
<changeSet author="Satya" id="7">
<createView viewName="Commitments_TView" replaceIfExists="true">SELECT     T1.CmtReference, T1.custID, T2.CustShrtName, T1.CmtBranch, T3.BranchDesc, T1.OpenAccount, T1.CmtAccount, T1.CmtCcy, T4.CcyDesc, T1.CmtPftRateMin, 
                      T1.CmtPftRateMax, T1.CmtAmount, T1.CmtUtilizedAmount, T1.CmtAvailable, T1.CmtPromisedDate, T1.CmtStartDate, T1.CmtExpDate, T1.CmtRvwDate, 
					  T1.CmtTitle, T1.CmtNotes, T1.Revolving, T1.SharedCmt, T1.MultiBranch, T1.FacilityRef, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtStopRateRange, T1.CmtActive, T1.NonPerforming, 
					  T1.CmtCharges, T1.ChargesAccount, T4.CcyEditField, T2.CustCIF, T6.FinTypeDesc FacilityRefDesc,
					  T1.CmtAvailableMonths, T1.CollateralRequired, T1.CmtEndDate, T1.LimitLineId

FROM		          Commitments_Temp T1 INNER JOIN
                      Customers T2 ON T1.custID = T2.CustID INNER JOIN
                      RMTBranches T3 ON T1.CmtBranch = T3.BranchCode INNER JOIN
                      RMTCurrencies T4 ON T1.CmtCcy = T4.CcyCode INNER JOIN
					  LimitDetails T5 ON T1.LimitLineId = T5.DetailId LEFT OUTER JOIN
                      RMTFinanceTypes T6 ON T1.FacilityRef = T6.FinType 
</createView>
</changeSet>
<changeSet author="Satya" id="8">
<createView viewName="Commitments_View" replaceIfExists="true">SELECT     T1.CmtReference, T1.custID, T2.CustShrtName, T1.CmtBranch, T3.BranchDesc, T1.OpenAccount, T1.CmtAccount, T1.CmtCcy, T4.CcyDesc, T1.CmtPftRateMin, 
                      T1.CmtPftRateMax, T1.CmtAmount, T1.CmtUtilizedAmount, T1.CmtAvailable, T1.CmtPromisedDate, T1.CmtStartDate, T1.CmtExpDate, T1.CmtRvwDate, 
					  T1.CmtTitle, T1.CmtNotes, T1.Revolving, T1.SharedCmt, T1.MultiBranch, T1.FacilityRef, T1.Version, T1.LastMntBy, T1.LastMntOn,  
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtStopRateRange, T1.CmtActive, 
					  T1.NonPerforming,T1.CmtCharges, T1.ChargesAccount, T4.CcyEditField, T2.CustCIF, T6.FinTypeDesc FacilityRefDesc,
					  T4.CcyEditField ReportFormat, T1.CmtAvailableMonths, T1.CollateralRequired, T1.CmtEndDate, T1.LimitLineId
					  
FROM         		  Commitments_Temp T1 INNER JOIN
                      Customers T2 ON T1.custID = T2.CustID INNER JOIN
                      RMTBranches T3 ON T1.CmtBranch = T3.BranchCode INNER JOIN
                      RMTCurrencies T4 ON T1.CmtCcy = T4.CcyCode INNER JOIN
					  LimitDetails T5 ON T1.LimitLineId = T5.DetailId LEFT OUTER JOIN
                      RMTFinanceTypes T6 ON T1.FacilityRef = T6.FinType
					  
UNION ALL

SELECT     T1.CmtReference, T1.custID, T2.CustShrtName, T1.CmtBranch, T3.BranchDesc, T1.OpenAccount, T1.CmtAccount, T1.CmtCcy, T4.CcyDesc, T1.CmtPftRateMin, 
                      T1.CmtPftRateMax, T1.CmtAmount, T1.CmtUtilizedAmount, T1.CmtAvailable, T1.CmtPromisedDate, T1.CmtStartDate, T1.CmtExpDate, T1.CmtRvwDate, 
					  T1.CmtTitle, T1.CmtNotes,T1.Revolving, T1.SharedCmt, T1.MultiBranch, T1.FacilityRef, T1.Version, T1.LastMntBy, T1.LastMntOn,  
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtStopRateRange, 
					  T1.CmtActive, T1.NonPerforming, T1.CmtCharges, T1.ChargesAccount, T4.CcyEditField, T2.CustCIF, T6.FinTypeDesc FacilityRefDesc,
					  T4.CcyEditField ReportFormat, T1.CmtAvailableMonths, T1.CollateralRequired, T1.CmtEndDate, T1.LimitLineId
					  
FROM         		  Commitments T1 INNER JOIN
                      Customers T2 ON T1.custID = T2.CustID INNER JOIN
                      RMTBranches T3 ON T1.CmtBranch = T3.BranchCode INNER JOIN
                      RMTCurrencies T4 ON T1.CmtCcy = T4.CcyCode INNER JOIN
					  LimitDetails T5 ON T1.LimitLineId = T5.DetailId LEFT OUTER JOIN
                      RMTFinanceTypes T6 ON T1.FacilityRef = T6.FinType
					  
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          Commitments_TEMP
                            WHERE      CmtReference = T1.CmtReference) 
</createView>
</changeSet>
<changeSet author="Satya" id="9">
<createView viewName="CommitmentRates_View" replaceIfExists="true">SELECT		T1.CmtReference, T1.CmtRvwFrq, T1.CmtBaseRate, T1.CmtMargin, T1.CmtSpecialRate, T1.CmtActualRate, T1.CmtCalculatedRate, 
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
			T1.WorkflowId, T3.BRTypeDesc CmtBaseRateName
			
FROM    	CommitmentRates_Temp T1 INNER JOIN
            Commitments_Temp T2 ON T1.CmtReference = T2.CmtReference LEFT OUTER JOIN
            RMTBaseRateCodes T3 ON T1.CmtBaseRate = T3.BRType

UNION ALL

SELECT		T1.CmtReference, T1.CmtRvwFrq, T1.CmtBaseRate, T1.CmtMargin, T1.CmtSpecialRate, T1.CmtActualRate, T1.CmtCalculatedRate, 
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
			T1.WorkflowId, T3.BRTypeDesc CmtBaseRateName
			
FROM    	CommitmentRates T1 INNER JOIN
            Commitments T2 ON T1.CmtReference = T2.CmtReference LEFT OUTER JOIN
            RMTBaseRateCodes T3 ON T1.CmtBaseRate = T3.BRType

WHERE     NOT EXISTS (SELECT 1 FROM CommitmentRates_TEMP WHERE CmtReference = T1.CmtReference AND CmtRvwFrq = T1.CmtRvwFrq) 
</createView>
</changeSet>

 <changeSet author="Surekha" id="11">
	<addColumn tableName="BMTRejectCodes">
		<column name="RejectType" type="nvarchar(20)"/>
	</addColumn>
	</changeSet>
	<changeSet author="Surekha" id="12">
	<addColumn tableName="BMTRejectCodes_Temp">
		<column name="RejectType" type="nvarchar(20)"/>
	</addColumn>
	</changeSet>
	<changeSet author="Surekha" id="13">
	<addDefaultValue tableName="SecRights" defaultValueDate="CURRENT_TIMESTAMP" columnName="LastMntOn" columnDataType="datetime"/>
	</changeSet>
	<changeSet author="Surekha" id="14">
	<sql>
		Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);

		INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'RejectDetailDialog_RejectType','RejectDetailDialog',0,1000,null,'Approved','',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='REJECTDETAIL_MAKER'),(select RightID from SecRights where RightName='RejectDetailDialog_RejectType'),1,0,10000,null,'Approved','',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

		Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from
		SecGroupRights);
	</sql>
</changeSet>
<changeSet author="Surekha" id="15">
		<createView replaceIfExists="true" viewName="BMTRejectCodes_View">SELECT     RejectCode, RejectDesc, RejectType, RejectIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM  BMTRejectCodes_Temp
		UNION ALL
				SELECT     RejectCode, RejectDesc, RejectType, RejectIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
					FROM         BMTRejectCodes
		WHERE   NOT EXISTS
                          (SELECT     1  FROM          BMTRejectCodes_Temp  WHERE      RejectCode = BMTRejectCodes.RejectCode)
        </createView>
	</changeSet>
	<changeSet author="Surekha" id="16">
		<createView replaceIfExists="true" viewName="BMTRejectCodes_AView">SELECT     RejectCode, RejectDesc, RejectType,RejectIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, 
                      WorkflowId
				FROM         BMTRejectCodes

        </createView>
	</changeSet>
	<changeSet author="Surekha" id="17">
	<addColumn tableName="RMTBranches">
		<column name="MiniBranch" type="nchar(1)"/>
		<column name="BranchType"  type="nvarchar(25)"/>
		<column name="ParentBranch"  type="nvarchar(12)"/>
		<column name="Region"  type="nvarchar(10)"/>
	</addColumn>
	</changeSet>
	<changeSet author="Surekha" id="18">
	<addColumn tableName="RMTBranches_Temp">
		<column name="MiniBranch" type="nchar(1)"/>
		<column name="BranchType"  type="nvarchar(25)"/>
		<column name="ParentBranch"  type="nvarchar(12)"/>
		<column name="Region"  type="nvarchar(10)"/>
	</addColumn>
	</changeSet>
	<changeSet author="Surekha" id="19">
	<sql>
		Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);

		INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'BranchDialog_MiniBranch','BranchDialog',0,1000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
		INSERT INTO SecRights SELECT (select (SeqNo+2) from SeqSecRights),3,'BranchDialog_BranchType','BranchDialog',0,1000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
		INSERT INTO SecRights SELECT (select (SeqNo+3) from SeqSecRights),3,'BranchDialog_ParentBranch','BranchDialog',0,1000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
		INSERT INTO SecRights SELECT (select (SeqNo+4) from SeqSecRights),3,'BranchDialog_Region','BranchDialog',0,1000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
		
		INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights), (select GrpID from SecGroups where GrpCode='BRANCH_MAKER'), (select RightID from SecRights where RightName='BranchDialog_MiniBranch'),1,0,10000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+2) from SeqSecGroupRights), (select GrpID from SecGroups where GrpCode='BRANCH_MAKER'), (select RightID from SecRights where RightName='BranchDialog_BranchType'),1,0,10000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+3) from SeqSecGroupRights), (select GrpID from SecGroups where GrpCode='BRANCH_MAKER'), (select RightID from SecRights where RightName='BranchDialog_ParentBranch'),1,0,10000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+4) from SeqSecGroupRights), (select GrpID from SecGroups where GrpCode='BRANCH_MAKER'), (select RightID from SecRights where RightName='BranchDialog_Region'),1,0,10000,null,'Approved',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

		Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	</sql>
</changeSet>
<changeSet author="Surekha" id="20">
		<createView replaceIfExists="true" viewName="RMTBranches_View">SELECT T1.BranchCode ,T1.BranchDesc ,T1.BranchAddrLine1 ,T1.BranchAddrLine2 ,T1.BranchPOBox , T1.BranchCity ,
          T4.PCCityName lovDescBranchCityName  ,T1.BranchProvince ,T3.CPProvinceName lovDescBranchProvinceName  ,T1.BranchCountry ,T2.CountryDesc lovDescBranchCountryName  ,T1.BranchFax ,
          T1.BranchTel ,T1.BranchSwiftBankCde ,T1.BranchSwiftCountry , T1.BranchSwiftLocCode ,T1.BranchSwiftBrnCde , T1.BranchSortCode ,T1.BranchIsActive ,T1.NewBranchCode , T6.BranchDesc NewBranchDesc,
          T1.Version ,T1.LastMntBy ,T1.LastMntOn ,T1.RecordStatus , T1.RoleCode ,T1.NextRoleCode ,T1.TaskId , T1.NextTaskId , T1.RecordType ,T1.WorkflowId , T1.MiniBranch,T1.BranchType, T1.ParentBranch,
          T1.Region, T7.BranchDesc ParentBranchDesc,T5.CountryDesc lovDescBranchSwiftCountryName  
     FROM RMTBranches_Temp T1
           LEFT JOIN BMTCountries T2   ON T1.BranchCountry = T2.CountryCode
           LEFT JOIN RMTCountryVsProvince T3   ON T1.BranchCountry = T3.CPCountry
            AND T1.BranchProvince = T3.CPProvince
           LEFT JOIN RMTProvinceVsCity T4   ON T1.BranchCountry = T4.PCCountry
            AND T1.BranchProvince = T4.PCProvince AND T1.BranchCity = T4.PCCity
           LEFT JOIN BMTCountries T5   ON T1.BranchSwiftCountry = T5.CountryCode
		   LEFT JOIN RMTBranches T6   ON T1.NewBranchCode = T6.BranchCode
		    LEFT JOIN RMTBranches T7   ON T1.ParentBranch = T6.BranchCode
   UNION ALL 
   SELECT T1.BranchCode ,T1.BranchDesc ,T1.BranchAddrLine1 ,T1.BranchAddrLine2 ,T1.BranchPOBox , T1.BranchCity ,
          T4.PCCityName lovDescBranchCityName  ,T1.BranchProvince ,T3.CPProvinceName lovDescBranchProvinceName  ,T1.BranchCountry ,T2.CountryDesc lovDescBranchCountryName  ,T1.BranchFax ,
          T1.BranchTel ,T1.BranchSwiftBankCde ,T1.BranchSwiftCountry , T1.BranchSwiftLocCode ,T1.BranchSwiftBrnCde , T1.BranchSortCode ,T1.BranchIsActive ,T1.NewBranchCode , T6.BranchDesc NewBranchDesc,
          T1.Version ,T1.LastMntBy ,T1.LastMntOn ,T1.RecordStatus , T1.RoleCode ,T1.NextRoleCode ,T1.TaskId , T1.NextTaskId , T1.RecordType ,T1.WorkflowId , T1.MiniBranch,T1.BranchType, T1.ParentBranch,
          T1.Region, T7.BranchDesc ParentBranchDesc,T5.CountryDesc lovDescBranchSwiftCountryName 
     FROM RMTBranches T1
           LEFT JOIN BMTCountries T2 ON T1.BranchCountry = T2.CountryCode
           LEFT JOIN RMTCountryVsProvince T3 ON T1.BranchCountry = T3.CPCountry
            AND T1.BranchProvince = T3.CPProvince
           LEFT JOIN RMTProvinceVsCity T4 ON T1.BranchCountry = T4.PCCountry
            AND T1.BranchProvince = T4.PCProvince AND T1.BranchCity = T4.PCCity
           LEFT JOIN BMTCountries T5 ON T1.BranchSwiftCountry = T5.CountryCode
		   LEFT JOIN RMTBranches T6   ON T1.NewBranchCode = T6.BranchCode
		   LEFT JOIN RMTBranches T7   ON T1.ParentBranch = T6.BranchCode
     WHERE NOT EXISTS ( SELECT 1 
                        FROM RMTBranches_Temp 
                          WHERE BranchCode = T1.BranchCode )
        </createView>
	</changeSet>
	<changeSet author="Surekha" id="21">
		<createView replaceIfExists="true" viewName="RMTBranches_AView">SELECT T1.BranchCode ,T1.BranchDesc ,T1.BranchAddrLine1 ,T1.BranchAddrLine2 ,T1.BranchPOBox , T1.BranchCity ,
          T4.PCCityName lovDescBranchCityName  ,T1.BranchProvince ,T3.CPProvinceName lovDescBranchProvinceName  ,T1.BranchCountry ,T2.CountryDesc lovDescBranchCountryName  ,T1.BranchFax ,
          T1.BranchTel ,T1.BranchSwiftBankCde ,T1.BranchSwiftCountry , T1.BranchSwiftLocCode ,T1.BranchSwiftBrnCde , T1.BranchSortCode ,T1.BranchIsActive ,T1.NewBranchCode , T6.BranchDesc NewBranchDesc,
          T1.Version ,T1.LastMntBy ,T1.LastMntOn ,T1.RecordStatus , T1.RoleCode ,T1.NextRoleCode ,T1.TaskId , T1.NextTaskId , T1.RecordType ,T1.WorkflowId , T1.MiniBranch,T1.BranchType, T1.ParentBranch,
          T1.Region, T7.BranchDesc ParentBranchDesc,T5.CountryDesc lovDescBranchSwiftCountryName  
     FROM RMTBranches T1
           LEFT JOIN BMTCountries T2   ON T1.BranchCountry = T2.CountryCode
           LEFT JOIN RMTCountryVsProvince T3   ON T1.BranchCountry = T3.CPCountry
            AND T1.BranchProvince = T3.CPProvince
           LEFT JOIN RMTProvinceVsCity T4   ON T1.BranchCountry = T4.PCCountry
            AND T1.BranchProvince = T4.PCProvince AND T1.BranchCity = T4.PCCity
           LEFT JOIN BMTCountries T5   ON T1.BranchSwiftCountry = T5.CountryCode
		   LEFT JOIN RMTBranches T6   ON T1.NewBranchCode = T6.BranchCode
		    LEFT JOIN RMTBranches T7   ON T1.ParentBranch = T6.BranchCode

        </createView>
	</changeSet>
	<changeSet author="Surekha" id="22">
		<update tableName="RMTBranches">
			<column name="MiniBranch">0</column>
		</update>
	</changeSet>
	


</databaseChangeLog>