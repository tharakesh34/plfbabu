<?xml version="1.0" encoding="UTF-8"?>
<zk>
	<log>
		<log-base>com.pennant</log-base>
	</log>

	<!-- ========================================================== -->
	<!-- Enable event thread for modal windows -->
	<!-- ========================================================== -->
	<system-config>
		<disable-event-thread>false</disable-event-thread>
	</system-config>

	<!-- ====================================================== -->
	<!-- running a zk application in a CLUSTER -->
	<!-- ====================================================== -->
	<system-config>
		<ui-factory-class>
			org.zkoss.zk.ui.http.SerializableUiFactory
		</ui-factory-class>
	</system-config>


	<system-config>
		<max-upload-size>1000000</max-upload-size>
	</system-config>

	<!-- ====================================================== -->
	<!-- Device configurations -->
	<!-- 1. Type of server push -->
	<!-- 2. Page for showing the Session timeout -->
	<!-- An empty URL can cause the browser to -->
	<!-- reload the same URL -->
	<!-- ====================================================== -->
	<device-config>
		<device-type>ajax</device-type>
		<server-push-class>org.zkoss.zkmax.ui.comet.CometServerPush
		</server-push-class>
		<timeout-uri>/timeout.zul</timeout-uri>
	</device-config>

	<!-- ====================================================== -->
	<!-- Listener to make sure servlet thread -->
	<!-- and ZK event thread got the same -->
	<!-- ThreadLocal values. -->
	<!-- ====================================================== -->
	<listener>
		<description>ResourceLoader</description>
		<listener-class>com.pennanttech.framework.web.util.ResourceLoader
		</listener-class>
	</listener>
	<listener>
		<description>ThreadLocal Synchronization Listener
		</description>
		<listener-class>org.zkoss.zkplus.util.ThreadLocalListener
		</listener-class>
	</listener>
	<listener>
		<description>UserSessionInit</description>
		<listener-class>com.pennant.framework.web.util.UserSessionInit
		</listener-class>
	</listener>
	<listener>
		<description>Adding csrf meta tag for page</description>
		<listener-class>com.pennant.web.security.util.CsrfMetaAppender
		</listener-class>
	</listener>

	<!-- ====================================================== -->
	<!-- Besides that, you have to specify what -->
	<!-- ThreadLocal variables you want to sync. -->
	<!-- 1. Spring RequestContextHolder -->
	<!-- 2. Spring ThreadLocalSecurityContextHolderStrategy -->
	<!-- ====================================================== -->
	<preference>
		<name>ThreadLocal</name>
		<value>
			org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy=contextHolder;
			org.springframework.web.context.request.RequestContextHolder=requestAttributesHolder,inheritableRequestAttributesHolder;
		</value>
	</preference>


	<!-- ====================================================== -->
	<!-- Path to the character set and sizes -->
	<!-- Zkoss configuration file -->
	<!-- Custom components are declared here -->
	<!-- ====================================================== -->
	<language-config>
		<addon-uri>/WEB-INF/lang-addon.xml</addon-uri>
	</language-config>
	<language-config>
		<addon-uri>/WEB-INF/ckez-bind-addon.xml</addon-uri>
	</language-config>

	<!-- ====================================================== -->
	<!-- Automatic Timeout -->
	<!-- ====================================================== -->
	<session-config>
		<device-type>ajax</device-type>
		<automatic-timeout />
		<max-requests-per-session>1</max-requests-per-session>
		<max-desktops-per-session>1</max-desktops-per-session>
	</session-config>

	<!-- ====================================================== -->
	<!-- Displays the wait indicator on every user action -->
	<!-- ====================================================== -->
	<library-property>
		<name>org.zkoss.zul.progressbox.position</name>
		<value>center</value>
	</library-property>
	<client-config>
		<processing-prompt-delay>1</processing-prompt-delay>
	</client-config>

	<!-- Turn on if you want to ignore the consecutive click events, if it happens 
		too close to the previous one, or the server is still serving the previous 
		click. -->
	<client-config>
		<click-filter-delay>390</click-filter-delay>
	</client-config>

	<library-property>
		<name>org.zkoss.zul.theme.fontFamilyT</name>
		<value>Verdana, Tahoma, Arial, Helvetica, sans-serif</value>
	</library-property>
	<library-property>
		<name>org.zkoss.zul.theme.fontFamilyC</name>
		<value>Verdana, Tahoma, Arial, Helvetica, sans-serif</value>
	</library-property>
	<library-property>
		<name>org.zkoss.theme.preferred</name>
		<value>atlantic</value>
	</library-property>

	<library-property>
		<name>org.zkoss.web.classWebResource.cache.etag</name>
		<value>true</value>
	</library-property>

	<library-property>
		<name>org.zkoss.web.classWebResource.cache.CSS.hours</name>
		<value>12</value>
	</library-property>

	<library-property>
		<name>org.zkoss.web.classWebResource.cache</name>
		<value>true</value>
	</library-property>

	<library-property>
		<name>org.zkoss.zk.WPD.cache</name>
		<value>true</value>
	</library-property>

	<library-property>
		<name>org.zkoss.zk.WCS.cache</name>
		<value>true</value>
	</library-property>

	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/error.zul</location>
	</error-page>

	<device-config>
		<device-type>ajax</device-type>
		<embed><![CDATA[
         <script type="text/javascript">
            jq(function() {
               setTimeout(function() {
                           if (window.zul && window.zul.inp && window.zul.inp.Combobox) {
                              zul.inp.Combobox.prototype.slideDown_ = function(pp) {
                                 jq(pp).css("visibility", "visible").css("display", "block");
                              };
                           }
                        },
               100);
            });
            
            zk.afterLoad(function() {
			var $xhr = zAu.ajaxSettings.xhr;
		    zAu.ajaxSettings.xhr = function() {
		       var req = $xhr.apply(this, arguments);
		       var $send = req.send;
		       
		       req.send = function() {		             	
		       	var token = $("meta[name='_csrf']").attr("content");
		       	var header = $("meta[name='_csrf_header']").attr("content");
	       	    req.setRequestHeader(header, token);
		       	
		       	 $send.apply(req, arguments);
		       }
		       return req;
		   }
		});
		
		zAu.onError(function(req, errCode) {
			if(errCode == 403 || errCode == 0) {
				window.open(zk.contextURI + "/timeout.zul", "_self"); 
				return true; //error handled
			} else {
				return false; //default handler
			}
		});
				
		document.onkeypress = function (event) {
        	event = (event || window.event);
        if (event.keyCode == 123) {
           //alert('No F-12');
            return false;
          }
    	}
    
    	document.onmousedown = function (event) {
    	    event = (event || window.event);
        if (event.keyCode == 123) {
            //alert('No F-keys');
            return false;
      	  }
    	}
	
		document.onkeydown = function (event) {
        	event = (event || window.event);
        if (event.keyCode == 123) {
            //alert('No F-keys');
            return false;
          }
    	}		
		
       document.onkeypress = function (event) {
    		event = (event || window.event);
    			var e;
    	if ($.browser.msie) { e = window.event; } else { e = event; }
    			var elid = $(document.activeElement).is('input[type="text"]:focus, textarea:focus');
    		if (e.keyCode == 8 && !elid) { return false; }
    	}
       
		function clickIE4(){
                    if (event.button==2){
                        return false;
                    }
                }

                function clickNS4(e){
                    if (document.layers||document.getElementById&&!document.all){
                        if (e.which==2||e.which==3){
                            return false;
                        }
                    }
                }

                if (document.layers){
                    document.captureEvents(Event.MOUSEDOWN);
                    document.onmousedown=clickNS4;
                }
                else if (document.all&&!document.getElementById){
                    document.onmousedown=clickIE4;
                }

                document.oncontextmenu=new Function("return false");
								
         </script>
      ]]></embed>
	</device-config>
</zk>