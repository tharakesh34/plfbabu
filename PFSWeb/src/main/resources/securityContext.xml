<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/aop   
		   http://www.springframework.org/schema/aop/spring-aop.xsd                        
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd">
          
    <global-method-security secured-annotations="enabled" /> 
          	
	<http auto-config="false" use-expressions="false" disable-url-rewriting="true" entry-point-ref="authenticationEntryPoint">
		<custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter"/>
		<custom-filter before="LOGOUT_FILTER" ref="logoutFilter"/>		
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<custom-filter after="SESSION_MANAGEMENT_FILTER" ref="sessionFixationProtectionFilter" />
			
		<intercept-url pattern="/pages/**" access="IS_AUTHENTICATED_REMEMBERED" />
		<intercept-url pattern="/WEB-INF/pages/**" access="IS_AUTHENTICATED_REMEMBERED" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />

		<csrf request-matcher-ref="csrfRequestMatcher" />
		
		<headers>
			 <cache-control/>
			 <content-type-options/>
			 <frame-options policy="SAMEORIGIN"/>
			 <hsts/>
			 <header name="server" value="${server.server-header}"/>
			 <xss-protection/>
		</headers>
				
		<session-management  session-authentication-strategy-ref="sas"/>
	</http>
		
	<beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint" p:loginFormUrl="/loginDialog.zul" />

	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<!-- <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/> -->
	 
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider"/>
	</authentication-manager>
	
	<beans:bean id="ldapAuthenticationProvider" class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
		<beans:constructor-arg value="${ldap.domain.name}"/>
		<beans:constructor-arg value="${ldap.domain.url}"/>
	</beans:bean>
	
	<beans:bean id="ldapContext" class="com.pennanttech.pennapps.core.security.LdapContext" scope="prototype"/>
		
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="passwordEncoder" ref="passwordEncoder"/>
		<beans:property name="userDetailsService" ref="userDetailsService"/>
	</beans:bean>
	
	<beans:bean id="authenticationFilter" class="com.pennanttech.pennapps.web.security.filter.AuthenticationFormFilter">
		<beans:property name="sessionAuthenticationStrategy" ref="sas" />
  		<beans:property name="authenticationManager" ref="authenticationManager" />
  		<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
	</beans:bean>

	<beans:bean id="authenticationFailureHandler" class="com.pennanttech.pennapps.web.security.AuthenticationFailureHandler"/>
		
	<beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg value="/loginDialog.zul"/>
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class= "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
				<beans:bean class= "org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
					<beans:constructor-arg>
						<beans:list>
							<beans:value>JSESSIONID</beans:value>
							<beans:value>SFPSESSIONID</beans:value>
							<beans:value>SFPCOOKIEID</beans:value>
						</beans:list>
					</beans:constructor-arg>
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
						
	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry"/>
		<beans:property name="redirectStrategy" ref="redirectStrategy"/>
		<beans:property name="expiredUrl" value="/timeout.zul"/>
		<beans:property name="logoutHandlers">
			<beans:list>
				<beans:bean class= "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
				<beans:bean class= "org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
					<beans:constructor-arg>
						<beans:list>
							<beans:value>JSESSIONID</beans:value>
							<beans:value>SFPSESSIONID</beans:value>
							<beans:value>SFPCOOKIEID</beans:value>
						</beans:list>
					</beans:constructor-arg>
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
    
    <beans:bean id="sessionFixationProtectionFilter" class="com.pennanttech.pennapps.web.security.filter.SessionFixationProtectionFilter"/>
    	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry" />
					<beans:property name="maximumSessions" value="${session.maximum}" />
					<beans:property name="exceptionIfMaximumExceeded" value="false" />
				</beans:bean>
				<beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
				</beans:bean>
				<beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry" />
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
		
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
	<beans:bean id="csrfRequestMatcher" class="com.pennanttech.pennapps.web.security.CsrfRequestMatcher"/>
	<beans:bean id="authenticationProvider" class="com.pennanttech.framework.security.core.AuthenticationManager"/>
	<beans:bean id="userDetailsService" class="com.pennanttech.framework.security.core.UserDetailsServiceImpl"/>
	<beans:bean id="redirectStrategy" class= "com.pennanttech.pennapps.web.security.DefaultRedirectStrategy">
		<beans:constructor-arg>
			<beans:bean class="org.springframework.security.web.DefaultRedirectStrategy"/>
		</beans:constructor-arg>
	</beans:bean>
</beans:beans>