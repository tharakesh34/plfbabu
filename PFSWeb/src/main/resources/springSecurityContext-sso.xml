<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/aop   
		   http://www.springframework.org/schema/aop/spring-aop.xsd                        
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
	
	<beans:import resource="springSecurityContext.xml"/>
	
	<http auto-config="false" use-expressions="false" disable-url-rewriting="true" entry-point-ref="negotiateSecurityFilterEntryPoint">
		<custom-filter position="BASIC_AUTH_FILTER" ref="waffleNegotiateSecurityFilter" />
		<custom-filter before="LOGOUT_FILTER" ref="logoutFilterSSO"/>	
		<custom-filter before="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<custom-filter after="SESSION_MANAGEMENT_FILTER" ref="sessionFixationProtectionFilter" />
										
		<form-login authentication-failure-url="/loginDialog.zul?login_error=1" default-target-url="/pages/index.zul" />	
				
		<intercept-url pattern="/pages/**" access="IS_AUTHENTICATED_REMEMBERED" />
		<intercept-url pattern="/WEB-INF/pages/**" access="IS_AUTHENTICATED_REMEMBERED" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
			
		<csrf request-matcher-ref="csrfSecurityRequestMatcher" />
		
		<headers>
			 <cache-control/>
			 <content-type-options/>
			 <hsts/>
			 <header name="server" value="PFSSERVRER"/>
			 <xss-protection/>
		</headers>
		
	   <session-management  session-authentication-strategy-ref="sas"/>
	 </http>
	 
	 <beans:bean id="negotiateSecurityFilterEntryPoint" class="waffle.spring.NegotiateSecurityFilterEntryPoint">
		<beans:property name="Provider" ref="waffleSecurityFilterProviderCollection" />
	</beans:bean>
	
	<beans:bean id="waffleSecurityFilterProviderCollection" class="waffle.servlet.spi.SecurityFilterProviderCollection">
		<beans:constructor-arg>
			<beans:list>
				<beans:ref bean="negotiateSecurityFilterProvider" />   			
				<beans:ref bean="basicSecurityFilterProvider" />   			
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="negotiateSecurityFilterProvider" class="waffle.servlet.spi.NegotiateSecurityFilterProvider">
		<beans:constructor-arg ref="waffleWindowsAuthProvider" />
	</beans:bean>
	
	<beans:bean id="basicSecurityFilterProvider" class="waffle.servlet.spi.BasicSecurityFilterProvider">
		<beans:constructor-arg ref="waffleWindowsAuthProvider" />
	</beans:bean>
	
	<beans:bean id="waffleWindowsAuthProvider" class="waffle.windows.auth.impl.WindowsAuthProviderImpl" />
		 
	 <beans:bean id="waffleNegotiateSecurityFilter" class="waffle.spring.NegotiateSecurityFilter">
		<beans:property name="Provider" ref="waffleSecurityFilterProviderCollection" />
		<beans:property name="AllowGuestLogin" value="false" />
		<beans:property name="PrincipalFormat" value="fqn" />
		<beans:property name="RoleFormat" value="both" />
	</beans:bean>
	
	 <authentication-manager alias="authenticationManager" erase-credentials="true">
		<authentication-provider user-service-ref="myUserDetailsService"/>
	</authentication-manager>	
</beans:beans>