<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<property name="add.schema" value="dbo." dbms="mssql" />
	<property name="add.schema" value=" " dbms="oracle" />
	<property name="call.substr" value="substring" dbms="mssql" />
	<property name="call.substr" value="substr" dbms="oracle" />
	<property name="call.substr" value="substring" dbms="postgresql" />
	<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
	<property name="call.auditdb" value=" " dbms="oracle" />
	<property name="call.concatenate" value="+" dbms="mssql" />
	<property name="call.concatenate" value="||" dbms="oracle" />
	<property name="call.concatenate" value="||" dbms="postgresql" />
	<property name="call.collength" value="LEN" dbms="mssql" />
	<property name="call.collength" value="LENGTH" dbms="oracle" />
	<property name="call.collength" value="LENGTH" dbms="postgresql" />
	<property name="call.date" value="getdate()" dbms="mssql" />
	<property name="call.date" value="sysdate" dbms="oracle" />
	<property name="call.date" value="now()::timestamp" dbms="postgresql" />
	



<changeSet id="44" author="somasekhar">
		<createView viewName="CUSTOMERADDRESSES_AVIEW" replaceIfExists="true">
			SELECT 			T1.custAddressId, T1.CustID , T1.CustAddrType,  T1.CustAddrHNbr , T1.CustFlatNbr, T1.CustAddrStreet , T1.CustAddrLine1 , T1.CustAddrLine2 , T1.CustPOBox , T1.CustAddrCity , 
								T1.TypeOfResidence,  T1.CustAddrProvince , T1.CustAddrCountry , T1.CustAddrZIP ,  T1.CustAddrPhone , T1.CustAddrFrom ,  T1.custAddrPriority ,
								T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,						
         						T2.AddrTypeDesc lovDescCustAddrTypeName  ,
        						T3.PCCityName lovDescCustAddrCityName  , T3.BankRefNo as cityRefNo,
          						T4.CPProvinceName lovDescCustAddrProvinceName  , T4.BankRefNo as stateRefNo,
								T5.CountryDesc lovDescCustAddrCountryName 
        FROM 			  CustomerAddresses T1
        LEFT JOIN 		BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
        LEFT JOIN       RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
		LEFT JOIN       RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry AND T1.CustAddrProvince = T4.CPProvince
        LEFT JOIN       BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
		</createView>
	</changeSet>

<changeSet id="45" author="somasekhar">
		<createView viewName="CUSTOMERADDRESSES_VIEW" replaceIfExists="true">
		SELECT 			T1.custAddressId, T1.CustID , T1.CustAddrType,  T1.CustAddrHNbr , T1.CustFlatNbr, T1.CustAddrStreet , T1.CustAddrLine1 , T1.CustAddrLine2 , T1.CustPOBox , T1.CustAddrCity , 
								T1.TypeOfResidence,  T1.CustAddrProvince , T1.CustAddrCountry , T1.CustAddrZIP ,  T1.CustAddrPhone , T1.CustAddrFrom ,  T1.custAddrPriority ,
								T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,						
         						T2.AddrTypeDesc lovDescCustAddrTypeName  ,
        						T3.PCCityName lovDescCustAddrCityName  , T3.BankRefNo as cityRefNo,
          						T4.CPProvinceName lovDescCustAddrProvinceName  , T4.BankRefNo as stateRefNo,
								T5.CountryDesc lovDescCustAddrCountryName 
        FROM 			  CustomerAddresses_Temp T1
        LEFT JOIN 		BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
        LEFT JOIN       RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
		LEFT JOIN       RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry AND T1.CustAddrProvince = T4.CPProvince
        LEFT JOIN       BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
        UNION ALL 
       SELECT 			T1.custAddressId, T1.CustID , T1.CustAddrType,  T1.CustAddrHNbr , T1.CustFlatNbr, T1.CustAddrStreet , T1.CustAddrLine1 , T1.CustAddrLine2 , T1.CustPOBox , T1.CustAddrCity , 
								T1.TypeOfResidence,  T1.CustAddrProvince , T1.CustAddrCountry , T1.CustAddrZIP ,  T1.CustAddrPhone , T1.CustAddrFrom ,  T1.custAddrPriority ,
								T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId,						
         						T2.AddrTypeDesc lovDescCustAddrTypeName  ,
        						T3.PCCityName lovDescCustAddrCityName  , T3.BankRefNo as cityRefNo,
          						T4.CPProvinceName lovDescCustAddrProvinceName  , T4.BankRefNo as stateRefNo,
								T5.CountryDesc lovDescCustAddrCountryName 
        FROM 			  CustomerAddresses T1
        LEFT JOIN 		BMTAddressTypes T2   ON T1.CustAddrType = T2.AddrTypeCode
        LEFT JOIN       RMTProvinceVsCity T3   ON T1.CustAddrCountry = T3.PCCountry AND T1.CustAddrProvince = T3.PCProvince AND T1.CustAddrCity = T3.PCCity
		LEFT JOIN       RMTCountryVsProvince T4   ON T1.CustAddrCountry = T4.CPCountry AND T1.CustAddrProvince = T4.CPProvince
        LEFT JOIN       BMTCountries T5   ON T1.CustAddrCountry = T5.CountryCode
        WHERE NOT EXISTS ( SELECT 1 
                        FROM CustomerAddresses_Temp 
                          WHERE CustID = T1.CustID
                                  AND CustAddrType = T1.CustAddrType )
		</createView>
	</changeSet>
	


	


	<changeSet id="49" author="Sriram" >
		<sql>
	
			Delete From SecRights Where RIGHTNAME = 'button_BeneficiaryList_NewBeneficiary';
			INSERT INTO SECRIGHTS VALUES((SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_BeneficiaryList_NewBeneficiary','BeneficiaryList',0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID FROM SECGROUPS WHERE GRPCODE='BENEFICIARY_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_BeneficiaryList_NewBeneficiary'), 1, 0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
	
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>



<changeSet id="52" author="Sriram" >
		<addColumn tableName="Beneficiary">
			<column name="DefaultBeneficiary" type="boolean" defaultValue="0"/>
		</addColumn>
		<addColumn tableName="Beneficiary_Temp">
			<column name="DefaultBeneficiary" type="boolean" defaultValue="0"/>
		</addColumn>
		<sql>
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'BeneficiaryDialog_DefaultBeneficiary','BeneficiaryDialog',0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='BENEFICIARY_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='BeneficiaryDialog_DefaultBeneficiary'), 1, 0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0);

			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
</changeSet>
<changeSet id="53" author="Sriram">
	<createView viewName="Beneficiary_View" replaceIfExists="true"> 
		SELECT		T1.BeneficiaryId, T1.CustID, T1.BankBranchID, T1.AccNumber, T1.AccHolderName, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Email		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.BankCode, T2.BranchCode,T2.BranchDesc,T2.IFSC, T2.City, T3.BankName, T4.CustCIF, T4.CustShrtName,T1.BeneficiaryActive,T1.DefaultBeneficiary 
		FROM    	Beneficiary_Temp T1 INNER JOIN
					BankBranches T2 ON T1.BankBranchID = T2.BankBranchID  INNER JOIN
					BMTBankDetail T3  ON T2.BankCode=T3.BankCode INNER JOIN
					Customers  T4  ON T1.CustID = T4.CustID
		UNION ALL
		
		SELECT		T1.BeneficiaryId, T1.CustID, T1.BankBranchID, T1.AccNumber, T1.AccHolderName, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Email		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.BankCode, T2.BranchCode,T2.BranchDesc,T2.IFSC, T2.City, T3.BankName, T4.CustCIF, T4.CustShrtName,T1.BeneficiaryActive,T1.DefaultBeneficiary 		 
		FROM    	Beneficiary T1 INNER JOIN
					BankBranches T2 ON T1.BankBranchID = T2.BankBranchID  INNER JOIN
					BMTBankDetail T3  ON T2.BankCode=T3.BankCode INNER JOIN
					Customers  T4  ON T1.CustID = T4.CustID
		WHERE     NOT EXISTS (SELECT 1 FROM Beneficiary_TEMP WHERE BeneficiaryId = T1.BeneficiaryId)
	</createView>
	<createView viewName="Beneficiary_AView" replaceIfExists="true"> 
		SELECT		T1.BeneficiaryId, T1.CustID, T1.BankBranchID, T1.AccNumber, T1.AccHolderName, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Email		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.BankCode, T2.BranchCode,T2.BranchDesc,T2.IFSC, T2.City, T3.BankName, T4.CustCIF, T4.CustShrtName,T1.BeneficiaryActive,T1.DefaultBeneficiary 
		FROM    	Beneficiary T1 INNER JOIN
					BankBranches T2 ON T1.BankBranchID = T2.BankBranchID  INNER JOIN
					BMTBankDetail T3  ON T2.BankCode=T3.BankCode INNER JOIN
					Customers  T4  ON T1.CustID = T4.CustID
	</createView>
</changeSet>


<changeSet id="56" author="Somasekhar" >
		<addColumn tableName="PRESENTMENTHEADER">
			<column name="MandateId" type="bigint" />
		</addColumn>
		<addColumn tableName="PRESENTMENTHEADER_Temp">
			<column name="MandateId" type="bigint"/>
		</addColumn>
</changeSet>
<changeSet id="57" author="Somasekhar" >
		<createView viewName="PRESENTMENTHEADER_AVIEW" replaceIfExists="true">
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.MandateID,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS,T4.BANKCODE       
            FROM    	PRESENTMENTHEADER  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
			INNER JOIN  MANDATES T3 ON T3.MANDATEID = T1.MANDATEID
			INNER JOIN  BANKBRANCHES T4 ON T3.BANKBRANCHID = T4.BANKBRANCHID
		</createView>

		<createView viewName="PRESENTMENTHEADER_VIEW" replaceIfExists="true">
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE,	
						T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, T1.DBSTATUSID,
			            T2.PARTNERBANKNAME, T2.PARTNERBANKCODE,  T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
						T1.ImportStatusId,T1.TotalRecords,T1.ProcessedRecords,T1.SuccessRecords,T1.FailedRecords ,T4.BANKCODE
			FROM    	PresentmentHeader_Temp T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
            INNER JOIN  MANDATES T3 ON T3.MANDATEID = T1.MANDATEID
            INNER JOIN  BANKBRANCHES T4 ON T3.BANKBRANCHID = T4.BANKBRANCHID
			
			UNION ALL
			
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE,		
						T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID,
			            T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE,  T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
						T1.ImportStatusId,T1.TotalRecords,T1.ProcessedRecords,T1.SuccessRecords,T1.FailedRecords ,T4.BANKCODE
			FROM    	PRESENTMENTHEADER T1 
			LEFT JOIN  PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
            INNER JOIN MANDATES T3 ON T3.MANDATEID = T1.MANDATEID
            INNER JOIN BANKBRANCHES T4 ON T3.BANKBRANCHID = T4.BANKBRANCHID
			
			WHERE     NOT EXISTS (SELECT 1 FROM PRESENTMENTHEADER_TEMP WHERE ID = T1.ID)

		</createView>
</changeSet>

<changeSet id="58" author="Somasekhar" >
<dropColumn tableName="PRESENTMENTHEADER" columnName="MandateId"/>
<dropColumn tableName="PRESENTMENTHEADER_Temp" columnName="MandateId"/>
</changeSet>



<changeSet id="61" author="Somasekhar" >
		<createView viewName="PRESENTMENTHEADER_AVIEW" replaceIfExists="true">
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS      
            FROM    	PRESENTMENTHEADER  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
		
		</createView>

		<createView viewName="PRESENTMENTHEADER_VIEW" replaceIfExists="true">
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS      
            FROM    	PRESENTMENTHEADER_Temp  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
			UNION ALL
			
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS      
            FROM    	PRESENTMENTHEADER  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
			
			WHERE     NOT EXISTS (SELECT 1 FROM PRESENTMENTHEADER_TEMP WHERE ID = T1.ID)

		</createView>
</changeSet>


<changeSet id="62" author="Somasekhar" >
		<createView viewName="PRESENTMENTHEADER_AVIEW" replaceIfExists="true">
			 SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS  ,T3.BANKNAME      
            FROM    	PRESENTMENTHEADER  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
       LEFT JOIN   BMTBANKDETAIL T3 ON T3.BANKCODE = T1.BANKCODE
		
		</createView>

		<createView viewName="PRESENTMENTHEADER_VIEW" replaceIfExists="true">
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS      
            FROM    	PRESENTMENTHEADER_Temp  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
			UNION ALL
			
			SELECT		T1.ID, T1.REFERENCE, T1.PRESENTMENTDATE, T1.PARTNERBANKID, T1.FROMDATE, T1.TODATE, T1.STATUS, T1.MANDATETYPE, T1.LOANTYPE, T1.FINBRANCH, T1.SCHDATE	,T1.BANKCODE,
                        T1.VERSION , T1.LASTMNTBY, T1.LASTMNTON,T1.RECORDSTATUS, T1.ROLECODE, T1.NEXTROLECODE, T1.TASKID, T1.NEXTTASKID, T1.RECORDTYPE, T1.WORKFLOWID, 
                        T1.DBSTATUSID, T2.PARTNERBANKNAME, T2.PARTNERBANKCODE, T2.ACCOUNTNO PARTNERACCTNUMBER,T2.ACTYPE PARTNERACCTTYPE,
                        T1.IMPORTSTATUSID, T1.TOTALRECORDS,T1.PROCESSEDRECORDS,T1.SUCCESSRECORDS,T1.FAILEDRECORDS      
            FROM    	PRESENTMENTHEADER  T1 
			LEFT JOIN   PARTNERBANKS T2 ON T1.PARTNERBANKID = T2.PARTNERBANKID
			
			WHERE     NOT EXISTS (SELECT 1 FROM PRESENTMENTHEADER_TEMP WHERE ID = T1.ID)

		</createView>
</changeSet>
<changeSet id="36" author="Siva">
		<sql>
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYSTL',0,'ae_priDuePaid','Principal Due Paid - Bank','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYSTL',0,'ae_ExPriDuePaid','Principal Due Paid - Excess','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYSTL',0,'ae_EAPriDuePaid','Principal Due Paid - EMIAdvance','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYSTL',0,'ae_PAPriDuePaid','Principal Due Paid - Payable','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
			Insert into BMTAMOUNTCODES (ALLOWEDEVENT,ALLOWEDRIA,AMOUNTCODE,AMOUNTCODEDESC,AMOUNTCODEISACTIVE,VERSION,LASTMNTBY,LASTMNTON,RECORDSTATUS,ROLECODE,NEXTROLECODE,TASKID,NEXTTASKID,RECORDTYPE,WORKFLOWID) values ('EARLYSTL',0,'ae_priDueWaived','Principal Due Waived','1',1,1005,CURRENT_TIMESTAMP,'Approved',null,null,null,null,null,0);
		</sql>
</changeSet>

</databaseChangeLog>