<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

<property name="add.schema" value="dbo." dbms="mssql" />
<property name="add.schema" value=" " dbms="oracle" />
<property name="call.substr" value="substring" dbms="mssql" />
<property name="call.substr" value="substr" dbms="oracle" />
<property name="call.auditdb" value="PFFBFSQCAudit.." dbms="mssql" />
<property name="call.auditdb" value=" " dbms="oracle" />

	 
	<changeSet  author="durgaprasad.g" id="01">
		<createView replaceIfExists="true" viewName="VASRecording_AView">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc 
          
          FROM   VASRecording  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg 
		</createView>
	</changeSet>
	
	<changeSet author="durgaprasad.g" id="02">
		<createView replaceIfExists="true" viewName="VASRecording_View">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc 
          
          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg 
UNION ALL
SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc 
          
          FROM   VASRecording  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg 
          
          WHERE     NOT EXISTS
                    (SELECT     1  FROM          VASRecording_Temp WHERE      VasReference = T1.VasReference) 
		</createView>
	</changeSet>

	<changeSet author="Siva" id="03">
		<comment>SecGroupRights</comment>
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 

			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'FINVASRECORDING_MAKER', 'Finance Vas Recording Maker', 0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'button_FinVasRecordingDialog_btnNew','FinVasRecordingDialog',0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinVasRecordingDialog_btnNew'), 1, 0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0);

			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>

	<changeSet author="Siva" id="04">
		<comment>Sec Role groups</comment>
		<sql>
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);

			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FINVASRECORDING_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='RTL_BRANCH_CSR'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='FINVASRECORDING_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='LCMUR_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 

			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
	<changeSet author="Siva" id="05">
		<comment>Sec Group Rights</comment>
		<sql>
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 2, 'VASRecordingDialog_ExtendedFields','VASRecordingDialog',0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_ExtendedFields'), 1, 0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0);
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	<changeSet author="Siva" id="06">
		<comment>Sec Group Rights</comment>
		<sql>
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_VASRecordingDialog_btnDelete'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_VASRecordingDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_ValueDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_AccrualTillDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_RecurringDate'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_DsaId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_DmaId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_FulfilOfficerId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_ReferralId'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_ExtendedFields'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
						
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>

	<changeSet author="durgaprasad.g" id="07">
		<createTable tableName="FinTypeVASProducts">
			<column name="FinType" type="nvarchar(8)">
				<constraints nullable="false" foreignKeyName="FK_FinTypeVASProducts_FinType" references="RMTFinanceTypes(FinType)" />
			</column>
			<column name="VasProduct" type="nvarchar(8)">
				<constraints nullable="false"/>
			</column>
			<column name="Mandatory" type="boolean">
			 <constraints nullable="false" />
			 </column>
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="nvarchar(50)" />
			<column name="RoleCode" type="nvarchar(100)" />
			<column name="NextRoleCode" type="nvarchar(200)" />
			<column name="TaskId" type="nvarchar(50)" />
			<column name="NextTaskId" type="nvarchar(200)" />
			<column name="RecordType" type="nvarchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
		
	<changeSet author="durgaprasad.g" id="08">
		<addPrimaryKey columnNames="FinType, VasProduct" constraintName="FinTypeVASProd_Fin_Prod" tableName="FinTypeVASProducts" />
	</changeSet>
	
	<changeSet author="durgaprasad.g" id="09">
		<createTable tableName="FinTypeVASProducts_Temp">
			<column name="FinType" type="nvarchar(8)">
			<constraints nullable="false" />
			</column>
			<column name="VasProduct" type="nvarchar(8)">
			<constraints nullable="false" />
			</column>
			<column name="Mandatory" type="boolean" >
			<constraints nullable="false" />
			</column>
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="nvarchar(50)" />
			<column name="RoleCode" type="nvarchar(100)" />
			<column name="NextRoleCode" type="nvarchar(200)" />
			<column name="TaskId" type="nvarchar(50)" />
			<column name="NextTaskId" type="nvarchar(200)" />
			<column name="RecordType" type="nvarchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>
	</changeSet>
	
	<changeSet author="durgaprasad.g" id="10">
		<addPrimaryKey columnNames="FinType, VasProduct" constraintName="FinTypeVASProd_Temp_Fin_Prod" tableName="FinTypeVASProducts_Temp" />
	</changeSet>
	
	<changeSet  author="durgaprasad.g" id="11">
		<createView replaceIfExists="true" viewName="FinTypeVASProducts_AView">
		SELECT   FinType, VasProduct, Mandatory,  Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId,
          NextTaskId, RecordType, WorkflowId  FROM   FinTypeVASProducts 
		</createView>
	</changeSet>
	
	<changeSet author="durgaprasad.g" id="12">
		<createView replaceIfExists="true" viewName="FinTypeVASProducts_View">
		SELECT   FinType, VasProduct, Mandatory, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId,
        NextTaskId, RecordType, WorkflowId FROM   FinTypeVASProducts_Temp 
		UNION ALL
		SELECT   FinType, VasProduct, Mandatory, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId,
        NextTaskId, RecordType, WorkflowId FROM   FinTypeVASProducts T1
        WHERE     NOT EXISTS   (SELECT     1  FROM          FinTypeVASProducts_Temp WHERE    
			  FinType = T1.FinType AND VasProduct = T1.VasProduct) 
		</createView>
	</changeSet>
	
		<changeSet  author="Siva" id="13">
		<createView replaceIfExists="true" viewName="VASRecording_AView">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc
          
          FROM   VASRecording  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	
	<changeSet author="Siva" id="14">
		<createView replaceIfExists="true" viewName="VASRecording_View">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc
          
          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
UNION ALL
SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc
          
          FROM   VASRecording  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
          
          WHERE     NOT EXISTS
                    (SELECT     1  FROM          VASRecording_Temp WHERE      VasReference = T1.VasReference) 
		</createView>
	</changeSet>
	
	<changeSet author="Siva" id="15">
		<comment>Update Sec Group Rights</comment>
		<sql>
			UPDATE SECRIGHTS SET RightType= 3 Where RightName = 'VASRecordingDialog_ExtendedFields'; 
		</sql>
	</changeSet>
	
	<changeSet author="Siva" id="16">
		<comment>Update Sec Group Rights</comment>
		<sql>
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'FinanceMainDialog_ifscCode','FinanceMainDialog',0,1000,current_timestamp,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='RTL_BRANCH_CSR') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_COMMODITY_RM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_COMMODITY_TCSM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_STRCOMMODITY_RM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_STRCOMMODITY_TCSM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PBG_TAWARRUQ_BRANCH_CSR') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PBG_SUKUK_BRANCH_CSR') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_MUDARABA_CADDUM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_CORPMURABAHA_RM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_CORPMURABAHA_TCSM_EXT') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_WAKALA_RM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_WAKALA_TCSM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_IJARAH_CADDUM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_MUSHARAKA_CADDUM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_QARDHASSAN_CADDUM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_ROLLOVER_RM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_ROLLOVER_TCSM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='IJARAH_PRE_APPROVAL_SSO') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PBG_IJA_HF_NEW_FIN_SSO') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='PBG_IJA_CF_NEW_FIN_SSO') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='MUR_SER_SEGCHG_SSO') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FIN_MAINTAINRPYBASIC_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_MUR_SER_SCHCHGOREP_RM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_NONMUR_SER_SCHCHGOREP_RM') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='WBG_SER_SCHCHGOREP_RM_SEGCHG') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='SUKUK_PREAPPROVAL_SSO') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_ifscCode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		</sql>
	</changeSet>
	
	<changeSet  author="Siva" id="17">
		<createView replaceIfExists="true" viewName="VASRecording_TView">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc DsaIdDesc,
          T4.ROfficerDesc DmaIdDesc,T5.ROfficerDesc FulfilOfficerIdDesc,T6.ROfficerDesc ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc
          
          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	
	<changeSet author="Siva" id="18">
		<comment>SecGroupRights</comment>
		<sql>
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 

			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_Fee'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='FINVASRECORDING_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='VASRecordingDialog_FeePaymentMode'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>
	
	
	<changeSet author="Irfan" id="19">
		<addColumn tableName="FinServiceInstruction">
		<column name="ServiceReqNo" type="nvarchar(50)"/>
		<column name="Remarks" type="nvarchar(200)"/>
		</addColumn>
	</changeSet>
	<changeSet author="Irfan" id="20">
		<addColumn tableName="FinServiceInstruction_Temp">
		<column name="ServiceReqNo" type="nvarchar(50)"/>
		<column name="Remarks" type="nvarchar(200)"/>
		</addColumn>
	</changeSet>
	<changeSet  author="Irfan" id="21">
	<modifyDataType tableName="FinServiceInstruction" columnName="Remarks" newDataType="nvarchar(1000)"/>
	</changeSet>
	<changeSet  author="Irfan" id="22">
	<modifyDataType tableName="FinServiceInstruction_Temp" columnName="Remarks" newDataType="nvarchar(1000)"/>
	</changeSet>
	<changeSet author="Siva" id="23">
		<comment>SecGroupRights</comment>
		<sql>
						
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'VASCANCEL_MAKER', 'VAS Cancellation Maker', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			INSERT INTO SECGROUPS SELECT (SELECT MAX(GRPID)+1 FROM SECGROUPS), 'VASCANCEL_APPROVER', 'VAS Cancellation Approver', 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECGROUPS WHERE 0=0;
			
			INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 0, 'menuItem_Finance_VASCancel','MENU',0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0; 
			
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='VASCANCEL_MAKER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From SecRoleGroups),(Select GrpId  From SecGroups Where GrpCode='VASCANCEL_APPROVER'), (Select  RoleID  From SecRoles Where RoleCd='MSTGRP1_APPROVER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0); 
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_Finance'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Finance_VASCancel'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASCANCEL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_VASRecordingDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuCat_Finance'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='menuItem_Finance_VASCancel'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='VASCANCEL_APPROVER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_VASRecordingDialog_btnSave'), 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);
			
			UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
			UPDATE SEQSECGROUPS SET SEQNO= (SELECT MAX(GRPID) FROM SECGROUPS);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			UPDATE SEQSECROLEGROUPS SET SEQNO= (SELECT MAX(ROLEGRPID) FROM SECROLEGROUPS);
		</sql>
	</changeSet>
	
	<changeSet author="Srikanth" id="24">
	<delete tableName="ErrorDetails">
			<where>ErrorCode = '90125'</where>
		</delete>
		<insert tableName="ErrorDetails">
			<column name="ErrorCode">90125</column>
			<column name="ErrorLanguage">EN</column>
			<column name="ErrorSeverity">E</column>
			<column name="ErrorMessage"><![CDATA[{0} is invalid. Allowed Characters are [a-z A-Z 0-9 . and _] and must starts with Characters.]]></column>
			<column name="ErrorExtendedMessage"></column>
			<column name="RecordStatus">Approved</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType"></column>
			<column name="WorkflowId">0</column>
			<column name="LastMntOn"></column>
			<column name="LastMntBy">1000</column>
			<column name="Version">0</column>
		</insert>
	</changeSet>
	<changeSet  author="Irfan" id="25">
	<modifyDataType tableName="FinTypeVASProducts" columnName="Mandatory" newDataType="nvarchar(8)"/>
	</changeSet>
	<changeSet  author="Irfan" id="26">
	<modifyDataType tableName="FinTypeVASProducts_Temp" columnName="Mandatory" newDataType="nvarchar(8)"/>
	</changeSet>
	
	<changeSet author="Siva" id="27">
		<addColumn tableName="FinanceMain">
			<column name="UnPlanEMIHLockPeriod" type="int" />
			<column name="UnPlanEMICpz" type="boolean" />
			<column name="ReAgeCpz" type="boolean" />
			<column name="MaxUnplannedEmi" type="int" />
			<column name="MaxReAgeHolidays" type="int" />
		</addColumn>
	</changeSet>
	
	<changeSet author="Siva" id="28">
		<addColumn tableName="FinanceMain_Temp">
			<column name="UnPlanEMIHLockPeriod" type="int" />
			<column name="UnPlanEMICpz" type="boolean" />
			<column name="ReAgeCpz" type="boolean" />
			<column name="MaxUnplannedEmi" type="int" />
			<column name="MaxReAgeHolidays" type="int" />
		</addColumn>
	</changeSet>
	
	<changeSet author="Siva" id="29">
		<addColumn tableName="RejectFinanceMain">
			<column name="UnPlanEMIHLockPeriod" type="int" />
			<column name="UnPlanEMICpz" type="boolean" />
			<column name="ReAgeCpz" type="boolean" />
			<column name="MaxUnplannedEmi" type="int" />
			<column name="MaxReAgeHolidays" type="int" />
		</addColumn>
	</changeSet>
	<changeSet author="Siva" id="30">
		<addColumn tableName="FinanceMain_PA">
			<column name="UnPlanEMIHLockPeriod" type="int" />
			<column name="UnPlanEMICpz" type="boolean" />
			<column name="ReAgeCpz" type="boolean" />
			<column name="MaxUnplannedEmi" type="int" />
			<column name="MaxReAgeHolidays" type="int" />
		</addColumn>
	</changeSet>

	<changeSet author="Siva" id="31">
		<update tableName="FinanceMain">
			<column name="UnPlanEMIHLockPeriod">0</column>
			<column name="UnPlanEMICpz">0</column>
			<column name="ReAgeCpz">0</column>
			<column name="MaxUnplannedEmi">0</column>
			<column name="MaxReAgeHolidays">0</column>
		</update>
	</changeSet>

	<changeSet author="Siva" id="32">
		<update tableName="FinanceMain_Temp">
			<column name="UnPlanEMIHLockPeriod">0</column>
			<column name="UnPlanEMICpz">0</column>
			<column name="ReAgeCpz">0</column>
			<column name="MaxUnplannedEmi">0</column>
			<column name="MaxReAgeHolidays">0</column>
		</update>
	</changeSet>
	<changeSet author="Siva" id="33">
		<update tableName="RejectFinanceMain">
			<column name="UnPlanEMIHLockPeriod">0</column>
			<column name="UnPlanEMICpz">0</column>
			<column name="ReAgeCpz">0</column>
			<column name="MaxUnplannedEmi">0</column>
			<column name="MaxReAgeHolidays">0</column>
		</update>
	</changeSet>
	
	<changeSet author="Siva" id="34" >
	    <createView replaceIfExists="true" viewName="FinanceMain_AView">
	   		SELECT     T1.FinReference, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, T1.GrcPftFrq, 
                      T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, T1.RepayBaseRate, 
                      T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, T1.RepayRvwFrq, 
                      T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, T1.GraceFlatAmount, 
                      T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, T1.RepayRateBasis, 
                      T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, T1.LastRepay, 
                      T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment  lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.CcyDesc  lovDescFinCcyName, T3.SchdMethodDesc  lovDescScheduleMethodName, T4.IntRateBasisDesc  lovDescProfitDaysBasisName, 
                      T5.BRTypeDesc  lovDescGraceBaseRateName, T6.SRTypeDesc  lovDescGraceSpecialRateName, T7.FinTypeDesc  lovDescFinTypeName, 
                      T8.BRTypeDesc  lovDescRepayBaseRateName, T9.SRTypeDesc  lovDescRepaySpecialRateName, T2.CcyEditField  lovDescFinFormatter, 
                      T7.FinIsAlwMD  lovDescFinIsAlwMD, T7.FinMaxAmount  lovDescFinMaxAmt, T7.FinMinAmount  lovDescFinMinAmount, 
                      T1.MinDownpayPerc, T7.FinIsAlwDifferment  lovDescFinAlwDeferment, T7.FinIsDwPayRequired  lovDescDwnPayReq, 
                      T7.FinMaxDifferment  lovDescFinMaxDifferment, T10.CustCIF  lovDescCustCIF, T10.CustFName  lovDescCustFName, T10.CustLName  lovDescCustLName, 
                      T12.BranchDesc  lovDescFinBranchName, T1.LastRepayDate, T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate, 
                       T1.AllowGrcRepay, 
                      T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef, T1.DepreciationFrq, T1.FinContractDate, 
                      T13.SaluationDesc  lovDescSalutationName, T10.CustShrtName  lovDescCustShrtName, T10.CustCoreBank  lovDescCustCoreBank, T1.NextDepDate, 
                      T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, T1.AlwIndRate, T1.IndBaseRate, T1.GrcAlwIndRate, T1.GrcIndBaseRate, 
                      T15.BRTypeDesc  lovDescIndBaseRateName, T16.BRTypeDesc  lovDescGrcIndBaseRateName, T17.AcrTillLBD  lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T7.FinCategory  lovDescProductCodeName, T1.ClosingStatus, T1.FinApprovedDate, 
                      T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, T10.CustCtgCode  lovDescCustCtgCode, 
                      T19.CmtTitle lovDescCommitmentRefName, T1.MigratedFinance, T1.ScheduleMaintained, T1.ScheduleRegenerated, T1.FinPurpose, 
                      T20.ValueDesc  lovDescFinPurposeName, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.bankName, T1.iban, T1.accountType, T1.DdaReferenceNo, 
                      T7.FinScheduleOn  LovDescFinScheduleOn, T1.CustDSR, T1.Authorization1, T1.Authorization2, T21.AuthName  lovDescAuthorization1Name, 
                      T22.AuthName  lovDescAuthorization2Name, T1.JointAccount, T1.JointCustId, T23.CustShrtName  lovDescJointCustShrtName, 
                      T23.CustCIF  lovDescJointCustCIF, '0'  AvailCommitAmount, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, T1.SecurityCollateral, 
                      T1.CustomerAcceptance, T1.Approved, T1.CbbApprovalRequired, T1.CbbApproved, T1.Discrepancy, T1.LimitApproved, T1.InvestmentRef, T1.GraceTerms, 
                      T7.FinDivision  lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.TakafulFrq, T1.TakafulRate, T1.WaiverReason, T1.TakafulRef, T1.TakafulRequired, 
                      T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc  LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T2.CcyEditField  ReportFormat, T1.DeviationApproval, T1.PptTakafulRequired, T1.PptTakafulFrq, T1.PptWaiverReason, T1.PptTakafulRate, T1.PptTakafulRef, 
                      T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T25.BRTypeDesc  GrcAdvBaseRateDesc, T26.BRTypeDesc  RpyAdvBaseRateDesc, T1.SupplementRent, T1.IncreasedCost, T1.CreditInsAmt, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId,T1.FinCancelAc,T28.GenDeptDesc lovDescAccountsOfficer,T29.AgreeName,T29.MMAReference LovDescMMAReference,
					  T1.DSACode,T30.ROfficerDesc DSACodeDesc,T1.TDSApplicable, T31.LimitDesc lovDescLimitRefName,T1.TakafulStatus, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays
						FROM         FinanceMain T1 INNER JOIN
                      RMTCurrencies  T2 ON T1.FinCcy = T2.CcyCode LEFT OUTER JOIN
                      BMTSchdMethod  T3 ON T1.ScheduleMethod = T3.SchdMethod LEFT OUTER JOIN
                      BMTIntRateBasisCodes  T4 ON T1.ProfitDaysBasis = T4.IntRateBasisCode LEFT OUTER JOIN
                      RMTBaseRateCodes T5 ON T1.GraceBaseRate = T5.BRType LEFT OUTER JOIN
                      RMTSplRateCodes  T6 ON T1.GraceSpecialRate = T6.SRType INNER JOIN
                      RMTFinanceTypes  T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBaseRateCodes T8 ON T1.RepayBaseRate = T8.BRType LEFT OUTER JOIN
                      RMTSplRateCodes  T9 ON T1.RepaySpecialRate = T9.SRType LEFT OUTER JOIN
                      RMTBaseRateCodes T15 ON T1.IndBaseRate = T15.BRType LEFT OUTER JOIN
                      RMTBaseRateCodes T16 ON T1.GrcIndBaseRate = T16.BRType LEFT OUTER JOIN
                      Customers  T10 ON T1.CustID = T10.CustID LEFT OUTER JOIN
                      BMTSalutations  T13 ON T10.CustSalutationCode = T13.SalutationCode LEFT OUTER JOIN
                      RMTBranches  T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      FinPftDetails  T17 ON T17.FinReference = T1.FinReference LEFT OUTER JOIN
                      Commitments T19 ON T1.FinCommitmentRef = T19.CmtReference AND T10.CustID = T19.custID LEFT OUTER JOIN
                      RMTLovFieldDetail  T20 ON T20.FieldCode = 'FINASSTYP' AND T1.FinPurpose = T20.FieldCodeValue LEFT OUTER JOIN
                      AMTAuthorization  T21 ON T1.Authorization1 = T21.AuthUserId LEFT OUTER JOIN
                      AMTAuthorization  T22 ON T1.Authorization2 = T22.AuthUserId LEFT OUTER JOIN
                      Customers  T23 ON T1.JointCustId = T23.CustID LEFT OUTER JOIN
                      StepPolicyHeader  T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      RMTBaseRateCodes  T25 ON T1.GrcAdvBaseRate = T25.BRType LEFT OUTER JOIN
                      RMTBaseRateCodes  T26 ON T1.RpyAdvBaseRate = T26.BRType LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN 
					  RMTGENDEPARTMENTS T28 ON T1.ACCOUNTSOFFICER = T28.GENDEPARTMENT LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGENDEPARTMENTS T35 ON T1.SalesDepartment = T35.GENDEPARTMENT LEFT OUTER JOIN
                      LimitAPIDetails T31 ON T1.FinLimitRef = T31.LimitRef AND T10.CustCIF = T31.CustomerReference INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode -- New Filed
	    </createView>
    </changeSet>
	
		
	<changeSet author="Siva" id="35" >
	    <createView replaceIfExists="true" viewName="FinanceMain_View">
	   		SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.CcyDesc lovDescFinCcyName, T3.SchdMethodDesc lovDescScheduleMethodName, T4.IntRateBasisDesc lovDescProfitDaysBasisName, 
                      T5.BRTypeDesc lovDescGraceBaseRateName, T6.SRTypeDesc lovDescGraceSpecialRateName, T7.FinTypeDesc lovDescFinTypeName, 
                      T8.BRTypeDesc lovDescRepayBaseRateName, T9.SRTypeDesc lovDescRepaySpecialRateName, T2.CcyEditField lovDescFinFormatter, 
                      T7.FinIsAlwMD lovDescFinIsAlwMD, T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T10.CustCIF lovDescCustCIF, T10.CustFName lovDescCustFName, T10.CustLName lovDescCustLName, T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, T13.SaluationDesc lovDescSalutationName, T10.CustShrtName lovDescCustShrtName, 
                      T10.CustCoreBank lovDescCustCoreBank, T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, T1.AlwIndRate, T1.IndBaseRate, T1.GrcAlwIndRate, 
                      T1.GrcIndBaseRate, T15.BRTypeDesc lovDescIndBaseRateName, T16.BRTypeDesc lovDescGrcIndBaseRateName, T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T7.FinCategory lovDescProductCodeName, T10.CustCtgCode lovDescCustCtgCode, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                      T19.CmtTitle lovDescCommitmentRefName, T31.LimitDesc lovDescLimitRefName, T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T20.ValueDesc lovDescFinPurposeName, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR, T1.Authorization1, T1.Authorization2, 
                      T21.AuthName lovDescAuthorization1Name, T22.AuthName lovDescAuthorization2Name, T1.JointAccount, T1.JointCustId, 
                      T23.CustShrtName lovDescJointCustShrtName, T23.CustCIF lovDescJointCustCIF, '0' AvailCommitAmount, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral, T1.CustomerAcceptance, T1.Approved, T1.CbbApprovalRequired, T1.CbbApproved, T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.TakafulFrq, T1.TakafulRate, T1.WaiverReason, T1.TakafulRef, T1.TakafulRequired, 
                      T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T2.CcyEditField ReportFormat, T1.DeviationApproval, T1.PptTakafulRequired, T1.PptTakafulFrq, T1.PptWaiverReason, T1.PptTakafulRate, T1.PptTakafulRef, 
                      T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T25.BRTypeDesc GrcAdvBaseRateDesc, T26.BRTypeDesc RpyAdvBaseRateDesc, T1.SupplementRent, T1.IncreasedCost, T1.CreditInsAmt, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T29.AgreeName, T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					  T29.MMAReference  LovDescMMAReference,T1.TDSApplicable,T1.TakafulStatus, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays
						FROM         FinanceMain_Temp T1 INNER JOIN
                      RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode LEFT OUTER JOIN
                      BMTSchdMethod T3 ON T1.ScheduleMethod = T3.SchdMethod LEFT OUTER JOIN
                      BMTIntRateBasisCodes T4 ON T1.ProfitDaysBasis = T4.IntRateBasisCode LEFT OUTER JOIN
                      RMTBaseRateCodes T5 ON T1.GraceBaseRate = T5.BRType LEFT OUTER JOIN
                      RMTSplRateCodes T6 ON T1.GraceSpecialRate = T6.SRType INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBaseRateCodes T8 ON T1.RepayBaseRate = T8.BRType LEFT OUTER JOIN
                      RMTSplRateCodes T9 ON T1.RepaySpecialRate = T9.SRType LEFT OUTER JOIN
                      Customers T10 ON T1.CustID = T10.CustID LEFT OUTER JOIN
                      BMTSalutations T13 ON T10.CustSalutationCode = T13.SalutationCode LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      RMTBaseRateCodes T15 ON T1.IndBaseRate = T15.BRType LEFT OUTER JOIN
                      RMTBaseRateCodes T16 ON T1.GrcIndBaseRate = T16.BRType LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      Commitments T19 ON T1.FinCommitmentRef = T19.CmtReference AND T10.CustID = T19.custID LEFT OUTER JOIN
                      RMTLOVFielddetail T20 ON T20.FieldCode = 'FINASSTYP' AND T1.FinPurpose = T20.FieldCodeValue LEFT OUTER JOIN
                      AMTAuthorization T21 ON T1.Authorization1 = T21.AuthUserId LEFT OUTER JOIN
                      AMTAuthorization T22 ON T1.Authorization2 = T22.AuthUserId LEFT OUTER JOIN
                      Customers T23 ON T1.JointCustId = T23.CustID LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      RMTBaseRateCodes T25 ON T1.GrcAdvBaseRate = T25.BRType LEFT OUTER JOIN
                      RMTBaseRateCodes T26 ON T1.RpyAdvBaseRate = T26.BRType LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment LEFT OUTER JOIN
                      LimitAPIDetails T31 ON T1.FinLimitRef = T31.LimitRef AND T10.CustCIF = T31.CustomerReference INNER JOIN  
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode -- New Filed
			 
	UNION ALL
	SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.CcyDesc lovDescFinCcyName, T3.SchdMethodDesc lovDescScheduleMethodName, T4.IntRateBasisDesc lovDescProfitDaysBasisName, 
                      T5.BRTypeDesc lovDescGraceBaseRateName, T6.SRTypeDesc lovDescGraceSpecialRateName, T7.FinTypeDesc lovDescFinTypeName, 
                      T8.BRTypeDesc lovDescRepayBaseRateName, T9.SRTypeDesc lovDescRepaySpecialRateName, T2.CcyEditField lovDescFinFormatter, 
                      T7.FinIsAlwMD lovDescFinIsAlwMD, T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T10.CustCIF lovDescCustCIF, T10.CustFName lovDescCustFName, T10.CustLName lovDescCustLName, T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, T13.SaluationDesc lovDescSalutationName, T10.CustShrtName lovDescCustShrtName, 
                      T10.CustCoreBank lovDescCustCoreBank, T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, T1.AlwIndRate, T1.IndBaseRate, T1.GrcAlwIndRate, 
                      T1.GrcIndBaseRate, T15.BRTypeDesc lovDescIndBaseRateName, T16.BRTypeDesc lovDescGrcIndBaseRateName, T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T7.FinCategory lovDescProductCodeName, T10.CustCtgCode lovDescCustCtgCode, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                      T19.CmtTitle lovDescCommitmentRefName, T31.LimitDesc lovDescLimitRefName, T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T20.ValueDesc lovDescFinPurposeName, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR, T1.Authorization1, T1.Authorization2, 
                      T21.AuthName lovDescAuthorization1Name, T22.AuthName lovDescAuthorization2Name, T1.JointAccount, T1.JointCustId, 
                      T23.CustShrtName lovDescJointCustShrtName, T23.CustCIF lovDescJointCustCIF, '0' AvailCommitAmount, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral, T1.CustomerAcceptance, T1.Approved, T1.CbbApprovalRequired, T1.CbbApproved, T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.TakafulFrq, T1.TakafulRate, T1.WaiverReason, T1.TakafulRef, T1.TakafulRequired, 
                      T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T2.CcyEditField ReportFormat, T1.DeviationApproval, T1.PptTakafulRequired, T1.PptTakafulFrq, T1.PptWaiverReason, T1.PptTakafulRate, T1.PptTakafulRef, 
                      T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T25.BRTypeDesc GrcAdvBaseRateDesc, T26.BRTypeDesc RpyAdvBaseRateDesc, T1.SupplementRent, T1.IncreasedCost, T1.CreditInsAmt, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T29.AgreeName, T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					  T29.MMAReference LovDescMMAReference,T1.TDSApplicable,T1.TakafulStatus, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,
					  T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb ,  T1.ApplicationNo ,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays
						FROM         FinanceMain T1 INNER JOIN
                      RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode LEFT OUTER JOIN
                      BMTSchdMethod T3 ON T1.ScheduleMethod = T3.SchdMethod LEFT OUTER JOIN
                      BMTIntRateBasisCodes T4 ON T1.ProfitDaysBasis = T4.IntRateBasisCode LEFT OUTER JOIN
                      RMTBaseRateCodes T5 ON T1.GraceBaseRate = T5.BRType LEFT OUTER JOIN
                      RMTSplRateCodes T6 ON T1.GraceSpecialRate = T6.SRType INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBaseRateCodes T8 ON T1.RepayBaseRate = T8.BRType LEFT OUTER JOIN
                      RMTSplRateCodes T9 ON T1.RepaySpecialRate = T9.SRType LEFT OUTER JOIN
                      Customers T10 ON T1.CustID = T10.CustID LEFT OUTER JOIN
                      BMTSalutations T13 ON T10.CustSalutationCode = T13.SalutationCode LEFT OUTER JOIN
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      RMTBaseRateCodes T15 ON T1.IndBaseRate = T15.BRType LEFT OUTER JOIN
                      RMTBaseRateCodes T16 ON T1.GrcIndBaseRate = T16.BRType LEFT OUTER JOIN
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN
                      Commitments T19 ON T1.FinCommitmentRef = T19.CmtReference AND T10.CustID = T19.custID LEFT OUTER JOIN
                      RMTLOVFielddetail T20 ON T20.FieldCode = 'FINASSTYP' AND T1.FinPurpose = T20.FieldCodeValue LEFT OUTER JOIN
                      AMTAuthorization T21 ON T1.Authorization1 = T21.AuthUserId LEFT OUTER JOIN
                      AMTAuthorization T22 ON T1.Authorization2 = T22.AuthUserId LEFT OUTER JOIN
                      Customers T23 ON T1.JointCustId = T23.CustID LEFT OUTER JOIN
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      RMTBaseRateCodes T25 ON T1.GrcAdvBaseRate = T25.BRType LEFT OUTER JOIN
                      RMTBaseRateCodes T26 ON T1.RpyAdvBaseRate = T26.BRType LEFT OUTER JOIN
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN 
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN 
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment LEFT OUTER JOIN
                      LimitAPIDetails T31 ON T1.FinLimitRef = T31.LimitRef AND T10.CustCIF = T31.CustomerReference INNER JOIN --not using 
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode -- New Filed
						WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM          FinanceMain_Temp
                            WHERE      (FINREFERENCE = T1.FINREFERENCE)))
	    </createView>
    </changeSet>
	
	<changeSet author="Siva" id="36" >
	    <createView replaceIfExists="true" viewName="FinanceMain_TView">
	   		SELECT     T1.FinReference, T1.InvestmentRef, T1.NumberOfTerms, T1.GrcPeriodEndDate, T1.AllowGrcPeriod, T1.GraceBaseRate, T1.GraceSpecialRate, T1.GrcPftRate, 
                      T1.GrcPftFrq, T1.NextGrcPftDate, T1.AllowGrcPftRvw, T1.GrcPftRvwFrq, T1.NextGrcPftRvwDate, T1.AllowGrcCpz, T1.GrcCpzFrq, T1.NextGrcCpzDate, 
                      T1.RepayBaseRate, T1.RepaySpecialRate, T1.RepayProfitRate, T1.RepayFrq, T1.NextRepayDate, T1.RepayPftFrq, T1.NextRepayPftDate, T1.AllowRepayRvw, 
                      T1.RepayRvwFrq, T1.NextRepayRvwDate, T1.AllowRepayCpz, T1.RepayCpzFrq, T1.NextRepayCpzDate, T1.MaturityDate, T1.CpzAtGraceEnd, T1.DownPayment, 
                      T1.GraceFlatAmount, T1.ReqRepayAmount, T1.TotalProfit, T1.TotalCpz, T1.TotalGrossPft, T1.TotalGrossGrcPft, T1.TotalGracePft, T1.TotalGraceCpz, T1.GrcRateBasis, 
                      T1.RepayRateBasis, T1.FinType, T1.FinRemarks, T1.FinCcy, T1.ScheduleMethod, T1.ProfitDaysBasis, T1.ReqMaturity, T1.CalTerms, T1.CalMaturity, T1.FirstRepay, 
                      T1.LastRepay, T1.FinStartDate, T1.FinAmount, T1.FinAmount + T1.FeeChargeAmt - T1.DownPayment lovDescFinancingAmount, T1.FinRepaymentAmount, T1.CustID, 
                      T1.Defferments, T1.PlanDeferCount, T1.FinBranch, T1.FinSourceID, T1.AllowedDefRpyChange, T1.AvailedDefRpyChange, T1.AllowedDefFrqChange, 
                      T1.AvailedDefFrqChange, T1.RecalType, T1.FinAssetValue, T1.DisbAccountId, T1.RepayAccountId, T1.FinIsActive, T1.LimitValid, T1.OverrideLimit, T1.SecurityDeposit, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.CcyDesc lovDescFinCcyName, T3.SchdMethodDesc lovDescScheduleMethodName, T4.IntRateBasisDesc lovDescProfitDaysBasisName, 
                      T5.BRTypeDesc lovDescGraceBaseRateName, T6.SRTypeDesc lovDescGraceSpecialRateName, T7.FinTypeDesc lovDescFinTypeName, 
                      T8.BRTypeDesc lovDescRepayBaseRateName, T9.SRTypeDesc lovDescRepaySpecialRateName, T2.CcyEditField lovDescFinFormatter, 
                      T7.FinIsAlwMD lovDescFinIsAlwMD, T7.FinMaxAmount lovDescFinMaxAmt, T7.FinMinAmount lovDescFinMinAmount, T1.MinDownpayPerc, 
                      T7.FinIsAlwDifferment lovDescFinAlwDeferment, T7.FinIsDwPayRequired lovDescDwnPayReq, T7.FinMaxDifferment lovDescFinMaxDifferment, 
                      T10.CustCIF lovDescCustCIF, T10.CustFName lovDescCustFName, T10.CustLName lovDescCustLName, T12.BranchDesc lovDescFinBranchName, T1.LastRepayDate, 
                      T1.LastRepayPftDate, T1.LastRepayRvwDate, T1.LastRepayCpzDate,  
                      T1.AllowGrcRepay, T1.GrcSchdMthd, T1.GrcMargin, T1.RepayMargin, T1.FinCurrAssetValue, T1.FinCommitmentRef, T1.FinLimitRef,
                      T1.DepreciationFrq, T1.FinContractDate, T13.SaluationDesc lovDescSalutationName, T10.CustShrtName lovDescCustShrtName, 
                      T10.CustCoreBank lovDescCustCoreBank, T1.NextDepDate, T1.LastDepDate, T1.FinAccount, T1.FinCustPftAccount, T1.AlwIndRate, T1.IndBaseRate, T1.GrcAlwIndRate, 
                      T1.GrcIndBaseRate, T15.BRTypeDesc lovDescIndBaseRateName, T16.BRTypeDesc lovDescGrcIndBaseRateName, T17.AcrTillLBD lovDescAccruedTillLBD, 
                      T7.FinRvwRateApplFor, T7.FinGrcRvwRateApplFor, T1.TotalRepayAmt, T7.FinCategory lovDescProductCodeName, T10.CustCtgCode lovDescCustCtgCode, 
                      T1.ClosingStatus, T1.FinApprovedDate, T1.FeeChargeAmt, T1.Blacklisted, T1.FinRepayPftOnFrq, T1.AnualizedPercRate, T1.EffectiveRateOfReturn, 
                      T19.CmtTitle lovDescCommitmentRefName, T31.LimitDesc lovDescLimitRefName, T1.MigratedFinance, T1.ScheduleMaintained, 
                      T1.ScheduleRegenerated, T1.FinPurpose, T20.ValueDesc lovDescFinPurposeName, T1.FinStatus, T1.FinStsReason, T1.InitiateUser, T1.BankName, T1.iban, 
                      T1.AccountType, T1.DdaReferenceNo, T7.FinScheduleOn LovDescFinScheduleOn, T1.CustDSR, T1.Authorization1, T1.Authorization2, 
                      T21.AuthName lovDescAuthorization1Name, T22.AuthName lovDescAuthorization2Name, T1.JointAccount, T1.JointCustId, 
                      T23.CustShrtName lovDescJointCustShrtName, T23.CustCIF lovDescJointCustCIF, '0' AvailCommitAmount, T1.DownPayBank, T1.DownPaySupl, T1.DownPayAccount, 
                      T1.SecurityCollateral, T1.CustomerAcceptance, T1.Approved, T1.CbbApprovalRequired, T1.CbbApproved, T1.Discrepancy, T1.LimitApproved, T1.GraceTerms, 
                      T7.FinDivision lovDescFinDivision, T1.RcdMaintainSts, T1.FinRepayMethod, T1.GrcProfitDaysBasis, T1.StepFinance,T1.StepType, T1.StepPolicy, T1.AlwManualSteps, 
                      T1.NoOfSteps, T1.TakafulFrq, T1.TakafulRate, T1.WaiverReason, T1.TakafulRef, T1.TakafulRequired, 
                      T1.LinkedFinRef, T1.NextUserId, T1.Priority, T24.PolicyDesc LovDescStepPolicyName, T1.GrcMinRate, T1.GrcMaxRate, T1.RpyMinRate, T1.RpyMaxRate, 
                      T2.CcyEditField ReportFormat, T1.DeviationApproval, T1.PptTakafulRequired, T1.PptTakafulFrq, T1.PptWaiverReason, T1.PptTakafulRate, T1.PptTakafulRef, 
                      T1.ManualSchedule, T1.TakeOverFinance, T1.GrcAdvBaseRate, T1.GrcAdvMargin, T1.GrcAdvPftRate, T1.RpyAdvBaseRate, T1.RpyAdvMargin, T1.RpyAdvPftRate, 
                      T25.BRTypeDesc GrcAdvBaseRateDesc, T26.BRTypeDesc RpyAdvBaseRateDesc, T1.SupplementRent, T1.IncreasedCost, T1.CreditInsAmt, T1.RolloverFrq, 
                      T1.NextRolloverDate, T27.CustStsDescription, T1.ShariaStatus, T1.InitiateDate, T1.FINPREAPPROVEDREF, T1.MMAId, T1.AccountsOfficer, 
                      T1.feeAccountId, T1.FinCancelAc,T29.AgreeName, T28.GenDeptDesc lovDescAccountsOfficer,T1.DSACode,T30.ROfficerDesc DSACodeDesc,
					  T29.MMAReference LovDescMMAReference,T1.TDSApplicable,T1.TakafulStatus, T32.ProductCategory,T1.MandateID,T1.DroplineFrq,T1.FirstDroplineDate,
					  T1.PftServicingODLimit,T1.InsuranceAmt,T1.DeductInsDisb,T1.AlwBPI , T1.BpiTreatment , T1.PlanEMIHAlw , T1.PlanEMIHMethod , 
					  T1.PlanEMIHMaxPerYear , T1.PlanEMIHMax , T1.PlanEMIHLockPeriod , T1.PlanEMICpz , T1.CalRoundingMode , T1.AlwMultiDisb , T1.ApplicationNo ,
					  T1.ReferralId , T33.ROfficerDesc ReferralIdDesc, T1.DmaCode , T34.ROfficerDesc DmaCodeDesc,  T1.SalesDepartment , T35.GenDeptDesc SalesDepartmentDesc , T1.QuickDisb , T1.WifReference,
					  T1.UnPlanEMIHLockPeriod , T1.UnPlanEMICpz, T1.ReAgeCpz, T1.MaxUnplannedEmi, T1.MaxReAgeHolidays
			FROM         FinanceMain_Temp T1 INNER JOIN
                      RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode LEFT OUTER JOIN --not req
                      BMTSchdMethod T3 ON T1.ScheduleMethod = T3.SchdMethod LEFT OUTER JOIN --verify with combobox reqrmnt
                      BMTIntRateBasisCodes T4 ON T1.ProfitDaysBasis = T4.IntRateBasisCode LEFT OUTER JOIN
                      RMTBaseRateCodes T5 ON T1.GraceBaseRate = T5.BRType LEFT OUTER JOIN --remove join and use single query
                      RMTSplRateCodes T6 ON T1.GraceSpecialRate = T6.SRType INNER JOIN
                      RMTFinanceTypes T7 ON T1.FinType = T7.FinType LEFT OUTER JOIN
                      RMTBaseRateCodes T8 ON T1.RepayBaseRate = T8.BRType LEFT OUTER JOIN --remove join and use single query
                      RMTSplRateCodes T9 ON T1.RepaySpecialRate = T9.SRType LEFT OUTER JOIN
                      Customers T10 ON T1.CustID = T10.CustID LEFT OUTER JOIN
                      BMTSalutations T13 ON T10.CustSalutationCode = T13.SalutationCode LEFT OUTER JOIN --not using it anywhere.remove it
                      RMTBranches T12 ON T1.FinBranch = T12.BranchCode LEFT OUTER JOIN
                      RMTBaseRateCodes T15 ON T1.IndBaseRate = T15.BRType LEFT OUTER JOIN --remove join and use single query
                      RMTBaseRateCodes T16 ON T1.GrcIndBaseRate = T16.BRType LEFT OUTER JOIN --remove join and use single query
                      FINPFTDETAILS T17 ON T17.FINREFERENCE = T1.FINREFERENCE LEFT OUTER JOIN --not req at org
                      Commitments T19 ON T1.FinCommitmentRef = T19.CmtReference AND T10.CustID = T19.custID LEFT OUTER JOIN --not using
                      RMTLOVFielddetail T20 ON T20.FieldCode = 'FINASSTYP' AND T1.FinPurpose = T20.FieldCodeValue LEFT OUTER JOIN
                      AMTAuthorization T21 ON T1.Authorization1 = T21.AuthUserId LEFT OUTER JOIN
                      AMTAuthorization T22 ON T1.Authorization2 = T22.AuthUserId LEFT OUTER JOIN
                      Customers T23 ON T1.JointCustId = T23.CustID LEFT OUTER JOIN --not using
                      StepPolicyHeader T24 ON T1.StepPolicy = T24.PolicyCode LEFT OUTER JOIN
                      RMTBaseRateCodes T25 ON T1.GrcAdvBaseRate = T25.BRType LEFT OUTER JOIN --remove join and use single query
                      RMTBaseRateCodes T26 ON T1.RpyAdvBaseRate = T26.BRType LEFT OUTER JOIN --remove join and use single query
                      BMTCustStatusCodes T27 ON T1.finStatus = T27.CustStsCode LEFT OUTER JOIN --not using in org
                      RMTGenDepartments T28 ON T1.AccountsOfficer = T28.GenDepartment LEFT OUTER JOIN
					  MMAgreements T29 ON T1.MMAId = T29.MMAId LEFT OUTER JOIN
					  RelationshipOfficers T30 ON T1.DSACode = T30.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T33 ON T1.ReferralId = T33.ROfficerCode LEFT OUTER JOIN
					  RelationshipOfficers T34 ON T1.DmaCode = T34.ROfficerCode LEFT OUTER JOIN
					  RMTGenDepartments T35 ON T1.SalesDepartment = T35.GenDepartment LEFT OUTER JOIN
                      LimitAPIDetails T31 ON T1.FinLimitRef = T31.LimitRef AND T10.CustCIF = T31.CustomerReference  INNER JOIN --not using 
                      BMTProduct T32 ON T7.FinCategory = T32.ProductCode
	    </createView>
    </changeSet>
    <changeSet author="Prasad" id="37" >
			<addForeignKeyConstraint constraintName="FK_FinTypeVASPrdt_VasPrdt"
			referencedTableName="VasStructure" referencedColumnNames="ProductCode"
			baseTableName="FinTypeVASProducts" baseColumnNames="VasProduct" />
	</changeSet>
	<changeSet id="38" author="Subbarao">
	<createView replaceIfExists="true" viewName="BMTINCOMETYPES_VIEW" >
	SELECT     T1.IncomeTypeCode, T1.IncomeExpense, T1.Category, T1.IncomeTypeDesc, T1.IncomeTypeIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.Margin, T2.CategoryDesc lovDescCategoryName
	FROM         BMTIncomeTypes_Temp T1 INNER JOIN
                      BMTIncomeCategory T2 ON T1.Category = T2.IncomeCategory
	UNION ALL
	SELECT     T1.IncomeTypeCode, T1.IncomeExpense, T1.Category, T1.IncomeTypeDesc, T1.IncomeTypeIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.Margin, T2.CategoryDesc lovDescCategoryName
	FROM         BMTIncomeTypes T1 INNER JOIN
                      BMTIncomeCategory T2 ON T1.Category = T2.IncomeCategory
	WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTIncomeTypes_TEMP  
                            WHERE      IncomeTypeCode = T1.IncomeTypeCode AND IncomeExpense =  T1.IncomeExpense AND 
                                                   Category =  T1.Category)
	</createView>
	</changeSet>
	<changeSet author="Subbarao" id="39" >
		<addDefaultValue  columnName="custSuspSts"
			defaultValueNumeric="0" tableName="customers_Temp" />
	</changeSet>
	<changeSet id="40" author="Surekha">
		<addColumn tableName="RMTBranches">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="41" author="Surekha">
		<addColumn tableName="RMTBranches_Temp">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="42" author="Surekha">
		<createView replaceIfExists="true" viewName="RMTBranches_View">  SELECT T1.BranchCode ,T1.BranchDesc ,T1.BranchAddrLine1 ,T1.BranchAddrLine2 ,T1.BranchPOBox , T1.BranchCity ,
		          T4.PCCityName lovDescBranchCityName  ,T1.BranchProvince ,T3.CPProvinceName lovDescBranchProvinceName  ,T1.BranchCountry ,T2.CountryDesc lovDescBranchCountryName  ,T1.BranchFax ,
		          T1.BranchTel ,T1.BranchSwiftBankCde ,T1.BranchSwiftCountry , T1.BranchSwiftLocCode ,T1.BranchSwiftBrnCde , T1.BranchSortCode ,T1.BranchIsActive ,T1.NewBranchCode , T6.BranchDesc NewBranchDesc,
		          T1.Version ,T1.LastMntBy ,T1.LastMntOn ,T1.RecordStatus , T1.RoleCode ,T1.NextRoleCode ,T1.TaskId , T1.NextTaskId , T1.RecordType ,T1.WorkflowId , T1.MiniBranch,T1.BranchType, T1.ParentBranch,
		          T1.Region,T1.BankRefNo, T7.BranchDesc ParentBranchDesc,T5.CountryDesc lovDescBranchSwiftCountryName  
		     FROM RMTBranches_Temp T1
		           LEFT JOIN BMTCountries T2   ON T1.BranchCountry = T2.CountryCode
		           LEFT JOIN RMTCountryVsProvince T3   ON T1.BranchCountry = T3.CPCountry
		            AND T1.BranchProvince = T3.CPProvince
		           LEFT JOIN RMTProvinceVsCity T4   ON T1.BranchCountry = T4.PCCountry
		            AND T1.BranchProvince = T4.PCProvince AND T1.BranchCity = T4.PCCity
		           LEFT JOIN BMTCountries T5   ON T1.BranchSwiftCountry = T5.CountryCode
				   LEFT JOIN RMTBranches T6   ON T1.NewBranchCode = T6.BranchCode
				    LEFT JOIN RMTBranches T7   ON T1.ParentBranch = T6.BranchCode
		   UNION ALL 
		   SELECT T1.BranchCode ,T1.BranchDesc ,T1.BranchAddrLine1 ,T1.BranchAddrLine2 ,T1.BranchPOBox , T1.BranchCity ,
		          T4.PCCityName lovDescBranchCityName  ,T1.BranchProvince ,T3.CPProvinceName lovDescBranchProvinceName  ,T1.BranchCountry ,T2.CountryDesc lovDescBranchCountryName  ,T1.BranchFax ,
		          T1.BranchTel ,T1.BranchSwiftBankCde ,T1.BranchSwiftCountry , T1.BranchSwiftLocCode ,T1.BranchSwiftBrnCde , T1.BranchSortCode ,T1.BranchIsActive ,T1.NewBranchCode , T6.BranchDesc NewBranchDesc,
		          T1.Version ,T1.LastMntBy ,T1.LastMntOn ,T1.RecordStatus , T1.RoleCode ,T1.NextRoleCode ,T1.TaskId , T1.NextTaskId , T1.RecordType ,T1.WorkflowId , T1.MiniBranch,T1.BranchType, T1.ParentBranch,
		          T1.Region, T1.BankRefNo,T7.BranchDesc ParentBranchDesc,T5.CountryDesc lovDescBranchSwiftCountryName 
		     FROM RMTBranches T1
		           LEFT JOIN BMTCountries T2 ON T1.BranchCountry = T2.CountryCode
		           LEFT JOIN RMTCountryVsProvince T3 ON T1.BranchCountry = T3.CPCountry
		            AND T1.BranchProvince = T3.CPProvince
		           LEFT JOIN RMTProvinceVsCity T4 ON T1.BranchCountry = T4.PCCountry
		            AND T1.BranchProvince = T4.PCProvince AND T1.BranchCity = T4.PCCity
		           LEFT JOIN BMTCountries T5 ON T1.BranchSwiftCountry = T5.CountryCode
				   LEFT JOIN RMTBranches T6   ON T1.NewBranchCode = T6.BranchCode
				   LEFT JOIN RMTBranches T7   ON T1.ParentBranch = T6.BranchCode
		     WHERE NOT EXISTS ( SELECT 1 
		                        FROM RMTBranches_Temp 
		                          WHERE BranchCode = T1.BranchCode )
         </createView>
	</changeSet>
	<changeSet id="43" author="Surekha">
		<createView replaceIfExists="true" viewName="RMTBranches_AView">  SELECT T1.BranchCode ,T1.BranchDesc ,T1.BranchAddrLine1 ,T1.BranchAddrLine2 ,T1.BranchPOBox , T1.BranchCity ,
          T4.PCCityName lovDescBranchCityName  ,T1.BranchProvince ,T3.CPProvinceName lovDescBranchProvinceName  ,T1.BranchCountry ,T2.CountryDesc lovDescBranchCountryName  ,T1.BranchFax ,
          T1.BranchTel ,T1.BranchSwiftBankCde ,T1.BranchSwiftCountry , T1.BranchSwiftLocCode ,T1.BranchSwiftBrnCde , T1.BranchSortCode ,T1.BranchIsActive ,T1.NewBranchCode , T6.BranchDesc NewBranchDesc,
          T1.Version ,T1.LastMntBy ,T1.LastMntOn ,T1.RecordStatus , T1.RoleCode ,T1.NextRoleCode ,T1.TaskId , T1.NextTaskId , T1.RecordType ,T1.WorkflowId , T1.MiniBranch,T1.BranchType, T1.ParentBranch,
          T1.Region,T1.BankRefNo, T7.BranchDesc ParentBranchDesc,T5.CountryDesc lovDescBranchSwiftCountryName  
     FROM RMTBranches T1
           LEFT JOIN BMTCountries T2   ON T1.BranchCountry = T2.CountryCode
           LEFT JOIN RMTCountryVsProvince T3   ON T1.BranchCountry = T3.CPCountry
            AND T1.BranchProvince = T3.CPProvince
           LEFT JOIN RMTProvinceVsCity T4   ON T1.BranchCountry = T4.PCCountry
            AND T1.BranchProvince = T4.PCProvince AND T1.BranchCity = T4.PCCity
           LEFT JOIN BMTCountries T5   ON T1.BranchSwiftCountry = T5.CountryCode
		   LEFT JOIN RMTBranches T6   ON T1.NewBranchCode = T6.BranchCode
		    LEFT JOIN RMTBranches T7   ON T1.ParentBranch = T6.BranchCode
         </createView>
	</changeSet>
	
	<changeSet id="44" author="Prasad">
		<dropView viewName="RPT_DailyODRetail_View" />
</changeSet>
<changeSet id="45" author="Prasad">
		<dropView viewName="RPT_briefDealinformation_view" />
</changeSet>
<changeSet id="46" author="Prasad">
		<dropView viewName="RPT_RetailInvestmentSmry_View" />
</changeSet>
<changeSet id="47" author="Prasad">
		<dropView viewName="RPT_AdminFeeandTakafulFee_View" />
</changeSet>
<changeSet id="48" author="Prasad">
		<dropView viewName="RPT_FinBasicInfo_View" />
</changeSet>
<changeSet id="49" author="Prasad">
		<dropView viewName="RPT_DealDetail_View" />
</changeSet>
<changeSet id="50" author="Prasad">
		<dropView viewName="RPT_TakafulMonthly_view" />
</changeSet>
<changeSet id="51" author="Prasad">
		<dropView viewName="RPT_PenaltyCalculation_view" />
</changeSet>
<changeSet id="52" author="Prasad">
		<dropView viewName="RPT_AIB_PayOff_View" />
</changeSet>
<changeSet id="53" author="Prasad">
		<dropView viewName="RPT_repaymentSchedule_view" />
</changeSet>
<changeSet id="54" author="Prasad">
		<dropView viewName="RPT_Takaful_Premium_view" />
</changeSet>
<changeSet id="55" author="Prasad">
		<dropView viewName="RPT_EMRFinByMrtyBucketDtl_View" />
</changeSet>
<changeSet id="56" author="Prasad">
		<dropView viewName="RPT_EMRFinMrtyBucketDtl_View" />
</changeSet>
<changeSet id="57" author="Prasad">
		<dropView viewName="RPT_EMRFinMrtyBucketSmry_View" />
</changeSet>
<changeSet id="58" author="Prasad">
		<dropView viewName="RPT_EMR_AGPASTDUEBUCKSUMM_View" />
</changeSet>
<changeSet id="59" author="Prasad">
		<dropView viewName="RPT_EMRAgingODBuketDtl_View" />
</changeSet>
<changeSet id="60" author="Prasad">
		<dropView viewName="RPT_EMRAgingODBucket_View" />	
</changeSet>
<changeSet id="61" author="Prasad">
		<dropView viewName="RPT_EMR_AGINGNONPERFASSET_View" />	
</changeSet>
<changeSet id="62" author="Prasad">
		<dropView viewName="RPT_EMRNonPerformAstSmry_view" />	
</changeSet>
<changeSet id="63" author="Prasad">
		<dropView viewName="RPT_EMRNonPerformAstDtl_View" />	
</changeSet>
<changeSet id="64" author="Prasad">
		<dropView viewName="RPT_EMR_ANALLRECEIVBYSECT_View" />	
</changeSet>
<changeSet id="65" author="Prasad">
		<dropView viewName="RPT_EMR_ASSTAGINGPASTDUE_View" />	
</changeSet>

<changeSet author="Prasad" id="66">
<createView replaceIfExists="true" viewName="RPT_EMRAssetAgingODDtl_View">
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By FinAcType,AcTypeDesc


UNION ALL

Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By FinAcType,AcTypeDesc
UNION ALL
Select  FinAcType,AcTypeDesc,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 RMTAccountTypes T3  ON T3.AcType = T2.FinAcType
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By FinAcType,AcTypeDesc
</createView>
</changeSet>

<changeSet id="67" author="Prasad">
		<dropView viewName="RPT_EMRCounterPartyOD_View" />	
</changeSet>

<changeSet author="Prasad" id="68">
<createView replaceIfExists="true" viewName="RPT_EMRCounterPartyODDtl_View">
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
			Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode 
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustTypeCode ,T4.CustTypeDesc


UNION ALL

Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustTypeCode ,T4.CustTypeDesc
UNION ALL
Select  T3.CustTypeCode GFCTP,T4.CustTypeDesc C4CTD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	RMTCustTypes T4 ON T4.CustTypeCode = T3.CustTypeCode
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustTypeCode ,T4.CustTypeDesc
</createView>
</changeSet>

<changeSet id="69" author="Prasad">
		<dropView viewName="RPT_EMRAgingODGeograph_View" />	
</changeSet>

<changeSet author="Prasad" id="70">
<createView replaceIfExists="true" viewName="RPT_EMRAgingODGeographDtl_View">
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
			Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry 
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'P' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustResdCountry ,T4.CountryDesc


UNION ALL

Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 0 to 7D' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7 and -FinCurODDays&lt;=0
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 7D to 1M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-30 and -FinCurODDays&lt;-7
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1M to 3M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-90 and -FinCurODDays&lt;-30
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3M to 6M' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-180 and -FinCurODDays&lt;-90
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 6M to 1Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-365 and -FinCurODDays&lt;-180
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 1Y to 3Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1095 and -FinCurODDays&lt;-365
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 3Y to 5Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-1825 and -FinCurODDays&lt;-1095
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 5Y to 10Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-3650 and -FinCurODDays&lt;-1825
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE 10Y to 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;=-7300 and -FinCurODDays&lt;-3650
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'DUE OVER 20Y' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&lt;-7300
Group By T3.CustResdCountry ,T4.CountryDesc
UNION ALL
Select  T3.CustResdCountry COUNTRY,T4.CountryDesc COUNTRYD04,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPft,FinCcy,'INR'))UnpaidTotalAmt,'NOT YET PAID' Clmn,'I' Flag
from FInODDetails T1 Inner Join FinPftDetails T2  On T1.FinReference=T2.FinReference INNER JOIN
	 Customers T3 ON T3.CustCIF = T2.CustCIF INNER JOIN	BMTCountries T4  ON T4.CountryCode = T3.CustResdCountry
where (T2.ClosingStatus!='C' or T2.ClosingStatus is  null) And T2.FinisActive = 1 and T2.PftInSusp=1 and FinCurODAmt!=0
	  and -FinCurODDays&gt;0
Group By T3.CustResdCountry ,T4.CountryDesc
</createView>
</changeSet>
<changeSet id="71" author="Prasad">
		<dropView viewName="RPT_EMR_DLWSINCREPONPL_View" />	
</changeSet>
<changeSet id="72" author="Prasad">
		<dropView viewName="RPT_EMR_DEALWSINCOMEREPO_View" />	
</changeSet>
<changeSet id="73" author="Prasad">
		<dropView viewName="RPT_EMRCustwiseInc_View" />	
</changeSet>
<changeSet id="74" author="Prasad">
		<dropView viewName="RPT_EMRNatureClaim_Rating_View" />	
</changeSet>
<changeSet id="75" author="Prasad">
		<dropView viewName="RPT_EMRCustwiseIncMonthly_View" />	
</changeSet>
<changeSet id="76" author="Prasad">
<sql>
UPDATE ReportsMonthEndConfiguration set Active=1 where GroupCode='LoanReports';
UPDATE ReportsMonthEndConfiguration set Active=0 where ReportName='CustomerWiseIncomeMonthly' and GroupCode='LoanReports';
Delete from ReportsMonthEndConfiguration where ReportName='Takafulpremium' and GroupCode='LoanReports';
Delete from ReportsMonthEndConfiguration where ReportName='DepreciationPostings' and GroupCode='LoanReports';</sql>
</changeSet>
<changeSet id="77" author="Prasad">
		<dropView viewName="RPT_DepreciationPostings_View" />	
</changeSet>
<changeSet id="78" author="Prasad">
		<dropView viewName="RPT_ABGGeographConcent_View" />	
</changeSet>
<changeSet id="79" author="Prasad">
		<dropView viewName="RPT_ABGCrRiskExposure_View" />	
</changeSet>
<changeSet id="80" author="Prasad">
		<dropView viewName="RPT_ABGFinSectorConcent_View" />	
</changeSet>
<changeSet id="81" author="Prasad">
		<dropView viewName="RPT_ABGLargestNonBnkExpsr_View" />	
</changeSet>
<changeSet id="82" author="Prasad">
		<dropView viewName="RPT_ABGLargestBnkExpsr_View" />	
</changeSet>
<changeSet id="83" author="Prasad">
		<dropView viewName="RPT_TRYAgingODBucketDtl_View" />	
</changeSet>
<changeSet id="84" author="Prasad">
		<dropView viewName="RPT_TRYAgingODBucketSmry_View" />	
</changeSet>
<changeSet id="85" author="Prasad">
		<dropView viewName="RPT_TRYAODBucketSmryDtl_View" />	
</changeSet>
<changeSet id="86" author="Prasad">
		<dropView viewName="RPT_TRYAODBucketSmryNew_View" />	
</changeSet>
<changeSet id="87" author="Prasad">
		<dropView viewName="RPT_TRYCreditRiskExposure_View" />	
</changeSet>
<changeSet id="88" author="Prasad">
		<dropView viewName="RPT_TRYFinByMrtyBucketDtl_View" />	
</changeSet>
<changeSet id="89" author="Prasad">
		<dropView viewName="RPT_TRYFinMrtyBucketDtls_View" />	
</changeSet>
<changeSet id="90" author="Prasad">
		<dropView viewName="RPT_TRYFinMrtyBucketSmry_View" />	
</changeSet>
<changeSet id="91" author="Prasad">
		<dropView viewName="RPT_TRYFinMrtyNew_View" />	
</changeSet>
<changeSet id="92" author="Prasad">
		<dropView viewName="RPT_TRYLargestBnkExpsr_View" />	
</changeSet>
<changeSet id="93" author="Prasad">
		<dropView viewName="RPT_TRYLargestNonBnkExpsr_View" />	
</changeSet>
<changeSet id="94" author="Prasad">
		<dropView viewName="RPT_TRYMrtyBucketSmry_View" />	
</changeSet>
<changeSet id="95" author="Prasad">
		<dropView viewName="RPT_TRYMrtyBucketSmryDtl_View" />	
</changeSet>
<changeSet id="96" author="Prasad">
		<dropView viewName="RPT_TRYODBucketDtls_View" />	
</changeSet>
<changeSet id="97" author="Prasad">
		<dropView viewName="RPT_TRYODBucketSmry_View" />	
</changeSet>
<changeSet id="98" author="Prasad">
		<dropView viewName="RPT_TRYODBucketSmryNew_View" />	
</changeSet>
<changeSet id="99" author="Prasad">
		<dropView viewName="RPT_TRYREP_FINBYMATURITY_View" />	
</changeSet>
<changeSet id="100" author="Prasad">
		<dropView viewName="RPT_AccountTypeNatures_View" />	
</changeSet>
<changeSet id="101" author="Prasad">
		<dropView viewName="RPT_ABG_FINSECTORCONCENT_View" />	
</changeSet>
<changeSet id="102" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylFCCYSlfFin_View" />	
</changeSet>
<changeSet id="103" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylLCCYSlfFin_View" />	
</changeSet>
<changeSet id="104" author="Prasad">
		<dropView viewName="RPT_ABGInF_Anyls_RIAFCCY_View" />	
</changeSet>

<changeSet id="106" author="Prasad">
		<dropView viewName="RPT_ABGInF_Anyls_URIFCCY_View" />	
</changeSet>
<changeSet id="107" author="Prasad">
		<dropView viewName="RPT_ABGInF_Anyls_URILCCY_View" />	
</changeSet>
<changeSet id="108" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylsFCCY_RIA_View" />	
</changeSet>

<changeSet id="110" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylsFCCY_View" />	
</changeSet>
<changeSet id="111" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylsLCCY_RIA_View" />	
</changeSet>
<changeSet id="112" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylsLCCY_URIA_View" />	
</changeSet>
<changeSet id="114" author="Prasad">
		<dropView viewName="RPT_CBUAccrual_View" />	
</changeSet>
<changeSet id="115" author="Prasad">
		<dropView viewName="RPT_EMR_LARGRIAHOLDERS_View" />	
</changeSet>
<changeSet id="116" author="Prasad">
		<dropView viewName="RPT_EMR_RIAReport_View" />	
</changeSet>
<changeSet id="117" author="Prasad">
		<dropView viewName="RPT_EMR_Takafulpremium_View" />	
</changeSet>


<changeSet author="Prasad" id="118">
<createView replaceIfExists="true" viewName="RPT_DiscrepancyInfo_View">
Select ${add.schema}FN_Discrepancy (F.Discrepancy) Discrepancy,F.FinReference,C.CustCIF CustID,
		C.CustFName,F.FinCcy,F.FinBranch,F.MaturityDate,F.FinStartDate,F.FinType,
		S.UsrFName,S.UsrMName,S.UsrLName,F.FinAmount,B.BranchDesc,R.CcyEditField
From FinanceMain F INNER JOIN
	 Customers C ON C.CustID=F.CustID INNER JOIN
	 RMTCurrencies R ON R.CcyCode=F.FinCcy INNER JOIN
	 RMTBranches B ON B.BranchCode=F.FinBranch LEFT JOIN
	 ${call.auditdb}AdtFinanceMain T1 ON T1.FinReference=F.FinReference and T1.RoleCode='CREDIT_ADMIN_MANAGER'
	 LEFT JOIN	SecUsers S On S.UsrID=T1.LastMntBy
Where F.Discrepancy is null and F.Discrepancy like 'DS%'</createView>  
</changeSet>

<changeSet id="119" author="Prasad">
		<dropView viewName="RPT_DailyODByCustomer_View" />
</changeSet>

<changeSet id="120" author="Prasad">
		<update tableName="reportconfiguration">
			<column name="DATASOURCENAME">pfsDatasource</column>
			<where>REPORTJASPERNAME='FinancesOpened'</where>
		</update>
</changeSet>
<changeSet id="121" author="Prasad">
		<sql>Update REPORTFILTERFIELDS set FIELDDBNAME='BranchCode' where FIELDDBNAME='FinBranch' and REPORTID in (
			 select REPORTID from REPORTCONFIGURATION where REPORTJASPERNAME='FinancesOpened');	
</sql>
</changeSet>

<changeSet author="Prasad" id="122">
<createView replaceIfExists="true" viewName="Rpt_ManualPaymentsDue_View">
select  branchdesc FinBranch,FinBranch BranchCode, T1.CustCIF,T4.CustShrtName, T.FinReference, T1.FinCcy,DefSchdDate,CcyEditField,
		T1.FinIsActive,T5.FinDivision,CCYISRECEPROCAL,CCYSPOTRATE,CCYMINORCCYUNITS,
			(select  CcySpotRate TargetCcySpotRate from RMTCurrencies where CcyCode in
			(Select SysParmValue from SMTparameters where SysParmcode='APP_DFT_CURR'))TARGETCCYSPOTRATE,
			ProfitSchd,SchdPftPaid,DefProfit,DefSchdPftPaid,PrincipalSchd,SchdPriPaid,DefPrincipal,DefSchdPriPaid,
			(select cast(SysParmValue as date) from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE')BussDate
	from     FinScheduleDetails T  INNER JOIN 
	         FinPftDetails T1  ON T.FinReference = T1.FinReference inner join
			 RMTCurrencies C  on C.ccyCode=T1.FinCcy INNER JOIN 
			 RMTBranches T2  ON T2.BranchCode=FinBranch INNER JOIN 
			 Customers T4  ON T4.CustId = T1.CustId Inner jOin
			 RMTFinanceTypes T5 ON T5.FinType = T1.FinType
	where   DefSchdDate &lt; (select cast(SysParmValue as date)  from SMTparameters where SysParmCode = 'APP_NEXT_BUS_DATE')
			AND RepayOnSchDate = 1 AND 
			((ProfitSchd - SchdPftPaid) &gt; 0 OR (PrincipalSchd - SchdPriPaid) &gt; 0 OR 
			(DefProfit-DefSchdPftPaid) &gt; 0 OR (DefPrincipal-DefSchdPriPaid) &gt; 0)
			AND T1.CustCIF != ${call.substr}(RepayAccountId,5,6) 
			AND  (T1.ClosingStatus !='C' or T1.ClosingStatus is null)</createView>
</changeSet>

<!--<changeSet id="123" author="Prasad" dbms="mssql">
		<sql>Update SMTparameters set SysParmValue = REPLACE(REPLACE(CONVERT(VARCHAR,convert(datetime,SysParmValue),106), ' ','-'), ',','')  where SysParmCode = 'APP_NEXT_BUS_DATE';
			 Update SMTparameters set SysParmValue = REPLACE(REPLACE(CONVERT(VARCHAR,convert(datetime,SysParmValue),106), ' ','-'), ',','')  where SysParmCode = 'APP_DATE';
</sql>
</changeSet>
<changeSet id="124" author="Prasad" dbms="oracle">
		<sql> Update SMTparameters set SysParmValue = to_date (to_date (SysParmValue,'yyyy-mm-dd'),'DD-MON-YYYY')  where SysParmCode = 'APP_NEXT_BUS_DATE';	
			  Update SMTparameters set SysParmValue = to_date (to_date (SysParmValue,'yyyy-mm-dd'),'DD-MON-YYYY')  where SysParmCode = 'APP_DATE';
</sql>
</changeSet>-->

<changeSet id="125" author="Prasad">
		<dropView viewName="RPT_RateReviewDue_View" />
</changeSet>

<changeSet id="126" author="Prasad">
		<dropView viewName="RPT_ActiveCommodities_View" />
</changeSet>

<changeSet id="127" author="Prasad">
		<dropView viewName="Rpt_AccrualPostings_View" />
</changeSet>

<changeSet id="128" author="Prasad">
		<dropView viewName="Rpt_InstallmentDue_View" />
</changeSet>

<changeSet id="129" author="Prasad">
		<dropView viewName="RPT_RpyToBeDoneToday_View" />
</changeSet>

<changeSet id="130" author="Prasad">
		<dropView viewName="RPT_RpyProcessedToday_View" />
</changeSet>
<changeSet id="131" author="Prasad">
		<dropView viewName="RPT_ListOfFINandINV_View" />
</changeSet>
<changeSet id="132" author="Prasad">
		<dropView viewName="RPT_FINBYMATURITY_View" />
</changeSet>
<changeSet id="133" author="Prasad">
		<dropView viewName="RPT_DISBURSMENTFINANCES_VIEW " />
</changeSet>
<changeSet id="134" author="Prasad">
		<dropView viewName="RPT_PENDINGFINANCES_VIEW" />
</changeSet>

<changeSet author="Prasad" id="135">
<createView replaceIfExists="true" viewName="RPT_DISCREPANCYREPORT_VIEW">
select Distinct Auditdate,initiateuser,T5.usrfname,t5.usrmname,t5.usrlname,T.lastmntby,
       T4.usrfname DiscUsrFname,t4.usrmname DiscUsrMname,t4.usrlname DiscUsrLname,T.FinType,custcif,CustShrtName,
       T.FinReference,t3.RoleCode
from  ${call.auditdb}adtfinancemain T inner join
      Customers t2 on t2.CustID=T.CustID LEFT join
      Notes t3 on t3.Reference=t.FinReference and ModuleName='financeMain' and RemarkType='N' inner join
      SecUsers T4 on T4.UsrID=T.LastMntBy LEFT join
      SecUsers T5 on T5.UsrID=T.InitiateUser
where T.RecordStatus in('Resubmitted','Rejected') and t3.RoleCode is not null</createView>
</changeSet>

<changeSet id="136" author="Prasad">
		<dropView viewName="RPT_Pastdue_View" />
</changeSet>

<changeSet author="Prasad" id="137">
<createView replaceIfExists="true" viewName="RPT_PastdueSummary_View">
SELECT  T4.branchCode  FinBranch, T.FinIsActive,T.Region,T.FinStatus,T.TotalPastdue Measure
			FROM(SELECT   T1.FinBranch,'Past Due Amount' Region,T1.Finstatus, T1.FinIsActive,
					      CAST(SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T1.FinCCY,'INR')) AS decimal(18,3))TotalPastdue
				 FROM	  FinanceMain T1 INNER JOIN
						  FinODDetails T2 ON T1.FinReference = T2.FinReference INNER JOIN
						  FinPftDetails T3 ON T1.FinReference = T3.FinReference INNER JOIN 
						  RMTCurrencies on T1.FinCCY=CCYCode
				WHERE	  FinCurODAmt &gt; 0 AND (T1.ClosingStatus !='C' or T1.ClosingStatus is null) and T1.Finstatus is not null   
				GROUP BY  T1.FinBranch,T1.Finstatus,T1.FinIsActive
				UNION ALL			
				SELECT    T1.FinBranch,'Profit Suspended',T1.Finstatus,  T1.FinIsActive,
						  Cast(SUM(${add.schema}UDF_ConvertCurrency(TdPftAccrueSusp,T1.FinCCY,'INR')) AS decimal(18,3))ProfitSuspended
				FROM	  FinanceMain T1 INNER JOIN
						  FinODDetails T2 ON T1.FinReference = T2.FinReference INNER JOIN
						  FinPftDetails T3 ON T1.FinReference = T3.FinReference INNER JOIN 
						  RMTCurrencies on T1.FinCCY=CCYCode
				WHERE	  FinCurODAmt &gt; 0 AND (T1.ClosingStatus !='C' or T1.ClosingStatus is null) and T1.Finstatus is not null  
				Group By T1.FinBranch,T1.Finstatus,T1.FinIsActive		
				UNION ALL			
				SELECT   T1.FinBranch,'Count',T1.Finstatus,  T1.FinIsActive,
					     Cast(Count(T2.FinReference) as decimal(18,3)) as Count
				FROM	 FinanceMain T1 INNER JOIN
						 FinODDetails T2 ON T1.FinReference = T2.FinReference INNER JOIN
						 FinPftDetails T3 ON T1.FinReference = T3.FinReference INNER JOIN 
						 RMTCurrencies on T1.FinCCY=CCYCode	WHERE FinCurODAmt &gt; 0 
						 AND (T1.ClosingStatus !='C' or T1.ClosingStatus is null) and T1.Finstatus is not null
				Group By T1.FinBranch,T1.Finstatus,T1.FinIsActive  )T   INNER JOIN
			RMTBranches T4 ON T4.BranchCode=T.FinBranch
</createView>
</changeSet>



<changeSet id="140" author="Prasad">
		<dropView viewName="RPT_ClentLendingStatus_View" />
</changeSet>
<changeSet author="Prasad" id="141">
<createView replaceIfExists="true" viewName="RPT_InvstbySharehld_Joint_View">
SELECT  T1.FinType,FinTypeDesc,T3.DivisionCodeDesc FINDivision,FINDivision DivisionCode,
			SUM(${add.schema}UDF_ConvertCurrency(TotalPriSchd,T1.FinCCY,'INR')) FinAmountinBHD,
			 T1.FinIsActive
	FROM    FinPftDetails T1 INNER JOIN
			RMTFinanceTypes T2 ON T2.FinType=T1.FinType Inner JOIN
			SMTDivisionDetail T3 ON T3.DivisionCode=T2.FINDivision
	Where   (T1.ClosingStatus !='C' or T1.ClosingStatus is null)
	GROUP BY  T1.FinType,FinTypeDesc,T2.FinDivision,T3.DivisionCodeDesc,T1.FinIsActive
</createView>
</changeSet>
<changeSet id="142" author="Prasad">
		<dropView viewName="RPT_TrialBalancesByCntry_View" />
</changeSet>
<changeSet id="143" author="Prasad">
		<dropView viewName="RPT_TrailBalancebyFintype_View" />
</changeSet>
<changeSet id="144" author="Prasad">
		<dropView viewName="RPT_OBUAccrual_View" />
</changeSet>
<changeSet author="Prasad" id="138">
<createView replaceIfExists="true" viewName="RPT_Txndone_Settled_View">
SELECT  T2.CustCIF,T2.CustShrtName,SUM(NoInst)TransDone,SUM(NOPaidInst) TransSettled,
			SUM(${add.schema}UDF_ConvertCurrency(TotalPriSchd+TotalPftSchd,T1.FinCCY,'INR')) ConExchgTransAmt,
			SUM(${add.schema}UDF_ConvertCurrency(TotalPriPaid+TotalPftPaid,T1.FinCCY,'INR')) ConExchgTransAmtSettled,
			T1.FinIsActive
	FROM    FinPftDetails T1  INNER JOIN
		    Customers T2 ON T2.CustCIF = T1.CustCIF
    Where   (T1.ClosingStatus!='C' or T1.ClosingStatus is  null)
	GROUP BY T2.CustCIF,T2.CustShrtName,T1.FinIsActive
</createView>
</changeSet>
<changeSet author="Prasad" id="145">
<createView replaceIfExists="true" viewName="RPT_InvestmentReport_View">
SELECT    T6.FinTypeDesc FINANCE_TYPE,T1.FinType,
					  T3.CountryDesc Country,T2.CustRiskCountry Country1,
					  T4.BranchDesc FINANCE_BRANCH,FinBranch  branchCode, T1.FinCcy Currency,					 
					  T1.FinIsActive,T6.FinDivision,'Outstanding Amount' ColumnValue,
					  ${add.schema}UDF_ConvertCurrency(SUM((TotalRepayAmt-FinRepaymentAmount)),T1.FinCCY,'INR') Measure 
			FROM      FinanceMain T1 INNER JOIN
					  Customers T2 ON T1.CustID = T2.CustID INNER JOIN
					  BMTCountries T3 ON T2.CustCOB = T3.CountryCode AND T2.CustParentCountry = T3.CountryCode 
					  AND T2.CustResdCountry = T3.CountryCode AND T2.CustRiskCountry = T3.CountryCode 
					  INNER JOIN RMTBranches T4 ON T4.BranchCode=T1.FinBranch INNER JOIN
					  RMTFinanceTypes T6 ON T6.FinType=T1.FinType
			WHERE     (T1.ClosingStatus!='C' or T1.ClosingStatus is  null)
			GROUP BY  T1.FinType, T2.CustRiskCountry,T1.FinCcy,FinBranch,BranchDesc,FinTypeDesc,
					  CountryDesc,T1.FinIsActive,T6.FinDivision
</createView>
</changeSet>
<changeSet id="146" author="Prasad">
		<dropView viewName="Rpt_ReleaseLetter_View" />
</changeSet>
<changeSet id="147" author="Prasad">
		<dropView viewName="Rpt_FinYearSchdDetails_View" />
</changeSet>
<changeSet id="148" author="Prasad">
		<dropView viewName="Rpt_InterestStatement_VIew" />
</changeSet>
<changeSet id="149" author="Prasad">
		<dropView viewName="RPT_EMR_SuspendedAct_View" />
</changeSet>
<changeSet id="150" author="Prasad">
		<dropView viewName="RPT_EMR_ListOfFINandINV_View" />
</changeSet>
<changeSet id="151" author="Prasad">
		<dropView viewName="RPT_EMR_FINBYMATURITY_View" />
</changeSet>
<changeSet id="152" author="Prasad">
		<dropView viewName="RPT_EMRBalByGL_CustInd_View" />
</changeSet>
<changeSet id="153" author="Prasad">
		<dropView viewName="RPT_EMRFinByEcmySector_View" />
</changeSet>
<changeSet id="154" author="Prasad">
		<dropView viewName="RPT_DelinquentByPdtSmry_View" />
</changeSet>
<changeSet author="Prasad" id="155">
<createView replaceIfExists="true" viewName="RPT_DelinquentByProducts">
SELECT  FinDivision,T2.FinType,T3.FinTypeDesc,'&lt;=30' DPD,'Performing' Classifications,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))DelinquencyOutstandingBHD,
					SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) DelinquencyOutstandingUSD,COUNT(Distinct T2.FinReference)NoofAccounts
			FROM	FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
			where	FinCurODAmt!=0 and FinCurODDays&lt;=30 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)  GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
		UNION
			SELECT  FinDivision,T2.FinType,T3.FinTypeDesc,'30&gt; &lt;=60' DPD,'Average Risk' Classifications,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))DelinquencyOutstandingBHD,
					SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) DelinquencyOutstandingUSD,COUNT(Distinct T2.FinReference)NoofAccounts
			FROM	FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
			where	FinCurODAmt!=0 and FinCurODDays&gt;30 and FinCurODDays&lt;=60 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null) 	GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
		UNION
			SELECT  FinDivision,T2.FinType,T3.FinTypeDesc,'60&gt; &lt;=90' DPD,'Watch List' Classifications,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))DelinquencyOutstandingBHD,
					SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) DelinquencyOutstandingUSD,COUNT(Distinct T2.FinReference)NoofAccounts
			FROM	FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
			where	FinCurODAmt!=0 and FinCurODDays&gt;60 and FinCurODDays&lt;=90 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)  GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
		UNION
			SELECT  FinDivision,T2.FinType,T3.FinTypeDesc,'90&gt;' DPD,'Non-Performing' Classifications,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))DelinquencyOutstandingBHD,
					SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) DelinquencyOutstandingUSD,COUNT(Distinct T2.FinReference)NoofAccounts
			FROM	FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
			where	FinCurODAmt!=0 and FinCurODDays&gt;90 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null) GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
</createView>
</changeSet>

<changeSet author="Prasad" id="156">
<createView replaceIfExists="true" viewName="RPT_Provision_View">
SELECT FinDivision,T2.FinType,T3.FinTypeDesc,'Performing 1-90' Classifications,4 GradeOrder,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))ExposureBHD,
		COUNT(Distinct T2.FinReference)NoofAccounts,SUM(${add.schema}UDF_ConvertCurrency(ProvisionDue,T2.FinCcy,'INR'))Provision
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		Inner JOIN FinProvisions T4  ON T4.FinReference =T1.FinReference
		where FinCurODAmt!=0 and FinCurODDays&gt;=1 and FinCurODDays&lt;=90 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)
		GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
		UNION
		SELECT FinDivision,T2.FinType,T3.FinTypeDesc,'Substandard 91-180' Classifications,3 GradeOrder,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))ExposureBHD,
		COUNT(Distinct T2.FinReference)NoofAccounts,SUM(${add.schema}UDF_ConvertCurrency(ProvisionDue,T2.FinCcy,'INR'))Provision
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		Inner JOIN FinProvisions T4  ON T4.FinReference =T1.FinReference
		where FinCurODAmt!=0 and FinCurODDays&gt;=91 and FinCurODDays&lt;=180 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)
		GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
		UNION
		SELECT FinDivision,T2.FinType,T3.FinTypeDesc,'Doubtful 181-365' Classifications,2 GradeOrder,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))ExposureBHD,
		COUNT(Distinct T2.FinReference)NoofAccounts,SUM(${add.schema}UDF_ConvertCurrency(ProvisionDue,T2.FinCcy,'INR'))Provision
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		Inner JOIN FinProvisions T4  ON T4.FinReference =T1.FinReference
		where FinCurODAmt!=0 and FinCurODDays&gt;=181 and FinCurODDays&lt;=365 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)
		GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
		UNION
		SELECT FinDivision,T2.FinType,T3.FinTypeDesc,'Loss 365>' Classifications,1 GradeOrder,SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))ExposureBHD,
		COUNT(Distinct T2.FinReference)NoofAccounts,SUM(${add.schema}UDF_ConvertCurrency(ProvisionDue,T2.FinCcy,'INR'))Provision
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		Inner JOIN FinProvisions T4  ON T4.FinReference =T1.FinReference
		where FinCurODAmt!=0 and FinCurODDays&gt;365 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)
		GROUP BY T2.FinType,T3.FinTypeDesc,FinDivision
</createView>
</changeSet>
<changeSet id="157" author="Prasad">
		<dropView viewName="RPT_Provision_SMRY_View" />
</changeSet>
<changeSet id="158" author="Prasad">
		<dropView viewName="RPT_PortfolioBehaviorSmry_View" />
</changeSet>
<changeSet author="Prasad" id="159">
<createView replaceIfExists="true" viewName="RPT_Provision_View">
SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,1 Grade,'Exceptional-Risk Free' Classification,'0' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FincurODAmt!=0 and FinCurODDays=0 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,2 Grade,'Excellent-low Risk' Classification,'1-15' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FincurODAmt!=0 and FinCurODDays&gt;=1 and FinCurODDays&lt;=15 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
			
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,3 Grade,'Superior-Modest Risk' Classification,'16-30' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=16 and FinCurODDays&lt;=30 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,4 Grade,'Good-Above Average Risk' Classification,'31-45' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=31 and FinCurODDays&lt;=45 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,5 Grade,'Satisfactory-Average Risk' Classification,'46-60' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=46 and FinCurODDays&lt;=60 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,6 Grade,'Adequate-Borderline' Classification,'61-70' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=61 and FinCurODDays&lt;=70 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,7 Grade,'Watch list' Classification,'71-80' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=71 and FinCurODDays&lt;=80 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,8 Grade,'Special Mention' Classification,'81-90' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=81 and FinCurODDays&lt;=90 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION		
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,9 Grade,'Substandard' Classification,'91-180' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=91 and FinCurODDays&lt;=180 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION	
		
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,10 Grade,'Doubtful' Classification,'181-365' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;=181 and FinCurODDays&lt;=365 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
		
		UNION
		SELECT T3.FinDivision,T2.FinType,T3.FinTypeDesc,11 Grade,'Loss' Classification,'365>' DPD,COUNT(Distinct T2.FinReference)NoofAccounts,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'INR'))CurOutstandingBHD,
		SUM(${add.schema}UDF_ConvertCurrency(FinCurODPri+FinCurODPft,T2.FinCcy,'USD')) CurOutstandingUSD
		FROM FInODDetails T1  Inner JOin FinPftDetails T2  ON T1.FinReference =T2.FinReference INNER JOIN RMTFinanceTypes T3  ON T2.FinType=T3.FinType
		where FinCurODAmt!=0 and FinCurODDays&gt;365 AND (T2.ClosingStatus !='C' or T2.ClosingStatus is null)	GROUP BY T2.FinType,T3.FinTypeDesc,T3.FinDivision
</createView>
</changeSet>
<changeSet  author="Surekha" id="160">
	<sql>
			Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
			Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	
			INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'BranchDialog_BankRefNo','BranchDialog',0,1000,null,'Approved','','',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='BRANCH_MAKER'),(select RightID from SecRights where RightName='BranchDialog_BankRefNo'),1,0,10000,null,'Approved','','',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
	
			Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
			Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
		</sql>
	</changeSet>
	
	<changeSet  author="Surekha" id="161">
		<sql>
			Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
			Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	
			INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'CityDialog_BankRefNo','BranchDialog',0,1000,null,'Approved','','',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='CITY_MAKER'),(select RightID from SecRights where RightName='BranchDialog_BankRefNo'),1,0,10000,null,'Approved','','',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
	
			Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
			Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
		</sql>
	</changeSet>
	<changeSet  author="Surekha" id="162">
	<sql>
		Update SecRights set Page='CityDialog' where RightName ='CityDialog_BankRefNo';
	</sql>
	</changeSet>
	<changeSet id="163" author="Surekha">
		<addColumn tableName="RMTProvinceVsCity">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="164" author="Surekha">
		<addColumn tableName="RMTProvinceVsCity_Temp">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="165" author="Surekha">
		<createView replaceIfExists="true" viewName="RMTProvinceVsCity_View"> SELECT  T1.PCCountry, T2.CountryDesc LovDescPCCountryName, T1.PCProvince, T3.CPProvinceName LovDescPCProvinceName, T1.PCCity, T1.PCCityName,T1.PCCityClassification, T1.Version, 
                      T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.BankRefNo
				FROM         RMTProvinceVsCity_Temp  T1 INNER JOIN
			                      BMTCountries  T2 ON T1.PCCountry = T2.CountryCode INNER JOIN
			                      RMTCountryVsProvince  T3 ON T1.PCCountry = T3.CPCountry AND T1.PCProvince = T3.CPProvince
				UNION ALL
				SELECT     T1.PCCountry, T2.CountryDesc LovDescPCCountryName, T1.PCProvince, T3.CPProvinceName LovDescPCProvinceName, T1.PCCity, T1.PCCityName,T1.PCCityClassification, T1.Version, 
				                      T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.BankRefNo
				FROM         RMTProvinceVsCity  T1 INNER JOIN
				                      BMTCountries  T2 ON T1.PCCountry = T2.CountryCode INNER JOIN
				                      RMTCountryVsProvince  T3 ON T1.PCCountry = T3.CPCountry AND T1.PCProvince = T3.CPProvince
				WHERE     NOT EXISTS
				                          (SELECT     1
	                            FROM          RMTProvinceVsCity_TEMP
	                            WHERE      PCCountry = T1.PCCountry AND PCProvince = T1.PCProvince AND PCCity = T1.PCCity)
         </createView>
	</changeSet>
	<changeSet id="166" author="Surekha">
		<createView replaceIfExists="true" viewName="RMTProvinceVsCity_AView">  SELECT  T1.PCCountry, T2.CountryDesc LovDescPCCountryName, T1.PCProvince, T3.CPProvinceName LovDescPCProvinceName, T1.PCCity, T1.PCCityName,T1.PCCityClassification, T1.Version, 
                      T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.BankRefNo
				FROM         RMTProvinceVsCity  T1 INNER JOIN
			                      BMTCountries  T2 ON T1.PCCountry = T2.CountryCode INNER JOIN
			                      RMTCountryVsProvince  T3 ON T1.PCCountry = T3.CPCountry AND T1.PCProvince = T3.CPProvince
         </createView>
	</changeSet>
	<changeSet author="DurgaPrasad D" id="167">
		<sql>
		Update ErrorDetails set ErrorMessage ='customer CIF (cif) is Mandatory.' where ErrorCode = '90125';
		Update ErrorDetails set ErrorMessage ='Invalid {0} schedule method with code {1}.' where ErrorCode = '90210';
		Update ErrorDetails set ErrorMessage ='Invalid repayment method with code {0}.' where ErrorCode = '90212'; 
		
		Delete from ErrorDetails where ErrorCode = 'E0020';
		Delete from ErrorDetails where ErrorCode = 'E0032';
		Delete from ErrorDetails where ErrorCode = 'E0004';
		
		Delete from ErrorDetails where ErrorCode IN('90125','90127','90128','90129','90130','90131','90132','90133','90134','90135','90136','90137','90138','90139','90140','90141','90142',
		'90143','90144','90145','90146','90147','90148','90149','90150','90151','90152','90153','90154','90155','90156','90157','90158','90159',
		'90160','90161','90162','90163','90164','90165','90166','90167','90168','90169','90170','90171','90172','90173','90174','90175','90176',
		'90177','90178','90179','90180','90181','90182','90183','90184','90185','90186','90187','90188','90189','90190','90191','90192','90193',
		'90194','90195','90196','90197','90198','90199','90225','90226','90227','90228','90229');

		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90127', N'EN', N'E', N'Loan Amount (finAmount) cannot be less than or equal to ZERO', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90128', N'EN', N'E', N'Loan Start Date (finStartDate) is Mandatory', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90129', N'EN', N'E', N'Invalid branch code: {0}.', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90130', N'EN', N'E', N'Downpayment to Bank cannot be less than ZERO', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90131', N'EN', N'E', N'Downpayment to Supplier cannot be less than ZERO', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90132', N'EN', N'E', N'Net Loan Amount cannot be less than minimum loan amount {0} defined at loan type', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90133', N'EN', N'E', N'Net Loan Amount cannot be more than maximum loan amount {0} defined loan type', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90134', N'EN', N'E', N'Loan Start Date cannot be before {0} days. Allowed back value date is {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90135', N'EN', N'E', N'Grace Period Not Allowed for loan type {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90136', N'EN', N'E', N'Base Rate not allowed in {0} for this loan type {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90137', N'EN', N'E', N'Base Rate Code {0} for Curreny {1} not found', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90138', N'EN', N'E', N'Manual Schedule not allowed for this loan type {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90139', N'EN', N'E', N'Planned Deferment not allowed for this loan type {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90140', N'EN', N'E', N'Manual Schedule not allowed with Planned Deferment', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90141', N'EN', N'E', N'Requested Planned Planned Deferments {0} cannot be more than {1} for loan type {2}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90142', N'EN', N'E', N'Planned Deferment not allowed with planned EMI holidays', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90143', N'EN', N'E', N'Planned Deferment not allowed with step Loans', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90144', N'EN', N'E', N'Manual Schedule not allowed with Stepping', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90145', N'EN', N'E', N'Manual steps not allowed for this loan type {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90146', N'EN', N'E', N'Step policy is mandatory if not Manual Steps', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90147', N'EN', N'E', N'Allowed Step Policies for loan type {0} are limited to {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90148', N'EN', N'E', N'Allowed Step types are {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90149', N'EN', N'E', N'Manual Schedule not allowed with Planned EMI Holiday', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90150', N'EN', N'E', N'Stepping not allowed with Planned EMI Holidays', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90151', N'EN', N'E', N'Planned Deferment works with Repayment Rate Basis "Flat Converting to Reducing" Only', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90152', N'EN', N'E', N'Grace Terms and Grace Period End Date are mutually exclusive', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90153', N'EN', N'E', N'Negetive Rate not allowed in {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90154', N'EN', N'E', N'Actual Rate and (Base rate, margin) combination are mutually exclusive - {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90155', N'EN', N'E', N'Special rate and margin require base rate also - {0}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);		
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90156', N'EN', N'E', N'Invalid {0} Interest Frequency Code {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90157', N'EN', N'E', N'Invalid {0} Review Frequency Code {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90158', N'EN', N'E', N'Invalid {0} Capitalize Frequency Code {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90159', N'EN', N'E', N'Invalid {0} Payment Frequency Code {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90160', N'EN', N'E', N'Invalid {0} Frequency Code {1}', N'', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 0);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90161', N'EN', N'E', N'Grace period next Interest date {0} cannot be after grace period end date {2}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90162', N'EN', N'E', N'Grace period next Interest date {0} cannot be on/before start date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90163', N'EN', N'E', N'When Stepping not required data related to Steps should not be passed', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90164', N'EN', N'E', N'Grace Period Interest Review not allowed for loan type', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90165', N'EN', N'E', N'Grace period next Interest Review date {0} cannot be after grace period end date {2}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90166', N'EN', N'E', N'Grace period next Interest Review date {0} cannot be on/before start date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90167', N'EN', N'E', N'Grace Period Interest Capitalization not allowed for loan type', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90168', N'EN', N'E', N'Grace period next Interest Capitalization date {0} cannot be before start date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90169', N'EN', N'E', N'Grace period next Interest Capitalization date {0} cannot be after grcae period end date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90170', N'EN', N'E', N'Payment in Grace is not allowed for this loan type', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90171', N'EN', N'E', N'Grace Schedule Method must not be set if Payment not allowed in Grace', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90172', N'EN', N'E', N'Grace Period Interest Rate {0} cannot be less than minimum rate {1} defined', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90173', N'EN', N'E', N'Grace period Interest Rate {0} cannot be more than maximum rate {1} defined', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90174', N'EN', N'E', N'Repay Period Interest Rate {0} cannot be less than minimum rate {1} defined', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90175', N'EN', N'E', N'Repay period Interest Rate {0} cannot be more than maximum rate {1} defined', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90176', N'EN', N'E', N'Adviced Rates are allowed only for Structured Murabaha', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90177', N'EN', N'E', N'Next Grace Interest Date mismatches with Grace Interest Frequency', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90178', N'EN', N'E', N'Next Grace Interest Review Date mismatches with Grace Interest Review Frequency', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90179', N'EN', N'E', N'Next Grace Interest Capitalization Date mismatches with Grace Interest Capitalization Frequency', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90180', N'EN', N'E', N'Next Repay Interest Date mismatches with Repay Interest Frequency', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90181', N'EN', N'E', N'Next Repay Interest Review Date mismatches with Repay Interest Review Frequency', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90182', N'EN', N'E', N'Next Repay Interest Capitalization Date mismatches with Repay Interest Capitalization Frequency', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90183', N'EN', N'E', N'Next Repayment Date mismatches with Repayment Frequency', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90184', N'EN', N'E', N'Either Grace Terms or Grace Period End Date must present', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90185', N'EN', N'E', N'Invalid BPI Treatment {0}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90186', N'EN', N'E', N'Manual Schedule not allowed along with Grace Period', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90187', N'EN', N'E', N'Requested Repayment amount cannot be less than ZERO', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90188', N'EN', N'E', N'Requested Repayment amount cannot be more than net loan amount', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90189', N'EN', N'E', N'Schedule method is mandatory for generating schedule', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90190', N'EN', N'E', N'Number of Terms and Maturity Date are mutually exclusive', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90191', N'EN', N'E', N'Either Number of Terms or Maturity Date must present', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90192', N'EN', N'E', N'Next Repayment Date {0} cannot be before Start/Grace End Date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90193', N'EN', N'E', N'Next Repayment Date {0} cannot be after maturity date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90194', N'EN', N'E', N'Next Interest Date {0} cannot be before Start/Grace End Date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90195', N'EN', N'E', N'Next Interest Date {0} cannot be after Next Repayment Date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90196', N'EN', N'E', N'Repayment Period Interest Review not allowed for loan type', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90197', N'EN', N'E', N'Next Interest Review Date {0} cannot be before Start/Grace End Date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90198', N'EN', N'E', N'Next Interest Review Date {0} cannot be after Maturity Date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90199', N'EN', N'E', N'Repayment Period Interest Capitalization not allowed for loan type', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90225', N'EN', N'E', N'Next Capitalize Date {0} cannot be before Start/Grace End Date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90226', N'EN', N'E', N'Next Capitalize Date {0} cannot be after Maturity Date {1}', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90227', N'EN', N'E', N'Payment on interest frequency alone not allowed for this loan type', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90228', N'EN', N'E', N'BPI not allowed for this loan type', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
		INSERT INTO ErrorDetails (ErrorCode, ErrorLanguage, ErrorSeverity, ErrorMessage, ErrorExtendedMessage, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, LastMntOn, LastMntBy, Version) VALUES (N'90229', N'EN', N'E', N'When BPI not required BPI treatment must be either not passed OR NO_BPI', N'test', N'Approved', N'', N'', N'', N'', N'', 0, NULL, 1000, 3);
	</sql>
	</changeSet>
		<changeSet id="168" author="Surekha">
		<sql>
		Update SecGroupRights set RightId=(select RightID from SecRights where RightName='CityDialog_BankRefNo') where RightId =(select RightID from SecRights where RightName='BranchDialog_BankRefNo') and grpId=(select GrpID from SecGroups where GrpCode='CITY_MAKER');
	</sql>
	</changeSet>
	<changeSet  author="Surekha" id="169">
		<sql>
			Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
			Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	
			INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'EmployerDetailDialog_BankRefNo','EmployerDetailDialog',0,1000,CURRENT_TIMESTAMP,'Approved','','',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
			INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='EMPLOYERDETAIL_MAKER'),(select RightID from SecRights where RightName='EmployerDetailDialog_BankRefNo'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
	
			Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
			Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
		</sql>
	</changeSet>
	<changeSet id="170" author="Surekha">
		<addColumn tableName="EmployerDetail">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="171" author="Surekha">
		<addColumn tableName="EmployerDetail_Temp">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="172" author="Surekha">
		<createView replaceIfExists="true" viewName="EmployerDetail_View"> SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail_Temp T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
   UNION ALL 
  SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
           LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
     WHERE NOT EXISTS ( SELECT 1 
                        FROM EmployerDetail_Temp 
                          WHERE EmployerId = T1.EmployerId )
         </createView>
	</changeSet>
	<changeSet id="173" author="Surekha">
		<createView replaceIfExists="true" viewName="EmployerDetail_TView">  SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail_Temp T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
         </createView>
	</changeSet>
	<changeSet id="174" author="Surekha">
		<createView replaceIfExists="true" viewName="EmployerDetail_AView">  SELECT T1.EmployerId ,T1.EmpIndustry ,T1.EmpName ,T1.EstablishDate ,T1.EmpAddrHNbr ,
          T1.EmpFlatNbr ,T1.EmpAddrStreet ,T1.EmpAddrLine1 ,T1.EmpAddrLine2 ,T1.EmpPOBox ,T1.EmpCountry ,T1.EmpPhone ,T1.EmpFax ,T1.EmpTelexNo ,T1.EmpEmailId ,T1.EmpProvince ,T1.EmpCity ,
          T1.EmpWebSite ,T1.ContactPersonName ,T1.ContactPersonNo ,T1.EmpAlocationType ,T1.BankRefNo,T1.Version ,T1.LastMntBy ,T1.LastMntOn ,
          T2.UsrLogin ,T2.UsrFName ,T2.UsrMName ,T2.UsrLName ,T1.RecordStatus ,T1.RoleCode ,T1.NextRoleCode ,T1.TaskId ,T1.NextTaskId ,
          T1.RecordType ,T1.WorkflowId ,T3.EMPTYPEDESC lovDescIndustryDesc,T4.CountryDesc lovDescCountryDesc,T5.CPProvinceName lovDescProvinceName  ,T6.PCCityName lovDescCityName  
     FROM EmployerDetail T1
            JOIN SecUsers T2   ON T1.LastMntBy = T2.UsrID
            JOIN RMTEMPTYPES T3   ON T1.EmpIndustry = T3.EMPTYPE
            JOIN BMTCountries T4   ON T1.EmpCountry = T4.CountryCode
            JOIN RMTCountryVsProvince T5   ON T1.EmpProvince = T5.CPProvince
            AND T1.EmpCountry = T5.CPCountry
            LEFT JOIN RMTProvinceVsCity T6   ON T1.EmpCity = T6.PCCity
            AND T1.EmpProvince = T6.PCProvince
            AND T1.EmpCountry = T6.PCCountry
         </createView>
	</changeSet>
	<changeSet author="Surekha" id="175">
	<sql>
		Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);

		INSERT INTO SecRights SELECT (select (SeqNo+1) from SeqSecRights),3,'ProvinceDialog_BankRefNo','ProvinceDialog',0,1000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='PROVINCE_MAKER'),(select RightID from SecRights where RightName='ProvinceDialog_BankRefNo'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

		Update SeqSecRights set SeqNo = (select MAX(RightID) from SecRights);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	</sql>
</changeSet>
	<changeSet id="176" author="Surekha">
		<addColumn tableName="RMTCountryVsProvince">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="177" author="Surekha">
		<addColumn tableName="RMTCountryVsProvince_Temp">
			<column name="BankRefNo" type="varchar(20)" />
		</addColumn>
	</changeSet>
	<changeSet id="178" author="Surekha">
		<createView replaceIfExists="true" viewName="RMTCountryVsProvince_View"> SELECT  T1.CPCountry, T1.CPProvince, T1.CPProvinceName,T1.SystemDefault, T1.Version, T2.COUNTRYDESC AS lovDescCPCountryName, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.BankRefNo
				FROM         RMTCountryVsProvince_Temp T1 INNER JOIN
                      BMTCountries  T2 ON T1.CPCountry = T2.CountryCode
			UNION ALL
			SELECT     T1.CPCountry, T1.CPProvince, T1.CPProvinceName,T1.SystemDefault, T1.Version, T2.COUNTRYDESC AS lovDescCPCountryName, T1.LastMntBy, T1.LastMntOn, 
			                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.BankRefNo
			FROM         RMTCountryVsProvince  T1 INNER JOIN
			                      BMTCountries  T2 ON T1.CPCountry = T2.CountryCode
			WHERE     NOT EXISTS
			                          (SELECT     1
                            FROM          RMTCountryVsProvince_Temp
                            WHERE      CPCountry = T1.CPCountry AND CPProvince = T1.CPProvince)
         </createView>
	</changeSet>
	<changeSet id="179" author="Surekha">
		<createView replaceIfExists="true" viewName="RMTCountryVsProvince_AView"> SELECT  T1.CPCountry, T1.CPProvince, T1.CPProvinceName,T1.SystemDefault, T1.Version, T2.COUNTRYDESC AS lovDescCPCountryName, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.BankRefNo
				FROM         RMTCountryVsProvince T1 INNER JOIN
                      BMTCountries  T2 ON T1.CPCountry = T2.CountryCode
         </createView>
	</changeSet>
	<changeSet  author="Irfan" id="180">
	<modifyDataType tableName="FinTypeVASProducts" columnName="Mandatory" newDataType="nvarchar(1)"/>
	</changeSet>
	<changeSet  author="Irfan" id="181">
	<modifyDataType tableName="FinTypeVASProducts_Temp" columnName="Mandatory" newDataType="nvarchar(1)"/>
	</changeSet>
	<!-- <changeSet author="Irfan" id="182">
		<addNotNullConstraint tableName="FinTypeVASProducts" columnName="Mandatory" columnDataType="nvarchar(1)"/>
	</changeSet>
	<changeSet  author="Irfan" id="183">
		<addNotNullConstraint tableName="FinTypeVASProducts_Temp" columnName="Mandatory" columnDataType="nvarchar(1)"/>
	</changeSet> -->
	
	<changeSet author="DurgaPrasad D" id="184">
		<sql>
		Delete from ErrorDetails where ErrorCode IN('90125','90126');
		</sql>
		<insert tableName="ErrorDetails">
			<column name="ErrorCode">90125</column>
			<column name="ErrorLanguage">EN</column>
			<column name="ErrorSeverity">E</column>
			<column name="ErrorMessage"><![CDATA[Customer CIF (cif) is Mandatory.]]></column>
			<column name="ErrorExtendedMessage"></column>
			<column name="RecordStatus">Approved</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType"></column>
			<column name="WorkflowId">0</column>
			<column name="LastMntOn"></column>
			<column name="LastMntBy">1000</column>
			<column name="Version">0</column>
		</insert>		
		<insert tableName="ErrorDetails">
			<column name="ErrorCode">90126</column>
			<column name="ErrorLanguage">EN</column>
			<column name="ErrorSeverity">E</column>
			<column name="ErrorMessage"><![CDATA[Loan Type (finType) is Mandatory.]]></column>
			<column name="ErrorExtendedMessage"></column>
			<column name="RecordStatus">Approved</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType"></column>
			<column name="WorkflowId">0</column>
			<column name="LastMntOn"></column>
			<column name="LastMntBy">1000</column>
			<column name="Version">0</column>
		</insert>
	</changeSet>
	<changeSet id="185" author="Satish">
	<createView replaceIfExists="true" viewName="PayOrderIssueHeader_View">
	SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T5.CcyDesc  FinCcyDesc, T6.IntRateBasisDesc  LovDescProfitDaysBasisName, T5.CcyEditField  LovDescFinFormatter,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb
FROM        PayOrderIssueHeader_Temp   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  INNER JOIN
            RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode LEFT JOIN
            BMTIntRateBasisCodes  T6 ON T2.ProfitDaysBasis = T6.IntRateBasisCode
UNION ALL
SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T5.CcyDesc  FinCcyDesc, T6.IntRateBasisDesc  LovDescProfitDaysBasisName, T5.CcyEditField  LovDescFinFormatter,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb
FROM        PayOrderIssueHeader   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  INNER JOIN
            RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode LEFT JOIN
            BMTIntRateBasisCodes  T6 ON T2.ProfitDaysBasis = T6.IntRateBasisCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          PayOrderIssueHeader_Temp
                            WHERE      FinReference = T1.FinReference)
	</createView>
	
	<createView replaceIfExists="true" viewName="PayOrderIssueHeader_AView">
	SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T5.CcyDesc  FinCcyDesc, T6.IntRateBasisDesc  LovDescProfitDaysBasisName, T5.CcyEditField  LovDescFinFormatter,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb
FROM        PayOrderIssueHeader   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  INNER JOIN
            RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode LEFT JOIN
            BMTIntRateBasisCodes  T6 ON T2.ProfitDaysBasis = T6.IntRateBasisCode
	</createView>
	
	
	</changeSet>
	
	<changeSet author="Madhubabu" id="186">
		<insert tableName="ErrorDetails">
			<column name="ErrorCode">E0048</column>
			<column name="ErrorLanguage">EN</column>
			<column name="ErrorSeverity">E</column>
			<column name="ErrorMessage"><![CDATA[Insurance Frequency must be after Repayment frequency for the insurance Type {0}]]></column>
			<column name="ErrorExtendedMessage"></column>
			<column name="RecordStatus">Approved</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType"></column>
			<column name="WorkflowId">0</column>
			<column name="LastMntOn"></column>
			<column name="LastMntBy">1000</column>
			<column name="Version">0</column>
		</insert>
	</changeSet>
	
	<changeSet id="187" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylsFCCY_URIA_View" />
	</changeSet>
	<changeSet id="188" author="Prasad">
		<dropView viewName="RPT_ABGInF_Anyls_RIALCCY_View" />
	</changeSet>
	<changeSet id="189" author="Prasad">
		<dropView viewName="RPT_ABGInF_AnylsLCCY_View" />
	</changeSet>
	<changeSet id="190" author="surekha">
	<sql>
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
		INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='VEHICLEDEALER_MAKER'),(select RightID from SecRights where RightName='VehicleDealerDialog_SellerType'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	</sql>
	</changeSet>
		
<changeSet id="191" author="Prasad">
		<createView replaceIfExists="true" viewName="Accounts_AView">
		SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.AcPrvDayBal, T1.AcTodayDr, T1.AcTodayCr, T1.AcTodayNet, T1.AcAccrualBal, T1.AcTodayBal, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      Customers.CustCIF lovDescCustCIF,  RMTBranches.BranchDesc lovDescBranchCodeName, 
                       RMTCurrencies.CcyDesc lovDescCurrency,  RMTAccountTypes.AcTypeDesc lovDescAccTypeDesc, 
                       RMTCurrencies.CcyEditField lovDescFinFormatter
FROM          Accounts T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTCurrencies ON T1.AcCcy =  RMTCurrencies.CcyCode AND T1.AcCcy =  RMTCurrencies.CcyCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
		</createView>
</changeSet>
<changeSet id="192" author="Prasad">
		<createView replaceIfExists="true" viewName="Accounts_View">
		SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.AcPrvDayBal, T1.AcTodayDr, T1.AcTodayCr, T1.AcTodayNet, T1.AcAccrualBal, T1.AcTodayBal, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                       Customers.CustCIF  lovDescCustCIF,  RMTBranches.BranchDesc  lovDescBranchCodeName, 
                       RMTCurrencies.CcyDesc  lovDescCurrency,  RMTAccountTypes.AcTypeDesc  lovDescAccTypeDesc,
                       RMTCurrencies.CcyEditField  lovDescFinFormatter
FROM          Accounts_Temp  T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTCurrencies ON T1.AcCcy =  RMTCurrencies.CcyCode AND T1.AcCcy =  RMTCurrencies.CcyCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
UNION ALL
SELECT     T1.AccountId, T1.AcCcy, T1.AcType, T1.AcBranch, T1.AcCustId, T1.AcFullName, T1.AcShortName, T1.AcPurpose, T1.InternalAc, T1.CustSysAc, 
                      T1.AcPrvDayBal, T1.AcTodayDr, T1.AcTodayCr, T1.AcTodayNet, T1.AcAccrualBal, T1.AcTodayBal, T1.AcOpenDate, T1.AcCloseDate, 
                      T1.AcLastCustTrnDate, T1.AcLastSysTrnDate, T1.AcActive, T1.AcBlocked, T1.AcClosed, T1.HostAcNumber, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                       Customers.CustCIF  lovDescCustCIF,  RMTBranches.BranchDesc  lovDescBranchCodeName, 
                       RMTCurrencies.CcyDesc  lovDescCurrency,  RMTAccountTypes.AcTypeDesc  lovDescAccTypeDesc,
                       RMTCurrencies.CcyEditField  lovDescFinFormatter
FROM          Accounts  T1 LEFT OUTER JOIN
                       Customers ON T1.AcCustId =  Customers.CustID AND T1.AcCustId =  Customers.CustID INNER JOIN
                       RMTBranches ON T1.AcBranch =  RMTBranches.BranchCode AND T1.AcBranch =  RMTBranches.BranchCode INNER JOIN
                       RMTCurrencies ON T1.AcCcy =  RMTCurrencies.CcyCode AND T1.AcCcy =  RMTCurrencies.CcyCode INNER JOIN
                       RMTAccountTypes ON T1.AcType =  RMTAccountTypes.AcType AND T1.AcType =  RMTAccountTypes.AcType
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          Accounts_TEMP
                            WHERE      AccountId = T1.AccountId)
		</createView>
</changeSet>
<changeSet id="193" author="pruthvi">
		<createView replaceIfExists="true" viewName="AgreementFieldDetails_AView">
SELECT   T1.FinReference, T1.custCity, T1.CustPoBox,T1.CustCntAmt,T1.sellerName, T1.custNationality, T1.plotOrUnitNo,
 T1.otherbankName, T1.propertyType, T1.sectorOrCommunity, 
         T1.finAmount, T1.proprtyDesc, T1.propertyLocation,
         T1.jointApplicant,T1.sellerNationality,T1.sellerPobox,T1.propertyUse,T1.plotareainsqft,
         T1.builtupAreainSqft,T1.ahbBranch,T1.fininstitution,T1.facilityName,T1.sellerCntbAmt,
         T1.otherBankAmt,T1.propertyOwner,T1.collateralAuthority,T1.collateral1,T1.sellerInternal,T1.Area,  
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId	
		 FROM AgreementFieldDetails T1  
		 INNER JOIN FinanceMain T2 ON T2.FinReference = T1.FinReference
		 </createView>
</changeSet>
<changeSet id="194" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTAuthorization_AView">
SELECT      T1.AuthUserId, T1.AuthType, T1.AuthName, T1.AuthDept, T1.AuthDesig, T1.AuthSignature, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin authUserIdName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T3.DeptDesc AuthDeptName, T4.DesgDesc AuthDesigName
FROM         AMTAuthorization T1 INNER JOIN
                      SecUsers T2 ON T1.AuthUserId = T2.UsrID INNER JOIN
                      BMTDepartments T3 ON T1.AuthDept = T3.DeptCode INNER JOIN
                      BMTDesignations T4 ON T1.AuthDesig = T4.DesgCode
                      </createView>
</changeSet>		 
<changeSet id="195" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTAuthorization_TView">
SELECT     T1.AuthUserId, T1.AuthType, T1.AuthName, T1.AuthDept, T1.AuthDesig, T1.AuthSignature, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin authUserIdName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T3.DeptDesc AuthDeptName, T4.DesgDesc AuthDesigName
FROM          AMTAuthorization_Temp T1 INNER JOIN
                       SecUsers T2 ON T1.AuthUserId = T2.UsrID INNER JOIN
                       BMTDepartments T3 ON T1.AuthDept = T3.DeptCode INNER JOIN
                       BMTDesignations T4 ON T1.AuthDesig = T4.DesgCode
                       </createView>
</changeSet>
<changeSet id="196" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTAuthorization_View">
SELECT      T1.AuthUserId, T1.AuthType, T1.AuthName, T1.AuthDept, T1.AuthDesig, T1.AuthSignature, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin authUserIdName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T3.DeptDesc AuthDeptName, T4.DesgDesc AuthDesigName
FROM         AMTAuthorization_Temp T1 INNER JOIN
                      SecUsers T2 ON T1.AuthUserId = T2.UsrID INNER JOIN
                      BMTDepartments T3 ON T1.AuthDept = T3.DeptCode INNER JOIN
                      BMTDesignations T4 ON T1.AuthDesig = T4.DesgCode
UNION ALL
SELECT      T1.AuthUserId, T1.AuthType, T1.AuthName, T1.AuthDept, T1.AuthDesig, T1.AuthSignature, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T2.UsrLogin authUserIdName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T3.DeptDesc AuthDeptName, T4.DesgDesc AuthDesigName
FROM         AMTAuthorization T1 INNER JOIN
                      SecUsers T2 ON T1.AuthUserId = T2.UsrID INNER JOIN
                      BMTDepartments T3 ON T1.AuthDept = T3.DeptCode INNER JOIN
                      BMTDesignations T4 ON T1.AuthDesig = T4.DesgCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          AMTAuthorization_TEMP
                            WHERE      AuthUserId = T1.AuthUserId)	
                            </createView>
</changeSet>
<changeSet id="197" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTCourse_AView">
SELECT     CourseDesc, CourseName, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, RecordType, NextTaskId, 
                      WorkflowId
FROM         AMTCourse	
</createView>	
</changeSet>

<changeSet id="198" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTCourseType_AView">
SELECT     CourseTypeCode, CourseTypeDesc, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, 
                      WorkflowId
FROM         AMTCourseType	
</createView>	
</changeSet>

<changeSet id="199" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTExpenseType_AView">
SELECT     ExpenceTypeId, ExpenceTypeName, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, 
                      ExpenseFor
FROM         AMTExpenseType		
</createView>
</changeSet>


<changeSet id="200" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleDealer_AView">
SELECT       T1.DealerId,T1.DealerType,T1.DealerName,T1.DealerTelephone,T1.DealerFax,T1.DealerAddress1,T1.DealerAddress2,
             T1.DealerAddress3,T1.DealerAddress4,T1.DealerCountry,T5.CountryDesc lovDescCountry,T1.DealerProvince,
             T4.CPProvinceName lovDescProvince,T1.DealerCity,T3.PCCityName lovDescCity,T1.Email,T1.POBox,T1.Emirates
             ,T1.CommisionPaidAt,T1.CalculationRule,T7.RuleCodeDesc CalRuleDesc,T1.PaymentMode,T1.AccountNumber,T1.AccountingSetId,
             T8.AccountSetCode AccountingSetCode ,T8.AccountSetCodeName AccountingSetDesc,T9.CPProvinceName EmiratesDescription,T1.SellerType,
             T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
FROM         AMTVehicleDealer T1 LEFT OUTER JOIN
             RMTProvinceVsCity T3 ON T1.DealerCountry = T3.PCCountry AND T1.DealerProvince = T3.PCProvince AND T1.DealerCity = T3.PCCity  AND T1.DealerCity = T3.PCCity  LEFT OUTER JOIN
             RMTCountryVsProvince T4 ON T1.DealerCountry = T4.CPCountry AND T1.DealerProvince = T4.CPProvince LEFT OUTER JOIN
             BMTCountries T5 ON T1.DealerCountry = T5.CountryCode LEFT OUTER JOIN
             Rules T7 ON T1.CalculationRule = T7.RuleCode AND RuleEvent = 'ADDDBS' LEFT OUTER JOIN
             RMTAccountingSet T8 ON T1.AccountingSetId = T8.AccountSetid LEFT OUTER JOIN
             RMTCountryVsProvince T9 ON T1.Emirates = T9.CPProvince	
             </createView>	
</changeSet>
<changeSet id="201" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleDealer_View">
SELECT       T1.DealerId,T1.DealerType,T1.DealerName,T1.DealerTelephone,T1.DealerFax,T1.DealerAddress1,T1.DealerAddress2,
             T1.DealerAddress3,T1.DealerAddress4,T1.DealerCountry,T5.CountryDesc lovDescCountry,T1.DealerProvince,
             T4.CPProvinceName lovDescProvince,T1.DealerCity,T3.PCCityName lovDescCity,T1.Email,T1.POBox,T1.Emirates
             ,T1.CommisionPaidAt,T1.CalculationRule,T7.RuleCodeDesc CalRuleDesc,T1.PaymentMode,T1.AccountNumber,T1.AccountingSetId,
             T8.AccountSetCode AccountingSetCode ,T8.AccountSetCodeName AccountingSetDesc,T9.CPProvinceName EmiratesDescription,T1.SellerType,
             T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
FROM         AMTVehicleDealer_Temp T1 LEFT OUTER JOIN
             RMTProvinceVsCity T3 ON T1.DealerCountry = T3.PCCountry AND T1.DealerProvince = T3.PCProvince AND T1.DealerCity = T3.PCCity LEFT OUTER JOIN
             RMTCountryVsProvince T4 ON T1.DealerCountry = T4.CPCountry AND T1.DealerProvince = T4.CPProvince LEFT OUTER JOIN
             BMTCountries T5 ON T1.DealerCountry = T5.CountryCode LEFT OUTER JOIN
             Rules T7 ON T1.CalculationRule = T7.RuleCode AND RuleEvent = 'ADDDBS' LEFT OUTER JOIN
             RMTAccountingSet T8 ON T1.AccountingSetId = T8.AccountSetid LEFT OUTER JOIN
             RMTCountryVsProvince T9 ON T1.Emirates = T9.CPProvince


UNION ALL

SELECT       T1.DealerId,T1.DealerType,T1.DealerName,T1.DealerTelephone,T1.DealerFax,T1.DealerAddress1,T1.DealerAddress2,
             T1.DealerAddress3,T1.DealerAddress4,T1.DealerCountry,T5.CountryDesc lovDescCountry,T1.DealerProvince,
             T4.CPProvinceName lovDescProvince,T1.DealerCity,T3.PCCityName lovDescCity,T1.Email,T1.POBox,T1.Emirates
             ,T1.CommisionPaidAt,T1.CalculationRule,T7.RuleCodeDesc CalRuleDesc,T1.PaymentMode,T1.AccountNumber,T1.AccountingSetId,
             T8.AccountSetCode AccountingSetCode ,T8.AccountSetCodeName AccountingSetDesc,T9.CPProvinceName EmiratesDescription,T1.SellerType,
             T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId
FROM         AMTVehicleDealer T1 LEFT OUTER JOIN
             RMTProvinceVsCity T3 ON T1.DealerCountry = T3.PCCountry AND T1.DealerProvince = T3.PCProvince AND T1.DealerCity = T3.PCCity AND T1.DealerCity = T3.PCCity LEFT OUTER JOIN
             RMTCountryVsProvince T4 ON T1.DealerCountry = T4.CPCountry AND T1.DealerProvince = T4.CPProvince LEFT OUTER JOIN
             BMTCountries T5 ON T1.DealerCountry = T5.CountryCode   LEFT OUTER JOIN
             Rules T7 ON T1.CalculationRule = T7.RuleCode AND RuleEvent = 'ADDDBS' LEFT OUTER JOIN
             RMTAccountingSet T8 ON T1.AccountingSetId = T8.AccountSetid LEFT OUTER JOIN
             RMTCountryVsProvince T9 ON T1.Emirates = T9.CPProvince

WHERE     NOT EXISTS

 (SELECT 1 FROM AMTVehicleDealer_TEMP 
  WHERE DealerId = T1.DealerId)		
  </createView>
</changeSet>
<changeSet id="202" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleManufacturer_AView">
SELECT     ManufacturerId, ManufacturerName, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, 
                      WorkflowId
FROM         AMTVehicleManufacturer
</createView>
</changeSet>
<changeSet id="203" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleManufacturer_View">
SELECT	T1.ManufacturerId, T1.ManufacturerName		
		, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	AMTVehicleManufacturer_TEMP T1
UNION ALL
SELECT	T1.ManufacturerId, T1.ManufacturerName		
		, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	AMTVehicleManufacturer T1
WHERE     NOT EXISTS 
(SELECT 1 
FROM AMTVehicleManufacturer_TEMP 
WHERE ManufacturerId = T1.ManufacturerId)
</createView>
</changeSet>

<changeSet id="204" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleModel_AView">
SELECT     T1.VehicleManufacturerId, T2.ManufacturerName lovDescVehicleManufacturerName, T1.VehicleModelId, T1.VehicleModelDesc, T1.Version, T1.LastMntBy, 
                      T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM         AMTVehicleModel T1 INNER JOIN
                      AMTVehicleManufacturer T2 ON T1.VehicleManufacturerId = T2.ManufacturerId
                      </createView>
</changeSet>

<changeSet id="205" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleModel_View">
SELECT     T1.VehicleManufacturerId , T2.ManufacturerName lovDescVehicleManufacturerName, T1.VehicleModelId, 
                      T1.VehicleModelDesc, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId
FROM          AMTVehicleModel_TEMP T1 INNER JOIN
                       AMTVehicleManufacturer T2 ON T1.VehicleManufacturerId = T2.ManufacturerId
UNION ALL
SELECT     T1.VehicleManufacturerId , T2.ManufacturerName lovDescVehicleManufacturerName, T1.VehicleModelId, 
                      T1.VehicleModelDesc, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId
FROM          AMTVehicleModel T1 INNER JOIN
                       AMTVehicleManufacturer T2 ON T1.VehicleManufacturerId = T2.ManufacturerId
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          AMTVehicleModel_TEMP
                            WHERE      VehicleModelId = T1.VehicleModelId)
                            </createView>
</changeSet>

<changeSet id="206" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleVersion_AView">
SELECT     T1.VehicleVersionId, T2.VehicleManufacturerId, T2.lovDescVehicleManufacturerName, T1.VehicleModelId, 
                      T2.VehicleModelDesc lovDescVehicleModelDesc, T1.VehicleVersionCode, T1.VehicleCategory , T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.VehicleDoors, T1.VehicleCC
FROM          AMTVehicleVersion T1 INNER JOIN
                       AMTVehicleModel_AView T2 ON T1.VehicleModelId = T2.VehicleModelId	
                       </createView>	
</changeSet>

<changeSet id="207" author="pruthvi">
		<createView replaceIfExists="true" viewName="AMTVehicleVersion_View">
SELECT     T1.VehicleVersionId, T2.VehicleManufacturerId, T2.lovDescVehicleManufacturerName, T1.VehicleModelId, 
                      T2.VehicleModelDesc lovDescVehicleModelDesc, T1.VehicleVersionCode, T1.VehicleCategory, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.VehicleDoors, T1.VehicleCC
FROM         AMTVehicleVersion_Temp T1 INNER JOIN
                      AMTVehicleModel_AView T2 ON T1.VehicleModelId = T2.VehicleModelId
UNION ALL
SELECT     T1.VehicleVersionId, T2.VehicleManufacturerId, T2.lovDescVehicleManufacturerName, T1.VehicleModelId, 
                      T2.VehicleModelDesc lovDescVehicleModelDesc, T1.VehicleVersionCode, T1.VehicleCategory, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T1.VehicleDoors, T1.VehicleCC
FROM         AMTVehicleVersion T1 INNER JOIN
                      AMTVehicleModel_AView T2 ON T1.VehicleModelId = T2.VehicleModelId
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          AMTVehicleVersion_TEMP
                            WHERE      VehicleVersionId = T1.VehicleVersionId)		
                            </createView>
</changeSet>

<changeSet id="208" author="pruthvi">
		<createView replaceIfExists="true" viewName="API_CHANNEL_DETAILS_View">
SELECT T.Id,T.Code,T.Description, T.Active,T.Version, T.CreatedBy, 
	T.CreatedOn,t.ModifiedBy,T.ModifiedOn , T.RecordStatus, T.RoleCode, T.NextRoleCode, T.TaskId, T.NextTaskId, 
	T.RecordType, T.WorkflowId
FROM API_CHANNEL_DETAILS_TEMP T
UNION ALL
SELECT T.Id,T.Code,T.Description, T.Active,T.Version, T.CreatedBy, 
	T.CreatedOn,t.ModifiedBy,T.ModifiedOn , T.RecordStatus, T.RoleCode, T.NextRoleCode, T.TaskId, T.NextTaskId, 
	T.RecordType, T.WorkflowId
FROM API_CHANNEL_DETAILS T
WHERE     (NOT EXISTS
                          (SELECT     1 FROM          API_CHANNEL_DETAILS_TEMP
                            WHERE      (Id = T.Id)))
                            </createView>
</changeSet>
<changeSet id="209" author="pruthvi">
		<createView replaceIfExists="true" viewName="API_CHANNEL_IP_DETAILS_View">
SELECT T.Id,T.ChannelId,T.IP, T.Active,T.Version, T.CreatedBy, 
	T.CreatedOn,t.ModifiedBy,T.ModifiedOn ,T.RecordStatus, T.RoleCode, T.NextRoleCode, T.TaskId, T.NextTaskId, 
	T.RecordType, T.WorkflowId
FROM API_CHANNEL_IP_DETAILS_Temp T INNER JOIN
                      API_CHANNEL_DETAILS_Temp ACT ON ACT.Id = T.ChannelId

UNION ALL
SELECT T.Id,T.ChannelId,T.IP, T.Active,T.Version, T.CreatedBy, 
	T.CreatedOn,t.ModifiedBy,T.ModifiedOn ,T.RecordStatus, T.RoleCode, T.NextRoleCode, T.TaskId, T.NextTaskId, 
	T.RecordType, T.WorkflowId
FROM API_CHANNEL_IP_DETAILS T INNER JOIN
                      API_CHANNEL_DETAILS AC ON AC.Id = T.ChannelId

WHERE     (NOT EXISTS
                          (SELECT     1 FROM          API_CHANNEL_IP_DETAILS_Temp
                            WHERE      (ChannelId = T.ChannelId AND Id = T.Id)))
                            </createView>
</changeSet>

<changeSet id="210" author="pruthvi">
		<createView replaceIfExists="true" viewName="AssetTypes_AView">
SELECT     T1.AssetType, T1.AssetDesc,T1.PreValidation,T1.PostValidation, T1.Active, T1.Remarks,T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
			T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
			FROM AssetTypes T1
			</createView>
</changeSet>

<changeSet id="211" author="pruthvi">
		<createView replaceIfExists="true" viewName="AssetTypes_View">
SELECT    T1.AssetType, T1.AssetDesc,T1.PreValidation,T1.PostValidation, T1.Active,T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
			T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
          
          FROM   AssetTypes_Temp T1 
          
UNION ALL
SELECT     T1.AssetType, T1.AssetDesc,T1.PreValidation,T1.PostValidation, T1.Active,T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
			T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
          
          FROM   AssetTypes T1  WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          AssetTypes_Temp
                            WHERE      AssetType = T1.AssetType)
                            </createView>
</changeSet>
<changeSet id="212" author="Satish">
		<createView replaceIfExists="true" viewName="PayOrderIssueHeader_View">
		SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T5.CcyDesc  FinCcyDesc, T6.IntRateBasisDesc  LovDescProfitDaysBasisName, T5.CcyEditField  LovDescFinFormatter,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb
FROM        PayOrderIssueHeader_Temp   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  INNER JOIN
            RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode LEFT JOIN
            BMTIntRateBasisCodes  T6 ON T2.ProfitDaysBasis = T6.IntRateBasisCode
UNION ALL
SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T5.CcyDesc  FinCcyDesc, T6.IntRateBasisDesc  LovDescProfitDaysBasisName, T5.CcyEditField  LovDescFinFormatter,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb
FROM        PayOrderIssueHeader   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  INNER JOIN
            RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode LEFT JOIN
            BMTIntRateBasisCodes  T6 ON T2.ProfitDaysBasis = T6.IntRateBasisCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          PayOrderIssueHeader_Temp
                            WHERE      FinReference = T1.FinReference)
		</createView>
	</changeSet>
	<changeSet id="213" author="Satish">
		<createView replaceIfExists="true" viewName="PayOrderIssueHeader_AView">
		SELECT     T1.FinReference,T4.CustCIF,T4.PhoneNumber,T4.CustShrtName,T3.FinType,T3.FinTypeDesc,T3.FinCategory,T4.CustCRCPR,
			T1.TotalPOAmount,T1.TotalPOCount,
			T1.IssuedPOAmount,T1.IssuedPOCount,T1.PODueAmount,T1.PODueCount,T2.FinCcy , T2.NumberOfTerms, T2.GraceTerms , T2.FinStartDate , T2.MaturityDate, T2.FinAmount,
            T2.FeeChargeAmt, T2.DownPaySupl, T2.TotalProfit, T2.EffectiveRateOfReturn , T2.ProfitDaysBasis,T2.CustID,
			T5.CcyDesc  FinCcyDesc, T6.IntRateBasisDesc  LovDescProfitDaysBasisName, T5.CcyEditField  LovDescFinFormatter,
			T1.Version,T1.LastMntBy,T1.LastMntOn,T1.RecordStatus,T1.RoleCode,
			T1.NextRoleCode,T1.TaskId,T1.NextTaskId,T1.RecordType,T1.WorkflowId,T3.AlwMultiPartyDisb,T2.quickDisb
FROM        PayOrderIssueHeader   T1  INNER JOIN
			(   
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain
			    UNION ALL 
				SELECT FinCcy,FinType,CustID,NumberOfTerms,GraceTerms,FinStartDate,FinReference,
				MaturityDate,FinAmount,FeeChargeAmt,DownPaySupl,TotalProfit,EffectiveRateOfReturn,ProfitDaysBasis,quickDisb
				FROM FinanceMain_Temp 
				 WHERE NOT EXISTS(
					SELECT 1 FROM FinanceMain WHERE FinReference = FinanceMain_Temp.finreference
				 )
			)  T2 ON T1.FinReference = T2.FinReference INNER JOIN
			RMTFinanceTypes  T3 ON T2.FinType=T3.FinType INNER JOIN
            Customers  T4 ON T2.CustID = T4.CustID  INNER JOIN
            RMTCurrencies T5 ON T2.FinCcy = T5.CcyCode LEFT JOIN
            BMTIntRateBasisCodes  T6 ON T2.ProfitDaysBasis = T6.IntRateBasisCode
		</createView>
	</changeSet>
	<changeSet author="ManojVarma" id="214">
	<createTable tableName="FinTypeFees">
		<column name="FinType" type="nvarchar(8)">
			<constraints primaryKey="true" nullable="false" />
		</column>
		<column name="OriginationFee" type="nchar(1)">
			<constraints primaryKey="true" nullable="false" />
		</column>
		<column name="FinEvent" type="nvarchar(8)">
			<constraints primaryKey="true" nullable="false" />
		</column>
		<column name="FeeTypeID" type="bigint">
			<constraints primaryKey="true" nullable="false" />
		</column>
		<column name="FeeOrder" type="bigint">
			<constraints nullable="false" />
		</column>
		<column name="FeeScheduleMethod" type="nvarchar(8)" />
		<column name="CalculationType" type="nvarchar(8)" />
		<column name="RuleCode" type="nvarchar(8)" />
		<column name="Amount" type="decimal(18,0)" />
		<column name="Percentage" type="decimal(5,2)" />
		<column name="CalculateOn" type="nvarchar(8)" />
		<column name="AlwDeviation" type="nchar(1)" />
		<column name="MaxWaiverPerc" type="decimal(5,2)" />
		<column name="AlwModifyFee" type="nchar(1)" />
		<column name="AlwModifyFeeSchdMthd" type="nchar(1)" />
		<column name="Active" type="nchar(1)" />
		<column name="Version" type="int" defaultValue="0" />
		<column name="LastMntBy" type="bigint" />
		<column name="LastMntOn" type="datetime" />
		<column name="RecordStatus" type="nvarchar(50)" />
		<column name="RoleCode" type="nvarchar(100)" />
		<column name="NextRoleCode" type="nvarchar(200)" />
		<column name="TaskId" type="nvarchar(50)" />
		<column name="NextTaskId" type="nvarchar(200)" />
		<column name="RecordType" type="nvarchar(50)" />
		<column name="WorkflowId" type="bigint" />
	</createTable>

	<addForeignKeyConstraint constraintName="FK_FinTypeFees_FeeTypeID"
		baseTableName="FinTypeFees" baseColumnNames="FeeTypeID"
		referencedColumnNames="FeeTypeID" referencedTableName="FeeTypes" />

</changeSet>

	<changeSet author="ManojVarma" id="215">

		<createTable tableName="FinTypeFees_Temp">
			<column name="FinType" type="nvarchar(8)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="OriginationFee" type="nchar(1)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinEvent" type="nvarchar(8)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeOrder" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="FeeScheduleMethod" type="nvarchar(8)" />
			<column name="CalculationType" type="nvarchar(8)" />
			<column name="RuleCode" type="nvarchar(8)" />
			<column name="Amount" type="decimal(18,0)" />
			<column name="Percentage" type="decimal(5,2)" />
			<column name="CalculateOn" type="nvarchar(8)" />
			<column name="AlwDeviation" type="nchar(1)" />
			<column name="MaxWaiverPerc" type="decimal(5,2)" />
			<column name="AlwModifyFee" type="nchar(1)" />
			<column name="AlwModifyFeeSchdMthd" type="nchar(1)" />
			<column name="Active" type="nchar(1)" />
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="nvarchar(50)" />
			<column name="RoleCode" type="nvarchar(100)" />
			<column name="NextRoleCode" type="nvarchar(200)" />
			<column name="TaskId" type="nvarchar(50)" />
			<column name="NextTaskId" type="nvarchar(200)" />
			<column name="RecordType" type="nvarchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>

		<addForeignKeyConstraint constraintName="FK_FinTypeFees_Temp_FeeTypeID"
			baseTableName="FinTypeFees_Temp" baseColumnNames="FeeTypeID"
			referencedColumnNames="FeeTypeID" referencedTableName="FeeTypes" />

	</changeSet>

	<changeSet author="ManojVarma" id="216">

		<createView replaceIfExists="true" viewName="FinTypeFees_AView">
SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
FROM       FinTypeFees T1 INNER JOIN 
           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
		   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent 
</createView>

		<createView replaceIfExists="true" viewName="FinTypeFees_View">
SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
FROM       FinTypeFees_Temp T1 INNER JOIN 
           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
		   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
UNION ALL
SELECT     T1.FinType, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.FeeScheduleMethod, T1.CalculationType, T1.RuleCode, T1.Amount,
           T1.Percentage, T1.CalculateOn, T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Active, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc,T3.RuleCodeDesc RuleDesc
FROM       FinTypeFees T1 INNER JOIN 
           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID LEFT OUTER JOIN
		   Rules T3 ON T1.RuleCode = T3.RuleCode AND T3.RuleModule='FEES' AND T1.FinEvent = T3.RuleEvent
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinTypeFees_Temp
                            WHERE      FinType = T1.FinType AND FinEvent = T1.FinEvent AND 
							FeeTypeID = T1.FeeTypeID AND OriginationFee = T1.OriginationFee)
</createView>

	</changeSet>

	<changeSet author="ManojVarma" id="217">

		<sql>

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'button_FinTypeFeesDialog_btnNew','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'button_FinTypeFeesDialog_btnEdit','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'button_FinTypeFeesDialog_btnDelete','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'button_FinTypeFeesDialog_btnSave','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_feeType','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_finEvent','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_calculationType','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_ruleAmtPerc','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_calculationOn','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_order','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,' ','
			',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_feeScheduleMethod','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_alwDeviation','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_maxWaiver','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_alwModifyFee','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_alwModifyFeeSchdMthd','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinTypeFeesDialog_active','FinTypeFeesDialog',0,1000,CURRENT_TIMESTAMP,' ','
			',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			UPDATE SeqSecRights set seqno= (Select MAX(RightID) From SecRights);


			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='button_FinTypeFeesDialog_btnSave')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='button_FinTypeFeesDialog_btnDelete')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where RightName='FinTypeFeesDialog_feeType')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where RightName='FinTypeFeesDialog_finEvent')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_calculationType')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_ruleAmtPerc')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_calculationOn')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where RightName='FinTypeFeesDialog_order')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_feeScheduleMethod')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_alwDeviation')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_maxWaiver')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_alwModifyFee')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FinTypeFeesDialog_alwModifyFeeSchdMthd')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FINANCETYPE_MAKER') ,
			(SELECT RightID FROM SecRights where RightName='FinTypeFeesDialog_active')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			UPDATE SeqSecGroupRights set SeqNo = (SELECT MAX(GrpRightID) From
			SecGroupRights);

		</sql>

	</changeSet>

	<changeSet author="ManojVarma" id="218">

		<createTable tableName="FinFeeDetail_Temp">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="OriginationFee" type="nchar(1)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinEvent" type="nvarchar(8)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeOrder" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="CalculatedAmount" type="decimal(18,0)" />
			<column name="ActualAmount" type="decimal(18,0)" />
			<column name="WaivedAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="Terms" type="int" />
			<column name="RemainingFee" type="decimal(18,0)" />
			<column name="PaymentRef" type="nvarchar(20)" />
			<column name="FeeScheduleMethod" type="nvarchar(8)" />
			<column name="CalculationType" type="nvarchar(8)" />
			<column name="RuleCode" type="nvarchar(8)" />
			<column name="FixedAmount" type="decimal(18,0)" />
			<column name="Percentage" type="decimal(5,2)" />
			<column name="CalculateOn" type="nvarchar(8)" />
			<column name="AlwDeviation" type="nchar(1)" />
			<column name="MaxWaiverPerc" type="decimal(5,2)" />
			<column name="AlwModifyFee" type="nchar(1)" />
			<column name="AlwModifyFeeSchdMthd" type="nchar(1)" />
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="nvarchar(50)" />
			<column name="RoleCode" type="nvarchar(100)" />
			<column name="NextRoleCode" type="nvarchar(200)" />
			<column name="TaskId" type="nvarchar(50)" />
			<column name="NextTaskId" type="nvarchar(200)" />
			<column name="RecordType" type="nvarchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>

		<createTable tableName="FinFeeDetail">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="OriginationFee" type="nchar(1)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinEvent" type="nvarchar(8)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeOrder" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="CalculatedAmount" type="decimal(18,0)" />
			<column name="ActualAmount" type="decimal(18,0)" />
			<column name="WaivedAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="Terms" type="int" />
			<column name="RemainingFee" type="decimal(18,0)" />
			<column name="PaymentRef" type="nvarchar(20)" />
			<column name="FeeScheduleMethod" type="nvarchar(8)" />
			<column name="CalculationType" type="nvarchar(8)" />
			<column name="RuleCode" type="nvarchar(8)" />
			<column name="FixedAmount" type="decimal(18,0)" />
			<column name="Percentage" type="decimal(5,2)" />
			<column name="CalculateOn" type="nvarchar(8)" />
			<column name="AlwDeviation" type="nchar(1)" />
			<column name="MaxWaiverPerc" type="decimal(5,2)" />
			<column name="AlwModifyFee" type="nchar(1)" />
			<column name="AlwModifyFeeSchdMthd" type="nchar(1)" />
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="nvarchar(50)" />
			<column name="RoleCode" type="nvarchar(100)" />
			<column name="NextRoleCode" type="nvarchar(200)" />
			<column name="TaskId" type="nvarchar(50)" />
			<column name="NextTaskId" type="nvarchar(200)" />
			<column name="RecordType" type="nvarchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>


		<createTable tableName="RejectFinFeeDetail">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="OriginationFee" type="nchar(1)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinEvent" type="nvarchar(8)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeOrder" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="CalculatedAmount" type="decimal(18,0)" />
			<column name="ActualAmount" type="decimal(18,0)" />
			<column name="WaivedAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="Terms" type="int" />
			<column name="RemainingFee" type="decimal(18,0)" />
			<column name="PaymentRef" type="nvarchar(20)" />
			<column name="FeeScheduleMethod" type="nvarchar(8)" />
			<column name="CalculationType" type="nvarchar(8)" />
			<column name="RuleCode" type="nvarchar(8)" />
			<column name="FixedAmount" type="decimal(18,0)" />
			<column name="Percentage" type="decimal(5,2)" />
			<column name="CalculateOn" type="nvarchar(8)" />
			<column name="AlwDeviation" type="nchar(1)" />
			<column name="MaxWaiverPerc" type="decimal(5,2)" />
			<column name="AlwModifyFee" type="nchar(1)" />
			<column name="AlwModifyFeeSchdMthd" type="nchar(1)" />
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="nvarchar(50)" />
			<column name="RoleCode" type="nvarchar(100)" />
			<column name="NextRoleCode" type="nvarchar(200)" />
			<column name="TaskId" type="nvarchar(50)" />
			<column name="NextTaskId" type="nvarchar(200)" />
			<column name="RecordType" type="nvarchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>


		<createTable tableName="FinFeeDetail_PA">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="OriginationFee" type="nchar(1)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FinEvent" type="nvarchar(8)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeOrder" type="bigint">
				<constraints nullable="false" />
			</column>
			<column name="CalculatedAmount" type="decimal(18,0)" />
			<column name="ActualAmount" type="decimal(18,0)" />
			<column name="WaivedAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="Terms" type="int" />
			<column name="RemainingFee" type="decimal(18,0)" />
			<column name="PaymentRef" type="nvarchar(20)" />
			<column name="FeeScheduleMethod" type="nvarchar(8)" />
			<column name="CalculationType" type="nvarchar(8)" />
			<column name="RuleCode" type="nvarchar(8)" />
			<column name="FixedAmount" type="decimal(18,0)" />
			<column name="Percentage" type="decimal(5,2)" />
			<column name="CalculateOn" type="nvarchar(8)" />
			<column name="AlwDeviation" type="nchar(1)" />
			<column name="MaxWaiverPerc" type="decimal(5,2)" />
			<column name="AlwModifyFee" type="nchar(1)" />
			<column name="AlwModifyFeeSchdMthd" type="nchar(1)" />
			<column name="Version" type="int" defaultValue="0" />
			<column name="LastMntBy" type="bigint" />
			<column name="LastMntOn" type="datetime" />
			<column name="RecordStatus" type="nvarchar(50)" />
			<column name="RoleCode" type="nvarchar(100)" />
			<column name="NextRoleCode" type="nvarchar(200)" />
			<column name="TaskId" type="nvarchar(50)" />
			<column name="NextTaskId" type="nvarchar(200)" />
			<column name="RecordType" type="nvarchar(50)" />
			<column name="WorkflowId" type="bigint" />
		</createTable>

	</changeSet>

	<changeSet author="ManojVarma" id="219">

		<createView replaceIfExists="true" viewName="FinFeeDetail_TView">
SELECT     T1.FinReference, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.CalculatedAmount, T1.ActualAmount, T1.WaivedAmount, T1.PaidAmount,
           T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, T1.CalculateOn,
		   T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc
FROM       FinFeeDetail_Temp T1 INNER JOIN 
           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
</createView>

		<createView replaceIfExists="true" viewName="FinFeeDetail_View">
SELECT     T1.FinReference, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.CalculatedAmount, T1.ActualAmount, T1.WaivedAmount, T1.PaidAmount,
           T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, T1.CalculateOn,
		   T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc
FROM       FinFeeDetail_Temp T1 INNER JOIN 
           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
UNION ALL
SELECT     T1.FinReference, T1.OriginationFee, T1.FinEvent, T1.FeeTypeID, T1.FeeOrder, T1.CalculatedAmount, T1.ActualAmount, T1.WaivedAmount, T1.PaidAmount,
           T1.FeeScheduleMethod, T1.Terms, T1.RemainingFee, T1.PaymentRef, T1.CalculationType, T1.RuleCode, T1.FixedAmount, T1.Percentage, T1.CalculateOn,
		   T1.AlwDeviation, T1.MaxWaiverPerc, T1.AlwModifyFee, T1.AlwModifyFeeSchdMthd, T1.Version, T1.LastMntBy,
		   T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
		   T2.FeeTypeCode, T2.FeeTypeDesc
FROM       FinFeeDetail T1 INNER JOIN 
           FeeTypes T2 ON T1.FeeTypeID = T2.FeeTypeID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinFeeDetail_Temp
                            WHERE      FinReference = T1.FinReference AND OriginationFee = T1.OriginationFee
							AND FinEvent = T1.FinEvent AND FeeTypeID = T1.FeeTypeID)
</createView>

	</changeSet>

	<changeSet author="ManojVarma" id="220">

		<sql>


			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'FinFeeDetailListCtrl_NewPaymentDetail','FinFeeDetailListCtrl',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FinFeeDetailListCtrl_AlwFeeMaintenance','FinFeeDetailListCtrl',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'FinFeeDetailListCtrl_NewFinInsurance','FinFeeDetailListCtrl',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			UPDATE SeqSecRights set seqno= (Select MAX(RightID) From SecRights);


			INSERT INTO
			SecGroupRights(GrpRightID,GrpID,RightID,AccessType,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,
			TaskId,NextTaskId,RecordType,WorkflowId)
			SELECT (select max(GrpRightid) From SecGrouprights)+row_number() over(order
			by GrpID),GrpID,
			(Select Rightid From SecRights Where
			Rightname='FinFeeDetailListCtrl_NewPaymentDetail'),AccessType,
			Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,
			TaskId,NextTaskId,RecordType,WorkflowId
			FROM SecGroupRights Where Rightid in (
			Select Rightid From SecRights Where
			Rightname='FeeDetailDialog_feeAccountId');

			INSERT INTO
			SecGroupRights(GrpRightID,GrpID,RightID,AccessType,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,
			TaskId,NextTaskId,RecordType,WorkflowId)
			SELECT (select max(GrpRightid) From SecGrouprights)+row_number() over(order
			by GrpID),GrpID,
			(Select Rightid From SecRights Where
			Rightname='FinFeeDetailListCtrl_NewFinInsurance'),AccessType,
			Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,
			TaskId,NextTaskId,RecordType,WorkflowId
			FROM SecGroupRights Where Rightid in (
			Select Rightid From SecRights Where
			Rightname='FeeDetailDialog_feeAccountId');

			INSERT INTO
			SecGroupRights(GrpRightID,GrpID,RightID,AccessType,Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,
			TaskId,NextTaskId,RecordType,WorkflowId)
			SELECT (select max(GrpRightid) From SecGrouprights)+row_number() over(order
			by GrpID),GrpID,
			(Select Rightid From SecRights Where
			Rightname='FinFeeDetailListCtrl_AlwFeeMaintenance'),AccessType,
			Version,LastMntBy,LastMntOn,RecordStatus,RoleCode,NextRoleCode,
			TaskId,NextTaskId,RecordType,WorkflowId
			FROM SecGroupRights Where Rightid in (
			Select Rightid From SecRights Where
			Rightname='FeeDetailDialog_feeAccountId');

			UPDATE SeqSecGroupRights set SeqNo = (SELECT MAX(GrpRightID) From
			SecGroupRights);


			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'button_FeePaymentDetailDialog_btnSave','FeePaymentDetailDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 2,
			'button_FeePaymentDetailDialog_btnDelete','FeePaymentDetailDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FeePaymentDetailDialog_paymentMethod','FeePaymentDetailDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FeePaymentDetailDialog_paymentAmount','FeePaymentDetailDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FeePaymentDetailDialog_valueDate','FeePaymentDetailDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

			INSERT INTO SecRights SELECT (Select MAX(RightID)+1 From SecRights), 3,
			'FeePaymentDetailDialog_paymentSequence','FeePaymentDetailDialog',0,1000,CURRENT_TIMESTAMP,'
			',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;


			UPDATE SeqSecRights set seqno= (Select MAX(RightID) From SecRights);


			INSERT INTO SecGroups SELECT (Select MAX(GrpID)+1 From SecGroups),
			'FEEPAYMENT_MAKER', 'WF Maker for Fee Payment Detail',
			0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroups WHERE
			0=0;

			UPDATE SeqSecGroups set seqno= (Select MAX(GrpID) From SecGroups);


			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='button_FeePaymentDetailDialog_btnSave')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='button_FeePaymentDetailDialog_btnDelete')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FeePaymentDetailDialog_paymentMethod')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FeePaymentDetailDialog_paymentAmount')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FeePaymentDetailDialog_valueDate')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecGroupRights values((SELECT MAX(GrpRightID)+1 From
			SecGroupRights), (Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER') ,
			(SELECT RightID FROM SecRights where
			RightName='FeePaymentDetailDialog_paymentSequence')
			, 1, 0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			UPDATE SeqSecGroupRights set SeqNo = (SELECT MAX(GrpRightID) From
			SecGroupRights);


			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From
			SecRoleGroups),(Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER'), (Select RoleID From SecRoles Where
			RoleCd='LCMUR_MAKER'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			INSERT INTO SecRoleGroups values((Select MAX(RoleGrpID)+1 From
			SecRoleGroups),(Select GrpId From SecGroups Where
			GrpCode='FEEPAYMENT_MAKER'), (Select RoleID From SecRoles Where
			RoleCd='RTL_BRANCH_CSR'),0,1000,CURRENT_TIMESTAMP,' ',' ',' ',' ',' ',' ',0);

			UPDATE SeqSecRoleGroups set seqno= (Select MAX(RoleGrpID) From
			SecRoleGroups);

		</sql>

	</changeSet>

	<changeSet author="ManojVarma" id="221">

		<createTable tableName="FinFeeScheduleDetail_Temp">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchDate" type="datetime">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="OSAmount" type="decimal(18,0)" />
			<column name="WaiverAmount" type="decimal(18,0)" />
			<column name="WriteoffAmount" type="decimal(18,0)" />
		</createTable>

		<createTable tableName="FinFeeScheduleDetail">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchDate" type="datetime">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="OSAmount" type="decimal(18,0)" />
			<column name="WaiverAmount" type="decimal(18,0)" />
			<column name="WriteoffAmount" type="decimal(18,0)" />
		</createTable>

		<createTable tableName="RejectFinFeeScheduleDetail">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchDate" type="datetime">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="OSAmount" type="decimal(18,0)" />
			<column name="WaiverAmount" type="decimal(18,0)" />
			<column name="WriteoffAmount" type="decimal(18,0)" />
		</createTable>

		<createTable tableName="FinFeeScheduleDetail_PA">
			<column name="FinReference" type="nvarchar(20)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="FeeTypeID" type="bigint">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchDate" type="datetime">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="SchAmount" type="decimal(18,0)" />
			<column name="PaidAmount" type="decimal(18,0)" />
			<column name="OSAmount" type="decimal(18,0)" />
			<column name="WaiverAmount" type="decimal(18,0)" />
			<column name="WriteoffAmount" type="decimal(18,0)" />
		</createTable>

	</changeSet>

	<changeSet author="ManojVarma" id="222">

		<createView replaceIfExists="true" viewName="FinFeeScheduleDetail_TView">
SELECT     T1.FinReference, T1.FeeTypeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount
FROM       FinFeeScheduleDetail_Temp T1
</createView>

		<createView replaceIfExists="true" viewName="FinFeeScheduleDetail_View">
SELECT     T1.FinReference, T1.FeeTypeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount
FROM       FinFeeScheduleDetail_Temp T1
UNION ALL
SELECT     T1.FinReference, T1.FeeTypeID, T1.SchDate, T1.SchAmount, T1.PaidAmount, T1.OSAmount, T1.WaiverAmount, T1.WriteoffAmount
FROM       FinFeeScheduleDetail T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          FinFeeScheduleDetail_Temp
                            WHERE      FinReference = T1.FinReference AND FeeTypeID = T1.FeeTypeID
							AND SchDate = T1.SchDate)
</createView>
	</changeSet>
		<changeSet author="satish" id="223">
		<insert tableName="ErrorDetails">
			<column name="ErrorCode">DSB001</column>
			<column name="ErrorLanguage">EN</column>
			<column name="ErrorSeverity">E</column>
			<column name="ErrorMessage"><![CDATA[Total amount should match with disbursement amount.]]></column>
			<column name="ErrorExtendedMessage"></column>
			<column name="RecordStatus">Approved</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType"></column>
			<column name="WorkflowId">0</column>
			<column name="LastMntOn"></column>
			<column name="LastMntBy">1000</column>
			<column name="Version">0</column>
		</insert>		
		<insert tableName="ErrorDetails">
			<column name="ErrorCode">DSB002</column>
			<column name="ErrorLanguage">EN</column>
			<column name="ErrorSeverity">E</column>
			<column name="ErrorMessage"><![CDATA[For quick disbursement,only payment type cheque is allowed.]]></column>
			<column name="ErrorExtendedMessage"></column>
			<column name="RecordStatus">Approved</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType"></column>
			<column name="WorkflowId">0</column>
			<column name="LastMntOn"></column>
			<column name="LastMntBy">1000</column>
			<column name="Version">0</column>
		</insert>
	</changeSet>

	<changeSet author="SreeRavali" id="224">
		<addColumn tableName="VASRecording_Temp">
			<column name="VasStatus" type="nvarchar(1)" />
			<column name="FinanceProcess" type="boolean" />
		</addColumn>
	</changeSet>

	<changeSet author="SreeRavali" id="225">
		<addColumn tableName="VASRecording">
			<column name="VasStatus" type="nvarchar(1)" />
			<column name="FinanceProcess" type="boolean" />
		</addColumn>
	</changeSet>
	
	<changeSet author="SreeRavali" id="227">
	    <createView replaceIfExists="true" viewName="VASRecording_AView">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc as DsaIdDesc,
          T4.ROfficerDesc as DmaIdDesc,T5.ROfficerDesc as FulfilOfficerIdDesc,T6.ROfficerDesc as ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess
          
          FROM   VASRecording  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	
	<changeSet author="SreeRavali" id="228">
	    <createView replaceIfExists="true" viewName="VASRecording_TView">
		SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc as DsaIdDesc,
          T4.ROfficerDesc as DmaIdDesc,T5.ROfficerDesc as FulfilOfficerIdDesc,T6.ROfficerDesc as ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess
          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
		</createView>
	</changeSet>
	
	<changeSet author="SreeRavali" id="229">
	    <createView replaceIfExists="true" viewName="VASRecording_View">
		 SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc as DsaIdDesc,
          T4.ROfficerDesc as DmaIdDesc,T5.ROfficerDesc as FulfilOfficerIdDesc,T6.ROfficerDesc as ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess
          
          FROM   VASRecording_Temp  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
UNION ALL
SELECT    T1.ProductCode, T1.PostingAgainst, T1.PrimaryLinkRef, T1.VasReference, T1.Fee, T1.RenewalFee, T1.FeePaymentMode,
          T1.ValueDate, T1.AccrualTillDate, T1.RecurringDate, T1.DsaId, T1.DmaId, T1.FulfilOfficerId,T1.ReferralId,
          T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
          T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T2.ProductDesc , T3.ROfficerDesc as DsaIdDesc,
          T4.ROfficerDesc as DmaIdDesc,T5.ROfficerDesc as FulfilOfficerIdDesc,T6.ROfficerDesc as ReferralIdDesc,
          T7.ProductType, T7.ProductTypeDesc,  T8.ProductCtg, T8.ProductCtgDesc ,T9.DealerName ManufacturerDesc,VasStatus,FinanceProcess
          
          FROM   VASRecording  T1 LEFT OUTER JOIN
          VasStructure  T2 ON T1.ProductCode = T2.ProductCode LEFT OUTER JOIN
          RelationshipOfficers  T3 ON T1.DsaId = T3.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T4 ON T1.DmaId = T4.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T5 ON T1.FulfilOfficerId = T5.ROfficerCode LEFT OUTER JOIN
          RelationshipOfficers  T6 ON T1.ReferralId = T6.ROfficerCode INNER JOIN 
          VasProductType  T7 ON T7.ProductType = T2.ProductType INNER JOIN
          VasProductCategory  T8 ON T7.ProductCtg = T8.ProductCtg  LEFT OUTER JOIN
          AMTVehicleDealer T9 ON T2.ManufacturerId = T9.DealerId
          
          WHERE     NOT EXISTS
                    (SELECT     1  FROM          VASRecording_Temp WHERE      VasReference = T1.VasReference)
		</createView>
	</changeSet>

	<changeSet author="SreeRavali" id="230">
		<update tableName="VASRecording_Temp">
			<column name="FinanceProcess">0</column>
		</update>
	</changeSet>

	<changeSet author="SreeRavali" id="231">
		<update tableName="VASRecording">
			<column name="FinanceProcess">0</column>
		</update>
	</changeSet>
	
	<changeSet author="kesava" id="232">
		<addColumn tableName="Rules">
			<column name="FeeTypeID" type="bigint" />
		</addColumn>
	</changeSet>
	
	<changeSet author="kesava" id="233">
	<addColumn tableName="Rules_Temp">
		<column name="FeeTypeID" type="bigint" />
	</addColumn>
	</changeSet>

	<changeSet id="234" author="kesava">
		<createView replaceIfExists="true" viewName="Rules_AView">
			SELECT 		Rules.RuleId , Rules.RuleCode , Rules.RuleEvent , Rules.RuleModule , Rules.RuleCodeDesc , Rules.WaiverDecider , 
						Rules.Waiver , Rules.WaiverPerc , Rules.SQLRule , Rules.ActualBlock , Rules.AllowDeviation , Rules.CalFeeModify , 
						Rules.Version , Rules.LastMntBy , Rules.LastMntOn , Rules.RecordStatus , Rules.RoleCode , Rules.NextRoleCode , 
						Rules.TaskId , Rules.NextTaskId , Rules.RecordType , Rules.WorkflowId , BMTRBFldMaster.RBMFldName LovDescRuleModuleName, 
						Rules.SeqOrder , Rules.ReturnType , Rules.deviationType , Rules.GroupId , CorpScoringGroupDetail.GroupDesc LovDescGroupName  , 
						Rules.FeeToFinance, Rules.FixedOrVariableLimit, Rules.Revolving, Rules.Active, Rules.Fields, Rules.FeeTypeID, FeeTypes.FeeTypeCode, FeeTypes.FeeTypeDesc
			FROM 		Rules 
			JOIN 		BMTRBFldMaster ON BMTRBFldMaster.RBMModule = Rules.RuleModule
			AND 		BMTRBFldMaster.RBMEvent = Rules.RuleEvent
			LEFT JOIN 	CorpScoringGroupDetail ON Rules.GroupId = CorpScoringGroupDetail.GroupId
			INNER JOIN 	FeeTypes ON FeeTypes.FeeTypeID =  Rules.FeeTypeID
		</createView>
	</changeSet>

	<changeSet id="235" author="kesava">
		<createView replaceIfExists="true" viewName="Rules_View">
			SELECT 	T1.RuleId , T1.RuleCode , T1.RuleModule , T1.RuleEvent , T1.RuleCodeDesc , T1.WaiverDecider , T1.Waiver , T1.WaiverPerc , T1.SQLRule , 
			T1.ActualBlock , T1.AllowDeviation , T1.CalFeeModify , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
			T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId , T2.RBMFldName LovDescRuleModuleName  , 
			T1.SeqOrder , T1.ReturnType , T1.DeviationType , T1.GroupId , CorpScoringGroupDetail.GroupDesc LovDescGroupName  , 
			T1.FeeToFinance, T1.FixedOrVariableLimit, T1.Revolving, T1.Active, T1.Fields, T1.FeeTypeID, T3.FeeTypeCode, T3.FeeTypeDesc

     FROM Rules_Temp T1
            JOIN BMTRBFldMaster T2   ON T2.RBMModule = T1.RuleModule
            AND T2.RBMEvent = T1.RuleEvent
            LEFT JOIN CorpScoringGroupDetail    ON T1.GroupId = CorpScoringGroupDetail.GroupId
            INNER JOIN 	FeeTypes T3 ON T3.FeeTypeID =  T1.FeeTypeID
   UNION ALL 
 SELECT 	T1.RuleId , T1.RuleCode , T1.RuleModule , T1.RuleEvent , T1.RuleCodeDesc , T1.WaiverDecider , T1.Waiver , T1.WaiverPerc , T1.SQLRule , 
			T1.ActualBlock , T1.AllowDeviation , T1.CalFeeModify , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
			T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId , T2.RBMFldName LovDescRuleModuleName  , 
			T1.SeqOrder , T1.ReturnType , T1.DeviationType , T1.GroupId , CorpScoringGroupDetail.GroupDesc LovDescGroupName  , 
			T1.FeeToFinance, T1.FixedOrVariableLimit, T1.Revolving, T1.Active, T1.Fields, T1.FeeTypeID, T3.FeeTypeCode, T3.FeeTypeDesc
     FROM Rules T1
            JOIN BMTRBFldMaster T2   ON T2.RBMModule = T1.RuleModule
            AND T2.RBMEvent = T1.RuleEvent
            LEFT JOIN CorpScoringGroupDetail    ON T1.GroupId = CorpScoringGroupDetail.GroupId
            INNER JOIN 	FeeTypes T3 ON T1.FeeTypeID =  T3.FeeTypeID
     WHERE NOT EXISTS ( SELECT 1 
                        FROM Rules_Temp 
                          WHERE RuleId = T1.RuleId )
		</createView>
	</changeSet>
	
	<changeSet id="236" author="kesava">
		<createView replaceIfExists="true" viewName="Rules_AView">
			SELECT 		Rules.RuleId , Rules.RuleCode , Rules.RuleEvent , Rules.RuleModule , Rules.RuleCodeDesc , Rules.WaiverDecider , 
						Rules.Waiver , Rules.WaiverPerc , Rules.SQLRule , Rules.ActualBlock , Rules.AllowDeviation , Rules.CalFeeModify , 
						Rules.Version , Rules.LastMntBy , Rules.LastMntOn , Rules.RecordStatus , Rules.RoleCode , Rules.NextRoleCode , 
						Rules.TaskId , Rules.NextTaskId , Rules.RecordType , Rules.WorkflowId , BMTRBFldMaster.RBMFldName LovDescRuleModuleName, 
						Rules.SeqOrder , Rules.ReturnType , Rules.deviationType , Rules.GroupId , CorpScoringGroupDetail.GroupDesc LovDescGroupName  , 
						Rules.FeeToFinance, Rules.FixedOrVariableLimit, Rules.Revolving, Rules.Active, Rules.Fields, Rules.FeeTypeID, FeeTypes.FeeTypeCode, FeeTypes.FeeTypeDesc
			FROM 		Rules 
			JOIN 		BMTRBFldMaster ON BMTRBFldMaster.RBMModule = Rules.RuleModule
			AND 		BMTRBFldMaster.RBMEvent = Rules.RuleEvent
			LEFT JOIN 	CorpScoringGroupDetail ON Rules.GroupId = CorpScoringGroupDetail.GroupId
			LEFT JOIN 	FeeTypes ON FeeTypes.FeeTypeID =  Rules.FeeTypeID
		</createView>
	</changeSet>
	
	<changeSet id="237" author="kesava">
		<createView replaceIfExists="true" viewName="Rules_View">
			SELECT 	T1.RuleId , T1.RuleCode , T1.RuleModule , T1.RuleEvent , T1.RuleCodeDesc , T1.WaiverDecider , T1.Waiver , T1.WaiverPerc , T1.SQLRule , 
			T1.ActualBlock , T1.AllowDeviation , T1.CalFeeModify , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
			T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId , T2.RBMFldName LovDescRuleModuleName  , 
			T1.SeqOrder , T1.ReturnType , T1.DeviationType , T1.GroupId , CorpScoringGroupDetail.GroupDesc LovDescGroupName  , 
			T1.FeeToFinance, T1.FixedOrVariableLimit, T1.Revolving, T1.Active, T1.Fields, T1.FeeTypeID, T3.FeeTypeCode, T3.FeeTypeDesc

     FROM Rules_Temp T1
            JOIN BMTRBFldMaster T2   ON T2.RBMModule = T1.RuleModule
            AND T2.RBMEvent = T1.RuleEvent
            LEFT JOIN CorpScoringGroupDetail    ON T1.GroupId = CorpScoringGroupDetail.GroupId
            LEFT JOIN 	FeeTypes T3 ON T3.FeeTypeID =  T1.FeeTypeID
   UNION ALL 
 SELECT 	T1.RuleId , T1.RuleCode , T1.RuleModule , T1.RuleEvent , T1.RuleCodeDesc , T1.WaiverDecider , T1.Waiver , T1.WaiverPerc , T1.SQLRule , 
			T1.ActualBlock , T1.AllowDeviation , T1.CalFeeModify , T1.Version , T1.LastMntBy , T1.LastMntOn , T1.RecordStatus , T1.RoleCode , 
			T1.NextRoleCode , T1.TaskId , T1.NextTaskId , T1.RecordType , T1.WorkflowId , T2.RBMFldName LovDescRuleModuleName  , 
			T1.SeqOrder , T1.ReturnType , T1.DeviationType , T1.GroupId , CorpScoringGroupDetail.GroupDesc LovDescGroupName  , 
			T1.FeeToFinance, T1.FixedOrVariableLimit, T1.Revolving, T1.Active, T1.Fields, T1.FeeTypeID, T3.FeeTypeCode, T3.FeeTypeDesc
     FROM Rules T1
            JOIN BMTRBFldMaster T2   ON T2.RBMModule = T1.RuleModule
            AND T2.RBMEvent = T1.RuleEvent
            LEFT JOIN CorpScoringGroupDetail    ON T1.GroupId = CorpScoringGroupDetail.GroupId
            LEFT JOIN 	FeeTypes T3 ON T1.FeeTypeID =  T3.FeeTypeID
     WHERE NOT EXISTS ( SELECT 1 
                        FROM Rules_Temp 
                          WHERE RuleId = T1.RuleId )
		</createView>
	</changeSet>
	<changeSet id="238" author="Irfan">
	<addColumn tableName="ExtendedFieldDetail">
		<column name="MultiLine" type="int"/>
	</addColumn>
	</changeSet>
	<changeSet id="239" author="Irfan">
	<addColumn tableName="ExtendedFieldDetail_Temp">
		<column name="MultiLine" type="int"/>
	</addColumn>
	</changeSet>
	<changeSet id="240" author="Irfan">
	<createView replaceIfExists="true" viewName="ExtendedFieldDetail_View">
	SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                      T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.MultiLine
		FROM         ExtendedFieldDetail_TEMP  T1 INNER JOIN
                      ExtendedFieldHeader_TEMP  T2 ON T1.ModuleId = T2.ModuleId
	UNION ALL
	SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                     T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId , T1.MultiLine
		FROM         ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId
			WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          ExtendedFieldDetail_TEMP
                            WHERE      ModuleId = T1.ModuleId AND FieldName = T1.FieldName)
	</createView>
	</changeSet>
	<changeSet id="241" author="Irfan">
	<createView replaceIfExists="true" viewName="ExtendedFieldDetail_AView">
	SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, T1.FieldType, 
                      T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, 
                      T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.MultiLine
FROM         		  ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId
                      
	</createView>
	</changeSet>
	<changeSet author="Irfan" id="242">
	<addDefaultValue tableName="ExtendedFieldDetail"
		defaultValueNumeric="0" columnName="MultiLine" columnDataType="int" />
	</changeSet>		
	<changeSet author="Irfan" id="243">
	<addDefaultValue tableName="ExtendedFieldDetail_Temp"
		defaultValueNumeric="0" columnName="MultiLine" columnDataType="int" />
	</changeSet>
	<changeSet id="244" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BlackListCustomer_View">
		SELECT     CustCIF, CustFName, CustLName,CustDOB,CustCRCPR,MobileNumber,CustNationality,CustPassportNo,Employer, 
T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
T1.RecordType, T1.WorkflowId,
			T2.NationalityDesc lovDescNationalityDesc,
			T3.EmpName lovDescEmpName
FROM          BlackListCustomer_Temp T1  LEFT OUTER JOIN
              BMTNationalityCodes T2 on T2.NationalityCode = T1.CustNationality LEFT OUTER JOIN
              EmployerDetail T3 on T3.EmployerId = T1.Employer 
Union all
SELECT     CustCIF, CustFName, CustLName,CustDOB,CustCRCPR,MobileNumber,CustNationality,CustPassportNo,Employer, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,
			T2.NationalityDesc lovDescNationalityDesc,
			T3.EmpName lovDescEmpName
FROM          BlackListCustomer T1  LEFT OUTER JOIN
              BMTNationalityCodes T2 on T2.NationalityCode = T1.CustNationality LEFT OUTER JOIN
              EmployerDetail T3 on T3.EmployerId = T1.Employer 

WHERE     NOT EXISTS
                          (SELECT     1
                            FROM         BlackListCustomer_Temp
                            WHERE      CustCIF= T1.CustCIF)
		
</createView>   </changeSet>

<changeSet id="245" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BMTAEEvents_Aview">
	SELECT     AEEventCode, AEEventCodeDesc,Active, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, 
                      WorkflowId
FROM         BMTAEEvents	
</createView>   </changeSet>
<changeSet id="246" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BMTAEEvents_View">
SELECT            T1.AEEventCode, T1.AEEventCodeDesc  , T1.Active 
                  , T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM        BMTAEEvents_TEMP  T1
UNION ALL
SELECT            T1.AEEventCode, T1.AEEventCodeDesc  , T1.Active 
                  , T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM        BMTAEEvents  T1
WHERE     NOT EXISTS (SELECT 1 FROM BMTAEEvents_TEMP WHERE AEEventCode = T1.AEEventCode	)
</createView>   </changeSet>

<changeSet id="247" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BMTAggrementDef_AView">

SELECT T1.AggId, T1.AggCode, T1.AggName, T1.AggDesc, T1.AggReportName, T1.AggReportPath, T1.AggIsActive, T1.Aggtype, 
T1.AggImage, T1.AgrRule, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RuleCodeDesc LovDescAgrRuleDesc,
T1.AllowMultiple, T1.ModuleType,T1.ModuleName
FROM BMTAggrementDef  T1 LEFT OUTER JOIN Rules T2 ON T1.AgrRule = T2.RuleCode AND T2.RuleModule ='AGRRULE'
</createView>   </changeSet>
<changeSet id="248" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BMTAggrementDef_View">
SELECT T1.AggId, T1.AggCode, T1.AggName, T1.AggDesc, T1.AggReportName, T1.AggReportPath, T1.AggIsActive, T1.Aggtype, 
T1.AggImage, T1.AgrRule, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RuleCodeDesc LovDescAgrRuleDesc,
T1.AllowMultiple,T1.ModuleType,T1.ModuleName

FROM BMTAggrementDef_Temp T1 LEFT OUTER JOIN Rules T2 ON T1.AgrRule = T2.RuleCode AND T2.RuleModule ='AGRRULE'
UNION ALL
SELECT T1.AggId, T1.AggCode, T1.AggName, T1.AggDesc, T1.AggReportName, T1.AggReportPath, T1.AggIsActive, T1.Aggtype, 
T1.AggImage, T1.AgrRule, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RuleCodeDesc LovDescAgrRuleDesc,
T1.AllowMultiple,T1.ModuleType,T1.ModuleName
FROM BMTAggrementDef T1 LEFT OUTER JOIN Rules T2 ON T1.AgrRule = T2.RuleCode AND T2.RuleModule ='AGRRULE'
WHERE (NOT EXISTS
(SELECT 1 Expr1
FROM BMTAggrementDef_Temp
WHERE (AggId = T1.AggId) AND (AggCode = T1.AggCode)))		
		</createView>   </changeSet>

<changeSet id="249" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BMTCheckList_AView">
SELECT     T1.CheckListId, T1.CheckListDesc, T1.CheckMinCount, T1.CheckMaxCount, T1.CheckRule, T1.ModuleName, T1.Remarks, T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RuleCodeDesc LovDescCheckRuleName
FROM         BMTCheckList T1 LEFT OUTER JOIN
                      Rules T2 ON T1.CheckRule = T2.RuleCode AND T2.RuleModule = 'CLRULE' AND T2.RuleEvent = ''
		</createView>   </changeSet>

<changeSet id="250" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BMTCheckList_View">		
SELECT     T1.CheckListId, T1.CheckListDesc, T1.CheckMinCount, T1.CheckMaxCount, T1.CheckRule, T1.ModuleName, T1.Remarks, T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RuleCodeDesc LovDescCheckRuleName 
FROM         BMTCheckList_TEMP T1 LEFT OUTER JOIN
                      Rules T2 ON T1.CheckRule = T2.RuleCode AND T2.RuleModule = 'CLRULE' AND T2.RuleEvent = ''
UNION ALL
SELECT     T1.CheckListId, T1.CheckListDesc, T1.CheckMinCount, T1.CheckMaxCount, T1.CheckRule, T1.ModuleName, T1.Remarks, T1.Active, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RuleCodeDesc LovDescCheckRuleName 
FROM         BMTCheckList T1 LEFT OUTER JOIN
                      Rules T2 ON T1.CheckRule = T2.RuleCode AND T2.RuleModule = 'CLRULE' AND T2.RuleEvent = ''
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTCheckList_TEMP
                            WHERE      CheckListId = T1.CheckListId)		
				</createView>   </changeSet>
				
<changeSet id="251" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTCustNotesTypes_AView">
SELECT     T1.CustNotesTypeCode, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, 
                      T1.LastMntBy, T1.Version, T1.CustNotesTypeIsActive, T1.CustNotesTypeArchiveFrq, T1.CustNotesTypeIsPerminent, T1.CustNotesTypeDesc, 
                      T2.FrqDesc lovDescCustNotesTypeArcFrqName
FROM         BMTCustNotesTypes T1 INNER JOIN
                      BMTFrequencies T2 ON T1.CustNotesTypeArchiveFrq = T2.FrqCode
				</createView>   </changeSet>
<changeSet id="252" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTCustNotesTypes_View">				
SELECT     T1.CustNotesTypeCode, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, 
                      T1.LastMntBy, T1.Version, T1.CustNotesTypeIsActive, T1.CustNotesTypeArchiveFrq, T1.CustNotesTypeIsPerminent, T1.CustNotesTypeDesc, 
                      T2.FrqDesc lovDescCustNotesTypeArcFrqName
FROM         BMTCustNotesTypes_Temp T1 INNER JOIN
                      BMTFrequencies T2 ON T1.CustNotesTypeArchiveFrq = T2.FrqCode
UNION ALL
SELECT     T1.CustNotesTypeCode, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, 
                      T1.LastMntBy, T1.Version, T1.CustNotesTypeIsActive, T1.CustNotesTypeArchiveFrq, T1.CustNotesTypeIsPerminent, T1.CustNotesTypeDesc, 
                      T2.FrqDesc lovDescCustNotesTypeArcFrqName
FROM         BMTCustNotesTypes T1 INNER JOIN
                      BMTFrequencies T2 ON T1.CustNotesTypeArchiveFrq = T2.FrqCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTCustNotesTypes_Temp
                            WHERE      CustNotesTypeCode = T1.CustNotesTypeCode)
					</createView>   </changeSet>
<changeSet id="253" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTCustStatusCodes_AView">							
SELECT     CustStsCode, CustStsDescription, DueDays, SuspendProfit, CustStsIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTCustStatusCodes
					</createView>   </changeSet>
<changeSet id="254" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTDispatchModes_AView">						
SELECT		T1.DispatchModeCode, T1.DispatchModeDesc, T1.DispatchModeIsActive		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTDispatchModes  T1
					</createView>   </changeSet>
					
<changeSet id="255" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTDispatchModes_View">						
SELECT		T1.DispatchModeCode, T1.DispatchModeDesc, T1.DispatchModeIsActive		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTDispatchModes_TEMP  T1
UNION ALL
SELECT		T1.DispatchModeCode, T1.DispatchModeDesc, T1.DispatchModeIsActive		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTDispatchModes  T1
WHERE     NOT EXISTS (SELECT 1 FROM BMTDispatchModes_TEMP WHERE DispatchModeCode = T1.DispatchModeCode)
</createView>   </changeSet>
<changeSet id="256" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTIncomeTypes_AView">	
SELECT     T1.IncomeTypeCode, T1.IncomeExpense, T1.Category, T1.IncomeTypeDesc, T1.IncomeTypeIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.Margin, T2.CategoryDesc lovDescCategoryName
FROM         BMTIncomeTypes  T1 INNER JOIN
                      BMTIncomeCategory  T2 ON T1.Category = T2.IncomeCategory
</createView>   </changeSet>

<changeSet id="257" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTIncomeTypes_AView">	
SELECT     T1.IncomeTypeCode, T1.IncomeExpense, T1.Category, T1.IncomeTypeDesc, T1.IncomeTypeIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.Margin, T2.CategoryDesc lovDescCategoryName
	FROM         BMTIncomeTypes_Temp T1 INNER JOIN
                      BMTIncomeCategory T2 ON T1.Category = T2.IncomeCategory
	UNION ALL
	SELECT     T1.IncomeTypeCode, T1.IncomeExpense, T1.Category, T1.IncomeTypeDesc, T1.IncomeTypeIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.Margin, T2.CategoryDesc lovDescCategoryName
	FROM         BMTIncomeTypes T1 INNER JOIN
                      BMTIncomeCategory T2 ON T1.Category = T2.IncomeCategory
	WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTIncomeTypes_TEMP  
                            WHERE      IncomeTypeCode = T1.IncomeTypeCode AND IncomeExpense =  T1.IncomeExpense AND 
                                                   Category =  T1.Category)
</createView>   </changeSet>
<changeSet id="258" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTInterestRateTypes_AView">
SELECT     IntRateTypeCode, IntRateTypeDesc, IntRateTypeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTInterestRateTypes
</createView>   </changeSet>
<changeSet id="259" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTInterestRateTypes_View">
SELECT     IntRateTypeCode, IntRateTypeDesc, IntRateTypeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTInterestRateTypes_Temp
UNION ALL
SELECT     IntRateTypeCode, IntRateTypeDesc, IntRateTypeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTInterestRateTypes
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTInterestRateTypes_Temp
                            WHERE      IntRateTypeCode = BMTInterestRateTypes.IntRateTypeCode)
</createView>   </changeSet>
<changeSet id="260" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTIntRateBasisCodes_AView">
SELECT     IntRateBasisCode, IntRateBasisDesc, IntRateBasisIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTIntRateBasisCodes
</createView>   </changeSet>
<changeSet id="261" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTIntRateBasisCodes_View">
SELECT     IntRateBasisCode, IntRateBasisDesc, IntRateBasisIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTIntRateBasisCodes_Temp
UNION ALL
SELECT     IntRateBasisCode, IntRateBasisDesc, IntRateBasisIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTIntRateBasisCodes
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTIntRateBasisCodes_Temp
                            WHERE      IntRateBasisCode = BMTIntRateBasisCodes.IntRateBasisCode)
</createView>   </changeSet>
<changeSet id="262" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BankBranches_AView">
	SELECT		T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City, T1.MICR, T1.IFSC,T2.BankName,T2.Ecs,t2.Dda,T2.Nach	
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BankBranches T1 INNER JOIN
            BMTBankDetail T2  ON T1.BankCode=T2.BankCode	
			
</createView>   </changeSet>

<changeSet id="263" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BankBranches_TView">
	SELECT		T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City, T1.MICR, T1.IFSC,T2.BankName,T2.Ecs,t2.Dda,T2.Nach	
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BankBranches_Temp T1 INNER JOIN
            BMTBankDetail  T2  ON T1.BankCode=T2.BankCode
			
</createView>   </changeSet>

<changeSet id="264" author="Pruthvi">
		<createView replaceIfExists="true" viewName="BankBranches_View">
		SELECT		T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City, T1.MICR, T1.IFSC,T2.BankName,T2.Ecs,t2.Dda,T2.Nach	
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BankBranches_Temp T1 INNER JOIN
            BMTBankDetail T2  ON T1.BankCode=T2.BankCode 
UNION ALL

SELECT		T1.BankBranchID, T1.BankCode, T1.BranchCode, T1.BranchDesc, T1.City, T1.MICR, T1.IFSC,T2.BankName	,T2.Ecs,t2.Dda,T2.Nach	
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BankBranches T1 INNER JOIN
            BMTBankDetail T2  ON T1.BankCode=T2.BankCode 
WHERE     NOT EXISTS (SELECT 1 FROM BankBranches_TEMP WHERE BankBranchID = T1.BankBranchID)

</createView>   </changeSet>
<changeSet id="265" author="Pruthvi">
		<createView replaceIfExists="true" viewName="Beneficiary_AView">
	SELECT		T1.BeneficiaryId, T1.CustID, T1.BankBranchID, T1.AccNumber, T1.AccHolderName, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Email		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.BankCode, T2.BranchCode,T2.BranchDesc,T2.IFSC, T2.City, T3.BankName, T4.CustCIF, T4.CustShrtName			 
		FROM    	Beneficiary T1 INNER JOIN
					BankBranches T2 ON T1.BankBranchID = T2.BankBranchID  INNER JOIN
					BMTBankDetail T3  ON T2.BankCode=T3.BankCode INNER JOIN
					Customers  T4  ON T1.CustID = T4.CustID
</createView>   </changeSet>

<changeSet id="266" author="Pruthvi">
		<createView replaceIfExists="true" viewName="Beneficiary_TView">
	SELECT		T1.BeneficiaryId, T1.CustID, T1.BankBranchID, T1.AccNumber, T1.AccHolderName, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Email		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.BankCode, T2.BranchCode,T2.BranchDesc,T2.IFSC, T2.City, T3.BankName, T4.CustCIF, T4.CustShrtName			 
		FROM    	Beneficiary_Temp T1 INNER JOIN
					BankBranches T2 ON T1.BankBranchID = T2.BankBranchID  INNER JOIN
					BMTBankDetail T3  ON T2.BankCode=T3.BankCode INNER JOIN
					Customers  T4  ON T1.CustID = T4.CustID	
</createView>   </changeSet>


<changeSet id="267" author="Pruthvi">
		<createView replaceIfExists="true" viewName="Beneficiary_View">
		SELECT		T1.BeneficiaryId, T1.CustID, T1.BankBranchID, T1.AccNumber, T1.AccHolderName, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Email		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.BankCode, T2.BranchCode,T2.BranchDesc,T2.IFSC, T2.City, T3.BankName, T4.CustCIF, T4.CustShrtName			 
		FROM    	Beneficiary_Temp T1 INNER JOIN
					BankBranches T2 ON T1.BankBranchID = T2.BankBranchID  INNER JOIN
					BMTBankDetail T3  ON T2.BankCode=T3.BankCode INNER JOIN
					Customers  T4  ON T1.CustID = T4.CustID
		UNION ALL
		
		SELECT		T1.BeneficiaryId, T1.CustID, T1.BankBranchID, T1.AccNumber, T1.AccHolderName, T1.PhoneCountryCode, T1.PhoneAreaCode, T1.PhoneNumber, T1.Email		
					, T1.Version , T1.LastMntBy, T1.LastMntOn,T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					T2.BankCode, T2.BranchCode,T2.BranchDesc,T2.IFSC, T2.City, T3.BankName, T4.CustCIF, T4.CustShrtName			 
		FROM    	Beneficiary T1 INNER JOIN
					BankBranches T2 ON T1.BankBranchID = T2.BankBranchID  INNER JOIN
					BMTBankDetail T3  ON T2.BankCode=T3.BankCode INNER JOIN
					Customers  T4  ON T1.CustID = T4.CustID
		WHERE     NOT EXISTS (SELECT 1 FROM Beneficiary_TEMP WHERE BeneficiaryId = T1.BeneficiaryId)
		
</createView>   </changeSet>
<changeSet id="268" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTProduct_AView">
SELECT		T1.ProductCode, T1.ProductDesc, T1.ProductCategory		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTProduct T1
</createView>   </changeSet>
<changeSet id="269" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTProduct_View">
SELECT		T1.ProductCode, T1.ProductDesc, T1.ProductCategory		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTProduct_TEMP T1
UNION ALL
SELECT		T1.ProductCode, T1.ProductDesc, T1.ProductCategory		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTProduct T1
WHERE     NOT EXISTS (SELECT 1 FROM BMTProduct_TEMP WHERE ProductCode = T1.ProductCode)
</createView>   </changeSet>
<changeSet id="270" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTProfessions_AView">
SELECT     ProfessionCode, ProfessionDesc, SelfEmployee, ProfessionIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
                      RecordType, WorkflowId
FROM         BMTProfessions
</createView>   </changeSet>
<changeSet id="271" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTProfessions_View">
SELECT     ProfessionCode, ProfessionDesc,SelfEmployee, ProfessionIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, 
                      WorkflowId
FROM         BMTProfessions_TEMP T1
UNION ALL
SELECT     ProfessionCode, ProfessionDesc,SelfEmployee, ProfessionIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, 
                      WorkflowId
FROM         BMTProfessions T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTProfessions_TEMP
                            WHERE      ProfessionCode = T1.ProfessionCode)
</createView>   </changeSet>
<changeSet id="272" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTRatingCodes_AView">
SELECT     T1.RatingType, T1.RatingCode, T1.RatingCodeDesc, T1.RatingIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RatingTypeDesc LovDescRatingTypeName
FROM         BMTRatingCodes T1 INNER JOIN
                      BMTRatingTypes T2 ON T1.RatingType = T2.RatingType
</createView>   </changeSet>
<changeSet id="273" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTRatingCodes_View">
SELECT     T1.RatingType, T1.RatingCode, T1.RatingCodeDesc, T1.RatingIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RatingTypeDesc LovDescRatingTypeName
FROM         BMTRatingCodes_TEMP T1 INNER JOIN
                      BMTRatingTypes T2 ON T1.RatingType = T2.RatingType
UNION ALL
SELECT     T1.RatingType, T1.RatingCode, T1.RatingCodeDesc, T1.RatingIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RatingTypeDesc LovDescRatingTypeName
FROM         BMTRatingCodes T1 INNER JOIN
                      BMTRatingTypes T2 ON T1.RatingType = T2.RatingType
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTRatingCodes_TEMP
                            WHERE    RatingCode =T1.RatingCode AND  RatingType = T1.RatingType)
</createView>   </changeSet>
<changeSet id="274" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTRejectCodes_View">
SELECT     RejectCode, RejectDesc, RejectType, RejectIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
			FROM  BMTRejectCodes_Temp
		UNION ALL
				SELECT     RejectCode, RejectDesc, RejectType, RejectIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
					FROM         BMTRejectCodes
		WHERE   NOT EXISTS
                          (SELECT     1  FROM          BMTRejectCodes_Temp  WHERE      RejectCode = BMTRejectCodes.RejectCode)
</createView>   </changeSet>
<changeSet id="275" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTRepayMethod_AView">
SELECT		T1.RepayMethod, T1.RepayMethodDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTRepayMethod T1
</createView>   </changeSet>
<changeSet id="276" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTRepayMethod_View">
SELECT		T1.RepayMethod, T1.RepayMethodDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTRepayMethod_TEMP T1
UNION ALL
SELECT		T1.RepayMethod, T1.RepayMethodDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTRepayMethod T1
WHERE     NOT EXISTS (SELECT 1 FROM BMTRepayMethod_TEMP WHERE RepayMethod = T1.RepayMethod)
</createView>   </changeSet>
<changeSet id="277" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTSalutations_AView">
SELECT     SalutationCode, SaluationDesc, SalutationIsActive, SalutationGenderCode,SystemDefault, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, 
                      TaskId, NextTaskId, RecordType, WorkflowId
FROM         BMTSalutations
</createView>   </changeSet>
<changeSet id="278" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTSchdMethod_AView">
SELECT		T1.SchdMethod, T1.SchdMethodDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTSchdMethod T1
</createView>   </changeSet>
<changeSet id="279" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTSchdMethod_View">
SELECT		T1.SchdMethod, T1.SchdMethodDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTSchdMethod_TEMP T1
UNION ALL
SELECT		T1.SchdMethod, T1.SchdMethodDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTSchdMethod T1
WHERE     NOT EXISTS (SELECT 1 FROM BMTSchdMethod_TEMP WHERE SchdMethod = T1.SchdMethod)
</createView>   </changeSet>

<changeSet id="280" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTScoringType_AView">
SELECT     ScoType, ScoDesc, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId
FROM         BMTScoringType T1
</createView>   </changeSet>
<changeSet id="281" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTScoringType_View">
SELECT		T1.ScoType, T1.ScoDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTScoringType_TEMP T1
UNION ALL
SELECT		T1.ScoType, T1.ScoDesc		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTScoringType T1
WHERE     NOT EXISTS (SELECT 1 FROM BMTScoringType_TEMP WHERE ScoType = T1.ScoType)
</createView>   </changeSet>
<changeSet id="282" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTSubSectors_AView">
SELECT     T1.SectorCode, T1.SubSectorCode, T1.SubSectorDesc, T1.SubSectorIsActive, T2.SectorDesc lovDescSectorCodeName, T1.Version, T1.LastMntBy, 
                      T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM         BMTSubSectors T1 INNER JOIN
                      BMTSectors T2 ON T1.SectorCode = T2.SectorCode
</createView>   </changeSet>

<changeSet id="283" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTSubSectors_View">
SELECT     T1.SectorCode, T1.SubSectorCode, T1.SubSectorDesc, T1.SubSectorIsActive, T2.SectorDesc lovDescSectorCodeName, T1.Version, T1.LastMntBy, 
                      T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM         BMTSubSectors_TEMP T1 INNER JOIN
                      BMTSectors  T2 ON T1.SectorCode = T2.SectorCode
UNION ALL
SELECT     T1.SectorCode, T1.SubSectorCode, T1.SubSectorDesc, T1.SubSectorIsActive, T2.SectorDesc lovDescSectorCodeName, T1.Version, T1.LastMntBy, 
                      T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM         BMTSubSectors T1 INNER JOIN
                      BMTSectors T2 ON T1.SectorCode = T2.SectorCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTSubSectors_TEMP
                            WHERE      SectorCode = T1.SectorCode AND SubSectorCode = T1.SubSectorCode)
</createView>   </changeSet>
<changeSet id="284" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTSubSegments_AView">
SELECT     T1.SegmentCode, T1.SubSegmentCode, T1.SubSegmentDesc, T1.SubSegmentIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.SegmentDesc lovDescSegmentCodeName
FROM          BMTSubSegments T1 INNER JOIN
                       BMTSegments T2 ON T1.SegmentCode = T2.SegmentCode
</createView>   </changeSet>

<changeSet id="285" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTSubSegments_View">
SELECT     T1.SegmentCode, T1.SubSegmentCode, T1.SubSegmentDesc, T1.SubSegmentIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.SegmentDesc lovDescSegmentCodeName
FROM          BMTSubSegments_TEMP T1 INNER JOIN
                       BMTSegments T2 ON T1.SegmentCode = T2.SegmentCode
UNION ALL
SELECT     T1.SegmentCode, T1.SubSegmentCode, T1.SubSegmentDesc, T1.SubSegmentIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.SegmentDesc lovDescSegmentCodeName
FROM          BMTSubSegments T1 INNER JOIN
                       BMTSegments T2 ON T1.SegmentCode = T2.SegmentCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTSubSegments_TEMP
                            WHERE      SegmentCode = T1.SegmentCode AND SubSegmentCode = T1.SubSegmentCode)
</createView>   </changeSet>
<changeSet id="286" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTTransactionCode_View">
SELECT     TranCode, TranDesc, TranType, TranIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
                      RecordType, WorkflowId
FROM          BMTTransactionCode_Temp 
UNION ALL 
SELECT     TranCode, TranDesc, TranType, TranIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
                      RecordType, WorkflowId
FROM          BMTTransactionCode 
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTTransactionCode_TEMP
                            WHERE      TranCode= BMTTransactionCode.TranCode)
</createView>   </changeSet>

<changeSet id="287" author="Pruthvi">
<createView replaceIfExists="true" viewName="BrokerCommodityDetail_AView">

SELECT     T1.BrokerCode, T1.CommodityCode, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					  T2.CommodityName lovDescCommodityDesc, T2.CommodityUnitCode, T2.CommodityUnitName 
FROM          BrokerCommodityDetail T1 
				INNER JOIN  FCMTCommodityDetail T2 ON T1.CommodityCode = T2.CommodityCode
</createView>   </changeSet>
<changeSet id="288" author="Pruthvi">
<createView replaceIfExists="true" viewName="BrokerCommodityDetail_View">
SELECT     T1.BrokerCode, T1.CommodityCode, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					  T2.CommodityName lovDescCommodityDesc
FROM          BrokerCommodityDetail_Temp T1 INNER JOIN
                       FCMTCommodityDetail T2 ON T1.CommodityCode = T2.CommodityCode 
UNION ALL
SELECT     T1.BrokerCode, T1.CommodityCode, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId,T1.NextTaskId, T1.RecordType, T1.WorkflowId,
					  T2.CommodityName lovDescCommodityDesc
FROM          BrokerCommodityDetail T1 INNER JOIN
                       FCMTCommodityDetail T2 ON T1.CommodityCode = T2.CommodityCode 
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BrokerCommodityDetail_Temp
                            WHERE      BrokerCode = T1.BrokerCode and CommodityCode = T1.CommodityCode)
</createView>   </changeSet>
<changeSet id="289" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTPhoneTypes_View">
SELECT     PhoneTypeCode, PhoneTypeDesc, PhoneTypePriority, PhoneTypeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, 
                      TaskId, NextTaskId, RecordType, WorkflowId
FROM         BMTPhoneTypes_Temp
UNION ALL
SELECT     PhoneTypeCode, PhoneTypeDesc, PhoneTypePriority, PhoneTypeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, 
                      TaskId, NextTaskId, RecordType, WorkflowId
FROM         BMTPhoneTypes
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTPhoneTypes_Temp
                            WHERE      PhoneTypeCode = BMTPhoneTypes.PhoneTypeCode)
</createView>   </changeSet>




<changeSet id="290" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkProcessDetails_AView">
SELECT     T1.BulkProcessId, T1.FinReference, F.FinType FinType, F.FinCCY FinCcy, T1.OldProfitRate, T1.NewProfitRate, T1.DeferedSchdDate, 
           F.CustID CustID, F.FinBranch FinBranch, T1.ProfitChange, T1.AlwProcess, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.ReCalStartDate, T1.ReCalEndDate,T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.CustShrtName CustName,T3.IntRateBasisDesc ProfitDayBasisDesc,
                      T4.SchdMethodDesc SchdMethodDesc

FROM	BulkProcessDetails T1 INNER JOIN 
Financemain F ON F.FinReference = T1.FinReference  INNER JOIN 
	 Customers T2 ON T2.CustID = F.CustID
	 INNER JOIN BMTIntRateBasisCodes T3 ON T3.IntRateBasisCode = F.ProfitDaysBasis
	 INNER JOIN BMTSchdMethod T4 ON T4.SchdMethod = F.ScheduleMethod
</createView>   </changeSet>

<changeSet id="291" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkProcessDetails_View">
SELECT     T1.BulkProcessId, T1.FinReference, F.FinType FinType, F.FinCCY FinCcy, T1.OldProfitRate, T1.NewProfitRate, T1.DeferedSchdDate, 
           F.CustID CustID, F.FinBranch FinBranch, T1.ProfitChange, T1.AlwProcess, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.ReCalStartDate, T1.ReCalEndDate,T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.CustShrtName CustName,T3.IntRateBasisDesc ProfitDayBasisDesc,
                      T4.SchdMethodDesc SchdMethodDesc

FROM	 BulkProcessDetails_Temp T1 INNER JOIN 
Financemain F ON F.FinReference = T1.FinReference  INNER JOIN 
	 Customers T2 ON T2.CustID = F.CustID
	 INNER JOIN BMTIntRateBasisCodes T3 ON T3.IntRateBasisCode = F.ProfitDaysBasis
	 INNER JOIN BMTSchdMethod T4 ON T4.SchdMethod = F.ScheduleMethod
UNION ALL
SELECT     T1.BulkProcessId, T1.FinReference, F.FinType FinType, F.FinCCY FinCcy, T1.OldProfitRate, T1.NewProfitRate, T1.DeferedSchdDate, 
           F.CustID CustID, F.FinBranch FinBranch, T1.ProfitChange, T1.AlwProcess, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.ReCalStartDate, T1.ReCalEndDate,T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId,T2.CustShrtName CustName,T3.IntRateBasisDesc ProfitDayBasisDesc,
                      T4.SchdMethodDesc SchdMethodDesc
FROM	 BulkProcessDetails T1 INNER JOIN 
Financemain F ON F.FinReference = T1.FinReference  INNER JOIN 
	 Customers T2 ON T2.CustID = F.CustID
	 INNER JOIN BMTIntRateBasisCodes T3 ON T3.IntRateBasisCode = F.ProfitDaysBasis
	 INNER JOIN BMTSchdMethod T4 ON T4.SchdMethod = F.ScheduleMethod
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BulkProcessDetails_Temp
                            WHERE      BulkProcessId = T1.BulkProcessId)
</createView>   </changeSet>

<changeSet id="292" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkProcessHeader_AView">
SELECT     B.BulkProcessId, B.BulkProcessFor, B.FromDate, B.ToDate, B.NewProcessedRate, B.RecalType, B.ReCalFromDate, B.ReCalToDate, B.ExcludeDeferement, B.addTermAfter, B.Version, 
           B.LastMntBy, B.LastMntOn, B.RecordStatus, B.RoleCode, B.NextRoleCode, B.RuleType, B.TaskId, B.NextTaskId, B.RecordType, B.WorkflowId, Q.SqlQuery lovDescSqlQuery
FROM          BulkProcessHeader B  INNER JOIN Queries Q 
             on B.RuleType=Q.QueryCode
</createView>   </changeSet>

<changeSet id="293" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkProcessHeader_View">
SELECT     B.BulkProcessId, B.BulkProcessFor, B.FromDate, B.ToDate, B.NewProcessedRate, B.RecalType, B.ReCalFromDate, B.ReCalToDate, B.ExcludeDeferement, B.addTermAfter, B.Version, 
           B.LastMntBy, B.LastMntOn, B.RecordStatus, B.RoleCode, B.NextRoleCode, B.RuleType, B.TaskId, B.NextTaskId, B.RecordType, B.WorkflowId, Q.SqlQuery lovDescSqlQuery
FROM        BulkProcessHeader_Temp B  Left JOIN Queries Q 
             on B.RuleType = Q.QueryCode
UNION ALL
SELECT     B.BulkProcessId, B.BulkProcessFor, B.FromDate, B.ToDate, B.NewProcessedRate, B.RecalType, B.ReCalFromDate, B.ReCalToDate, B.ExcludeDeferement, B.addTermAfter, B.Version, 
           B.LastMntBy, B.LastMntOn, B.RecordStatus, B.RoleCode, B.NextRoleCode, B.RuleType, B.TaskId, B.NextTaskId, B.RecordType, B.WorkflowId, Q.SqlQuery lovDescSqlQuery
FROM         BulkProcessHeader B  Left JOIN Queries Q 
             on B.RuleType=Q.QueryCode
WHERE     (NOT EXISTS
                          (SELECT     1 
                            FROM          BulkProcessHeader_Temp
                            WHERE      BulkProcessId = B.BulkProcessId))
</createView>   </changeSet>

<changeSet id="294" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkRateChange_SView">
SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, T1.OldProfit, T1.NewProfit, T1.AllowRateChange,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
			T2.FinType, T3.SchDate FromDate, T4.CcyEditField lovDescFinFormatter
FROM        BulkRateChangeDetails_Temp T1 INNER JOIN 
			FinanceMain T2 ON T1.FinReference = T2.FinReference INNER JOIN 
			FinScheduleDetails T3 ON T3.FinReference = T1.FinReference INNER JOIN  
			 RMTCurrencies T4 ON T1.FinCcy = T4.CcyCode
UNION ALL
SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, T1.OldProfit, T1.NewProfit, T1.AllowRateChange,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
			T2.FinType, T3.SchDate FromDate, T4.CcyEditField lovDescFinFormatter
FROM        BulkRateChangeDetails T1 INNER JOIN 
			FinanceMain T2 ON T1.FinReference = T2.FinReference INNER JOIN 
			FinScheduleDetails T3 ON T3.FinReference = T1.FinReference INNER JOIN  
			RMTCurrencies T4 ON T1.FinCcy = T4.CcyCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BulkRateChangeDetails_Temp
                            WHERE      BulkRateChangeRef = T1.BulkRateChangeRef)
</createView>   </changeSet>

<changeSet id="295" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkRateChange_View">

SELECT  		T1.FinType, T1.FinReference, T1.CustID, T4.CustCIF, T1.FinBranch, T1.FinCcy, T5.FinDivision LovDescFinDivision, 
				T5.FinCategory ProductCode,T1.EffectiveRateOfReturn OldProfitRate, T1.TotalProfit OldProfit, 
				T1.FinAmount, T2.SchDate FromDate, T3.CcyEditField lovDescFinFormatter
				
FROM	 FinanceMain T1 INNER JOIN 
		 FinScheduleDetails T2 ON T1.FinReference = T2.FinReference INNER JOIN  
		 RMTCurrencies T3 ON T1.FinCcy = T3.CcyCode INNER JOIN
		 Customers T4 ON T1.CustID = T4.CustID INNER JOIN
		 RMTFinanceTypes T5 ON T5.FinType = T1.FinType
</createView>   </changeSet>

<changeSet id="296" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkRateChangeDetails_AView">
SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, T1.OldProfit, T1.NewProfit, T1.AllowRateChange,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
			T2.CcyEditField lovDescFinFormatter
FROM        BulkRateChangeDetails T1 INNER JOIN  
			RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode
</createView>   </changeSet>


<changeSet id="297" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkRateChangeDetails_View">
SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, T1.OldProfit, T1.NewProfit, T1.AllowRateChange,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
			T2.CcyEditField lovDescFinFormatter

FROM        BulkRateChangeDetails_Temp T1 INNER JOIN  
			 RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode
UNION ALL
SELECT     	T1.BulkRateChangeRef, T1.FinReference, T1.FinBranch, T1.FinCCY, T1.CustCIF, T1.FinAmount, T1.OldProfitRate, T1.NewProfitRate, T1.OldProfit, T1.NewProfit, T1.AllowRateChange,
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
			T2.CcyEditField lovDescFinFormatter
FROM        BulkRateChangeDetails T1 INNER JOIN  
			 RMTCurrencies T2 ON T1.FinCcy = T2.CcyCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BulkRateChangeDetails_Temp
                            WHERE      BulkRateChangeRef = T1.BulkRateChangeRef)
</createView>   </changeSet>

<changeSet id="298" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkRateChangeHeader_AView">
SELECT     	B.BulkRateChangeRef, B.FinType, B.FromDate, B.ToDate, B.RateChange, B.RecalType, B.RuleType, 
			B.Version, B.LastMntBy, B.LastMntOn, B.RecordStatus, B.RoleCode, B.NextRoleCode, B.TaskId, B.NextTaskId, B.RecordType, B.WorkflowId, 
			Q.SqlQuery lovDescSqlQuery, Q.QueryDesc lovDescQueryDesc, F.FinTypeDesc lovDescFinTypeDesc
FROM         BulkRateChangeHeader B  INNER JOIN Queries Q 
             ON B.RuleType = Q.QueryCode INNER JOIN RMTFinanceTypes F
             ON B.FinType = F.FinType
</createView>   </changeSet>

<changeSet id="299" author="Pruthvi">
<createView replaceIfExists="true" viewName="BulkRateChangeHeader_View">
SELECT     	B.BulkRateChangeRef, B.FinType, B.FromDate, B.ToDate, B.RateChange, B.RecalType, B.RuleType, 
			B.Version, B.LastMntBy, B.LastMntOn, B.RecordStatus, B.RoleCode, B.NextRoleCode, B.TaskId, B.NextTaskId, B.RecordType, B.WorkflowId, 
			Q.SqlQuery lovDescSqlQuery, Q.QueryDesc lovDescQueryDesc, F.FinTypeDesc lovDescFinTypeDesc
FROM          BulkRateChangeHeader_Temp B  INNER JOIN Queries Q 
             ON B.RuleType = Q.QueryCode INNER JOIN RMTFinanceTypes F
             ON B.FinType = F.FinType
UNION ALL
SELECT     	B.BulkRateChangeRef, B.FinType, B.FromDate, B.ToDate, B.RateChange, B.RecalType, B.RuleType, 
			B.Version, B.LastMntBy, B.LastMntOn, B.RecordStatus, B.RoleCode, B.NextRoleCode, B.TaskId, B.NextTaskId, B.RecordType, B.WorkflowId, 
			Q.SqlQuery lovDescSqlQuery, Q.QueryDesc lovDescQueryDesc, F.FinTypeDesc lovDescFinTypeDesc
FROM          BulkRateChangeHeader B  INNER JOIN Queries Q 
             ON B.RuleType = Q.QueryCode INNER JOIN RMTFinanceTypes F
             ON B.FinType = F.FinType
WHERE     (NOT EXISTS
                          (SELECT     1 
                            FROM          BulkRateChangeHeader_Temp
                            WHERE      BulkRateChangeRef = B.BulkRateChangeRef))
</createView>   </changeSet>

<changeSet id="300" author="Pruthvi">
<createView replaceIfExists="true" viewName="BundledProductsDetail_AView">
SELECT   T1.FinReference, T1.CardProduct, T1.SalesStaff, T1.EmbossingName, T1.StatusOfCust, T1.MinRepay, T1.BillingAcc, T1.StmtAddress, 
         T1.StmtEmail, T1.PhysicalAddress, T1.ContactNumber, T1.Ref1Name, T1.Ref1PhoneNum, T1.Ref1Email, T1.Ref2Name, T1.Ref2PhoneNum,
         T1.Ref2Email, T1.BankName, T1.ChequeNo, T1.ChequeAmt, T1.CardType, T1.ClassType, T1.LimitRecommended, T1.LimitApproved, T1.ProfitRate,
         T1.CrossSellCard, T1.UrgentIssuance,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId		 
         FROM BundledProductsDetail T1 
         INNER JOIN  FinanceMain T2 ON T2.FinReference = T1.FinReference
</createView>   </changeSet>
<changeSet id="301" author="Pruthvi">
<createView replaceIfExists="true" viewName="BundledProductsDetail_TView">
SELECT   T1.FinReference, T1.CardProduct, T1.SalesStaff, T1.EmbossingName, T1.StatusOfCust, T1.MinRepay, T1.BillingAcc, T1.StmtAddress, 
         T1.StmtEmail, T1.PhysicalAddress, T1.ContactNumber, T1.Ref1Name, T1.Ref1PhoneNum, T1.Ref1Email, T1.Ref2Name, T1.Ref2PhoneNum,
         T1.Ref2Email, T1.BankName, T1.ChequeNo, T1.ChequeAmt, T1.CardType, T1.ClassType, T1.LimitRecommended, T1.LimitApproved, T1.ProfitRate,
         T1.CrossSellCard, T1.UrgentIssuance,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId	     
		 FROM  BundledProductsDetail_Temp T1 
		 INNER JOIN  FinanceMain_Temp T2 ON T2.FinReference = T1.FinReference
</createView>   </changeSet>

<changeSet id="302" author="Pruthvi">
<createView replaceIfExists="true" viewName="BundledProductsDetail_View">
SELECT   T1.FinReference, T1.CardProduct, T1.SalesStaff, T1.EmbossingName, T1.StatusOfCust, T1.MinRepay, T1.BillingAcc, T1.StmtAddress, 
         T1.StmtEmail, T1.PhysicalAddress, T1.ContactNumber, T1.Ref1Name, T1.Ref1PhoneNum, T1.Ref1Email, T1.Ref2Name, T1.Ref2PhoneNum,
         T1.Ref2Email, T1.BankName, T1.ChequeNo, T1.ChequeAmt, T1.CardType, T1.ClassType, T1.LimitRecommended, T1.LimitApproved, T1.ProfitRate,
         T1.CrossSellCard, T1.UrgentIssuance,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId	     
		 FROM  BundledProductsDetail_Temp T1 
		 INNER JOIN  FinanceMain_Temp T2 ON T2.FinReference = T1.FinReference 
		
UNION ALL
SELECT   T1.FinReference, T1.CardProduct, T1.SalesStaff, T1.EmbossingName, T1.StatusOfCust, T1.MinRepay, T1.BillingAcc, T1.StmtAddress, 
         T1.StmtEmail, T1.PhysicalAddress, T1.ContactNumber, T1.Ref1Name, T1.Ref1PhoneNum, T1.Ref1Email, T1.Ref2Name, T1.Ref2PhoneNum,
         T1.Ref2Email, T1.BankName, T1.ChequeNo, T1.ChequeAmt, T1.CardType, T1.ClassType, T1.LimitRecommended, T1.LimitApproved, T1.ProfitRate,
         T1.CrossSellCard, T1.UrgentIssuance,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId	
		 FROM  BundledProductsDetail T1  
		 INNER JOIN  FinanceMain T2 ON T2.FinReference = T1.FinReference 
		
WHERE NOT EXISTS 
                 (SELECT   1 
				  FROM        BundledProductsDetail_Temp 
				  WHERE       FinReference = T1.FinReference)
</createView>   </changeSet>


<changeSet id="303" author="Pruthvi">
<createView replaceIfExists="true" viewName="ChequePurpose_AView">
SELECT		T1.Code, T1.Description, T1.Active		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ChequePurpose T1
</createView>   </changeSet>
<changeSet id="304" author="Pruthvi">
<createView replaceIfExists="true" viewName="ChequePurpose_TView">
SELECT		T1.Code, T1.Description, T1.Active		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ChequePurpose_Temp T1
</createView>   </changeSet>

<changeSet id="305" author="Pruthvi">
<createView replaceIfExists="true" viewName="ChequePurpose_View">
SELECT		T1.Code, T1.Description, T1.Active		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ChequePurpose_Temp T1 
UNION ALL

SELECT		T1.Code, T1.Description, T1.Active		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ChequePurpose T1 
WHERE     NOT EXISTS (SELECT 1 FROM ChequePurpose_TEMP WHERE Code = T1.Code)
</createView>   </changeSet>
<changeSet id="306" author="Pruthvi">
<createView replaceIfExists="true" viewName="CollateralSetUp_AView">
SELECT		T1.CollateralRef, T1.DepositorId, T1.CollateralType, T1.CollateralCcy, T1.MaxCollateralValue, T1.SpecialLTV, T1.CollateralLoc, T1.Valuator, T1.ExpiryDate, T1.ReviewFrequency, 		
			T1.NextReviewDate, T1.MultiLoanAssignment, T1.ThirdPartyAssignment, T1.Remarks ,T1.CollateralValue,
			T1.BankLTV, T1.BankValuation, T1.Version, T1.LastMntBy ,T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CreatedBy, T1.CreatedOn, T2.CustCif DepositorCif, T3.CollateralDesc CollateralTypeName, T2.CustShrtName DepositorName
FROM    	CollateralSetUp T1
INNER JOIN Customers T2 ON T2.CustID = T1.DepositorId 
INNER JOIN CollateralStructure T3 ON T3.CollateralType = T1.CollateralType
</createView>   </changeSet>

<changeSet id="307" author="Pruthvi">
<createView replaceIfExists="true" viewName="CollateralSetUp_View">
SELECT		T1.CollateralRef, T1.DepositorId, T1.CollateralType, T1.CollateralCcy, T1.MaxCollateralValue, T1.SpecialLTV, T1.CollateralLoc, T1.Valuator, T1.ExpiryDate, T1.ReviewFrequency,		
			 T1.NextReviewDate, T1.MultiLoanAssignment, T1.ThirdPartyAssignment, T1.Remarks, T1.CollateralValue,
			T1.BankLTV, T1.BankValuation, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CreatedBy, T1.CreatedOn, T2.CustCif DepositorCif, T3.CollateralDesc CollateralTypeName, T2.CustShrtName DepositorName
FROM    	CollateralSetUp_Temp T1
INNER JOIN Customers T2 ON T2.CustID = T1.DepositorId 
INNER JOIN CollateralStructure T3 ON T3.CollateralType = T1.CollateralType
 
UNION ALL
SELECT		T1.CollateralRef, T1.DepositorId, T1.CollateralType, T1.CollateralCcy, T1.MaxCollateralValue, T1.SpecialLTV, T1.CollateralLoc, T1.Valuator, T1.ExpiryDate, T1.ReviewFrequency, 		
			T1.NextReviewDate, T1.MultiLoanAssignment, T1.ThirdPartyAssignment, T1.Remarks ,T1.CollateralValue,
			T1.BankLTV, T1.BankValuation, T1.Version, T1.LastMntBy ,T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId,
			 T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CreatedBy, T1.CreatedOn, T2.CustCif DepositorCif, T3.CollateralDesc CollateralTypeName, T2.CustShrtName DepositorName
FROM    	CollateralSetUp T1
INNER JOIN Customers T2 ON T2.CustID = T1.DepositorId 
INNER JOIN CollateralStructure T3 ON T3.CollateralType = T1.CollateralType
WHERE     NOT EXISTS (SELECT 1 FROM CollateralSetUp_Temp WHERE CollateralRef = T1.CollateralRef)
</createView>   </changeSet>
<changeSet id="308" author="Pruthvi">
<createView replaceIfExists="true" viewName="CollateralThirdParty_AView">
SELECT		T1.CollateralRef, T1.CustomerId, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustCIF , T2.CustShrtName,
			T2.CustCRCPR, T2.CustPassportNo, T2.CustNationality, T2.CustCtgCode	
FROM    	CollateralThirdParty T1
INNER JOIN Customers T2 ON T2.CustID = T1.CustomerId
</createView>   </changeSet>
<changeSet id="309" author="Pruthvi">
<createView replaceIfExists="true" viewName="CollateralThirdParty_View">
SELECT		T1.CollateralRef, T1.CustomerId, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustCIF , T2.CustShrtName,
			T2.CustCRCPR, T2.CustPassportNo, T2.CustNationality, T2.CustCtgCode  		
FROM    	CollateralThirdParty_Temp  T1
INNER JOIN Customers T2 ON T2.CustID = T1.CustomerId 
UNION ALL
SELECT		T1.CollateralRef, T1.CustomerId, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
			T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustCIF , T2.CustShrtName,
			T2.CustCRCPR, T2.CustPassportNo, T2.CustNationality, T2.CustCtgCode
FROM    	CollateralThirdParty  T1
INNER JOIN Customers T2 ON T2.CustID = T1.CustomerId  
WHERE     NOT EXISTS (SELECT 1 FROM CollateralThirdParty_Temp WHERE CollateralRef = T1.CollateralRef 
			AND CustomerId = T1.CustomerId)
</createView>   </changeSet>

<changeSet id="310" author="Pruthvi">
<createView replaceIfExists="true" viewName="CollateralThirdParty_View">
SELECT     T1.CmtReference, T1.FinReference, T1.FinBranch, T1.FinType, T1.MovementDate, T1.MovementOrder, T1.MovementType, T1.MovementAmount, T1.CmtAmount, 
                      T1.CmtUtilizedAmount, T1.CmtAvailable, T1.LinkedTranId, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtCharges, T3.CcyEditField
FROM         CommitmentMovements_Temp T1 INNER JOIN
                      Commitments_temp T2 ON T1.CmtReference = T2.CmtReference INNER JOIN
                      RMTCurrencies T3 ON T2.CmtCcy = T3.CcyCode
UNION ALL
SELECT     T1.CmtReference, T1.FinReference, T1.FinBranch, T1.FinType, T1.MovementDate, T1.MovementOrder, T1.MovementType, T1.MovementAmount, T1.CmtAmount, 
                      T1.CmtUtilizedAmount, T1.CmtAvailable, T1.LinkedTranId, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.CmtCharges, T3.CcyEditField
FROM         CommitmentMovements T1 INNER JOIN
                      Commitments T2 ON T1.CmtReference = T2.CmtReference INNER JOIN
                      RMTCurrencies T3 ON T2.CmtCcy = T3.CcyCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CommitmentMovements_TEMP
                            WHERE      CmtReference = T1.CmtReference)
</createView>   </changeSet>
<changeSet id="311" author="Pruthvi">
<createView replaceIfExists="true" viewName="CommitmentRates_AView">
SELECT		T1.CmtReference, T1.CmtRvwFrq, T1.CmtBaseRate, T1.CmtMargin, T1.CmtSpecialRate, T1.CmtActualRate, T1.CmtCalculatedRate, 
			T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
			T1.WorkflowId, T3.BRTypeDesc CmtBaseRateName
			
FROM    	 CommitmentRates T1 INNER JOIN
             Commitments T2 ON T1.CmtReference = T2.CmtReference LEFT OUTER JOIN
             RMTBaseRateCodes T3 ON T1.CmtBaseRate = T3.BRType
</createView>   </changeSet>

<changeSet id="312" author="Pruthvi">
<createView replaceIfExists="true" viewName="CustAdditionalDetails_AView">
SELECT     T1.CustID, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, T1.Version, 
                      T1.CustRefStaffID, T1.CustRefCustID, T1.AcademicDecipline, T1.CustAcademicLevel, T2.AcademicDesc lovDescCustAcademicLevelName, 
                      T2.AcademicDesc lovDescAcademicDeciplineName
FROM          CustAdditionalDetails T1 INNER JOIN
                       BMTAcademics T2 ON T1.CustAcademicLevel = T2.AcademicLevel AND T1.AcademicDecipline = T2.AcademicDecipline
</createView>   </changeSet>
<changeSet id="313" author="Pruthvi">
<createView replaceIfExists="true" viewName="CustAdditionalDetails_View">
SELECT     T1.CustID, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, 
                      T1.Version, T1.CustRefStaffID, T1.CustRefCustID, T1.AcademicDecipline, T1.CustAcademicLevel, 
                      T2.AcademicDesc lovDescCustAcademicLevelName, T2.AcademicDesc lovDescAcademicDeciplineName, 
                      T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName,  T3.RecordType lovDescCustRecordType 
FROM         CustAdditionalDetails_Temp T1 INNER JOIN
                      BMTAcademics T2 ON T1.CustAcademicLevel = T2.AcademicLevel AND T1.AcademicDecipline = T2.AcademicDecipline  INNER JOIN
                       Customers_AView T3 ON T1.CustID = T3.CustID 
UNION ALL
SELECT     T1.CustID, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, 
                      T1.Version, T1.CustRefStaffID, T1.CustRefCustID, T1.AcademicDecipline, T1.CustAcademicLevel, 
                      T2.AcademicDesc lovDescCustAcademicLevelName, T2.AcademicDesc lovDescAcademicDeciplineName, 
                      T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName,  T3.RecordType lovDescCustRecordType  
FROM         CustAdditionalDetails T1 INNER JOIN
                      BMTAcademics T2 ON T1.CustAcademicLevel = T2.AcademicLevel AND T1.AcademicDecipline = T2.AcademicDecipline  INNER JOIN
                       Customers_AView T3 ON T1.CustID = T3.CustID 
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustAdditionalDetails_Temp
                            WHERE      CustID = T1.CustID)
</createView>   </changeSet>	
<changeSet id="314" author="Pruthvi">
<createView replaceIfExists="true" viewName="CustFinanceExposure_View">
SELECT     Fm.FinReference, Fm.FinCommitmentRef, cmt.CmtTitle, Fm.CustID, Fm.NumberOfTerms, Fm.FinStartDate, Fm.FinType, 
                      Fm.FinAmount + Fm.TotalProfit TotalOriginal, cmt.CmtAmount, cmt.CmtAvailable, cmt.CmtExpDate CmtExpiryDate, 
                      Fm.FinAmount - Fm.FinRepaymentAmount + fpd.TotalPftBal TotalOutStanding, Fm.MaturityDate, Fm.TotalRepayAmt, Fm.FinStatus
FROM          FinanceMain Fm INNER JOIN
                       FinPftDetails fpd ON Fm.FinReference = fpd.FinReference LEFT OUTER JOIN
                       Commitments cmt ON cmt.CmtReference = Fm.FinCommitmentRef		
</createView>   </changeSet>	
<changeSet id="315" author="Pruthvi">
<createView replaceIfExists="true" viewName="CustIdentities_AView">
SELECT     T1.IdCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.IdType, T2.IdentityDesc lovDescIdTypeName, T1.IdIssuedBy, 
                      T1.IdRef, T1.IdIssueCountry, T3.CountryDesc lovDescIdIssueCountryName, T1.IdIssuedOn, T1.IdExpiresOn, T1.IdLocation, T1.Version, T1.LastMntBy, 
                      T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T4.RecordType lovDescCustRecordType
FROM          CustIdentities T1 INNER JOIN
                       BMTIdentityType T2 ON T1.IdType = T2.IdentityType INNER JOIN
                       BMTCountries T3 ON T1.IdIssueCountry = T3.CountryCode INNER JOIN
                       Customers_AView T4 ON T1.IdCustID = T4.CustID	
</createView>   </changeSet>	
<changeSet id="316" author="Pruthvi">
<createView replaceIfExists="true" viewName="CustIdentities_View">
SELECT     T1.IdCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.IdType, T2.IdentityDesc lovDescIdTypeName, 
                      T1.IdIssuedBy, T1.IdRef, T1.IdIssueCountry, T3.CountryDesc lovDescIdIssueCountryName, T1.IdIssuedOn, T1.IdExpiresOn, T1.IdLocation, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T4.RecordType lovDescCustRecordType 
FROM          CustIdentities_Temp T1 INNER JOIN
                       BMTIdentityType T2 ON T1.IdType = T2.IdentityType INNER JOIN
                       BMTCountries T3 ON T1.IdIssueCountry = T3.CountryCode INNER JOIN
                       Customers_View T4 ON T1.IdCustID = T4.CustID
UNION ALL
SELECT     T1.IdCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.IdType, T2.IdentityDesc lovDescIdTypeName, 
                      T1.IdIssuedBy, T1.IdRef, T1.IdIssueCountry, T3.CountryDesc lovDescIdIssueCountryName, T1.IdIssuedOn, T1.IdExpiresOn, T1.IdLocation, 
                      T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T4.RecordType lovDescCustRecordType 
FROM          CustIdentities T1 INNER JOIN
                       BMTIdentityType T2 ON T1.IdType = T2.IdentityType INNER JOIN
                       BMTCountries T3 ON T1.IdIssueCountry = T3.CountryCode INNER JOIN
                       Customers_AView T4 ON T1.IdCustID = T4.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustIdentities_Temp
                            WHERE      IdCustID = T1.IdCustID AND IdType = T1.IdType)
</createView>   </changeSet>
<changeSet id="317" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTLanguage_AView">

SELECT		T1.LngCode, T1.LngDesc, T1.LngNumber		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTLanguage T1
</createView>   </changeSet>
<changeSet id="318" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTLanguage_View">
SELECT		T1.LngCode, T1.LngDesc, T1.LngNumber		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTLanguage_TEMP T1
UNION ALL
SELECT		T1.LngCode, T1.LngDesc, T1.LngNumber		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	BMTLanguage  T1
WHERE     NOT EXISTS (SELECT 1 FROM BMTLanguage_TEMP WHERE LngCode = T1.LngCode)
</createView>   </changeSet>
<changeSet id="319" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTLovFieldCode_AView">
SELECT     FieldCode, FieldCodeDesc, FieldEdit, FieldCodeType, isActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTLovFieldCode
</createView>   </changeSet>
<changeSet id="320" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTLovFieldCode_View">
SELECT     FieldCode, FieldCodeDesc, FieldEdit, FieldCodeType, isActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTLovFieldCode_TEMP  T1
UNION ALL
SELECT     FieldCode, FieldCodeDesc, FieldEdit, FieldCodeType, isActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, 
                      NextTaskId, RecordType, WorkflowId
FROM         BMTLovFieldCode T1

WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          BMTLovFieldCode_TEMP
                            WHERE      FieldCode = T1.FieldCode)
</createView>   </changeSet>

<changeSet id="321" author="Pruthvi">
<createView replaceIfExists="true" viewName="BMTPhoneTypes_AView">
SELECT     PhoneTypeCode, PhoneTypeDesc, PhoneTypePriority, PhoneTypeIsActive, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, 
                      TaskId, NextTaskId, RecordType, WorkflowId
FROM         BMTPhoneTypes
</createView>   </changeSet>

	<changeSet author="kesava" id="322">
		<sql>
			Insert into RBFieldDetails SELECT RBModule,'ADDDBSP',RBFldName,RBFldDesc, RBFldType,RBFldLen,RBForCalFlds,RBForBldFlds,RBFldTableName,RBSTFlds,ModuleCode FROM RBFieldDetails Where RBModule = 'FEES' and RBEvent = 'ADDDBS';
			Insert into RBFieldDetails SELECT RBModule,'ADDDBSF',RBFldName,RBFldDesc, RBFldType,RBFldLen,RBForCalFlds,RBForBldFlds,RBFldTableName,RBSTFlds,ModuleCode FROM RBFieldDetails Where RBModule = 'FEES' and RBEvent = 'ADDDBS';
			Insert into RBFieldDetails SELECT RBModule,'ADDDBSN',RBFldName,RBFldDesc, RBFldType,RBFldLen,RBForCalFlds,RBForBldFlds,RBFldTableName,RBSTFlds,ModuleCode FROM RBFieldDetails Where RBModule = 'FEES' and RBEvent = 'ADDDBS';
		</sql>
	</changeSet>
	
<changeSet id="323" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerBalanceSheet_AView">
SELECT     T1.CustId, T1.FinancialYear, T1.TotalAssets, T1.TotalLiabilities, T1.NetProfit, T1.NetSales, T1.NetIncome, T1.OperatingProfit, T1.CashFlow, 
                      T1.BookValue, T1.MarketValue, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, 
                      T2.RecordType lovDescCustRecordType
FROM         CustomerBalanceSheet T1 INNER JOIN
                      Customers_View T2 ON T1.CustId = T2.CustID	
</createView>   </changeSet>

<changeSet id="324" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerBalanceSheet_View">
SELECT     T1.CustID, T1.FinancialYear, T1.TotalAssets, T1.TotalLiabilities, T1.NetProfit, T1.NetSales, T1.NetIncome, T1.OperatingProfit, T1.CashFlow, 
                      T1.BookValue, T1.MarketValue, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T2.RecordType lovDescCustRecordType 

FROM         CustomerBalanceSheet_TEMP T1  INNER JOIN
                       Customers_View T2 ON T1.CustID = T2.CustID

UNION ALL
SELECT     T1.CustID, T1.FinancialYear, T1.TotalAssets, T1.TotalLiabilities, T1.NetProfit, T1.NetSales, T1.NetIncome, T1.OperatingProfit, T1.CashFlow, 
                      T1.BookValue, T1.MarketValue, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T2.RecordType lovDescCustRecordType 

FROM         CustomerBalanceSheet  T1  INNER JOIN
                       Customers_View T2 ON T1.CustID = T2.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerBalanceSheet_TEMP
                            WHERE      CustId = T1.CustId AND FinancialYear =T1.FinancialYear)		
</createView>   </changeSet>

<changeSet id="325" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerBankInfo_AView">
 SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
		     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		     T3.BankName lovDescBankName,T4.AcTypeDesc lovDescAccountType,T2.CustCIF lovDescCustCIF,
		     T2.CustShrtName lovDescCustShrtName
  FROM       CustomerBankInfo T1 INNER JOIN 
             Customers T2 ON T2.CustID = T1.CustID INNER JOIN
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             RMTAccountTypes T4 ON T4.AcType = T1.AccountType
		
</createView>   </changeSet>

<changeSet id="326" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerBankInfo_View">
 SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
		     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		     T3.BankName lovDescBankName,T4.AcTypeDesc lovDescAccountType,T2.CustCIF lovDescCustCIF,
		     T2.CustShrtName lovDescCustShrtName
  FROM       CustomerBankInfo_Temp T1 INNER JOIN 
             Customers_Temp T2 ON T2.CustID = T1.CustID INNER JOIN
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             RMTAccountTypes T4 ON T4.AcType = T1.AccountType 
UNION ALL

  SELECT     T1.BankId,T1.CustID, T1.BankName, T1.AccountNumber, T1.AccountType,T1.SalaryAccount, T1.Version, T1.LastMntBy, T1.LastMntOn,
		     T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		     T3.BankName lovDescBankName,T4.AcTypeDesc lovDescAccountType,T2.CustCIF lovDescCustCIF,
		     T2.CustShrtName lovDescCustShrtName
  FROM       CustomerBankInfo T1 INNER JOIN 
             Customers T2 ON T2.CustID = T1.CustID INNER JOIN
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             RMTAccountTypes T4 ON T4.AcType = T1.AccountType
WHERE     NOT EXISTS (SELECT 1 FROM CustomerBankInfo_TEMP WHERE BankId = T1.BankId)
		
</createView>   </changeSet>

<changeSet id="327" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerChequeInfo_AView">
 SELECT      T1.CustID, T1.ChequeSeq, T1.MonthYear, T1.TotChequePayment, T1.Salary, T1.Debits, T1.ReturnChequeAmt,
			T1.ReturnChequeCount, T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T2.CustCIF lovDescCustCIF,T2.CustShrtName lovDescCustShrtName
FROM         CustomerChequeInfo T1  INNER JOIN 
             Customers T2 ON T2.CustID = T1.CustID
			 
</createView>   </changeSet>
<changeSet id="328" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerChequeInfo_View">
SELECT      T1.CustID, T1.ChequeSeq, T1.MonthYear, T1.TotChequePayment, T1.Salary,T1.Debits, T1.ReturnChequeAmt,
			T1.ReturnChequeCount, T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T2.CustCIF lovDescCustCIF,T2.CustShrtName lovDescCustShrtName
FROM         CustomerChequeInfo_Temp T1  INNER JOIN 
             Customers_Temp T2 ON T2.CustID = T1.CustID
UNION ALL

 SELECT      T1.CustID, T1.ChequeSeq, T1.MonthYear, T1.TotChequePayment, T1.Salary,T1.Debits, T1.ReturnChequeAmt,
			T1.ReturnChequeCount, T1.Remarks, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T2.CustCIF lovDescCustCIF,T2.CustShrtName lovDescCustShrtName
FROM         CustomerChequeInfo T1  INNER JOIN 
             Customers T2 ON T2.CustID = T1.CustID

WHERE     NOT EXISTS (SELECT 1 FROM CustomerChequeInfo_TEMP WHERE CustID = T1.CustID And ChequeSeq = T1.ChequeSeq)		
</createView>   </changeSet>

<changeSet id="329" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerCorporateDetail_AView">
SELECT     T1.CustId, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T1.Name, T1.PhoneNumber, T1.EmailId, 
                      T1.BussCommenceDate, T1.ServCommenceDate, T1.BankRelationshipDate, T1.PaidUpCapital, T1.AuthorizedCapital, T1.ReservesAndSurPlus, 
                      T1.IntangibleAssets, T1.TangibleNetWorth, T1.LongTermLiabilities, T1.CapitalEmployed, T1.Investments, T1.NonCurrentAssets, T1.NetWorkingCapital, 
                      T1.NetSales, T1.OtherIncome, T1.NetProfitAfterTax, T1.Depreciation, T1.CashAccurals, T1.AnnualTurnover, T1.ReturnOnCapitalEmp, T1.CurrentAssets, 
                      T1.CurrentLiabilities, T1.CurrentBookValue, T1.CurrentMarketValue, T1.PromotersShare, T1.AssociatesShare, T1.PublicShare, T1.FinInstShare, 
                      T1.Others, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId, T2.RecordType lovDescCustRecordType
FROM         CustomerCorporateDetail T1 INNER JOIN
                      Customers_View T2 ON T1.CustId = T2.CustID
</createView>   </changeSet>		

<changeSet id="330" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerCorporateDetail_View">
SELECT     T1.CustId, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T1.Name, T1.PhoneNumber, T1.EmailId, T1.BussCommenceDate, T1.ServCommenceDate, T1.BankRelationshipDate, T1.PaidUpCapital, 
                      T1.AuthorizedCapital, T1.ReservesAndSurPlus, T1.IntangibleAssets, T1.TangibleNetWorth, T1.LongTermLiabilities, T1.CapitalEmployed, 
                      T1.Investments, T1.NonCurrentAssets, T1.NetWorkingCapital, T1.NetSales, T1.OtherIncome, T1.NetProfitAfterTax, T1.Depreciation, T1.CashAccurals, 
                      T1.AnnualTurnover, T1.ReturnOnCapitalEmp, T1.CurrentAssets, T1.CurrentLiabilities, T1.CurrentBookValue, T1.CurrentMarketValue, T1.PromotersShare, 
                      T1.AssociatesShare, T1.PublicShare, T1.FinInstShare, T1.Others, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RecordType lovDescCustRecordType 
FROM         CustomerCorporateDetail_TEMP T1 INNER JOIN
                       Customers_View T2 ON T1.CustID = T2.CustID

UNION ALL
SELECT     T1.CustId , T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T1.Name, T1.PhoneNumber, T1.EmailId, T1.BussCommenceDate, T1.ServCommenceDate, T1.BankRelationshipDate, T1.PaidUpCapital, 
                      T1.AuthorizedCapital, T1.ReservesAndSurPlus, T1.IntangibleAssets, T1.TangibleNetWorth, T1.LongTermLiabilities, T1.CapitalEmployed, 
                      T1.Investments, T1.NonCurrentAssets, T1.NetWorkingCapital, T1.NetSales, T1.OtherIncome, T1.NetProfitAfterTax, T1.Depreciation, T1.CashAccurals, 
                      T1.AnnualTurnover, T1.ReturnOnCapitalEmp, T1.CurrentAssets, T1.CurrentLiabilities, T1.CurrentBookValue, T1.CurrentMarketValue, T1.PromotersShare, 
                      T1.AssociatesShare, T1.PublicShare, T1.FinInstShare, T1.Others, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, 
                      T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RecordType lovDescCustRecordType 
FROM         CustomerCorporateDetail T1  INNER JOIN
                       Customers_View T2 ON T1.CustID = T2.CustID 
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerCorporateDetail_TEMP
                            WHERE      CustId = T1.CustId)
</createView>   </changeSet>	

<changeSet id="331" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerEMails_AView">
SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustEMailTypeCode, 
                      T2.EmailTypeDesc lovDescCustEMailTypeCode, T1.CustEMailPriority, T1.CustEMail, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T3.RecordType lovDescCustRecordType
FROM          CustomerEMails T1 INNER JOIN
                       BMTEMailTypes T2 ON T1.CustEMailTypeCode = T2.EmailTypeCode INNER JOIN
                       Customers_AView T3 ON T1.CustID = T3.CustID
</createView>   </changeSet>	

<changeSet id="332" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerEMails_View">
SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustEMailTypeCode, 
                      T2.EmailTypeDesc lovDescCustEMailTypeCode, T1.CustEMailPriority, T1.CustEMail, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T3.RecordType lovDescCustRecordType
FROM          CustomerEMails_Temp T1 INNER JOIN
                       BMTEMailTypes T2 ON T1.CustEMailTypeCode = T2.EmailTypeCode INNER JOIN
                       Customers_View T3 ON T1.CustID = T3.CustID
UNION ALL
SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustEMailTypeCode, 
                      T2.EmailTypeDesc lovDescCustEMailTypeCode, T1.CustEMailPriority, T1.CustEMail, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T3.RecordType lovDescCustRecordType
FROM          CustomerEMails T1 INNER JOIN
                       BMTEMailTypes T2 ON T1.CustEMailTypeCode = T2.EmailTypeCode INNER JOIN
                       Customers_AView T3 ON T1.CustID = T3.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerEMails_Temp
                            WHERE      CustID = T1.CustID AND CustEMailTypeCode = T1.CustEMailTypeCode)		
</createView>   </changeSet>	

<changeSet id="333" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerEmpDetails_AView">
SELECT     T1.CustEmpId,T1.CustID, T8.CustCIF lovDescCustCIF, T8.CustShrtName lovDescCustShrtName, T1.CustEmpName, T1.CustEmpFrom, T1.CustEmpTo, T1.CustEmpDesg, 
                      T2.GenDesgDesc lovDescCustEmpDesgName, T1.CustEmpDept, T3.GenDeptDesc lovDescCustEmpDeptName, T1.CustEmpType, 
                      T4.EmpTypeDesc lovDescCustEmpTypeName, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T8.RecordType lovDescCustRecordType, T5.EmpName lovDesccustEmpName, T1.CurrentEmployer, 
                      T5.EmpAlocationType
FROM          CustomerEmpDetails T1 INNER JOIN
                       RMTGenDesignations T2 ON T1.CustEmpDesg = T2.GenDesignation INNER JOIN
                       RMTGenDepartments T3 ON T1.CustEmpDept = T3.GenDepartment INNER JOIN
                       RMTEmpTypes T4 ON T1.CustEmpType = T4.EmpType INNER JOIN
                       Customers_AView T8 ON T1.CustID = T8.CustID INNER JOIN
                       EmployerDetail T5 ON T1.CustEmpName = T5.EmployerId
</createView>   </changeSet>

<changeSet id="334" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerEmpDetails_View">
SELECT     T1.CustEmpId,T1.CustID, T8.CustCIF lovDescCustCIF, T8.CustShrtName lovDescCustShrtName, T1.CustEmpName, T1.CustEmpFrom, T1.CustEmpTo, T1.CustEmpDesg, 
                      T2.GenDesgDesc lovDescCustEmpDesgName, T1.CustEmpDept, T3.GenDeptDesc lovDescCustEmpDeptName, T1.CustEmpType, 
                      T4.EmpTypeDesc lovDescCustEmpTypeName, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T8.RecordType lovDescCustRecordType, T5.EmpName lovDesccustEmpName, T1.CurrentEmployer
FROM          CustomerEmpDetails_Temp T1 INNER JOIN
                       RMTGenDesignations T2 ON T1.CustEmpDesg = T2.GenDesignation INNER JOIN
                       RMTGenDepartments T3 ON T1.CustEmpDept = T3.GenDepartment INNER JOIN
                       RMTEmpTypes T4 ON T1.CustEmpType = T4.EmpType INNER JOIN
                       Customers_View T8 ON T1.CustID = T8.CustID INNER JOIN
                       EmployerDetail T5 ON T1.CustEmpName = T5.EmployerId
UNION ALL
SELECT     T1.CustEmpId,T1.CustID, T8.CustCIF lovDescCustCIF, T8.CustShrtName lovDescCustShrtName, T1.CustEmpName, T1.CustEmpFrom, T1.CustEmpTo, T1.CustEmpDesg, 
                      T2.GenDesgDesc lovDescCustEmpDesgName, T1.CustEmpDept, T3.GenDeptDesc lovDescCustEmpDeptName, T1.CustEmpType, 
                      T4.EmpTypeDesc lovDescCustEmpTypeName, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T8.RecordType lovDescCustRecordType, T5.EmpName lovDesccustEmpName, T1.CurrentEmployer
FROM          CustomerEmpDetails T1 INNER JOIN
                       RMTGenDesignations T2 ON T1.CustEmpDesg = T2.GenDesignation INNER JOIN
                       RMTGenDepartments T3 ON T1.CustEmpDept = T3.GenDepartment INNER JOIN
                       RMTEmpTypes T4 ON T1.CustEmpType = T4.EmpType INNER JOIN
                       Customers_AView T8 ON T1.CustID = T8.CustID INNER JOIN
                       EmployerDetail T5 ON T1.CustEmpName = T5.EmployerId
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           CustomerEmpDetails_Temp
                            WHERE      (CustID = T1.CustID)))		
</createView>   </changeSet>

<changeSet id="335" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerExtLiability_AView">
SELECT      T1.CustID, T1.LiabilitySeq, T1.FinDate, T1.FinType, T1.BankName, T1.OriginalAmount, T1.InstalmentAmount,
	        T1.OutStandingBal, T1.FinStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T3.BankName lovDescBankName,T4.FinTypeDesc lovDescFinType,T2.CustCIF lovDescCustCIF,
		    T2.CustShrtName lovDescCustShrtName,T5.CustStsDescription lovDescFinStatus
FROM         CustomerExtLiability T1 INNER JOIN 
             Customers T2 ON T2.CustID = T1.CustID INNER JOIN
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             OtherBankFinanceType T4 ON T4.FinType = T1.FinType LEFT OUTER JOIN
             BMTCustStatusCodes T5 ON T5.CustStsCode = T1.FinStatus
</createView>   </changeSet>

<changeSet id="336" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerExtLiability_View">
SELECT      T1.CustID, T1.LiabilitySeq, T1.FinDate, T1.FinType, T1.BankName, T1.OriginalAmount, T1.InstalmentAmount,
	        T1.OutStandingBal, T1.FinStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T3.BankName lovDescBankName,T4.FinTypeDesc lovDescFinType,T2.CustCIF lovDescCustCIF,
		    T2.CustShrtName lovDescCustShrtName,T5.CustStsDescription lovDescFinStatus
FROM         CustomerExtLiability_Temp T1 INNER JOIN 
             Customers_Temp T2 ON T2.CustID = T1.CustID INNER JOIN
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             OtherBankFinanceType T4 ON T4.FinType = T1.FinType LEFT OUTER JOIN
             BMTCustStatusCodes T5 ON T5.CustStsCode = T1.FinStatus 

UNION ALL

SELECT      T1.CustID, T1.LiabilitySeq, T1.FinDate, T1.FinType, T1.BankName, T1.OriginalAmount, T1.InstalmentAmount,
	        T1.OutStandingBal, T1.FinStatus, T1.Version, T1.LastMntBy, T1.LastMntOn,
		    T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType,T1.WorkflowId,
		    T3.BankName lovDescBankName,T4.FinTypeDesc lovDescFinType,T2.CustCIF lovDescCustCIF,
		    T2.CustShrtName lovDescCustShrtName,T5.CustStsDescription lovDescFinStatus
FROM         CustomerExtLiability T1 INNER JOIN 
             Customers T2 ON T2.CustID = T1.CustID INNER JOIN
             BMTBankDetail T3 ON T3.BankCode = T1.BankName INNER JOIN
             OtherBankFinanceType T4 ON T4.FinType = T1.FinType LEFT OUTER JOIN
             BMTCustStatusCodes T5 ON T5.CustStsCode = T1.FinStatus 

WHERE     NOT EXISTS (SELECT 1 FROM CustomerExtLiability_TEMP WHERE CustID = T1.CustID  And LiabilitySeq = T1.LiabilitySeq)
</createView>   </changeSet>
<changeSet id="337" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerFinances_IView">
SELECT     T1.CustID CustomerNo, T1.FinReference FinanceRef, T1.FinStartDate StartDate, T1.MaturityDate, T1.RepayAccountId RepaymentAccount, 
                      T1.TotalProfit ProfitAmount, T1.TotalRepayAmt TotalAmount, T1.FinAmount FinanceAmount, T1.NextRepayDate DueDate, 
                      T1.NumberOfTerms TotalInstallments, T1.FinType FinanceType, T1.lovDescCustFName CustomerName, T1.RepayProfitRate ProfitRate, 
                      T1.RepayMargin MarginRate, T1.RepayBaseRate BaseRate, T2.BranchDesc Branch, T3.CcyDesc Currency, T4.FinCategory ProductType, 
                      T5.NSchdPft + T5.NSchdPri InstallmentAmount, T5.NSchdPft + T5.NSchdPri + T5.NSchdPftDue + T5.NSchdPriDue OutstandingAmount, 
                      T5.Unearned UnearnedProfit, T5.NOInst - T5.NOPaidInst RemainingInstallments, T5.ODDays DaysPtDue, 
                      T1.FinAmount - T1.FinRepaymentAmount OutstandingBalance, T6.CustStsCode FinanceStatus
FROM          FinanceMain_AView T1 INNER JOIN
                       RMTBranches T2 ON T1.FinBranch = T2.BranchCode INNER JOIN
                       RMTCurrencies T3 ON T1.FinCcy = T3.CcyCode INNER JOIN
                       RMTFinanceTypes T4 ON T1.FinType = T4.FinType INNER JOIN
                       FinPftDetails T5 ON T1.FinReference = T5.FinReference INNER JOIN
                       BMTCustStatusCodes T6 ON T1.FinStatus = T6.CustStsCode
</createView>   </changeSet>

<changeSet id="338" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerGroups_AView">
SELECT     T1.CustGrpID, T1.CustGrpCode, T1.CustGrpDesc, T1.CustGrpRO1, T1.CustGrpLimit, T1.CustGrpIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T2.ROfficerDesc lovDescCustGrpRO1Name
FROM          CustomerGroups T1 Left Outer JOIN
                       RelationshipOfficers T2 ON T1.CustGrpRO1 = T2.ROfficerCode		
</createView>   </changeSet>

<changeSet id="339" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerGroups_View">
SELECT     T1.CustGrpID, T1.CustGrpCode, T1.CustGrpDesc, T1.CustGrpRO1, T1.CustGrpLimit, T1.CustGrpIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.ROfficerDesc lovDescCustGrpRO1Name
FROM          CustomerGroups_Temp T1  Left Outer JOIN
                       RelationshipOfficers T2 ON T1.CustGrpRO1 = T2.ROfficerCode
UNION ALL
SELECT     T1.CustGrpID, T1.CustGrpCode, T1.CustGrpDesc, T1.CustGrpRO1, T1.CustGrpLimit, T1.CustGrpIsActive, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.ROfficerDesc lovDescCustGrpRO1Name
FROM          CustomerGroups T1  Left Outer JOIN
                       RelationshipOfficers T2 ON T1.CustGrpRO1 = T2.ROfficerCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerGroups_Temp
                            WHERE      CustGrpID = T1.CustGrpID)	
</createView>   </changeSet>

<changeSet id="340" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerIncomes_AView">
SELECT     T1.CustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.CustIncomeType, T2.IncomeTypeDesc lovDescCustIncomeTypeName, 
                      T1.CustIncome, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T4.RecordType lovDescCustRecordType, T1.IncomeExpense, T1.Margin, T1.Category, T4.lovDescCcyFormatter lovDescCcyEditField, 
                      T3.CategoryDesc lovDescCategoryName, T1.JointCust
FROM          CustomerIncomes T1 INNER JOIN
                       BMTIncomeTypes T2 ON T1.CustIncomeType = T2.IncomeTypeCode AND T1.IncomeExpense = T2.IncomeExpense AND T1.Category = T2.Category INNER JOIN
                       Customers_AView T4 ON T1.CustID = T4.CustID INNER JOIN
                       BMTIncomeCategory T3 ON T1.Category = T3.IncomeCategory		
</createView>   </changeSet>

<changeSet id="341" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerIncomes_View">
SELECT     T1.CustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.CustIncomeType, T2.IncomeTypeDesc lovDescCustIncomeTypeName, 
                      T1.CustIncome, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T4.RecordType lovDescCustRecordType, T1.IncomeExpense, T1.Margin, T1.Category, T4.lovDescCcyFormatter lovDescCcyEditField, 
                      T3.CategoryDesc lovDescCategoryName, T1.JointCust
FROM          CustomerIncomes_Temp T1 INNER JOIN
                       BMTIncomeTypes T2 ON T1.CustIncomeType = T2.IncomeTypeCode AND T1.IncomeExpense = T2.IncomeExpense AND T1.Category = T2.Category INNER JOIN
                       Customers_View T4 ON T1.CustID = T4.CustID INNER JOIN
                       BMTIncomeCategory T3 ON T1.Category = T3.IncomeCategory
UNION ALL
SELECT     T1.CustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.CustIncomeType, T2.IncomeTypeDesc lovDescCustIncomeTypeName, 
                      T1.CustIncome, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, 
                      T4.RecordType lovDescCustRecordType, T1.IncomeExpense, T1.Margin, T1.Category, T4.lovDescCcyFormatter lovDescCcyEditField, 
                      T3.CategoryDesc lovDescCategoryName, T1.JointCust
FROM          CustomerIncomes T1 INNER JOIN
                       BMTIncomeTypes T2 ON T1.CustIncomeType = T2.IncomeTypeCode AND T1.IncomeExpense = T2.IncomeExpense AND T1.Category = T2.Category INNER JOIN
                       Customers_AView T4 ON T1.CustID = T4.CustID INNER JOIN
                       BMTIncomeCategory T3 ON T1.Category = T3.IncomeCategory
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           CustomerIncomes_Temp
                            WHERE      (CustID = T1.CustID) AND (CustIncomeType = T1.CustIncomeType) AND (IncomeExpense = T1.IncomeExpense) AND (Category = T1.Category)))
</createView>   </changeSet>


<changeSet id="342" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerNotes_AView">
SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustNotesType, T2.CustNotesTypeDesc lovDescCustNotesTypeName, 
                      T1.CustNotesTitle, T1.CustNotes, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T3.RecordType lovDescCustRecordType
FROM          CustomerNotes T1 INNER JOIN
                       BMTCustNotesTypes T2 ON T1.CustNotesType = T2.CustNotesTypeCode INNER JOIN
                       Customers_View T3 ON T1.CustID = T3.CustID		
</createView>   </changeSet>

<changeSet id="343" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerNotes_View">
SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustNotesType, T2.CustNotesTypeDesc lovDescCustNotesTypeName, 
                      T1.CustNotesTitle, T1.CustNotes, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T3.RecordType lovDescCustRecordType
FROM          CustomerNotes_Temp T1 INNER JOIN
                       BMTCustNotesTypes T2 ON T1.CustNotesType = T2.CustNotesTypeCode INNER JOIN
                       Customers_View T3 ON T1.CustID = T3.CustID
UNION ALL
SELECT     T1.CustID, T3.CustCIF lovDescCustCIF, T3.CustShrtName lovDescCustShrtName, T1.CustNotesType, T2.CustNotesTypeDesc lovDescCustNotesTypeName, 
                      T1.CustNotesTitle, T1.CustNotes, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, 
                      T1.RecordType, T1.WorkflowId, T3.RecordType lovDescCustRecordType
FROM          CustomerNotes T1 INNER JOIN
                       BMTCustNotesTypes T2 ON T1.CustNotesType = T2.CustNotesTypeCode INNER JOIN
                       Customers_View T3 ON T1.CustID = T3.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerNotes_Temp
                            WHERE      CustID = T1.CustID AND CustNotesType = T1.CustNotesType AND CustNotesTitle = T1.CustNotesTitle)
</createView>   </changeSet>

<changeSet id="344" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerPhoneNumbers_AView">
SELECT     T1.PhoneCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
           T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
           T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName, 
           T4.RecordType lovDescCustRecordType
FROM         CustomerPhoneNumbers T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode INNER JOIN
                      Customers_View T4 ON T1.PhoneCustID = T4.CustID
</createView>   </changeSet>

<changeSet id="345" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerPhoneNumbers_View">
SELECT     T1.PhoneCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
                      T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName, 
                      T4.RecordType lovDescCustRecordType
FROM         CustomerPhoneNumbers_TEMP T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode INNER JOIN
                      Customers_View T4 ON T1.PhoneCustID = T4.CustID
UNION ALL
SELECT     T1.PhoneCustID, T4.CustCIF lovDescCustCIF, T4.CustShrtName lovDescCustShrtName, T1.PhoneTypeCode, T1.PhoneCountryCode, T1.PhoneAreaCode, 
                      T1.PhoneNumber, T1.PhoneTypePriority, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, 
                      T1.WorkflowId, T2.PhoneTypeDesc lovDescPhoneTypeCodeName, T3.CountryDesc lovDescPhoneCountryName, 
                      T4.RecordType lovDescCustRecordType
FROM         CustomerPhoneNumbers T1 INNER JOIN
                      BMTPhoneTypes T2 ON T1.PhoneTypeCode = T2.PhoneTypeCode LEFT OUTER JOIN
                      BMTCountries T3 ON T1.PhoneCountryCode = T3.CountryCode INNER JOIN
                      Customers_View T4 ON T1.PhoneCustID = T4.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerPhoneNumbers_TEMP
                            WHERE      PhoneCustID = T1.PhoneCustID AND PhoneTypeCode = T1.PhoneTypeCode)
</createView>   </changeSet>

<changeSet id="346" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerRatings_AView">
SELECT     T1.CustID, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T1.CustRatingType, T3.RatingTypeDesc lovDescCustRatingTypeName, 
                      T1.CustRatingCode, T1.CustRating, T1.ValueType, T1.Version, T1.LastMntOn, T1.LastMntBy, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RecordType lovDescCustRecordType, T4.RatingCodeDesc lovDescCustRatingName, 
                      T5.RatingCodeDesc lovDesccustRatingCodeDesc
FROM          CustomerRatings T1 INNER JOIN
                       Customers T2 ON T1.CustID = T2.CustID INNER JOIN
                       BMTRatingTypes T3 ON T1.CustRatingType = T3.RatingType LEFT OUTER JOIN
                       BMTRatingCodes T4 ON T1.CustRatingType = T4.RatingType AND T1.CustRating = T4.RatingCode LEFT OUTER JOIN
                       BMTRatingCodes T5 ON T1.CustRatingType = T5.RatingType AND T1.CustRatingCode = T5.RatingCode
</createView>   </changeSet>

<changeSet id="347" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomerRatings_View">
SELECT     T1.CustID, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T1.CustRatingType, T3.RatingTypeDesc lovDescCustRatingTypeName, 
                      T1.CustRatingCode, T1.CustRating, T1.ValueType, T1.Version, T1.LastMntOn, T1.LastMntBy, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RecordType lovDescCustRecordType, T4.RatingCodeDesc lovDescCustRatingName, 
                      T5.RatingCodeDesc lovDesccustRatingCodeDesc
FROM          CustomerRatings_Temp T1 INNER JOIN
                       Customers T2 ON T1.CustID = T2.CustID INNER JOIN
                       BMTRatingTypes T3 ON T1.CustRatingType = T3.RatingType LEFT OUTER JOIN
                       BMTRatingCodes T4 ON T1.CustRatingType = T4.RatingType AND T1.CustRating = T4.RatingCode LEFT OUTER JOIN
                       BMTRatingCodes T5 ON T1.CustRatingType = T5.RatingType AND T1.CustRatingCode = T5.RatingCode
UNION ALL
SELECT     T1.CustID, T2.CustCIF lovDescCustCIF, T2.CustShrtName lovDescCustShrtName, T1.CustRatingType, T3.RatingTypeDesc lovDescCustRatingTypeName, 
                      T1.CustRatingCode, T1.CustRating, T1.ValueType, T1.Version, T1.LastMntOn, T1.LastMntBy, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, 
                      T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.RecordType lovDescCustRecordType, T4.RatingCodeDesc lovDescCustRatingName, 
                      T5.RatingCodeDesc lovDesccustRatingCodeDesc
FROM          CustomerRatings T1 INNER JOIN
                       Customers T2 ON T1.CustID = T2.CustID INNER JOIN
                       BMTRatingTypes T3 ON T1.CustRatingType = T3.RatingType LEFT OUTER JOIN
                       BMTRatingCodes T4 ON T1.CustRatingType = T4.RatingType AND T1.CustRating = T4.RatingCode LEFT OUTER JOIN
                       BMTRatingCodes T5 ON T1.CustRatingType = T5.RatingType AND T1.CustRatingCode = T5.RatingCode
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomerRatings_Temp
                            WHERE      CustID = T1.CustID AND CustRatingType = T1.CustRatingType)
</createView>   </changeSet>
<changeSet id="348" author="Pruthvi">
		<createView replaceIfExists="true" viewName="Customers_AView">
SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName, T5.CcyDesc lovDescCustBaseCcyName, 
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName, T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, T5.CcyEditField lovDescCcyFormatter, 
                      T1.DedupFound, T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.CustRelation, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID, T1.SalariedCustomer,T31.TargetDesc lovDescTargetName,
                      T1.custSuspSts, T1.custSuspDate, T1.custSuspTrigger
FROM          Customers T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       RMTCurrencies T5 ON T1.CustBaseCcy = T5.CcyCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode LEFT OUTER  JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
</createView>   </changeSet>

<changeSet id="349" author="Pruthvi">
		<createView replaceIfExists="true" viewName="Customers_TView">
SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName, T5.CcyDesc lovDescCustBaseCcyName, 
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName, T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, T5.CcyEditField lovDescCcyFormatter, 
                      T1.DedupFound, T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID,T1.SalariedCustomer,T31.TargetDesc lovDescTargetName
FROM          Customers_Temp T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       RMTCurrencies T5 ON T1.CustBaseCcy = T5.CcyCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode INNER JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
</createView>   </changeSet>
<changeSet id="350" author="Pruthvi">
		<createView replaceIfExists="true" viewName="Customers_View">
SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName, T5.CcyDesc lovDescCustBaseCcyName, 
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName, T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, T5.CcyEditField lovDescCcyFormatter, T1.DedupFound, 
                      T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.CustRelation, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID, T1.SalariedCustomer, 
                      T31.TargetDesc lovDescTargetName,
                      T1.custSuspSts, T1.custSuspDate, T1.custSuspTrigger
FROM          Customers_Temp T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       RMTCurrencies T5 ON T1.CustBaseCcy = T5.CcyCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode LEFT OUTER JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
UNION ALL
SELECT     T1.CustID, T1.CustCIF, T1.CustCoreBank, T1.CustCtgCode, T1.CustTypeCode, T1.CustSalutationCode, T1.CustFName, T1.CustMName, T1.CustLName, 
                      T1.CustShrtName, T1.CustFNameLclLng, T1.CustMNameLclLng, T1.CustLNameLclLng, T1.CustShrtNameLclLng, T1.CustDftBranch, T1.CustGenderCode, T1.CustDOB, 
                      T1.CustPOB, T1.CustCOB, T1.CustPassportNo, T1.CustMotherMaiden, T1.CustIsMinor, T1.CustReferedBy, T1.CustDSA, T1.CustDSADept, T1.CustRO1, T1.CustRO2, 
                      T1.CustGroupID, T1.CustSts, T1.CustStsChgDate, T1.CustGroupSts, T1.CustIsBlocked, T1.CustIsActive, T1.CustIsClosed, T1.CustInactiveReason, T1.CustIsDecease, 
                      T1.CustIsDormant, T1.CustIsDelinquent, T1.CustIsTradeFinCust, T1.CustTradeLicenceNum, T1.CustTradeLicenceExpiry, T1.CustPassportExpiry, T1.CustVisaNum, 
                      T1.CustVisaExpiry, T1.CustIsStaff, T1.CustStaffID, T1.CustIndustry, T1.CustSector, T1.CustSubSector, T1.CustProfession, T1.CustTotalIncome, T1.CustMaritalSts, 
                      T1.CustEmpSts, T1.CustSegment, T1.CustSubSegment, T1.CustIsBlackListed, T1.CustBLRsnCode, T1.CustIsRejected, T1.CustRejectedRsn, T1.CustBaseCcy, 
                      T1.CustLng, T1.CustParentCountry, T1.CustResdCountry, T1.CustRiskCountry, T1.CustNationality, T1.CustClosedOn, T1.CustStmtFrq, T1.CustIsStmtCombined, 
                      T1.CustStmtLastDate, T1.CustStmtNextDate, T1.CustStmtDispatchMode, T1.CustFirstBusinessDate, T1.CustAddlVar81, T1.CustAddlVar82, T1.CustAddlVar83, 
                      T1.CustAddlVar84, T1.CustAddlVar85, T1.CustAddlVar86, T1.CustAddlVar87, T1.CustAddlVar88, T1.CustAddlVar89, T1.CustAddlDate1, T1.CustAddlDate2, 
                      T1.CustAddlDate3, T1.CustAddlDate4, T1.CustAddlDate5, T1.CustAddlVar1, T1.CustAddlVar2, T1.CustAddlVar3, T1.CustAddlVar4, T1.CustAddlVar5, T1.CustAddlVar6, 
                      T1.CustAddlVar7, T1.CustAddlVar8, T1.CustAddlVar9, T1.CustAddlVar10, T1.CustAddlVar11, T1.CustAddlDec1, T1.CustAddlDec2, T1.CustAddlDec3, T1.CustAddlDec4, 
                      T1.CustAddlDec5, T1.CustAddlInt1, T1.CustAddlInt2, T1.CustAddlInt3, T1.CustAddlInt4, T1.CustAddlInt5, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, 
                      T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T2.CustTypeDesc lovDescCustTypeCodeName, 
                      T3.MaritalStsDesc lovDescCustMaritalStsName, T4.EmpStsDesc lovDescCustEmpStsName, T5.CcyDesc lovDescCustBaseCcyName, 
                      T6.CustStsDescription lovDescCustStsName, T7.IndustryDesc lovDescCustIndustryName, T8.SectorDesc lovDescCustSectorName, 
                      T9.SubSectorDesc lovDescCustSubSectorName, T10.ProfessionDesc lovDescCustProfessionName, T11.CountryDesc lovDescCustCOBName, 
                      T20.SegmentDesc lovDescCustSegmentName, T12.NationalityDesc lovDescCustNationalityName, T13.GenderDesc lovDescCustGenderCodeName, 
                      T14.DeptDesc lovDescCustDSADeptName, T15.ROfficerDesc lovDescCustRO1Name, T16.GrpStsDescription lovDescCustGroupStsName, 
                      T17.BranchDesc lovDescCustDftBranchName, T18.CustCtgDesc lovDescCustCtgCodeName, T2.CustTypeCtg lovDescCustCtgType, 
                      T19.SaluationDesc lovDescCustSalutationCodeName, T21.CountryDesc lovDescCustParentCountryName, T22.CountryDesc lovDescCustResdCountryName, 
                      T23.CountryDesc lovDescCustRiskCountryName, T24.ROfficerDesc lovDescCustRO2Name, T25.BLRsnDesc lovDescCustBLRsnCodeName, 
                      T26.RejectDesc lovDescCustRejectedRsnName, T27.CustGrpDesc lovDesccustGroupIDName, T28.SubSegmentDesc lovDescCustSubSegmentName, 
                      T29.LngDesc lovDescCustLngName, T30.DispatchModeDesc lovDescDispatchModeDescName, T5.CcyEditField lovDescCcyFormatter, T1.DedupFound, 
                      T1.SkipDedup, T1.CustTotalExpense, T1.CustBlackListDate, T1.NoOfDependents, T1.CustCRCPR, T1.JointCust, T1.JointCustName, T1.JointCustDob, 
                      T27.CustGrpCode lovDescCustGroupCode, T1.CustRelation, T1.ContactPersonName, T1.PhoneNumber, T1.EmailID, T1.SalariedCustomer, 
                      T31.TargetDesc lovDescTargetName,
                      T1.custSuspSts, T1.custSuspDate, T1.custSuspTrigger
FROM          Customers T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode LEFT OUTER JOIN
                       BMTMaritalStatusCodes T3 ON T1.CustMaritalSts = T3.MaritalStsCode LEFT OUTER JOIN
                       BMTEmpStsCodes T4 ON T1.CustEmpSts = T4.EmpStsCode LEFT OUTER JOIN
                       RMTCurrencies T5 ON T1.CustBaseCcy = T5.CcyCode LEFT OUTER JOIN
                       BMTCustStatusCodes T6 ON T1.CustSts = T6.CustStsCode LEFT OUTER JOIN
                       BMTIndustries T7 ON T1.CustIndustry = T7.IndustryCode LEFT OUTER JOIN
                       BMTSectors T8 ON T1.CustSector = T8.SectorCode LEFT OUTER JOIN
                       BMTSubSectors T9 ON T1.CustSector = T9.SectorCode AND T1.CustSubSector = T9.SubSectorCode LEFT OUTER JOIN
                       BMTProfessions T10 ON T1.CustProfession = T10.ProfessionCode LEFT OUTER JOIN
                       BMTCountries T11 ON T1.CustCOB = T11.CountryCode LEFT OUTER JOIN
                       BMTNationalityCodes T12 ON T1.CustNationality = T12.NationalityCode LEFT OUTER JOIN
                       BMTGenders T13 ON T1.CustGenderCode = T13.GenderCode LEFT OUTER JOIN
                       BMTDepartments T14 ON T1.CustDSADept = T14.DeptCode LEFT OUTER JOIN
                       RelationshipOfficers T15 ON T1.CustRO1 = T15.ROfficerCode LEFT OUTER JOIN
                       BMTGrpStatusCodes T16 ON T1.CustGroupSts = T16.GrpStsCode LEFT OUTER JOIN
                       RMTBranches T17 ON T1.CustDftBranch = T17.BranchCode LEFT OUTER JOIN
                       BMTCustCategories T18 ON T1.CustCtgCode = T18.CustCtgCode LEFT OUTER JOIN
                       BMTSalutations T19 ON T1.CustSalutationCode = T19.SalutationCode LEFT OUTER JOIN
                       BMTSegments T20 ON T1.CustSegment = T20.SegmentCode LEFT OUTER JOIN
                       BMTCountries T21 ON T1.CustParentCountry = T21.CountryCode LEFT OUTER JOIN
                       BMTCountries T22 ON T1.CustResdCountry = T22.CountryCode LEFT OUTER JOIN
                       BMTCountries T23 ON T1.CustRiskCountry = T23.CountryCode LEFT OUTER JOIN
                       RelationshipOfficers T24 ON T1.CustRO2 = T24.ROfficerCode LEFT OUTER JOIN
                       BMTBlackListRsnCodes T25 ON T1.CustBLRsnCode = T25.BLRsnCode LEFT OUTER JOIN
                       BMTRejectCodes T26 ON T1.CustRejectedRsn = T26.RejectCode LEFT OUTER JOIN
                       CustomerGroups T27 ON T1.CustGroupID = T27.CustGrpID LEFT OUTER JOIN
                       BMTSubSegments T28 ON T1.CustSubSegment = T28.SubSegmentCode LEFT OUTER JOIN
                       BMTLanguage T29 ON T1.CustLng = T29.LngCode LEFT OUTER JOIN
                       BMTDispatchModes T30 ON T1.CustStmtDispatchMode = T30.DispatchModeCode LEFT OUTER JOIN
                       TargetDetails T31 ON T1.CustAddlVar82 = T31.TargetCode
WHERE     (NOT EXISTS
                          (SELECT     1 Expr1
                            FROM           Customers_Temp
                            WHERE      (CustID = T1.CustID)))
</createView>   </changeSet>
<changeSet id="351" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomersDedup_View">
SELECT     T1.CustId, T1.CustCIF,T1.CustFName,T1.CustLName,T1.CustCRCPR,T1.CustPassportNo,T1.CustShrtName, T1.CustDOB, T1.CustNationality,T1.PhoneNumber MobileNumber,T1.custCtgCode, T1.custDftBranch, T1.custTypeCode, T1.custSector, T1.custSubSector, 
                      T2.CustTypeCtg lovDescCustCtgType
FROM         Customers_Temp T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode   
UNION ALL
SELECT     T1.CustId, T1.CustCIF,T1.CustFName,T1.CustLName,T1.CustCRCPR,T1.CustPassportNo,T1.CustShrtName, T1.CustDOB, T1.CustNationality,T1.PhoneNumber MobileNumber,T1.custCtgCode, T1.custDftBranch, T1.custTypeCode, T1.custSector, T1.custSubSector, 
                      T2.CustTypeCtg lovDescCustCtgType
FROM         Customers T1 LEFT OUTER JOIN
                       RMTCustTypes T2 ON T1.CustTypeCode = T2.CustTypeCode 
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          Customers_Temp
                            WHERE      CustId = T1.CustId)
</createView>   </changeSet>
<changeSet id="352" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomersPRelations_AView">
SELECT     T1.PRCustID, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, T1.Version, 
                      T1.PRMail, T1.PRPhone, T1.PRAddrZIP, T1.PRAddrCountry, T1.PRAddrProvince, T1.PRAddrCity, T1.PRAddrPOBox, T1.PRAddrLine2, T1.PRAddrLine1, T1.PRAddrStreet, 
                      T1.PRAddrFNbr, T1.PRAddrHNbr, T1.PRDOB, T1.PRLNameLclLng, T1.PRMNameLclLng, T1.PRFNameLclLng, T1.PRSName, T1.PRLName, T1.PRMName, T1.PRFName, 
                      T1.PRisGuardian, T1.PRRelationCustID, T1.PRRelationCode, T1.PRCustPRSNo, T2.PRelationDesc lovDescPRRelationCodeName, 
                      T3.PCCityName lovDescPRAddrCityName, T4.CPProvinceName lovDescPRAddrProvinceName, T5.CountryDesc lovDescPRAddrCountryName, 
                      T6.CustShrtName lovDescCustomerName
FROM          CustomersPRelations T1 INNER JOIN
                       BMTPRelationCodes T2 ON T1.PRRelationCode = T2.PRelationCode LEFT JOIN
                       RMTProvinceVsCity T3 ON T1.PRAddrCountry = T3.PCCountry AND T1.PRAddrProvince = T3.PCProvince AND T1.PRAddrCity = T3.PCCity INNER JOIN
                       RMTCountryVsProvince T4 ON T1.PRAddrCountry = T4.CPCountry AND T1.PRAddrProvince = T4.CPProvince INNER JOIN
                       BMTCountries T5 ON T1.PRAddrCountry = T5.CountryCode LEFT OUTER JOIN
                       Customers T6 ON T1.PRCustID = T6.CustID
</createView>   </changeSet>
<changeSet id="353" author="Pruthvi">
		<createView replaceIfExists="true" viewName="CustomersPRelations_View">
SELECT     T1.PRCustID, T6.CustCIF lovDescCustCIF, T6.CustShrtName lovDescCustShrtName, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, 
                      T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, T1.Version, T1.PRMail, T1.PRPhone, T1.PRAddrZIP, T1.PRAddrCountry, 
                      T1.PRAddrProvince, T1.PRAddrCity, T1.PRAddrPOBox, T1.PRAddrLine2, T1.PRAddrLine1, T1.PRAddrStreet, T1.PRAddrFNbr, T1.PRAddrHNbr, T1.PRDOB, 
                      T1.PRLNameLclLng, T1.PRMNameLclLng, T1.PRFNameLclLng, T1.PRSName, T1.PRLName, T1.PRMName, T1.PRFName, T1.PRisGuardian, T1.PRRelationCustID, 
                      T1.PRRelationCode, T1.PRCustPRSNo, T2.PRelationDesc lovDescPRRelationCodeName, T3.PCCityName lovDescPRAddrCityName, 
                      T4.CPProvinceName lovDescPRAddrProvinceName, T5.CountryDesc lovDescPRAddrCountryName, T6.RecordType lovDescCustRecordType
FROM         CustomersPRelations_Temp T1 LEFT OUTER JOIN
                      BMTPRelationCodes T2 ON T1.PRRelationCode = T2.PRelationCode LEFT OUTER JOIN
                      RMTProvinceVsCity T3 ON T1.PRAddrCountry = T3.PCCountry AND T1.PRAddrProvince = T3.PCProvince AND T1.PRAddrCity = T3.PCCity LEFT OUTER JOIN
                      RMTCountryVsProvince T4 ON T1.PRAddrCountry = T4.CPCountry AND T1.PRAddrProvince = T4.CPProvince LEFT OUTER JOIN
                      BMTCountries T5 ON T1.PRAddrCountry = T5.CountryCode LEFT OUTER JOIN
                      Customers_View T6 ON T1.PRCustID = T6.CustID
UNION ALL
SELECT     T1.PRCustID, T6.CustCIF lovDescCustCIF, T6.CustShrtName lovDescCustShrtName, T1.WorkflowId, T1.RecordType, T1.NextTaskId, T1.TaskId, 
                      T1.NextRoleCode, T1.RoleCode, T1.RecordStatus, T1.LastMntOn, T1.LastMntBy, T1.Version, T1.PRMail, T1.PRPhone, T1.PRAddrZIP, T1.PRAddrCountry, 
                      T1.PRAddrProvince, T1.PRAddrCity, T1.PRAddrPOBox, T1.PRAddrLine2, T1.PRAddrLine1, T1.PRAddrStreet, T1.PRAddrFNbr, T1.PRAddrHNbr, T1.PRDOB, 
                      T1.PRLNameLclLng, T1.PRMNameLclLng, T1.PRFNameLclLng, T1.PRSName, T1.PRLName, T1.PRMName, T1.PRFName, T1.PRisGuardian, T1.PRRelationCustID, 
                      T1.PRRelationCode, T1.PRCustPRSNo, T2.PRelationDesc lovDescPRRelationCodeName, T3.PCCityName lovDescPRAddrCityName, 
                      T4.CPProvinceName lovDescPRAddrProvinceName, T5.CountryDesc lovDescPRAddrCountryName, T6.RecordType lovDescCustRecordType
FROM         CustomersPRelations T1 INNER JOIN
                      BMTPRelationCodes T2 ON T1.PRRelationCode = T2.PRelationCode LEFT JOIN
                      RMTProvinceVsCity T3 ON T1.PRAddrCountry = T3.PCCountry AND T1.PRAddrProvince = T3.PCProvince AND T1.PRAddrCity = T3.PCCity INNER JOIN
                      RMTCountryVsProvince T4 ON T1.PRAddrCountry = T4.CPCountry AND T1.PRAddrProvince = T4.CPProvince INNER JOIN
                      BMTCountries T5 ON T1.PRAddrCountry = T5.CountryCode LEFT OUTER JOIN
                      Customers_View T6 ON T1.PRCustID = T6.CustID
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          CustomersPRelations_Temp
                            WHERE      PRCustID = T1.PRCustID AND PRCustPRSNo = T1.PRCustPRSNo)
</createView>   </changeSet>

<changeSet id="354" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DashboardConfiguration_AView">
SELECT     DashboardCode, DashboardType, DashboardDesc, dimension, caption, subCaption, Query, DrillDownChart, SeriesType, SeriesValues, FieldQuery, 
                      Version, LastMntBy, RecordStatus, LastMntOn, NextRoleCode, RoleCode, TaskId, NextTaskId, RecordType, WorkflowId, AdtDataSource, remarks, 
                      MultiSeries, DataXML, ColorRangeXML
FROM         DashboardConfiguration
</createView>   </changeSet>

<changeSet id="355" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DashboardConfiguration_View">
SELECT     T1.DashboardCode, T1.DashboardType, T1.DashboardDesc, T1.Dimension, T1.Caption, T1.SubCaption, T1.Query, T1.DrillDownChart, T1.SeriesType, T1.ColorRangeXML,
                      T1.SeriesValues, T1.FieldQuery, T1.Version, T1.LastMntBy, T1.RecordStatus, T1.LastMntOn, T1.NextRoleCode, T1.RoleCode, T1.TaskId, T1.NextTaskId,
                       T1.RecordType, T1.WorkflowId, T1.AdtDataSource, T1.Remarks, T1.MultiSeries, T1.DataXML
FROM         DashboardConfiguration_TEMP T1
UNION ALL
SELECT     T1.DashboardCode, T1.DashboardType, T1.DashboardDesc, T1.Dimension, T1.Caption, T1.SubCaption, T1.Query, T1.DrillDownChart, T1.SeriesType, T1.ColorRangeXML,
                      T1.SeriesValues, T1.FieldQuery, T1.Version, T1.LastMntBy, T1.RecordStatus, T1.LastMntOn, T1.NextRoleCode, T1.RoleCode, T1.TaskId, T1.NextTaskId,
                       T1.RecordType, T1.WorkflowId, T1.AdtDataSource, T1.Remarks, T1.MultiSeries, T1.DataXML
FROM         DashboardConfiguration T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          DashboardConfiguration_TEMP
                            WHERE      DashboardCode = T1.DashboardCode)
</createView>   </changeSet>
<changeSet id="356" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DedupFields_View">
SELECT     FieldName, FieldControl, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, RecordType, WorkflowId, 0 RefType
FROM         DedupFields
</createView>   </changeSet>
<changeSet id="357" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DedupParams_AView">
SELECT     QueryId,QueryCode, QueryModule, SQLQuery, ActualBlock, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
                      RecordType, WorkflowId, QuerySubCode, QueryDesc
FROM         DedupParams T1
</createView>   </changeSet>
<changeSet id="358" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DeviationDetails_AView">
SELECT		T1.DeviationID, T1.UserRole, T1.DeviatedValue		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationDetails T1
</createView>   </changeSet>
<changeSet id="359" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DeviationDetails_View">
SELECT		T1.DeviationID, T1.UserRole, T1.DeviatedValue		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationDetails_Temp T1 
UNION ALL

SELECT		T1.DeviationID, T1.UserRole, T1.DeviatedValue		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationDetails T1 

WHERE     NOT EXISTS (SELECT 1 FROM DeviationDetails_TEMP WHERE DeviationID = T1.DeviationID)
</createView>   </changeSet>
<changeSet id="360" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DeviationHeader_AView">
SELECT		T1.DeviationID, T1.FinType, T1.Module, T1.ModuleCode, T1.ValueType		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationHeader T1
</createView>   </changeSet>
<changeSet id="361" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DeviationHeader_View">
SELECT		T1.DeviationID, T1.FinType, T1.Module, T1.ModuleCode, T1.ValueType		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationHeader_Temp T1 
UNION ALL

SELECT		T1.DeviationID, T1.FinType, T1.Module, T1.ModuleCode, T1.ValueType		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationHeader T1 

WHERE     NOT EXISTS (SELECT 1 FROM DeviationHeader_TEMP WHERE DeviationID = T1.DeviationID)
</createView>   </changeSet>
<changeSet id="362" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DeviationParams_AView">
SELECT		T1.Code, T1.Description, T1.Type, T1.Formula, T1.DataType		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationParams T1
</createView>   </changeSet>

<changeSet id="363" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DeviationParams_View">
SELECT		T1.Code, T1.Description, T1.Type, T1.Formula, T1.DataType		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationParams_Temp T1 
UNION ALL

SELECT		T1.Code, T1.Description, T1.Type, T1.Formula, T1.DataType		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	DeviationParams 	T1 

WHERE     NOT EXISTS (SELECT 1 FROM DeviationParams_TEMP WHERE Code = T1.Code)
</createView>   </changeSet>

<changeSet id="364" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DocumentDetails_TView">
SELECT     T1.DocId, T1.DocModule, T1.DocCategory, T1.Doctype, T1.DocName, T1.DocImage, T1.FinEvent,
		   T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
		   T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.ReferenceId, T1.DocRefId,
		   T1.DocPurpose, T1.DocUri
FROM   DocumentDetails_temp T1
</createView>   </changeSet>
<changeSet id="365" author="Pruthvi">
		<createView replaceIfExists="true" viewName="DocumentDetails_View">
SELECT     T1.DocId, T1.DocModule, T1.DocCategory, T1.Doctype, T1.DocName, T1.DocImage, T1.FinEvent,
		   T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
		   T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.ReferenceId, T1.DocRefId,
		   T1.DocPurpose, T1.DocUri
FROM   DocumentDetails_temp T1
UNION ALL
SELECT     T1.DocId, T1.DocModule, T1.DocCategory, T1.Doctype, T1.DocName, T1.DocImage, T1.FinEvent,
		   T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
		   T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.ReferenceId, T1.DocRefId,
		   T1.DocPurpose, T1.DocUri
FROM   DocumentDetails T1
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          DocumentDetails_temp
                            WHERE      DocId = T1.DocId)
</createView>   </changeSet>
<changeSet id="366" author="Pruthvi">
		<createView replaceIfExists="true" viewName="EMailRules_TView">
SELECT		 T1.RuleCode, T1.RuleModule, T1.RuleCodeDesc, T1.SQLRule, T1.ActualBlock		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	EMailRules_Temp T1 INNER JOIN
            SecUsers T2 ON T1.LastMntBy = T2.UsrID
</createView>   </changeSet>

<changeSet id="367" author="Pruthvi">
		<createView replaceIfExists="true" viewName="EMailRules_TView">
SELECT    RuleCode, RuleModule, RuleCodeDesc, 
                      SQLRule, ActualBlock, Version, LastMntBy, 
                      LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
                      RecordType, WorkflowId, 
                      ReturnType
FROM         EMailRules_Temp 

UNION ALL
SELECT     RuleCode, RuleModule, RuleCodeDesc, 
                      SQLRule, ActualBlock, Version, LastMntBy, 
                      LastMntOn, RecordStatus, RoleCode, NextRoleCode, TaskId, NextTaskId, 
                      RecordType, WorkflowId, 
                      ReturnType
FROM         EMailRules 
WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          EMailRules_Temp
                            WHERE      RuleCode = EMailRules.RuleCode)
</createView>   </changeSet>
<changeSet id="368" author="Pruthvi">
		<createView replaceIfExists="true" viewName="EQNAbuserList_View">
SELECT     AbuserIDNumber, MAX(AbuserExpDate) AbuserExpDate
FROM         EQNAbuserList
GROUP BY AbuserIDNumber
</createView>   </changeSet>

<changeSet id="369" author="Pruthvi">
		<createView replaceIfExists="true" viewName="ErrorDetails_AView">
SELECT		T1.ErrorCode, T1.ErrorLanguage, T1.ErrorSeverity, T1.ErrorMessage, T1.ErrorExtendedMessage		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ErrorDetails T1 INNER JOIN
            SecUsers T2 ON T1.LastMntBy = T2.UsrID
</createView>   </changeSet>
<changeSet id="370" author="Pruthvi">
		<createView replaceIfExists="true" viewName="ErrorDetails_TView">
SELECT		T1.ErrorCode, T1.ErrorLanguage, T1.ErrorSeverity, T1.ErrorMessage, T1.ErrorExtendedMessage		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ErrorDetails_Temp T1 INNER JOIN
            SecUsers T2 ON T1.LastMntBy = T2.UsrID
</createView>   </changeSet>
<changeSet id="371" author="Pruthvi">
		<createView replaceIfExists="true" viewName="ErrorDetails_View">
SELECT		T1.ErrorCode, T1.ErrorLanguage, T1.ErrorSeverity, T1.ErrorMessage, T1.ErrorExtendedMessage		
			, T1.Version ,T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ErrorDetails_Temp T1 INNER JOIN
             SecUsers T2 ON T1.LastMntBy = T2.UsrID
UNION ALL

SELECT		T1.ErrorCode, T1.ErrorLanguage, T1.ErrorSeverity, T1.ErrorMessage, T1.ErrorExtendedMessage		
			, T1.Version , T1.LastMntBy, T1.LastMntOn,T2.UsrLogin,T2.UsrFName, T2.UsrMName, T2.UsrLName, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ErrorDetails T1 INNER JOIN
             SecUsers T2 ON T1.LastMntBy = T2.UsrID

WHERE     NOT EXISTS (SELECT 1 FROM ErrorDetails_TEMP WHERE ErrorCode = T1.ErrorCode)
</createView>   </changeSet>
<changeSet id="372" author="Pruthvi">
		<createView replaceIfExists="true" viewName="EtihadCreditBureauDetail_AView">
SELECT   T1.FinReference, T1.BureauScore, T1.TotOutstandingAmt, T1.TotOverdueAmt, T1.DefaultContracts,
         T1.TotMonthlyInst, T1.WorstCurrPayDelay, T1.WorstPayDelay, T1.WorstStatus, T1.OldConStartDate,
         T1.NewConStartDate, T1.OtherBankFinType, T1.NoOfInquiry, T1.NoOfContractsInst, T1.NoOfContractsNonInst, 
         T1.NoOfContractsCredit,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId		 
         FROM  EtihadCreditBureauDetail T1 
         INNER JOIN   FinanceMain T2 ON T2.FinReference = T1.FinReference
</createView>   </changeSet>
<changeSet id="373" author="Pruthvi">
		<createView replaceIfExists="true" viewName="EtihadCreditBureauDetail_TView">
SELECT   T1.FinReference, T1.BureauScore, T1.TotOutstandingAmt, T1.TotOverdueAmt, T1.DefaultContracts,
         T1.TotMonthlyInst, T1.WorstCurrPayDelay, T1.WorstPayDelay, T1.WorstStatus, T1.OldConStartDate,
         T1.NewConStartDate, T1.OtherBankFinType, T1.NoOfInquiry, T1.NoOfContractsInst, T1.NoOfContractsNonInst, 
         T1.NoOfContractsCredit,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId	     
		 FROM  EtihadCreditBureauDetail_Temp T1 
		 INNER JOIN  FinanceMain_Temp T2 ON T2.FinReference = T1.FinReference
</createView>   </changeSet>
<changeSet id="374" author="Pruthvi">
		<createView replaceIfExists="true" viewName="EtihadCreditBureauDetail_View">
SELECT   T1.FinReference, T1.BureauScore, T1.TotOutstandingAmt, T1.TotOverdueAmt, T1.DefaultContracts,
         T1.TotMonthlyInst, T1.WorstCurrPayDelay, T1.WorstPayDelay, T1.WorstStatus, T1.OldConStartDate,
         T1.NewConStartDate, T1.OtherBankFinType, T1.NoOfInquiry, T1.NoOfContractsInst, T1.NoOfContractsNonInst, 
         T1.NoOfContractsCredit,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId	     
		 FROM  EtihadCreditBureauDetail_Temp T1 
		 INNER JOIN  FinanceMain_Temp T2 ON T2.FinReference = T1.FinReference 
		
UNION ALL
SELECT   T1.FinReference, T1.BureauScore, T1.TotOutstandingAmt, T1.TotOverdueAmt, T1.DefaultContracts,
         T1.TotMonthlyInst, T1.WorstCurrPayDelay, T1.WorstPayDelay, T1.WorstStatus, T1.OldConStartDate,
         T1.NewConStartDate, T1.OtherBankFinType, T1.NoOfInquiry, T1.NoOfContractsInst, T1.NoOfContractsNonInst, 
         T1.NoOfContractsCredit,
         T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode,
         T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId	
		 FROM  EtihadCreditBureauDetail T1  
		 INNER JOIN  FinanceMain T2 ON T2.FinReference = T1.FinReference 
		
WHERE NOT EXISTS 
                 (SELECT   1 
				  FROM        EtihadCreditBureauDetail_Temp 
				  WHERE       FinReference = T1.FinReference)
</createView>   </changeSet>
<changeSet id="375" author="Pruthvi">
		<createView replaceIfExists="true" viewName="ExtendedFieldDetail_AView">
SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, T1.FieldType, 
                      T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, 
                      T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, 
                      T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId, T1.MultiLine
FROM         		  ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId
</createView>   </changeSet>
<changeSet id="376" author="Pruthvi">
		<createView replaceIfExists="true" viewName="ExtendedFieldDetail_View">
SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                      T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId ,T1.MultiLine
		FROM         ExtendedFieldDetail_TEMP  T1 INNER JOIN
                      ExtendedFieldHeader_TEMP  T2 ON T1.ModuleId = T2.ModuleId
	UNION ALL
	SELECT     T1.ModuleId, T1.FieldName, T2.ModuleName  lovDescModuleName, T2.SubModuleName  lovDescSubModuleName, 
                     T1.FieldType, T1.FieldLength, T1.FieldPrec, T1.FieldLabel, T1.FieldMandatory, T1.FieldConstraint, 
                      T1.FieldSeqOrder, T1.FieldList, T1.FieldDefaultValue, T1.FieldMinValue, T1.FieldMaxValue, T1.FieldUnique, T1.Version, T1.LastMntBy, T1.LastMntOn, 
                      T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId , T1.MultiLine
		FROM         ExtendedFieldDetail  T1 INNER JOIN
                      ExtendedFieldHeader  T2 ON T1.ModuleId = T2.ModuleId
			WHERE     NOT EXISTS
                          (SELECT     1
                            FROM          ExtendedFieldDetail_TEMP
                            WHERE      ModuleId = T1.ModuleId AND FieldName = T1.FieldName)
</createView>   </changeSet>
<changeSet id="377" author="Pruthvi">
		<createView replaceIfExists="true" viewName="ExtendedFieldHeader_AView">
SELECT     ModuleId, ModuleName, SubModuleName, TabHeading, NumberOfColumns, Version, LastMntBy, LastMntOn, RecordStatus, RoleCode, NextRoleCode, 
                      TaskId, NextTaskId, RecordType, WorkflowId
FROM         ExtendedFieldHeader
</createView>   </changeSet>
<changeSet id="378" author="Pruthvi">
		<createView replaceIfExists="true" viewName="ExtendedFieldHeader_View">
SELECT		T1.ModuleId, T1.ModuleName, T1.SubModuleName, T1.TabHeading, T1.NumberOfColumns		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ExtendedFieldHeader_TEMP T1
UNION ALL
SELECT		T1.ModuleId, T1.ModuleName, T1.SubModuleName, T1.TabHeading, T1.NumberOfColumns		
			, T1.Version , T1.LastMntBy, T1.LastMntOn, T1.RecordStatus, T1.RoleCode, T1.NextRoleCode, T1.TaskId, T1.NextTaskId, T1.RecordType, T1.WorkflowId
FROM    	ExtendedFieldHeader T1
WHERE     NOT EXISTS (SELECT 1 FROM ExtendedFieldHeader_TEMP WHERE ModuleId = T1.ModuleId)
</createView>   </changeSet>
 <!--  <changeSet author="SreeRavali" id="379">
		<comment>SecGroupRights</comment>
		<sql>
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
			
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_applyODPenalty'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDIncGrcDays'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDChargeType'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDGraceDays'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDChargeCalOn'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDAllowWaiver'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDMaxWaiverPerc'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_oDChargeAmtOrPerc'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_disbAcctId'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnFlagDetails'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='FinanceMainDialog_finRepayMethod'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='OD_ODMAINTENANCE_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='button_FinanceMainDialog_btnValidate'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
			UPDATE SEQSECGROUPRIGHTS SET SEQNO = (SELECT MAX(GRPRIGHTID) FROM SECGROUPRIGHTS); 
		</sql>
	</changeSet>    -->
	<changeSet id="381" author="satish">
		<sql> insert into LimitCodeDetail values (2,'QDISBMT','Quick Disbursment',1)
		</sql>
	</changeSet>
	<changeSet author="Surekha" id="382">
	<sql>
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);

		INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='COURSETYPE_MAKER'),(select RightID from SecRights where RightName='button_CourseTypeDialog_btnEdit'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	</sql>
</changeSet>
<changeSet author="Surekha" id="383">
	<sql>
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);

		INSERT INTO SecGroupRights SELECT (select (SeqNo+1) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='EXPENSETYPE_MAKER'),(select RightID from SecRights where RightName='button_ExpenseTypeDialog_btnEdit'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+2) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='VEHICLEDEALER_MAKER'),(select RightID from SecRights where RightName='button_VehicleDealerDialog_btnEdit'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+3) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='VEHICLEMANUFACTURER_MAKER'),(select RightID from SecRights where RightName='button_VehicleManufacturerDialog_btnEdit'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+4) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='VEHICLEMODEL_MAKER'),(select RightID from SecRights where RightName='button_VehicleModelDialog_btnEdit'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
		INSERT INTO SecGroupRights SELECT (select (SeqNo+5) from SeqSecGroupRights),(select GrpID from SecGroups where GrpCode='VEHICLEVERSION_MAKER'),(select RightID from SecRights where RightName='button_VehicleVersionDialog_btnEdit'),1,0,10000,CURRENT_TIMESTAMP,'Approved','','','',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
	</sql>
</changeSet>
<changeSet author="Surekha" id="384">
	<sql>
update ReportsMonthEndConfiguration set Active='1' where GroupCode='GroupReports' and ReportName in('ABG_AssetsGeographicalConcentration','ABG_CreditRiskExposure','ABG_LargestBankExposure','ABG_LargestNonBankExposure');
</sql>
</changeSet>
<changeSet id="386" author="Satish">

		<insert tableName="ErrorDetails">
			<column name="ErrorCode">DSB003</column>
			<column name="ErrorLanguage">EN</column>
			<column name="ErrorSeverity">E</column>
			<column name="ErrorMessage"><![CDATA[At least one disbursement instructions should be provided.]]></column>
			<column name="ErrorExtendedMessage"></column>
			<column name="RecordStatus">Approved</column>
			<column name="RoleCode"></column>
			<column name="NextRoleCode"></column>
			<column name="TaskId"></column>
			<column name="NextTaskId"></column>
			<column name="RecordType"></column>
			<column name="WorkflowId">0</column>
			<column name="LastMntOn"></column>
			<column name="LastMntBy">1000</column>
			<column name="Version">0</column>
		</insert>	
</changeSet>
<changeSet author="DurgaPrasad D" id="387">
	<sql>
	
	Delete from ErrorDetails where ErrorCode in('91126','91104','91127','91128','91129','91130','90203','90230');
	
	INSERT INTO ErrorDetails VALUES('91126','EN','E','Fromdate {0} should be application date {1}.','','Approved','','','','','',0,NULL,1000,0);
	INSERT INTO ErrorDetails VALUES('91104','EN','E','Invalid recalType code {0}.','','Approved','','','','','',0,NULL,1000,0);
	INSERT INTO ErrorDetails VALUES('91127','EN','E','Partial Settlement Amount should be less than outstanding amount {0}.','','Approved','','','','','',0,NULL,1000,0);
	INSERT INTO ErrorDetails VALUES('91128','EN','E','Stepping is mandatory for this loan type {0}.','','Approved','','','','','',0,NULL,1000,0);
	INSERT INTO ErrorDetails VALUES('91129','EN','E','Step finance is not allowed for this loan type {0}.','','Approved','','','','','',0,NULL,1000,0);
	INSERT INTO ErrorDetails VALUES('91130','EN','E','Sum of downpayment to bank and supplier cannot be less than ZERO.','','Approved','','','','','',0,NULL,1000,0);
	INSERT INTO ErrorDetails VALUES('90203','EN','E','{0} or {1} amounts are not allowed for this financeType {2}.','','Approved','','','','','',0,NULL,1000,0);
	INSERT INTO ErrorDetails VALUES('90230','EN','E','Special Rate Code {0} is not found - {1}.','','Approved','','','','','',0,NULL,1000,0);
	
	update ErrorDetails set ErrorMessage = 'When Stepping not required, Data related to Steps should not be passed.' where ErrorCode = '90163';

	</sql>
</changeSet>
 <!-- 	<changeSet id="388" author="satish">
	<sql>
	update seqSecRights set seqno=(select MAX(RIGHTID) from SecRights);
update seqSecGroupRights set seqno=(select MAX(GrpRIGHTID) from SecGroupRights);

INSERT INTO SecRights SELECT (select MAX(RIGHTID)+1 from SecRights),3,'FinAdvancePaymentsDialog_bankBranchID','FinAdvancePaymentsDialog',0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select MAX(RIGHTID)+1 from SecRights),3,'FinAdvancePaymentsDialog_contactNumber','FinAdvancePaymentsDialog',0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select MAX(RIGHTID)+1 from SecRights),3,'FinAdvancePaymentsDialog_bankCode','FinAdvancePaymentsDialog',0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select MAX(RIGHTID)+1 from SecRights),3,'FinAdvancePaymentsDialog_payableLoc','FinAdvancePaymentsDialog',0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select MAX(RIGHTID)+1 from SecRights),3,'FinAdvancePaymentsDialog_printingLoc','FinAdvancePaymentsDialog',0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;
INSERT INTO SecRights SELECT (select MAX(RIGHTID)+1 from SecRights),3,'FinAdvancePaymentsDialog_valueDate','FinAdvancePaymentsDialog',0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecRights WHERE 0=0;

INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='FinAdvancePayments_Maker'), (select RightID from SecRights where RightName='FinAdvancePaymentsDialog_bankBranchID'),1, 0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='FinAdvancePayments_Maker'), (select RightID from SecRights where RightName='FinAdvancePaymentsDialog_contactNumber'),1, 0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='FinAdvancePayments_Maker'), (select RightID from SecRights where RightName='FinAdvancePaymentsDialog_bankCode'),1, 0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='FinAdvancePayments_Maker'), (select RightID from SecRights where RightName='FinAdvancePaymentsDialog_payableLoc'),1, 0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='FinAdvancePayments_Maker'), (select RightID from SecRights where RightName='FinAdvancePaymentsDialog_printingLoc'),1, 0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;
INSERT INTO SecGroupRights SELECT (select MAX(GrpRIGHTID)+1 from SecGroupRights),(select grpid from secgroups where GrpCode='FinAdvancePayments_Maker'), (select RightID from SecRights where RightName='FinAdvancePaymentsDialog_valueDate'),1, 0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SeqSecGroupRights WHERE 0=0;

update seqSecRights set seqno=(select MAX(RIGHTID) from SecRights);
update seqSecGroupRights set seqno=(select MAX(GrpRIGHTID) from SecGroupRights);
	
	</sql>
	
	</changeSet>  -->
	<changeSet id="390" author="Irfan">
		<sql>
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		INSERT INTO SECRIGHTS SELECT (SELECT MAX(RIGHTID)+1 FROM SECRIGHTS), 3, 'ExtendedFieldDetailDialog_fieldMultilinetxt','ExtendedFieldDetailDialog',0,1000,null,' ',' ',' ',' ',' ',' ',0 FROM SEQSECRIGHTS WHERE 0=0;
		UPDATE SEQSECRIGHTS SET SEQNO= (SELECT MAX(RIGHTID) FROM SECRIGHTS);
		</sql>
	</changeSet>
	<changeSet id="391" author="Irfan">
		<sql>
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
		INSERT INTO SECGROUPRIGHTS VALUES((SELECT MAX(GRPRIGHTID)+1 FROM SECGROUPRIGHTS), (SELECT GRPID  FROM SECGROUPS WHERE GRPCODE='EXTENDEDFIELDDETAIL_MAKER') ,(SELECT RIGHTID FROM SECRIGHTS WHERE RIGHTNAME='ExtendedFieldDetailDialog_fieldMultilinetxt'), 1, 0,1000,null,' ',' ',' ',' ',' ',' ',0);
		Update SeqSecGroupRights set SeqNo = (select MAX(GrpRightID) from SecGroupRights);
		</sql>
	</changeSet>
	 <changeSet id="392" author="Madhubabu">
	<dropNotNullConstraint tableName="TakafulProvider_temp"
		columnName="AccountNumber" columnDataType="nvarchar(50)" />
	</changeSet>
	 
</databaseChangeLog>